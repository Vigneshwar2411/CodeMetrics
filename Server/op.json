{"projectName":"Sample_NM","projectVersion":"1.1.1","totalNoOfLines":193180,"totalNoOfChars":6298841,"totalNoOfFiles":851,"fileTakenOn":"2016-08-24 10:45:38.3746084 +0530 IST","files":[{"FileName":"api\\routing.js","LineCount":56,"CharCount":1463,"Comments":["// app.post(\"/api/v1/fileupload\",function(req,res){","//     console.log(\"Inside file upload api call\");","//     console.log(req.body);","//     res.json({success:\"Successfully Uploaded\"});","// });","","app.post(\"/v1/fileupload\",function(req,res) {"],"Functions":["// app.post(\"/api/v1/fileupload\",function(req,res)","app.post(\"/v1/fileupload\",function(req,res) ","    fileData.save(function (err,data) ","app.get(\"/getproject/:proName/:version\",function (req,res) ","  files.find(projectName:proName,projectVersion:version},function (err,data) {","app.get(\"/getallprojects\",function (req,res) ","    function (err,data) "],"Dependencies":["express","../modals/fileModal.js"]},{"FileName":"modals\\fileModal.js","LineCount":18,"CharCount":420,"Comments":[],"Functions":null,"Dependencies":["mongoose"]},{"FileName":"node_modules\\accepts\\index.js","LineCount":232,"CharCount":4963,"Comments":["/*!"," * accepts"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var Negotiator = require('negotiator')","/**"," * Module exports."," * @public"," */","","module.exports = Accepts","/**"," * Create a new Accepts object for the given req."," *"," * @param {object} req"," * @public"," */","","function Accepts(req) {","/**"," * Check if the given `type(s)` is acceptable, returning"," * the best match when true, otherwise `undefined`, in which"," * case you should respond with 406 \"Not Acceptable\"."," *"," * The `type` value may be a single mime type string"," * such as \"application/json\", the extension name"," * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list"," * or array is given the _best_ match, if any is returned."," *"," * Examples:"," *"," *     // Accept: text/html"," *     this.types('html');"," *     // =\u003e \"html\""," *"," *     // Accept: text/*, application/json"," *     this.types('html');"," *     // =\u003e \"html\""," *     this.types('text/html');"," *     // =\u003e \"text/html\""," *     this.types('json', 'text');"," *     // =\u003e \"json\""," *     this.types('application/json');"," *     // =\u003e \"application/json\""," *"," *     // Accept: text/*, application/json"," *     this.types('image/png');"," *     this.types('png');"," *     // =\u003e undefined"," *"," *     // Accept: text/*;q=.5, application/json"," *     this.types(['html', 'json']);"," *     this.types('html', 'json');"," *     // =\u003e \"json\""," *"," * @param {String|Array} types..."," * @return {String|Array|Boolean}"," * @public"," */","","Accepts.prototype.type =","  // support flattened arguments","  if (types \u0026\u0026 !Array.isArray(types)) {","  // no types, return all requested types","  if (!types || types.length === 0) {","/**"," * Return accepted encodings or best fit based on `encodings`."," *"," * Given `Accept-Encoding: gzip, deflate`"," * an array sorted by quality is returned:"," *"," *     ['gzip', 'deflate']"," *"," * @param {String|Array} encodings..."," * @return {String|Array}"," * @public"," */","","Accepts.prototype.encoding =","  // support flattened arguments","  if (encodings \u0026\u0026 !Array.isArray(encodings)) {","  // no encodings, return all requested encodings","  if (!encodings || encodings.length === 0) {","/**"," * Return accepted charsets or best fit based on `charsets`."," *"," * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`"," * an array sorted by quality is returned:"," *"," *     ['utf-8', 'utf-7', 'iso-8859-1']"," *"," * @param {String|Array} charsets..."," * @return {String|Array}"," * @public"," */","","Accepts.prototype.charset =","  // support flattened arguments","  if (charsets \u0026\u0026 !Array.isArray(charsets)) {","  // no charsets, return all requested charsets","  if (!charsets || charsets.length === 0) {","/**"," * Return accepted languages or best fit based on `langs`."," *"," * Given `Accept-Language: en;q=0.8, es, pt`"," * an array sorted by quality is returned:"," *"," *     ['es', 'pt', 'en']"," *"," * @param {String|Array} langs..."," * @return {Array|String}"," * @public"," */","","Accepts.prototype.lang =","  // support flattened arguments","  if (languages \u0026\u0026 !Array.isArray(languages)) {","  // no languages, return all requested languages","  if (!languages || languages.length === 0) {","/**"," * Convert extnames to mime."," *"," * @param {String} type"," * @return {String}"," * @private"," */","","function extToMime(type) {","/**"," * Check if mime is valid."," *"," * @param {String} type"," * @return {String}"," * @private"," */","","function validMime(type) {"],"Functions":["function Accepts(req) ","Accepts.prototype.types = function (types_) ","Accepts.prototype.encodings = function (encodings_) ","Accepts.prototype.charsets = function (charsets_) ","Accepts.prototype.languages = function (languages_) ","function extToMime(type) ","function validMime(type) "],"Dependencies":["negotiator","mime-types"]},{"FileName":"node_modules\\array-flatten\\array-flatten.js","LineCount":65,"CharCount":1131,"Comments":["/**"," * Expose `arrayFlatten`."," */","module.exports = arrayFlatten","/**"," * Recursive flatten function with depth."," *"," * @param  {Array}  array"," * @param  {Array}  result"," * @param  {Number} depth"," * @return {Array}"," */","function flattenWithDepth (array, result, depth) {","/**"," * Recursive flatten function. Omitting depth is slightly faster."," *"," * @param  {Array} array"," * @param  {Array} result"," * @return {Array}"," */","function flattenForever (array, result) {","/**"," * Flatten an array, with the ability to define a depth."," *"," * @param  {Array}  array"," * @param  {Number} depth"," * @return {Array}"," */","function arrayFlatten (array, depth) {"],"Functions":[" * Recursive flatten function with depth.","function flattenWithDepth (array, result, depth) "," * Recursive flatten function. Omitting depth is slightly faster.","function flattenForever (array, result) ","function arrayFlatten (array, depth) "],"Dependencies":null},{"FileName":"node_modules\\async\\dist\\async.js","LineCount":1266,"CharCount":37299,"Comments":["/*!"," * async"," * https://github.com/caolan/async"," *"," * Copyright 2010-2014 Caolan McMahon"," * Released under the MIT license"," */","(function () {","    // global on the server, window in the browser","    var previous_async;","    // Establish the root object, `window` (`self`) in the browser, `global`","    // on the server, or `this` in some virtual machines. We use `self`","    // instead of `window` for `WebWorker` support.","    var root = typeof self === 'object' \u0026\u0026 self.self === self \u0026\u0026 self ||","    //// cross-browser compatiblity functions ////","","    var _toString = Object.prototype.toString;","    // Ported from underscore.js isObject","    var _isObject = function(obj) {","            // has a positive integer length property","            typeof arr.length === \"number\" \u0026\u0026","    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)","    // This accumulates the arguments passed into an array, after a given index.","    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).","    function _restParam(func, startIndex) {","            // Currently unused but handle cases outside of the switch statement:","            // var args = Array(startIndex + 1);","            // for (index = 0; index \u003c startIndex; index++) {","            //     args[index] = arguments[index];","            // }","            // args[startIndex] = rest;","            // return func.apply(this, args);","        };","    //// exported async module functions ////","","    //// nextTick implementation with browser-compatible fallback ////","","    // capture the global reference to guard against fakeTimer mocks","    var _setImmediate = typeof setImmediate === 'function' \u0026\u0026 setImmediate;","        // not a direct alias for IE10 compatibility","        _setImmediate(fn);","            // Check key is null in case iterator isn't exhausted","            // and done resolved synchronously.","            else if (key === null \u0026\u0026 completed \u003c= 0) {","    // reduce only has a series version, as doing reduce in parallel won't","    // work in many situations.","    async.inject =","            // concurrency is optional, shift the args.","            callback = concurrency;","            // prevent dead-locks","            var len = requires.length;","        // If a callback is passed, run this as a controll flow","        return opts.callback ? wrappedTask() : wrappedTask;","                // call drain immediately if there are no tasks","                return async.setImmediate(function() {","                // Need to call q.process once per concurrent","                // worker to preserve full concurrency after pause","                for (var w = 1; w \u003c= resumeCount; w++) {","                // call drain immediately if there are no tasks","                return async.setImmediate(function() {","        // Start with a normal queue","        var q = async.queue(worker, concurrency);","        // Override push to accept second parameter representing priority","        q.push = function (data, priority, callback) {","        // Remove unshift function","        delete q.unshift;","    /*async.info = _console_fn('info');","    async.warn = _console_fn('warn');","    async.error = _console_fn('error');*/","","    async.memoize = function (fn, hasher) {","    async.seq = function (/* functions... */) {","        var fns = arguments;","    async.compose = function (/* functions... */) {","        return async.seq.apply(null, Array.prototype.reverse.call(arguments));","            // if result is Promise object","            if (_isObject(result) \u0026\u0026 typeof result.then === \"function\") {","    // Node.js","    if (typeof module === 'object' \u0026\u0026 module.exports) {","    // AMD / RequireJS","    else if (typeof define === 'function' \u0026\u0026 define.amd) {","    // included directly via \u003cscript\u003e tag","    else {"],"Functions":["(function () ","    function noop() }","    function identity(v) ","    function toBool(v) ","    function notId(v) ","    async.noConflict = function () ","    function only_once(fn) ","        return function() ","    function _once(fn) ","        return function() ","    //// cross-browser compatiblity functions ////","    var _isArray = Array.isArray || function (obj) ","    var _isObject = function(obj) ","        return type === 'function' || type === 'object' \u0026\u0026 !!obj;","    function _isArrayLike(arr) ","    function _arrayEach(arr, iterator) ","    function _map(arr, iterator) ","    function _range(count) ","        return _map(Array(count), function (v, i)  return i; });","    function _reduce(arr, iterator, memo) ","        _arrayEach(arr, function (x, i, a) ","    function _forEachOf(object, iterator) ","        _arrayEach(_keys(object), function (key) ","    function _indexOf(arr, item) ","    var _keys = Object.keys || function (obj) ","    function _keyIterator(coll) ","            return function next() ","            return function next() ","    function _restParam(func, startIndex) ","        return function() ","    function _withoutIndex(iterator) ","        return function (value, index, callback) ","    //// exported async module functions ////","    var _setImmediate = typeof setImmediate === 'function' \u0026\u0026 setImmediate;","    var _delay = _setImmediate ? function(fn) ","    } : function(fn) ","    if (typeof process === 'object' \u0026\u0026 typeof process.nextTick === 'function') ","    async.each = function (arr, iterator, callback) ","    async.eachSeries = function (arr, iterator, callback) ","    async.eachLimit = function (arr, limit, iterator, callback) ","    async.eachOf = function (object, iterator, callback) ","        function done(err) ","    async.eachOfSeries = function (obj, iterator, callback) ","        function iterate() ","            iterator(obj[key], key, only_once(function (err) ","    async.eachOfLimit = function (obj, limit, iterator, callback) ","    function _eachOfLimit(limit) ","        return function (obj, iterator, callback) ","            (function replenish () ","                    iterator(obj[key], key, only_once(function (err) ","    function doParallel(fn) ","        return function (obj, iterator, callback) ","    function doParallelLimit(fn) ","        return function (obj, limit, iterator, callback) ","    function doSeries(fn) ","        return function (obj, iterator, callback) ","    function _asyncMap(eachfn, arr, iterator, callback) ","        eachfn(arr, function (value, index, callback) ","            iterator(value, function (err, v) ","        }, function (err) ","    async.reduce = function (arr, memo, iterator, callback) ","        async.eachOfSeries(arr, function (x, i, callback) ","            iterator(memo, x, function (err, v) ","        }, function (err) ","    async.reduceRight = function (arr, memo, iterator, callback) ","    async.transform = function (arr, memo, iterator, callback) ","        async.eachOf(arr, function(v, k, cb) ","        }, function(err) ","    function _filter(eachfn, arr, iterator, callback) ","        eachfn(arr, function (x, index, callback) ","            iterator(x, function (v) ","        }, function () ","            callback(_map(results.sort(function (a, b) ","            }), function (x) ","    function _reject(eachfn, arr, iterator, callback) ","        _filter(eachfn, arr, function(value, cb) ","            iterator(value, function(v) ","    function _createTester(eachfn, check, getResult) ","        return function(arr, limit, iterator, cb) ","            function done() ","            function iteratee(x, _, callback) ","                iterator(x, function (v) ","    function _findGetResult(v, x) ","    async.sortBy = function (arr, iterator, callback) ","        async.map(arr, function (x, callback) ","            iterator(x, function (err, criteria) ","        }, function (err, results) ","                callback(null, _map(results.sort(comparator), function (x) ","        function comparator(left, right) ","    async.auto = function (tasks, concurrency, callback) ","        if (typeof arguments[1] === 'function') ","        function addListener(fn) ","        function removeListener(fn) ","        function taskComplete() ","            _arrayEach(listeners.slice(0), function (fn) ","        addListener(function () ","        _arrayEach(keys, function (k) ","            var taskCallback = _restParam(function(err, args) ","                    _forEachOf(results, function(val, rkey) ","            function ready() ","                return runningTasks \u003c concurrency \u0026\u0026 _reduce(requires, function (a, x) ","            function listener() ","    async.retry = function(times, task, callback) ","        function parseTimes(acc, t)","        } else if (length \u003c= 2 \u0026\u0026 typeof times === 'function') ","        if (typeof times !== 'function') ","        function wrappedTask(wrappedCallback, wrappedResults) ","            function retryAttempt(task, finalAttempt) ","                return function(seriesCallback) ","                    task(function(err, result)","            function retryInterval(interval)","                return function(seriesCallback)","                    setTimeout(function()","            async.series(attempts, function(done, data)","    async.waterfall = function (tasks, callback) ","            var err = new Error('First argument to waterfall must be an array of functions');","        function wrapIterator(iterator) ","            return _restParam(function (err, args) ","    function _parallel(eachfn, tasks, callback) ","        eachfn(tasks, function (task, key, callback) ","            task(_restParam(function (err, args) ","        }, function (err) ","    async.parallel = function (tasks, callback) ","    async.parallelLimit = function(tasks, limit, callback) ","    async.series = function(tasks, callback) ","    async.iterator = function (tasks) ","        function makeCallback(index) ","            function fn() ","            fn.next = function () ","    async.apply = _restParam(function (fn, args) ","        return _restParam(function (callArgs) ","    function _concat(eachfn, arr, fn, callback) ","        eachfn(arr, function (x, index, cb) ","            fn(x, function (err, y) ","        }, function (err) ","    async.whilst = function (test, iterator, callback) ","            var next = _restParam(function(err, args) ","    async.doWhilst = function (iterator, test, callback) ","        return async.whilst(function() ","    async.until = function (test, iterator, callback) ","        return async.whilst(function() ","    async.doUntil = function (iterator, test, callback) ","        return async.doWhilst(iterator, function() ","    async.during = function (test, iterator, callback) ","        var next = _restParam(function(err, args) ","        var check = function(err, truth) ","    async.doDuring = function (iterator, test, callback) ","        async.during(function(next) ","    function _queue(worker, concurrency, payload) ","        function _insert(q, data, pos, callback) ","            if (callback != null \u0026\u0026 typeof callback !== \"function\") ","                throw new Error(\"task callback must be a function\");","                return async.setImmediate(function() ","            _arrayEach(data, function(task) ","        function _next(q, tasks) ","            return function()","                _arrayEach(tasks, function (task) ","                    _arrayEach(workersList, function (worker, index) ","            push: function (data, callback) ","            kill: function () ","            unshift: function (data, callback) ","            process: function () ","                    var data = _map(tasks, function (task) ","            length: function () ","            running: function () ","            workersList: function () ","            idle: function() ","            pause: function () ","            resume: function () ","    async.queue = function (worker, concurrency) ","        var q = _queue(function (items, cb) ","    async.priorityQueue = function (worker, concurrency) ","        function _compareTasks(a, b)","        function _binarySearch(sequence, item, compare) ","        function _insert(q, data, priority, callback) ","            if (callback != null \u0026\u0026 typeof callback !== \"function\") ","                throw new Error(\"task callback must be a function\");","                return async.setImmediate(function() ","            _arrayEach(data, function(task) ","                    callback: typeof callback === 'function' ? callback : noop","        q.push = function (data, priority, callback) ","        // Remove unshift function","    async.cargo = function (worker, payload) ","    function _console_fn(name) ","        return _restParam(function (fn, args) ","            fn.apply(null, args.concat([_restParam(function (err, args) ","                        _arrayEach(args, function (x) ","    async.memoize = function (fn, hasher) ","        var memoized = _restParam(function memoized(args) ","                async.setImmediate(function () ","                fn.apply(null, args.concat([_restParam(function (args) ","    async.unmemoize = function (fn) ","        return function () ","    function _times(mapper) ","        return function (count, iterator, callback) ","    async.timesLimit = function (count, limit, iterator, callback) ","    async.seq = function (/* functions... */) ","        return _restParam(function (args) ","            if (typeof callback == 'function') ","            async.reduce(fns, args, function (newargs, fn, cb) ","                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) ","            function (err, results) ","    async.compose = function (/* functions... */) ","    function _applyEach(eachfn) ","        return _restParam(function(fns, args) ","            var go = _restParam(function(args) ","                return eachfn(fns, function (fn, _, cb) ","    async.forever = function (fn, callback) ","        function next(err) ","    function ensureAsync(fn) ","        return _restParam(function (args) ","            args.push(function () ","                    async.setImmediate(function () ","    async.constant = _restParam(function(values) ","        return function (callback) ","    async.asyncify = function asyncify(func) ","        return _restParam(function (args) ","            if (_isObject(result) \u0026\u0026 typeof result.then === \"function\") ","                result.then(function(value) ","                })[\"catch\"](function(err) ","    else if (typeof define === 'function' \u0026\u0026 define.amd) ","        define([], function () "],"Dependencies":null},{"FileName":"node_modules\\async\\dist\\async.min.js","LineCount":2,"CharCount":12475,"Comments":["//# sourceMappingURL=dist/async.min.map"],"Functions":["!function()function n(){}function t(n){return n}function e(n){return!!n}function r(n){return!n}function u(n){return function(){if(null===n)throw new Error(\"Callback was already called.\");n.apply(this,arguments),n=null}}function i(n){return function(){null!==n\u0026\u0026(n.apply(this,arguments),n=null)}}function o(n){return M(n)||\"number\"==typeof n.length\u0026\u0026n.length\u003e=0\u0026\u0026n.length%1===0}function c(n,t){for(var e=-1,r=n.length;++e\u003cr;)t(n[e],e,n)}function a(n,t){for(var e=-1,r=n.length,u=Array(r);++e\u003cr;)u[e]=t(n[e],e,n);return u}function f(n){return a(Array(n),function(n,t){return t})}function l(n,t,e){return c(n,function(n,r,u){e=t(e,n,r,u)}),e}function s(n,t){c(W(n),function(e){t(n[e],e)})}function p(n,t){for(var e=0;e\u003cn.length;e++)if(n[e]===t)return e;return-1}function h(n){var t,e,r=-1;return o(n)?(t=n.length,function(){return r++,t\u003er?r:null}):(e=W(n),t=e.length,function(){return r++,t\u003er?e[r]:null})}function m(n,t){return t=null==t?n.length-1:+t,function(){for(var e=Math.max(arguments.length-t,0),r=Array(e),u=0;e\u003eu;u++)r[u]=arguments[u+t];switch(t){case 0:return n.call(this,r);case 1:return n.call(this,arguments[0],r)}}}function y(n){return function(t,e,r){return n(t,r)}}function v(t){return function(e,r,o){o=i(o||n),e=e||[];var c=h(e);if(0\u003e=t)return o(null);var a=!1,f=0,l=!1;!function s(){if(a\u0026\u00260\u003e=f)return o(null);for(;t\u003ef\u0026\u0026!l;){var n=c();if(null===n)return a=!0,void(0\u003e=f\u0026\u0026o(null));f+=1,r(e[n],n,u(function(n){f-=1,n?(o(n),l=!0):s()}))}}()}}function d(n){return function(t,e,r){return n(P.eachOf,t,e,r)}}function g(n){return function(t,e,r,u){return n(v(e),t,r,u)}}function k(n){return function(t,e,r){return n(P.eachOfSeries,t,e,r)}}function b(t,e,r,u){u=i(u||n),e=e||[];var c=o(e)?[]:{};t(e,function(n,t,e){r(n,function(n,r){c[t]=r,e(n)})},function(n){u(n,c)})}function w(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(e){e\u0026\u0026u.push({index:t,value:n}),r()})},function(){r(a(u.sort(function(n,t){return n.index-t.index}),function(n){return n.value}))})}function O(n,t,e,r){w(n,t,function(n,t){e(n,function(n){t(!n)})},r)}function S(n,t,e){return function(r,u,i,o){function c(){o\u0026\u0026o(e(!1,void 0))}function a(n,r,u){return o?void i(n,function(r){o\u0026\u0026t(r)\u0026\u0026(o(e(!0,n)),o=i=!1),u()}):u()}arguments.length\u003e3?n(r,u,a,c):(o=i,i=u,n(r,a,c))}}function E(n,t){return t}function L(t,e,r){r=r||n;var u=o(e)?[]:{};t(e,function(n,t,e){n(m(function(n,r){r.length\u003c=1\u0026\u0026(r=r[0]),u[t]=r,e(n)}))},function(n){r(n,u)})}function j(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(n,t){u=u.concat(t||[]),r(n)})},function(n){r(n,u)})}function I(t,e,r){function i(t,e,r,u){if(null!=u\u0026\u0026\"function\"!=typeof u)throw new Error(\"task callback must be a function\");return t.started=!0,M(e)||(e=[e]),0===e.length\u0026\u0026t.idle()?P.setImmediate(function(){t.drain()}):(c(e,function(e){var i={data:e,callback:u||n};r?t.tasks.unshift(i):t.tasks.push(i),t.tasks.length===t.concurrency\u0026\u0026t.saturated()}),void P.setImmediate(t.process))}function o(n,t){return function(){f-=1;var e=!1,r=arguments;c(t,function(n){c(l,function(t,r){t!==n||e||(l.splice(r,1),e=!0)}),n.callback.apply(n,r)}),n.tasks.length+f===0\u0026\u0026n.drain(),n.process()}}if(null==e)e=1;else if(0===e)throw new Error(\"Concurrency must not be zero\");var f=0,l=[],s={tasks:[],concurrency:e,payload:r,saturated:n,empty:n,drain:n,started:!1,paused:!1,push:function(n,t){i(s,n,!1,t)},kill:function(){s.drain=n,s.tasks=[]},unshift:function(n,t){i(s,n,!0,t)},process:function(){for(;!s.paused\u0026\u0026f\u003cs.concurrency\u0026\u0026s.tasks.length;){var n=s.payload?s.tasks.splice(0,s.payload):s.tasks.splice(0,s.tasks.length),e=a(n,function(n){return n.data});0===s.tasks.length\u0026\u0026s.empty(),f+=1,l.push(n[0]);var r=u(o(s,n));t(e,r)}},length:function(){return s.tasks.length},running:function(){return f},workersList:function(){return l},idle:function(){return s.tasks.length+f===0},pause:function(){s.paused=!0},resume:function(){if(s.paused!==!1){s.paused=!1;for(var n=Math.min(s.concurrency,s.tasks.length),t=1;n\u003e=t;t++)P.setImmediate(s.process)}}};return s}function x(n){return m(function(t,e){t.apply(null,e.concat([m(function(t,e){\"object\"==typeof console\u0026\u0026(t?console.error\u0026\u0026console.error(t):console[n]\u0026\u0026c(e,function(t){console[n](t)}))})]))})}function A(n){return function(t,e,r){n(f(t),e,r)}}function T(n){return m(function(t,e){var r=m(function(e){var r=this,u=e.pop();return n(t,function(n,t,u){n.apply(r,e.concat([u]))},u)});return e.length?r.apply(this,e):r})}function z(n){return m(function(t){var e=t.pop();t.push(function(){var n=arguments;r?P.setImmediate(function(){e.apply(null,n)}):e.apply(null,n)});var r=!0;n.apply(this,t),r=!1})}var q,P={},C=\"object\"==typeof self\u0026\u0026self.self===self\u0026\u0026self||\"object\"==typeof global\u0026\u0026global.global===global\u0026\u0026global||this;null!=C\u0026\u0026(q=C.async),P.noConflict=function(){return C.async=q,P};var H=Object.prototype.toString,M=Array.isArray||function(n){return\"[object Array]\"===H.call(n)},U=function(n){var t=typeof n;return\"function\"===t||\"object\"===t\u0026\u0026!!n},W=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)\u0026\u0026t.push(e);return t},B=\"function\"==typeof setImmediate\u0026\u0026setImmediate,D=B?function(n){B(n)}:function(n){setTimeout(n,0)};\"object\"==typeof process\u0026\u0026\"function\"==typeof process.nextTick?P.nextTick=process.nextTick:P.nextTick=D,P.setImmediate=B?D:P.nextTick,P.forEach=P.each=function(n,t,e){return P.eachOf(n,y(t),e)},P.forEachSeries=P.eachSeries=function(n,t,e){return P.eachOfSeries(n,y(t),e)},P.forEachLimit=P.eachLimit=function(n,t,e,r){return v(t)(n,y(e),r)},P.forEachOf=P.eachOf=function(t,e,r){function o(n){f--,n?r(n):null===c\u0026\u00260\u003e=f\u0026\u0026r(null)}r=i(r||n),t=t||[];for(var c,a=h(t),f=0;null!=(c=a());)f+=1,e(t[c],c,u(o));0===f\u0026\u0026r(null)},P.forEachOfSeries=P.eachOfSeries=function(t,e,r){function o(){var n=!0;return null===a?r(null):(e(t[a],a,u(function(t){if(t)r(t);else{if(a=c(),null===a)return r(null);n?P.setImmediate(o):o()}})),void(n=!1))}r=i(r||n),t=t||[];var c=h(t),a=c();o()},P.forEachOfLimit=P.eachOfLimit=function(n,t,e,r){v(t)(n,e,r)},P.map=d(b),P.mapSeries=k(b),P.mapLimit=g(b),P.inject=P.foldl=P.reduce=function(n,t,e,r){P.eachOfSeries(n,function(n,r,u){e(t,n,function(n,e){t=e,u(n)})},function(n){r(n,t)})},P.foldr=P.reduceRight=function(n,e,r,u){var i=a(n,t).reverse();P.reduce(i,e,r,u)},P.transform=function(n,t,e,r){3===arguments.length\u0026\u0026(r=e,e=t,t=M(n)?[]:{}),P.eachOf(n,function(n,r,u){e(t,n,r,u)},function(n){r(n,t)})},P.select=P.filter=d(w),P.selectLimit=P.filterLimit=g(w),P.selectSeries=P.filterSeries=k(w),P.reject=d(O),P.rejectLimit=g(O),P.rejectSeries=k(O),P.any=P.some=S(P.eachOf,e,t),P.someLimit=S(P.eachOfLimit,e,t),P.all=P.every=S(P.eachOf,r,r),P.everyLimit=S(P.eachOfLimit,r,r),P.detect=S(P.eachOf,t,E),P.detectSeries=S(P.eachOfSeries,t,E),P.detectLimit=S(P.eachOfLimit,t,E),P.sortBy=function(n,t,e){function r(n,t){var e=n.criteria,r=t.criteria;return r\u003ee?-1:e\u003er?1:0}P.map(n,function(n,e){t(n,function(t,r){t?e(t):e(null,{value:n,criteria:r})})},function(n,t){return n?e(n):void e(null,a(t.sort(r),function(n){return n.value}))})},P.auto=function(t,e,r){function u(n){g.unshift(n)}function o(n){var t=p(g,n);t\u003e=0\u0026\u0026g.splice(t,1)}function a(){h--,c(g.slice(0),function(n){n()})}\"function\"==typeof arguments[1]\u0026\u0026(r=e,e=null),r=i(r||n);var f=W(t),h=f.length;if(!h)return r(null);e||(e=h);var y={},v=0,d=!1,g=[];u(function(){h||r(null,y)}),c(f,function(n){function i(){return e\u003ev\u0026\u0026l(k,function(n,t){return n\u0026\u0026y.hasOwnProperty(t)},!0)\u0026\u0026!y.hasOwnProperty(n)}function c(){i()\u0026\u0026(v++,o(c),h[h.length-1](g,y))}if(!d){for(var f,h=M(t[n])?t[n]:[t[n]],g=m(function(t,e){if(v--,e.length\u003c=1\u0026\u0026(e=e[0]),t){var u={};s(y,function(n,t){u[t]=n}),u[n]=e,d=!0,r(t,u)}else y[n]=e,P.setImmediate(a)}),k=h.slice(0,h.length-1),b=k.length;b--;){if(!(f=t[k[b]]))throw new Error(\"Has nonexistent dependency in \"+k.join(\", \"));if(M(f)\u0026\u0026p(f,n)\u003e=0)throw new Error(\"Has cyclic dependencies\")}i()?(v++,h[h.length-1](g,y)):u(c)}})},P.retry=function(n,t,e){function r(n,t){if(\"number\"==typeof t)n.times=parseInt(t,10)||i;else{if(\"object\"!=typeof t)throw new Error(\"Unsupported argument type for 'times': \"+typeof t);n.times=parseInt(t.times,10)||i,n.interval=parseInt(t.interval,10)||o}}function u(n,t){function e(n,e){return function(r){n(function(n,t){r(!n||e,{err:n,result:t})},t)}}function r(n){return function(t){setTimeout(function(){t(null)},n)}}for(;a.times;){var u=!(a.times-=1);c.push(e(a.task,u)),!u\u0026\u0026a.interval\u003e0\u0026\u0026c.push(r(a.interval))}P.series(c,function(t,e){e=e[e.length-1],(n||a.callback)(e.err,e.result)})}var i=5,o=0,c=[],a={times:i,interval:o},f=arguments.length;if(1\u003ef||f\u003e3)throw new Error(\"Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)\");return 2\u003e=f\u0026\u0026\"function\"==typeof n\u0026\u0026(e=t,t=n),\"function\"!=typeof n\u0026\u0026r(a,n),a.callback=e,a.task=t,a.callback?u():u},P.waterfall=function(t,e){function r(n){return m(function(t,u){if(t)e.apply(null,[t].concat(u));else{var i=n.next();i?u.push(r(i)):u.push(e),z(n).apply(null,u)}})}if(e=i(e||n),!M(t)){var u=new Error(\"First argument to waterfall must be an array of functions\");return e(u)}return t.length?void r(P.iterator(t))():e()},P.parallel=function(n,t){L(P.eachOf,n,t)},P.parallelLimit=function(n,t,e){L(v(t),n,e)},P.series=function(n,t){L(P.eachOfSeries,n,t)},P.iterator=function(n){function t(e){function r(){return n.length\u0026\u0026n[e].apply(null,arguments),r.next()}return r.next=function(){return e\u003cn.length-1?t(e+1):null},r}return t(0)},P.apply=m(function(n,t){return m(function(e){return n.apply(null,t.concat(e))})}),P.concat=d(j),P.concatSeries=k(j),P.whilst=function(t,e,r){if(r=r||n,t()){var u=m(function(n,i){n?r(n):t.apply(this,i)?e(u):r.apply(null,[null].concat(i))});e(u)}else r(null)},P.doWhilst=function(n,t,e){var r=0;return P.whilst(function(){return++r\u003c=1||t.apply(this,arguments)},n,e)},P.until=function(n,t,e){return P.whilst(function(){return!n.apply(this,arguments)},t,e)},P.doUntil=function(n,t,e){return P.doWhilst(n,function(){return!t.apply(this,arguments)},e)},P.during=function(t,e,r){r=r||n;var u=m(function(n,e){n?r(n):(e.push(i),t.apply(this,e))}),i=function(n,t){n?r(n):t?e(u):r(null)};t(i)},P.doDuring=function(n,t,e){var r=0;P.during(function(n){r++\u003c1?n(null,!0):t.apply(this,arguments)},n,e)},P.queue=function(n,t){var e=I(function(t,e){n(t[0],e)},t,1);return e},P.priorityQueue=function(t,e){function r(n,t){return n.priority-t.priority}function u(n,t,e){for(var r=-1,u=n.length-1;u\u003er;){var i=r+(u-r+1\u003e\u003e\u003e1);e(t,n[i])\u003e=0?r=i:u=i-1}return r}function i(t,e,i,o){if(null!=o\u0026\u0026\"function\"!=typeof o)throw new Error(\"task callback must be a function\");return t.started=!0,M(e)||(e=[e]),0===e.length?P.setImmediate(function(){t.drain()}):void c(e,function(e){var c={data:e,priority:i,callback:\"function\"==typeof o?o:n};t.tasks.splice(u(t.tasks,c,r)+1,0,c),t.tasks.length===t.concurrency\u0026\u0026t.saturated(),P.setImmediate(t.process)})}var o=P.queue(t,e);return o.push=function(n,t,e){i(o,n,t,e)},delete o.unshift,o},P.cargo=function(n,t){return I(n,1,t)},P.log=x(\"log\"),P.dir=x(\"dir\"),P.memoize=function(n,e){var r={},u={},i=Object.prototype.hasOwnProperty;e=e||t;var o=m(function(t){var o=t.pop(),c=e.apply(null,t);i.call(r,c)?P.setImmediate(function(){o.apply(null,r[c])}):i.call(u,c)?u[c].push(o):(u[c]=[o],n.apply(null,t.concat([m(function(n){r[c]=n;var t=u[c];delete u[c];for(var e=0,i=t.length;i\u003ee;e++)t[e].apply(null,n)})])))});return o.memo=r,o.unmemoized=n,o},P.unmemoize=function(n){return function(){return(n.unmemoized||n).apply(null,arguments)}},P.times=A(P.map),P.timesSeries=A(P.mapSeries),P.timesLimit=function(n,t,e,r){return P.mapLimit(f(n),t,e,r)},P.seq=function(){var t=arguments;return m(function(e){var r=this,u=e[e.length-1];\"function\"==typeof u?e.pop():u=n,P.reduce(t,e,function(n,t,e){t.apply(r,n.concat([m(function(n,t){e(n,t)})]))},function(n,t){u.apply(r,[n].concat(t))})})},P.compose=function(){return P.seq.apply(null,Array.prototype.reverse.call(arguments))},P.applyEach=T(P.eachOf),P.applyEachSeries=T(P.eachOfSeries),P.forever=function(t,e){function r(n){return n?i(n):void o(r)}var i=u(e||n),o=z(t);r()},P.ensureAsync=z,P.constant=m(function(n){var t=[null].concat(n);return function(n){return n.apply(this,t)}}),P.wrapSync=P.asyncify=function(n){return m(function(t){var e,r=t.pop();try{e=n.apply(this,t)}catch(u){return r(u)}U(e)\u0026\u0026\"function\"==typeof e.then?e.then(function(n){r(null,n)})[\"catch\"](function(n){r(n.message?n:new Error(n))}):r(null,e)})},\"object\"==typeof module\u0026\u0026module.exports?module.exports=P:\"function\"==typeof define\u0026\u0026define.amd?define([],function(){return P}):C.async=P}();"],"Dependencies":null},{"FileName":"node_modules\\async\\lib\\async.js","LineCount":1266,"CharCount":37299,"Comments":["/*!"," * async"," * https://github.com/caolan/async"," *"," * Copyright 2010-2014 Caolan McMahon"," * Released under the MIT license"," */","(function () {","    // global on the server, window in the browser","    var previous_async;","    // Establish the root object, `window` (`self`) in the browser, `global`","    // on the server, or `this` in some virtual machines. We use `self`","    // instead of `window` for `WebWorker` support.","    var root = typeof self === 'object' \u0026\u0026 self.self === self \u0026\u0026 self ||","    //// cross-browser compatiblity functions ////","","    var _toString = Object.prototype.toString;","    // Ported from underscore.js isObject","    var _isObject = function(obj) {","            // has a positive integer length property","            typeof arr.length === \"number\" \u0026\u0026","    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)","    // This accumulates the arguments passed into an array, after a given index.","    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).","    function _restParam(func, startIndex) {","            // Currently unused but handle cases outside of the switch statement:","            // var args = Array(startIndex + 1);","            // for (index = 0; index \u003c startIndex; index++) {","            //     args[index] = arguments[index];","            // }","            // args[startIndex] = rest;","            // return func.apply(this, args);","        };","    //// exported async module functions ////","","    //// nextTick implementation with browser-compatible fallback ////","","    // capture the global reference to guard against fakeTimer mocks","    var _setImmediate = typeof setImmediate === 'function' \u0026\u0026 setImmediate;","        // not a direct alias for IE10 compatibility","        _setImmediate(fn);","            // Check key is null in case iterator isn't exhausted","            // and done resolved synchronously.","            else if (key === null \u0026\u0026 completed \u003c= 0) {","    // reduce only has a series version, as doing reduce in parallel won't","    // work in many situations.","    async.inject =","            // concurrency is optional, shift the args.","            callback = concurrency;","            // prevent dead-locks","            var len = requires.length;","        // If a callback is passed, run this as a controll flow","        return opts.callback ? wrappedTask() : wrappedTask;","                // call drain immediately if there are no tasks","                return async.setImmediate(function() {","                // Need to call q.process once per concurrent","                // worker to preserve full concurrency after pause","                for (var w = 1; w \u003c= resumeCount; w++) {","                // call drain immediately if there are no tasks","                return async.setImmediate(function() {","        // Start with a normal queue","        var q = async.queue(worker, concurrency);","        // Override push to accept second parameter representing priority","        q.push = function (data, priority, callback) {","        // Remove unshift function","        delete q.unshift;","    /*async.info = _console_fn('info');","    async.warn = _console_fn('warn');","    async.error = _console_fn('error');*/","","    async.memoize = function (fn, hasher) {","    async.seq = function (/* functions... */) {","        var fns = arguments;","    async.compose = function (/* functions... */) {","        return async.seq.apply(null, Array.prototype.reverse.call(arguments));","            // if result is Promise object","            if (_isObject(result) \u0026\u0026 typeof result.then === \"function\") {","    // Node.js","    if (typeof module === 'object' \u0026\u0026 module.exports) {","    // AMD / RequireJS","    else if (typeof define === 'function' \u0026\u0026 define.amd) {","    // included directly via \u003cscript\u003e tag","    else {"],"Functions":["(function () ","    function noop() }","    function identity(v) ","    function toBool(v) ","    function notId(v) ","    async.noConflict = function () ","    function only_once(fn) ","        return function() ","    function _once(fn) ","        return function() ","    //// cross-browser compatiblity functions ////","    var _isArray = Array.isArray || function (obj) ","    var _isObject = function(obj) ","        return type === 'function' || type === 'object' \u0026\u0026 !!obj;","    function _isArrayLike(arr) ","    function _arrayEach(arr, iterator) ","    function _map(arr, iterator) ","    function _range(count) ","        return _map(Array(count), function (v, i)  return i; });","    function _reduce(arr, iterator, memo) ","        _arrayEach(arr, function (x, i, a) ","    function _forEachOf(object, iterator) ","        _arrayEach(_keys(object), function (key) ","    function _indexOf(arr, item) ","    var _keys = Object.keys || function (obj) ","    function _keyIterator(coll) ","            return function next() ","            return function next() ","    function _restParam(func, startIndex) ","        return function() ","    function _withoutIndex(iterator) ","        return function (value, index, callback) ","    //// exported async module functions ////","    var _setImmediate = typeof setImmediate === 'function' \u0026\u0026 setImmediate;","    var _delay = _setImmediate ? function(fn) ","    } : function(fn) ","    if (typeof process === 'object' \u0026\u0026 typeof process.nextTick === 'function') ","    async.each = function (arr, iterator, callback) ","    async.eachSeries = function (arr, iterator, callback) ","    async.eachLimit = function (arr, limit, iterator, callback) ","    async.eachOf = function (object, iterator, callback) ","        function done(err) ","    async.eachOfSeries = function (obj, iterator, callback) ","        function iterate() ","            iterator(obj[key], key, only_once(function (err) ","    async.eachOfLimit = function (obj, limit, iterator, callback) ","    function _eachOfLimit(limit) ","        return function (obj, iterator, callback) ","            (function replenish () ","                    iterator(obj[key], key, only_once(function (err) ","    function doParallel(fn) ","        return function (obj, iterator, callback) ","    function doParallelLimit(fn) ","        return function (obj, limit, iterator, callback) ","    function doSeries(fn) ","        return function (obj, iterator, callback) ","    function _asyncMap(eachfn, arr, iterator, callback) ","        eachfn(arr, function (value, index, callback) ","            iterator(value, function (err, v) ","        }, function (err) ","    async.reduce = function (arr, memo, iterator, callback) ","        async.eachOfSeries(arr, function (x, i, callback) ","            iterator(memo, x, function (err, v) ","        }, function (err) ","    async.reduceRight = function (arr, memo, iterator, callback) ","    async.transform = function (arr, memo, iterator, callback) ","        async.eachOf(arr, function(v, k, cb) ","        }, function(err) ","    function _filter(eachfn, arr, iterator, callback) ","        eachfn(arr, function (x, index, callback) ","            iterator(x, function (v) ","        }, function () ","            callback(_map(results.sort(function (a, b) ","            }), function (x) ","    function _reject(eachfn, arr, iterator, callback) ","        _filter(eachfn, arr, function(value, cb) ","            iterator(value, function(v) ","    function _createTester(eachfn, check, getResult) ","        return function(arr, limit, iterator, cb) ","            function done() ","            function iteratee(x, _, callback) ","                iterator(x, function (v) ","    function _findGetResult(v, x) ","    async.sortBy = function (arr, iterator, callback) ","        async.map(arr, function (x, callback) ","            iterator(x, function (err, criteria) ","        }, function (err, results) ","                callback(null, _map(results.sort(comparator), function (x) ","        function comparator(left, right) ","    async.auto = function (tasks, concurrency, callback) ","        if (typeof arguments[1] === 'function') ","        function addListener(fn) ","        function removeListener(fn) ","        function taskComplete() ","            _arrayEach(listeners.slice(0), function (fn) ","        addListener(function () ","        _arrayEach(keys, function (k) ","            var taskCallback = _restParam(function(err, args) ","                    _forEachOf(results, function(val, rkey) ","            function ready() ","                return runningTasks \u003c concurrency \u0026\u0026 _reduce(requires, function (a, x) ","            function listener() ","    async.retry = function(times, task, callback) ","        function parseTimes(acc, t)","        } else if (length \u003c= 2 \u0026\u0026 typeof times === 'function') ","        if (typeof times !== 'function') ","        function wrappedTask(wrappedCallback, wrappedResults) ","            function retryAttempt(task, finalAttempt) ","                return function(seriesCallback) ","                    task(function(err, result)","            function retryInterval(interval)","                return function(seriesCallback)","                    setTimeout(function()","            async.series(attempts, function(done, data)","    async.waterfall = function (tasks, callback) ","            var err = new Error('First argument to waterfall must be an array of functions');","        function wrapIterator(iterator) ","            return _restParam(function (err, args) ","    function _parallel(eachfn, tasks, callback) ","        eachfn(tasks, function (task, key, callback) ","            task(_restParam(function (err, args) ","        }, function (err) ","    async.parallel = function (tasks, callback) ","    async.parallelLimit = function(tasks, limit, callback) ","    async.series = function(tasks, callback) ","    async.iterator = function (tasks) ","        function makeCallback(index) ","            function fn() ","            fn.next = function () ","    async.apply = _restParam(function (fn, args) ","        return _restParam(function (callArgs) ","    function _concat(eachfn, arr, fn, callback) ","        eachfn(arr, function (x, index, cb) ","            fn(x, function (err, y) ","        }, function (err) ","    async.whilst = function (test, iterator, callback) ","            var next = _restParam(function(err, args) ","    async.doWhilst = function (iterator, test, callback) ","        return async.whilst(function() ","    async.until = function (test, iterator, callback) ","        return async.whilst(function() ","    async.doUntil = function (iterator, test, callback) ","        return async.doWhilst(iterator, function() ","    async.during = function (test, iterator, callback) ","        var next = _restParam(function(err, args) ","        var check = function(err, truth) ","    async.doDuring = function (iterator, test, callback) ","        async.during(function(next) ","    function _queue(worker, concurrency, payload) ","        function _insert(q, data, pos, callback) ","            if (callback != null \u0026\u0026 typeof callback !== \"function\") ","                throw new Error(\"task callback must be a function\");","                return async.setImmediate(function() ","            _arrayEach(data, function(task) ","        function _next(q, tasks) ","            return function()","                _arrayEach(tasks, function (task) ","                    _arrayEach(workersList, function (worker, index) ","            push: function (data, callback) ","            kill: function () ","            unshift: function (data, callback) ","            process: function () ","                    var data = _map(tasks, function (task) ","            length: function () ","            running: function () ","            workersList: function () ","            idle: function() ","            pause: function () ","            resume: function () ","    async.queue = function (worker, concurrency) ","        var q = _queue(function (items, cb) ","    async.priorityQueue = function (worker, concurrency) ","        function _compareTasks(a, b)","        function _binarySearch(sequence, item, compare) ","        function _insert(q, data, priority, callback) ","            if (callback != null \u0026\u0026 typeof callback !== \"function\") ","                throw new Error(\"task callback must be a function\");","                return async.setImmediate(function() ","            _arrayEach(data, function(task) ","                    callback: typeof callback === 'function' ? callback : noop","        q.push = function (data, priority, callback) ","        // Remove unshift function","    async.cargo = function (worker, payload) ","    function _console_fn(name) ","        return _restParam(function (fn, args) ","            fn.apply(null, args.concat([_restParam(function (err, args) ","                        _arrayEach(args, function (x) ","    async.memoize = function (fn, hasher) ","        var memoized = _restParam(function memoized(args) ","                async.setImmediate(function () ","                fn.apply(null, args.concat([_restParam(function (args) ","    async.unmemoize = function (fn) ","        return function () ","    function _times(mapper) ","        return function (count, iterator, callback) ","    async.timesLimit = function (count, limit, iterator, callback) ","    async.seq = function (/* functions... */) ","        return _restParam(function (args) ","            if (typeof callback == 'function') ","            async.reduce(fns, args, function (newargs, fn, cb) ","                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) ","            function (err, results) ","    async.compose = function (/* functions... */) ","    function _applyEach(eachfn) ","        return _restParam(function(fns, args) ","            var go = _restParam(function(args) ","                return eachfn(fns, function (fn, _, cb) ","    async.forever = function (fn, callback) ","        function next(err) ","    function ensureAsync(fn) ","        return _restParam(function (args) ","            args.push(function () ","                    async.setImmediate(function () ","    async.constant = _restParam(function(values) ","        return function (callback) ","    async.asyncify = function asyncify(func) ","        return _restParam(function (args) ","            if (_isObject(result) \u0026\u0026 typeof result.then === \"function\") ","                result.then(function(value) ","                })[\"catch\"](function(err) ","    else if (typeof define === 'function' \u0026\u0026 define.amd) ","        define([], function () "],"Dependencies":null},{"FileName":"node_modules\\base64-url\\index.js","LineCount":24,"CharCount":519,"Comments":["    .replace(/\\//g, '_')","    .replace(/=/g, '');"],"Functions":["base64url.unescape = function unescape (str) ","base64url.escape = function escape (str) ","base64url.encode = function encode (str) ","base64url.decode = function decode (str) "],"Dependencies":null},{"FileName":"node_modules\\base64url\\index.js","LineCount":55,"CharCount":1316,"Comments":["      .replace(/\\//g, '_')","  );"],"Functions":["function fromBase64(base64string) ","function toBase64(base64UrlString) ","function padString(string) ","function decodeBase64Url(base64UrlString, encoding) ","function base64url(stringOrBuffer, encoding) ","function toBuffer(base64string) "],"Dependencies":null},{"FileName":"node_modules\\base64url\\test\\base64url.test.js","LineCount":57,"CharCount":1926,"Comments":[],"Functions":["function base64(s) ","test('from string to base64url', function (t) ","test('from base64url to base64', function (t) ","test('from base64 to base64url', function (t) ","test('from base64url to string', function (t) ","test('from base64url to string (buffer)', function (t) ","test('from base64url to buffer', function (t) "],"Dependencies":["fs","tap",".."]},{"FileName":"node_modules\\bluebird\\js\\browser\\bluebird.js","LineCount":4887,"CharCount":147898,"Comments":["/* @preserve"," * The MIT License (MIT)"," * "," * Copyright (c) 2013-2015 Petka Antonov"," * "," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," * "," * The above copyright notice and this permission notice shall be included in"," * all copies or substantial portions of the Software."," * "," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN"," * THE SOFTWARE."," * "," */","/**"," * bluebird build version 2.10.2"," * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, cancel, using, filter, any, each, timers","*/","!function(e){if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self\u0026\u0026(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"\u0026\u0026_dereq_;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"\u0026\u0026_dereq_;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){","        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");","    }","        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");","        return errorObj;","        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/DT1qyG\\u000a\");","    }","                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/4Y4pDk\\u000a\\u000a\".replace(\"%s\", value) +","                        \"From coroutine:\\u000a\" +","        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    }","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    yieldHandlers.push(fn);","        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    }","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","","    return map(this, fn, options, null).promise();","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    return map(promises, fn, options, _filter).promise();","        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }","        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }","    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/LhFpo0\\u000a\");","};"," /*jshint unused:false*/","var createContext =","        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");","    }","        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/KsIlge\\u000a\");","    }","                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));","            }","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    var prev = async._schedule;","    // Complete slack tracking, opt out of field-type tracking and           ","    // stabilize map                                                         ","    fillTypes({a: 1});                                                       ","                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");","                this.__hardReject__(err);","        this._promise._reject(apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\")._reason());","        return;","        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }","        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }","        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }","                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/iWrZbw\\u000a\"","                        .replace(\"%s\", suffix));","        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }","        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");","    }","        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/8FZo5V\\u000a\");","    }","        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/OsFKC8\\u000a\");","    } else if (castValue instanceof Promise) {","        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");","    }","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);","    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");","};","        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/1wAmHx\\u000a\");","    }","        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");","    }","        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");","    }","        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");","    }","        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");","    }","        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","","        var input;","            /*jshint forin:false */","            enumeration: for (var key in obj) {","    /*jshint -W027,-W055,-W031*/","    function f() {}"],"Functions":["!function(e)if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self\u0026\u0026(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"\u0026\u0026_dereq_;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"\u0026\u0026_dereq_;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){","module.exports = function(Promise) ","function any(promises) ","Promise.any = function (promises) ","Promise.prototype.any = function () ","},}],2:[function(_dereq_,module,exports){","function Async() ","    this.drainQueues = function () ","Async.prototype.disableTrampolineIfNecessary = function() ","Async.prototype.enableTrampoline = function() ","        this._schedule = function(fn) ","Async.prototype.haveItemsQueued = function () ","Async.prototype.throwLater = function(fn, arg) ","        fn = function ()  throw arg; };","        setTimeout(function() ","        this._schedule(function() ","function AsyncInvokeLater(fn, receiver, arg) ","function AsyncInvoke(fn, receiver, arg) ","function AsyncSettlePromises(promise) ","        schedule = function(fn)  setTimeout(fn, 0); };","    Async.prototype.invokeLater = function (fn, receiver, arg) ","            this._schedule(function() ","                setTimeout(function() ","    Async.prototype.invoke = function (fn, receiver, arg) ","            this._schedule(function() ","    Async.prototype.settlePromises = function(promise) ","            this._schedule(function() ","Async.prototype.invokeFirst = function (fn, receiver, arg) ","Async.prototype._drainQueue = function(queue) ","        if (typeof fn !== \"function\") ","Async.prototype._drainQueues = function () ","Async.prototype._queueTick = function () ","Async.prototype._reset = function () ","},\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL, tryConvertToPromise) ","var rejectThis = function(_, e) ","var targetRejected = function(e, context) ","var bindingResolved = function(thisArg, context) ","var bindingRejected = function(e, context) ","Promise.prototype.bind = function (thisArg) ","Promise.prototype._setBoundTo = function (obj) ","Promise.prototype._isBound = function () ","Promise.bind = function (thisArg, value) ","        maybePromise._then(function() ","},}],4:[function(_dereq_,module,exports){","function noConflict() ","},\"./promise.js\":23}],5:[function(_dereq_,module,exports){","module.exports = function(Promise) ","var makeMethodCaller = function (methodName) ","        return function(obj)                                                \\n\\","var makeGetter = function (propertyName) ","var getCompiled = function(name, compiler, cache) ","    if (typeof ret !== \"function\") ","getMethodCaller = function(name) ","getGetter = function(name) ","function ensureMethod(obj, methodName) ","    if (typeof fn !== \"function\") ","function caller(obj) ","Promise.prototype.call = function (methodName) ","function namedGetter(obj) ","function indexedGetter(obj) ","Promise.prototype.get = function (propertyName) ","},\"./util.js\":38}],6:[function(_dereq_,module,exports){","module.exports = function(Promise) ","Promise.prototype._cancel = function (reason) ","Promise.prototype.cancel = function (reason) ","Promise.prototype.cancellable = function () ","Promise.prototype.uncancellable = function () ","Promise.prototype.fork = function (didFulfill, didReject, didProgress) ","},\"./async.js\":2,\"./errors.js\":13}],7:[function(_dereq_,module,exports){","module.exports = function() ","function CapturedTrace(parent) ","CapturedTrace.prototype.uncycle = function() ","CapturedTrace.prototype.parent = function() ","CapturedTrace.prototype.hasParent = function() ","CapturedTrace.prototype.attachExtraTrace = function(error) ","function reconstructStack(message, stacks) ","function removeDuplicateOrEmptyJumps(stacks) ","function removeCommonRoots(stacks) ","function cleanStack(stack) ","function stackFramesAsArray(error) ","CapturedTrace.parseStackAndMessage = function(error) ","CapturedTrace.formatAndLogError = function(error, title) ","        if (typeof error === \"object\" || typeof error === \"function\") ","        if (typeof warn === \"function\") ","        } else if (typeof console.log === \"function\" ||","CapturedTrace.unhandledRejection = function (reason) ","CapturedTrace.isSupported = function () ","    return typeof captureStackTrace === \"function\";","function(name, localHandler, reason, promise) ","        if (typeof localHandler === \"function\") ","function formatNonError(obj) ","    if (typeof obj === \"function\") ","        str = \"[function \" +","function snip(str) ","var shouldIgnore = function()  return false; };","function parseLineInfo(line) ","CapturedTrace.setBounds = function(firstLineError, lastLineError) ","    shouldIgnore = function(line) ","var captureStackTrace = (function stackDetection() ","    var v8stackFormatter = function(stack, error) ","        typeof Error.captureStackTrace === \"function\") ","        shouldIgnore = function(line) ","        return function(receiver, ignoreUntil) ","        return function captureStackTrace(o) ","        return function captureStackTrace(o) ","    formatStack = function(stack, error) ","            typeof error === \"function\") \u0026\u0026","var fireGlobalEvent = (function() ","        return function(name, reason, promise) ","            fireDomEvent = function(type, detail) ","        return function(name, reason, promise) ","    warn = function (message) ","        warn = function(message) ","        warn = function(message) ","},\"./async.js\":2,\"./util.js\":38}],8:[function(_dereq_,module,exports){","module.exports = function(NEXT_FILTER) ","function CatchFilter(instances, callback, promise) ","function safePredicate(predicate, e) ","        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");","CatchFilter.prototype.doFilter = function (e) ","        } else if (typeof item === \"function\" \u0026\u0026 !itemIsErrorType) ","},\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(_dereq_,module,exports){","module.exports = function(Promise, CapturedTrace, isDebugging) ","function Context() ","Context.prototype._pushContext = function () ","Context.prototype._popContext = function () ","function createContext() ","function peekContext() ","},}],10:[function(_dereq_,module,exports){","module.exports = function(Promise, CapturedTrace) ","Promise.prototype._ignoreRejections = function() ","Promise.prototype._ensurePossibleRejectionHandled = function () ","Promise.prototype._notifyUnhandledRejectionIsHandled = function () ","Promise.prototype._notifyUnhandledRejection = function () ","Promise.prototype._setUnhandledRejectionIsNotified = function () ","Promise.prototype._unsetUnhandledRejectionIsNotified = function () ","Promise.prototype._isUnhandledRejectionNotified = function () ","Promise.prototype._setRejectionIsUnhandled = function () ","Promise.prototype._unsetRejectionIsUnhandled = function () ","Promise.prototype._isRejectionUnhandled = function () ","Promise.prototype._setCarriedStackTrace = function (capturedTrace) ","Promise.prototype._isCarryingStackTrace = function () ","Promise.prototype._getCarriedStackTrace = function () ","Promise.prototype._captureStackTrace = function () ","Promise.prototype._attachExtraTrace = function (error, ignoreSelf) ","Promise.prototype._warn = function(message) ","Promise.onPossiblyUnhandledRejection = function (fn) ","        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))","Promise.onUnhandledRejectionHandled = function (fn) ","        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))","Promise.longStackTraces = function () ","Promise.hasLongStackTraces = function () ","    Promise.longStackTraces = function()};","return function() ","},\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(_dereq_,module,exports){","module.exports = function(Promise) ","var returner = function () ","var thrower = function () ","var returnUndefined = function() };","var throwUndefined = function() ","var wrapper = function (value, action) ","        return function () ","        return function () ","Promise.prototype.thenReturn = function (value) ","Promise.prototype.thenThrow = function (reason) ","},\"./util.js\":38}],12:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL) ","Promise.prototype.each = function (fn) ","Promise.each = function (promises, fn) ","},}],13:[function(_dereq_,module,exports){","function subError(nameProperty, defaultMessage) ","    function SubError(message) ","    if (typeof Array.prototype[methods[i]] === \"function\") ","AggregateError.prototype.toString = function() ","function OperationalError(message) ","},\"./es5.js\":14,\"./util.js\":38}],14:[function(_dereq_,module,exports){","var isES5 = (function()","        propertyIsWritable: function(obj, prop) ","    var ObjectKeys = function (o) ","    var ObjectGetDescriptor = function(o, key) ","    var ObjectDefineProperty = function (o, key, desc) ","    var ObjectFreeze = function (obj) ","    var ObjectGetPrototypeOf = function (obj) ","    var ArrayIsArray = function (obj) ","        propertyIsWritable: function() ","},}],15:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL) ","Promise.prototype.filter = function (fn, options) ","Promise.filter = function (promises, fn, options) ","},}],16:[function(_dereq_,module,exports){","module.exports = function(Promise, NEXT_FILTER, tryConvertToPromise) ","function returnThis() ","function throwThis() ","function return$(r) ","    return function() ","function throw$(r) ","    return function() ","function promisedFinally(ret, reasonOrValue, isFulfilled) ","function finallyHandler(reasonOrValue) ","function tapHandler(value) ","Promise.prototype._passThroughHandler = function (handler, isFinally) ","    if (typeof handler !== \"function\") return this.then();","Promise.prototype[\"finally\"] = function (handler) ","Promise.prototype.tap = function (handler) ","},\"./util.js\":38}],17:[function(_dereq_,module,exports){","module.exports = function(Promise,","function promiseFromYieldHandler(value, yieldHandlers, traceParent) ","function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) ","    this._yieldHandlers = typeof yieldHandler === \"function\"","PromiseSpawn.prototype.promise = function () ","PromiseSpawn.prototype._run = function () ","PromiseSpawn.prototype._continue = function (result) ","PromiseSpawn.prototype._throw = function (reason) ","PromiseSpawn.prototype._next = function (value) ","Promise.coroutine = function (generatorFunction, options) ","    if (typeof generatorFunction !== \"function\") ","        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    return function () ","Promise.coroutine.addYieldHandler = function(fn) ","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.spawn = function (generatorFunction) ","    if (typeof generatorFunction !== \"function\") ","        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","},\"./errors.js\":13,\"./util.js\":38}],18:[function(_dereq_,module,exports){","function(Promise, PromiseArray, tryConvertToPromise, INTERNAL) ","    var thenCallback = function(i) ","    var caller = function(count) ","    var Holder = function(total, fn) ","    Holder.prototype.checkFulfillment = function(promise) ","    var reject = function (reason) ","Promise.join = function () ","    if (last \u003e 0 \u0026\u0026 typeof arguments[last] === \"function\") ","},\"./util.js\":38}],19:[function(_dereq_,module,exports){","module.exports = function(Promise,","function MappingPromiseArray(promises, fn, limit, _filter) ","function init() this._init$(undefined, -2);}","MappingPromiseArray.prototype._init = function () };","MappingPromiseArray.prototype._promiseFulfilled = function (value, index) ","MappingPromiseArray.prototype._drainQueue = function () ","MappingPromiseArray.prototype._filter = function (booleans, values) ","MappingPromiseArray.prototype.preservedValues = function () ","function map(promises, fn, options, _filter) ","Promise.prototype.map = function (fn, options) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.map = function (promises, fn, options, _filter) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","},\"./async.js\":2,\"./util.js\":38}],20:[function(_dereq_,module,exports){","function(Promise, INTERNAL, tryConvertToPromise, apiRejection) ","Promise.method = function (fn) ","    if (typeof fn !== \"function\") ","        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    return function () ","Promise.attempt = Promise[\"try\"] = function (fn, args, ctx) ","    if (typeof fn !== \"function\") ","        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype._resolveFromSyncValue = function (value) ","},\"./util.js\":38}],21:[function(_dereq_,module,exports){","module.exports = function(Promise) ","function spreadAdapter(val, nodeback) ","function successAdapter(val, nodeback) ","function errorAdapter(reason, nodeback) ","Promise.prototype.nodeify = function (nodeback, options) ","    if (typeof nodeback == \"function\") ","},\"./async.js\":2,\"./util.js\":38}],22:[function(_dereq_,module,exports){","module.exports = function(Promise, PromiseArray) ","Promise.prototype.progressed = function (handler) ","Promise.prototype._progress = function (progressValue) ","Promise.prototype._progressHandlerAt = function (index) ","Promise.prototype._doProgressWith = function (progression) ","Promise.prototype._progressUnchecked = function (progressValue) ","            if (typeof handler === \"function\") ","        if (typeof handler === \"function\") ","},\"./async.js\":2,\"./util.js\":38}],23:[function(_dereq_,module,exports){","module.exports = function() ","var makeSelfResolutionError = function () ","var reflect = function() ","var apiRejection = function(msg) ","    getDomain = function() ","    getDomain = function() ","var INTERNAL = function()};","function Promise(resolver) ","    if (typeof resolver !== \"function\") ","        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");","Promise.prototype.toString = function () ","Promise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) ","            if (typeof item === \"function\") ","                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));","Promise.prototype.reflect = function () ","Promise.prototype.then = function (didFulfill, didReject, didProgress) ","        typeof didFulfill !== \"function\" \u0026\u0026","        typeof didReject !== \"function\") ","        var msg = \".then() only accepts functions but was passed: \" +","Promise.prototype.done = function (didFulfill, didReject, didProgress) ","Promise.prototype.spread = function (didFulfill, didReject) ","Promise.prototype.isCancellable = function () ","Promise.prototype.toJSON = function () ","Promise.prototype.all = function () ","Promise.prototype.error = function (fn) ","Promise.is = function (val) ","Promise.fromNode = function(fn) ","Promise.all = function (promises) ","Promise.defer = Promise.pending = function () ","Promise.cast = function (obj) ","Promise.reject = Promise.rejected = function (reason) ","Promise.setScheduler = function(fn) ","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype._then = function (","Promise.prototype._settlePromiseAtPostResolution = function (index) ","Promise.prototype._length = function () ","Promise.prototype._isFollowingOrFulfilledOrRejected = function () ","Promise.prototype._isFollowing = function () ","Promise.prototype._setLength = function (len) ","Promise.prototype._setFulfilled = function () ","Promise.prototype._setRejected = function () ","Promise.prototype._setFollowing = function () ","Promise.prototype._setIsFinal = function () ","Promise.prototype._isFinal = function () ","Promise.prototype._cancellable = function () ","Promise.prototype._setCancellable = function () ","Promise.prototype._unsetCancellable = function () ","Promise.prototype._setIsMigrated = function () ","Promise.prototype._unsetIsMigrated = function () ","Promise.prototype._isMigrated = function () ","Promise.prototype._receiverAt = function (index) ","Promise.prototype._promiseAt = function (index) ","Promise.prototype._fulfillmentHandlerAt = function (index) ","Promise.prototype._rejectionHandlerAt = function (index) ","Promise.prototype._boundValue = function() ","Promise.prototype._migrateCallbacks = function (follower, index) ","Promise.prototype._addCallbacks = function (","        if (typeof fulfill === \"function\" \u0026\u0026 !this._isCarryingStackTrace()) ","        if (typeof reject === \"function\") ","        if (typeof progress === \"function\") ","        if (typeof fulfill === \"function\") ","        if (typeof reject === \"function\") ","        if (typeof progress === \"function\") ","Promise.prototype._setProxyHandlers = function (receiver, promiseSlotValue) ","Promise.prototype._proxyPromiseArray = function (promiseArray, index) ","Promise.prototype._resolveCallback = function(value, shouldBind) ","function(reason, synchronous, shouldNotMarkOriginatingFromRejection) ","Promise.prototype._resolveFromResolver = function (resolver) ","    var r = tryCatch(resolver)(function(value) ","    }, function (reason) ","Promise.prototype._settlePromiseFromHandler = function (","Promise.prototype._target = function() ","Promise.prototype._followee = function() ","Promise.prototype._setFollowee = function(promise) ","Promise.prototype._cleanValues = function () ","Promise.prototype._propagateFrom = function (parent, flags) ","Promise.prototype._fulfill = function (value) ","Promise.prototype._reject = function (reason, carriedStackTrace) ","Promise.prototype._settlePromiseAt = function (index) ","    if (typeof handler === \"function\") ","Promise.prototype._clearCallbackDataAtIndex = function(index) ","Promise.prototype._isSettlePromisesQueued = function () ","Promise.prototype._setSettlePromisesQueued = function () ","Promise.prototype._unsetSettlePromisesQueued = function () ","Promise.prototype._queueSettlePromises = function() ","Promise.prototype._fulfillUnchecked = function (value) ","Promise.prototype._rejectUncheckedCheckError = function (reason) ","Promise.prototype._rejectUnchecked = function (reason, trace) ","        async.throwLater(function(e) ","Promise.prototype._settlePromises = function () ","    function fillTypes(value)                                               ","    fillTypes(function()});                                                 ","},\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL, tryConvertToPromise,","function toResolutionValue(val) ","function PromiseArray(values) ","PromiseArray.prototype.length = function () ","PromiseArray.prototype.promise = function () ","PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) ","PromiseArray.prototype._isResolved = function () ","PromiseArray.prototype._resolve = function (value) ","PromiseArray.prototype._reject = function (reason) ","PromiseArray.prototype._promiseProgressed = function (progressValue, index) ","PromiseArray.prototype._promiseFulfilled = function (value, index) ","PromiseArray.prototype._promiseRejected = function (reason, index) ","PromiseArray.prototype.shouldCopyValues = function () ","PromiseArray.prototype.getActualLength = function (len) ","},\"./util.js\":38}],25:[function(_dereq_,module,exports){","function isUntypedError(obj) ","function wrapAsOperationalError(obj) ","function nodebackForPromise(promise) ","    return function(err, value) ","    PromiseResolver = function (promise) ","    PromiseResolver = function (promise) ","        get: function() ","PromiseResolver.prototype.toString = function () ","PromiseResolver.prototype.fulfill = function (value) ","PromiseResolver.prototype.reject = function (reason) ","PromiseResolver.prototype.progress = function (value) ","PromiseResolver.prototype.cancel = function (err) ","PromiseResolver.prototype.timeout = function () ","PromiseResolver.prototype.isResolved = function () ","PromiseResolver.prototype.toJSON = function () ","},\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL) ","var defaultFilter = function(name) ","function propsFilter(key) ","function isPromisified(fn) ","function hasPromisified(obj, key, suffix) ","function checkValid(ret, suffix, suffixRegexp) ","function promisifiableMethods(obj, suffix, suffixRegexp, filter) ","        if (typeof value === \"function\" \u0026\u0026","var escapeIdentRegex = function(str) ","var switchCaseArgumentOrder = function(likelyArgumentCount) ","var argumentSequence = function(argumentCount) ","var parameterDeclaration = function(parameterCount) ","var parameterCount = function(fn) ","function(callback, receiver, originalName, fn) ","    function generateCallForArgumentCount(count) ","    function generateArgumentSwitchCase() ","        var ret = function (Parameters)                                     \\n\\","function makeNodePromisifiedClosure(callback, receiver, _, fn) ","    var defaultThis = (function() return this;})();","    function promisified() ","function promisifyAll(obj, suffix, filter, promisifier) ","            var promisified = promisifier(fn, function() ","function promisify(callback, receiver) ","Promise.promisify = function (fn, receiver) ","    if (typeof fn !== \"function\") ","        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.promisifyAll = function (target, options) ","    if (typeof target !== \"function\" \u0026\u0026 typeof target !== \"object\") ","        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");","    if (typeof filter !== \"function\") filter = defaultFilter;","    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;","},\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(_dereq_,module,exports){","module.exports = function(","function PropertiesPromiseArray(obj) ","PropertiesPromiseArray.prototype._init = function () ","PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) ","PropertiesPromiseArray.prototype._promiseProgressed = function (value, index) ","PropertiesPromiseArray.prototype.shouldCopyValues = function () ","PropertiesPromiseArray.prototype.getActualLength = function (len) ","function props(promises) ","Promise.prototype.props = function () ","Promise.props = function (promises) ","},\"./es5.js\":14,\"./util.js\":38}],28:[function(_dereq_,module,exports){","function arrayMove(src, srcIndex, dst, dstIndex, len) ","function Queue(capacity) ","Queue.prototype._willBeOverCapacity = function (size) ","Queue.prototype._pushOne = function (arg) ","Queue.prototype._unshiftOne = function(value) ","Queue.prototype.unshift = function(fn, receiver, arg) ","Queue.prototype.push = function (fn, receiver, arg) ","Queue.prototype.shift = function () ","Queue.prototype.length = function () ","Queue.prototype._checkCapacity = function (size) ","Queue.prototype._resizeTo = function (capacity) ","},}],29:[function(_dereq_,module,exports){","module.exports = function(","var raceLater = function (promise) ","    return promise.then(function(array) ","function race(promises, parent) ","Promise.race = function (promises) ","Promise.prototype.race = function () ","},\"./util.js\":38}],30:[function(_dereq_,module,exports){","module.exports = function(Promise,","function ReductionPromiseArray(promises, fn, accum, _each) ","function init() ","ReductionPromiseArray.prototype._init = function () };","ReductionPromiseArray.prototype._resolveEmptyArray = function () ","ReductionPromiseArray.prototype._promiseFulfilled = function (value, index) ","function reduce(promises, fn, initialValue, _each) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype.reduce = function (fn, initialValue) ","Promise.reduce = function (promises, fn, initialValue, _each) ","},\"./async.js\":2,\"./util.js\":38}],31:[function(_dereq_,module,exports){","var noAsyncScheduler = function() ","                ? function(fn)  GlobalSetImmediate.call(global, fn); }","                : function(fn)  ProcessNextTick.call(process, fn); };","    schedule = function(fn) ","        return function()  div.classList.toggle(\"foo\"); };","    schedule = function (fn) ","    schedule = function (fn) ","},\"./util\":38}],32:[function(_dereq_,module,exports){","    function(Promise, PromiseArray) ","function SettledPromiseArray(values) ","SettledPromiseArray.prototype._promiseResolved = function (index, inspection) ","SettledPromiseArray.prototype._promiseFulfilled = function (value, index) ","SettledPromiseArray.prototype._promiseRejected = function (reason, index) ","Promise.settle = function (promises) ","Promise.prototype.settle = function () ","},\"./util.js\":38}],33:[function(_dereq_,module,exports){","function(Promise, PromiseArray, apiRejection) ","function SomePromiseArray(values) ","SomePromiseArray.prototype._init = function () ","SomePromiseArray.prototype.init = function () ","SomePromiseArray.prototype.setUnwrap = function () ","SomePromiseArray.prototype.howMany = function () ","SomePromiseArray.prototype.setHowMany = function (count) ","SomePromiseArray.prototype._promiseFulfilled = function (value) ","SomePromiseArray.prototype._promiseRejected = function (reason) ","SomePromiseArray.prototype._fulfilled = function () ","SomePromiseArray.prototype._rejected = function () ","SomePromiseArray.prototype._addRejected = function (reason) ","SomePromiseArray.prototype._addFulfilled = function (value) ","SomePromiseArray.prototype._canPossiblyFulfill = function () ","SomePromiseArray.prototype._getRangeError = function (count) ","SomePromiseArray.prototype._resolveEmptyArray = function () ","function some(promises, howMany) ","Promise.some = function (promises, howMany) ","Promise.prototype.some = function (howMany) ","},\"./errors.js\":13,\"./util.js\":38}],34:[function(_dereq_,module,exports){","module.exports = function(Promise) ","function PromiseInspection(promise) ","PromiseInspection.prototype.value = function () ","PromiseInspection.prototype.reason = function () ","Promise.prototype._isFulfilled = function () ","Promise.prototype._isRejected = function () ","Promise.prototype._isPending = function () ","Promise.prototype._isResolved = function () ","Promise.prototype.isPending = function() ","Promise.prototype.isRejected = function() ","Promise.prototype.isFulfilled = function() ","Promise.prototype.isResolved = function() ","Promise.prototype._value = function() ","Promise.prototype._reason = function() ","Promise.prototype.value = function() ","Promise.prototype.reason = function() ","},}],35:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL) ","function tryConvertToPromise(obj, context) ","        } else if (typeof then === \"function\") ","function getThen(obj) ","function isAnyBluebirdPromise(obj) ","function doThenable(x, then, context) ","    function resolveFromThenable(value) ","    function rejectFromThenable(reason) ","    function progressFromThenable(value) ","        if (typeof promise._progress === \"function\") ","},\"./util.js\":38}],36:[function(_dereq_,module,exports){","module.exports = function(Promise, INTERNAL) ","var afterTimeout = function (promise, message) ","var afterValue = function(value)  return delay(+this).thenReturn(value); };","var delay = Promise.delay = function (value, ms) ","        setTimeout(function()  ret._fulfill(); }, ms);","Promise.prototype.delay = function (ms) ","function successClear(value) ","function failureClear(reason) ","Promise.prototype.timeout = function (ms, message) ","    var handle = setTimeout(function timeoutTimeout() ","},\"./util.js\":38}],37:[function(_dereq_,module,exports){","module.exports = function (Promise, apiRejection, tryConvertToPromise,","    function inspectionMapper(inspections) ","    function thrower(e) ","        setTimeout(function()throw e;}, 0);","    function castPreservingDisposable(thenable) ","            typeof thenable._isDisposable === \"function\" \u0026\u0026","            typeof thenable._getDisposer === \"function\" \u0026\u0026","    function dispose(resources, inspection) ","        function iterator() ","    function disposerSuccess(value) ","    function disposerFail(reason) ","    function Disposer(data, promise, context) ","    Disposer.prototype.data = function () ","    Disposer.prototype.promise = function () ","    Disposer.prototype.resource = function () ","    Disposer.prototype.tryDispose = function(inspection) ","    Disposer.isDisposer = function (d) ","                typeof d.resource === \"function\" \u0026\u0026","                typeof d.tryDispose === \"function\");","    function FunctionDisposer(fn, promise, context) ","    FunctionDisposer.prototype.doDispose = function (resource, inspection) ","    function maybeUnwrapDisposer(value) ","    Promise.using = function () ","        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","            .then(function(vals) ","    Promise.prototype._setDisposable = function (disposer) ","    Promise.prototype._isDisposable = function () ","    Promise.prototype._getDisposer = function () ","    Promise.prototype._unsetDisposable = function () ","    Promise.prototype.disposer = function (fn) ","        if (typeof fn === \"function\") ","},\"./errors.js\":13,\"./util.js\":38}],38:[function(_dereq_,module,exports){","var haveGetters = (function()","            get: function () ","function tryCatcher() ","function tryCatch(fn) ","var inherits = function(Child, Parent) ","    function T() ","function isPrimitive(val) ","function isObject(value) ","function maybeWrapAsError(maybeError) ","function withAppended(target, appendee) ","function getDataPropertyOrDefault(obj, key, defaultValue) ","function notEnumerableProp(obj, name, value) ","function thrower(r) ","var inheritedDataKeys = (function() ","    var isExcludedProto = function(val) ","        return function(obj) ","        return function(obj) ","function isClass(fn) ","        if (typeof fn === \"function\") ","function toFastProperties(obj) ","    function f() }","function isIdentifier(str) ","function filledRange(count, prefix, suffix) ","function safeToString(obj) ","function markAsOriginatingFromRejection(e) ","function originatesFromRejection(e) ","function canAttachTrace(obj) ","var ensureErrorObject = (function() ","        return function(value) ","        return function(value) ","function classString(obj) ","function copyDescriptors(from, to, filter) ","                 typeof chrome.loadTimes === \"function\",","ret.isRecentNode = ret.isNode \u0026\u0026 (function() "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\browser\\bluebird.min.js","LineCount":31,"CharCount":70044,"Comments":["/* @preserve"," * The MIT License (MIT)"," * "," * Copyright (c) 2013-2015 Petka Antonov"," * "," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," * "," * The above copyright notice and this permission notice shall be included in"," * all copies or substantial portions of the Software."," * "," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN"," * THE SOFTWARE."," * "," */","/**"," * bluebird build version 2.10.2"," * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, cancel, using, filter, any, each, timers","*/","!function(t){if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],t);else{var e;\"undefined\"!=typeof window?e=window:\"undefined\"!=typeof global?e=global:\"undefined\"!=typeof self\u0026\u0026(e=self),e.Promise=t()}}(function(){var t,e,r;return function n(t,e,r){function i(s,a){if(!e[s]){if(!t[s]){var u=\"function\"==typeof _dereq_\u0026\u0026_dereq_;if(!a\u0026\u0026u)return u(s,!0);if(o)return o(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var r=t[s][1][e];return i(r?r:e)},l,l.exports,n,t,e,r)}return e[s].exports}for(var o=\"function\"==typeof _dereq_\u0026\u0026_dereq_,s=0;s\u003cr.length;s++)i(r[s]);return i}({1:[function(t,e){\"use strict\";e.exports=function(t){function e(t){var e=new r(t),n=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),n}var r=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e){\"use strict\";function r(){this._isTickUsed=!1,this._lateQueue=new c(16),this._normalQueue=new c(16),this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=u.isStatic?u(this.drainQueues):u}function n(t,e,r){this._lateQueue.push(t,e,r),this._queueTick()}function i(t,e,r){this._normalQueue.push(t,e,r),this._queueTick()}function o(t){this._normalQueue._pushOne(t),this._queueTick()}var s;try{throw new Error}catch(a){s=a}var u=t(\"./schedule.js\"),c=t(\"./queue.js\"),l=t(\"./util.js\");r.prototype.disableTrampolineIfNecessary=function(){l.hasDevTools\u0026\u0026(this._trampolineEnabled=!1)},r.prototype.enableTrampoline=function(){this._trampolineEnabled||(this._trampolineEnabled=!0,this._schedule=function(t){setTimeout(t,0)})},r.prototype.haveItemsQueued=function(){return this._normalQueue.length()\u003e0},r.prototype.throwLater=function(t,e){if(1===arguments.length\u0026\u0026(e=t,t=function(){throw e}),\"undefined\"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(r){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")}},l.hasDevTools?(u.isStatic\u0026\u0026(u=function(t){setTimeout(t,0)}),r.prototype.invokeLater=function(t,e,r){this._trampolineEnabled?n.call(this,t,e,r):this._schedule(function(){setTimeout(function(){t.call(e,r)},100)})},r.prototype.invoke=function(t,e,r){this._trampolineEnabled?i.call(this,t,e,r):this._schedule(function(){t.call(e,r)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?o.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=n,r.prototype.invoke=i,r.prototype.settlePromises=o),r.prototype.invokeFirst=function(t,e,r){this._normalQueue.unshift(t,e,r),this._queueTick()},r.prototype._drainQueue=function(t){for(;t.length()\u003e0;){var e=t.shift();if(\"function\"==typeof e){var r=t.shift(),n=t.shift();e.call(r,n)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=new r,e.exports.firstLineError=s},{\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(t,e){\"use strict\";e.exports=function(t,e,r){var n=function(t,e){this._reject(e)},i=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(n,n,null,this,t)},o=function(t,e){this._isPending()\u0026\u0026this._resolveCallback(e.target)},s=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(n){var a=r(n),u=new t(e);u._propagateFrom(this,1);var c=this._target();if(u._setBoundTo(a),a instanceof t){var l={promiseRejectionQueued:!1,promise:u,target:c,bindingPromise:a};c._then(e,i,u._progress,u,l),a._then(o,s,u._progress,u,l)}else u._resolveCallback(c);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=131072|this._bitField,this._boundTo=t):this._bitField=-131073\u0026this._bitField},t.prototype._isBound=function(){return 131072===(131072\u0026this._bitField)},t.bind=function(n,i){var o=r(n),s=new t(e);return s._setBoundTo(o),o instanceof t?o._then(function(){s._resolveCallback(i)},s._reject,s._progress,s,null):s._resolveCallback(i),s}}},{}],4:[function(t,e){\"use strict\";function r(){try{Promise===i\u0026\u0026(Promise=n)}catch(t){}return i}var n;\"undefined\"!=typeof Promise\u0026\u0026(n=Promise);var i=t(\"./promise.js\")();i.noConflict=r,e.exports=i},{\"./promise.js\":23}],5:[function(t,e){\"use strict\";var r=Object.create;if(r){var n=r(null),i=r(null);n[\" size\"]=i[\" size\"]=0}e.exports=function(e){function r(t,r){var n;if(null!=t\u0026\u0026(n=t[r]),\"function\"!=typeof n){var i=\"Object \"+a.classString(t)+\" has no method '\"+a.toString(r)+\"'\";throw new e.TypeError(i)}return n}function n(t){var e=this.pop(),n=r(t,e);return n.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0\u003ee\u0026\u0026(e=Math.max(0,e+t.length)),t[e]}{var s,a=t(\"./util.js\"),u=a.canEvaluate;a.isIdentifier}e.prototype.call=function(t){for(var e=arguments.length,r=new Array(e-1),i=1;e\u003ei;++i)r[i-1]=arguments[i];return r.push(t),this._then(n,void 0,void 0,r,void 0)},e.prototype.get=function(t){var e,r=\"number\"==typeof t;if(r)e=o;else if(u){var n=s(t);e=null!==n?n:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],6:[function(t,e){\"use strict\";e.exports=function(e){var r=t(\"./errors.js\"),n=t(\"./async.js\"),i=r.CancellationError;e.prototype._cancel=function(t){if(!this.isCancellable())return this;for(var e,r=this;void 0!==(e=r._cancellationParent)\u0026\u0026e.isCancellable();)r=e;this._unsetCancellable(),r._target()._rejectCallback(t,!1,!0)},e.prototype.cancel=function(t){return this.isCancellable()?(void 0===t\u0026\u0026(t=new i),n.invokeLater(this._cancel,this,t),this):this},e.prototype.cancellable=function(){return this._cancellable()?this:(n.enableTrampoline(),this._setCancellable(),this._cancellationParent=void 0,this)},e.prototype.uncancellable=function(){var t=this.then();return t._unsetCancellable(),t},e.prototype.fork=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);return n._setCancellable(),n._cancellationParent=void 0,n}}},{\"./async.js\":2,\"./errors.js\":13}],7:[function(t,e){\"use strict\";e.exports=function(){function e(t){this._parent=t;var r=this._length=1+(void 0===t?0:t._length);j(this,e),r\u003e32\u0026\u0026this.uncycle()}function r(t,e){for(var r=0;r\u003ce.length-1;++r)e[r].push(\"From previous event:\"),e[r]=e[r].join(\"\\n\");return r\u003ce.length\u0026\u0026(e[r]=e[r].join(\"\\n\")),t+\"\\n\"+e.join(\"\\n\")}function n(t){for(var e=0;e\u003ct.length;++e)(0===t[e].length||e+1\u003ct.length\u0026\u0026t[e][0]===t[e+1][0])\u0026\u0026(t.splice(e,1),e--)}function i(t){for(var e=t[0],r=1;r\u003ct.length;++r){for(var n=t[r],i=e.length-1,o=e[i],s=-1,a=n.length-1;a\u003e=0;--a)if(n[a]===o){s=a;break}for(var a=s;a\u003e=0;--a){var u=n[a];if(e[i]!==u)break;e.pop(),i--}e=n}}function o(t){for(var e=[],r=0;r\u003ct.length;++r){var n=t[r],i=_.test(n)||\"    (No stack trace)\"===n,o=i\u0026\u0026y(n);i\u0026\u0026!o\u0026\u0026(v\u0026\u0026\" \"!==n.charAt(0)\u0026\u0026(n=\"    \"+n),e.push(n))}return e}function s(t){for(var e=t.stack.replace(/\\s+$/g,\"\").split(\"\\n\"),r=0;r\u003ce.length;++r){var n=e[r];if(\"    (No stack trace)\"===n||_.test(n))break}return r\u003e0\u0026\u0026(e=e.slice(r)),e}function a(t){var e;if(\"function\"==typeof t)e=\"[function \"+(t.name||\"anonymous\")+\"]\";else{e=t.toString();var r=/\\[object [a-zA-Z0-9$_]+\\]/;if(r.test(e))try{var n=JSON.stringify(t);e=n}catch(i){}0===e.length\u0026\u0026(e=\"(empty array)\")}return\"(\u003c\"+u(e)+\"\u003e, no stack trace)\"}function u(t){var e=41;return t.length\u003ce?t:t.substr(0,e-3)+\"...\"}function c(t){var e=t.match(g);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}var l,h=t(\"./async.js\"),p=t(\"./util.js\"),f=/[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo|instrumented)/,_=null,d=null,v=!1;p.inherits(e,Error),e.prototype.uncycle=function(){var t=this._length;if(!(2\u003et)){for(var e=[],r={},n=0,i=this;void 0!==i;++n)e.push(i),i=i._parent;t=this._length=n;for(var n=t-1;n\u003e=0;--n){var o=e[n].stack;void 0===r[o]\u0026\u0026(r[o]=n)}for(var n=0;t\u003en;++n){var s=e[n].stack,a=r[s];if(void 0!==a\u0026\u0026a!==n){a\u003e0\u0026\u0026(e[a-1]._parent=void 0,e[a-1]._length=1),e[n]._parent=void 0,e[n]._length=1;var u=n\u003e0?e[n-1]:this;t-1\u003ea?(u._parent=e[a+1],u._parent.uncycle(),u._length=u._parent._length+1):(u._parent=void 0,u._length=1);for(var c=u._length+1,l=n-2;l\u003e=0;--l)e[l]._length=c,c++;return}}}},e.prototype.parent=function(){return this._parent},e.prototype.hasParent=function(){return void 0!==this._parent},e.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var s=e.parseStackAndMessage(t),a=s.message,u=[s.stack],c=this;void 0!==c;)u.push(o(c.stack.split(\"\\n\"))),c=c._parent;i(u),n(u),p.notEnumerableProp(t,\"stack\",r(a,u)),p.notEnumerableProp(t,\"__stackCleaned__\",!0)}},e.parseStackAndMessage=function(t){var e=t.stack,r=t.toString();return e=\"string\"==typeof e\u0026\u0026e.length\u003e0?s(t):[\"    (No stack trace)\"],{message:r,stack:o(e)}},e.formatAndLogError=function(t,e){if(\"undefined\"!=typeof console){var r;if(\"object\"==typeof t||\"function\"==typeof t){var n=t.stack;r=e+d(n,t)}else r=e+String(t);\"function\"==typeof l?l(r):(\"function\"==typeof console.log||\"object\"==typeof console.log)\u0026\u0026console.log(r)}},e.unhandledRejection=function(t){e.formatAndLogError(t,\"^--- With additional stack trace: \")},e.isSupported=function(){return\"function\"==typeof j},e.fireRejectionEvent=function(t,r,n,i){var o=!1;try{\"function\"==typeof r\u0026\u0026(o=!0,\"rejectionHandled\"===t?r(i):r(n,i))}catch(s){h.throwLater(s)}var a=!1;try{a=b(t,n,i)}catch(s){a=!0,h.throwLater(s)}var u=!1;if(m)try{u=m(t.toLowerCase(),{reason:n,promise:i})}catch(s){u=!0,h.throwLater(s)}a||o||u||\"unhandledRejection\"!==t||e.formatAndLogError(n,\"Unhandled rejection \")};var y=function(){return!1},g=/[\\/\u003c\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;e.setBounds=function(t,r){if(e.isSupported()){for(var n,i,o=t.stack.split(\"\\n\"),s=r.stack.split(\"\\n\"),a=-1,u=-1,l=0;l\u003co.length;++l){var h=c(o[l]);if(h){n=h.fileName,a=h.line;break}}for(var l=0;l\u003cs.length;++l){var h=c(s[l]);if(h){i=h.fileName,u=h.line;break}}0\u003ea||0\u003eu||!n||!i||n!==i||a\u003e=u||(y=function(t){if(f.test(t))return!0;var e=c(t);return e\u0026\u0026e.fileName===n\u0026\u0026a\u003c=e.line\u0026\u0026e.line\u003c=u?!0:!1})}};var m,j=function(){var t=/^\\s*at\\s*/,e=function(t,e){return\"string\"==typeof t?t:void 0!==e.name\u0026\u0026void 0!==e.message?e.toString():a(e)};if(\"number\"==typeof Error.stackTraceLimit\u0026\u0026\"function\"==typeof Error.captureStackTrace){Error.stackTraceLimit=Error.stackTraceLimit+6,_=t,d=e;var r=Error.captureStackTrace;return y=function(t){return f.test(t)},function(t,e){Error.stackTraceLimit=Error.stackTraceLimit+6,r(t,e),Error.stackTraceLimit=Error.stackTraceLimit-6}}var n=new Error;if(\"string\"==typeof n.stack\u0026\u0026n.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\")\u003e=0)return _=/@/,d=e,v=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i=\"stack\"in o}return\"stack\"in n||!i||\"number\"!=typeof Error.stackTraceLimit?(d=function(t,e){return\"string\"==typeof t?t:\"object\"!=typeof e\u0026\u0026\"function\"!=typeof e||void 0===e.name||void 0===e.message?a(e):e.toString()},null):(_=t,d=e,function(t){Error.stackTraceLimit=Error.stackTraceLimit+6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit=Error.stackTraceLimit-6})}([]),b=function(){if(p.isNode)return function(t,e,r){return\"rejectionHandled\"===t?process.emit(t,r):process.emit(t,e,r)};var t=!1,e=!0;try{var r=new self.CustomEvent(\"test\");t=r instanceof CustomEvent}catch(n){}if(!t)try{var i=document.createEvent(\"CustomEvent\");i.initCustomEvent(\"testingtheevent\",!1,!0,{}),self.dispatchEvent(i)}catch(n){e=!1}e\u0026\u0026(m=function(e,r){var n;return t?n=new self.CustomEvent(e,{detail:r,bubbles:!1,cancelable:!0}):self.dispatchEvent\u0026\u0026(n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,!1,!0,r)),n?!self.dispatchEvent(n):!1});var o={};return o.unhandledRejection=\"onunhandledRejection\".toLowerCase(),o.rejectionHandled=\"onrejectionHandled\".toLowerCase(),function(t,e,r){var n=o[t],i=self[n];return i?(\"rejectionHandled\"===t?i.call(self,r):i.call(self,e,r),!0):!1}}();return\"undefined\"!=typeof console\u0026\u0026\"undefined\"!=typeof console.warn\u0026\u0026(l=function(t){console.warn(t)},p.isNode\u0026\u0026process.stderr.isTTY?l=function(t){process.stderr.write(\"\u001b[31m\"+t+\"\u001b[39m\\n\")}:p.isNode||\"string\"!=typeof(new Error).stack||(l=function(t){console.warn(\"%c\"+t,\"color: red\")})),e}},{\"./async.js\":2,\"./util.js\":38}],8:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e,r){this._instances=t,this._callback=e,this._promise=r}function n(t,e){var r={},n=s(t).call(r,e);if(n===a)return n;var i=u(r);return i.length?(a.e=new c(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"),a):n}var i=t(\"./util.js\"),o=t(\"./errors.js\"),s=i.tryCatch,a=i.errorObj,u=t(\"./es5.js\").keys,c=o.TypeError;return r.prototype.doFilter=function(t){for(var r=this._callback,i=this._promise,o=i._boundValue(),u=0,c=this._instances.length;c\u003eu;++u){var l=this._instances[u],h=l===Error||null!=l\u0026\u0026l.prototype instanceof Error;if(h\u0026\u0026t instanceof l){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}if(\"function\"==typeof l\u0026\u0026!h){var f=n(l,t);if(f===a){t=a.e;break}if(f){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}}}return e.e=t,e},r}},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(t,e){\"use strict\";e.exports=function(t,e,r){function n(){this._trace=new e(o())}function i(){return r()?new n:void 0}function o(){var t=s.length-1;return t\u003e=0?s[t]:void 0}var s=[];return n.prototype._pushContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.push(this._trace)},n.prototype._popContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.pop()},t.prototype._peekContext=o,t.prototype._pushContext=n.prototype._pushContext,t.prototype._popContext=n.prototype._popContext,i}},{}],10:[function(t,e){\"use strict\";e.exports=function(e,r){var n,i,o=e._getDomain,s=t(\"./async.js\"),a=t(\"./errors.js\").Warning,u=t(\"./util.js\"),c=u.canAttachTrace,l=!1||u.isNode\u0026\u0026(!!process.env.BLUEBIRD_DEBUG||\"development\"===process.env.NODE_ENV);return u.isNode\u0026\u00260==process.env.BLUEBIRD_DEBUG\u0026\u0026(l=!1),l\u0026\u0026s.disableTrampolineIfNecessary(),e.prototype._ignoreRejections=function(){this._unsetRejectionIsUnhandled(),this._bitField=16777216|this._bitField},e.prototype._ensurePossibleRejectionHandled=function(){0===(16777216\u0026this._bitField)\u0026\u0026(this._setRejectionIsUnhandled(),s.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){r.fireRejectionEvent(\"rejectionHandled\",n,void 0,this)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._getCarriedStackTrace()||this._settledValue;this._setUnhandledRejectionIsNotified(),r.fireRejectionEvent(\"unhandledRejection\",i,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=524288|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-524289\u0026this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(524288\u0026this._bitField)\u003e0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=2097152|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-2097153\u0026this._bitField,this._isUnhandledRejectionNotified()\u0026\u0026(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(2097152\u0026this._bitField)\u003e0},e.prototype._setCarriedStackTrace=function(t){this._bitField=1048576|this._bitField,this._fulfillmentHandler0=t},e.prototype._isCarryingStackTrace=function(){return(1048576\u0026this._bitField)\u003e0},e.prototype._getCarriedStackTrace=function(){return this._isCarryingStackTrace()?this._fulfillmentHandler0:void 0},e.prototype._captureStackTrace=function(){return l\u0026\u0026(this._trace=new r(this._peekContext())),this},e.prototype._attachExtraTrace=function(t,e){if(l\u0026\u0026c(t)){var n=this._trace;if(void 0!==n\u0026\u0026e\u0026\u0026(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var i=r.parseStackAndMessage(t);u.notEnumerableProp(t,\"stack\",i.message+\"\\n\"+i.stack.join(\"\\n\")),u.notEnumerableProp(t,\"__stackCleaned__\",!0)}}},e.prototype._warn=function(t){var e=new a(t),n=this._peekContext();if(n)n.attachExtraTrace(e);else{var i=r.parseStackAndMessage(e);e.stack=i.message+\"\\n\"+i.stack.join(\"\\n\")}r.formatAndLogError(e,\"\")},e.onPossiblyUnhandledRejection=function(t){var e=o();i=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.onUnhandledRejectionHandled=function(t){var e=o();n=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.longStackTraces=function(){if(s.haveItemsQueued()\u0026\u0026l===!1)throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/DT1qyG\\n\");l=r.isSupported(),l\u0026\u0026s.disableTrampolineIfNecessary()},e.hasLongStackTraces=function(){return l\u0026\u0026r.isSupported()},r.isSupported()||(e.longStackTraces=function(){},l=!1),function(){return l}}},{\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(t,e){\"use strict\";var r=t(\"./util.js\"),n=r.isPrimitive;e.exports=function(t){var e=function(){return this},r=function(){throw this},i=function(){},o=function(){throw void 0},s=function(t,e){return 1===e?function(){throw t}:2===e?function(){return t}:void 0};t.prototype[\"return\"]=t.prototype.thenReturn=function(r){return void 0===r?this.then(i):n(r)?this._then(s(r,2),void 0,void 0,void 0,void 0):(r instanceof t\u0026\u0026r._ignoreRejections(),this._then(e,void 0,void 0,r,void 0))},t.prototype[\"throw\"]=t.prototype.thenThrow=function(t){return void 0===t?this.then(o):n(t)?this._then(s(t,1),void 0,void 0,void 0,void 0):this._then(r,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],12:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.reduce;t.prototype.each=function(t){return r(this,t,null,e)},t.each=function(t,n){return r(t,n,null,e)}}},{}],13:[function(t,e){\"use strict\";function r(t,e){function r(n){return this instanceof r?(l(this,\"message\",\"string\"==typeof n?n:e),l(this,\"name\",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new r(n)}return c(r,Error),r}function n(t){return this instanceof n?(l(this,\"name\",\"OperationalError\"),l(this,\"message\",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(l(this,\"message\",t.message),l(this,\"stack\",t.stack)):Error.captureStackTrace\u0026\u0026Error.captureStackTrace(this,this.constructor))):new n(t)}var i,o,s=t(\"./es5.js\"),a=s.freeze,u=t(\"./util.js\"),c=u.inherits,l=u.notEnumerableProp,h=r(\"Warning\",\"warning\"),p=r(\"CancellationError\",\"cancellation error\"),f=r(\"TimeoutError\",\"timeout error\"),_=r(\"AggregateError\",\"aggregate error\");try{i=TypeError,o=RangeError}catch(d){i=r(\"TypeError\",\"type error\"),o=r(\"RangeError\",\"range error\")}for(var v=\"join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse\".split(\" \"),y=0;y\u003cv.length;++y)\"function\"==typeof Array.prototype[v[y]]\u0026\u0026(_.prototype[v[y]]=Array.prototype[v[y]]);s.defineProperty(_.prototype,\"length\",{value:0,configurable:!1,writable:!0,enumerable:!0}),_.prototype.isOperational=!0;var g=0;_.prototype.toString=function(){var t=Array(4*g+1).join(\" \"),e=\"\\n\"+t+\"AggregateError of:\\n\";g++,t=Array(4*g+1).join(\" \");for(var r=0;r\u003cthis.length;++r){for(var n=this[r]===this?\"[Circular AggregateError]\":this[r]+\"\",i=n.split(\"\\n\"),o=0;o\u003ci.length;++o)i[o]=t+i[o];n=i.join(\"\\n\"),e+=n+\"\\n\"}return g--,e},c(n,Error);var m=Error.__BluebirdErrorTypes__;m||(m=a({CancellationError:p,TimeoutError:f,OperationalError:n,RejectionError:n,AggregateError:_}),l(Error,\"__BluebirdErrorTypes__\",m)),e.exports={Error:Error,TypeError:i,RangeError:o,CancellationError:m.CancellationError,OperationalError:m.OperationalError,TimeoutError:m.TimeoutError,AggregateError:m.AggregateError,Warning:h}},{\"./es5.js\":14,\"./util.js\":38}],14:[function(t,e){var r=function(){\"use strict\";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var r=Object.getOwnPropertyDescriptor(t,e);return!(r\u0026\u0026!r.writable\u0026\u0026!r.set)}};else{var n={}.hasOwnProperty,i={}.toString,o={}.constructor.prototype,s=function(t){var e=[];for(var r in t)n.call(t,r)\u0026\u0026e.push(r);return e},a=function(t,e){return{value:t[e]}},u=function(t,e,r){return t[e]=r.value,t},c=function(t){return t},l=function(t){try{return Object(t).constructor.prototype}catch(e){return o}},h=function(t){try{return\"[object Array]\"===i.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:s,names:s,defineProperty:u,getDescriptor:a,freeze:c,getPrototypeOf:l,isES5:r,propertyIsWritable:function(){return!0}}}},{}],15:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.map;t.prototype.filter=function(t,n){return r(this,t,n,e)},t.filter=function(t,n,i){return r(t,n,i,e)}}},{}],16:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(){return this}function o(){throw this}function s(t){return function(){return t}}function a(t){return function(){throw t}}function u(t,e,r){var n;return n=p(e)?r?s(e):a(e):r?i:o,t._then(n,f,void 0,e,void 0)}function c(t){var i=this.promise,o=this.handler,s=i._isBound()?o.call(i._boundValue()):o();if(void 0!==s){var a=n(s,i);if(a instanceof e)return a=a._target(),u(a,t,i.isFulfilled())}return i.isRejected()?(r.e=t,r):t}function l(t){var r=this.promise,i=this.handler,o=r._isBound()?i.call(r._boundValue(),t):i(t);if(void 0!==o){var s=n(o,r);if(s instanceof e)return s=s._target(),u(s,t,!0)}return t}var h=t(\"./util.js\"),p=h.isPrimitive,f=h.thrower;e.prototype._passThroughHandler=function(t,e){if(\"function\"!=typeof t)return this.then();var r={promise:this,handler:t};return this._then(e?c:l,e?c:void 0,void 0,r,void 0)},e.prototype.lastly=e.prototype[\"finally\"]=function(t){return this._passThroughHandler(t,!0)},e.prototype.tap=function(t){return this._passThroughHandler(t,!1)}}},{\"./util.js\":38}],17:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,r,n){for(var o=0;o\u003cr.length;++o){n._pushContext();var s=h(r[o])(t);if(n._popContext(),s===l){n._pushContext();var a=e.reject(l.e);return n._popContext(),a}var u=i(s,n);if(u instanceof e)return u}return null}function s(t,r,i,o){var s=this._promise=new e(n);s._captureStackTrace(),this._stack=o,this._generatorFunction=t,this._receiver=r,this._generator=void 0,this._yieldHandlers=\"function\"==typeof i?[i].concat(p):p}var a=t(\"./errors.js\"),u=a.TypeError,c=t(\"./util.js\"),l=c.errorObj,h=c.tryCatch,p=[];s.prototype.promise=function(){return this._promise},s.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._next(void 0)},s.prototype._continue=function(t){if(t===l)return this._promise._rejectCallback(t.e,!1,!0);var r=t.value;if(t.done===!0)this._promise._resolveCallback(r);else{var n=i(r,this._promise);if(!(n instanceof e)\u0026\u0026(n=o(n,this._yieldHandlers,this._promise),null===n))return void this._throw(new u(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/4Y4pDk\\n\\n\".replace(\"%s\",r)+\"From coroutine:\\n\"+this._stack.split(\"\\n\").slice(1,-7).join(\"\\n\")));n._then(this._next,this._throw,void 0,this,null)}},s.prototype._throw=function(t){this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator[\"throw\"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},s.prototype._next=function(t){this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},e.coroutine=function(t,e){if(\"function\"!=typeof t)throw new u(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var r=Object(e).yieldHandler,n=s,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new n(void 0,void 0,r,i);return o._generator=e,o._next(void 0),o.promise()}},e.coroutine.addYieldHandler=function(t){if(\"function\"!=typeof t)throw new u(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");p.push(t)},e.spawn=function(t){if(\"function\"!=typeof t)return r(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var n=new s(t,this),i=n.promise();return n._run(e.spawn),i}}},{\"./errors.js\":13,\"./util.js\":38}],18:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){{var o=t(\"./util.js\");o.canEvaluate,o.tryCatch,o.errorObj}e.join=function(){var t,e=arguments.length-1;if(e\u003e0\u0026\u0026\"function\"==typeof arguments[e]){t=arguments[e];var n}for(var i=arguments.length,o=new Array(i),s=0;i\u003es;++s)o[s]=arguments[s];t\u0026\u0026o.pop();var n=new r(o).promise();return void 0!==t?n.spread(t):n}}},{\"./util.js\":38}],19:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,e,r,n){this.constructor$(t),this._promise._captureStackTrace();var i=c();this._callback=null===i?e:i.bind(e),this._preservedValues=n===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=r\u003e=1?[]:d,l.invoke(a,this,void 0)}function a(){this._init$(void 0,-2)}function u(t,e,r,n){var i=\"object\"==typeof r\u0026\u0026null!==r?r.concurrency:0;return i=\"number\"==typeof i\u0026\u0026isFinite(i)\u0026\u0026i\u003e=1?i:0,new s(t,e,i,n)}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj,_={},d=[];h.inherits(s,r),s.prototype._init=function(){},s.prototype._promiseFulfilled=function(t,r){var n=this._values,o=this.length(),s=this._preservedValues,a=this._limit;if(n[r]===_){if(n[r]=t,a\u003e=1\u0026\u0026(this._inFlight--,this._drainQueue(),this._isResolved()))return}else{if(a\u003e=1\u0026\u0026this._inFlight\u003e=a)return n[r]=t,void this._queue.push(r);null!==s\u0026\u0026(s[r]=t);var u=this._callback,c=this._promise._boundValue();this._promise._pushContext();var l=p(u).call(c,t,r,o);if(this._promise._popContext(),l===f)return this._reject(l.e);var h=i(l,this._promise);if(h instanceof e){if(h=h._target(),h._isPending())return a\u003e=1\u0026\u0026this._inFlight++,n[r]=_,h._proxyPromiseArray(this,r);if(!h._isFulfilled())return this._reject(h._reason());l=h._value()}n[r]=l}var d=++this._totalResolved;d\u003e=o\u0026\u0026(null!==s?this._filter(n,s):this._resolve(n))},s.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,r=this._values;t.length\u003e0\u0026\u0026this._inFlight\u003ce;){if(this._isResolved())return;var n=t.pop();this._promiseFulfilled(r[n],n)}},s.prototype._filter=function(t,e){for(var r=e.length,n=new Array(r),i=0,o=0;r\u003eo;++o)t[o]\u0026\u0026(n[i++]=e[o]);n.length=i,this._resolve(n)},s.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return\"function\"!=typeof t?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(this,t,e,null).promise()},e.map=function(t,e,r,i){return\"function\"!=typeof e?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(t,e,r,i).promise()}}},{\"./async.js\":2,\"./util.js\":38}],20:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){var o=t(\"./util.js\"),s=o.tryCatch;e.method=function(t){if(\"function\"!=typeof t)throw new e.TypeError(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");return function(){var n=new e(r);n._captureStackTrace(),n._pushContext();var i=s(t).apply(this,arguments);return n._popContext(),n._resolveFromSyncValue(i),n}},e.attempt=e[\"try\"]=function(t,n,a){if(\"function\"!=typeof t)return i(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var u=new e(r);u._captureStackTrace(),u._pushContext();var c=o.isArray(n)?s(t).apply(a,n):s(t).call(a,n);return u._popContext(),u._resolveFromSyncValue(c),u},e.prototype._resolveFromSyncValue=function(t){t===o.errorObj?this._rejectCallback(t.e,!1,!0):this._resolveCallback(t,!0)}}},{\"./util.js\":38}],21:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e){var r=this;if(!o.isArray(t))return n.call(r,t,e);var i=a(e).apply(r._boundValue(),[null].concat(t));i===u\u0026\u0026s.throwLater(i.e)}function n(t,e){var r=this,n=r._boundValue(),i=void 0===t?a(e).call(n,null):a(e).call(n,null,t);i===u\u0026\u0026s.throwLater(i.e)}function i(t,e){var r=this;if(!t){var n=r._target(),i=n._getCarriedStackTrace();i.cause=t,t=i}var o=a(e).call(r._boundValue(),t);o===u\u0026\u0026s.throwLater(o.e)}var o=t(\"./util.js\"),s=t(\"./async.js\"),a=o.tryCatch,u=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if(\"function\"==typeof t){var o=n;void 0!==e\u0026\u0026Object(e).spread\u0026\u0026(o=r),this._then(o,i,void 0,this,t)}return this}}},{\"./async.js\":2,\"./util.js\":38}],22:[function(t,e){\"use strict\";e.exports=function(e,r){var n=t(\"./util.js\"),i=t(\"./async.js\"),o=n.tryCatch,s=n.errorObj;e.prototype.progressed=function(t){return this._then(void 0,void 0,t,void 0,void 0)},e.prototype._progress=function(t){this._isFollowingOrFulfilledOrRejected()||this._target()._progressUnchecked(t)},e.prototype._progressHandlerAt=function(t){return 0===t?this._progressHandler0:this[(t\u003c\u003c2)+t-5+2]},e.prototype._doProgressWith=function(t){var r=t.value,i=t.handler,a=t.promise,u=t.receiver,c=o(i).call(u,r);if(c===s){if(null!=c.e\u0026\u0026\"StopProgressPropagation\"!==c.e.name){var l=n.canAttachTrace(c.e)?c.e:new Error(n.toString(c.e));a._attachExtraTrace(l),a._progress(c.e)}}else c instanceof e?c._then(a._progress,null,null,a,void 0):a._progress(c)},e.prototype._progressUnchecked=function(t){for(var n=this._length(),o=this._progress,s=0;n\u003es;s++){var a=this._progressHandlerAt(s),u=this._promiseAt(s);if(u instanceof e)\"function\"==typeof a?i.invoke(this._doProgressWith,this,{handler:a,promise:u,receiver:this._receiverAt(s),value:t}):i.invoke(o,u,t);else{var c=this._receiverAt(s);\"function\"==typeof a?a.call(c,t,u):c instanceof r\u0026\u0026!c._isResolved()\u0026\u0026c._promiseProgressed(t,u)}}}}},{\"./async.js\":2,\"./util.js\":38}],23:[function(t,e){\"use strict\";e.exports=function(){function e(t){if(\"function\"!=typeof t)throw new h(\"the promise constructor requires a resolver function\\n\\n    See http://goo.gl/EC22Yn\\n\");if(this.constructor!==e)throw new h(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/KsIlge\\n\");this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._progressHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._settledValue=void 0,t!==p\u0026\u0026this._resolveFromResolver(t)}function r(t){var r=new e(p);r._fulfillmentHandler0=t,r._rejectionHandler0=t,r._progressHandler0=t,r._promise0=t,r._receiver0=t,r._settledValue=t}var n,i=function(){return new h(\"circular promise resolution chain\\n\\n    See http://goo.gl/LhFpo0\\n\")},o=function(){return new e.PromiseInspection(this._target())},s=function(t){return e.reject(new h(t))},a=t(\"./util.js\");n=a.isNode?function(){var t=process.domain;return void 0===t\u0026\u0026(t=null),t}:function(){return null},a.notEnumerableProp(e,\"_getDomain\",n);var u={},c=t(\"./async.js\"),l=t(\"./errors.js\"),h=e.TypeError=l.TypeError;e.RangeError=l.RangeError,e.CancellationError=l.CancellationError,e.TimeoutError=l.TimeoutError,e.OperationalError=l.OperationalError,e.RejectionError=l.OperationalError,e.AggregateError=l.AggregateError;var p=function(){},f={},_={e:null},d=t(\"./thenables.js\")(e,p),v=t(\"./promise_array.js\")(e,p,d,s),y=t(\"./captured_trace.js\")(),g=t(\"./debuggability.js\")(e,y),m=t(\"./context.js\")(e,y,g),j=t(\"./catch_filter.js\")(_),b=t(\"./promise_resolver.js\"),w=b._nodebackForPromise,k=a.errorObj,E=a.tryCatch;return e.prototype.toString=function(){return\"[object Promise]\"},e.prototype.caught=e.prototype[\"catch\"]=function(t){var r=arguments.length;if(r\u003e1){var n,i=new Array(r-1),o=0;for(n=0;r-1\u003en;++n){var s=arguments[n];if(\"function\"!=typeof s)return e.reject(new h(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"));i[o++]=s}i.length=o,t=arguments[n];var a=new j(i,t,this);return this._then(void 0,a.doFilter,void 0,a,void 0)}return this._then(void 0,t,void 0,void 0,void 0)},e.prototype.reflect=function(){return this._then(o,o,void 0,this,void 0)},e.prototype.then=function(t,e,r){if(g()\u0026\u0026arguments.length\u003e0\u0026\u0026\"function\"!=typeof t\u0026\u0026\"function\"!=typeof e){var n=\".then() only accepts functions but was passed: \"+a.classString(t);arguments.length\u003e1\u0026\u0026(n+=\", \"+a.classString(e)),this._warn(n)}return this._then(t,e,r,void 0,void 0)},e.prototype.done=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);","!function(t){if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],t);else{var e;\"undefined\"!=typeof window?e=window:\"undefined\"!=typeof global?e=global:\"undefined\"!=typeof self\u0026\u0026(e=self),e.Promise=t()}}(function(){var t,e,r;return function n(t,e,r){function i(s,a){if(!e[s]){if(!t[s]){var u=\"function\"==typeof _dereq_\u0026\u0026_dereq_;if(!a\u0026\u0026u)return u(s,!0);if(o)return o(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var r=t[s][1][e];return i(r?r:e)},l,l.exports,n,t,e,r)}return e[s].exports}for(var o=\"function\"==typeof _dereq_\u0026\u0026_dereq_,s=0;s\u003cr.length;s++)i(r[s]);return i}({1:[function(t,e){\"use strict\";e.exports=function(t){function e(t){var e=new r(t),n=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),n}var r=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e){\"use strict\";function r(){this._isTickUsed=!1,this._lateQueue=new c(16),this._normalQueue=new c(16),this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=u.isStatic?u(this.drainQueues):u}function n(t,e,r){this._lateQueue.push(t,e,r),this._queueTick()}function i(t,e,r){this._normalQueue.push(t,e,r),this._queueTick()}function o(t){this._normalQueue._pushOne(t),this._queueTick()}var s;try{throw new Error}catch(a){s=a}var u=t(\"./schedule.js\"),c=t(\"./queue.js\"),l=t(\"./util.js\");r.prototype.disableTrampolineIfNecessary=function(){l.hasDevTools\u0026\u0026(this._trampolineEnabled=!1)},r.prototype.enableTrampoline=function(){this._trampolineEnabled||(this._trampolineEnabled=!0,this._schedule=function(t){setTimeout(t,0)})},r.prototype.haveItemsQueued=function(){return this._normalQueue.length()\u003e0},r.prototype.throwLater=function(t,e){if(1===arguments.length\u0026\u0026(e=t,t=function(){throw e}),\"undefined\"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(r){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")}},l.hasDevTools?(u.isStatic\u0026\u0026(u=function(t){setTimeout(t,0)}),r.prototype.invokeLater=function(t,e,r){this._trampolineEnabled?n.call(this,t,e,r):this._schedule(function(){setTimeout(function(){t.call(e,r)},100)})},r.prototype.invoke=function(t,e,r){this._trampolineEnabled?i.call(this,t,e,r):this._schedule(function(){t.call(e,r)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?o.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=n,r.prototype.invoke=i,r.prototype.settlePromises=o),r.prototype.invokeFirst=function(t,e,r){this._normalQueue.unshift(t,e,r),this._queueTick()},r.prototype._drainQueue=function(t){for(;t.length()\u003e0;){var e=t.shift();if(\"function\"==typeof e){var r=t.shift(),n=t.shift();e.call(r,n)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=new r,e.exports.firstLineError=s},{\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(t,e){\"use strict\";e.exports=function(t,e,r){var n=function(t,e){this._reject(e)},i=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(n,n,null,this,t)},o=function(t,e){this._isPending()\u0026\u0026this._resolveCallback(e.target)},s=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(n){var a=r(n),u=new t(e);u._propagateFrom(this,1);var c=this._target();if(u._setBoundTo(a),a instanceof t){var l={promiseRejectionQueued:!1,promise:u,target:c,bindingPromise:a};c._then(e,i,u._progress,u,l),a._then(o,s,u._progress,u,l)}else u._resolveCallback(c);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=131072|this._bitField,this._boundTo=t):this._bitField=-131073\u0026this._bitField},t.prototype._isBound=function(){return 131072===(131072\u0026this._bitField)},t.bind=function(n,i){var o=r(n),s=new t(e);return s._setBoundTo(o),o instanceof t?o._then(function(){s._resolveCallback(i)},s._reject,s._progress,s,null):s._resolveCallback(i),s}}},{}],4:[function(t,e){\"use strict\";function r(){try{Promise===i\u0026\u0026(Promise=n)}catch(t){}return i}var n;\"undefined\"!=typeof Promise\u0026\u0026(n=Promise);var i=t(\"./promise.js\")();i.noConflict=r,e.exports=i},{\"./promise.js\":23}],5:[function(t,e){\"use strict\";var r=Object.create;if(r){var n=r(null),i=r(null);n[\" size\"]=i[\" size\"]=0}e.exports=function(e){function r(t,r){var n;if(null!=t\u0026\u0026(n=t[r]),\"function\"!=typeof n){var i=\"Object \"+a.classString(t)+\" has no method '\"+a.toString(r)+\"'\";throw new e.TypeError(i)}return n}function n(t){var e=this.pop(),n=r(t,e);return n.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0\u003ee\u0026\u0026(e=Math.max(0,e+t.length)),t[e]}{var s,a=t(\"./util.js\"),u=a.canEvaluate;a.isIdentifier}e.prototype.call=function(t){for(var e=arguments.length,r=new Array(e-1),i=1;e\u003ei;++i)r[i-1]=arguments[i];return r.push(t),this._then(n,void 0,void 0,r,void 0)},e.prototype.get=function(t){var e,r=\"number\"==typeof t;if(r)e=o;else if(u){var n=s(t);e=null!==n?n:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],6:[function(t,e){\"use strict\";e.exports=function(e){var r=t(\"./errors.js\"),n=t(\"./async.js\"),i=r.CancellationError;e.prototype._cancel=function(t){if(!this.isCancellable())return this;for(var e,r=this;void 0!==(e=r._cancellationParent)\u0026\u0026e.isCancellable();)r=e;this._unsetCancellable(),r._target()._rejectCallback(t,!1,!0)},e.prototype.cancel=function(t){return this.isCancellable()?(void 0===t\u0026\u0026(t=new i),n.invokeLater(this._cancel,this,t),this):this},e.prototype.cancellable=function(){return this._cancellable()?this:(n.enableTrampoline(),this._setCancellable(),this._cancellationParent=void 0,this)},e.prototype.uncancellable=function(){var t=this.then();return t._unsetCancellable(),t},e.prototype.fork=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);return n._setCancellable(),n._cancellationParent=void 0,n}}},{\"./async.js\":2,\"./errors.js\":13}],7:[function(t,e){\"use strict\";e.exports=function(){function e(t){this._parent=t;var r=this._length=1+(void 0===t?0:t._length);j(this,e),r\u003e32\u0026\u0026this.uncycle()}function r(t,e){for(var r=0;r\u003ce.length-1;++r)e[r].push(\"From previous event:\"),e[r]=e[r].join(\"\\n\");return r\u003ce.length\u0026\u0026(e[r]=e[r].join(\"\\n\")),t+\"\\n\"+e.join(\"\\n\")}function n(t){for(var e=0;e\u003ct.length;++e)(0===t[e].length||e+1\u003ct.length\u0026\u0026t[e][0]===t[e+1][0])\u0026\u0026(t.splice(e,1),e--)}function i(t){for(var e=t[0],r=1;r\u003ct.length;++r){for(var n=t[r],i=e.length-1,o=e[i],s=-1,a=n.length-1;a\u003e=0;--a)if(n[a]===o){s=a;break}for(var a=s;a\u003e=0;--a){var u=n[a];if(e[i]!==u)break;e.pop(),i--}e=n}}function o(t){for(var e=[],r=0;r\u003ct.length;++r){var n=t[r],i=_.test(n)||\"    (No stack trace)\"===n,o=i\u0026\u0026y(n);i\u0026\u0026!o\u0026\u0026(v\u0026\u0026\" \"!==n.charAt(0)\u0026\u0026(n=\"    \"+n),e.push(n))}return e}function s(t){for(var e=t.stack.replace(/\\s+$/g,\"\").split(\"\\n\"),r=0;r\u003ce.length;++r){var n=e[r];if(\"    (No stack trace)\"===n||_.test(n))break}return r\u003e0\u0026\u0026(e=e.slice(r)),e}function a(t){var e;if(\"function\"==typeof t)e=\"[function \"+(t.name||\"anonymous\")+\"]\";else{e=t.toString();var r=/\\[object [a-zA-Z0-9$_]+\\]/;if(r.test(e))try{var n=JSON.stringify(t);e=n}catch(i){}0===e.length\u0026\u0026(e=\"(empty array)\")}return\"(\u003c\"+u(e)+\"\u003e, no stack trace)\"}function u(t){var e=41;return t.length\u003ce?t:t.substr(0,e-3)+\"...\"}function c(t){var e=t.match(g);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}var l,h=t(\"./async.js\"),p=t(\"./util.js\"),f=/[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo|instrumented)/,_=null,d=null,v=!1;p.inherits(e,Error),e.prototype.uncycle=function(){var t=this._length;if(!(2\u003et)){for(var e=[],r={},n=0,i=this;void 0!==i;++n)e.push(i),i=i._parent;t=this._length=n;for(var n=t-1;n\u003e=0;--n){var o=e[n].stack;void 0===r[o]\u0026\u0026(r[o]=n)}for(var n=0;t\u003en;++n){var s=e[n].stack,a=r[s];if(void 0!==a\u0026\u0026a!==n){a\u003e0\u0026\u0026(e[a-1]._parent=void 0,e[a-1]._length=1),e[n]._parent=void 0,e[n]._length=1;var u=n\u003e0?e[n-1]:this;t-1\u003ea?(u._parent=e[a+1],u._parent.uncycle(),u._length=u._parent._length+1):(u._parent=void 0,u._length=1);for(var c=u._length+1,l=n-2;l\u003e=0;--l)e[l]._length=c,c++;return}}}},e.prototype.parent=function(){return this._parent},e.prototype.hasParent=function(){return void 0!==this._parent},e.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var s=e.parseStackAndMessage(t),a=s.message,u=[s.stack],c=this;void 0!==c;)u.push(o(c.stack.split(\"\\n\"))),c=c._parent;i(u),n(u),p.notEnumerableProp(t,\"stack\",r(a,u)),p.notEnumerableProp(t,\"__stackCleaned__\",!0)}},e.parseStackAndMessage=function(t){var e=t.stack,r=t.toString();return e=\"string\"==typeof e\u0026\u0026e.length\u003e0?s(t):[\"    (No stack trace)\"],{message:r,stack:o(e)}},e.formatAndLogError=function(t,e){if(\"undefined\"!=typeof console){var r;if(\"object\"==typeof t||\"function\"==typeof t){var n=t.stack;r=e+d(n,t)}else r=e+String(t);\"function\"==typeof l?l(r):(\"function\"==typeof console.log||\"object\"==typeof console.log)\u0026\u0026console.log(r)}},e.unhandledRejection=function(t){e.formatAndLogError(t,\"^--- With additional stack trace: \")},e.isSupported=function(){return\"function\"==typeof j},e.fireRejectionEvent=function(t,r,n,i){var o=!1;try{\"function\"==typeof r\u0026\u0026(o=!0,\"rejectionHandled\"===t?r(i):r(n,i))}catch(s){h.throwLater(s)}var a=!1;try{a=b(t,n,i)}catch(s){a=!0,h.throwLater(s)}var u=!1;if(m)try{u=m(t.toLowerCase(),{reason:n,promise:i})}catch(s){u=!0,h.throwLater(s)}a||o||u||\"unhandledRejection\"!==t||e.formatAndLogError(n,\"Unhandled rejection \")};var y=function(){return!1},g=/[\\/\u003c\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;e.setBounds=function(t,r){if(e.isSupported()){for(var n,i,o=t.stack.split(\"\\n\"),s=r.stack.split(\"\\n\"),a=-1,u=-1,l=0;l\u003co.length;++l){var h=c(o[l]);if(h){n=h.fileName,a=h.line;break}}for(var l=0;l\u003cs.length;++l){var h=c(s[l]);if(h){i=h.fileName,u=h.line;break}}0\u003ea||0\u003eu||!n||!i||n!==i||a\u003e=u||(y=function(t){if(f.test(t))return!0;var e=c(t);return e\u0026\u0026e.fileName===n\u0026\u0026a\u003c=e.line\u0026\u0026e.line\u003c=u?!0:!1})}};var m,j=function(){var t=/^\\s*at\\s*/,e=function(t,e){return\"string\"==typeof t?t:void 0!==e.name\u0026\u0026void 0!==e.message?e.toString():a(e)};if(\"number\"==typeof Error.stackTraceLimit\u0026\u0026\"function\"==typeof Error.captureStackTrace){Error.stackTraceLimit=Error.stackTraceLimit+6,_=t,d=e;var r=Error.captureStackTrace;return y=function(t){return f.test(t)},function(t,e){Error.stackTraceLimit=Error.stackTraceLimit+6,r(t,e),Error.stackTraceLimit=Error.stackTraceLimit-6}}var n=new Error;if(\"string\"==typeof n.stack\u0026\u0026n.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\")\u003e=0)return _=/@/,d=e,v=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i=\"stack\"in o}return\"stack\"in n||!i||\"number\"!=typeof Error.stackTraceLimit?(d=function(t,e){return\"string\"==typeof t?t:\"object\"!=typeof e\u0026\u0026\"function\"!=typeof e||void 0===e.name||void 0===e.message?a(e):e.toString()},null):(_=t,d=e,function(t){Error.stackTraceLimit=Error.stackTraceLimit+6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit=Error.stackTraceLimit-6})}([]),b=function(){if(p.isNode)return function(t,e,r){return\"rejectionHandled\"===t?process.emit(t,r):process.emit(t,e,r)};var t=!1,e=!0;try{var r=new self.CustomEvent(\"test\");t=r instanceof CustomEvent}catch(n){}if(!t)try{var i=document.createEvent(\"CustomEvent\");i.initCustomEvent(\"testingtheevent\",!1,!0,{}),self.dispatchEvent(i)}catch(n){e=!1}e\u0026\u0026(m=function(e,r){var n;return t?n=new self.CustomEvent(e,{detail:r,bubbles:!1,cancelable:!0}):self.dispatchEvent\u0026\u0026(n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,!1,!0,r)),n?!self.dispatchEvent(n):!1});var o={};return o.unhandledRejection=\"onunhandledRejection\".toLowerCase(),o.rejectionHandled=\"onrejectionHandled\".toLowerCase(),function(t,e,r){var n=o[t],i=self[n];return i?(\"rejectionHandled\"===t?i.call(self,r):i.call(self,e,r),!0):!1}}();return\"undefined\"!=typeof console\u0026\u0026\"undefined\"!=typeof console.warn\u0026\u0026(l=function(t){console.warn(t)},p.isNode\u0026\u0026process.stderr.isTTY?l=function(t){process.stderr.write(\"\u001b[31m\"+t+\"\u001b[39m\\n\")}:p.isNode||\"string\"!=typeof(new Error).stack||(l=function(t){console.warn(\"%c\"+t,\"color: red\")})),e}},{\"./async.js\":2,\"./util.js\":38}],8:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e,r){this._instances=t,this._callback=e,this._promise=r}function n(t,e){var r={},n=s(t).call(r,e);if(n===a)return n;var i=u(r);return i.length?(a.e=new c(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"),a):n}var i=t(\"./util.js\"),o=t(\"./errors.js\"),s=i.tryCatch,a=i.errorObj,u=t(\"./es5.js\").keys,c=o.TypeError;return r.prototype.doFilter=function(t){for(var r=this._callback,i=this._promise,o=i._boundValue(),u=0,c=this._instances.length;c\u003eu;++u){var l=this._instances[u],h=l===Error||null!=l\u0026\u0026l.prototype instanceof Error;if(h\u0026\u0026t instanceof l){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}if(\"function\"==typeof l\u0026\u0026!h){var f=n(l,t);if(f===a){t=a.e;break}if(f){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}}}return e.e=t,e},r}},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(t,e){\"use strict\";e.exports=function(t,e,r){function n(){this._trace=new e(o())}function i(){return r()?new n:void 0}function o(){var t=s.length-1;return t\u003e=0?s[t]:void 0}var s=[];return n.prototype._pushContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.push(this._trace)},n.prototype._popContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.pop()},t.prototype._peekContext=o,t.prototype._pushContext=n.prototype._pushContext,t.prototype._popContext=n.prototype._popContext,i}},{}],10:[function(t,e){\"use strict\";e.exports=function(e,r){var n,i,o=e._getDomain,s=t(\"./async.js\"),a=t(\"./errors.js\").Warning,u=t(\"./util.js\"),c=u.canAttachTrace,l=!1||u.isNode\u0026\u0026(!!process.env.BLUEBIRD_DEBUG||\"development\"===process.env.NODE_ENV);return u.isNode\u0026\u00260==process.env.BLUEBIRD_DEBUG\u0026\u0026(l=!1),l\u0026\u0026s.disableTrampolineIfNecessary(),e.prototype._ignoreRejections=function(){this._unsetRejectionIsUnhandled(),this._bitField=16777216|this._bitField},e.prototype._ensurePossibleRejectionHandled=function(){0===(16777216\u0026this._bitField)\u0026\u0026(this._setRejectionIsUnhandled(),s.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){r.fireRejectionEvent(\"rejectionHandled\",n,void 0,this)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._getCarriedStackTrace()||this._settledValue;this._setUnhandledRejectionIsNotified(),r.fireRejectionEvent(\"unhandledRejection\",i,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=524288|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-524289\u0026this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(524288\u0026this._bitField)\u003e0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=2097152|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-2097153\u0026this._bitField,this._isUnhandledRejectionNotified()\u0026\u0026(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(2097152\u0026this._bitField)\u003e0},e.prototype._setCarriedStackTrace=function(t){this._bitField=1048576|this._bitField,this._fulfillmentHandler0=t},e.prototype._isCarryingStackTrace=function(){return(1048576\u0026this._bitField)\u003e0},e.prototype._getCarriedStackTrace=function(){return this._isCarryingStackTrace()?this._fulfillmentHandler0:void 0},e.prototype._captureStackTrace=function(){return l\u0026\u0026(this._trace=new r(this._peekContext())),this},e.prototype._attachExtraTrace=function(t,e){if(l\u0026\u0026c(t)){var n=this._trace;if(void 0!==n\u0026\u0026e\u0026\u0026(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var i=r.parseStackAndMessage(t);u.notEnumerableProp(t,\"stack\",i.message+\"\\n\"+i.stack.join(\"\\n\")),u.notEnumerableProp(t,\"__stackCleaned__\",!0)}}},e.prototype._warn=function(t){var e=new a(t),n=this._peekContext();if(n)n.attachExtraTrace(e);else{var i=r.parseStackAndMessage(e);e.stack=i.message+\"\\n\"+i.stack.join(\"\\n\")}r.formatAndLogError(e,\"\")},e.onPossiblyUnhandledRejection=function(t){var e=o();i=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.onUnhandledRejectionHandled=function(t){var e=o();n=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.longStackTraces=function(){if(s.haveItemsQueued()\u0026\u0026l===!1)throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/DT1qyG\\n\");l=r.isSupported(),l\u0026\u0026s.disableTrampolineIfNecessary()},e.hasLongStackTraces=function(){return l\u0026\u0026r.isSupported()},r.isSupported()||(e.longStackTraces=function(){},l=!1),function(){return l}}},{\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(t,e){\"use strict\";var r=t(\"./util.js\"),n=r.isPrimitive;e.exports=function(t){var e=function(){return this},r=function(){throw this},i=function(){},o=function(){throw void 0},s=function(t,e){return 1===e?function(){throw t}:2===e?function(){return t}:void 0};t.prototype[\"return\"]=t.prototype.thenReturn=function(r){return void 0===r?this.then(i):n(r)?this._then(s(r,2),void 0,void 0,void 0,void 0):(r instanceof t\u0026\u0026r._ignoreRejections(),this._then(e,void 0,void 0,r,void 0))},t.prototype[\"throw\"]=t.prototype.thenThrow=function(t){return void 0===t?this.then(o):n(t)?this._then(s(t,1),void 0,void 0,void 0,void 0):this._then(r,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],12:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.reduce;t.prototype.each=function(t){return r(this,t,null,e)},t.each=function(t,n){return r(t,n,null,e)}}},{}],13:[function(t,e){\"use strict\";function r(t,e){function r(n){return this instanceof r?(l(this,\"message\",\"string\"==typeof n?n:e),l(this,\"name\",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new r(n)}return c(r,Error),r}function n(t){return this instanceof n?(l(this,\"name\",\"OperationalError\"),l(this,\"message\",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(l(this,\"message\",t.message),l(this,\"stack\",t.stack)):Error.captureStackTrace\u0026\u0026Error.captureStackTrace(this,this.constructor))):new n(t)}var i,o,s=t(\"./es5.js\"),a=s.freeze,u=t(\"./util.js\"),c=u.inherits,l=u.notEnumerableProp,h=r(\"Warning\",\"warning\"),p=r(\"CancellationError\",\"cancellation error\"),f=r(\"TimeoutError\",\"timeout error\"),_=r(\"AggregateError\",\"aggregate error\");try{i=TypeError,o=RangeError}catch(d){i=r(\"TypeError\",\"type error\"),o=r(\"RangeError\",\"range error\")}for(var v=\"join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse\".split(\" \"),y=0;y\u003cv.length;++y)\"function\"==typeof Array.prototype[v[y]]\u0026\u0026(_.prototype[v[y]]=Array.prototype[v[y]]);s.defineProperty(_.prototype,\"length\",{value:0,configurable:!1,writable:!0,enumerable:!0}),_.prototype.isOperational=!0;var g=0;_.prototype.toString=function(){var t=Array(4*g+1).join(\" \"),e=\"\\n\"+t+\"AggregateError of:\\n\";g++,t=Array(4*g+1).join(\" \");for(var r=0;r\u003cthis.length;++r){for(var n=this[r]===this?\"[Circular AggregateError]\":this[r]+\"\",i=n.split(\"\\n\"),o=0;o\u003ci.length;++o)i[o]=t+i[o];n=i.join(\"\\n\"),e+=n+\"\\n\"}return g--,e},c(n,Error);var m=Error.__BluebirdErrorTypes__;m||(m=a({CancellationError:p,TimeoutError:f,OperationalError:n,RejectionError:n,AggregateError:_}),l(Error,\"__BluebirdErrorTypes__\",m)),e.exports={Error:Error,TypeError:i,RangeError:o,CancellationError:m.CancellationError,OperationalError:m.OperationalError,TimeoutError:m.TimeoutError,AggregateError:m.AggregateError,Warning:h}},{\"./es5.js\":14,\"./util.js\":38}],14:[function(t,e){var r=function(){\"use strict\";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var r=Object.getOwnPropertyDescriptor(t,e);return!(r\u0026\u0026!r.writable\u0026\u0026!r.set)}};else{var n={}.hasOwnProperty,i={}.toString,o={}.constructor.prototype,s=function(t){var e=[];for(var r in t)n.call(t,r)\u0026\u0026e.push(r);return e},a=function(t,e){return{value:t[e]}},u=function(t,e,r){return t[e]=r.value,t},c=function(t){return t},l=function(t){try{return Object(t).constructor.prototype}catch(e){return o}},h=function(t){try{return\"[object Array]\"===i.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:s,names:s,defineProperty:u,getDescriptor:a,freeze:c,getPrototypeOf:l,isES5:r,propertyIsWritable:function(){return!0}}}},{}],15:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.map;t.prototype.filter=function(t,n){return r(this,t,n,e)},t.filter=function(t,n,i){return r(t,n,i,e)}}},{}],16:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(){return this}function o(){throw this}function s(t){return function(){return t}}function a(t){return function(){throw t}}function u(t,e,r){var n;return n=p(e)?r?s(e):a(e):r?i:o,t._then(n,f,void 0,e,void 0)}function c(t){var i=this.promise,o=this.handler,s=i._isBound()?o.call(i._boundValue()):o();if(void 0!==s){var a=n(s,i);if(a instanceof e)return a=a._target(),u(a,t,i.isFulfilled())}return i.isRejected()?(r.e=t,r):t}function l(t){var r=this.promise,i=this.handler,o=r._isBound()?i.call(r._boundValue(),t):i(t);if(void 0!==o){var s=n(o,r);if(s instanceof e)return s=s._target(),u(s,t,!0)}return t}var h=t(\"./util.js\"),p=h.isPrimitive,f=h.thrower;e.prototype._passThroughHandler=function(t,e){if(\"function\"!=typeof t)return this.then();var r={promise:this,handler:t};return this._then(e?c:l,e?c:void 0,void 0,r,void 0)},e.prototype.lastly=e.prototype[\"finally\"]=function(t){return this._passThroughHandler(t,!0)},e.prototype.tap=function(t){return this._passThroughHandler(t,!1)}}},{\"./util.js\":38}],17:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,r,n){for(var o=0;o\u003cr.length;++o){n._pushContext();var s=h(r[o])(t);if(n._popContext(),s===l){n._pushContext();var a=e.reject(l.e);return n._popContext(),a}var u=i(s,n);if(u instanceof e)return u}return null}function s(t,r,i,o){var s=this._promise=new e(n);s._captureStackTrace(),this._stack=o,this._generatorFunction=t,this._receiver=r,this._generator=void 0,this._yieldHandlers=\"function\"==typeof i?[i].concat(p):p}var a=t(\"./errors.js\"),u=a.TypeError,c=t(\"./util.js\"),l=c.errorObj,h=c.tryCatch,p=[];s.prototype.promise=function(){return this._promise},s.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._next(void 0)},s.prototype._continue=function(t){if(t===l)return this._promise._rejectCallback(t.e,!1,!0);var r=t.value;if(t.done===!0)this._promise._resolveCallback(r);else{var n=i(r,this._promise);if(!(n instanceof e)\u0026\u0026(n=o(n,this._yieldHandlers,this._promise),null===n))return void this._throw(new u(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/4Y4pDk\\n\\n\".replace(\"%s\",r)+\"From coroutine:\\n\"+this._stack.split(\"\\n\").slice(1,-7).join(\"\\n\")));n._then(this._next,this._throw,void 0,this,null)}},s.prototype._throw=function(t){this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator[\"throw\"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},s.prototype._next=function(t){this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},e.coroutine=function(t,e){if(\"function\"!=typeof t)throw new u(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var r=Object(e).yieldHandler,n=s,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new n(void 0,void 0,r,i);return o._generator=e,o._next(void 0),o.promise()}},e.coroutine.addYieldHandler=function(t){if(\"function\"!=typeof t)throw new u(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");p.push(t)},e.spawn=function(t){if(\"function\"!=typeof t)return r(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var n=new s(t,this),i=n.promise();return n._run(e.spawn),i}}},{\"./errors.js\":13,\"./util.js\":38}],18:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){{var o=t(\"./util.js\");o.canEvaluate,o.tryCatch,o.errorObj}e.join=function(){var t,e=arguments.length-1;if(e\u003e0\u0026\u0026\"function\"==typeof arguments[e]){t=arguments[e];var n}for(var i=arguments.length,o=new Array(i),s=0;i\u003es;++s)o[s]=arguments[s];t\u0026\u0026o.pop();var n=new r(o).promise();return void 0!==t?n.spread(t):n}}},{\"./util.js\":38}],19:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,e,r,n){this.constructor$(t),this._promise._captureStackTrace();var i=c();this._callback=null===i?e:i.bind(e),this._preservedValues=n===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=r\u003e=1?[]:d,l.invoke(a,this,void 0)}function a(){this._init$(void 0,-2)}function u(t,e,r,n){var i=\"object\"==typeof r\u0026\u0026null!==r?r.concurrency:0;return i=\"number\"==typeof i\u0026\u0026isFinite(i)\u0026\u0026i\u003e=1?i:0,new s(t,e,i,n)}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj,_={},d=[];h.inherits(s,r),s.prototype._init=function(){},s.prototype._promiseFulfilled=function(t,r){var n=this._values,o=this.length(),s=this._preservedValues,a=this._limit;if(n[r]===_){if(n[r]=t,a\u003e=1\u0026\u0026(this._inFlight--,this._drainQueue(),this._isResolved()))return}else{if(a\u003e=1\u0026\u0026this._inFlight\u003e=a)return n[r]=t,void this._queue.push(r);null!==s\u0026\u0026(s[r]=t);var u=this._callback,c=this._promise._boundValue();this._promise._pushContext();var l=p(u).call(c,t,r,o);if(this._promise._popContext(),l===f)return this._reject(l.e);var h=i(l,this._promise);if(h instanceof e){if(h=h._target(),h._isPending())return a\u003e=1\u0026\u0026this._inFlight++,n[r]=_,h._proxyPromiseArray(this,r);if(!h._isFulfilled())return this._reject(h._reason());l=h._value()}n[r]=l}var d=++this._totalResolved;d\u003e=o\u0026\u0026(null!==s?this._filter(n,s):this._resolve(n))},s.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,r=this._values;t.length\u003e0\u0026\u0026this._inFlight\u003ce;){if(this._isResolved())return;var n=t.pop();this._promiseFulfilled(r[n],n)}},s.prototype._filter=function(t,e){for(var r=e.length,n=new Array(r),i=0,o=0;r\u003eo;++o)t[o]\u0026\u0026(n[i++]=e[o]);n.length=i,this._resolve(n)},s.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return\"function\"!=typeof t?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(this,t,e,null).promise()},e.map=function(t,e,r,i){return\"function\"!=typeof e?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(t,e,r,i).promise()}}},{\"./async.js\":2,\"./util.js\":38}],20:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){var o=t(\"./util.js\"),s=o.tryCatch;e.method=function(t){if(\"function\"!=typeof t)throw new e.TypeError(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");return function(){var n=new e(r);n._captureStackTrace(),n._pushContext();var i=s(t).apply(this,arguments);return n._popContext(),n._resolveFromSyncValue(i),n}},e.attempt=e[\"try\"]=function(t,n,a){if(\"function\"!=typeof t)return i(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var u=new e(r);u._captureStackTrace(),u._pushContext();var c=o.isArray(n)?s(t).apply(a,n):s(t).call(a,n);return u._popContext(),u._resolveFromSyncValue(c),u},e.prototype._resolveFromSyncValue=function(t){t===o.errorObj?this._rejectCallback(t.e,!1,!0):this._resolveCallback(t,!0)}}},{\"./util.js\":38}],21:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e){var r=this;if(!o.isArray(t))return n.call(r,t,e);var i=a(e).apply(r._boundValue(),[null].concat(t));i===u\u0026\u0026s.throwLater(i.e)}function n(t,e){var r=this,n=r._boundValue(),i=void 0===t?a(e).call(n,null):a(e).call(n,null,t);i===u\u0026\u0026s.throwLater(i.e)}function i(t,e){var r=this;if(!t){var n=r._target(),i=n._getCarriedStackTrace();i.cause=t,t=i}var o=a(e).call(r._boundValue(),t);o===u\u0026\u0026s.throwLater(o.e)}var o=t(\"./util.js\"),s=t(\"./async.js\"),a=o.tryCatch,u=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if(\"function\"==typeof t){var o=n;void 0!==e\u0026\u0026Object(e).spread\u0026\u0026(o=r),this._then(o,i,void 0,this,t)}return this}}},{\"./async.js\":2,\"./util.js\":38}],22:[function(t,e){\"use strict\";e.exports=function(e,r){var n=t(\"./util.js\"),i=t(\"./async.js\"),o=n.tryCatch,s=n.errorObj;e.prototype.progressed=function(t){return this._then(void 0,void 0,t,void 0,void 0)},e.prototype._progress=function(t){this._isFollowingOrFulfilledOrRejected()||this._target()._progressUnchecked(t)},e.prototype._progressHandlerAt=function(t){return 0===t?this._progressHandler0:this[(t\u003c\u003c2)+t-5+2]},e.prototype._doProgressWith=function(t){var r=t.value,i=t.handler,a=t.promise,u=t.receiver,c=o(i).call(u,r);if(c===s){if(null!=c.e\u0026\u0026\"StopProgressPropagation\"!==c.e.name){var l=n.canAttachTrace(c.e)?c.e:new Error(n.toString(c.e));a._attachExtraTrace(l),a._progress(c.e)}}else c instanceof e?c._then(a._progress,null,null,a,void 0):a._progress(c)},e.prototype._progressUnchecked=function(t){for(var n=this._length(),o=this._progress,s=0;n\u003es;s++){var a=this._progressHandlerAt(s),u=this._promiseAt(s);if(u instanceof e)\"function\"==typeof a?i.invoke(this._doProgressWith,this,{handler:a,promise:u,receiver:this._receiverAt(s),value:t}):i.invoke(o,u,t);else{var c=this._receiverAt(s);\"function\"==typeof a?a.call(c,t,u):c instanceof r\u0026\u0026!c._isResolved()\u0026\u0026c._promiseProgressed(t,u)}}}}},{\"./async.js\":2,\"./util.js\":38}],23:[function(t,e){\"use strict\";e.exports=function(){function e(t){if(\"function\"!=typeof t)throw new h(\"the promise constructor requires a resolver function\\n\\n    See http://goo.gl/EC22Yn\\n\");if(this.constructor!==e)throw new h(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/KsIlge\\n\");this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._progressHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._settledValue=void 0,t!==p\u0026\u0026this._resolveFromResolver(t)}function r(t){var r=new e(p);r._fulfillmentHandler0=t,r._rejectionHandler0=t,r._progressHandler0=t,r._promise0=t,r._receiver0=t,r._settledValue=t}var n,i=function(){return new h(\"circular promise resolution chain\\n\\n    See http://goo.gl/LhFpo0\\n\")},o=function(){return new e.PromiseInspection(this._target())},s=function(t){return e.reject(new h(t))},a=t(\"./util.js\");n=a.isNode?function(){var t=process.domain;return void 0===t\u0026\u0026(t=null),t}:function(){return null},a.notEnumerableProp(e,\"_getDomain\",n);var u={},c=t(\"./async.js\"),l=t(\"./errors.js\"),h=e.TypeError=l.TypeError;e.RangeError=l.RangeError,e.CancellationError=l.CancellationError,e.TimeoutError=l.TimeoutError,e.OperationalError=l.OperationalError,e.RejectionError=l.OperationalError,e.AggregateError=l.AggregateError;var p=function(){},f={},_={e:null},d=t(\"./thenables.js\")(e,p),v=t(\"./promise_array.js\")(e,p,d,s),y=t(\"./captured_trace.js\")(),g=t(\"./debuggability.js\")(e,y),m=t(\"./context.js\")(e,y,g),j=t(\"./catch_filter.js\")(_),b=t(\"./promise_resolver.js\"),w=b._nodebackForPromise,k=a.errorObj,E=a.tryCatch;return e.prototype.toString=function(){return\"[object Promise]\"},e.prototype.caught=e.prototype[\"catch\"]=function(t){var r=arguments.length;if(r\u003e1){var n,i=new Array(r-1),o=0;for(n=0;r-1\u003en;++n){var s=arguments[n];if(\"function\"!=typeof s)return e.reject(new h(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"));i[o++]=s}i.length=o,t=arguments[n];var a=new j(i,t,this);return this._then(void 0,a.doFilter,void 0,a,void 0)}return this._then(void 0,t,void 0,void 0,void 0)},e.prototype.reflect=function(){return this._then(o,o,void 0,this,void 0)},e.prototype.then=function(t,e,r){if(g()\u0026\u0026arguments.length\u003e0\u0026\u0026\"function\"!=typeof t\u0026\u0026\"function\"!=typeof e){var n=\".then() only accepts functions but was passed: \"+a.classString(t);arguments.length\u003e1\u0026\u0026(n+=\", \"+a.classString(e)),this._warn(n)}return this._then(t,e,r,void 0,void 0)},e.prototype.done=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);","n._setIsFinal()},e.prototype.spread=function(t,e){return this.all()._then(t,e,void 0,f,void 0)},e.prototype.isCancellable=function(){return!this.isResolved()\u0026\u0026this._cancellable()},e.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()\u0026\u0026(t.rejectionReason=this.reason(),t.isRejected=!0),t},e.prototype.all=function(){return new v(this).promise()},e.prototype.error=function(t){return this.caught(a.originatesFromRejection,t)},e.is=function(t){return t instanceof e},e.fromNode=function(t){var r=new e(p),n=E(t)(w(r));return n===k\u0026\u0026r._rejectCallback(n.e,!0,!0),r},e.all=function(t){return new v(t).promise()},e.defer=e.pending=function(){var t=new e(p);return new b(t)},e.cast=function(t){var r=d(t);if(!(r instanceof e)){var n=r;r=new e(p),r._fulfillUnchecked(n)}return r},e.resolve=e.fulfilled=e.cast,e.reject=e.rejected=function(t){var r=new e(p);return r._captureStackTrace(),r._rejectCallback(t,!0),r},e.setScheduler=function(t){if(\"function\"!=typeof t)throw new h(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var e=c._schedule;return c._schedule=t,e},e.prototype._then=function(t,r,i,o,s){var a=void 0!==s,u=a?s:new e(p);a||(u._propagateFrom(this,5),u._captureStackTrace());var l=this._target();l!==this\u0026\u0026(void 0===o\u0026\u0026(o=this._boundTo),a||u._setIsMigrated());var h=l._addCallbacks(t,r,i,u,o,n());return l._isResolved()\u0026\u0026!l._isSettlePromisesQueued()\u0026\u0026c.invoke(l._settlePromiseAtPostResolution,l,h),u},e.prototype._settlePromiseAtPostResolution=function(t){this._isRejectionUnhandled()\u0026\u0026this._unsetRejectionIsUnhandled(),this._settlePromiseAt(t)},e.prototype._length=function(){return 131071\u0026this._bitField},e.prototype._isFollowingOrFulfilledOrRejected=function(){return(939524096\u0026this._bitField)\u003e0},e.prototype._isFollowing=function(){return 536870912===(536870912\u0026this._bitField)},e.prototype._setLength=function(t){this._bitField=-131072\u0026this._bitField|131071\u0026t},e.prototype._setFulfilled=function(){this._bitField=268435456|this._bitField},e.prototype._setRejected=function(){this._bitField=134217728|this._bitField},e.prototype._setFollowing=function(){this._bitField=536870912|this._bitField},e.prototype._setIsFinal=function(){this._bitField=33554432|this._bitField},e.prototype._isFinal=function(){return(33554432\u0026this._bitField)\u003e0},e.prototype._cancellable=function(){return(67108864\u0026this._bitField)\u003e0},e.prototype._setCancellable=function(){this._bitField=67108864|this._bitField},e.prototype._unsetCancellable=function(){this._bitField=-67108865\u0026this._bitField},e.prototype._setIsMigrated=function(){this._bitField=4194304|this._bitField},e.prototype._unsetIsMigrated=function(){this._bitField=-4194305\u0026this._bitField},e.prototype._isMigrated=function(){return(4194304\u0026this._bitField)\u003e0},e.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[5*t-5+4];return e===u?void 0:void 0===e\u0026\u0026this._isBound()?this._boundValue():e},e.prototype._promiseAt=function(t){return 0===t?this._promise0:this[5*t-5+3]},e.prototype._fulfillmentHandlerAt=function(t){return 0===t?this._fulfillmentHandler0:this[5*t-5+0]},e.prototype._rejectionHandlerAt=function(t){return 0===t?this._rejectionHandler0:this[5*t-5+1]},e.prototype._boundValue=function(){var t=this._boundTo;return void 0!==t\u0026\u0026t instanceof e?t.isFulfilled()?t.value():void 0:t},e.prototype._migrateCallbacks=function(t,r){var n=t._fulfillmentHandlerAt(r),i=t._rejectionHandlerAt(r),o=t._progressHandlerAt(r),s=t._promiseAt(r),a=t._receiverAt(r);s instanceof e\u0026\u0026s._setIsMigrated(),void 0===a\u0026\u0026(a=u),this._addCallbacks(n,i,o,s,a,null)},e.prototype._addCallbacks=function(t,e,r,n,i,o){var s=this._length();if(s\u003e=131066\u0026\u0026(s=0,this._setLength(0)),0===s)this._promise0=n,void 0!==i\u0026\u0026(this._receiver0=i),\"function\"!=typeof t||this._isCarryingStackTrace()||(this._fulfillmentHandler0=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this._rejectionHandler0=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this._progressHandler0=null===o?r:o.bind(r));else{var a=5*s-5;this[a+3]=n,this[a+4]=i,\"function\"==typeof t\u0026\u0026(this[a+0]=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this[a+1]=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this[a+2]=null===o?r:o.bind(r))}return this._setLength(s+1),s},e.prototype._setProxyHandlers=function(t,e){var r=this._length();if(r\u003e=131066\u0026\u0026(r=0,this._setLength(0)),0===r)this._promise0=e,this._receiver0=t;else{var n=5*r-5;this[n+3]=e,this[n+4]=t}this._setLength(r+1)},e.prototype._proxyPromiseArray=function(t,e){this._setProxyHandlers(t,e)},e.prototype._resolveCallback=function(t,r){if(!this._isFollowingOrFulfilledOrRejected()){if(t===this)return this._rejectCallback(i(),!1,!0);var n=d(t,this);if(!(n instanceof e))return this._fulfill(t);var o=1|(r?4:0);this._propagateFrom(n,o);var s=n._target();if(s._isPending()){for(var a=this._length(),u=0;a\u003eu;++u)s._migrateCallbacks(this,u);this._setFollowing(),this._setLength(0),this._setFollowee(s)}else s._isFulfilled()?this._fulfillUnchecked(s._value()):this._rejectUnchecked(s._reason(),s._getCarriedStackTrace())}},e.prototype._rejectCallback=function(t,e,r){r||a.markAsOriginatingFromRejection(t);var n=a.ensureErrorObject(t),i=n===t;this._attachExtraTrace(n,e?i:!1),this._reject(t,i?void 0:n)},e.prototype._resolveFromResolver=function(t){var e=this;this._captureStackTrace(),this._pushContext();var r=!0,n=E(t)(function(t){null!==e\u0026\u0026(e._resolveCallback(t),e=null)},function(t){null!==e\u0026\u0026(e._rejectCallback(t,r),e=null)});r=!1,this._popContext(),void 0!==n\u0026\u0026n===k\u0026\u0026null!==e\u0026\u0026(e._rejectCallback(n.e,!0,!0),e=null)},e.prototype._settlePromiseFromHandler=function(t,e,r,n){if(!n._isRejected()){n._pushContext();var o;if(o=e!==f||this._isRejected()?E(t).call(e,r):E(t).apply(this._boundValue(),r),n._popContext(),o===k||o===n||o===_){var s=o===n?i():o.e;n._rejectCallback(s,!1,!0)}else n._resolveCallback(o)}},e.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},e.prototype._followee=function(){return this._rejectionHandler0},e.prototype._setFollowee=function(t){this._rejectionHandler0=t},e.prototype._cleanValues=function(){this._cancellable()\u0026\u0026(this._cancellationParent=void 0)},e.prototype._propagateFrom=function(t,e){(1\u0026e)\u003e0\u0026\u0026t._cancellable()\u0026\u0026(this._setCancellable(),this._cancellationParent=t),(4\u0026e)\u003e0\u0026\u0026t._isBound()\u0026\u0026this._setBoundTo(t._boundTo)},e.prototype._fulfill=function(t){this._isFollowingOrFulfilledOrRejected()||this._fulfillUnchecked(t)},e.prototype._reject=function(t,e){this._isFollowingOrFulfilledOrRejected()||this._rejectUnchecked(t,e)},e.prototype._settlePromiseAt=function(t){var r=this._promiseAt(t),n=r instanceof e;if(n\u0026\u0026r._isMigrated())return r._unsetIsMigrated(),c.invoke(this._settlePromiseAt,this,t);var i=this._isFulfilled()?this._fulfillmentHandlerAt(t):this._rejectionHandlerAt(t),o=this._isCarryingStackTrace()?this._getCarriedStackTrace():void 0,s=this._settledValue,a=this._receiverAt(t);this._clearCallbackDataAtIndex(t),\"function\"==typeof i?n?this._settlePromiseFromHandler(i,a,s,r):i.call(a,s,r):a instanceof v?a._isResolved()||(this._isFulfilled()?a._promiseFulfilled(s,r):a._promiseRejected(s,r)):n\u0026\u0026(this._isFulfilled()?r._fulfill(s):r._reject(s,o)),t\u003e=4\u0026\u00264===(31\u0026t)\u0026\u0026c.invokeLater(this._setLength,this,0)},e.prototype._clearCallbackDataAtIndex=function(t){if(0===t)this._isCarryingStackTrace()||(this._fulfillmentHandler0=void 0),this._rejectionHandler0=this._progressHandler0=this._receiver0=this._promise0=void 0;else{var e=5*t-5;this[e+3]=this[e+4]=this[e+0]=this[e+1]=this[e+2]=void 0}},e.prototype._isSettlePromisesQueued=function(){return-1073741824===(-1073741824\u0026this._bitField)},e.prototype._setSettlePromisesQueued=function(){this._bitField=-1073741824|this._bitField},e.prototype._unsetSettlePromisesQueued=function(){this._bitField=1073741823\u0026this._bitField},e.prototype._queueSettlePromises=function(){c.settlePromises(this),this._setSettlePromisesQueued()},e.prototype._fulfillUnchecked=function(t){if(t===this){var e=i();return this._attachExtraTrace(e),this._rejectUnchecked(e,void 0)}this._setFulfilled(),this._settledValue=t,this._cleanValues(),this._length()\u003e0\u0026\u0026this._queueSettlePromises()},e.prototype._rejectUncheckedCheckError=function(t){var e=a.ensureErrorObject(t);this._rejectUnchecked(t,e===t?void 0:e)},e.prototype._rejectUnchecked=function(t,e){if(t===this){var r=i();return this._attachExtraTrace(r),this._rejectUnchecked(r)}return this._setRejected(),this._settledValue=t,this._cleanValues(),this._isFinal()?void c.throwLater(function(t){throw\"stack\"in t\u0026\u0026c.invokeFirst(y.unhandledRejection,void 0,t),t},void 0===e?t:e):(void 0!==e\u0026\u0026e!==t\u0026\u0026this._setCarriedStackTrace(e),void(this._length()\u003e0?this._queueSettlePromises():this._ensurePossibleRejectionHandled()))},e.prototype._settlePromises=function(){this._unsetSettlePromisesQueued();for(var t=this._length(),e=0;t\u003ee;e++)this._settlePromiseAt(e)},a.notEnumerableProp(e,\"_makeSelfResolutionError\",i),t(\"./progress.js\")(e,v),t(\"./method.js\")(e,p,d,s),t(\"./bind.js\")(e,p,d),t(\"./finally.js\")(e,_,d),t(\"./direct_resolve.js\")(e),t(\"./synchronous_inspection.js\")(e),t(\"./join.js\")(e,v,d,p),e.Promise=e,t(\"./map.js\")(e,v,s,d,p),t(\"./cancel.js\")(e),t(\"./using.js\")(e,s,d,m),t(\"./generators.js\")(e,s,p,d),t(\"./nodeify.js\")(e),t(\"./call_get.js\")(e),t(\"./props.js\")(e,v,d,s),t(\"./race.js\")(e,p,d,s),t(\"./reduce.js\")(e,v,s,d,p),t(\"./settle.js\")(e,v),t(\"./some.js\")(e,v,s),t(\"./promisify.js\")(e,p),t(\"./any.js\")(e),t(\"./each.js\")(e,p),t(\"./timers.js\")(e,p),t(\"./filter.js\")(e,p),a.toFastProperties(e),a.toFastProperties(e.prototype),r({a:1}),r({b:2}),r({c:3}),r(1),r(function(){}),r(void 0),r(!1),r(new e(p)),y.setBounds(c.firstLineError,a.lastLineError),e}},{\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){switch(t){case-2:return[];case-3:return{}}}function s(t){var n,i=this._promise=new e(r);t instanceof e\u0026\u0026(n=t,i._propagateFrom(n,5)),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var a=t(\"./util.js\"),u=a.isArray;return s.prototype.length=function(){return this._length},s.prototype.promise=function(){return this._promise},s.prototype._init=function c(t,r){var s=n(this._values,this._promise);if(s instanceof e){if(s=s._target(),this._values=s,!s._isFulfilled())return s._isPending()?void s._then(c,this._reject,void 0,this,r):void this._reject(s._reason());if(s=s._value(),!u(s)){var a=new e.TypeError(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");return void this.__hardReject__(a)}}else if(!u(s))return void this._promise._reject(i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\")._reason());if(0===s.length)return void(-5===r?this._resolveEmptyArray():this._resolve(o(r)));var l=this.getActualLength(s.length);this._length=l,this._values=this.shouldCopyValues()?new Array(l):this._values;for(var h=this._promise,p=0;l\u003ep;++p){var f=this._isResolved(),_=n(s[p],h);_ instanceof e?(_=_._target(),f?_._ignoreRejections():_._isPending()?_._proxyPromiseArray(this,p):_._isFulfilled()?this._promiseFulfilled(_._value(),p):this._promiseRejected(_._reason(),p)):f||this._promiseFulfilled(_,p)}},s.prototype._isResolved=function(){return null===this._values},s.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},s.prototype.__hardReject__=s.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1,!0)},s.prototype._promiseProgressed=function(t,e){this._promise._progress({index:e,value:t})},s.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},s.prototype._promiseRejected=function(t){this._totalResolved++,this._reject(t)},s.prototype.shouldCopyValues=function(){return!0},s.prototype.getActualLength=function(t){return t},s}},{\"./util.js\":38}],25:[function(t,e){\"use strict\";function r(t){return t instanceof Error\u0026\u0026p.getPrototypeOf(t)===Error.prototype}function n(t){var e;if(r(t)){e=new l(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=p.keys(t),i=0;i\u003cn.length;++i){var o=n[i];f.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function i(t){return function(e,r){if(null!==t){if(e){var i=n(a(e));t._attachExtraTrace(i),t._reject(i)}else if(arguments.length\u003e2){for(var o=arguments.length,s=new Array(o-1),u=1;o\u003eu;++u)s[u-1]=arguments[u];t._fulfill(s)}else t._fulfill(r);t=null}}}var o,s=t(\"./util.js\"),a=s.maybeWrapAsError,u=t(\"./errors.js\"),c=u.TimeoutError,l=u.OperationalError,h=s.haveGetters,p=t(\"./es5.js\"),f=/^(?:name|message|stack|cause)$/;if(o=h?function(t){this.promise=t}:function(t){this.promise=t,this.asCallback=i(t),this.callback=this.asCallback},h){var _={get:function(){return i(this.promise)}};p.defineProperty(o.prototype,\"asCallback\",_),p.defineProperty(o.prototype,\"callback\",_)}o._nodebackForPromise=i,o.prototype.toString=function(){return\"[object PromiseResolver]\"},o.prototype.resolve=o.prototype.fulfill=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._resolveCallback(t)},o.prototype.reject=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._rejectCallback(t)},o.prototype.progress=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._progress(t)},o.prototype.cancel=function(t){this.promise.cancel(t)},o.prototype.timeout=function(){this.reject(new c(\"timeout\"))},o.prototype.isResolved=function(){return this.promise.isResolved()},o.prototype.toJSON=function(){return this.promise.toJSON()},e.exports=o},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){return!w.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,r){var n=f.getDataPropertyOrDefault(t,e+r,j);return n?i(n):!1}function s(t,e,r){for(var n=0;n\u003ct.length;n+=2){var i=t[n];if(r.test(i))for(var o=i.replace(r,\"\"),s=0;s\u003ct.length;s+=2)if(t[s]===o)throw new g(\"Cannot promisify an API that has normal methods with '%s'-suffix\\n\\n    See http://goo.gl/iWrZbw\\n\".replace(\"%s\",e))}}function a(t,e,r,n){for(var a=f.inheritedDataKeys(t),u=[],c=0;c\u003ca.length;++c){var l=a[c],h=t[l],p=n===k?!0:k(l,h,t);\"function\"!=typeof h||i(h)||o(t,l,e)||!n(l,h,t,p)||u.push(l,h)}return s(u,e,r),u}function u(t,n,i,o){function s(){var i=n;n===p\u0026\u0026(i=this);var o=new e(r);o._captureStackTrace();var s=\"string\"==typeof u\u0026\u0026this!==a?this[u]:t,c=_(o);try{s.apply(i,d(arguments,c))}catch(l){o._rejectCallback(v(l),!0,!0)}return o}var a=function(){return this}(),u=t;return\"string\"==typeof u\u0026\u0026(t=o),f.notEnumerableProp(s,\"__isPromisified__\",!0),s}function c(t,e,r,n){for(var i=new RegExp(E(e)+\"$\"),o=a(t,e,i,r),s=0,u=o.length;u\u003es;s+=2){var c=o[s],l=o[s+1],h=c+e;if(n===F)t[h]=F(c,p,c,l,e);else{var _=n(l,function(){return F(c,p,c,l,e)});f.notEnumerableProp(_,\"__isPromisified__\",!0),t[h]=_}}return f.toFastProperties(t),t}function l(t,e){return F(t,e,void 0,t)}var h,p={},f=t(\"./util.js\"),_=t(\"./promise_resolver.js\")._nodebackForPromise,d=f.withAppended,v=f.maybeWrapAsError,y=f.canEvaluate,g=t(\"./errors\").TypeError,m=\"Async\",j={__isPromisified__:!0},b=[\"arity\",\"length\",\"name\",\"arguments\",\"caller\",\"callee\",\"prototype\",\"__isPromisified__\"],w=new RegExp(\"^(?:\"+b.join(\"|\")+\")$\"),k=function(t){return f.isIdentifier(t)\u0026\u0026\"_\"!==t.charAt(0)\u0026\u0026\"constructor\"!==t},E=function(t){return t.replace(/([$])/,\"\\\\$\")},F=y?h:u;e.promisify=function(t,e){if(\"function\"!=typeof t)throw new g(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");if(i(t))return t;var r=l(t,arguments.length\u003c2?p:e);return f.copyDescriptors(t,r,n),r},e.promisifyAll=function(t,e){if(\"function\"!=typeof t\u0026\u0026\"object\"!=typeof t)throw new g(\"the target of promisifyAll must be an object or a function\\n\\n    See http://goo.gl/9ITlV0\\n\");e=Object(e);var r=e.suffix;\"string\"!=typeof r\u0026\u0026(r=m);var n=e.filter;\"function\"!=typeof n\u0026\u0026(n=k);var i=e.promisifier;if(\"function\"!=typeof i\u0026\u0026(i=F),!f.isIdentifier(r))throw new RangeError(\"suffix must be a valid identifier\\n\\n    See http://goo.gl/8FZo5V\\n\");for(var o=f.inheritedDataKeys(t),s=0;s\u003co.length;++s){var a=t[o[s]];\"constructor\"!==o[s]\u0026\u0026f.isClass(a)\u0026\u0026(c(a.prototype,r,n,i),c(a,r,n,i))}return c(t,r,n,i)}}},{\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var e=c.keys(t),r=e.length,n=new Array(2*r),i=0;r\u003ei;++i){var o=e[i];n[i]=t[o],n[i+r]=o}this.constructor$(n)}function s(t){var r,s=n(t);return u(s)?(r=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e\u0026\u0026r._propagateFrom(s,4),r):i(\"cannot await properties of a non-object\\n\\n    See http://goo.gl/OsFKC8\\n\")}var a=t(\"./util.js\"),u=a.isObject,c=t(\"./es5.js\");a.inherits(o,r),o.prototype._init=function(){this._init$(void 0,-3)},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;if(r\u003e=this._length){for(var n={},i=this.length(),o=0,s=this.length();s\u003eo;++o)n[this._values[o+i]]=this._values[o];this._resolve(n)}},o.prototype._promiseProgressed=function(t,e){this._promise._progress({key:this._values[e+this.length()],value:t})},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t\u003e\u003e1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{\"./es5.js\":14,\"./util.js\":38}],28:[function(t,e){\"use strict\";function r(t,e,r,n,i){for(var o=0;i\u003eo;++o)r[o+n]=t[o+e],t[o+e]=void 0}function n(t){this._capacity=t,this._length=0,this._front=0}n.prototype._willBeOverCapacity=function(t){return this._capacity\u003ct},n.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var r=this._front+e\u0026this._capacity-1;this[r]=t,this._length=e+1},n.prototype._unshiftOne=function(t){var e=this._capacity;this._checkCapacity(this.length()+1);var r=this._front,n=(r-1\u0026e-1^e)-e;this[n]=t,this._front=n,this._length=this.length()+1},n.prototype.unshift=function(t,e,r){this._unshiftOne(r),this._unshiftOne(e),this._unshiftOne(t)},n.prototype.push=function(t,e,r){var n=this.length()+3;if(this._willBeOverCapacity(n))return this._pushOne(t),this._pushOne(e),void this._pushOne(r);var i=this._front+n-3;this._checkCapacity(n);var o=this._capacity-1;this[i+0\u0026o]=t,this[i+1\u0026o]=e,this[i+2\u0026o]=r,this._length=n},n.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1\u0026this._capacity-1,this._length--,e},n.prototype.length=function(){return this._length},n.prototype._checkCapacity=function(t){this._capacity\u003ct\u0026\u0026this._resizeTo(this._capacity\u003c\u003c1)},n.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i\u0026e-1;r(this,0,this,e,o)},e.exports=n},{}],29:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,o){var u=n(t);if(u instanceof e)return a(u);if(!s(t))return i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");var c=new e(r);void 0!==o\u0026\u0026c._propagateFrom(o,5);for(var l=c._fulfill,h=c._reject,p=0,f=t.length;f\u003ep;++p){var _=t[p];(void 0!==_||p in t)\u0026\u0026e.cast(_)._then(l,h,void 0,c,null)}return c}var s=t(\"./util.js\").isArray,a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{\"./util.js\":38}],30:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,r,n,s){this.constructor$(t),this._promise._captureStackTrace(),this._preservedValues=s===o?[]:null,this._zerothIsAccum=void 0===n,this._gotAccum=!1,this._reducingIndex=this._zerothIsAccum?1:0,this._valuesPhase=void 0;var u=i(n,this._promise),h=!1,p=u instanceof e;p\u0026\u0026(u=u._target(),u._isPending()?u._proxyPromiseArray(this,-1):u._isFulfilled()?(n=u._value(),this._gotAccum=!0):(this._reject(u._reason()),h=!0)),p||this._zerothIsAccum||(this._gotAccum=!0);var f=c();this._callback=null===f?r:f.bind(r),this._accum=n,h||l.invoke(a,this,void 0)}function a(){this._init$(void 0,-5)}function u(t,e,r,i){if(\"function\"!=typeof e)return n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var o=new s(t,e,r,i);return o.promise()}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj;h.inherits(s,r),s.prototype._init=function(){},s.prototype._resolveEmptyArray=function(){(this._gotAccum||this._zerothIsAccum)\u0026\u0026this._resolve(null!==this._preservedValues?[]:this._accum)},s.prototype._promiseFulfilled=function(t,r){var n=this._values;n[r]=t;var o,s=this.length(),a=this._preservedValues,u=null!==a,c=this._gotAccum,l=this._valuesPhase;if(!l)for(l=this._valuesPhase=new Array(s),o=0;s\u003eo;++o)l[o]=0;if(o=l[r],0===r\u0026\u0026this._zerothIsAccum?(this._accum=t,this._gotAccum=c=!0,l[r]=0===o?1:2):-1===r?(this._accum=t,this._gotAccum=c=!0):0===o?l[r]=1:(l[r]=2,this._accum=t),c){for(var h,_=this._callback,d=this._promise._boundValue(),v=this._reducingIndex;s\u003ev;++v)if(o=l[v],2!==o){if(1!==o)return;if(t=n[v],this._promise._pushContext(),u?(a.push(t),h=p(_).call(d,t,v,s)):h=p(_).call(d,this._accum,t,v,s),this._promise._popContext(),h===f)return this._reject(h.e);var y=i(h,this._promise);if(y instanceof e){if(y=y._target(),y._isPending())return l[v]=4,y._proxyPromiseArray(this,v);if(!y._isFulfilled())return this._reject(y._reason());h=y._value()}this._reducingIndex=v+1,this._accum=h}else this._reducingIndex=v+1;this._resolve(u?a:this._accum)}},e.prototype.reduce=function(t,e){return u(this,t,e,null)},e.reduce=function(t,e,r,n){return u(t,e,r,n)}}},{\"./async.js\":2,\"./util.js\":38}],31:[function(t,e){\"use strict\";var r,n=t(\"./util\"),i=function(){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")};if(n.isNode\u0026\u0026\"undefined\"==typeof MutationObserver){var o=global.setImmediate,s=process.nextTick;r=n.isRecentNode?function(t){o.call(global,t)}:function(t){s.call(process,t)}}else\"undefined\"==typeof MutationObserver||\"undefined\"!=typeof window\u0026\u0026window.navigator\u0026\u0026window.navigator.standalone?r=\"undefined\"!=typeof setImmediate?function(t){setImmediate(t)}:\"undefined\"!=typeof setTimeout?function(t){setTimeout(t,0)}:i:(r=function(t){var e=document.createElement(\"div\"),r=new MutationObserver(t);return r.observe(e,{attributes:!0}),function(){e.classList.toggle(\"foo\")}},r.isStatic=!0);e.exports=r},{\"./util\":38}],32:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){this.constructor$(t)}var i=e.PromiseInspection,o=t(\"./util.js\");o.inherits(n,r),n.prototype._promiseResolved=function(t,e){this._values[t]=e;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},n.prototype._promiseFulfilled=function(t,e){var r=new i;r._bitField=268435456,r._settledValue=t,this._promiseResolved(e,r)},n.prototype._promiseRejected=function(t,e){var r=new i;r._bitField=134217728,r._settledValue=t,this._promiseResolved(e,r)},e.settle=function(t){return new n(t).promise()},e.prototype.settle=function(){return new n(this).promise()}}},{\"./util.js\":38}],33:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(t){this.constructor$(t),this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0\u003ee)return n(\"expecting a positive integer\\n\\n    See http://goo.gl/1wAmHx\\n\");var r=new i(t),o=r.promise();return r.setHowMany(e),r.init(),o}var s=t(\"./util.js\"),a=t(\"./errors.js\").RangeError,u=t(\"./errors.js\").AggregateError,c=s.isArray;s.inherits(i,r),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=c(this._values);!this._isResolved()\u0026\u0026t\u0026\u0026this._howMany\u003ethis._canPossiblyFulfill()\u0026\u0026this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){this._addFulfilled(t),this._fulfilled()===this.howMany()\u0026\u0026(this._values.length=this.howMany(),this._resolve(1===this.howMany()\u0026\u0026this._unwrap?this._values[0]:this._values))},i.prototype._promiseRejected=function(t){if(this._addRejected(t),this.howMany()\u003ethis._canPossiblyFulfill()){for(var e=new u,r=this.length();r\u003cthis._values.length;++r)e.push(this._values[r]);this._reject(e)}},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e=\"Input array must contain at least \"+this._howMany+\" items but contains only \"+t+\" items\";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{\"./errors.js\":13,\"./util.js\":38}],34:[function(t,e){\"use strict\";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValue=t._settledValue):(this._bitField=0,this._settledValue=void 0)}e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return this._settledValue},e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return this._settledValue},e.prototype.isFulfilled=t.prototype._isFulfilled=function(){return(268435456\u0026this._bitField)\u003e0},e.prototype.isRejected=t.prototype._isRejected=function(){return(134217728\u0026this._bitField)\u003e0},e.prototype.isPending=t.prototype._isPending=function(){return 0===(402653184\u0026this._bitField)},e.prototype.isResolved=t.prototype._isResolved=function(){return(402653184\u0026this._bitField)\u003e0},t.prototype.isPending=function(){return this._target()._isPending()},t.prototype.isRejected=function(){return this._target()._isRejected()},t.prototype.isFulfilled=function(){return this._target()._isFulfilled()},t.prototype.isResolved=function(){return this._target()._isResolved()},t.prototype._value=function(){return this._settledValue},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue},t.prototype.value=function(){var t=this._target();if(!t.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return t._settledValue},t.prototype.reason=function(){var t=this._target();if(!t.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return t._unsetRejectionIsUnhandled(),t._settledValue},t.PromiseInspection=e}},{}],35:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t,n){if(c(t)){if(t instanceof e)return t;if(o(t)){var l=new e(r);return t._then(l._fulfillUnchecked,l._rejectUncheckedCheckError,l._progressUnchecked,l,null),l}var h=a.tryCatch(i)(t);if(h===u){n\u0026\u0026n._pushContext();var l=e.reject(h.e);return n\u0026\u0026n._popContext(),l}if(\"function\"==typeof h)return s(t,h,n)}return t}function i(t){return t.then}function o(t){return l.call(t,\"_promise0\")}function s(t,n,i){function o(t){l\u0026\u0026(l._resolveCallback(t),l=null)}function s(t){l\u0026\u0026(l._rejectCallback(t,p,!0),l=null)}function c(t){l\u0026\u0026\"function\"==typeof l._progress\u0026\u0026l._progress(t)}var l=new e(r),h=l;i\u0026\u0026i._pushContext(),l._captureStackTrace(),i\u0026\u0026i._popContext();var p=!0,f=a.tryCatch(n).call(t,o,s,c);return p=!1,l\u0026\u0026f===u\u0026\u0026(l._rejectCallback(f.e,!0,!0),l=null),h}var a=t(\"./util.js\"),u=a.errorObj,c=a.isObject,l={}.hasOwnProperty;return n}},{\"./util.js\":38}],36:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){var e=this;return e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}function i(t){var e=this;throw e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}var o=t(\"./util.js\"),s=e.TimeoutError,a=function(t,e){if(t.isPending()){var r;!o.isPrimitive(e)\u0026\u0026e instanceof Error?r=e:(\"string\"!=typeof e\u0026\u0026(e=\"operation timed out\"),r=new s(e)),o.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._cancel(r)}},u=function(t){return c(+this).thenReturn(t)},c=e.delay=function(t,n){if(void 0===n){n=t,t=void 0;var i=new e(r);return setTimeout(function(){i._fulfill()},n),i}return n=+n,e.resolve(t)._then(u,null,null,n,void 0)};e.prototype.delay=function(t){return c(this,t)},e.prototype.timeout=function(t,e){t=+t;var r=this.then().cancellable();r._cancellationParent=this;var o=setTimeout(function(){a(r,e)},t);return r._then(n,i,void 0,o,void 0)}}},{\"./util.js\":38}],37:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var r=t.length,n=0;r\u003en;++n){var i=t[n];if(i.isRejected())return e.reject(i.error());t[n]=i._settledValue}return t}function s(t){setTimeout(function(){throw t},0)}function a(t){var e=n(t);return e!==t\u0026\u0026\"function\"==typeof t._isDisposable\u0026\u0026\"function\"==typeof t._getDisposer\u0026\u0026t._isDisposable()\u0026\u0026e._setDisposable(t._getDisposer()),e}function u(t,r){function i(){if(o\u003e=u)return c.resolve();var l=a(t[o++]);if(l instanceof e\u0026\u0026l._isDisposable()){try{l=n(l._getDisposer().tryDispose(r),t.promise)}catch(h){return s(h)}if(l instanceof e)return l._then(i,s,null,null,null)}i()}var o=0,u=t.length,c=e.defer();return i(),c.promise}function c(t){var e=new v;return e._settledValue=t,e._bitField=268435456,u(this,e).thenReturn(t)}function l(t){var e=new v;return e._settledValue=t,e._bitField=134217728,u(this,e).thenThrow(t)}function h(t,e,r){this._data=t,this._promise=e,this._context=r}function p(t,e,r){this.constructor$(t,e,r)}function f(t){return h.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}var _=t(\"./errors.js\").TypeError,d=t(\"./util.js\").inherits,v=e.PromiseInspection;h.prototype.data=function(){return this._data},h.prototype.promise=function(){return this._promise},h.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():null},h.prototype.tryDispose=function(t){var e=this.resource(),r=this._context;void 0!==r\u0026\u0026r._pushContext();var n=null!==e?this.doDispose(e,t):null;return void 0!==r\u0026\u0026r._popContext(),this._promise._unsetDisposable(),this._data=null,n},h.isDisposer=function(t){return null!=t\u0026\u0026\"function\"==typeof t.resource\u0026\u0026\"function\"==typeof t.tryDispose},d(p,h),p.prototype.doDispose=function(t,e){var r=this.data();return r.call(t,t,e)},e.using=function(){var t=arguments.length;if(2\u003et)return r(\"you must pass at least 2 arguments to Promise.using\");var i=arguments[t-1];if(\"function\"!=typeof i)return r(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var s,a=!0;2===t\u0026\u0026Array.isArray(arguments[0])?(s=arguments[0],t=s.length,a=!1):(s=arguments,t--);for(var u=new Array(t),p=0;t\u003ep;++p){var _=s[p];if(h.isDisposer(_)){var d=_;_=_.promise(),_._setDisposable(d)","}else{var v=n(_);v instanceof e\u0026\u0026(_=v._then(f,null,null,{resources:u,index:p},void 0))}u[p]=_}var y=e.settle(u).then(o).then(function(t){y._pushContext();var e;try{e=a?i.apply(void 0,t):i.call(void 0,t)}finally{y._popContext()}return e})._then(c,l,void 0,u,void 0);return u.promise=y,y},e.prototype._setDisposable=function(t){this._bitField=262144|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(262144\u0026this._bitField)\u003e0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-262145\u0026this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if(\"function\"==typeof t)return new p(t,this,i());throw new _}}},{\"./errors.js\":13,\"./util.js\":38}],38:[function(t,e,r){\"use strict\";function n(){try{var t=C;return C=null,t.apply(this,arguments)}catch(e){return F.e=e,F}}function i(t){return C=t,n}function o(t){return null==t||t===!0||t===!1||\"string\"==typeof t||\"number\"==typeof t}function s(t){return!o(t)}function a(t){return o(t)?new Error(v(t)):t}function u(t,e){var r,n=t.length,i=new Array(n+1);for(r=0;n\u003er;++r)i[r]=t[r];return i[r]=e,i}function c(t,e,r){if(!w.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var n=Object.getOwnPropertyDescriptor(t,e);return null!=n?null==n.get\u0026\u0026null==n.set?n.value:r:void 0}function l(t,e,r){if(o(t))return t;var n={value:r,configurable:!0,enumerable:!1,writable:!0};return w.defineProperty(t,e,n),t}function h(t){throw t}function p(t){try{if(\"function\"==typeof t){var e=w.names(t.prototype),r=w.isES5\u0026\u0026e.length\u003e1,n=e.length\u003e0\u0026\u0026!(1===e.length\u0026\u0026\"constructor\"===e[0]),i=x.test(t+\"\")\u0026\u0026w.names(t).length\u003e0;if(r||n||i)return!0}return!1}catch(o){return!1}}function f(t){function e(){}e.prototype=t;for(var r=8;r--;)new e;return t}function _(t){return R.test(t)}function d(t,e,r){for(var n=new Array(t),i=0;t\u003ei;++i)n[i]=e+i+r;return n}function v(t){try{return t+\"\"}catch(e){return\"[no string representation]\"}}function y(t){try{l(t,\"isOperational\",!0)}catch(e){}}function g(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function m(t){return t instanceof Error\u0026\u0026w.propertyIsWritable(t,\"stack\")}function j(t){return{}.toString.call(t)}function b(t,e,r){for(var n=w.names(t),i=0;i\u003cn.length;++i){var o=n[i];if(r(o))try{w.defineProperty(e,o,w.getDescriptor(t,o))}catch(s){}}}var w=t(\"./es5.js\"),k=\"undefined\"==typeof navigator,E=function(){try{var t={};return w.defineProperty(t,\"f\",{get:function(){return 3}}),3===t.f}catch(e){return!1}}(),F={e:{}},C,P=function(t,e){function r(){this.constructor=t,this.constructor$=e;for(var r in e.prototype)n.call(e.prototype,r)\u0026\u0026\"$\"!==r.charAt(r.length-1)\u0026\u0026(this[r+\"$\"]=e.prototype[r])}var n={}.hasOwnProperty;return r.prototype=e.prototype,t.prototype=new r,t.prototype},T=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var r=0;r\u003ct.length;++r)if(t[r]===e)return!0;return!1};if(w.isES5){var r=Object.getOwnPropertyNames;return function(t){for(var n=[],i=Object.create(null);null!=t\u0026\u0026!e(t);){var o;try{o=r(t)}catch(s){return n}for(var a=0;a\u003co.length;++a){var u=o[a];if(!i[u]){i[u]=!0;var c=Object.getOwnPropertyDescriptor(t,u);null!=c\u0026\u0026null==c.get\u0026\u0026null==c.set\u0026\u0026n.push(u)}}t=w.getPrototypeOf(t)}return n}}var n={}.hasOwnProperty;return function(r){if(e(r))return[];var i=[];t:for(var o in r)if(n.call(r,o))i.push(o);else{for(var s=0;s\u003ct.length;++s)if(n.call(t[s],o))continue t;i.push(o)}return i}}(),x=/this\\s*\\.\\s*\\S+\\s*=/,R=/^[a-z$_][a-z$_0-9]*$/i,S=function(){return\"stack\"in new Error?function(t){return m(t)?t:new Error(v(t))}:function(t){if(m(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),A={isClass:p,isIdentifier:_,inheritedDataKeys:T,getDataPropertyOrDefault:c,thrower:h,isArray:w.isArray,haveGetters:E,notEnumerableProp:l,isPrimitive:o,isObject:s,canEvaluate:k,errorObj:F,tryCatch:i,inherits:P,withAppended:u,maybeWrapAsError:a,toFastProperties:f,filledRange:d,toString:v,canAttachTrace:m,ensureErrorObject:S,originatesFromRejection:g,markAsOriginatingFromRejection:y,classString:j,copyDescriptors:b,hasDevTools:\"undefined\"!=typeof chrome\u0026\u0026chrome\u0026\u0026\"function\"==typeof chrome.loadTimes,isNode:\"undefined\"!=typeof process\u0026\u0026\"[object process]\"===j(process).toLowerCase()};A.isRecentNode=A.isNode\u0026\u0026function(){var t=process.versions.node.split(\".\").map(Number);return 0===t[0]\u0026\u0026t[1]\u003e10||t[0]\u003e0}(),A.isNode\u0026\u0026A.toFastProperties(process);try{throw new Error}catch(O){A.lastLineError=O}e.exports=A},{\"./es5.js\":14}]},{},[4])(4)}),\"undefined\"!=typeof window\u0026\u0026null!==window?window.P=window.Promise:\"undefined\"!=typeof self\u0026\u0026null!==self\u0026\u0026(self.P=self.Promise);"],"Functions":["!function(t)if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],t);else{var e;\"undefined\"!=typeof window?e=window:\"undefined\"!=typeof global?e=global:\"undefined\"!=typeof self\u0026\u0026(e=self),e.Promise=t()}}(function(){var t,e,r;return function n(t,e,r){function i(s,a){if(!e[s]){if(!t[s]){var u=\"function\"==typeof _dereq_\u0026\u0026_dereq_;if(!a\u0026\u0026u)return u(s,!0);if(o)return o(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var r=t[s][1][e];return i(r?r:e)},l,l.exports,n,t,e,r)}return e[s].exports}for(var o=\"function\"==typeof _dereq_\u0026\u0026_dereq_,s=0;s\u003cr.length;s++)i(r[s]);return i}({1:[function(t,e){\"use strict\";e.exports=function(t){function e(t){var e=new r(t),n=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),n}var r=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e){\"use strict\";function r(){this._isTickUsed=!1,this._lateQueue=new c(16),this._normalQueue=new c(16),this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=u.isStatic?u(this.drainQueues):u}function n(t,e,r){this._lateQueue.push(t,e,r),this._queueTick()}function i(t,e,r){this._normalQueue.push(t,e,r),this._queueTick()}function o(t){this._normalQueue._pushOne(t),this._queueTick()}var s;try{throw new Error}catch(a){s=a}var u=t(\"./schedule.js\"),c=t(\"./queue.js\"),l=t(\"./util.js\");r.prototype.disableTrampolineIfNecessary=function(){l.hasDevTools\u0026\u0026(this._trampolineEnabled=!1)},r.prototype.enableTrampoline=function(){this._trampolineEnabled||(this._trampolineEnabled=!0,this._schedule=function(t){setTimeout(t,0)})},r.prototype.haveItemsQueued=function(){return this._normalQueue.length()\u003e0},r.prototype.throwLater=function(t,e){if(1===arguments.length\u0026\u0026(e=t,t=function(){throw e}),\"undefined\"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(r){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")}},l.hasDevTools?(u.isStatic\u0026\u0026(u=function(t){setTimeout(t,0)}),r.prototype.invokeLater=function(t,e,r){this._trampolineEnabled?n.call(this,t,e,r):this._schedule(function(){setTimeout(function(){t.call(e,r)},100)})},r.prototype.invoke=function(t,e,r){this._trampolineEnabled?i.call(this,t,e,r):this._schedule(function(){t.call(e,r)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?o.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=n,r.prototype.invoke=i,r.prototype.settlePromises=o),r.prototype.invokeFirst=function(t,e,r){this._normalQueue.unshift(t,e,r),this._queueTick()},r.prototype._drainQueue=function(t){for(;t.length()\u003e0;){var e=t.shift();if(\"function\"==typeof e){var r=t.shift(),n=t.shift();e.call(r,n)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=new r,e.exports.firstLineError=s},{\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(t,e){\"use strict\";e.exports=function(t,e,r){var n=function(t,e){this._reject(e)},i=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(n,n,null,this,t)},o=function(t,e){this._isPending()\u0026\u0026this._resolveCallback(e.target)},s=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(n){var a=r(n),u=new t(e);u._propagateFrom(this,1);var c=this._target();if(u._setBoundTo(a),a instanceof t){var l={promiseRejectionQueued:!1,promise:u,target:c,bindingPromise:a};c._then(e,i,u._progress,u,l),a._then(o,s,u._progress,u,l)}else u._resolveCallback(c);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=131072|this._bitField,this._boundTo=t):this._bitField=-131073\u0026this._bitField},t.prototype._isBound=function(){return 131072===(131072\u0026this._bitField)},t.bind=function(n,i){var o=r(n),s=new t(e);return s._setBoundTo(o),o instanceof t?o._then(function(){s._resolveCallback(i)},s._reject,s._progress,s,null):s._resolveCallback(i),s}}},{}],4:[function(t,e){\"use strict\";function r(){try{Promise===i\u0026\u0026(Promise=n)}catch(t){}return i}var n;\"undefined\"!=typeof Promise\u0026\u0026(n=Promise);var i=t(\"./promise.js\")();i.noConflict=r,e.exports=i},{\"./promise.js\":23}],5:[function(t,e){\"use strict\";var r=Object.create;if(r){var n=r(null),i=r(null);n[\" size\"]=i[\" size\"]=0}e.exports=function(e){function r(t,r){var n;if(null!=t\u0026\u0026(n=t[r]),\"function\"!=typeof n){var i=\"Object \"+a.classString(t)+\" has no method '\"+a.toString(r)+\"'\";throw new e.TypeError(i)}return n}function n(t){var e=this.pop(),n=r(t,e);return n.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0\u003ee\u0026\u0026(e=Math.max(0,e+t.length)),t[e]}{var s,a=t(\"./util.js\"),u=a.canEvaluate;a.isIdentifier}e.prototype.call=function(t){for(var e=arguments.length,r=new Array(e-1),i=1;e\u003ei;++i)r[i-1]=arguments[i];return r.push(t),this._then(n,void 0,void 0,r,void 0)},e.prototype.get=function(t){var e,r=\"number\"==typeof t;if(r)e=o;else if(u){var n=s(t);e=null!==n?n:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],6:[function(t,e){\"use strict\";e.exports=function(e){var r=t(\"./errors.js\"),n=t(\"./async.js\"),i=r.CancellationError;e.prototype._cancel=function(t){if(!this.isCancellable())return this;for(var e,r=this;void 0!==(e=r._cancellationParent)\u0026\u0026e.isCancellable();)r=e;this._unsetCancellable(),r._target()._rejectCallback(t,!1,!0)},e.prototype.cancel=function(t){return this.isCancellable()?(void 0===t\u0026\u0026(t=new i),n.invokeLater(this._cancel,this,t),this):this},e.prototype.cancellable=function(){return this._cancellable()?this:(n.enableTrampoline(),this._setCancellable(),this._cancellationParent=void 0,this)},e.prototype.uncancellable=function(){var t=this.then();return t._unsetCancellable(),t},e.prototype.fork=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);return n._setCancellable(),n._cancellationParent=void 0,n}}},{\"./async.js\":2,\"./errors.js\":13}],7:[function(t,e){\"use strict\";e.exports=function(){function e(t){this._parent=t;var r=this._length=1+(void 0===t?0:t._length);j(this,e),r\u003e32\u0026\u0026this.uncycle()}function r(t,e){for(var r=0;r\u003ce.length-1;++r)e[r].push(\"From previous event:\"),e[r]=e[r].join(\"\\n\");return r\u003ce.length\u0026\u0026(e[r]=e[r].join(\"\\n\")),t+\"\\n\"+e.join(\"\\n\")}function n(t){for(var e=0;e\u003ct.length;++e)(0===t[e].length||e+1\u003ct.length\u0026\u0026t[e][0]===t[e+1][0])\u0026\u0026(t.splice(e,1),e--)}function i(t){for(var e=t[0],r=1;r\u003ct.length;++r){for(var n=t[r],i=e.length-1,o=e[i],s=-1,a=n.length-1;a\u003e=0;--a)if(n[a]===o){s=a;break}for(var a=s;a\u003e=0;--a){var u=n[a];if(e[i]!==u)break;e.pop(),i--}e=n}}function o(t){for(var e=[],r=0;r\u003ct.length;++r){var n=t[r],i=_.test(n)||\"    (No stack trace)\"===n,o=i\u0026\u0026y(n);i\u0026\u0026!o\u0026\u0026(v\u0026\u0026\" \"!==n.charAt(0)\u0026\u0026(n=\"    \"+n),e.push(n))}return e}function s(t){for(var e=t.stack.replace(/\\s+$/g,\"\").split(\"\\n\"),r=0;r\u003ce.length;++r){var n=e[r];if(\"    (No stack trace)\"===n||_.test(n))break}return r\u003e0\u0026\u0026(e=e.slice(r)),e}function a(t){var e;if(\"function\"==typeof t)e=\"[function \"+(t.name||\"anonymous\")+\"]\";else{e=t.toString();var r=/\\[object [a-zA-Z0-9$_]+\\]/;if(r.test(e))try{var n=JSON.stringify(t);e=n}catch(i){}0===e.length\u0026\u0026(e=\"(empty array)\")}return\"(\u003c\"+u(e)+\"\u003e, no stack trace)\"}function u(t){var e=41;return t.length\u003ce?t:t.substr(0,e-3)+\"...\"}function c(t){var e=t.match(g);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}var l,h=t(\"./async.js\"),p=t(\"./util.js\"),f=/[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo|instrumented)/,_=null,d=null,v=!1;p.inherits(e,Error),e.prototype.uncycle=function(){var t=this._length;if(!(2\u003et)){for(var e=[],r={},n=0,i=this;void 0!==i;++n)e.push(i),i=i._parent;t=this._length=n;for(var n=t-1;n\u003e=0;--n){var o=e[n].stack;void 0===r[o]\u0026\u0026(r[o]=n)}for(var n=0;t\u003en;++n){var s=e[n].stack,a=r[s];if(void 0!==a\u0026\u0026a!==n){a\u003e0\u0026\u0026(e[a-1]._parent=void 0,e[a-1]._length=1),e[n]._parent=void 0,e[n]._length=1;var u=n\u003e0?e[n-1]:this;t-1\u003ea?(u._parent=e[a+1],u._parent.uncycle(),u._length=u._parent._length+1):(u._parent=void 0,u._length=1);for(var c=u._length+1,l=n-2;l\u003e=0;--l)e[l]._length=c,c++;return}}}},e.prototype.parent=function(){return this._parent},e.prototype.hasParent=function(){return void 0!==this._parent},e.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var s=e.parseStackAndMessage(t),a=s.message,u=[s.stack],c=this;void 0!==c;)u.push(o(c.stack.split(\"\\n\"))),c=c._parent;i(u),n(u),p.notEnumerableProp(t,\"stack\",r(a,u)),p.notEnumerableProp(t,\"__stackCleaned__\",!0)}},e.parseStackAndMessage=function(t){var e=t.stack,r=t.toString();return e=\"string\"==typeof e\u0026\u0026e.length\u003e0?s(t):[\"    (No stack trace)\"],{message:r,stack:o(e)}},e.formatAndLogError=function(t,e){if(\"undefined\"!=typeof console){var r;if(\"object\"==typeof t||\"function\"==typeof t){var n=t.stack;r=e+d(n,t)}else r=e+String(t);\"function\"==typeof l?l(r):(\"function\"==typeof console.log||\"object\"==typeof console.log)\u0026\u0026console.log(r)}},e.unhandledRejection=function(t){e.formatAndLogError(t,\"^--- With additional stack trace: \")},e.isSupported=function(){return\"function\"==typeof j},e.fireRejectionEvent=function(t,r,n,i){var o=!1;try{\"function\"==typeof r\u0026\u0026(o=!0,\"rejectionHandled\"===t?r(i):r(n,i))}catch(s){h.throwLater(s)}var a=!1;try{a=b(t,n,i)}catch(s){a=!0,h.throwLater(s)}var u=!1;if(m)try{u=m(t.toLowerCase(),{reason:n,promise:i})}catch(s){u=!0,h.throwLater(s)}a||o||u||\"unhandledRejection\"!==t||e.formatAndLogError(n,\"Unhandled rejection \")};var y=function(){return!1},g=/[\\/\u003c\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;e.setBounds=function(t,r){if(e.isSupported()){for(var n,i,o=t.stack.split(\"\\n\"),s=r.stack.split(\"\\n\"),a=-1,u=-1,l=0;l\u003co.length;++l){var h=c(o[l]);if(h){n=h.fileName,a=h.line;break}}for(var l=0;l\u003cs.length;++l){var h=c(s[l]);if(h){i=h.fileName,u=h.line;break}}0\u003ea||0\u003eu||!n||!i||n!==i||a\u003e=u||(y=function(t){if(f.test(t))return!0;var e=c(t);return e\u0026\u0026e.fileName===n\u0026\u0026a\u003c=e.line\u0026\u0026e.line\u003c=u?!0:!1})}};var m,j=function(){var t=/^\\s*at\\s*/,e=function(t,e){return\"string\"==typeof t?t:void 0!==e.name\u0026\u0026void 0!==e.message?e.toString():a(e)};if(\"number\"==typeof Error.stackTraceLimit\u0026\u0026\"function\"==typeof Error.captureStackTrace){Error.stackTraceLimit=Error.stackTraceLimit+6,_=t,d=e;var r=Error.captureStackTrace;return y=function(t){return f.test(t)},function(t,e){Error.stackTraceLimit=Error.stackTraceLimit+6,r(t,e),Error.stackTraceLimit=Error.stackTraceLimit-6}}var n=new Error;if(\"string\"==typeof n.stack\u0026\u0026n.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\")\u003e=0)return _=/@/,d=e,v=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i=\"stack\"in o}return\"stack\"in n||!i||\"number\"!=typeof Error.stackTraceLimit?(d=function(t,e){return\"string\"==typeof t?t:\"object\"!=typeof e\u0026\u0026\"function\"!=typeof e||void 0===e.name||void 0===e.message?a(e):e.toString()},null):(_=t,d=e,function(t){Error.stackTraceLimit=Error.stackTraceLimit+6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit=Error.stackTraceLimit-6})}([]),b=function(){if(p.isNode)return function(t,e,r){return\"rejectionHandled\"===t?process.emit(t,r):process.emit(t,e,r)};var t=!1,e=!0;try{var r=new self.CustomEvent(\"test\");t=r instanceof CustomEvent}catch(n){}if(!t)try{var i=document.createEvent(\"CustomEvent\");i.initCustomEvent(\"testingtheevent\",!1,!0,{}),self.dispatchEvent(i)}catch(n){e=!1}e\u0026\u0026(m=function(e,r){var n;return t?n=new self.CustomEvent(e,{detail:r,bubbles:!1,cancelable:!0}):self.dispatchEvent\u0026\u0026(n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,!1,!0,r)),n?!self.dispatchEvent(n):!1});var o={};return o.unhandledRejection=\"onunhandledRejection\".toLowerCase(),o.rejectionHandled=\"onrejectionHandled\".toLowerCase(),function(t,e,r){var n=o[t],i=self[n];return i?(\"rejectionHandled\"===t?i.call(self,r):i.call(self,e,r),!0):!1}}();return\"undefined\"!=typeof console\u0026\u0026\"undefined\"!=typeof console.warn\u0026\u0026(l=function(t){console.warn(t)},p.isNode\u0026\u0026process.stderr.isTTY?l=function(t){process.stderr.write(\"\u001b[31m\"+t+\"\u001b[39m\\n\")}:p.isNode||\"string\"!=typeof(new Error).stack||(l=function(t){console.warn(\"%c\"+t,\"color: red\")})),e}},{\"./async.js\":2,\"./util.js\":38}],8:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e,r){this._instances=t,this._callback=e,this._promise=r}function n(t,e){var r={},n=s(t).call(r,e);if(n===a)return n;var i=u(r);return i.length?(a.e=new c(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"),a):n}var i=t(\"./util.js\"),o=t(\"./errors.js\"),s=i.tryCatch,a=i.errorObj,u=t(\"./es5.js\").keys,c=o.TypeError;return r.prototype.doFilter=function(t){for(var r=this._callback,i=this._promise,o=i._boundValue(),u=0,c=this._instances.length;c\u003eu;++u){var l=this._instances[u],h=l===Error||null!=l\u0026\u0026l.prototype instanceof Error;if(h\u0026\u0026t instanceof l){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}if(\"function\"==typeof l\u0026\u0026!h){var f=n(l,t);if(f===a){t=a.e;break}if(f){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}}}return e.e=t,e},r}},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(t,e){\"use strict\";e.exports=function(t,e,r){function n(){this._trace=new e(o())}function i(){return r()?new n:void 0}function o(){var t=s.length-1;return t\u003e=0?s[t]:void 0}var s=[];return n.prototype._pushContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.push(this._trace)},n.prototype._popContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.pop()},t.prototype._peekContext=o,t.prototype._pushContext=n.prototype._pushContext,t.prototype._popContext=n.prototype._popContext,i}},{}],10:[function(t,e){\"use strict\";e.exports=function(e,r){var n,i,o=e._getDomain,s=t(\"./async.js\"),a=t(\"./errors.js\").Warning,u=t(\"./util.js\"),c=u.canAttachTrace,l=!1||u.isNode\u0026\u0026(!!process.env.BLUEBIRD_DEBUG||\"development\"===process.env.NODE_ENV);return u.isNode\u0026\u00260==process.env.BLUEBIRD_DEBUG\u0026\u0026(l=!1),l\u0026\u0026s.disableTrampolineIfNecessary(),e.prototype._ignoreRejections=function(){this._unsetRejectionIsUnhandled(),this._bitField=16777216|this._bitField},e.prototype._ensurePossibleRejectionHandled=function(){0===(16777216\u0026this._bitField)\u0026\u0026(this._setRejectionIsUnhandled(),s.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){r.fireRejectionEvent(\"rejectionHandled\",n,void 0,this)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._getCarriedStackTrace()||this._settledValue;this._setUnhandledRejectionIsNotified(),r.fireRejectionEvent(\"unhandledRejection\",i,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=524288|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-524289\u0026this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(524288\u0026this._bitField)\u003e0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=2097152|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-2097153\u0026this._bitField,this._isUnhandledRejectionNotified()\u0026\u0026(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(2097152\u0026this._bitField)\u003e0},e.prototype._setCarriedStackTrace=function(t){this._bitField=1048576|this._bitField,this._fulfillmentHandler0=t},e.prototype._isCarryingStackTrace=function(){return(1048576\u0026this._bitField)\u003e0},e.prototype._getCarriedStackTrace=function(){return this._isCarryingStackTrace()?this._fulfillmentHandler0:void 0},e.prototype._captureStackTrace=function(){return l\u0026\u0026(this._trace=new r(this._peekContext())),this},e.prototype._attachExtraTrace=function(t,e){if(l\u0026\u0026c(t)){var n=this._trace;if(void 0!==n\u0026\u0026e\u0026\u0026(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var i=r.parseStackAndMessage(t);u.notEnumerableProp(t,\"stack\",i.message+\"\\n\"+i.stack.join(\"\\n\")),u.notEnumerableProp(t,\"__stackCleaned__\",!0)}}},e.prototype._warn=function(t){var e=new a(t),n=this._peekContext();if(n)n.attachExtraTrace(e);else{var i=r.parseStackAndMessage(e);e.stack=i.message+\"\\n\"+i.stack.join(\"\\n\")}r.formatAndLogError(e,\"\")},e.onPossiblyUnhandledRejection=function(t){var e=o();i=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.onUnhandledRejectionHandled=function(t){var e=o();n=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.longStackTraces=function(){if(s.haveItemsQueued()\u0026\u0026l===!1)throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/DT1qyG\\n\");l=r.isSupported(),l\u0026\u0026s.disableTrampolineIfNecessary()},e.hasLongStackTraces=function(){return l\u0026\u0026r.isSupported()},r.isSupported()||(e.longStackTraces=function(){},l=!1),function(){return l}}},{\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(t,e){\"use strict\";var r=t(\"./util.js\"),n=r.isPrimitive;e.exports=function(t){var e=function(){return this},r=function(){throw this},i=function(){},o=function(){throw void 0},s=function(t,e){return 1===e?function(){throw t}:2===e?function(){return t}:void 0};t.prototype[\"return\"]=t.prototype.thenReturn=function(r){return void 0===r?this.then(i):n(r)?this._then(s(r,2),void 0,void 0,void 0,void 0):(r instanceof t\u0026\u0026r._ignoreRejections(),this._then(e,void 0,void 0,r,void 0))},t.prototype[\"throw\"]=t.prototype.thenThrow=function(t){return void 0===t?this.then(o):n(t)?this._then(s(t,1),void 0,void 0,void 0,void 0):this._then(r,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],12:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.reduce;t.prototype.each=function(t){return r(this,t,null,e)},t.each=function(t,n){return r(t,n,null,e)}}},{}],13:[function(t,e){\"use strict\";function r(t,e){function r(n){return this instanceof r?(l(this,\"message\",\"string\"==typeof n?n:e),l(this,\"name\",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new r(n)}return c(r,Error),r}function n(t){return this instanceof n?(l(this,\"name\",\"OperationalError\"),l(this,\"message\",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(l(this,\"message\",t.message),l(this,\"stack\",t.stack)):Error.captureStackTrace\u0026\u0026Error.captureStackTrace(this,this.constructor))):new n(t)}var i,o,s=t(\"./es5.js\"),a=s.freeze,u=t(\"./util.js\"),c=u.inherits,l=u.notEnumerableProp,h=r(\"Warning\",\"warning\"),p=r(\"CancellationError\",\"cancellation error\"),f=r(\"TimeoutError\",\"timeout error\"),_=r(\"AggregateError\",\"aggregate error\");try{i=TypeError,o=RangeError}catch(d){i=r(\"TypeError\",\"type error\"),o=r(\"RangeError\",\"range error\")}for(var v=\"join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse\".split(\" \"),y=0;y\u003cv.length;++y)\"function\"==typeof Array.prototype[v[y]]\u0026\u0026(_.prototype[v[y]]=Array.prototype[v[y]]);s.defineProperty(_.prototype,\"length\",{value:0,configurable:!1,writable:!0,enumerable:!0}),_.prototype.isOperational=!0;var g=0;_.prototype.toString=function(){var t=Array(4*g+1).join(\" \"),e=\"\\n\"+t+\"AggregateError of:\\n\";g++,t=Array(4*g+1).join(\" \");for(var r=0;r\u003cthis.length;++r){for(var n=this[r]===this?\"[Circular AggregateError]\":this[r]+\"\",i=n.split(\"\\n\"),o=0;o\u003ci.length;++o)i[o]=t+i[o];n=i.join(\"\\n\"),e+=n+\"\\n\"}return g--,e},c(n,Error);var m=Error.__BluebirdErrorTypes__;m||(m=a({CancellationError:p,TimeoutError:f,OperationalError:n,RejectionError:n,AggregateError:_}),l(Error,\"__BluebirdErrorTypes__\",m)),e.exports={Error:Error,TypeError:i,RangeError:o,CancellationError:m.CancellationError,OperationalError:m.OperationalError,TimeoutError:m.TimeoutError,AggregateError:m.AggregateError,Warning:h}},{\"./es5.js\":14,\"./util.js\":38}],14:[function(t,e){var r=function(){\"use strict\";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var r=Object.getOwnPropertyDescriptor(t,e);return!(r\u0026\u0026!r.writable\u0026\u0026!r.set)}};else{var n={}.hasOwnProperty,i={}.toString,o={}.constructor.prototype,s=function(t){var e=[];for(var r in t)n.call(t,r)\u0026\u0026e.push(r);return e},a=function(t,e){return{value:t[e]}},u=function(t,e,r){return t[e]=r.value,t},c=function(t){return t},l=function(t){try{return Object(t).constructor.prototype}catch(e){return o}},h=function(t){try{return\"[object Array]\"===i.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:s,names:s,defineProperty:u,getDescriptor:a,freeze:c,getPrototypeOf:l,isES5:r,propertyIsWritable:function(){return!0}}}},{}],15:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.map;t.prototype.filter=function(t,n){return r(this,t,n,e)},t.filter=function(t,n,i){return r(t,n,i,e)}}},{}],16:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(){return this}function o(){throw this}function s(t){return function(){return t}}function a(t){return function(){throw t}}function u(t,e,r){var n;return n=p(e)?r?s(e):a(e):r?i:o,t._then(n,f,void 0,e,void 0)}function c(t){var i=this.promise,o=this.handler,s=i._isBound()?o.call(i._boundValue()):o();if(void 0!==s){var a=n(s,i);if(a instanceof e)return a=a._target(),u(a,t,i.isFulfilled())}return i.isRejected()?(r.e=t,r):t}function l(t){var r=this.promise,i=this.handler,o=r._isBound()?i.call(r._boundValue(),t):i(t);if(void 0!==o){var s=n(o,r);if(s instanceof e)return s=s._target(),u(s,t,!0)}return t}var h=t(\"./util.js\"),p=h.isPrimitive,f=h.thrower;e.prototype._passThroughHandler=function(t,e){if(\"function\"!=typeof t)return this.then();var r={promise:this,handler:t};return this._then(e?c:l,e?c:void 0,void 0,r,void 0)},e.prototype.lastly=e.prototype[\"finally\"]=function(t){return this._passThroughHandler(t,!0)},e.prototype.tap=function(t){return this._passThroughHandler(t,!1)}}},{\"./util.js\":38}],17:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,r,n){for(var o=0;o\u003cr.length;++o){n._pushContext();var s=h(r[o])(t);if(n._popContext(),s===l){n._pushContext();var a=e.reject(l.e);return n._popContext(),a}var u=i(s,n);if(u instanceof e)return u}return null}function s(t,r,i,o){var s=this._promise=new e(n);s._captureStackTrace(),this._stack=o,this._generatorFunction=t,this._receiver=r,this._generator=void 0,this._yieldHandlers=\"function\"==typeof i?[i].concat(p):p}var a=t(\"./errors.js\"),u=a.TypeError,c=t(\"./util.js\"),l=c.errorObj,h=c.tryCatch,p=[];s.prototype.promise=function(){return this._promise},s.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._next(void 0)},s.prototype._continue=function(t){if(t===l)return this._promise._rejectCallback(t.e,!1,!0);var r=t.value;if(t.done===!0)this._promise._resolveCallback(r);else{var n=i(r,this._promise);if(!(n instanceof e)\u0026\u0026(n=o(n,this._yieldHandlers,this._promise),null===n))return void this._throw(new u(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/4Y4pDk\\n\\n\".replace(\"%s\",r)+\"From coroutine:\\n\"+this._stack.split(\"\\n\").slice(1,-7).join(\"\\n\")));n._then(this._next,this._throw,void 0,this,null)}},s.prototype._throw=function(t){this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator[\"throw\"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},s.prototype._next=function(t){this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},e.coroutine=function(t,e){if(\"function\"!=typeof t)throw new u(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var r=Object(e).yieldHandler,n=s,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new n(void 0,void 0,r,i);return o._generator=e,o._next(void 0),o.promise()}},e.coroutine.addYieldHandler=function(t){if(\"function\"!=typeof t)throw new u(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");p.push(t)},e.spawn=function(t){if(\"function\"!=typeof t)return r(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var n=new s(t,this),i=n.promise();return n._run(e.spawn),i}}},{\"./errors.js\":13,\"./util.js\":38}],18:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){{var o=t(\"./util.js\");o.canEvaluate,o.tryCatch,o.errorObj}e.join=function(){var t,e=arguments.length-1;if(e\u003e0\u0026\u0026\"function\"==typeof arguments[e]){t=arguments[e];var n}for(var i=arguments.length,o=new Array(i),s=0;i\u003es;++s)o[s]=arguments[s];t\u0026\u0026o.pop();var n=new r(o).promise();return void 0!==t?n.spread(t):n}}},{\"./util.js\":38}],19:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,e,r,n){this.constructor$(t),this._promise._captureStackTrace();var i=c();this._callback=null===i?e:i.bind(e),this._preservedValues=n===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=r\u003e=1?[]:d,l.invoke(a,this,void 0)}function a(){this._init$(void 0,-2)}function u(t,e,r,n){var i=\"object\"==typeof r\u0026\u0026null!==r?r.concurrency:0;return i=\"number\"==typeof i\u0026\u0026isFinite(i)\u0026\u0026i\u003e=1?i:0,new s(t,e,i,n)}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj,_={},d=[];h.inherits(s,r),s.prototype._init=function(){},s.prototype._promiseFulfilled=function(t,r){var n=this._values,o=this.length(),s=this._preservedValues,a=this._limit;if(n[r]===_){if(n[r]=t,a\u003e=1\u0026\u0026(this._inFlight--,this._drainQueue(),this._isResolved()))return}else{if(a\u003e=1\u0026\u0026this._inFlight\u003e=a)return n[r]=t,void this._queue.push(r);null!==s\u0026\u0026(s[r]=t);var u=this._callback,c=this._promise._boundValue();this._promise._pushContext();var l=p(u).call(c,t,r,o);if(this._promise._popContext(),l===f)return this._reject(l.e);var h=i(l,this._promise);if(h instanceof e){if(h=h._target(),h._isPending())return a\u003e=1\u0026\u0026this._inFlight++,n[r]=_,h._proxyPromiseArray(this,r);if(!h._isFulfilled())return this._reject(h._reason());l=h._value()}n[r]=l}var d=++this._totalResolved;d\u003e=o\u0026\u0026(null!==s?this._filter(n,s):this._resolve(n))},s.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,r=this._values;t.length\u003e0\u0026\u0026this._inFlight\u003ce;){if(this._isResolved())return;var n=t.pop();this._promiseFulfilled(r[n],n)}},s.prototype._filter=function(t,e){for(var r=e.length,n=new Array(r),i=0,o=0;r\u003eo;++o)t[o]\u0026\u0026(n[i++]=e[o]);n.length=i,this._resolve(n)},s.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return\"function\"!=typeof t?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(this,t,e,null).promise()},e.map=function(t,e,r,i){return\"function\"!=typeof e?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(t,e,r,i).promise()}}},{\"./async.js\":2,\"./util.js\":38}],20:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){var o=t(\"./util.js\"),s=o.tryCatch;e.method=function(t){if(\"function\"!=typeof t)throw new e.TypeError(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");return function(){var n=new e(r);n._captureStackTrace(),n._pushContext();var i=s(t).apply(this,arguments);return n._popContext(),n._resolveFromSyncValue(i),n}},e.attempt=e[\"try\"]=function(t,n,a){if(\"function\"!=typeof t)return i(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var u=new e(r);u._captureStackTrace(),u._pushContext();var c=o.isArray(n)?s(t).apply(a,n):s(t).call(a,n);return u._popContext(),u._resolveFromSyncValue(c),u},e.prototype._resolveFromSyncValue=function(t){t===o.errorObj?this._rejectCallback(t.e,!1,!0):this._resolveCallback(t,!0)}}},{\"./util.js\":38}],21:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e){var r=this;if(!o.isArray(t))return n.call(r,t,e);var i=a(e).apply(r._boundValue(),[null].concat(t));i===u\u0026\u0026s.throwLater(i.e)}function n(t,e){var r=this,n=r._boundValue(),i=void 0===t?a(e).call(n,null):a(e).call(n,null,t);i===u\u0026\u0026s.throwLater(i.e)}function i(t,e){var r=this;if(!t){var n=r._target(),i=n._getCarriedStackTrace();i.cause=t,t=i}var o=a(e).call(r._boundValue(),t);o===u\u0026\u0026s.throwLater(o.e)}var o=t(\"./util.js\"),s=t(\"./async.js\"),a=o.tryCatch,u=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if(\"function\"==typeof t){var o=n;void 0!==e\u0026\u0026Object(e).spread\u0026\u0026(o=r),this._then(o,i,void 0,this,t)}return this}}},{\"./async.js\":2,\"./util.js\":38}],22:[function(t,e){\"use strict\";e.exports=function(e,r){var n=t(\"./util.js\"),i=t(\"./async.js\"),o=n.tryCatch,s=n.errorObj;e.prototype.progressed=function(t){return this._then(void 0,void 0,t,void 0,void 0)},e.prototype._progress=function(t){this._isFollowingOrFulfilledOrRejected()||this._target()._progressUnchecked(t)},e.prototype._progressHandlerAt=function(t){return 0===t?this._progressHandler0:this[(t\u003c\u003c2)+t-5+2]},e.prototype._doProgressWith=function(t){var r=t.value,i=t.handler,a=t.promise,u=t.receiver,c=o(i).call(u,r);if(c===s){if(null!=c.e\u0026\u0026\"StopProgressPropagation\"!==c.e.name){var l=n.canAttachTrace(c.e)?c.e:new Error(n.toString(c.e));a._attachExtraTrace(l),a._progress(c.e)}}else c instanceof e?c._then(a._progress,null,null,a,void 0):a._progress(c)},e.prototype._progressUnchecked=function(t){for(var n=this._length(),o=this._progress,s=0;n\u003es;s++){var a=this._progressHandlerAt(s),u=this._promiseAt(s);if(u instanceof e)\"function\"==typeof a?i.invoke(this._doProgressWith,this,{handler:a,promise:u,receiver:this._receiverAt(s),value:t}):i.invoke(o,u,t);else{var c=this._receiverAt(s);\"function\"==typeof a?a.call(c,t,u):c instanceof r\u0026\u0026!c._isResolved()\u0026\u0026c._promiseProgressed(t,u)}}}}},{\"./async.js\":2,\"./util.js\":38}],23:[function(t,e){\"use strict\";e.exports=function(){function e(t){if(\"function\"!=typeof t)throw new h(\"the promise constructor requires a resolver function\\n\\n    See http://goo.gl/EC22Yn\\n\");if(this.constructor!==e)throw new h(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/KsIlge\\n\");this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._progressHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._settledValue=void 0,t!==p\u0026\u0026this._resolveFromResolver(t)}function r(t){var r=new e(p);r._fulfillmentHandler0=t,r._rejectionHandler0=t,r._progressHandler0=t,r._promise0=t,r._receiver0=t,r._settledValue=t}var n,i=function(){return new h(\"circular promise resolution chain\\n\\n    See http://goo.gl/LhFpo0\\n\")},o=function(){return new e.PromiseInspection(this._target())},s=function(t){return e.reject(new h(t))},a=t(\"./util.js\");n=a.isNode?function(){var t=process.domain;return void 0===t\u0026\u0026(t=null),t}:function(){return null},a.notEnumerableProp(e,\"_getDomain\",n);var u={},c=t(\"./async.js\"),l=t(\"./errors.js\"),h=e.TypeError=l.TypeError;e.RangeError=l.RangeError,e.CancellationError=l.CancellationError,e.TimeoutError=l.TimeoutError,e.OperationalError=l.OperationalError,e.RejectionError=l.OperationalError,e.AggregateError=l.AggregateError;var p=function(){},f={},_={e:null},d=t(\"./thenables.js\")(e,p),v=t(\"./promise_array.js\")(e,p,d,s),y=t(\"./captured_trace.js\")(),g=t(\"./debuggability.js\")(e,y),m=t(\"./context.js\")(e,y,g),j=t(\"./catch_filter.js\")(_),b=t(\"./promise_resolver.js\"),w=b._nodebackForPromise,k=a.errorObj,E=a.tryCatch;return e.prototype.toString=function(){return\"[object Promise]\"},e.prototype.caught=e.prototype[\"catch\"]=function(t){var r=arguments.length;if(r\u003e1){var n,i=new Array(r-1),o=0;for(n=0;r-1\u003en;++n){var s=arguments[n];if(\"function\"!=typeof s)return e.reject(new h(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"));i[o++]=s}i.length=o,t=arguments[n];var a=new j(i,t,this);return this._then(void 0,a.doFilter,void 0,a,void 0)}return this._then(void 0,t,void 0,void 0,void 0)},e.prototype.reflect=function(){return this._then(o,o,void 0,this,void 0)},e.prototype.then=function(t,e,r){if(g()\u0026\u0026arguments.length\u003e0\u0026\u0026\"function\"!=typeof t\u0026\u0026\"function\"!=typeof e){var n=\".then() only accepts functions but was passed: \"+a.classString(t);arguments.length\u003e1\u0026\u0026(n+=\", \"+a.classString(e)),this._warn(n)}return this._then(t,e,r,void 0,void 0)},e.prototype.done=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);","n._setIsFinal()},e.prototype.spread=function(t,e)return this.all()._then(t,e,void 0,f,void 0)},e.prototype.isCancellable=function(){return!this.isResolved()\u0026\u0026this._cancellable()},e.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()\u0026\u0026(t.rejectionReason=this.reason(),t.isRejected=!0),t},e.prototype.all=function(){return new v(this).promise()},e.prototype.error=function(t){return this.caught(a.originatesFromRejection,t)},e.is=function(t){return t instanceof e},e.fromNode=function(t){var r=new e(p),n=E(t)(w(r));return n===k\u0026\u0026r._rejectCallback(n.e,!0,!0),r},e.all=function(t){return new v(t).promise()},e.defer=e.pending=function(){var t=new e(p);return new b(t)},e.cast=function(t){var r=d(t);if(!(r instanceof e)){var n=r;r=new e(p),r._fulfillUnchecked(n)}return r},e.resolve=e.fulfilled=e.cast,e.reject=e.rejected=function(t){var r=new e(p);return r._captureStackTrace(),r._rejectCallback(t,!0),r},e.setScheduler=function(t){if(\"function\"!=typeof t)throw new h(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var e=c._schedule;return c._schedule=t,e},e.prototype._then=function(t,r,i,o,s){var a=void 0!==s,u=a?s:new e(p);a||(u._propagateFrom(this,5),u._captureStackTrace());var l=this._target();l!==this\u0026\u0026(void 0===o\u0026\u0026(o=this._boundTo),a||u._setIsMigrated());var h=l._addCallbacks(t,r,i,u,o,n());return l._isResolved()\u0026\u0026!l._isSettlePromisesQueued()\u0026\u0026c.invoke(l._settlePromiseAtPostResolution,l,h),u},e.prototype._settlePromiseAtPostResolution=function(t){this._isRejectionUnhandled()\u0026\u0026this._unsetRejectionIsUnhandled(),this._settlePromiseAt(t)},e.prototype._length=function(){return 131071\u0026this._bitField},e.prototype._isFollowingOrFulfilledOrRejected=function(){return(939524096\u0026this._bitField)\u003e0},e.prototype._isFollowing=function(){return 536870912===(536870912\u0026this._bitField)},e.prototype._setLength=function(t){this._bitField=-131072\u0026this._bitField|131071\u0026t},e.prototype._setFulfilled=function(){this._bitField=268435456|this._bitField},e.prototype._setRejected=function(){this._bitField=134217728|this._bitField},e.prototype._setFollowing=function(){this._bitField=536870912|this._bitField},e.prototype._setIsFinal=function(){this._bitField=33554432|this._bitField},e.prototype._isFinal=function(){return(33554432\u0026this._bitField)\u003e0},e.prototype._cancellable=function(){return(67108864\u0026this._bitField)\u003e0},e.prototype._setCancellable=function(){this._bitField=67108864|this._bitField},e.prototype._unsetCancellable=function(){this._bitField=-67108865\u0026this._bitField},e.prototype._setIsMigrated=function(){this._bitField=4194304|this._bitField},e.prototype._unsetIsMigrated=function(){this._bitField=-4194305\u0026this._bitField},e.prototype._isMigrated=function(){return(4194304\u0026this._bitField)\u003e0},e.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[5*t-5+4];return e===u?void 0:void 0===e\u0026\u0026this._isBound()?this._boundValue():e},e.prototype._promiseAt=function(t){return 0===t?this._promise0:this[5*t-5+3]},e.prototype._fulfillmentHandlerAt=function(t){return 0===t?this._fulfillmentHandler0:this[5*t-5+0]},e.prototype._rejectionHandlerAt=function(t){return 0===t?this._rejectionHandler0:this[5*t-5+1]},e.prototype._boundValue=function(){var t=this._boundTo;return void 0!==t\u0026\u0026t instanceof e?t.isFulfilled()?t.value():void 0:t},e.prototype._migrateCallbacks=function(t,r){var n=t._fulfillmentHandlerAt(r),i=t._rejectionHandlerAt(r),o=t._progressHandlerAt(r),s=t._promiseAt(r),a=t._receiverAt(r);s instanceof e\u0026\u0026s._setIsMigrated(),void 0===a\u0026\u0026(a=u),this._addCallbacks(n,i,o,s,a,null)},e.prototype._addCallbacks=function(t,e,r,n,i,o){var s=this._length();if(s\u003e=131066\u0026\u0026(s=0,this._setLength(0)),0===s)this._promise0=n,void 0!==i\u0026\u0026(this._receiver0=i),\"function\"!=typeof t||this._isCarryingStackTrace()||(this._fulfillmentHandler0=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this._rejectionHandler0=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this._progressHandler0=null===o?r:o.bind(r));else{var a=5*s-5;this[a+3]=n,this[a+4]=i,\"function\"==typeof t\u0026\u0026(this[a+0]=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this[a+1]=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this[a+2]=null===o?r:o.bind(r))}return this._setLength(s+1),s},e.prototype._setProxyHandlers=function(t,e){var r=this._length();if(r\u003e=131066\u0026\u0026(r=0,this._setLength(0)),0===r)this._promise0=e,this._receiver0=t;else{var n=5*r-5;this[n+3]=e,this[n+4]=t}this._setLength(r+1)},e.prototype._proxyPromiseArray=function(t,e){this._setProxyHandlers(t,e)},e.prototype._resolveCallback=function(t,r){if(!this._isFollowingOrFulfilledOrRejected()){if(t===this)return this._rejectCallback(i(),!1,!0);var n=d(t,this);if(!(n instanceof e))return this._fulfill(t);var o=1|(r?4:0);this._propagateFrom(n,o);var s=n._target();if(s._isPending()){for(var a=this._length(),u=0;a\u003eu;++u)s._migrateCallbacks(this,u);this._setFollowing(),this._setLength(0),this._setFollowee(s)}else s._isFulfilled()?this._fulfillUnchecked(s._value()):this._rejectUnchecked(s._reason(),s._getCarriedStackTrace())}},e.prototype._rejectCallback=function(t,e,r){r||a.markAsOriginatingFromRejection(t);var n=a.ensureErrorObject(t),i=n===t;this._attachExtraTrace(n,e?i:!1),this._reject(t,i?void 0:n)},e.prototype._resolveFromResolver=function(t){var e=this;this._captureStackTrace(),this._pushContext();var r=!0,n=E(t)(function(t){null!==e\u0026\u0026(e._resolveCallback(t),e=null)},function(t){null!==e\u0026\u0026(e._rejectCallback(t,r),e=null)});r=!1,this._popContext(),void 0!==n\u0026\u0026n===k\u0026\u0026null!==e\u0026\u0026(e._rejectCallback(n.e,!0,!0),e=null)},e.prototype._settlePromiseFromHandler=function(t,e,r,n){if(!n._isRejected()){n._pushContext();var o;if(o=e!==f||this._isRejected()?E(t).call(e,r):E(t).apply(this._boundValue(),r),n._popContext(),o===k||o===n||o===_){var s=o===n?i():o.e;n._rejectCallback(s,!1,!0)}else n._resolveCallback(o)}},e.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},e.prototype._followee=function(){return this._rejectionHandler0},e.prototype._setFollowee=function(t){this._rejectionHandler0=t},e.prototype._cleanValues=function(){this._cancellable()\u0026\u0026(this._cancellationParent=void 0)},e.prototype._propagateFrom=function(t,e){(1\u0026e)\u003e0\u0026\u0026t._cancellable()\u0026\u0026(this._setCancellable(),this._cancellationParent=t),(4\u0026e)\u003e0\u0026\u0026t._isBound()\u0026\u0026this._setBoundTo(t._boundTo)},e.prototype._fulfill=function(t){this._isFollowingOrFulfilledOrRejected()||this._fulfillUnchecked(t)},e.prototype._reject=function(t,e){this._isFollowingOrFulfilledOrRejected()||this._rejectUnchecked(t,e)},e.prototype._settlePromiseAt=function(t){var r=this._promiseAt(t),n=r instanceof e;if(n\u0026\u0026r._isMigrated())return r._unsetIsMigrated(),c.invoke(this._settlePromiseAt,this,t);var i=this._isFulfilled()?this._fulfillmentHandlerAt(t):this._rejectionHandlerAt(t),o=this._isCarryingStackTrace()?this._getCarriedStackTrace():void 0,s=this._settledValue,a=this._receiverAt(t);this._clearCallbackDataAtIndex(t),\"function\"==typeof i?n?this._settlePromiseFromHandler(i,a,s,r):i.call(a,s,r):a instanceof v?a._isResolved()||(this._isFulfilled()?a._promiseFulfilled(s,r):a._promiseRejected(s,r)):n\u0026\u0026(this._isFulfilled()?r._fulfill(s):r._reject(s,o)),t\u003e=4\u0026\u00264===(31\u0026t)\u0026\u0026c.invokeLater(this._setLength,this,0)},e.prototype._clearCallbackDataAtIndex=function(t){if(0===t)this._isCarryingStackTrace()||(this._fulfillmentHandler0=void 0),this._rejectionHandler0=this._progressHandler0=this._receiver0=this._promise0=void 0;else{var e=5*t-5;this[e+3]=this[e+4]=this[e+0]=this[e+1]=this[e+2]=void 0}},e.prototype._isSettlePromisesQueued=function(){return-1073741824===(-1073741824\u0026this._bitField)},e.prototype._setSettlePromisesQueued=function(){this._bitField=-1073741824|this._bitField},e.prototype._unsetSettlePromisesQueued=function(){this._bitField=1073741823\u0026this._bitField},e.prototype._queueSettlePromises=function(){c.settlePromises(this),this._setSettlePromisesQueued()},e.prototype._fulfillUnchecked=function(t){if(t===this){var e=i();return this._attachExtraTrace(e),this._rejectUnchecked(e,void 0)}this._setFulfilled(),this._settledValue=t,this._cleanValues(),this._length()\u003e0\u0026\u0026this._queueSettlePromises()},e.prototype._rejectUncheckedCheckError=function(t){var e=a.ensureErrorObject(t);this._rejectUnchecked(t,e===t?void 0:e)},e.prototype._rejectUnchecked=function(t,e){if(t===this){var r=i();return this._attachExtraTrace(r),this._rejectUnchecked(r)}return this._setRejected(),this._settledValue=t,this._cleanValues(),this._isFinal()?void c.throwLater(function(t){throw\"stack\"in t\u0026\u0026c.invokeFirst(y.unhandledRejection,void 0,t),t},void 0===e?t:e):(void 0!==e\u0026\u0026e!==t\u0026\u0026this._setCarriedStackTrace(e),void(this._length()\u003e0?this._queueSettlePromises():this._ensurePossibleRejectionHandled()))},e.prototype._settlePromises=function(){this._unsetSettlePromisesQueued();for(var t=this._length(),e=0;t\u003ee;e++)this._settlePromiseAt(e)},a.notEnumerableProp(e,\"_makeSelfResolutionError\",i),t(\"./progress.js\")(e,v),t(\"./method.js\")(e,p,d,s),t(\"./bind.js\")(e,p,d),t(\"./finally.js\")(e,_,d),t(\"./direct_resolve.js\")(e),t(\"./synchronous_inspection.js\")(e),t(\"./join.js\")(e,v,d,p),e.Promise=e,t(\"./map.js\")(e,v,s,d,p),t(\"./cancel.js\")(e),t(\"./using.js\")(e,s,d,m),t(\"./generators.js\")(e,s,p,d),t(\"./nodeify.js\")(e),t(\"./call_get.js\")(e),t(\"./props.js\")(e,v,d,s),t(\"./race.js\")(e,p,d,s),t(\"./reduce.js\")(e,v,s,d,p),t(\"./settle.js\")(e,v),t(\"./some.js\")(e,v,s),t(\"./promisify.js\")(e,p),t(\"./any.js\")(e),t(\"./each.js\")(e,p),t(\"./timers.js\")(e,p),t(\"./filter.js\")(e,p),a.toFastProperties(e),a.toFastProperties(e.prototype),r({a:1}),r({b:2}),r({c:3}),r(1),r(function(){}),r(void 0),r(!1),r(new e(p)),y.setBounds(c.firstLineError,a.lastLineError),e}},{\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){switch(t){case-2:return[];case-3:return{}}}function s(t){var n,i=this._promise=new e(r);t instanceof e\u0026\u0026(n=t,i._propagateFrom(n,5)),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var a=t(\"./util.js\"),u=a.isArray;return s.prototype.length=function(){return this._length},s.prototype.promise=function(){return this._promise},s.prototype._init=function c(t,r){var s=n(this._values,this._promise);if(s instanceof e){if(s=s._target(),this._values=s,!s._isFulfilled())return s._isPending()?void s._then(c,this._reject,void 0,this,r):void this._reject(s._reason());if(s=s._value(),!u(s)){var a=new e.TypeError(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");return void this.__hardReject__(a)}}else if(!u(s))return void this._promise._reject(i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\")._reason());if(0===s.length)return void(-5===r?this._resolveEmptyArray():this._resolve(o(r)));var l=this.getActualLength(s.length);this._length=l,this._values=this.shouldCopyValues()?new Array(l):this._values;for(var h=this._promise,p=0;l\u003ep;++p){var f=this._isResolved(),_=n(s[p],h);_ instanceof e?(_=_._target(),f?_._ignoreRejections():_._isPending()?_._proxyPromiseArray(this,p):_._isFulfilled()?this._promiseFulfilled(_._value(),p):this._promiseRejected(_._reason(),p)):f||this._promiseFulfilled(_,p)}},s.prototype._isResolved=function(){return null===this._values},s.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},s.prototype.__hardReject__=s.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1,!0)},s.prototype._promiseProgressed=function(t,e){this._promise._progress({index:e,value:t})},s.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},s.prototype._promiseRejected=function(t){this._totalResolved++,this._reject(t)},s.prototype.shouldCopyValues=function(){return!0},s.prototype.getActualLength=function(t){return t},s}},{\"./util.js\":38}],25:[function(t,e){\"use strict\";function r(t){return t instanceof Error\u0026\u0026p.getPrototypeOf(t)===Error.prototype}function n(t){var e;if(r(t)){e=new l(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=p.keys(t),i=0;i\u003cn.length;++i){var o=n[i];f.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function i(t){return function(e,r){if(null!==t){if(e){var i=n(a(e));t._attachExtraTrace(i),t._reject(i)}else if(arguments.length\u003e2){for(var o=arguments.length,s=new Array(o-1),u=1;o\u003eu;++u)s[u-1]=arguments[u];t._fulfill(s)}else t._fulfill(r);t=null}}}var o,s=t(\"./util.js\"),a=s.maybeWrapAsError,u=t(\"./errors.js\"),c=u.TimeoutError,l=u.OperationalError,h=s.haveGetters,p=t(\"./es5.js\"),f=/^(?:name|message|stack|cause)$/;if(o=h?function(t){this.promise=t}:function(t){this.promise=t,this.asCallback=i(t),this.callback=this.asCallback},h){var _={get:function(){return i(this.promise)}};p.defineProperty(o.prototype,\"asCallback\",_),p.defineProperty(o.prototype,\"callback\",_)}o._nodebackForPromise=i,o.prototype.toString=function(){return\"[object PromiseResolver]\"},o.prototype.resolve=o.prototype.fulfill=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._resolveCallback(t)},o.prototype.reject=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._rejectCallback(t)},o.prototype.progress=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._progress(t)},o.prototype.cancel=function(t){this.promise.cancel(t)},o.prototype.timeout=function(){this.reject(new c(\"timeout\"))},o.prototype.isResolved=function(){return this.promise.isResolved()},o.prototype.toJSON=function(){return this.promise.toJSON()},e.exports=o},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){return!w.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,r){var n=f.getDataPropertyOrDefault(t,e+r,j);return n?i(n):!1}function s(t,e,r){for(var n=0;n\u003ct.length;n+=2){var i=t[n];if(r.test(i))for(var o=i.replace(r,\"\"),s=0;s\u003ct.length;s+=2)if(t[s]===o)throw new g(\"Cannot promisify an API that has normal methods with '%s'-suffix\\n\\n    See http://goo.gl/iWrZbw\\n\".replace(\"%s\",e))}}function a(t,e,r,n){for(var a=f.inheritedDataKeys(t),u=[],c=0;c\u003ca.length;++c){var l=a[c],h=t[l],p=n===k?!0:k(l,h,t);\"function\"!=typeof h||i(h)||o(t,l,e)||!n(l,h,t,p)||u.push(l,h)}return s(u,e,r),u}function u(t,n,i,o){function s(){var i=n;n===p\u0026\u0026(i=this);var o=new e(r);o._captureStackTrace();var s=\"string\"==typeof u\u0026\u0026this!==a?this[u]:t,c=_(o);try{s.apply(i,d(arguments,c))}catch(l){o._rejectCallback(v(l),!0,!0)}return o}var a=function(){return this}(),u=t;return\"string\"==typeof u\u0026\u0026(t=o),f.notEnumerableProp(s,\"__isPromisified__\",!0),s}function c(t,e,r,n){for(var i=new RegExp(E(e)+\"$\"),o=a(t,e,i,r),s=0,u=o.length;u\u003es;s+=2){var c=o[s],l=o[s+1],h=c+e;if(n===F)t[h]=F(c,p,c,l,e);else{var _=n(l,function(){return F(c,p,c,l,e)});f.notEnumerableProp(_,\"__isPromisified__\",!0),t[h]=_}}return f.toFastProperties(t),t}function l(t,e){return F(t,e,void 0,t)}var h,p={},f=t(\"./util.js\"),_=t(\"./promise_resolver.js\")._nodebackForPromise,d=f.withAppended,v=f.maybeWrapAsError,y=f.canEvaluate,g=t(\"./errors\").TypeError,m=\"Async\",j={__isPromisified__:!0},b=[\"arity\",\"length\",\"name\",\"arguments\",\"caller\",\"callee\",\"prototype\",\"__isPromisified__\"],w=new RegExp(\"^(?:\"+b.join(\"|\")+\")$\"),k=function(t){return f.isIdentifier(t)\u0026\u0026\"_\"!==t.charAt(0)\u0026\u0026\"constructor\"!==t},E=function(t){return t.replace(/([$])/,\"\\\\$\")},F=y?h:u;e.promisify=function(t,e){if(\"function\"!=typeof t)throw new g(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");if(i(t))return t;var r=l(t,arguments.length\u003c2?p:e);return f.copyDescriptors(t,r,n),r},e.promisifyAll=function(t,e){if(\"function\"!=typeof t\u0026\u0026\"object\"!=typeof t)throw new g(\"the target of promisifyAll must be an object or a function\\n\\n    See http://goo.gl/9ITlV0\\n\");e=Object(e);var r=e.suffix;\"string\"!=typeof r\u0026\u0026(r=m);var n=e.filter;\"function\"!=typeof n\u0026\u0026(n=k);var i=e.promisifier;if(\"function\"!=typeof i\u0026\u0026(i=F),!f.isIdentifier(r))throw new RangeError(\"suffix must be a valid identifier\\n\\n    See http://goo.gl/8FZo5V\\n\");for(var o=f.inheritedDataKeys(t),s=0;s\u003co.length;++s){var a=t[o[s]];\"constructor\"!==o[s]\u0026\u0026f.isClass(a)\u0026\u0026(c(a.prototype,r,n,i),c(a,r,n,i))}return c(t,r,n,i)}}},{\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var e=c.keys(t),r=e.length,n=new Array(2*r),i=0;r\u003ei;++i){var o=e[i];n[i]=t[o],n[i+r]=o}this.constructor$(n)}function s(t){var r,s=n(t);return u(s)?(r=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e\u0026\u0026r._propagateFrom(s,4),r):i(\"cannot await properties of a non-object\\n\\n    See http://goo.gl/OsFKC8\\n\")}var a=t(\"./util.js\"),u=a.isObject,c=t(\"./es5.js\");a.inherits(o,r),o.prototype._init=function(){this._init$(void 0,-3)},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;if(r\u003e=this._length){for(var n={},i=this.length(),o=0,s=this.length();s\u003eo;++o)n[this._values[o+i]]=this._values[o];this._resolve(n)}},o.prototype._promiseProgressed=function(t,e){this._promise._progress({key:this._values[e+this.length()],value:t})},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t\u003e\u003e1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{\"./es5.js\":14,\"./util.js\":38}],28:[function(t,e){\"use strict\";function r(t,e,r,n,i){for(var o=0;i\u003eo;++o)r[o+n]=t[o+e],t[o+e]=void 0}function n(t){this._capacity=t,this._length=0,this._front=0}n.prototype._willBeOverCapacity=function(t){return this._capacity\u003ct},n.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var r=this._front+e\u0026this._capacity-1;this[r]=t,this._length=e+1},n.prototype._unshiftOne=function(t){var e=this._capacity;this._checkCapacity(this.length()+1);var r=this._front,n=(r-1\u0026e-1^e)-e;this[n]=t,this._front=n,this._length=this.length()+1},n.prototype.unshift=function(t,e,r){this._unshiftOne(r),this._unshiftOne(e),this._unshiftOne(t)},n.prototype.push=function(t,e,r){var n=this.length()+3;if(this._willBeOverCapacity(n))return this._pushOne(t),this._pushOne(e),void this._pushOne(r);var i=this._front+n-3;this._checkCapacity(n);var o=this._capacity-1;this[i+0\u0026o]=t,this[i+1\u0026o]=e,this[i+2\u0026o]=r,this._length=n},n.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1\u0026this._capacity-1,this._length--,e},n.prototype.length=function(){return this._length},n.prototype._checkCapacity=function(t){this._capacity\u003ct\u0026\u0026this._resizeTo(this._capacity\u003c\u003c1)},n.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i\u0026e-1;r(this,0,this,e,o)},e.exports=n},{}],29:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,o){var u=n(t);if(u instanceof e)return a(u);if(!s(t))return i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");var c=new e(r);void 0!==o\u0026\u0026c._propagateFrom(o,5);for(var l=c._fulfill,h=c._reject,p=0,f=t.length;f\u003ep;++p){var _=t[p];(void 0!==_||p in t)\u0026\u0026e.cast(_)._then(l,h,void 0,c,null)}return c}var s=t(\"./util.js\").isArray,a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{\"./util.js\":38}],30:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,r,n,s){this.constructor$(t),this._promise._captureStackTrace(),this._preservedValues=s===o?[]:null,this._zerothIsAccum=void 0===n,this._gotAccum=!1,this._reducingIndex=this._zerothIsAccum?1:0,this._valuesPhase=void 0;var u=i(n,this._promise),h=!1,p=u instanceof e;p\u0026\u0026(u=u._target(),u._isPending()?u._proxyPromiseArray(this,-1):u._isFulfilled()?(n=u._value(),this._gotAccum=!0):(this._reject(u._reason()),h=!0)),p||this._zerothIsAccum||(this._gotAccum=!0);var f=c();this._callback=null===f?r:f.bind(r),this._accum=n,h||l.invoke(a,this,void 0)}function a(){this._init$(void 0,-5)}function u(t,e,r,i){if(\"function\"!=typeof e)return n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var o=new s(t,e,r,i);return o.promise()}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj;h.inherits(s,r),s.prototype._init=function(){},s.prototype._resolveEmptyArray=function(){(this._gotAccum||this._zerothIsAccum)\u0026\u0026this._resolve(null!==this._preservedValues?[]:this._accum)},s.prototype._promiseFulfilled=function(t,r){var n=this._values;n[r]=t;var o,s=this.length(),a=this._preservedValues,u=null!==a,c=this._gotAccum,l=this._valuesPhase;if(!l)for(l=this._valuesPhase=new Array(s),o=0;s\u003eo;++o)l[o]=0;if(o=l[r],0===r\u0026\u0026this._zerothIsAccum?(this._accum=t,this._gotAccum=c=!0,l[r]=0===o?1:2):-1===r?(this._accum=t,this._gotAccum=c=!0):0===o?l[r]=1:(l[r]=2,this._accum=t),c){for(var h,_=this._callback,d=this._promise._boundValue(),v=this._reducingIndex;s\u003ev;++v)if(o=l[v],2!==o){if(1!==o)return;if(t=n[v],this._promise._pushContext(),u?(a.push(t),h=p(_).call(d,t,v,s)):h=p(_).call(d,this._accum,t,v,s),this._promise._popContext(),h===f)return this._reject(h.e);var y=i(h,this._promise);if(y instanceof e){if(y=y._target(),y._isPending())return l[v]=4,y._proxyPromiseArray(this,v);if(!y._isFulfilled())return this._reject(y._reason());h=y._value()}this._reducingIndex=v+1,this._accum=h}else this._reducingIndex=v+1;this._resolve(u?a:this._accum)}},e.prototype.reduce=function(t,e){return u(this,t,e,null)},e.reduce=function(t,e,r,n){return u(t,e,r,n)}}},{\"./async.js\":2,\"./util.js\":38}],31:[function(t,e){\"use strict\";var r,n=t(\"./util\"),i=function(){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")};if(n.isNode\u0026\u0026\"undefined\"==typeof MutationObserver){var o=global.setImmediate,s=process.nextTick;r=n.isRecentNode?function(t){o.call(global,t)}:function(t){s.call(process,t)}}else\"undefined\"==typeof MutationObserver||\"undefined\"!=typeof window\u0026\u0026window.navigator\u0026\u0026window.navigator.standalone?r=\"undefined\"!=typeof setImmediate?function(t){setImmediate(t)}:\"undefined\"!=typeof setTimeout?function(t){setTimeout(t,0)}:i:(r=function(t){var e=document.createElement(\"div\"),r=new MutationObserver(t);return r.observe(e,{attributes:!0}),function(){e.classList.toggle(\"foo\")}},r.isStatic=!0);e.exports=r},{\"./util\":38}],32:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){this.constructor$(t)}var i=e.PromiseInspection,o=t(\"./util.js\");o.inherits(n,r),n.prototype._promiseResolved=function(t,e){this._values[t]=e;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},n.prototype._promiseFulfilled=function(t,e){var r=new i;r._bitField=268435456,r._settledValue=t,this._promiseResolved(e,r)},n.prototype._promiseRejected=function(t,e){var r=new i;r._bitField=134217728,r._settledValue=t,this._promiseResolved(e,r)},e.settle=function(t){return new n(t).promise()},e.prototype.settle=function(){return new n(this).promise()}}},{\"./util.js\":38}],33:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(t){this.constructor$(t),this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0\u003ee)return n(\"expecting a positive integer\\n\\n    See http://goo.gl/1wAmHx\\n\");var r=new i(t),o=r.promise();return r.setHowMany(e),r.init(),o}var s=t(\"./util.js\"),a=t(\"./errors.js\").RangeError,u=t(\"./errors.js\").AggregateError,c=s.isArray;s.inherits(i,r),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=c(this._values);!this._isResolved()\u0026\u0026t\u0026\u0026this._howMany\u003ethis._canPossiblyFulfill()\u0026\u0026this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){this._addFulfilled(t),this._fulfilled()===this.howMany()\u0026\u0026(this._values.length=this.howMany(),this._resolve(1===this.howMany()\u0026\u0026this._unwrap?this._values[0]:this._values))},i.prototype._promiseRejected=function(t){if(this._addRejected(t),this.howMany()\u003ethis._canPossiblyFulfill()){for(var e=new u,r=this.length();r\u003cthis._values.length;++r)e.push(this._values[r]);this._reject(e)}},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e=\"Input array must contain at least \"+this._howMany+\" items but contains only \"+t+\" items\";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{\"./errors.js\":13,\"./util.js\":38}],34:[function(t,e){\"use strict\";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValue=t._settledValue):(this._bitField=0,this._settledValue=void 0)}e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return this._settledValue},e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return this._settledValue},e.prototype.isFulfilled=t.prototype._isFulfilled=function(){return(268435456\u0026this._bitField)\u003e0},e.prototype.isRejected=t.prototype._isRejected=function(){return(134217728\u0026this._bitField)\u003e0},e.prototype.isPending=t.prototype._isPending=function(){return 0===(402653184\u0026this._bitField)},e.prototype.isResolved=t.prototype._isResolved=function(){return(402653184\u0026this._bitField)\u003e0},t.prototype.isPending=function(){return this._target()._isPending()},t.prototype.isRejected=function(){return this._target()._isRejected()},t.prototype.isFulfilled=function(){return this._target()._isFulfilled()},t.prototype.isResolved=function(){return this._target()._isResolved()},t.prototype._value=function(){return this._settledValue},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue},t.prototype.value=function(){var t=this._target();if(!t.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return t._settledValue},t.prototype.reason=function(){var t=this._target();if(!t.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return t._unsetRejectionIsUnhandled(),t._settledValue},t.PromiseInspection=e}},{}],35:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t,n){if(c(t)){if(t instanceof e)return t;if(o(t)){var l=new e(r);return t._then(l._fulfillUnchecked,l._rejectUncheckedCheckError,l._progressUnchecked,l,null),l}var h=a.tryCatch(i)(t);if(h===u){n\u0026\u0026n._pushContext();var l=e.reject(h.e);return n\u0026\u0026n._popContext(),l}if(\"function\"==typeof h)return s(t,h,n)}return t}function i(t){return t.then}function o(t){return l.call(t,\"_promise0\")}function s(t,n,i){function o(t){l\u0026\u0026(l._resolveCallback(t),l=null)}function s(t){l\u0026\u0026(l._rejectCallback(t,p,!0),l=null)}function c(t){l\u0026\u0026\"function\"==typeof l._progress\u0026\u0026l._progress(t)}var l=new e(r),h=l;i\u0026\u0026i._pushContext(),l._captureStackTrace(),i\u0026\u0026i._popContext();var p=!0,f=a.tryCatch(n).call(t,o,s,c);return p=!1,l\u0026\u0026f===u\u0026\u0026(l._rejectCallback(f.e,!0,!0),l=null),h}var a=t(\"./util.js\"),u=a.errorObj,c=a.isObject,l={}.hasOwnProperty;return n}},{\"./util.js\":38}],36:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){var e=this;return e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}function i(t){var e=this;throw e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}var o=t(\"./util.js\"),s=e.TimeoutError,a=function(t,e){if(t.isPending()){var r;!o.isPrimitive(e)\u0026\u0026e instanceof Error?r=e:(\"string\"!=typeof e\u0026\u0026(e=\"operation timed out\"),r=new s(e)),o.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._cancel(r)}},u=function(t){return c(+this).thenReturn(t)},c=e.delay=function(t,n){if(void 0===n){n=t,t=void 0;var i=new e(r);return setTimeout(function(){i._fulfill()},n),i}return n=+n,e.resolve(t)._then(u,null,null,n,void 0)};e.prototype.delay=function(t){return c(this,t)},e.prototype.timeout=function(t,e){t=+t;var r=this.then().cancellable();r._cancellationParent=this;var o=setTimeout(function(){a(r,e)},t);return r._then(n,i,void 0,o,void 0)}}},{\"./util.js\":38}],37:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var r=t.length,n=0;r\u003en;++n){var i=t[n];if(i.isRejected())return e.reject(i.error());t[n]=i._settledValue}return t}function s(t){setTimeout(function(){throw t},0)}function a(t){var e=n(t);return e!==t\u0026\u0026\"function\"==typeof t._isDisposable\u0026\u0026\"function\"==typeof t._getDisposer\u0026\u0026t._isDisposable()\u0026\u0026e._setDisposable(t._getDisposer()),e}function u(t,r){function i(){if(o\u003e=u)return c.resolve();var l=a(t[o++]);if(l instanceof e\u0026\u0026l._isDisposable()){try{l=n(l._getDisposer().tryDispose(r),t.promise)}catch(h){return s(h)}if(l instanceof e)return l._then(i,s,null,null,null)}i()}var o=0,u=t.length,c=e.defer();return i(),c.promise}function c(t){var e=new v;return e._settledValue=t,e._bitField=268435456,u(this,e).thenReturn(t)}function l(t){var e=new v;return e._settledValue=t,e._bitField=134217728,u(this,e).thenThrow(t)}function h(t,e,r){this._data=t,this._promise=e,this._context=r}function p(t,e,r){this.constructor$(t,e,r)}function f(t){return h.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}var _=t(\"./errors.js\").TypeError,d=t(\"./util.js\").inherits,v=e.PromiseInspection;h.prototype.data=function(){return this._data},h.prototype.promise=function(){return this._promise},h.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():null},h.prototype.tryDispose=function(t){var e=this.resource(),r=this._context;void 0!==r\u0026\u0026r._pushContext();var n=null!==e?this.doDispose(e,t):null;return void 0!==r\u0026\u0026r._popContext(),this._promise._unsetDisposable(),this._data=null,n},h.isDisposer=function(t){return null!=t\u0026\u0026\"function\"==typeof t.resource\u0026\u0026\"function\"==typeof t.tryDispose},d(p,h),p.prototype.doDispose=function(t,e){var r=this.data();return r.call(t,t,e)},e.using=function(){var t=arguments.length;if(2\u003et)return r(\"you must pass at least 2 arguments to Promise.using\");var i=arguments[t-1];if(\"function\"!=typeof i)return r(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var s,a=!0;2===t\u0026\u0026Array.isArray(arguments[0])?(s=arguments[0],t=s.length,a=!1):(s=arguments,t--);for(var u=new Array(t),p=0;t\u003ep;++p){var _=s[p];if(h.isDisposer(_)){var d=_;_=_.promise(),_._setDisposable(d)","}elsevar v=n(_);v instanceof e\u0026\u0026(_=v._then(f,null,null,{resources:u,index:p},void 0))}u[p]=_}var y=e.settle(u).then(o).then(function(t){y._pushContext();var e;try{e=a?i.apply(void 0,t):i.call(void 0,t)}finally{y._popContext()}return e})._then(c,l,void 0,u,void 0);return u.promise=y,y},e.prototype._setDisposable=function(t){this._bitField=262144|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(262144\u0026this._bitField)\u003e0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-262145\u0026this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if(\"function\"==typeof t)return new p(t,this,i());throw new _}}},{\"./errors.js\":13,\"./util.js\":38}],38:[function(t,e,r){\"use strict\";function n(){try{var t=C;return C=null,t.apply(this,arguments)}catch(e){return F.e=e,F}}function i(t){return C=t,n}function o(t){return null==t||t===!0||t===!1||\"string\"==typeof t||\"number\"==typeof t}function s(t){return!o(t)}function a(t){return o(t)?new Error(v(t)):t}function u(t,e){var r,n=t.length,i=new Array(n+1);for(r=0;n\u003er;++r)i[r]=t[r];return i[r]=e,i}function c(t,e,r){if(!w.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var n=Object.getOwnPropertyDescriptor(t,e);return null!=n?null==n.get\u0026\u0026null==n.set?n.value:r:void 0}function l(t,e,r){if(o(t))return t;var n={value:r,configurable:!0,enumerable:!1,writable:!0};return w.defineProperty(t,e,n),t}function h(t){throw t}function p(t){try{if(\"function\"==typeof t){var e=w.names(t.prototype),r=w.isES5\u0026\u0026e.length\u003e1,n=e.length\u003e0\u0026\u0026!(1===e.length\u0026\u0026\"constructor\"===e[0]),i=x.test(t+\"\")\u0026\u0026w.names(t).length\u003e0;if(r||n||i)return!0}return!1}catch(o){return!1}}function f(t){function e(){}e.prototype=t;for(var r=8;r--;)new e;return t}function _(t){return R.test(t)}function d(t,e,r){for(var n=new Array(t),i=0;t\u003ei;++i)n[i]=e+i+r;return n}function v(t){try{return t+\"\"}catch(e){return\"[no string representation]\"}}function y(t){try{l(t,\"isOperational\",!0)}catch(e){}}function g(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function m(t){return t instanceof Error\u0026\u0026w.propertyIsWritable(t,\"stack\")}function j(t){return{}.toString.call(t)}function b(t,e,r){for(var n=w.names(t),i=0;i\u003cn.length;++i){var o=n[i];if(r(o))try{w.defineProperty(e,o,w.getDescriptor(t,o))}catch(s){}}}var w=t(\"./es5.js\"),k=\"undefined\"==typeof navigator,E=function(){try{var t={};return w.defineProperty(t,\"f\",{get:function(){return 3}}),3===t.f}catch(e){return!1}}(),F={e:{}},C,P=function(t,e){function r(){this.constructor=t,this.constructor$=e;for(var r in e.prototype)n.call(e.prototype,r)\u0026\u0026\"$\"!==r.charAt(r.length-1)\u0026\u0026(this[r+\"$\"]=e.prototype[r])}var n={}.hasOwnProperty;return r.prototype=e.prototype,t.prototype=new r,t.prototype},T=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var r=0;r\u003ct.length;++r)if(t[r]===e)return!0;return!1};if(w.isES5){var r=Object.getOwnPropertyNames;return function(t){for(var n=[],i=Object.create(null);null!=t\u0026\u0026!e(t);){var o;try{o=r(t)}catch(s){return n}for(var a=0;a\u003co.length;++a){var u=o[a];if(!i[u]){i[u]=!0;var c=Object.getOwnPropertyDescriptor(t,u);null!=c\u0026\u0026null==c.get\u0026\u0026null==c.set\u0026\u0026n.push(u)}}t=w.getPrototypeOf(t)}return n}}var n={}.hasOwnProperty;return function(r){if(e(r))return[];var i=[];t:for(var o in r)if(n.call(r,o))i.push(o);else{for(var s=0;s\u003ct.length;++s)if(n.call(t[s],o))continue t;i.push(o)}return i}}(),x=/this\\s*\\.\\s*\\S+\\s*=/,R=/^[a-z$_][a-z$_0-9]*$/i,S=function(){return\"stack\"in new Error?function(t){return m(t)?t:new Error(v(t))}:function(t){if(m(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),A={isClass:p,isIdentifier:_,inheritedDataKeys:T,getDataPropertyOrDefault:c,thrower:h,isArray:w.isArray,haveGetters:E,notEnumerableProp:l,isPrimitive:o,isObject:s,canEvaluate:k,errorObj:F,tryCatch:i,inherits:P,withAppended:u,maybeWrapAsError:a,toFastProperties:f,filledRange:d,toString:v,canAttachTrace:m,ensureErrorObject:S,originatesFromRejection:g,markAsOriginatingFromRejection:y,classString:j,copyDescriptors:b,hasDevTools:\"undefined\"!=typeof chrome\u0026\u0026chrome\u0026\u0026\"function\"==typeof chrome.loadTimes,isNode:\"undefined\"!=typeof process\u0026\u0026\"[object process]\"===j(process).toLowerCase()};A.isRecentNode=A.isNode\u0026\u0026function(){var t=process.versions.node.split(\".\").map(Number);return 0===t[0]\u0026\u0026t[1]\u003e10||t[0]\u003e0}(),A.isNode\u0026\u0026A.toFastProperties(process);try{throw new Error}catch(O){A.lastLineError=O}e.exports=A},{\"./es5.js\":14}]},{},[4])(4)}),\"undefined\"!=typeof window\u0026\u0026null!==window?window.P=window.Promise:\"undefined\"!=typeof self\u0026\u0026null!==self\u0026\u0026(self.P=self.Promise);"],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\any.js","LineCount":22,"CharCount":400,"Comments":[],"Functions":["module.exports = function(Promise) ","function any(promises) ","Promise.any = function (promises) ","Promise.prototype.any = function () "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\assert.js","LineCount":56,"CharCount":1584,"Comments":[],"Functions":["module.exports = (function()","var AssertionError = (function() ","    function AssertionError(a) ","function getParams(args) ","function nativeAssert(callName, args, expect) ","return function assert(boolExpr, message) "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\async.js","LineCount":151,"CharCount":3803,"Comments":["        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");","    }"],"Functions":["function Async() ","    this.drainQueues = function () ","Async.prototype.disableTrampolineIfNecessary = function() ","Async.prototype.enableTrampoline = function() ","        this._schedule = function(fn) ","Async.prototype.haveItemsQueued = function () ","Async.prototype.throwLater = function(fn, arg) ","        fn = function ()  throw arg; };","        setTimeout(function() ","        this._schedule(function() ","function AsyncInvokeLater(fn, receiver, arg) ","function AsyncInvoke(fn, receiver, arg) ","function AsyncSettlePromises(promise) ","        schedule = function(fn)  setTimeout(fn, 0); };","    Async.prototype.invokeLater = function (fn, receiver, arg) ","            this._schedule(function() ","                setTimeout(function() ","    Async.prototype.invoke = function (fn, receiver, arg) ","            this._schedule(function() ","    Async.prototype.settlePromises = function(promise) ","            this._schedule(function() ","Async.prototype.invokeFirst = function (fn, receiver, arg) ","Async.prototype._drainQueue = function(queue) ","        if (typeof fn !== \"function\") ","Async.prototype._drainQueues = function () ","Async.prototype._queueTick = function () ","Async.prototype._reset = function () "],"Dependencies":["./schedule.js","./queue.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\bind.js","LineCount":73,"CharCount":1940,"Comments":[],"Functions":["module.exports = function(Promise, INTERNAL, tryConvertToPromise) ","var rejectThis = function(_, e) ","var targetRejected = function(e, context) ","var bindingResolved = function(thisArg, context) ","var bindingRejected = function(e, context) ","Promise.prototype.bind = function (thisArg) ","Promise.prototype._setBoundTo = function (obj) ","Promise.prototype._isBound = function () ","Promise.bind = function (thisArg, value) ","        maybePromise._then(function() "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\bluebird.js","LineCount":12,"CharCount":283,"Comments":[],"Functions":["function noConflict() "],"Dependencies":["./promise.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\call_get.js","LineCount":124,"CharCount":4221,"Comments":[],"Functions":["module.exports = function(Promise) ","var makeMethodCaller = function (methodName) ","        return function(obj)                                                \\n\\","var makeGetter = function (propertyName) ","var getCompiled = function(name, compiler, cache) ","    if (typeof ret !== \"function\") ","getMethodCaller = function(name) ","getGetter = function(name) ","function ensureMethod(obj, methodName) ","    if (typeof fn !== \"function\") ","function caller(obj) ","Promise.prototype.call = function (methodName) ","function namedGetter(obj) ","function indexedGetter(obj) ","Promise.prototype.get = function (propertyName) "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\cancel.js","LineCount":49,"CharCount":1350,"Comments":[],"Functions":["module.exports = function(Promise) ","Promise.prototype._cancel = function (reason) ","Promise.prototype.cancel = function (reason) ","Promise.prototype.cancellable = function () ","Promise.prototype.uncancellable = function () ","Promise.prototype.fork = function (didFulfill, didReject, didProgress) "],"Dependencies":["./errors.js","./async.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\captured_trace.js","LineCount":494,"CharCount":14553,"Comments":[],"Functions":["module.exports = function() ","function CapturedTrace(parent) ","CapturedTrace.prototype.uncycle = function() ","CapturedTrace.prototype.parent = function() ","CapturedTrace.prototype.hasParent = function() ","CapturedTrace.prototype.attachExtraTrace = function(error) ","function reconstructStack(message, stacks) ","function removeDuplicateOrEmptyJumps(stacks) ","function removeCommonRoots(stacks) ","function cleanStack(stack) ","function stackFramesAsArray(error) ","CapturedTrace.parseStackAndMessage = function(error) ","CapturedTrace.formatAndLogError = function(error, title) ","        if (typeof error === \"object\" || typeof error === \"function\") ","        if (typeof warn === \"function\") ","        } else if (typeof console.log === \"function\" ||","CapturedTrace.unhandledRejection = function (reason) ","CapturedTrace.isSupported = function () ","    return typeof captureStackTrace === \"function\";","function(name, localHandler, reason, promise) ","        if (typeof localHandler === \"function\") ","function formatNonError(obj) ","    if (typeof obj === \"function\") ","        str = \"[function \" +","function snip(str) ","var shouldIgnore = function()  return false; };","function parseLineInfo(line) ","CapturedTrace.setBounds = function(firstLineError, lastLineError) ","    shouldIgnore = function(line) ","var captureStackTrace = (function stackDetection() ","    var v8stackFormatter = function(stack, error) ","        typeof Error.captureStackTrace === \"function\") ","        shouldIgnore = function(line) ","        return function(receiver, ignoreUntil) ","        return function captureStackTrace(o) ","        return function captureStackTrace(o) ","    formatStack = function(stack, error) ","            typeof error === \"function\") \u0026\u0026","var fireGlobalEvent = (function() ","        return function(name, reason, promise) ","            fireDomEvent = function(type, detail) ","        return function(name, reason, promise) ","    warn = function (message) ","        warn = function(message) ","        warn = function(message) "],"Dependencies":["./async.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\catch_filter.js","LineCount":67,"CharCount":2008,"Comments":["        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");","        return errorObj;"],"Functions":["module.exports = function(NEXT_FILTER) ","function CatchFilter(instances, callback, promise) ","function safePredicate(predicate, e) ","        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");","CatchFilter.prototype.doFilter = function (e) ","        } else if (typeof item === \"function\" \u0026\u0026 !itemIsErrorType) "],"Dependencies":["./util.js","./errors.js","./es5.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\context.js","LineCount":39,"CharCount":900,"Comments":[],"Functions":["module.exports = function(Promise, CapturedTrace, isDebugging) ","function Context() ","Context.prototype._pushContext = function () ","Context.prototype._popContext = function () ","function createContext() ","function peekContext() "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\debuggability.js","LineCount":163,"CharCount":4986,"Comments":["        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/DT1qyG\\u000a\");","    }"],"Functions":["module.exports = function(Promise, CapturedTrace) ","Promise.prototype._ignoreRejections = function() ","Promise.prototype._ensurePossibleRejectionHandled = function () ","Promise.prototype._notifyUnhandledRejectionIsHandled = function () ","Promise.prototype._notifyUnhandledRejection = function () ","Promise.prototype._setUnhandledRejectionIsNotified = function () ","Promise.prototype._unsetUnhandledRejectionIsNotified = function () ","Promise.prototype._isUnhandledRejectionNotified = function () ","Promise.prototype._setRejectionIsUnhandled = function () ","Promise.prototype._unsetRejectionIsUnhandled = function () ","Promise.prototype._isRejectionUnhandled = function () ","Promise.prototype._setCarriedStackTrace = function (capturedTrace) ","Promise.prototype._isCarryingStackTrace = function () ","Promise.prototype._getCarriedStackTrace = function () ","Promise.prototype._captureStackTrace = function () ","Promise.prototype._attachExtraTrace = function (error, ignoreSelf) ","Promise.prototype._warn = function(message) ","Promise.onPossiblyUnhandledRejection = function (fn) ","        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))","Promise.onUnhandledRejectionHandled = function (fn) ","        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))","Promise.longStackTraces = function () ","Promise.hasLongStackTraces = function () ","    Promise.longStackTraces = function()};","return function() "],"Dependencies":["./async.js","./errors.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\direct_resolve.js","LineCount":64,"CharCount":1403,"Comments":[],"Functions":["module.exports = function(Promise) ","var returner = function () ","var thrower = function () ","var returnUndefined = function() };","var throwUndefined = function() ","var wrapper = function (value, action) ","        return function () ","        return function () ","Promise.prototype.thenReturn = function (value) ","Promise.prototype.thenThrow = function (reason) "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\each.js","LineCount":13,"CharCount":286,"Comments":[],"Functions":["module.exports = function(Promise, INTERNAL) ","Promise.prototype.each = function (fn) ","Promise.each = function (promises, fn) "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\errors.js","LineCount":112,"CharCount":3507,"Comments":[],"Functions":["function subError(nameProperty, defaultMessage) ","    function SubError(message) ","    if (typeof Array.prototype[methods[i]] === \"function\") ","AggregateError.prototype.toString = function() ","function OperationalError(message) "],"Dependencies":["./es5.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\es5.js","LineCount":81,"CharCount":1898,"Comments":[],"Functions":["var isES5 = (function()","        propertyIsWritable: function(obj, prop) ","    var ObjectKeys = function (o) ","    var ObjectGetDescriptor = function(o, key) ","    var ObjectDefineProperty = function (o, key, desc) ","    var ObjectFreeze = function (obj) ","    var ObjectGetPrototypeOf = function (obj) ","    var ArrayIsArray = function (obj) ","        propertyIsWritable: function() "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\filter.js","LineCount":13,"CharCount":302,"Comments":[],"Functions":["module.exports = function(Promise, INTERNAL) ","Promise.prototype.filter = function (fn, options) ","Promise.filter = function (promises, fn, options) "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\finally.js","LineCount":99,"CharCount":2526,"Comments":[],"Functions":["module.exports = function(Promise, NEXT_FILTER, tryConvertToPromise) ","function returnThis() ","function throwThis() ","function return$(r) ","    return function() ","function throw$(r) ","    return function() ","function promisedFinally(ret, reasonOrValue, isFulfilled) ","function finallyHandler(reasonOrValue) ","function tapHandler(value) ","Promise.prototype._passThroughHandler = function (handler, isFinally) ","    if (typeof handler !== \"function\") return this.then();","Promise.prototype[\"finally\"] = function (handler) ","Promise.prototype.tap = function (handler) "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\generators.js","LineCount":137,"CharCount":4565,"Comments":["                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/4Y4pDk\\u000a\\u000a\".replace(\"%s\", value) +","                        \"From coroutine:\\u000a\" +","        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    }","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    yieldHandlers.push(fn);","        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    }"],"Functions":["module.exports = function(Promise,","function promiseFromYieldHandler(value, yieldHandlers, traceParent) ","function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) ","    this._yieldHandlers = typeof yieldHandler === \"function\"","PromiseSpawn.prototype.promise = function () ","PromiseSpawn.prototype._run = function () ","PromiseSpawn.prototype._continue = function (result) ","PromiseSpawn.prototype._throw = function (reason) ","PromiseSpawn.prototype._next = function (value) ","Promise.coroutine = function (generatorFunction, options) ","    if (typeof generatorFunction !== \"function\") ","        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");","    return function () ","Promise.coroutine.addYieldHandler = function(fn) ","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.spawn = function (generatorFunction) ","    if (typeof generatorFunction !== \"function\") ","        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");"],"Dependencies":["./errors.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\join.js","LineCount":108,"CharCount":3783,"Comments":[],"Functions":["function(Promise, PromiseArray, tryConvertToPromise, INTERNAL) ","    var thenCallback = function(i) ","    var caller = function(count) ","    var Holder = function(total, fn) ","    Holder.prototype.checkFulfillment = function(promise) ","    var reject = function (reason) ","Promise.join = function () ","    if (last \u003e 0 \u0026\u0026 typeof arguments[last] === \"function\") "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\map.js","LineCount":134,"CharCount":4245,"Comments":["    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","","    return map(this, fn, options, null).promise();","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    return map(promises, fn, options, _filter).promise();"],"Functions":["module.exports = function(Promise,","function MappingPromiseArray(promises, fn, limit, _filter) ","function init() this._init$(undefined, -2);}","MappingPromiseArray.prototype._init = function () };","MappingPromiseArray.prototype._promiseFulfilled = function (value, index) ","MappingPromiseArray.prototype._drainQueue = function () ","MappingPromiseArray.prototype._filter = function (booleans, values) ","MappingPromiseArray.prototype.preservedValues = function () ","function map(promises, fn, options, _filter) ","Promise.prototype.map = function (fn, options) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.map = function (promises, fn, options, _filter) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");"],"Dependencies":["./async.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\method.js","LineCount":45,"CharCount":1292,"Comments":["        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }","        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }"],"Functions":["function(Promise, INTERNAL, tryConvertToPromise, apiRejection) ","Promise.method = function (fn) ","    if (typeof fn !== \"function\") ","        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    return function () ","Promise.attempt = Promise[\"try\"] = function (fn, args, ctx) ","    if (typeof fn !== \"function\") ","        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype._resolveFromSyncValue = function (value) "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\nodeify.js","LineCount":60,"CharCount":1577,"Comments":[],"Functions":["module.exports = function(Promise) ","function spreadAdapter(val, nodeback) ","function successAdapter(val, nodeback) ","function errorAdapter(reason, nodeback) ","Promise.prototype.nodeify = function (nodeback, options) ","    if (typeof nodeback == \"function\") "],"Dependencies":["./util.js","./async.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\progress.js","LineCount":77,"CharCount":2416,"Comments":[],"Functions":["module.exports = function(Promise, PromiseArray) ","Promise.prototype.progressed = function (handler) ","Promise.prototype._progress = function (progressValue) ","Promise.prototype._progressHandlerAt = function (index) ","Promise.prototype._doProgressWith = function (progression) ","Promise.prototype._progressUnchecked = function (progressValue) ","            if (typeof handler === \"function\") ","        if (typeof handler === \"function\") "],"Dependencies":["./util.js","./async.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\promise.js","LineCount":755,"CharCount":23597,"Comments":["    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/LhFpo0\\u000a\");","};"," /*jshint unused:false*/","var createContext =","        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");","    }","        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/KsIlge\\u000a\");","    }","                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));","            }","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    var prev = async._schedule;","    // Complete slack tracking, opt out of field-type tracking and           ","    // stabilize map                                                         ","    fillTypes({a: 1});                                                       "],"Functions":["module.exports = function() ","var makeSelfResolutionError = function () ","var reflect = function() ","var apiRejection = function(msg) ","    getDomain = function() ","    getDomain = function() ","var INTERNAL = function()};","function Promise(resolver) ","    if (typeof resolver !== \"function\") ","        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");","Promise.prototype.toString = function () ","Promise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) ","            if (typeof item === \"function\") ","                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));","Promise.prototype.reflect = function () ","Promise.prototype.then = function (didFulfill, didReject, didProgress) ","        typeof didFulfill !== \"function\" \u0026\u0026","        typeof didReject !== \"function\") ","        var msg = \".then() only accepts functions but was passed: \" +","Promise.prototype.done = function (didFulfill, didReject, didProgress) ","Promise.prototype.spread = function (didFulfill, didReject) ","Promise.prototype.isCancellable = function () ","Promise.prototype.toJSON = function () ","Promise.prototype.all = function () ","Promise.prototype.error = function (fn) ","Promise.is = function (val) ","Promise.fromNode = function(fn) ","Promise.all = function (promises) ","Promise.defer = Promise.pending = function () ","Promise.cast = function (obj) ","Promise.reject = Promise.rejected = function (reason) ","Promise.setScheduler = function(fn) ","    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype._then = function (","Promise.prototype._settlePromiseAtPostResolution = function (index) ","Promise.prototype._length = function () ","Promise.prototype._isFollowingOrFulfilledOrRejected = function () ","Promise.prototype._isFollowing = function () ","Promise.prototype._setLength = function (len) ","Promise.prototype._setFulfilled = function () ","Promise.prototype._setRejected = function () ","Promise.prototype._setFollowing = function () ","Promise.prototype._setIsFinal = function () ","Promise.prototype._isFinal = function () ","Promise.prototype._cancellable = function () ","Promise.prototype._setCancellable = function () ","Promise.prototype._unsetCancellable = function () ","Promise.prototype._setIsMigrated = function () ","Promise.prototype._unsetIsMigrated = function () ","Promise.prototype._isMigrated = function () ","Promise.prototype._receiverAt = function (index) ","Promise.prototype._promiseAt = function (index) ","Promise.prototype._fulfillmentHandlerAt = function (index) ","Promise.prototype._rejectionHandlerAt = function (index) ","Promise.prototype._boundValue = function() ","Promise.prototype._migrateCallbacks = function (follower, index) ","Promise.prototype._addCallbacks = function (","        if (typeof fulfill === \"function\" \u0026\u0026 !this._isCarryingStackTrace()) ","        if (typeof reject === \"function\") ","        if (typeof progress === \"function\") ","        if (typeof fulfill === \"function\") ","        if (typeof reject === \"function\") ","        if (typeof progress === \"function\") ","Promise.prototype._setProxyHandlers = function (receiver, promiseSlotValue) ","Promise.prototype._proxyPromiseArray = function (promiseArray, index) ","Promise.prototype._resolveCallback = function(value, shouldBind) ","function(reason, synchronous, shouldNotMarkOriginatingFromRejection) ","Promise.prototype._resolveFromResolver = function (resolver) ","    var r = tryCatch(resolver)(function(value) ","    }, function (reason) ","Promise.prototype._settlePromiseFromHandler = function (","Promise.prototype._target = function() ","Promise.prototype._followee = function() ","Promise.prototype._setFollowee = function(promise) ","Promise.prototype._cleanValues = function () ","Promise.prototype._propagateFrom = function (parent, flags) ","Promise.prototype._fulfill = function (value) ","Promise.prototype._reject = function (reason, carriedStackTrace) ","Promise.prototype._settlePromiseAt = function (index) ","    if (typeof handler === \"function\") ","Promise.prototype._clearCallbackDataAtIndex = function(index) ","Promise.prototype._isSettlePromisesQueued = function () ","Promise.prototype._setSettlePromisesQueued = function () ","Promise.prototype._unsetSettlePromisesQueued = function () ","Promise.prototype._queueSettlePromises = function() ","Promise.prototype._fulfillUnchecked = function (value) ","Promise.prototype._rejectUncheckedCheckError = function (reason) ","Promise.prototype._rejectUnchecked = function (reason, trace) ","        async.throwLater(function(e) ","Promise.prototype._settlePromises = function () ","    function fillTypes(value)                                               ","    fillTypes(function()});                                                 "],"Dependencies":["./util.js","./async.js","./errors.js","./thenables.js","./captured_trace.js","./debuggability.js","./catch_filter.js","./promise_resolver.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\promise_array.js","LineCount":143,"CharCount":4005,"Comments":["                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");","                this.__hardReject__(err);","        this._promise._reject(apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\")._reason());","        return;"],"Functions":["module.exports = function(Promise, INTERNAL, tryConvertToPromise,","function toResolutionValue(val) ","function PromiseArray(values) ","PromiseArray.prototype.length = function () ","PromiseArray.prototype.promise = function () ","PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) ","PromiseArray.prototype._isResolved = function () ","PromiseArray.prototype._resolve = function (value) ","PromiseArray.prototype._reject = function (reason) ","PromiseArray.prototype._promiseProgressed = function (progressValue, index) ","PromiseArray.prototype._promiseFulfilled = function (value, index) ","PromiseArray.prototype._promiseRejected = function (reason, index) ","PromiseArray.prototype.shouldCopyValues = function () ","PromiseArray.prototype.getActualLength = function (len) "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\promise_resolver.js","LineCount":124,"CharCount":3740,"Comments":["        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }","        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }","        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");","    }"],"Functions":["function isUntypedError(obj) ","function wrapAsOperationalError(obj) ","function nodebackForPromise(promise) ","    return function(err, value) ","    PromiseResolver = function (promise) ","    PromiseResolver = function (promise) ","        get: function() ","PromiseResolver.prototype.toString = function () ","PromiseResolver.prototype.fulfill = function (value) ","PromiseResolver.prototype.reject = function (reason) ","PromiseResolver.prototype.progress = function (value) ","PromiseResolver.prototype.cancel = function (err) ","PromiseResolver.prototype.timeout = function () ","PromiseResolver.prototype.isResolved = function () ","PromiseResolver.prototype.toJSON = function () "],"Dependencies":["./util.js","./errors.js","./es5.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\promisify.js","LineCount":308,"CharCount":11255,"Comments":["                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/iWrZbw\\u000a\"","                        .replace(\"%s\", suffix));","        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    }","        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");","    }","        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/8FZo5V\\u000a\");","    }"],"Functions":["module.exports = function(Promise, INTERNAL) ","var defaultFilter = function(name) ","function propsFilter(key) ","function isPromisified(fn) ","function hasPromisified(obj, key, suffix) ","function checkValid(ret, suffix, suffixRegexp) ","function promisifiableMethods(obj, suffix, suffixRegexp, filter) ","        if (typeof value === \"function\" \u0026\u0026","var escapeIdentRegex = function(str) ","var switchCaseArgumentOrder = function(likelyArgumentCount) ","var argumentSequence = function(argumentCount) ","var parameterDeclaration = function(parameterCount) ","var parameterCount = function(fn) ","function(callback, receiver, originalName, fn) ","    function generateCallForArgumentCount(count) ","    function generateArgumentSwitchCase() ","        var ret = function (Parameters)                                     \\n\\","function makeNodePromisifiedClosure(callback, receiver, _, fn) ","    var defaultThis = (function() return this;})();","    function promisified() ","function promisifyAll(obj, suffix, filter, promisifier) ","            var promisified = promisifier(fn, function() ","function promisify(callback, receiver) ","Promise.promisify = function (fn, receiver) ","    if (typeof fn !== \"function\") ","        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.promisifyAll = function (target, options) ","    if (typeof target !== \"function\" \u0026\u0026 typeof target !== \"object\") ","        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");","    if (typeof filter !== \"function\") filter = defaultFilter;","    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;"],"Dependencies":["./util.js","./promise_resolver.js","./errors"]},{"FileName":"node_modules\\bluebird\\js\\main\\props.js","LineCount":80,"CharCount":2093,"Comments":["        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/OsFKC8\\u000a\");","    } else if (castValue instanceof Promise) {"],"Functions":["module.exports = function(","function PropertiesPromiseArray(obj) ","PropertiesPromiseArray.prototype._init = function () ","PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) ","PropertiesPromiseArray.prototype._promiseProgressed = function (value, index) ","PropertiesPromiseArray.prototype.shouldCopyValues = function () ","PropertiesPromiseArray.prototype.getActualLength = function (len) ","function props(promises) ","Promise.prototype.props = function () ","Promise.props = function (promises) "],"Dependencies":["./util.js","./es5.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\queue.js","LineCount":91,"CharCount":2264,"Comments":[],"Functions":["function arrayMove(src, srcIndex, dst, dstIndex, len) ","function Queue(capacity) ","Queue.prototype._willBeOverCapacity = function (size) ","Queue.prototype._pushOne = function (arg) ","Queue.prototype._unshiftOne = function(value) ","Queue.prototype.unshift = function(fn, receiver, arg) ","Queue.prototype.push = function (fn, receiver, arg) ","Queue.prototype.shift = function () ","Queue.prototype.length = function () ","Queue.prototype._checkCapacity = function (size) ","Queue.prototype._resizeTo = function (capacity) "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\race.js","LineCount":48,"CharCount":1178,"Comments":["        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");","    }"],"Functions":["module.exports = function(","var raceLater = function (promise) ","    return promise.then(function(array) ","function race(promises, parent) ","Promise.race = function (promises) ","Promise.prototype.race = function () "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\reduce.js","LineCount":149,"CharCount":4875,"Comments":["    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);"],"Functions":["module.exports = function(Promise,","function ReductionPromiseArray(promises, fn, accum, _each) ","function init() ","ReductionPromiseArray.prototype._init = function () };","ReductionPromiseArray.prototype._resolveEmptyArray = function () ","ReductionPromiseArray.prototype._promiseFulfilled = function (value, index) ","function reduce(promises, fn, initialValue, _each) ","    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","Promise.prototype.reduce = function (fn, initialValue) ","Promise.reduce = function (promises, fn, initialValue, _each) "],"Dependencies":["./async.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\schedule.js","LineCount":36,"CharCount":1244,"Comments":["    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");","};"],"Functions":["var noAsyncScheduler = function() ","                ? function(fn)  GlobalSetImmediate.call(global, fn); }","                : function(fn)  ProcessNextTick.call(process, fn); };","    schedule = function(fn) ","        return function()  div.classList.toggle(\"foo\"); };","    schedule = function (fn) ","    schedule = function (fn) "],"Dependencies":["./util"]},{"FileName":"node_modules\\bluebird\\js\\main\\settle.js","LineCount":41,"CharCount":1128,"Comments":[],"Functions":["    function(Promise, PromiseArray) ","function SettledPromiseArray(values) ","SettledPromiseArray.prototype._promiseResolved = function (index, inspection) ","SettledPromiseArray.prototype._promiseFulfilled = function (value, index) ","SettledPromiseArray.prototype._promiseRejected = function (reason, index) ","Promise.settle = function (promises) ","Promise.prototype.settle = function () "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\some.js","LineCount":126,"CharCount":3253,"Comments":["        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/1wAmHx\\u000a\");","    }"],"Functions":["function(Promise, PromiseArray, apiRejection) ","function SomePromiseArray(values) ","SomePromiseArray.prototype._init = function () ","SomePromiseArray.prototype.init = function () ","SomePromiseArray.prototype.setUnwrap = function () ","SomePromiseArray.prototype.howMany = function () ","SomePromiseArray.prototype.setHowMany = function (count) ","SomePromiseArray.prototype._promiseFulfilled = function (value) ","SomePromiseArray.prototype._promiseRejected = function (reason) ","SomePromiseArray.prototype._fulfilled = function () ","SomePromiseArray.prototype._rejected = function () ","SomePromiseArray.prototype._addRejected = function (reason) ","SomePromiseArray.prototype._addFulfilled = function (value) ","SomePromiseArray.prototype._canPossiblyFulfill = function () ","SomePromiseArray.prototype._getRangeError = function (count) ","SomePromiseArray.prototype._resolveEmptyArray = function () ","function some(promises, howMany) ","Promise.some = function (promises, howMany) ","Promise.prototype.some = function (howMany) "],"Dependencies":["./util.js","./errors.js","./errors.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\synchronous_inspection.js","LineCount":95,"CharCount":2547,"Comments":["        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");","    }","        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");","    }","        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");","    }","        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");","    }"],"Functions":["module.exports = function(Promise) ","function PromiseInspection(promise) ","PromiseInspection.prototype.value = function () ","PromiseInspection.prototype.reason = function () ","Promise.prototype._isFulfilled = function () ","Promise.prototype._isRejected = function () ","Promise.prototype._isPending = function () ","Promise.prototype._isResolved = function () ","Promise.prototype.isPending = function() ","Promise.prototype.isRejected = function() ","Promise.prototype.isFulfilled = function() ","Promise.prototype.isResolved = function() ","Promise.prototype._value = function() ","Promise.prototype._reason = function() ","Promise.prototype.value = function() ","Promise.prototype.reason = function() "],"Dependencies":null},{"FileName":"node_modules\\bluebird\\js\\main\\thenables.js","LineCount":85,"CharCount":2260,"Comments":[],"Functions":["module.exports = function(Promise, INTERNAL) ","function tryConvertToPromise(obj, context) ","        } else if (typeof then === \"function\") ","function getThen(obj) ","function isAnyBluebirdPromise(obj) ","function doThenable(x, then, context) ","    function resolveFromThenable(value) ","    function rejectFromThenable(reason) ","    function progressFromThenable(value) ","        if (typeof promise._progress === \"function\") "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\timers.js","LineCount":65,"CharCount":1677,"Comments":[],"Functions":["module.exports = function(Promise, INTERNAL) ","var afterTimeout = function (promise, message) ","var afterValue = function(value)  return delay(+this).thenReturn(value); };","var delay = Promise.delay = function (value, ms) ","        setTimeout(function()  ret._fulfill(); }, ms);","Promise.prototype.delay = function (ms) ","function successClear(value) ","function failureClear(reason) ","Promise.prototype.timeout = function (ms, message) ","    var handle = setTimeout(function timeoutTimeout() "],"Dependencies":["./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\using.js","LineCount":214,"CharCount":6782,"Comments":["        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","","        var input;"],"Functions":["module.exports = function (Promise, apiRejection, tryConvertToPromise,","    function inspectionMapper(inspections) ","    function thrower(e) ","        setTimeout(function()throw e;}, 0);","    function castPreservingDisposable(thenable) ","            typeof thenable._isDisposable === \"function\" \u0026\u0026","            typeof thenable._getDisposer === \"function\" \u0026\u0026","    function dispose(resources, inspection) ","        function iterator() ","    function disposerSuccess(value) ","    function disposerFail(reason) ","    function Disposer(data, promise, context) ","    Disposer.prototype.data = function () ","    Disposer.prototype.promise = function () ","    Disposer.prototype.resource = function () ","    Disposer.prototype.tryDispose = function(inspection) ","    Disposer.isDisposer = function (d) ","                typeof d.resource === \"function\" \u0026\u0026","                typeof d.tryDispose === \"function\");","    function FunctionDisposer(fn, promise, context) ","    FunctionDisposer.prototype.doDispose = function (resource, inspection) ","    function maybeUnwrapDisposer(value) ","    Promise.using = function () ","        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");","            .then(function(vals) ","    Promise.prototype._setDisposable = function (disposer) ","    Promise.prototype._isDisposable = function () ","    Promise.prototype._getDisposer = function () ","    Promise.prototype._unsetDisposable = function () ","    Promise.prototype.disposer = function (fn) ","        if (typeof fn === \"function\") "],"Dependencies":["./errors.js","./util.js"]},{"FileName":"node_modules\\bluebird\\js\\main\\util.js","LineCount":322,"CharCount":8312,"Comments":["            /*jshint forin:false */","            enumeration: for (var key in obj) {","    /*jshint -W027,-W055,-W031*/","    function f() {}"],"Functions":["var haveGetters = (function()","            get: function () ","function tryCatcher() ","function tryCatch(fn) ","var inherits = function(Child, Parent) ","    function T() ","function isPrimitive(val) ","function isObject(value) ","function maybeWrapAsError(maybeError) ","function withAppended(target, appendee) ","function getDataPropertyOrDefault(obj, key, defaultValue) ","function notEnumerableProp(obj, name, value) ","function thrower(r) ","var inheritedDataKeys = (function() ","    var isExcludedProto = function(val) ","        return function(obj) ","        return function(obj) ","function isClass(fn) ","        if (typeof fn === \"function\") ","function toFastProperties(obj) ","    function f() }","function isIdentifier(str) ","function filledRange(count, prefix, suffix) ","function safeToString(obj) ","function markAsOriginatingFromRejection(e) ","function originatesFromRejection(e) ","function canAttachTrace(obj) ","var ensureErrorObject = (function() ","        return function(value) ","        return function(value) ","function classString(obj) ","function copyDescriptors(from, to, filter) ","                 typeof chrome.loadTimes === \"function\",","ret.isRecentNode = ret.isNode \u0026\u0026 (function() "],"Dependencies":["./es5.js"]},{"FileName":"node_modules\\body-parser\\index.js","LineCount":158,"CharCount":2499,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var deprecate = require('depd')('body-parser')","/**"," * Cache of loaded parsers."," * @private"," */","","var parsers = Object.create(null)","/**"," * @typedef Parsers"," * @type {function}"," * @property {function} json"," * @property {function} raw"," * @property {function} text"," * @property {function} urlencoded"," */","","/**"," * Module exports."," * @type {Parsers}"," */","","exports = module.exports = deprecate.function(bodyParser,","/**"," * JSON parser."," * @public"," */","","Object.defineProperty(exports, 'json', {","/**"," * Raw parser."," * @public"," */","","Object.defineProperty(exports, 'raw', {","/**"," * Text parser."," * @public"," */","","Object.defineProperty(exports, 'text', {","/**"," * URL-encoded parser."," * @public"," */","","Object.defineProperty(exports, 'urlencoded', {","/**"," * Create a middleware to parse json and urlencoded bodies."," *"," * @param {object} [options]"," * @return {function}"," * @deprecated"," * @public"," */","","function bodyParser (options) {","  // exclude type option","  if (options) {","/**"," * Create a getter for loading a parser."," * @private"," */","","function createParserGetter (name) {","/**"," * Load a parser module."," * @private"," */","","function loadParser (parserName) {","  // this uses a switch for static require analysis","  switch (parserName) {","  // store to prevent invoking require()","  return (parsers[parserName] = parser)"],"Functions":[" * @type function}"," * @property function} json"," * @property function} raw"," * @property function} text"," * @property function} urlencoded","exports = module.exports = deprecate.function(bodyParser,"," * @return function}","function bodyParser (options) ","  return function bodyParser (req, res, next) ","    _json(req, res, function (err) ","function createParserGetter (name) ","  return function get () ","function loadParser (parserName) "],"Dependencies":["depd\")(\"body-parser","./lib/types/json","./lib/types/raw","./lib/types/text","./lib/types/urlencoded"]},{"FileName":"node_modules\\body-parser\\lib\\read.js","LineCount":189,"CharCount":3663,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var createError = require('http-errors')","/**"," * Module exports."," */","","module.exports = read","/**"," * Read a request into a buffer and parse."," *"," * @param {object} req"," * @param {object} res"," * @param {function} next"," * @param {function} parse"," * @param {function} debug"," * @param {object} [options]"," * @api private"," */","","function read (req, res, next, parse, debug, options) {","  // flag as parsed","  req._body = true","  // read options","  var encoding = opts.encoding !== null","    // get the content stream","    stream = contentstream(req, debug, opts.inflate)","  // set raw-body options","  opts.length = length","  // assert charset is supported","  if (opts.encoding === null \u0026\u0026 encoding !== null \u0026\u0026 !iconv.encodingExists(encoding)) {","  // read body","  debug('read body')","      // default to 400","      setErrorStatus(err, 400)","      // echo back charset","      if (err.type === 'encoding.unsupported') {","      // read off entire request","      stream.resume()","    // verify","    if (verify) {","        // default to 403","        setErrorStatus(err, 403)","    // parse","    var str","      // default to 400","      setErrorStatus(err, 400)","/**"," * Get the content stream of the request."," *"," * @param {object} req"," * @param {function} debug"," * @param {boolean} [inflate=true]"," * @return {object}"," * @api private"," */","","function contentstream (req, debug, inflate) {","/**"," * Set a status on an error object, if ones does not exist"," * @private"," */","","function setErrorStatus (error, status) {"],"Functions":[" * @param function} next"," * @param function} parse"," * @param function} debug","function read (req, res, next, parse, debug, options) ","  getBody(stream, opts, function (err, body) ","      onFinished(req, function onfinished () "," * @param function} debug","function contentstream (req, debug, inflate) ","function setErrorStatus (error, status) "],"Dependencies":["http-errors","raw-body","iconv-lite","on-finished","zlib"]},{"FileName":"node_modules\\body-parser\\lib\\types\\json.js","LineCount":176,"CharCount":3535,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var bytes = require('bytes')","/**"," * Module exports."," */","","module.exports = json","/**"," * RegExp to match the first non-space in a string."," *"," * Allowed whitespace is defined in RFC 7159:"," *"," *    ws = *("," *            %x20 /              ; Space"," *            %x09 /              ; Horizontal tab"," *            %x0A /              ; Line feed or New line"," *            %x0D )              ; Carriage return"," */","","var FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex","var FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex","","/**","/**"," * Create a middleware to parse JSON bodies."," *"," * @param {object} [options]"," * @return {function}"," * @public"," */","","function json (options) {","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","      // special-case empty json body, as it's a common client-side mistake","      // TODO: maybe make this configurable or part of \"strict\" option","      return {}","    // skip requests without bodies","    if (!typeis.hasBody(req)) {","    // determine if request should be parsed","    if (!shouldParse(req)) {","    // assert charset per RFC 7159 sec 8.1","    var charset = getCharset(req) || 'utf-8'","    // read","    read(req, res, next, parse, debug, {","/**"," * Get the first non-whitespace character in a string."," *"," * @param {string} str"," * @return {function}"," * @api public"," */","","function firstchar (str) {","/**"," * Get the charset of a request."," *"," * @param {object} req"," * @api private"," */","","function getCharset (req) {","/**"," * Get the simple type checker."," *"," * @param {string} type"," * @return {function}"," */","","function typeChecker (type) {"],"Functions":[" * @return function}","function json (options) ","  if (verify !== false \u0026\u0026 typeof verify !== 'function') ","    throw new TypeError('option verify must be function')","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","  function parse (body) ","  return function jsonParser (req, res, next) "," * @return function}","function firstchar (str) ","function getCharset (req) "," * @return function}","function typeChecker (type) ","  return function checkType (req) "],"Dependencies":["bytes","content-type","http-errors","debug\")(\"body-parser:json","../read","type-is"]},{"FileName":"node_modules\\body-parser\\lib\\types\\raw.js","LineCount":102,"CharCount":1783,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," */","","var bytes = require('bytes')","/**"," * Module exports."," */","","module.exports = raw","/**"," * Create a middleware to parse raw bodies."," *"," * @param {object} [options]"," * @return {function}"," * @api public"," */","","function raw (options) {","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","    // skip requests without bodies","    if (!typeis.hasBody(req)) {","    // determine if request should be parsed","    if (!shouldParse(req)) {","    // read","    read(req, res, next, parse, debug, {","/**"," * Get the simple type checker."," *"," * @param {string} type"," * @return {function}"," */","","function typeChecker (type) {"],"Functions":[" * @return function}","function raw (options) ","  if (verify !== false \u0026\u0026 typeof verify !== 'function') ","    throw new TypeError('option verify must be function')","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","  function parse (buf) ","  return function rawParser (req, res, next) "," * @return function}","function typeChecker (type) ","  return function checkType (req) "],"Dependencies":["bytes","debug\")(\"body-parser:raw","../read","type-is"]},{"FileName":"node_modules\\body-parser\\lib\\types\\text.js","LineCount":122,"CharCount":2156,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," */","","var bytes = require('bytes')","/**"," * Module exports."," */","","module.exports = text","/**"," * Create a middleware to parse text bodies."," *"," * @param {object} [options]"," * @return {function}"," * @api public"," */","","function text (options) {","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","    // skip requests without bodies","    if (!typeis.hasBody(req)) {","    // determine if request should be parsed","    if (!shouldParse(req)) {","    // get charset","    var charset = getCharset(req) || defaultCharset","    // read","    read(req, res, next, parse, debug, {","/**"," * Get the charset of a request."," *"," * @param {object} req"," * @api private"," */","","function getCharset (req) {","/**"," * Get the simple type checker."," *"," * @param {string} type"," * @return {function}"," */","","function typeChecker (type) {"],"Functions":[" * @return function}","function text (options) ","  if (verify !== false \u0026\u0026 typeof verify !== 'function') ","    throw new TypeError('option verify must be function')","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","  function parse (buf) ","  return function textParser (req, res, next) ","function getCharset (req) "," * @return function}","function typeChecker (type) ","  return function checkType (req) "],"Dependencies":["bytes","content-type","debug\")(\"body-parser:text","../read","type-is"]},{"FileName":"node_modules\\body-parser\\lib\\types\\urlencoded.js","LineCount":280,"CharCount":5377,"Comments":["/*!"," * body-parser"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var bytes = require('bytes')","/**"," * Module exports."," */","","module.exports = urlencoded","/**"," * Cache of parser modules."," */","","var parsers = Object.create(null)","/**"," * Create a middleware to parse urlencoded bodies."," *"," * @param {object} [options]"," * @return {function}"," * @public"," */","","function urlencoded (options) {","  // notice because option default will flip in next major","  if (opts.extended === undefined) {","  // create the appropriate query parser","  var queryparse = extended","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","    // skip requests without bodies","    if (!typeis.hasBody(req)) {","    // determine if request should be parsed","    if (!shouldParse(req)) {","    // assert charset","    var charset = getCharset(req) || 'utf-8'","    // read","    read(req, res, next, parse, debug, {","/**"," * Get the extended query parser."," *"," * @param {object} options"," */","","function extendedparser (options) {","/**"," * Get the charset of a request."," *"," * @param {object} req"," * @api private"," */","","function getCharset (req) {","/**"," * Count the number of parameters, stopping once limit reached"," *"," * @param {string} body"," * @param {number} limit"," * @api private"," */","","function parameterCount (body, limit) {","/**"," * Get parser for module name dynamically."," *"," * @param {string} name"," * @return {function}"," * @api private"," */","","function parser (name) {","  // this uses a switch for static require analysis","  switch (name) {","  // store to prevent invoking require()","  parsers[name] = mod","/**"," * Get the simple query parser."," *"," * @param {object} options"," */","","function simpleparser (options) {","/**"," * Get the simple type checker."," *"," * @param {string} type"," * @return {function}"," */","","function typeChecker (type) {"],"Functions":[" * @return function}","function urlencoded (options) ","  if (verify !== false \u0026\u0026 typeof verify !== 'function') ","    throw new TypeError('option verify must be function')","  // create the appropriate type checking function","  var shouldParse = typeof type !== 'function'","  function parse (body) ","  return function urlencodedParser (req, res, next) ","function extendedparser (options) ","  return function queryparse (body) ","function getCharset (req) ","function parameterCount (body, limit) "," * @return function}","function parser (name) ","function simpleparser (options) ","  return function queryparse (body) "," * @return function}","function typeChecker (type) ","  return function checkType (req) "],"Dependencies":["bytes","content-type","http-errors","debug\")(\"body-parser:urlencoded","depd\")(\"body-parser","../read","type-is","qs","querystring"]},{"FileName":"node_modules\\bson\\alternate_parsers\\bson.js","LineCount":1575,"CharCount":65286,"Comments":["// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","/**"," * Create a new BSON instance"," *"," * @class"," * @return {BSON} instance of BSON Parser."," */","function BSON () {};","/**"," * @ignore"," * @api private"," */","// BSON MAX VALUES","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","/**","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_UNDEFINED"," **/","BSON.BSON_DATA_UNDEFINED = 6;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t// Calculate size","    for(var key in object) {","/**"," * @ignore"," * @api private"," */","function calculateElement(name, value, serializeFunctions) {","  // If we have toBSON defined, override the current object","  if(value \u0026\u0026 value.toBSON){","        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit","          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (4 + 1);","      } else {  // 64 bit","        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);","        // Calculate size depending on the availability of a scope","        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) {","        // Check what kind of subtype we have","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","        // Set up correct object for serialization","        var ordered_values = {","        // Add db reference if it exists","        if(null != value.db) {","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Number} index the index in the buffer where we wish to start serializing into."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Number} returns the new write index in the Buffer."," * @api public"," */","BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) {","  // Default setting false","  serializeFunctions = serializeFunctions == null ? false : serializeFunctions;","  // Write end information (length of the object)","  var size = buffer.length;","  // Write the size of the object","  buffer[index++] = size \u0026 0xff;","/**"," * @ignore"," * @api private"," */","var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) {","  // Process the object","  if(Array.isArray(object)) {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t// Serialize the object","    for(var key in object) {","      // Check the key and throw error if it's illegal","      if (key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') {","        // dollars and dots ok","        BSON.checkKey(key, !checkKeys);","      // Pack the element","      index = packElement(key, object[key], checkKeys, buffer, index, serializeFunctions);","  // Write zero","  buffer[index++] = 0;","    ch = str.charCodeAt(i);  // get char","    st = [];                 // set up \"stack\"","    do {","      st.push( ch \u0026 0xFF );  // push byte to stack","      ch = ch \u003e\u003e 8;          // shift value down by 1 byte","    }","    // add stack contents to result","    // done because chars have \"wrong\" endianness","    re = re.concat( st.reverse() );","  // return an array of bytes","  return re;","    ch = str.charCodeAt(i);  // get char","    st = [];                 // set up \"stack\"","    do {","      st.push( ch \u0026 0xFF );  // push byte to stack","      ch = ch \u003e\u003e 8;          // shift value down by 1 byte","    }","    // add stack contents to result","    // done because chars have \"wrong\" endianness","    re = re + st.length;","  // return an array of bytes","  return re;","/**"," * @ignore"," * @api private"," */","var writeToTypedArray = function(buffer, string, index) {","/**"," * @ignore"," * @api private"," */","var supportsBuffer = typeof Buffer != 'undefined';","/**"," * @ignore"," * @api private"," */","var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) {","  // If we have toBSON defined, override the current object","  if(value \u0026\u0026 value.toBSON){","      // console.log(\"+++++++++++ index string:: \" + index)","      // Encode String type","      buffer[index++] = BSON.BSON_DATA_STRING;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Calculate size","      var size = supportsBuffer ? Buffer.byteLength(value) + 1 : numberOfBytes(value) + 1;","      // console.log(\"====== key :: \" + name + \" size ::\" + size)","      // Write the size of the string to buffer","      buffer[index + 3] = (size \u003e\u003e 24) \u0026 0xff;","      // Ajust the index","      index = index + 4;","      // Write the string","      supportsBuffer ? buffer.write(value, index, 'utf8') : writeToTypedArray(buffer, value, index);","      // Update index","      index = index + size - 1;","      // Write zero","      buffer[index++] = 0;","      // Return index","      return index;","      // We have an integer value","      if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) {","        // If the value fits in 32 bits encode as int, if it fits in a double","        // encode it as a double, otherwise long","        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) {","          // Set int type 32 bits or less","          buffer[index++] = BSON.BSON_DATA_INT;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Write the int value","          buffer[index++] = value \u0026 0xff;","          // Encode as double","          buffer[index++] = BSON.BSON_DATA_NUMBER;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Write float","          writeIEEE754(buffer, value, index, 'little', 52, 8);","          // Ajust index","          index = index + 8;","          // Set long type","          buffer[index++] = BSON.BSON_DATA_LONG;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Encode low bits","          buffer[index++] = lowBits \u0026 0xff;","          // Encode high bits","          buffer[index++] = highBits \u0026 0xff;","        // Encode as double","        buffer[index++] = BSON.BSON_DATA_NUMBER;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write float","        writeIEEE754(buffer, value, index, 'little', 52, 8);","        // Ajust index","        index = index + 8;","      // Set long type","      buffer[index++] = BSON.BSON_DATA_NULL;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Write the type","      buffer[index++] = BSON.BSON_DATA_BOOLEAN;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Encode the boolean value","      buffer[index++] = value ? 1 : 0;","        // Write the type of either min or max key","        if(value === null) {","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // console.log(\"+++++++++++ index OBJECTID:: \" + index)","        // Write the type","        buffer[index++] = BSON.BSON_DATA_OID;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write objectid","        supportsBuffer ? buffer.write(value.id, index, 'binary') : writeToTypedArray(buffer, value.id, index);","        // Ajust index","        index = index + 12;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_DATE;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the date","        var dateInMilis = Long.fromNumber(value.getTime());","        // Encode low bits","        buffer[index++] = lowBits \u0026 0xff;","        // Encode high bits","        buffer[index++] = highBits \u0026 0xff;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_BINARY;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Get size of the buffer (current write point)","        var size = value.length;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the default subtype","        buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;","        // Copy the content form the binary field to the buffer","        value.copy(buffer, index, 0, size);","        // Adjust the index","        index = index + size;","        // Write the type","        buffer[index++] = value instanceof Long || value['_bsontype'] == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the date","        var lowBits = value.getLowBits();","        // Encode low bits","        buffer[index++] = lowBits \u0026 0xff;","        // Encode high bits","        buffer[index++] = highBits \u0026 0xff;","        // Encode as double","        buffer[index++] = BSON.BSON_DATA_NUMBER;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write float","        writeIEEE754(buffer, value, index, 'little', 52, 8);","        // Ajust index","        index = index + 8;","          // Write the type","          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Calculate the scope size","          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);","          // Function string","          var functionString = value.code.toString();","          // Function Size","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Calculate full size of the object","          var totalSize = 4 + codeSize + scopeSize + 4;","          // Write the total size of the object","          buffer[index++] = totalSize \u0026 0xff;","          // Write the size of the string to buffer","          buffer[index++] = codeSize \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + codeSize - 1;","          // Write zero","          buffer[index++] = 0;","          // Serialize the scope object","          var scopeObjectBuffer = supportsBuffer ? new Buffer(scopeSize) : new Uint8Array(new ArrayBuffer(scopeSize));","          // Execute the serialization into a seperate buffer","          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);","          // Adjusted scope Size (removing the header)","          var scopeDocSize = scopeSize;","          // Write scope object size","          buffer[index++] = scopeDocSize \u0026 0xff;","          // Write the scopeObject into the buffer","          supportsBuffer ? scopeObjectBuffer.copy(buffer, index, 0, scopeSize) : buffer.set(scopeObjectBuffer, index);","          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)","          index = index + scopeDocSize - 5;","          // Write trailing zero","          buffer[index++] = 0;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Function string","          var functionString = value.code.toString();","          // Function Size","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Write the size of the string to buffer","          buffer[index++] = size \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + size - 1;","          // Write zero","          buffer[index++] = 0;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_BINARY;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Extract the buffer","        var data = value.value(true);","        // Calculate size","        var size = value.position;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the subtype to the buffer","        buffer[index++] = value.sub_type;","        // If we have binary type 2 the 4 first bytes are the size","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","        // Write the data to the object","        supportsBuffer ? data.copy(buffer, index, 0, value.position) : buffer.set(data, index);","        // Ajust index","        index = index + value.position;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_SYMBOL;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Calculate size","        var size = supportsBuffer ? Buffer.byteLength(value.value) + 1 : numberOfBytes(value.value) + 1;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the string","        buffer.write(value.value, index, 'utf8');","        // Update index","        index = index + size - 1;","        // Write zero","        buffer[index++] = 0x00;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_OBJECT;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Set up correct object for serialization","        var ordered_values = {","        // Add db reference if it exists","        if(null != value.db) {","        // Message size","        var size = BSON.calculateObjectSize(ordered_values, serializeFunctions);","        // Serialize the object","        var endIndex = BSON.serializeWithBufferAndIndex(ordered_values, checkKeys, buffer, index, serializeFunctions);","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write zero for object","        buffer[endIndex++] = 0x00;","        // Return the end index","        return endIndex;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_REGEXP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the regular expression string","        supportsBuffer ? buffer.write(value.source, index, 'utf8') : writeToTypedArray(buffer, value.source, index);","        // Adjust the index","        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));","        // Write zero","        buffer[index++] = 0x00;","        // Write the parameters","        if(value.global) buffer[index++] = 0x73; // s","        if(value.ignoreCase) buffer[index++] = 0x69; // i","        if(value.multiline) buffer[index++] = 0x6d; // m","        // Add ending zero","        buffer[index++] = 0x00;","        // Write the type","        buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Adjust the index","        index = index + numberOfWrittenBytes + 1;","        // Write size","        var size = endIndex - index;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","        // Write the type","        buffer[index++] = BSON.BSON_DATA_REGEXP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the regular expression string","        buffer.write(value.source, index, 'utf8');","        // Adjust the index","        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));","        // Write zero","        buffer[index++] = 0x00;","        // Write the parameters","        if(value.global) buffer[index++] = 0x73; // s","        if(value.ignoreCase) buffer[index++] = 0x69; // i","        if(value.multiline) buffer[index++] = 0x6d; // m","        // Add ending zero","        buffer[index++] = 0x00;","          // Write the type","          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Calculate the scope size","          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);","          // Function string","          var functionString = value.toString();","          // Function Size","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Calculate full size of the object","          var totalSize = 4 + codeSize + scopeSize;","          // Write the total size of the object","          buffer[index++] = totalSize \u0026 0xff;","          // Write the size of the string to buffer","          buffer[index++] = codeSize \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + codeSize - 1;","          // Write zero","          buffer[index++] = 0;","          // Serialize the scope object","          var scopeObjectBuffer = new Buffer(scopeSize);","          // Execute the serialization into a seperate buffer","          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);","          // Adjusted scope Size (removing the header)","          var scopeDocSize = scopeSize - 4;","          // Write scope object size","          buffer[index++] = scopeDocSize \u0026 0xff;","          // Write the scopeObject into the buffer","          scopeObjectBuffer.copy(buffer, index, 0, scopeSize);","          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)","          index = index + scopeDocSize - 5;","          // Write trailing zero","          buffer[index++] = 0;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Function string","          var functionString = value.toString();","          // Function Size","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Write the size of the string to buffer","          buffer[index++] = size \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + size - 1;","          // Write zero","          buffer[index++] = 0;","  // If no value to serialize","  return index;","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {","  // Throw error if we are trying serialize an illegal type","  if(object == null || typeof object != 'object' || Array.isArray(object))","  // Emoty target buffer","  var buffer = null;","  // Calculate the size of the object","  var size = BSON.calculateObjectSize(object, serializeFunctions);","  // Fetch the best available type for storing the binary data","  if(buffer = typeof Buffer != 'undefined') {","  // If asBuffer is false use typed arrays","  BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, 0, serializeFunctions);","  // console.log(\"++++++++++++++++++++++++++++++++++++ OLDJS :: \" + buffer.length)","  // console.log(buffer.toString('hex'))","  // console.log(buffer.toString('ascii'))","  return buffer;","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Crc state variables shared by function"," *"," * @ignore"," * @api private"," */","var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];","/**"," * CRC32 hash method, Fast and enough versitility for our usage"," *"," * @ignore"," * @api private"," */","var crc32 =  function(string, start, end) {","/**"," * Deserialize stream data as BSON documents."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");","  options = options != null ? options : {};","  // Loop over all documents","  for(var i = 0; i \u003c numberOfDocuments; i++) {","    // Find size of the document","    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;","    // Update options with index","    options['index'] = index;","    // Parse the document at this point","    documents[docStartIndex + i] = BSON.deserialize(data, options);","    // Adjust index by the document size","    index = index + size;","  // Return object containing end index of parsing and list of documents","  return index;","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEvalWithHash = function(functionCache, hash, functionString, object) {","  // Contains the value we are going to set","  var value = null;","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) {","  // Set the object","  return functionCache[hash].bind(object);","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEval = function(functionString) {","  // Contains the value we are going to set","  var value = null;","  // Eval the function","  eval(\"value = \" + functionString);","/**"," * Convert Uint8Array to String"," *"," * @ignore"," * @api private"," */","var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) {","/**"," * Deserialize data as BSON."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Boolean} [isArray] ignore used for recursive parsing."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.deserialize = function(buffer, options, isArray) {","  // Options","  options = options == null ? {} : options;","  // Validate that we have at least 4 bytes of buffer","  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");","  // Set up index","  var index = typeof options['index'] == 'number' ? options['index'] : 0;","  // Reads in a C style string","  var readCStyleString = function() {","    // Get the start search index","    var i = index;","    // Locate the end of the c string","    while(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","    // If are at the end of the buffer there is a problem with the document","    if(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","    // Grab utf8 encoded string","    var string = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, i) : convertUint8ArrayToUtf8String(buffer, index, i);","    // Update index position","    index = i + 1;","    // Return string","    return string;","  // Create holding object","  var object = isArray ? [] : {};","  // Read the document size","  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","  // Ensure buffer is valid size","  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");","  // While we have more left data left keep parsing","  while(true) {","    // Read the type","    var elementType = buffer[index++];","    // If we get a zero it's the last byte, exit","    if(elementType == 0) break;","    // Read the name of the field","    var name = readCStyleString();","    // Switch on the type","    switch(elementType) {","        // Decode the oid","        object[name] = new ObjectID(string);","        // Update index","        index = index + 12;","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Add string to object","        object[name] = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // Update parse index position","        index = index + stringSize;","        // Decode the 32bit value","        object[name] = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Decode the double value","        object[name] = readIEEE754(buffer, index, 'little', 52, 8);","        // Update the index","        index = index + 8;","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Set date object","        object[name] = new Date(new Long(lowBits, highBits).toNumber());","        // Parse the boolean value","        object[name] = buffer[index++] == 1;","        // Parse the boolean value","        object[name] = null;","        // Decode the size of the binary blob","        var binarySize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Decode the subtype","        var subType = buffer[index++];","        // Decode as raw Buffer object if options specifies it","        if(buffer['slice'] != null) {","          // If we have subtype 2 skip the 4 bytes for the size","          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          // Slice the data","          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);","          // If we have subtype 2 skip the 4 bytes for the size","          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          // Copy the data","          for(var i = 0; i \u003c binarySize; i++) {","          // Create the binary object","          object[name] = new Binary(_buffer, subType);","        // Update the index","        index = index + binarySize;","        // Decode the size of the array document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Set the array to the object","        object[name] = BSON.deserialize(buffer, options, true);","        // Adjust the index","        index = index + objectSize;","        // Decode the size of the object document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Set the array to the object","        object[name] = BSON.deserialize(buffer, options, false);","        // Adjust the index","        index = index + objectSize;","        // Create the regexp","        var source = readCStyleString();","        // For each option add the corresponding one for javascript","        var optionsArray = new Array(regExpOptions.length);","        // Parse options","        for(var i = 0; i \u003c regExpOptions.length; i++) {","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Create long object","        var long = new Long(lowBits, highBits);","        // Promote the long if possible","        if(promoteLongs) {","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Add string to object","        object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));","        // Update parse index position","        index = index + stringSize;","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Set the object","        object[name] = new Timestamp(lowBits, highBits);","        // Parse the object","        object[name] = new MinKey();","        // Parse the object","        object[name] = new MaxKey();","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Function string","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","        if(evalFunctions) {","          // Contains the value we are going to set","          var value = null;","          // If we have cache enabled let's look for the md5 of the function in the cache","          if(cacheFunctions) {","            // Got to do this to avoid V8 deoptimizing the call due to finding eval","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            // Set directly","            object[name] = isolateEval(functionString);","        // Update parse index position","        index = index + stringSize;","        // Read the content of the field","        var totalSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Javascript function","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // Update parse index position","        index = index + stringSize;","        // Parse the element","        options['index'] = index;","        // Decode the size of the object document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Decode the scope object","        var scopeObject = BSON.deserialize(buffer, options, false);","        // Adjust the index","        index = index + objectSize;","        // If we are evaluating the functions","        if(evalFunctions) {","          // Contains the value we are going to set","          var value = null;","          // If we have cache enabled let's look for the md5 of the function in the cache","          if(cacheFunctions) {","            // Got to do this to avoid V8 deoptimizing the call due to finding eval","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            // Set directly","            object[name] = isolateEval(functionString);","          // Set the scope on the object","          object[name].scope = scopeObject;","        // Add string to object","        break;","  // Check if we have a db ref object","  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);","  // Return the final objects","  return object;","/**"," * Check if key name is valid."," *"," * @ignore"," * @api private"," */","BSON.checkKey = function checkKey (key, dollarsAndDotsOk) {","  // Check if we have a legal key for the object","  if (!!~key.indexOf(\"\\x00\")) {","    // The BSON spec doesn't allow keys with null bytes because keys are","    // null-terminated.","    throw Error(\"key \" + key + \" must not contain null bytes\");","/**"," * Deserialize data as BSON."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Boolean} [isArray] ignore used for recursive parsing."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.prototype.deserialize = function(data, options) {","/**"," * Deserialize stream data as BSON documents."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.prototype.calculateObjectSize = function(object, serializeFunctions) {","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Number} index the index in the buffer where we wish to start serializing into."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Number} returns the new write index in the Buffer."," * @api public"," */","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) {","/**"," * @ignore"," * @api private"," */","module.exports = BSON;"],"Functions":["var isDate = function isDate(d) ","function BSON () };"," * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.","BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) ","function calculateElement(name, value, serializeFunctions) ","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'"," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) ","var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) ","    if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");","    if(object != null \u0026\u0026 typeof object != 'object') throw new Error(\"toBSON function did not return an object\");","var stringToBytes = function(str) ","var numberOfBytes = function(str) ","var writeToTypedArray = function(buffer, string, index) ","var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) ","          var functionString = value.code.toString();","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          var functionString = value.code.toString();","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","          var functionString = value.toString();","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          var functionString = value.toString();","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);"," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) "," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };"," * Crc state variables shared by function","var crc32 =  function(string, start, end) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ","var isolateEvalWithHash = function(functionCache, hash, functionString, object) ","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) ","    eval(\"value = \" + functionString);","    functionCache[hash] = value;","  return functionCache[hash].bind(object);","var isolateEval = function(functionString) ","  // Eval the function","  eval(\"value = \" + functionString);","var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) ","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.deserialize = function(buffer, options, isArray) ","  var readCStyleString = function() ","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","          // If we have cache enabled let's look for the md5 of the function in the cache","            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            object[name] = isolateEval(functionString);","          object[name]  = new Code(functionString, });","        // Javascript function","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","          // If we have cache enabled let's look for the md5 of the function in the cache","            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            object[name] = isolateEval(functionString);","          object[name]  = new Code(functionString, scopeObject);","BSON.checkKey = function checkKey (key, dollarsAndDotsOk) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserialize = function(data, options) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) "," * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.","BSON.prototype.calculateObjectSize = function(object, serializeFunctions) "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) "],"Dependencies":["../lib/bson/long","../lib/bson/double","../lib/bson/timestamp","../lib/bson/objectid","../lib/bson/symbol","../lib/bson/code","../lib/bson/min_key","../lib/bson/max_key","../lib/bson/db_ref","../lib/bson/binary","../lib/bson/binary_parser","../lib/bson/float_parser","../lib/bson/float_parser"]},{"FileName":"node_modules\\bson\\alternate_parsers\\faster_bson.js","LineCount":430,"CharCount":21441,"Comments":["/// reduced to ~ 410 LOCs (parser only 300 vs. 1400+) with (some, needed) BSON classes \"inlined\".","/// Compare ~ 4,300 (22KB vs. 157KB) in browser build at: https://github.com/mongodb/js-bson/blob/master/browser_build/bson.js","","module.exports.calculateObjectSize = calculateObjectSize;","    var totalLength = (4 + 1);      /// handles the obj.length prefix + terminating '0' ?!","    for(var key in object) {        /// looks like it handles arrays under the same for...in loop!?","      totalLength += calculateElement(key, object[key])","    var len = 1;                                /// always starting with 1 for the data type byte!","    if (name) len += Buffer.byteLength(name, 'utf8') + 1;   /// cstring: name + '0' termination","","    if (value === undefined || value === null) return len;  /// just the type byte plus name cstring","    switch( value.constructor ) {      /// removed all checks 'isBuffer' if Node.js Buffer class is present!?","","        case ObjectID:          /// we want these sorted from most common case to least common/deprecated;","            return len + 12;","            return len + 4 + Buffer.byteLength(value, 'utf8') +1; ///","        case Number:","            if (Math.floor(value) === value) {  /// case: integer; pos.# more common, '\u0026\u0026' stops if 1st fails!","                if ( value \u003c= 2147483647 \u0026\u0026 value \u003e= -2147483647 ) // 32 bit","                    return len + 4;","                else return len + 8;    /// covers Long-ish JS integers as Longs!","            } else return len + 8;      /// 8+1 --- covers Double \u0026 std. float","        case Boolean:","        case Buffer:   ///  replaces the entire Binary class!","            return len + 4 + value.length + 1;","        case Regex:  /// these are handled as strings by serializeFast() later, hence 'gim' opts = 3 + 1 chars","            return len + Buffer.byteLength(value.source, 'utf8') + 1","            return len;     /// these two return the type byte and name cstring only!","    }","function serializeFast(object, checkKeys, buffer, i) {   /// set checkKeys = false in query(..., options object to save performance IFF you're certain your keys are safe/system-set!","    var size = buffer.length;","    buffer[i++] = size \u0026 0xff; buffer[i++] = (size \u003e\u003e 8) \u0026 0xff;   /// these get overwritten later!","    buffer[i++] = (size \u003e\u003e 16) \u0026 0xff; buffer[i++] = (size \u003e\u003e 24) \u0026 0xff;","    if (object.constructor === Array) {     /// any need to checkKeys here?!? since we're doing for rather than for...in, should be safe from extra (non-numeric) keys added to the array?!","        for(var j = 0; j \u003c object.length; j++) {","    } else {   /// checkKeys is needed if any suspicion of end-user key tampering/\"injection\" (a la SQL)","        for(var key in object) {    /// mostly there should never be direct access to them!?","            if (checkKeys \u0026\u0026 (key.indexOf('\\x00') \u003e= 0 || key === '$where') ) {  /// = \"no script\"?!; could add back key.indexOf('$') or maybe check for 'eval'?!","/// took out: || key.indexOf('.') \u003e= 0...  Don't we allow dot notation queries?!","                console.log('checkKeys error: ');","            i = packElement(key, object[key], checkKeys, buffer, i);  /// checkKeys pass needed for recursion!","        }","    buffer[i++] = 0;   /// write terminating zero; !we do NOT -1 the index increase here as original does!","    return i;","function packElement(name, value, checkKeys, buffer, i) {    /// serializeFunctions removed! checkKeys needed for Array \u0026 Object cases pass through (calling serializeFast recursively!)","    if (value === undefined || value === null){","        buffer[i++] = 10;                                       /// = BSON.BSON_DATA_NULL;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;    /// buffer.write(...) returns bytesWritten!","        return i;","        buffer[i++] = 7;   /// = BSON.BSON_DATA_OID;","        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;","///     i += buffer.write(value.id, i, 'binary');  ///  OLD: writes a String to a Buffer; 'binary' deprecated!!","        value.id.copy(buffer, i);  /// NEW ObjectID version has this.id = Buffer at the ready!","        return i += 12;","        buffer[i++] = 2;    ///  = BSON.BSON_DATA_STRING;","        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;","        var size = Buffer.byteLength(value) + 1;  /// includes the terminating '0'!?","        buffer[i++] = size \u0026 0xff; buffer[i++] = (size \u003e\u003e 8) \u0026 0xff;","        if ( ~~(value) === value) {     /// double-Tilde is equiv. to Math.floor(value)","            if ( value \u003c= 2147483647 \u0026\u0026 value \u003e= -2147483647){ /// = BSON.BSON_INT32_MAX / MIN asf.","                buffer[i++] = 16;   /// = BSON.BSON_DATA_INT;","                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","// Else large-ish JS int!? to Long!?","            } else {  /// if (value \u003c= BSON.JS_INT_MAX \u0026\u0026 value \u003e= BSON.JS_INT_MIN){ /// 9007199254740992 asf.","                buffer[i++] = 18;   /// = BSON.BSON_DATA_LONG;","                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","        } else {    /// we have a float / Double","            buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;","            i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","/// OLD:    writeIEEE754(buffer, value, i, 'little', 52, 8);","            buffer.writeDoubleLE(value, i);     i += 8;","        buffer[i++] = 8;    /// = BSON.BSON_DATA_BOOLEAN;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","        buffer[i++] = value.constructor === Array ? 4 : 3; /// = BSON.BSON_DATA_ARRAY / _OBJECT;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","\t    var endIndex = serializeFast(value, checkKeys, buffer, i); /// + 4); no longer needed b/c serializeFast writes a temp 4 bytes for length","        var size = endIndex - i;","    /// case Binary:        /// is basically identical unless special/deprecated options!","    case Buffer:            /// solves ALL of our Binary needs without the BSON.Binary class!?","        buffer[i++] = 5;    /// = BSON.BSON_DATA_BINARY;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","        buffer[i++] = 0;        /// write BSON.BSON_BINARY_SUBTYPE_DEFAULT;","        value.copy(buffer, i);  ///, 0, size); \u003c\u003c defaults to sourceStart=0, sourceEnd=sourceBuffer.length);","        i += size;","        buffer[i++] = 11;   /// = BSON.BSON_DATA_REGEXP;","        i += buffer.write(name, i, 'utf8');         buffer[i++] = 0;","        if (value.global) buffer[i++] = 0x73;        // s = 'g' for JS Regex!","        if (value.ignoreCase) buffer[i++] = 0x69;    // i","        if (value.multiline) buffer[i++] = 0x6d;     // m","        buffer[i++] = 0x00;","        buffer[i++] = 9;    /// = BSON.BSON_DATA_DATE;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","        buffer[i++] = value.constructor === Long ? 18 : 17; /// = BSON.BSON_DATA_LONG / _TIMESTAMP","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","        buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;","        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","/// OLD: writeIEEE754(buffer, value, i, 'little', 52, 8);    i += 8;","        buffer.writeDoubleLE(value, i);     i += 8;","    case MinKey:    /// = BSON.BSON_DATA_MINKEY;","        buffer[i++] = 127; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","    case MaxKey:    /// = BSON.BSON_DATA_MAXKEY;","        buffer[i++] = 255; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;","    } /// end of switch","    return i;   /// ?! If no value to serialize","}","function deserializeFast(buffer, i, isArray){   //// , options, isArray) {       //// no more options!","    if (buffer.length \u003c 5) return new Error('Corrupt bson message \u003c 5 bytes long'); /// from 'throw'","    var elementType, tempindex = 0, name;","    var string, low, high;              /// = lowBits / highBits","                                        /// using 'i' as the index to keep the lines shorter:","    i || ( i = 0 );  /// for parseResponse it's 0; set to running index in deserialize(object/array) recursion","    var object = isArray ? [] : {};         /// needed for type ARRAY recursion later!","    var size = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;","/// 'size' var was not used by anything after this, so we can reuse it","","    while(true) {                           // While we have more left data left keep parsing","        elementType = buffer[i++];          // Read the type","        if (elementType === 0) break;       // If we get a zero it's the last byte, exit","","        tempindex = i;  /// inlined readCStyleString \u0026 removed extra i\u003cbuffer.length check slowing EACH loop!","        while( buffer[tempindex] !== 0x00 ) tempindex++;  /// read ahead w/out changing main 'i' index","        if (tempindex \u003e= buffer.length) return new Error('Corrupt BSON document: illegal CString')","        i = tempindex + 1;               /// Update index position to after the string + '0' termination","","        switch(elementType) {","        case 7:     /// = BSON.BSON_DATA_OID:","            var buf = new Buffer(12);","            buffer.copy(buf, 0, i, i += 12 );   /// copy 12 bytes from the current 'i' offset into fresh Buffer","            object[name] = new ObjectID(buf);   ///... \u0026 attach to the new ObjectID instance","            break;","        case 2:     /// = BSON.BSON_DATA_STRING:","            size = buffer[i++] | buffer[i++] \u003c\u003c8 | buffer[i++] \u003c\u003c16 | buffer[i++] \u003c\u003c24;","            i++;        break;          /// need to get the '0' index \"tick-forward\" back!","","        case 16:    /// = BSON.BSON_DATA_INT:        // Decode the 32bit value","            object[name] = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;    break;","        case 1:     /// = BSON.BSON_DATA_NUMBER:     // Decode the double value","            object[name] = buffer.readDoubleLE(i);   /// slightly faster depending on dec.points; a LOT cleaner","            /// OLD: object[name] = readIEEE754(buffer, i, 'little', 52, 8);","            i += 8;     break;","        case 8:     /// = BSON.BSON_DATA_BOOLEAN:","            object[name] = buffer[i++] == 1;    break;","        case 6:     /// = BSON.BSON_DATA_UNDEFINED:     /// deprecated","        case 10:    /// = BSON.BSON_DATA_NULL:","            object[name] = null;     break;","        case 4:     /// = BSON.BSON_DATA_ARRAY","            size = buffer[i] | buffer[i+1] \u003c\u003c8 | buffer[i+2] \u003c\u003c16 | buffer[i+3] \u003c\u003c24;  /// NO 'i' increment since the size bytes are reread during the recursion!","            object[name] = deserializeFast(buffer, i, true );  /// pass current index \u0026 set isArray = true","            i += size;      break;","        case 3:     /// = BSON.BSON_DATA_OBJECT:","            size = buffer[i] | buffer[i+1] \u003c\u003c8 | buffer[i+2] \u003c\u003c16 | buffer[i+3] \u003c\u003c24;","            object[name] = deserializeFast(buffer, i, false );          /// isArray = false =\u003e Object","            i += size;      break;","        case 5:     /// = BSON.BSON_DATA_BINARY:             // Decode the size of the binary blob","            size = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;","            buffer[i++];             /// Skip, as we assume always default subtype, i.e. 0!","            object[name] = buffer.slice(i, i += size);  /// creates a new Buffer \"slice\" view of the same memory!","            break;","        case 9:     /// = BSON.BSON_DATA_DATE:      /// SEE notes below on the Date type vs. other options...","            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;","        case 18:    /// = BSON.BSON_DATA_LONG:  /// usage should be somewhat rare beyond parseResponse() -\u003e cursorId, where it is handled inline, NOT as part of deserializeFast(returnedObjects); get lowBits, highBits:","            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;","            size = high * 4294967296 + (low \u003c 0 ? low + 4294967296 : low);      /// from long.toNumber()","            if (size \u003c JS_INT_MAX \u0026\u0026 size \u003e JS_INT_MIN) object[name] = size;    /// positive # more likely!","            else object[name] = new Long(low, high);    break;","        case 127:   /// = BSON.BSON_DATA_MIN_KEY:   /// do we EVER actually get these BACK from MongoDB server?!","            object[name] = new MinKey();     break;","        case 255:   /// = BSON.BSON_DATA_MAX_KEY:","            object[name] = new MaxKey();     break;","        case 17:    /// = BSON.BSON_DATA_TIMESTAMP:   /// somewhat obscure internal BSON type; MongoDB uses it for (pseudo) high-res time timestamp (past millisecs precision is just a counter!) in the Oplog ts: field, etc.","            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;","///        case 11:    /// = RegExp is skipped; we should NEVER be getting any from the MongoDB server!?","        }   /// end of switch(elementType)","    }   /// end of while(1)","    return object;  // Return the finalized object","}","function MinKey() { this._bsontype = 'MinKey'; }  /// these are merely placeholders/stubs to signify the type!?","","function MaxKey() { this._bsontype = 'MaxKey'; }","    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.","}","    return new Long(num % 4294967296, num / 4294967296);    /// |0 is forced in the constructor!","}","    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.","}","///////////////////////////////  ObjectID /////////////////////////////////","/// machine \u0026 proc IDs stored as 1 string, b/c Buffer shouldn't be held for long periods (could use SlowBuffer?!)","","var MACHINE = parseInt(Math.random() * 0xFFFFFF, 10);","var MACHINE_AND_PROC = encodeIntBE(MACHINE, 3) + encodeIntBE(PROCESS, 2); /// keep as ONE string, ready to go.","","function encodeIntBE(data, bytes){  /// encode the bytes to a string","    var result = '';","var _counter = ~~(Math.random() * 0xFFFFFF);    /// double-tilde is equivalent to Math.floor()","var checkForHex = new RegExp('^[0-9a-fA-F]{24}$');","    if (!id){  this.id = createFromScratch();     /// base case, DONE.","    } else {","            this.id = id;  /// case of","        } else if (id.constructor === String) {","                this.id = new Error('Illegal/faulty Hexadecimal string supplied!');     /// changed from 'throw'","            }","            this.id = createFromTime(id);    /// this is what should be the only interface for this!?","        }","    var ts = ~~(Date.now()/1000);    /// 4 bytes timestamp in seconds, BigEndian notation!","    buf[i++] = (ts \u003e\u003e 24) \u0026 0xFF;    buf[i++] = (ts \u003e\u003e 16) \u0026 0xFF;","    buf.write(MACHINE_AND_PROC, i, 5, 'utf8');  i += 5;  /// write 3 bytes + 2 bytes MACHINE_ID and PROCESS_ID","    _counter = ++_counter % 0xFFFFFF;       /// 3 bytes internal _counter for subsecond resolution; BigEndian","    buf[i++] = (_counter \u003e\u003e 16) \u0026 0xFF;","    ts || ( ts = ~~(Date.now()/1000) );     /// 4 bytes timestamp in seconds only","    var buf = new Buffer(12), i = 0;","    for (;i \u003c 12; ++i) buf[i] = 0x00;       /// indeces 4 through 11 (8 bytes) get filled up with nulls","    return buf;","ObjectID.createPk = function createPk () {  ///?override if a PrivateKey factory w/ unique factors is warranted?!","  return new ObjectID();","/// module.exports.BSON = BSON;         /// not needed anymore!? exports.Binary = Binary;","module.exports.ObjectID = ObjectID;","module.exports.Long = Long;    /// ?! we really don't want to do the complicated Long math anywhere for now!?","","//module.exports.Double = Double;","//module.exports.Timestamp = Timestamp;",""],"Functions":["function calculateObjectSize(object) ","function calculateElement(name, value) ","module.exports.serialize = function(object, checkKeys, asBuffer, serializeFunctions, index) ","function serializeFast(object, checkKeys, buffer, i)    /// set checkKeys = false in query(..., options object to save performance IFF you're certain your keys are safe/system-set!","function packElement(name, value, checkKeys, buffer, i)     /// serializeFunctions removed! checkKeys needed for Array \u0026 Object cases pass through (calling serializeFast recursively!)","function deserializeFast(buffer, i, isArray)   //// , options, isArray) {       //// no more options!","function MinKey()  this._bsontype = 'MinKey'; }  /// these are merely placeholders/stubs to signify the type!?","function MaxKey()  this._bsontype = 'MaxKey'; }","function Long(low, high) ","Long.prototype.getLowBits = function() return this.low_; }","Long.prototype.getHighBits = function() return this.high_; }","Long.prototype.toNumber = function()","Long.fromNumber = function(num)","function Double(value) ","function Timestamp(low, high) ","Timestamp.prototype.getLowBits = function() return this.low_; }","Timestamp.prototype.getHighBits = function() return this.high_; }","function encodeIntBE(data, bytes)  /// encode the bytes to a string","function ObjectID(id) ","function createFromScratch() ","function createFromTime(ts) ","ObjectID.prototype.toHexString = function toHexString() ","ObjectID.prototype.getTimestamp = function getTimestamp() ","ObjectID.prototype.getTimestampDate = function getTimestampDate() ","ObjectID.createPk = function createPk ()   ///?override if a PrivateKey factory w/ unique factors is warranted?!","ObjectID.prototype.toJSON = function toJSON() "],"Dependencies":null},{"FileName":"node_modules\\bson\\browser_build\\bson.js","LineCount":4844,"CharCount":151658,"Comments":["function pkg(/* [ parentId ...], wrapper */){","  var wrapper = arguments[ arguments.length - 1 ],","  /**"," * Module dependencies."," */","if(typeof window === 'undefined') { ","  var Buffer = require('buffer').Buffer; // TODO just use global Buffer","}","// Binary default subtype","var BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * @ignore"," * @api private"," */","var writeStringToArray = function(data) {","  // Create a buffer","  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);","  // Write the content to the buffer","  for(var i = 0; i \u003c data.length; i++) {","  // Write the string to the buffer","  return buffer;","/**"," * Convert Array ot Uint8Array to Binary String"," *"," * @ignore"," * @api private"," */","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {","/**"," * A class representation of the BSON Binary type."," * "," * Sub types"," *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type."," *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type."," *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type."," *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type."," *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type."," *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type."," *"," * @class Represents the Binary BSON type."," * @param {Buffer} buffer a buffer object containing the binary data."," * @param {Number} [subType] the option binary type."," * @return {Grid}"," */","function Binary(buffer, subType) {","    // Only accept Buffer, Uint8Array or Arrays","    if(typeof buffer == 'string') {","      // Different ways of writing the length of the string for the different types","      if(typeof Buffer != 'undefined') {","    // Set position to start of buffer","    this.position = 0;","/**"," * Updates this binary with byte_value."," *"," * @param {Character} byte_value a single byte we wish to write."," * @api public"," */","Binary.prototype.put = function put(byte_value) {","  // If it's a string and a has more than one character throw an error","  if(byte_value['length'] != null \u0026\u0026 typeof byte_value != 'number' \u0026\u0026 byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");","  // Decode the byte value once","  var decoded_byte = null;","      // Create additional overflow buffer","      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);","      // Combine the two buffers together","      this.buffer.copy(buffer, 0, 0, this.buffer.length);","      // Create a new buffer (typed or normal array)","      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {","      // We need to copy all the content to the new array","      for(var i = 0; i \u003c this.buffer.length; i++) {","      // Reassign the buffer","      this.buffer = buffer;","      // Write the byte","      this.buffer[this.position++] = decoded_byte;","/**"," * Writes a buffer or string to the binary."," *"," * @param {Buffer|String} string a string or buffer to be written to the Binary BSON object."," * @param {Number} offset specify the binary of where to write the content."," * @api public"," */","Binary.prototype.write = function write(string, offset) {","  // If the buffer is to small let's extend the buffer","  if(this.buffer.length \u003c offset + string.length) {","    // If we are in node.js","    if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) {      ","      // Create a new buffer","      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))","      // Copy the content","      for(var i = 0; i \u003c this.position; i++) {","    // Assign the new buffer","    this.buffer = buffer;","    // offset = string.length","  } else if(typeof Buffer != 'undefined' \u0026\u0026 typeof string == 'string' \u0026\u0026 Buffer.isBuffer(this.buffer)) {","    // offset = string.length;","  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]' ","/**"," * Reads **length** bytes starting at **position**."," *"," * @param {Number} position read from the given position in the Binary."," * @param {Number} length the number of bytes to read."," * @return {Buffer}"," * @api public"," */","Binary.prototype.read = function read(position, length) {","  // Let's return the data based on the type we have","  if(this.buffer['slice']) {","    // Create a buffer to keep the result","    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);","  // Return the buffer","  return buffer;","/**"," * Returns the value of this binary as a string."," *"," * @return {String}"," * @api public"," */","Binary.prototype.value = function value(asRaw) {","  // If it's a node.js buffer object","  if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) {","      // we support the slice command use it","      if(this.buffer['slice'] != null) {","        // Create a new buffer to copy content to","        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);","        // Copy content","        for(var i = 0; i \u003c this.position; i++) {","        // Return the buffer","        return newBuffer;","/**"," * Length."," *"," * @return {Number} the length of the binary."," * @api public"," */","Binary.prototype.length = function length() {","/**"," * @ignore"," * @api private"," */","Binary.prototype.toJSON = function() {","/**"," * @ignore"," * @api private"," */","Binary.prototype.toString = function(format) {","/**"," * Default BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_DEFAULT = 0;","/**"," * Function BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_FUNCTION = 1;","/**"," * Byte Array BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_BYTE_ARRAY = 2;","/**"," * OLD UUID BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID_OLD = 3;","/**"," * UUID BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID = 4;","/**"," * MD5 BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_MD5 = 5;","/**"," * User BSON type"," *  "," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_USER_DEFINED = 128;","/**"," * Expose."," */","exports.Binary = Binary;","  /**"," * Binary Parser."," * Jonas Raoni Soares Silva"," * http://jsfromhell.com/classes/binary-parser [v1.0]"," */","var chr = String.fromCharCode;","      , max = maxBits[bits]; //max = Math.pow( 2, bits );","  ","// Factor out the encode so it can be shared by add_header and push_int32","BinaryParser.encode_int32 = function encode_int32 (number, asArray) {","/**"," * UTF8 methods"," */","","// Take a raw binary string and return a utf8 string","// Take a raw binary string and return a utf8 string","BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) {","// Encode a cstring","BinaryParser.encode_cstring = function encode_cstring (s) {","// Take a utf8 string and return a binary string","BinaryParser.encode_utf8 = function encode_utf8 (s) {","/**"," * BinaryParser buffer constructor."," */","function BinaryParserBuffer (bigEndian, buffer) {","\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)","","\tfunction shl (a, b) {","/**"," * Expose."," */","BinaryParser.Buffer = BinaryParserBuffer;","// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","/**"," * Create a new BSON instance"," *"," * @class Represents the BSON Parser"," * @return {BSON} instance of BSON Parser."," */","function BSON () {};","/**"," * @ignore"," * @api private"," */","// BSON MAX VALUES","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","/**","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t// Calculate size","    for(var key in object) {","/**"," * @ignore"," * @api private"," */","function calculateElement(name, value, serializeFunctions) {","        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit","          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (4 + 1);","      } else {  // 64 bit","        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);","        // Calculate size depending on the availability of a scope","        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) {","        // Check what kind of subtype we have","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","        // Set up correct object for serialization","        var ordered_values = {","        // Add db reference if it exists","        if(null != value.db) {","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Number} index the index in the buffer where we wish to start serializing into."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Number} returns the new write index in the Buffer."," * @api public"," */","BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) {","  // Default setting false","  serializeFunctions = serializeFunctions == null ? false : serializeFunctions;","  // Write end information (length of the object)","  var size = buffer.length;","  // Write the size of the object","  buffer[index++] = size \u0026 0xff;","/**"," * @ignore"," * @api private"," */","var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) {","  // Process the object","  if(Array.isArray(object)) {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t// Serialize the object","    for(var key in object) {","      // Check the key and throw error if it's illegal","      if (key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') {","        // dollars and dots ok","        BSON.checkKey(key, !checkKeys);","      // Pack the element","      index = packElement(key, object[key], checkKeys, buffer, index, serializeFunctions);","  // Write zero","  buffer[index++] = 0;","    ch = str.charCodeAt(i);  // get char","    st = [];                 // set up \"stack\"","    do {","      st.push( ch \u0026 0xFF );  // push byte to stack","      ch = ch \u003e\u003e 8;          // shift value down by 1 byte","    }","    // add stack contents to result","    // done because chars have \"wrong\" endianness","    re = re.concat( st.reverse() );","  // return an array of bytes","  return re;","    ch = str.charCodeAt(i);  // get char","    st = [];                 // set up \"stack\"","    do {","      st.push( ch \u0026 0xFF );  // push byte to stack","      ch = ch \u003e\u003e 8;          // shift value down by 1 byte","    }","    // add stack contents to result","    // done because chars have \"wrong\" endianness","    re = re + st.length;","  // return an array of bytes","  return re;","/**"," * @ignore"," * @api private"," */","var writeToTypedArray = function(buffer, string, index) {","/**"," * @ignore"," * @api private"," */","var supportsBuffer = typeof Buffer != 'undefined';","/**"," * @ignore"," * @api private"," */","var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) {","      // Encode String type","      buffer[index++] = BSON.BSON_DATA_STRING;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Calculate size","      var size = supportsBuffer ? Buffer.byteLength(value) + 1 : numberOfBytes(value) + 1;","      // Write the size of the string to buffer","      buffer[index + 3] = (size \u003e\u003e 24) \u0026 0xff;","      // Ajust the index","      index = index + 4;","      // Write the string","      supportsBuffer ? buffer.write(value, index, 'utf8') : writeToTypedArray(buffer, value, index);","      // Update index","      index = index + size - 1;","      // Write zero","      buffer[index++] = 0;","      // Return index","      return index;","      // We have an integer value","      if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) {","        // If the value fits in 32 bits encode as int, if it fits in a double","        // encode it as a double, otherwise long","        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) {","          // Set int type 32 bits or less","          buffer[index++] = BSON.BSON_DATA_INT;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Write the int value","          buffer[index++] = value \u0026 0xff;","          // Encode as double","          buffer[index++] = BSON.BSON_DATA_NUMBER;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Write float","          writeIEEE754(buffer, value, index, 'little', 52, 8);","          // Ajust index","          index = index + 8;","          // Set long type","          buffer[index++] = BSON.BSON_DATA_LONG;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Encode low bits","          buffer[index++] = lowBits \u0026 0xff;","          // Encode high bits","          buffer[index++] = highBits \u0026 0xff;","        // Encode as double","        buffer[index++] = BSON.BSON_DATA_NUMBER;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write float","        writeIEEE754(buffer, value, index, 'little', 52, 8);","        // Ajust index","        index = index + 8;","      // Set long type","      buffer[index++] = BSON.BSON_DATA_NULL;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Write the type","      buffer[index++] = BSON.BSON_DATA_BOOLEAN;","      // Number of written bytes","      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","      // Encode the name","      index = index + numberOfWrittenBytes + 1;","      // Encode the boolean value","      buffer[index++] = value ? 1 : 0;","        // Write the type of either min or max key","        if(value === null) {","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_OID;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write objectid","        supportsBuffer ? buffer.write(value.id, index, 'binary') : writeToTypedArray(buffer, value.id, index);","        // Ajust index","        index = index + 12;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_DATE;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the date","        var dateInMilis = Long.fromNumber(value.getTime());","        // Encode low bits","        buffer[index++] = lowBits \u0026 0xff;","        // Encode high bits","        buffer[index++] = highBits \u0026 0xff;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_BINARY;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Get size of the buffer (current write point)","        var size = value.length;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the default subtype","        buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;","        // Copy the content form the binary field to the buffer","        value.copy(buffer, index, 0, size);","        // Adjust the index","        index = index + size;","        // Write the type","        buffer[index++] = value instanceof Long ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the date","        var lowBits = value.getLowBits();","        // Encode low bits","        buffer[index++] = lowBits \u0026 0xff;","        // Encode high bits","        buffer[index++] = highBits \u0026 0xff;","        // Encode as double","        buffer[index++] = BSON.BSON_DATA_NUMBER;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write float","        writeIEEE754(buffer, value, index, 'little', 52, 8);","        // Ajust index","        index = index + 8;","          // Write the type","          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Calculate the scope size","          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);","          // Function string","          var functionString = value.code.toString();","          // Function Size","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Calculate full size of the object","          var totalSize = 4 + codeSize + scopeSize + 4;","          // Write the total size of the object","          buffer[index++] = totalSize \u0026 0xff;","          // Write the size of the string to buffer","          buffer[index++] = codeSize \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + codeSize - 1;","          // Write zero","          buffer[index++] = 0;","          // Serialize the scope object","          var scopeObjectBuffer = supportsBuffer ? new Buffer(scopeSize) : new Uint8Array(new ArrayBuffer(scopeSize));","          // Execute the serialization into a seperate buffer","          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);","          // Adjusted scope Size (removing the header)","          var scopeDocSize = scopeSize;","          // Write scope object size","          buffer[index++] = scopeDocSize \u0026 0xff;","          // Write the scopeObject into the buffer","          supportsBuffer ? scopeObjectBuffer.copy(buffer, index, 0, scopeSize) : buffer.set(scopeObjectBuffer, index);","          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)","          index = index + scopeDocSize - 5;","          // Write trailing zero","          buffer[index++] = 0;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Function string","          var functionString = value.code.toString();","          // Function Size","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Write the size of the string to buffer","          buffer[index++] = size \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + size - 1;","          // Write zero","          buffer[index++] = 0;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_BINARY;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Extract the buffer","        var data = value.value(true);","        // Calculate size","        var size = value.position;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the subtype to the buffer","        buffer[index++] = value.sub_type;","        // If we have binary type 2 the 4 first bytes are the size","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","        // Write the data to the object","        supportsBuffer ? data.copy(buffer, index, 0, value.position) : buffer.set(data, index);","        // Ajust index","        index = index + value.position;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_SYMBOL;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Calculate size","        var size = supportsBuffer ? Buffer.byteLength(value.value) + 1 : numberOfBytes(value.value) + 1;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write the string","        buffer.write(value.value, index, 'utf8');","        // Update index","        index = index + size - 1;","        // Write zero","        buffer[index++] = 0x00;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_OBJECT;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Set up correct object for serialization","        var ordered_values = {","        // Add db reference if it exists","        if(null != value.db) {","        // Message size","        var size = BSON.calculateObjectSize(ordered_values, serializeFunctions);","        // Serialize the object","        var endIndex = BSON.serializeWithBufferAndIndex(ordered_values, checkKeys, buffer, index, serializeFunctions);","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","        // Write zero for object","        buffer[endIndex++] = 0x00;","        // Return the end index","        return endIndex;","        // Write the type","        buffer[index++] = BSON.BSON_DATA_REGEXP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the regular expression string","        supportsBuffer ? buffer.write(value.source, index, 'utf8') : writeToTypedArray(buffer, value.source, index);","        // Adjust the index","        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));","        // Write zero","        buffer[index++] = 0x00;","        // Write the parameters","        if(value.global) buffer[index++] = 0x73; // s","        if(value.ignoreCase) buffer[index++] = 0x69; // i","        if(value.multiline) buffer[index++] = 0x6d; // m","        // Add ending zero","        buffer[index++] = 0x00;","        // Write the type","        buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Adjust the index","        index = index + numberOfWrittenBytes + 1;","        // Write size","        var size = endIndex - index;","        // Write the size of the string to buffer","        buffer[index++] = size \u0026 0xff;","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","        // Write the type","        buffer[index++] = BSON.BSON_DATA_REGEXP;","        // Number of written bytes","        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","        // Encode the name","        index = index + numberOfWrittenBytes + 1;","        // Write the regular expression string","        buffer.write(value.source, index, 'utf8');","        // Adjust the index","        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));","        // Write zero","        buffer[index++] = 0x00;","        // Write the parameters","        if(value.global) buffer[index++] = 0x73; // s","        if(value.ignoreCase) buffer[index++] = 0x69; // i","        if(value.multiline) buffer[index++] = 0x6d; // m","        // Add ending zero","        buffer[index++] = 0x00;","          // Write the type","          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Calculate the scope size","          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);","          // Function string","          var functionString = value.toString();","          // Function Size","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Calculate full size of the object","          var totalSize = 4 + codeSize + scopeSize;","          // Write the total size of the object","          buffer[index++] = totalSize \u0026 0xff;","          // Write the size of the string to buffer","          buffer[index++] = codeSize \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + codeSize - 1;","          // Write zero","          buffer[index++] = 0;","          // Serialize the scope object","          var scopeObjectBuffer = new Buffer(scopeSize);","          // Execute the serialization into a seperate buffer","          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);","          // Adjusted scope Size (removing the header)","          var scopeDocSize = scopeSize - 4;","          // Write scope object size","          buffer[index++] = scopeDocSize \u0026 0xff;","          // Write the scopeObject into the buffer","          scopeObjectBuffer.copy(buffer, index, 0, scopeSize);","          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)","          index = index + scopeDocSize - 5;","          // Write trailing zero","          buffer[index++] = 0;","          // Number of written bytes","          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);","          // Encode the name","          index = index + numberOfWrittenBytes + 1;","          // Function string","          var functionString = value.toString();","          // Function Size","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          // Write the size of the string to buffer","          buffer[index++] = size \u0026 0xff;","          // Write the string","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          // Update index","          index = index + size - 1;","          // Write zero","          buffer[index++] = 0;","  // If no value to serialize","  return index;","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {","  // Throw error if we are trying serialize an illegal type","  if(object == null || typeof object != 'object' || Array.isArray(object)) ","  // Emoty target buffer","  var buffer = null;","  // Calculate the size of the object","  var size = BSON.calculateObjectSize(object, serializeFunctions);","  // Fetch the best available type for storing the binary data","  if(buffer = typeof Buffer != 'undefined') {","  // If asBuffer is false use typed arrays","  BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, 0, serializeFunctions);","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Crc state variables shared by function"," *"," * @ignore"," * @api private"," */","var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];","/**"," * CRC32 hash method, Fast and enough versitility for our usage"," *"," * @ignore"," * @api private"," */","var crc32 =  function(string, start, end) {","/**"," * Deserialize stream data as BSON documents."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");","  options = options != null ? options : {};","  // Loop over all documents","  for(var i = 0; i \u003c numberOfDocuments; i++) {","    // Find size of the document","    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;","    // Update options with index","    options['index'] = index;","    // Parse the document at this point","    documents[docStartIndex + i] = BSON.deserialize(data, options);","    // Adjust index by the document size","    index = index + size;","  // Return object containing end index of parsing and list of documents","  return index;","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEvalWithHash = function(functionCache, hash, functionString, object) {","  // Contains the value we are going to set","  var value = null;","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) {","  // Set the object","  return functionCache[hash].bind(object);","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEval = function(functionString) {","  // Contains the value we are going to set","  var value = null;","  // Eval the function","  eval(\"value = \" + functionString);","/**"," * Convert Uint8Array to String"," *"," * @ignore"," * @api private"," */","var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) {","/**"," * Deserialize data as BSON."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Boolean} [isArray] ignore used for recursive parsing."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.deserialize = function(buffer, options, isArray) {","  // Options","  options = options == null ? {} : options;","  // Validate that we have at least 4 bytes of buffer","  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");","  // Set up index","  var index = typeof options['index'] == 'number' ? options['index'] : 0;","  // Reads in a C style string","  var readCStyleString = function() {","    // Get the start search index","    var i = index;","    // Locate the end of the c string","    while(buffer[i] !== 0x00) { i++ }","    // Grab utf8 encoded string","    var string = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, i) : convertUint8ArrayToUtf8String(buffer, index, i);","    // Update index position","    index = i + 1;","    // Return string","    return string;","  // Create holding object","  var object = isArray ? [] : {};","  // Read the document size","  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","  // Ensure buffer is valid size","  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");","  // While we have more left data left keep parsing","  while(true) {","    // Read the type","    var elementType = buffer[index++];","    // If we get a zero it's the last byte, exit","    if(elementType == 0) break;","    // Read the name of the field","    var name = readCStyleString();","    // Switch on the type","    switch(elementType) {","        // Decode the oid","        object[name] = new ObjectID(string);","        // Update index","        index = index + 12;","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Add string to object","        object[name] = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // Update parse index position","        index = index + stringSize;","        // Decode the 32bit value","        object[name] = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Decode the double value","        object[name] = readIEEE754(buffer, index, 'little', 52, 8);","        // Update the index","        index = index + 8;","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Set date object","        object[name] = new Date(new Long(lowBits, highBits).toNumber());","        // Parse the boolean value","        object[name] = buffer[index++] == 1;","        // Parse the boolean value","        object[name] = null;","        // Decode the size of the binary blob","        var binarySize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Decode the subtype","        var subType = buffer[index++];","        // Decode as raw Buffer object if options specifies it","        if(buffer['slice'] != null) {","          // If we have subtype 2 skip the 4 bytes for the size","          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          // Slice the data","          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);","          // If we have subtype 2 skip the 4 bytes for the size","          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          // Copy the data","          for(var i = 0; i \u003c binarySize; i++) {","          // Create the binary object","          object[name] = new Binary(_buffer, subType);","        // Update the index","        index = index + binarySize;","        // Decode the size of the array document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Set the array to the object","        object[name] = BSON.deserialize(buffer, options, true);","        // Adjust the index","        index = index + objectSize;","        // Decode the size of the object document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Set the array to the object","        object[name] = BSON.deserialize(buffer, options, false);","        // Adjust the index","        index = index + objectSize;","        // Create the regexp","        var source = readCStyleString();","        // For each option add the corresponding one for javascript","        var optionsArray = new Array(regExpOptions.length);","        // Parse options","        for(var i = 0; i \u003c regExpOptions.length; i++) {","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Create long object","        var long = new Long(lowBits, highBits); ","        // Promote the long if possible","        if(promoteLongs) {","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Add string to object","        object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));","        // Update parse index position","        index = index + stringSize;","        // Unpack the low and high bits","        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Set the object","        object[name] = new Timestamp(lowBits, highBits);","        // Parse the object","        object[name] = new MinKey();","        // Parse the object","        object[name] = new MaxKey();","        // Read the content of the field","        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Function string","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","        if(evalFunctions) {","          // Contains the value we are going to set","          var value = null;","          // If we have cache enabled let's look for the md5 of the function in the cache","          if(cacheFunctions) {","            // Got to do this to avoid V8 deoptimizing the call due to finding eval","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            // Set directly","            object[name] = isolateEval(functionString);","        // Update parse index position","        index = index + stringSize;","        // Read the content of the field","        var totalSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","        // Javascript function","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // Update parse index position","        index = index + stringSize;","        // Parse the element","        options['index'] = index;","        // Decode the size of the object document","        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","        // Decode the scope object","        var scopeObject = BSON.deserialize(buffer, options, false);","        // Adjust the index","        index = index + objectSize;","        // If we are evaluating the functions","        if(evalFunctions) {","          // Contains the value we are going to set","          var value = null;","          // If we have cache enabled let's look for the md5 of the function in the cache","          if(cacheFunctions) {","            // Got to do this to avoid V8 deoptimizing the call due to finding eval","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            // Set directly","            object[name] = isolateEval(functionString);","          // Set the scope on the object","          object[name].scope = scopeObject;","        // Add string to object","        break;","  // Check if we have a db ref object","  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);","  // Return the final objects","  return object;","/**"," * Check if key name is valid."," *"," * @ignore"," * @api private"," */","BSON.checkKey = function checkKey (key, dollarsAndDotsOk) {","  // Check if we have a legal key for the object","  if (!!~key.indexOf(\"\\x00\")) {","    // The BSON spec doesn't allow keys with null bytes because keys are","    // null-terminated.","    throw Error(\"key \" + key + \" must not contain null bytes\");","/**"," * Deserialize data as BSON."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Boolean} [isArray] ignore used for recursive parsing."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.prototype.deserialize = function(data, options) {","/**"," * Deserialize stream data as BSON documents."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.prototype.calculateObjectSize = function(object, serializeFunctions) {","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Number} index the index in the buffer where we wish to start serializing into."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Number} returns the new write index in the Buffer."," * @api public"," */","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) {","/**"," * @ignore"," * @api private"," */","exports.Code = Code;","  /**"," * A class representation of the BSON Code type."," *"," * @class Represents the BSON Code type."," * @param {String|Function} code a string or function."," * @param {Object} [scope] an optional scope for the function."," * @return {Code}"," */","function Code(code, scope) {","/**"," * @ignore"," * @api private"," */","Code.prototype.toJSON = function() {","  /**"," * A class representation of the BSON DBRef type."," *"," * @class Represents the BSON DBRef type."," * @param {String} namespace the collection name."," * @param {ObjectID} oid the reference ObjectID."," * @param {String} [db] optional db name, if omitted the reference is local to the current db."," * @return {DBRef}"," */","function DBRef(namespace, oid, db) {","/**"," * @ignore"," * @api private"," */","DBRef.prototype.toJSON = function() {","  /**"," * A class representation of the BSON Double type."," *"," * @class Represents the BSON Double type."," * @param {Number} value the number we want to represent as a double."," * @return {Double}"," */","function Double(value) {","/**"," * Access the number value."," *"," * @return {Number} returns the wrapped double number."," * @api public"," */","Double.prototype.valueOf = function() {","/**"," * @ignore"," * @api private"," */","Double.prototype.toJSON = function() {","  // Copyright (c) 2008, Fair Oaks Labs, Inc.","// All rights reserved.","// ","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions are met:","// ","//  * Redistributions of source code must retain the above copyright notice,","//    this list of conditions and the following disclaimer.","// ","//  * Redistributions in binary form must reproduce the above copyright notice,","//    this list of conditions and the following disclaimer in the documentation","//    and/or other materials provided with the distribution.","// ","//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors","//    may be used to endorse or promote products derived from this software","//    without specific prior written permission.","// ","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"","// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE","// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE","// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR","// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF","// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS","// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN","// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)","// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE","// POSSIBILITY OF SUCH DAMAGE.","//","//","// Modifications to writeIEEE754 to support negative zeroes made by Brian White","","var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {","  // do nothing","}","// Exports all the classes for the NATIVE JS BSON Parser","exports.native = function() {","  // Map all the classes","  [ './binary_parser'","  // Return classes list","  return classes;","// Exports all the classes for the PURE JS BSON Parser","exports.pure = function() {","  // Map all the classes","  [ './binary_parser'","  // Return classes list","  return classes;","  // Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**","/**"," * Defines a Long class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Long\". This"," * implementation is derived from LongLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Longs."," *"," * The internal representation of a Long is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class Represents the BSON Long type."," * @param {Number} low  the low (signed) 32 bits of the Long."," * @param {Number} high the high (signed) 32 bits of the Long."," */","function Long(low, high) {","  /**","   * @type {number}","   * @api private","   */","  this.low_ = low | 0;  // force into 32 signed bits.","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","  /**","   * @type {number}","   * @api private","   */","  this.high_ = high | 0;  // force into 32 signed bits.","  this.high_ = high | 0;  // force into 32 signed bits.","};","/**"," * Return the int value."," *"," * @return {Number} the value, assuming it is a 32-bit integer."," * @api public"," */","Long.prototype.toInt = function() {","/**"," * Return the Number value."," *"," * @return {Number} the closest floating-point representation to this value."," * @api public"," */","Long.prototype.toNumber = function() {","/**"," * Return the JSON value."," *"," * @return {String} the JSON representation."," * @api public"," */","Long.prototype.toJSON = function() {","/**"," * Return the String value."," *"," * @param {Number} [opt_radix] the radix in which the text should be written."," * @return {String} the textual representation of this value."," * @api public"," */","Long.prototype.toString = function(opt_radix) {","      // We need to change the Long value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixLong = Long.fromNumber(radix);","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 6));","/**"," * Return the high 32-bits value."," *"," * @return {Number} the high 32-bits as a signed value."," * @api public"," */","Long.prototype.getHighBits = function() {","/**"," * Return the low 32-bits value."," *"," * @return {Number} the low 32-bits as a signed value."," * @api public"," */","Long.prototype.getLowBits = function() {","/**"," * Return the low unsigned 32-bits value."," *"," * @return {Number} the low 32-bits as an unsigned value."," * @api public"," */","Long.prototype.getLowBitsUnsigned = function() {","/**"," * Returns the number of bits needed to represent the absolute value of this Long."," *"," * @return {Number} Returns the number of bits needed to represent the absolute value of this Long."," * @api public"," */","Long.prototype.getNumBitsAbs = function() {","/**"," * Return whether this value is zero."," *"," * @return {Boolean} whether this value is zero."," * @api public"," */","Long.prototype.isZero = function() {","/**"," * Return whether this value is negative."," *"," * @return {Boolean} whether this value is negative."," * @api public"," */","Long.prototype.isNegative = function() {","/**"," * Return whether this value is odd."," *"," * @return {Boolean} whether this value is odd."," * @api public"," */","Long.prototype.isOdd = function() {","/**"," * Return whether this Long equals the other"," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long equals the other"," * @api public"," */","Long.prototype.equals = function(other) {","/**"," * Return whether this Long does not equal the other."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long does not equal the other."," * @api public"," */","Long.prototype.notEquals = function(other) {","/**"," * Return whether this Long is less than the other."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long is less than the other."," * @api public"," */","Long.prototype.lessThan = function(other) {","/**"," * Return whether this Long is less than or equal to the other."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long is less than or equal to the other."," * @api public"," */","Long.prototype.lessThanOrEqual = function(other) {","/**"," * Return whether this Long is greater than the other."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long is greater than the other."," * @api public"," */","Long.prototype.greaterThan = function(other) {","/**"," * Return whether this Long is greater than or equal to the other."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} whether this Long is greater than or equal to the other."," * @api public"," */","Long.prototype.greaterThanOrEqual = function(other) {","/**"," * Compares this Long with the given one."," *"," * @param {Long} other Long to compare against."," * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," * @api public"," */","Long.prototype.compare = function(other) {","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","/**"," * The negation of this value."," *"," * @return {Long} the negation of this value."," * @api public"," */","Long.prototype.negate = function() {","/**"," * Returns the sum of this and the given Long."," *"," * @param {Long} other Long to add to this one."," * @return {Long} the sum of this and the given Long."," * @api public"," */","Long.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns the difference of this and the given Long."," *"," * @param {Long} other Long to subtract from this."," * @return {Long} the difference of this and the given Long."," * @api public"," */","Long.prototype.subtract = function(other) {","/**"," * Returns the product of this and the given Long."," *"," * @param {Long} other Long to multiply with this."," * @return {Long} the product of this and the other."," * @api public"," */","Long.prototype.multiply = function(other) {","  // If both Longs are small, use float multiplication","  if (this.lessThan(Long.TWO_PWR_24_) \u0026\u0026","  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns this Long divided by the given one."," *"," * @param {Long} other Long by which to divide."," * @return {Long} this Long divided by the given one."," * @api public"," */","Long.prototype.div = function(other) {","      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Long.MIN_VALUE)) {","      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Long.ZERO;","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Long.fromNumber(approx);","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","/**"," * Returns this Long modulo the given one."," *"," * @param {Long} other Long by which to mod."," * @return {Long} this Long modulo the given one."," * @api public"," */","Long.prototype.modulo = function(other) {","/**"," * The bitwise-NOT of this value."," *"," * @return {Long} the bitwise-NOT of this value."," * @api public"," */","Long.prototype.not = function() {","/**"," * Returns the bitwise-AND of this Long and the given one."," *"," * @param {Long} other the Long with which to AND."," * @return {Long} the bitwise-AND of this and the other."," * @api public"," */","Long.prototype.and = function(other) {","/**"," * Returns the bitwise-OR of this Long and the given one."," *"," * @param {Long} other the Long with which to OR."," * @return {Long} the bitwise-OR of this and the other."," * @api public"," */","Long.prototype.or = function(other) {","/**"," * Returns the bitwise-XOR of this Long and the given one."," *"," * @param {Long} other the Long with which to XOR."," * @return {Long} the bitwise-XOR of this and the other."," * @api public"," */","Long.prototype.xor = function(other) {","/**"," * Returns this Long with bits shifted to the left by the given amount."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the left by the given amount."," * @api public"," */","Long.prototype.shiftLeft = function(numBits) {","/**"," * Returns this Long with bits shifted to the right by the given amount."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount."," * @api public"," */","Long.prototype.shiftRight = function(numBits) {","/**"," * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits."," * @api public"," */","Long.prototype.shiftRightUnsigned = function(numBits) {","/**"," * Returns a Long representing the given (32-bit) integer value."," *"," * @param {Number} value the 32-bit integer in question."," * @return {Long} the corresponding Long value."," * @api public"," */","Long.fromInt = function(value) {","/**"," * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @param {Number} value the number in question."," * @return {Long} the corresponding Long value."," * @api public"," */","Long.fromNumber = function(value) {","/**"," * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @param {Number} lowBits the low 32-bits."," * @param {Number} highBits the high 32-bits."," * @return {Long} the corresponding Long value."," * @api public"," */","Long.fromBits = function(lowBits, highBits) {","/**"," * Returns a Long representation of the given string, written using the given radix."," *"," * @param {String} str the textual representation of the Long."," * @param {Number} opt_radix the radix in which the text is written."," * @return {Long} the corresponding Long value."," * @api public"," */","Long.fromString = function(str, opt_radix) {","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 8));","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**","/**"," * A cache of the Long representations of small integer values."," * @type {Object}"," * @api private"," */","Long.INT_CACHE_ = {};","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @api private"," */","Long.TWO_PWR_16_DBL_ = 1 \u003c\u003c 16;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_24_DBL_ = 1 \u003c\u003c 24;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;","/**"," * @type {number}"," * @api private"," */","Long.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;","/** @type {Long} */","Long.ZERO = Long.fromInt(0);","/** @type {Long} */","Long.ONE = Long.fromInt(1);","/** @type {Long} */","Long.NEG_ONE = Long.fromInt(-1);","/** @type {Long} */","Long.MAX_VALUE =","/** @type {Long} */","Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);","/**"," * @type {Long}"," * @api private"," */","Long.TWO_PWR_24_ = Long.fromInt(1 \u003c\u003c 24);","/**"," * Expose."," */","exports.Long = Long;","  /**"," * A class representation of the BSON MaxKey type."," *"," * @class Represents the BSON MaxKey type."," * @return {MaxKey}"," */","function MaxKey() {","  /**"," * A class representation of the BSON MinKey type."," *"," * @class Represents the BSON MinKey type."," * @return {MinKey}"," */","function MinKey() {","  /**"," * Module dependencies."," */","var BinaryParser = require('./binary_parser').BinaryParser;","/**"," * Machine id."," *"," * Create a random 3-byte value (i.e. unique for this"," * process). Other drivers use a md5 of the machine id here, but"," * that would mean an asyc call to gethostname, so we don't bother."," */","var MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);","// Regular expression that checks for hex value","var checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");","/**","* Create a new ObjectID instance","*","* @class Represents the BSON ObjectID type","* @param {String|Number} id Can be a 24 byte hex string, 12 byte binary string or a Number.","* @return {Object} instance of ObjectID.","*/","var ObjectID = function ObjectID(id, _hex) {","  // Throw an error if it's not a valid setup","  if(id != null \u0026\u0026 'number' != typeof id \u0026\u0026 (id.length != 12 \u0026\u0026 id.length != 24))","  // Generate id based on the input","  if(id == null || typeof id == 'number') {","    // convert to 12 byte binary string","    this.id = this.generate(id);","    // assume 12 byte string","    this.id = id;","// Allow usage of ObjectId as well as ObjectID","var ObjectId = ObjectID;","// Precomputed hex table enables speedy hex string conversion","var hexTable = [];","/**","* Return the ObjectID id as a 24 byte hex string representation","*","* @return {String} return the 24 byte hex string representation.","* @api public","*/","ObjectID.prototype.toHexString = function() {","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @return {Number} returns next index value.","* @api private","*/","ObjectID.prototype.get_inc = function() {","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @return {Number} returns next index value.","* @api private","*/","ObjectID.prototype.getInc = function() {","/**","* Generate a 12 byte id string used in ObjectID's","*","* @param {Number} [time] optional parameter allowing to pass in a second based timestamp.","* @return {String} return the 12 byte id binary string.","* @api private","*/","ObjectID.prototype.generate = function(time) {","    /* for time-based ObjectID the bytes following the time will be zeroed */","    var machine3Bytes = BinaryParser.encodeInt(MACHINE_ID, 24, false);","/**","* Converts the id into a 24 byte hex string for printing","*","* @return {String} return the 24 byte hex string representation.","* @api private","*/","ObjectID.prototype.toString = function() {","/**","* Converts to a string representation of this Id.","*","* @return {String} return the 24 byte hex string representation.","* @api private","*/","ObjectID.prototype.inspect = ObjectID.prototype.toString;","/**","* Converts to its JSON representation.","*","* @return {String} return the 24 byte hex string representation.","* @api private","*/","ObjectID.prototype.toJSON = function() {","/**","* Compares the equality of this ObjectID with `otherID`.","*","* @param {Object} otherID ObjectID instance to compare against.","* @return {Bool} the result of comparing two ObjectID's","* @api public","*/","ObjectID.prototype.equals = function equals (otherID) {","/**","* Returns the generation date (accurate up to the second) that this ID was generated.","*","* @return {Date} the generation date","* @api public","*/","ObjectID.prototype.getTimestamp = function() {","/**","* @ignore","* @api private","*/","ObjectID.index = parseInt(Math.random() * 0xFFFFFF, 10);","/**","* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.","*","* @param {Number} time an integer number representing a number of seconds.","* @return {ObjectID} return the created ObjectID","* @api public","*/","ObjectID.createFromTime = function createFromTime (time) {","/**","* Creates an ObjectID from a hex string representation of an ObjectID.","*","* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.","* @return {ObjectID} return the created ObjectID","* @api public","*/","ObjectID.createFromHexString = function createFromHexString (hexString) {","  // Throw an error if it's not a valid setup","  if(typeof hexString === 'undefined' || hexString != null \u0026\u0026 hexString.length != 24)","/**","* @ignore","*/","Object.defineProperty(ObjectID.prototype, \"generationTime\", {","     // delete this.__id;","     this.toHexString();","/**"," * Expose."," */","exports.ObjectID = ObjectID;","  /**"," * A class representation of the BSON Symbol type."," *"," * @class Represents the BSON Symbol type."," * @param {String} value the string representing the symbol."," * @return {Symbol}"," */","function Symbol(value) {","/**"," * Access the wrapped string value."," *"," * @return {String} returns the wrapped string."," * @api public"," */","Symbol.prototype.valueOf = function() {","/**"," * @ignore"," * @api private"," */","Symbol.prototype.toString = function() {","/**"," * @ignore"," * @api private"," */","Symbol.prototype.inspect = function() {","/**"," * @ignore"," * @api private"," */","Symbol.prototype.toJSON = function() {","  // Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**","/**"," * Defines a Timestamp class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This"," * implementation is derived from TimestampLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Timestamps."," *"," * The internal representation of a Timestamp is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class Represents the BSON Timestamp type."," * @param {Number} low  the low (signed) 32 bits of the Timestamp."," * @param {Number} high the high (signed) 32 bits of the Timestamp."," */","function Timestamp(low, high) {","  /**","   * @type {number}","   * @api private","   */","  this.low_ = low | 0;  // force into 32 signed bits.","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","  /**","   * @type {number}","   * @api private","   */","  this.high_ = high | 0;  // force into 32 signed bits.","  this.high_ = high | 0;  // force into 32 signed bits.","};","/**"," * Return the int value."," *"," * @return {Number} the value, assuming it is a 32-bit integer."," * @api public"," */","Timestamp.prototype.toInt = function() {","/**"," * Return the Number value."," *"," * @return {Number} the closest floating-point representation to this value."," * @api public"," */","Timestamp.prototype.toNumber = function() {","/**"," * Return the JSON value."," *"," * @return {String} the JSON representation."," * @api public"," */","Timestamp.prototype.toJSON = function() {","/**"," * Return the String value."," *"," * @param {Number} [opt_radix] the radix in which the text should be written."," * @return {String} the textual representation of this value."," * @api public"," */","Timestamp.prototype.toString = function(opt_radix) {","      // We need to change the Timestamp value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixTimestamp = Timestamp.fromNumber(radix);","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));","/**"," * Return the high 32-bits value."," *"," * @return {Number} the high 32-bits as a signed value."," * @api public"," */","Timestamp.prototype.getHighBits = function() {","/**"," * Return the low 32-bits value."," *"," * @return {Number} the low 32-bits as a signed value."," * @api public"," */","Timestamp.prototype.getLowBits = function() {","/**"," * Return the low unsigned 32-bits value."," *"," * @return {Number} the low 32-bits as an unsigned value."," * @api public"," */","Timestamp.prototype.getLowBitsUnsigned = function() {","/**"," * Returns the number of bits needed to represent the absolute value of this Timestamp."," *"," * @return {Number} Returns the number of bits needed to represent the absolute value of this Timestamp."," * @api public"," */","Timestamp.prototype.getNumBitsAbs = function() {","/**"," * Return whether this value is zero."," *"," * @return {Boolean} whether this value is zero."," * @api public"," */","Timestamp.prototype.isZero = function() {","/**"," * Return whether this value is negative."," *"," * @return {Boolean} whether this value is negative."," * @api public"," */","Timestamp.prototype.isNegative = function() {","/**"," * Return whether this value is odd."," *"," * @return {Boolean} whether this value is odd."," * @api public"," */","Timestamp.prototype.isOdd = function() {","/**"," * Return whether this Timestamp equals the other"," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp equals the other"," * @api public"," */","Timestamp.prototype.equals = function(other) {","/**"," * Return whether this Timestamp does not equal the other."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp does not equal the other."," * @api public"," */","Timestamp.prototype.notEquals = function(other) {","/**"," * Return whether this Timestamp is less than the other."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp is less than the other."," * @api public"," */","Timestamp.prototype.lessThan = function(other) {","/**"," * Return whether this Timestamp is less than or equal to the other."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp is less than or equal to the other."," * @api public"," */","Timestamp.prototype.lessThanOrEqual = function(other) {","/**"," * Return whether this Timestamp is greater than the other."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp is greater than the other."," * @api public"," */","Timestamp.prototype.greaterThan = function(other) {","/**"," * Return whether this Timestamp is greater than or equal to the other."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} whether this Timestamp is greater than or equal to the other."," * @api public"," */","Timestamp.prototype.greaterThanOrEqual = function(other) {","/**"," * Compares this Timestamp with the given one."," *"," * @param {Timestamp} other Timestamp to compare against."," * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," * @api public"," */","Timestamp.prototype.compare = function(other) {","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","/**"," * The negation of this value."," *"," * @return {Timestamp} the negation of this value."," * @api public"," */","Timestamp.prototype.negate = function() {","/**"," * Returns the sum of this and the given Timestamp."," *"," * @param {Timestamp} other Timestamp to add to this one."," * @return {Timestamp} the sum of this and the given Timestamp."," * @api public"," */","Timestamp.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns the difference of this and the given Timestamp."," *"," * @param {Timestamp} other Timestamp to subtract from this."," * @return {Timestamp} the difference of this and the given Timestamp."," * @api public"," */","Timestamp.prototype.subtract = function(other) {","/**"," * Returns the product of this and the given Timestamp."," *"," * @param {Timestamp} other Timestamp to multiply with this."," * @return {Timestamp} the product of this and the other."," * @api public"," */","Timestamp.prototype.multiply = function(other) {","  // If both Timestamps are small, use float multiplication","  if (this.lessThan(Timestamp.TWO_PWR_24_) \u0026\u0026","  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns this Timestamp divided by the given one."," *"," * @param {Timestamp} other Timestamp by which to divide."," * @return {Timestamp} this Timestamp divided by the given one."," * @api public"," */","Timestamp.prototype.div = function(other) {","      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Timestamp.MIN_VALUE)) {","      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Timestamp.ZERO;","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Timestamp.fromNumber(approx);","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","/**"," * Returns this Timestamp modulo the given one."," *"," * @param {Timestamp} other Timestamp by which to mod."," * @return {Timestamp} this Timestamp modulo the given one."," * @api public"," */","Timestamp.prototype.modulo = function(other) {","/**"," * The bitwise-NOT of this value."," *"," * @return {Timestamp} the bitwise-NOT of this value."," * @api public"," */","Timestamp.prototype.not = function() {","/**"," * Returns the bitwise-AND of this Timestamp and the given one."," *"," * @param {Timestamp} other the Timestamp with which to AND."," * @return {Timestamp} the bitwise-AND of this and the other."," * @api public"," */","Timestamp.prototype.and = function(other) {","/**"," * Returns the bitwise-OR of this Timestamp and the given one."," *"," * @param {Timestamp} other the Timestamp with which to OR."," * @return {Timestamp} the bitwise-OR of this and the other."," * @api public"," */","Timestamp.prototype.or = function(other) {","/**"," * Returns the bitwise-XOR of this Timestamp and the given one."," *"," * @param {Timestamp} other the Timestamp with which to XOR."," * @return {Timestamp} the bitwise-XOR of this and the other."," * @api public"," */","Timestamp.prototype.xor = function(other) {","/**"," * Returns this Timestamp with bits shifted to the left by the given amount."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the left by the given amount."," * @api public"," */","Timestamp.prototype.shiftLeft = function(numBits) {","/**"," * Returns this Timestamp with bits shifted to the right by the given amount."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount."," * @api public"," */","Timestamp.prototype.shiftRight = function(numBits) {","/**"," * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @param {Number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits."," * @api public"," */","Timestamp.prototype.shiftRightUnsigned = function(numBits) {","/**"," * Returns a Timestamp representing the given (32-bit) integer value."," *"," * @param {Number} value the 32-bit integer in question."," * @return {Timestamp} the corresponding Timestamp value."," * @api public"," */","Timestamp.fromInt = function(value) {","/**"," * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @param {Number} value the number in question."," * @return {Timestamp} the corresponding Timestamp value."," * @api public"," */","Timestamp.fromNumber = function(value) {","/**"," * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @param {Number} lowBits the low 32-bits."," * @param {Number} highBits the high 32-bits."," * @return {Timestamp} the corresponding Timestamp value."," * @api public"," */","Timestamp.fromBits = function(lowBits, highBits) {","/**"," * Returns a Timestamp representation of the given string, written using the given radix."," *"," * @param {String} str the textual representation of the Timestamp."," * @param {Number} opt_radix the radix in which the text is written."," * @return {Timestamp} the corresponding Timestamp value."," * @api public"," */","Timestamp.fromString = function(str, opt_radix) {","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**","/**"," * A cache of the Timestamp representations of small integer values."," * @type {Object}"," * @api private"," */","Timestamp.INT_CACHE_ = {};","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_16_DBL_ = 1 \u003c\u003c 16;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_24_DBL_ = 1 \u003c\u003c 24;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;","/**"," * @type {number}"," * @api private"," */","Timestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;","/** @type {Timestamp} */","Timestamp.ZERO = Timestamp.fromInt(0);","/** @type {Timestamp} */","Timestamp.ONE = Timestamp.fromInt(1);","/** @type {Timestamp} */","Timestamp.NEG_ONE = Timestamp.fromInt(-1);","/** @type {Timestamp} */","Timestamp.MAX_VALUE =","/** @type {Timestamp} */","Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);","/**"," * @type {Timestamp}"," * @api private"," */","Timestamp.TWO_PWR_24_ = Timestamp.fromInt(1 \u003c\u003c 24);","/**"," * Expose."," */","exports.Timestamp = Timestamp;"],"Functions":["var bson = (function()","  function exports() return main(); };","  exports.require  = function require(uri)","function join() ","function normalize(path) ","function dirname(path) ","function findModule(workingModule, uri)","function newRequire(callingModule)","  function require(uri)","function module(parent, id, wrapper)","  mod.call = function()","function pkg(/* [ parentId ...], wrapper */)","  return function(modules)","bson.pkg(function(parents)","})( 'binary': function(module, exports, global, require, undefined){","var writeStringToArray = function(data) ","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) "," *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.","function Binary(buffer, subType) ","Binary.prototype.put = function put(byte_value) ","Binary.prototype.write = function write(string, offset) ","Binary.prototype.read = function read(position, length) ","Binary.prototype.value = function value(asRaw) ","Binary.prototype.length = function length() ","Binary.prototype.toJSON = function() ","Binary.prototype.toString = function(format) ","'binary_parser': function(module, exports, global, require, undefined)","function BinaryParser (bigEndian, allowExceptions) ","BinaryParser.warn = function warn (msg) ","BinaryParser.decodeFloat = function decodeFloat (data, precisionBits, exponentBits) ","BinaryParser.decodeInt = function decodeInt (data, bits, signed, forceBigEndian) ","BinaryParser.encodeFloat = function encodeFloat (data, precisionBits, exponentBits) ","BinaryParser.encodeInt = function encodeInt (data, bits, signed, forceBigEndian) ","BinaryParser.toSmall    = function( data ) return this.decodeInt( data,  8, true  ); };","BinaryParser.fromSmall  = function( data ) return this.encodeInt( data,  8, true  ); };","BinaryParser.toByte     = function( data ) return this.decodeInt( data,  8, false ); };","BinaryParser.fromByte   = function( data ) return this.encodeInt( data,  8, false ); };","BinaryParser.toShort    = function( data ) return this.decodeInt( data, 16, true  ); };","BinaryParser.fromShort  = function( data ) return this.encodeInt( data, 16, true  ); };","BinaryParser.toWord     = function( data ) return this.decodeInt( data, 16, false ); };","BinaryParser.fromWord   = function( data ) return this.encodeInt( data, 16, false ); };","BinaryParser.toInt      = function( data ) return this.decodeInt( data, 32, true  ); };","BinaryParser.fromInt    = function( data ) return this.encodeInt( data, 32, true  ); };","BinaryParser.toLong     = function( data ) return this.decodeInt( data, 64, true  ); };","BinaryParser.fromLong   = function( data ) return this.encodeInt( data, 64, true  ); };","BinaryParser.toDWord    = function( data ) return this.decodeInt( data, 32, false ); };","BinaryParser.fromDWord  = function( data ) return this.encodeInt( data, 32, false ); };","BinaryParser.toQWord    = function( data ) return this.decodeInt( data, 64, true ); };","BinaryParser.fromQWord  = function( data ) return this.encodeInt( data, 64, true ); };","BinaryParser.toFloat    = function( data ) return this.decodeFloat( data, 23, 8   ); };","BinaryParser.fromFloat  = function( data ) return this.encodeFloat( data, 23, 8   ); };","BinaryParser.toDouble   = function( data ) return this.decodeFloat( data, 52, 11  ); };","BinaryParser.fromDouble = function( data ) return this.encodeFloat( data, 52, 11  ); };","BinaryParser.encode_int32 = function encode_int32 (number, asArray) ","BinaryParser.encode_int64 = function encode_int64 (number) ","BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ","BinaryParser.encode_cstring = function encode_cstring (s) ","BinaryParser.encode_utf8 = function encode_utf8 (s) ","BinaryParser.hprint = function hprint (s) ","BinaryParser.ilprint = function hprint (s) ","BinaryParser.hlprint = function hprint (s) ","function BinaryParserBuffer (bigEndian, buffer) ","BinaryParserBuffer.prototype.setBuffer = function setBuffer (data) ","BinaryParserBuffer.prototype.hasNeededBits = function hasNeededBits (neededBits) ","BinaryParserBuffer.prototype.checkBuffer = function checkBuffer (neededBits) ","BinaryParserBuffer.prototype.readBits = function readBits (start, length) ","\tfunction shl (a, b) ","'bson': function(module, exports, global, require, undefined)","var isDate = function isDate(d) ","function BSON () };"," * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.","BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) ","function calculateElement(name, value, serializeFunctions) ","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'"," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) ","var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) ","var stringToBytes = function(str) ","var numberOfBytes = function(str) ","var writeToTypedArray = function(buffer, string, index) ","var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) ","          var functionString = value.code.toString();","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          var functionString = value.code.toString();","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","          var functionString = value.toString();","          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);","          var functionString = value.toString();","          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;","          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);"," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) "," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };"," * Crc state variables shared by function","var crc32 =  function(string, start, end) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ","var isolateEvalWithHash = function(functionCache, hash, functionString, object) ","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) ","    eval(\"value = \" + functionString);","    functionCache[hash] = value;","  return functionCache[hash].bind(object);","var isolateEval = function(functionString) ","  // Eval the function","  eval(\"value = \" + functionString);","var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) ","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.deserialize = function(buffer, options, isArray) ","  var readCStyleString = function() ","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","          // If we have cache enabled let's look for the md5 of the function in the cache","            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            object[name] = isolateEval(functionString);","          object[name]  = new Code(functionString, });","        // Javascript function","        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);","        // If we are evaluating the functions","          // If we have cache enabled let's look for the md5 of the function in the cache","            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","            object[name] = isolateEval(functionString);","          object[name]  = new Code(functionString, scopeObject);","BSON.checkKey = function checkKey (key, dollarsAndDotsOk) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserialize = function(data, options) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) "," * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.","BSON.prototype.calculateObjectSize = function(object, serializeFunctions) "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) ","'code': function(module, exports, global, require, undefined)"," * @param String|Function} code a string or function."," * @param Object} [scope] an optional scope for the function.","function Code(code, scope) ","Code.prototype.toJSON = function() ","'db_ref': function(module, exports, global, require, undefined)","function DBRef(namespace, oid, db) ","DBRef.prototype.toJSON = function() ","'double': function(module, exports, global, require, undefined)","function Double(value) ","Double.prototype.valueOf = function() ","Double.prototype.toJSON = function() ","'float_parser': function(module, exports, global, require, undefined)","var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ","var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) ","'index': function(module, exports, global, require, undefined)","  , './long'].forEach(function (path) ","exports.native = function() ","].forEach(function (path) ","exports.pure = function() ","    , '././bson'].forEach(function (path) ","'long': function(module, exports, global, require, undefined)"," * values as *signed* integers.  See the from* functions below for more","function Long(low, high) ","Long.prototype.toInt = function() ","Long.prototype.toNumber = function() ","Long.prototype.toJSON = function() ","Long.prototype.toString = function(opt_radix) ","Long.prototype.getHighBits = function() ","Long.prototype.getLowBits = function() ","Long.prototype.getLowBitsUnsigned = function() ","Long.prototype.getNumBitsAbs = function() ","Long.prototype.isZero = function() ","Long.prototype.isNegative = function() ","Long.prototype.isOdd = function() ","Long.prototype.equals = function(other) ","Long.prototype.notEquals = function(other) ","Long.prototype.lessThan = function(other) ","Long.prototype.lessThanOrEqual = function(other) ","Long.prototype.greaterThan = function(other) ","Long.prototype.greaterThanOrEqual = function(other) ","Long.prototype.compare = function(other) ","Long.prototype.negate = function() ","Long.prototype.add = function(other) ","Long.prototype.subtract = function(other) ","Long.prototype.multiply = function(other) ","Long.prototype.div = function(other) ","Long.prototype.modulo = function(other) ","Long.prototype.not = function() ","Long.prototype.and = function(other) ","Long.prototype.or = function(other) ","Long.prototype.xor = function(other) ","Long.prototype.shiftLeft = function(numBits) ","Long.prototype.shiftRight = function(numBits) ","Long.prototype.shiftRightUnsigned = function(numBits) ","Long.fromInt = function(value) ","Long.fromNumber = function(value) ","Long.fromBits = function(lowBits, highBits) ","Long.fromString = function(str, opt_radix) "," * first call to any from* function below.","'max_key': function(module, exports, global, require, undefined)","function MaxKey() ","'min_key': function(module, exports, global, require, undefined)","function MinKey() ","'objectid': function(module, exports, global, require, undefined)","var ObjectID = function ObjectID(id, _hex) ","ObjectID.prototype.toHexString = function() ","ObjectID.prototype.get_inc = function() ","ObjectID.prototype.getInc = function() ","ObjectID.prototype.generate = function(time) ","ObjectID.prototype.toString = function() ","ObjectID.prototype.toJSON = function() ","ObjectID.prototype.equals = function equals (otherID) ","ObjectID.prototype.getTimestamp = function() ","ObjectID.createPk = function createPk () ","ObjectID.createFromTime = function createFromTime (time) ","ObjectID.createFromHexString = function createFromHexString (hexString) "," , get: function () "," , set: function (value) ","'symbol': function(module, exports, global, require, undefined)","function Symbol(value) ","Symbol.prototype.valueOf = function() ","Symbol.prototype.toString = function() ","Symbol.prototype.inspect = function() ","Symbol.prototype.toJSON = function() ","'timestamp': function(module, exports, global, require, undefined)"," * values as *signed* integers.  See the from* functions below for more","function Timestamp(low, high) ","Timestamp.prototype.toInt = function() ","Timestamp.prototype.toNumber = function() ","Timestamp.prototype.toJSON = function() ","Timestamp.prototype.toString = function(opt_radix) ","Timestamp.prototype.getHighBits = function() ","Timestamp.prototype.getLowBits = function() ","Timestamp.prototype.getLowBitsUnsigned = function() ","Timestamp.prototype.getNumBitsAbs = function() ","Timestamp.prototype.isZero = function() ","Timestamp.prototype.isNegative = function() ","Timestamp.prototype.isOdd = function() ","Timestamp.prototype.equals = function(other) ","Timestamp.prototype.notEquals = function(other) ","Timestamp.prototype.lessThan = function(other) ","Timestamp.prototype.lessThanOrEqual = function(other) ","Timestamp.prototype.greaterThan = function(other) ","Timestamp.prototype.greaterThanOrEqual = function(other) ","Timestamp.prototype.compare = function(other) ","Timestamp.prototype.negate = function() ","Timestamp.prototype.add = function(other) ","Timestamp.prototype.subtract = function(other) ","Timestamp.prototype.multiply = function(other) ","Timestamp.prototype.div = function(other) ","Timestamp.prototype.modulo = function(other) ","Timestamp.prototype.not = function() ","Timestamp.prototype.and = function(other) ","Timestamp.prototype.or = function(other) ","Timestamp.prototype.xor = function(other) ","Timestamp.prototype.shiftLeft = function(numBits) ","Timestamp.prototype.shiftRight = function(numBits) ","Timestamp.prototype.shiftRightUnsigned = function(numBits) ","Timestamp.fromInt = function(value) ","Timestamp.fromNumber = function(value) ","Timestamp.fromBits = function(lowBits, highBits) ","Timestamp.fromString = function(str, opt_radix) "," * first call to any from* function below."],"Dependencies":["buffer","./long","./double","./timestamp","./objectid","./symbol","./code","./min_key","./max_key","./db_ref","./binary","./binary_parser","./float_parser","./float_parser","./bson","../../ext","./binary_parser"]},{"FileName":"node_modules\\bson\\deserializer_bak.js","LineCount":358,"CharCount":9512,"Comments":["/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","var deserialize = function(buffer, options, isArray) {","\t// Read the document size","  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","\t// Ensure buffer is valid size","  if(size \u003c 5 || buffer.length \u003c size) {","\t// Illegal end value","\tif(buffer[size - 1] != 0) {","\t// Start deserializtion","\treturn deserializeObject(buffer, options, isArray);","// // Reads in a C style string","// var readCStyleStringSpecial = function(buffer, index) {","// \t// Get the start search index","// \tvar i = index;","// \t// Locate the end of the c string","// \twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","// \t\ti++","// \t}","// \t// If are at the end of the buffer there is a problem with the document","// \tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","// \t// Grab utf8 encoded string","// \tvar string = buffer.toString('utf8', index, i);","// \t// Update index position","// \tindex = i + 1;","// \t// Return string","// \treturn {s: string, i: index};","// }","","// Reads in a C style string","var readCStyleStringSpecial = function(buffer, index) {","\t// Get the start search index","\tvar i = index;","\t// Locate the end of the c string","\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t// If are at the end of the buffer there is a problem with the document","\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t// Grab utf8 encoded string","\treturn buffer.toString('utf8', index, i);","  // Options","  options = options == null ? {} : options;","  // Return BSONRegExp objects instead of native regular expressions","  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;","  // Validate that we have at least 4 bytes of buffer","  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");","  // Set up index","  var index = typeof options['index'] == 'number' ? options['index'] : 0;","\t// Read the document size","  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","\t// Ensure buffer is valid size","  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");","  // Create holding object","  var object = isArray ? [] : {};","  // While we have more left data left keep parsing","  while(true) {","    // Read the type","    var elementType = buffer[index++];","    // If we get a zero it's the last byte, exit","    if(elementType == 0) break;","\t\t// console.log(\"----------- 0 \" + elementType + \" :: \" + name)","\t\tindex = DeserializationMethods[elementType](name, object, buffer, index);","\t\t// console.log('--------------- 1')","  }","  // Check if we have a db ref object","  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);","  // Return the final objects","  return object;","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEvalWithHash = function(functionCache, hash, functionString, object) {","  // Contains the value we are going to set","  var value = null;","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) {","  // Set the object","  return functionCache[hash].bind(object);","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEval = function(functionString) {","  // Contains the value we are going to set","  var value = null;","  // Eval the function","  eval(\"value = \" + functionString);"],"Functions":[" * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };","var deserialize = function(buffer, options, isArray) ","// var readCStyleStringSpecial = function(buffer, index) ","var readCStyleStringSpecial = function(buffer, index) ","DeserializationMethods[BSON.BSON_DATA_OID] = function(name, object, buffer, index) ","DeserializationMethods[BSON.BSON_DATA_NUMBER] = function(name, object, buffer, index) ","DeserializationMethods[BSON.BSON_DATA_INT] = function(name, object, buffer, index) ","DeserializationMethods[BSON.BSON_DATA_TIMESTAMP] = function(name, object, buffer, index) ","DeserializationMethods[BSON.BSON_DATA_STRING] = function(name, object, buffer, index) ","DeserializationMethods[BSON.BSON_DATA_BOOLEAN] = function(name, object, buffer, index) ","var deserializeObject = function(buffer, options, isArray) ","var isolateEvalWithHash = function(functionCache, hash, functionString, object) ","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) ","    eval(\"value = \" + functionString);","    functionCache[hash] = value;","  return functionCache[hash].bind(object);","var isolateEval = function(functionString) ","  // Eval the function","  eval(\"value = \" + functionString);"],"Dependencies":["../float_parser","../float_parser","util","../long","../double","../timestamp","../objectid","../symbol","../code","../min_key","../max_key","../db_ref","../regexp","../binary"]},{"FileName":"node_modules\\bson\\lib\\bson\\binary.js","LineCount":348,"CharCount":10160,"Comments":["/**"," * Module dependencies."," * @ignore"," */","","// Test if we're in Node via presence of \"global\" not absence of \"window\"","// Test if we're in Node via presence of \"global\" not absence of \"window\"","// to support hybrid environments like Electron","if(typeof global !== 'undefined') {","  var Buffer = require('buffer').Buffer; // TODO just use global Buffer","}","/**"," * A class representation of the BSON Binary type."," *"," * Sub types"," *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type."," *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type."," *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type."," *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type."," *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type."," *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type."," *"," * @class"," * @param {Buffer} buffer a buffer object containing the binary data."," * @param {Number} [subType] the option binary type."," * @return {Binary}"," */","function Binary(buffer, subType) {","    // Only accept Buffer, Uint8Array or Arrays","    if(typeof buffer == 'string') {","      // Different ways of writing the length of the string for the different types","      if(typeof Buffer != 'undefined') {","    // Set position to start of buffer","    this.position = 0;","/**"," * Updates this binary with byte_value."," *"," * @method"," * @param {string} byte_value a single byte we wish to write."," */","Binary.prototype.put = function put(byte_value) {","  // If it's a string and a has more than one character throw an error","  if(byte_value['length'] != null \u0026\u0026 typeof byte_value != 'number' \u0026\u0026 byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");","  // Decode the byte value once","  var decoded_byte = null;","      // Create additional overflow buffer","      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);","      // Combine the two buffers together","      this.buffer.copy(buffer, 0, 0, this.buffer.length);","      // Create a new buffer (typed or normal array)","      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {","      // We need to copy all the content to the new array","      for(var i = 0; i \u003c this.buffer.length; i++) {","      // Reassign the buffer","      this.buffer = buffer;","      // Write the byte","      this.buffer[this.position++] = decoded_byte;","/**"," * Writes a buffer or string to the binary."," *"," * @method"," * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object."," * @param {number} offset specify the binary of where to write the content."," * @return {null}"," */","Binary.prototype.write = function write(string, offset) {","  // If the buffer is to small let's extend the buffer","  if(this.buffer.length \u003c offset + string.length) {","    // If we are in node.js","    if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) {","      // Create a new buffer","      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))","      // Copy the content","      for(var i = 0; i \u003c this.position; i++) {","    // Assign the new buffer","    this.buffer = buffer;","    // offset = string.length","  } else if(typeof Buffer != 'undefined' \u0026\u0026 typeof string == 'string' \u0026\u0026 Buffer.isBuffer(this.buffer)) {","    // offset = string.length;","  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'","/**"," * Reads **length** bytes starting at **position**."," *"," * @method"," * @param {number} position read from the given position in the Binary."," * @param {number} length the number of bytes to read."," * @return {Buffer}"," */","Binary.prototype.read = function read(position, length) {","  // Let's return the data based on the type we have","  if(this.buffer['slice']) {","    // Create a buffer to keep the result","    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);","  // Return the buffer","  return buffer;","/**"," * Returns the value of this binary as a string."," *"," * @method"," * @return {string}"," */","Binary.prototype.value = function value(asRaw) {","  // Optimize to serialize for the situation where the data == size of buffer","  if(asRaw \u0026\u0026 typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer) \u0026\u0026 this.buffer.length == this.position)","  // If it's a node.js buffer object","  if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) {","      // we support the slice command use it","      if(this.buffer['slice'] != null) {","        // Create a new buffer to copy content to","        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);","        // Copy content","        for(var i = 0; i \u003c this.position; i++) {","        // Return the buffer","        return newBuffer;","/**"," * Length."," *"," * @method"," * @return {number} the length of the binary."," */","Binary.prototype.length = function length() {","/**"," * @ignore"," */","Binary.prototype.toJSON = function() {","/**"," * @ignore"," */","Binary.prototype.toString = function(format) {","/**"," * Binary default subtype"," * @ignore"," */","var BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * @ignore"," */","var writeStringToArray = function(data) {","  // Create a buffer","  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);","  // Write the content to the buffer","  for(var i = 0; i \u003c data.length; i++) {","  // Write the string to the buffer","  return buffer;","/**"," * Convert Array ot Uint8Array to Binary String"," *"," * @ignore"," */","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {","/**"," * Default BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_DEFAULT = 0;","/**"," * Function BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_FUNCTION = 1;","/**"," * Byte Array BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_BYTE_ARRAY = 2;","/**"," * OLD UUID BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID_OLD = 3;","/**"," * UUID BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID = 4;","/**"," * MD5 BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_MD5 = 5;","/**"," * User BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_USER_DEFINED = 128;","/**"," * Expose."," */","module.exports = Binary;"],"Functions":[" *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.","function Binary(buffer, subType) ","Binary.prototype.put = function put(byte_value) ","Binary.prototype.write = function write(string, offset) ","Binary.prototype.read = function read(position, length) ","Binary.prototype.value = function value(asRaw) ","Binary.prototype.length = function length() ","Binary.prototype.toJSON = function() ","Binary.prototype.toString = function(format) ","var writeStringToArray = function(data) ","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) "],"Dependencies":["buffer"]},{"FileName":"node_modules\\bson\\lib\\bson\\binary_parser.js","LineCount":386,"CharCount":11990,"Comments":["/**"," * Binary Parser."," * Jonas Raoni Soares Silva"," * http://jsfromhell.com/classes/binary-parser [v1.0]"," */","var chr = String.fromCharCode;","      , max = maxBits[bits]; //max = Math.pow( 2, bits );","  ","// Factor out the encode so it can be shared by add_header and push_int32","BinaryParser.encode_int32 = function encode_int32 (number, asArray) {","/**"," * UTF8 methods"," */","","// Take a raw binary string and return a utf8 string","// Take a raw binary string and return a utf8 string","BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) {","// Encode a cstring","BinaryParser.encode_cstring = function encode_cstring (s) {","// Take a utf8 string and return a binary string","BinaryParser.encode_utf8 = function encode_utf8 (s) {","/**"," * BinaryParser buffer constructor."," */","function BinaryParserBuffer (bigEndian, buffer) {","\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)","","\tfunction shl (a, b) {","/**"," * Expose."," */","BinaryParser.Buffer = BinaryParserBuffer;"],"Functions":["function BinaryParser (bigEndian, allowExceptions) ","BinaryParser.warn = function warn (msg) ","BinaryParser.decodeFloat = function decodeFloat (data, precisionBits, exponentBits) ","BinaryParser.decodeInt = function decodeInt (data, bits, signed, forceBigEndian) ","BinaryParser.encodeFloat = function encodeFloat (data, precisionBits, exponentBits) ","BinaryParser.encodeInt = function encodeInt (data, bits, signed, forceBigEndian) ","BinaryParser.toSmall    = function( data ) return this.decodeInt( data,  8, true  ); };","BinaryParser.fromSmall  = function( data ) return this.encodeInt( data,  8, true  ); };","BinaryParser.toByte     = function( data ) return this.decodeInt( data,  8, false ); };","BinaryParser.fromByte   = function( data ) return this.encodeInt( data,  8, false ); };","BinaryParser.toShort    = function( data ) return this.decodeInt( data, 16, true  ); };","BinaryParser.fromShort  = function( data ) return this.encodeInt( data, 16, true  ); };","BinaryParser.toWord     = function( data ) return this.decodeInt( data, 16, false ); };","BinaryParser.fromWord   = function( data ) return this.encodeInt( data, 16, false ); };","BinaryParser.toInt      = function( data ) return this.decodeInt( data, 32, true  ); };","BinaryParser.fromInt    = function( data ) return this.encodeInt( data, 32, true  ); };","BinaryParser.toLong     = function( data ) return this.decodeInt( data, 64, true  ); };","BinaryParser.fromLong   = function( data ) return this.encodeInt( data, 64, true  ); };","BinaryParser.toDWord    = function( data ) return this.decodeInt( data, 32, false ); };","BinaryParser.fromDWord  = function( data ) return this.encodeInt( data, 32, false ); };","BinaryParser.toQWord    = function( data ) return this.decodeInt( data, 64, true ); };","BinaryParser.fromQWord  = function( data ) return this.encodeInt( data, 64, true ); };","BinaryParser.toFloat    = function( data ) return this.decodeFloat( data, 23, 8   ); };","BinaryParser.fromFloat  = function( data ) return this.encodeFloat( data, 23, 8   ); };","BinaryParser.toDouble   = function( data ) return this.decodeFloat( data, 52, 11  ); };","BinaryParser.fromDouble = function( data ) return this.encodeFloat( data, 52, 11  ); };","BinaryParser.encode_int32 = function encode_int32 (number, asArray) ","BinaryParser.encode_int64 = function encode_int64 (number) ","BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ","BinaryParser.encode_cstring = function encode_cstring (s) ","BinaryParser.encode_utf8 = function encode_utf8 (s) ","BinaryParser.hprint = function hprint (s) ","BinaryParser.ilprint = function hprint (s) ","BinaryParser.hlprint = function hprint (s) ","function BinaryParserBuffer (bigEndian, buffer) ","BinaryParserBuffer.prototype.setBuffer = function setBuffer (data) ","BinaryParserBuffer.prototype.hasNeededBits = function hasNeededBits (neededBits) ","BinaryParserBuffer.prototype.checkBuffer = function checkBuffer (neededBits) ","BinaryParserBuffer.prototype.readBits = function readBits (start, length) ","\tfunction shl (a, b) "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\bson.js","LineCount":324,"CharCount":9758,"Comments":["// \"use strict\"","","var writeIEEE754 = require('./float_parser').writeIEEE754,","// Parts of the parser","var deserialize = require('./parser/deserializer'),","/**"," * @ignore"," * @api private"," */","// Max Size","// Max Size","var MAXSIZE = (1024*1024*17);","// Max Document Buffer size","var buffer = new Buffer(MAXSIZE);","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.prototype.serialize = function serialize(object, checkKeys, asBuffer, serializeFunctions, index, ignoreUndefined) {","\t// Attempt to serialize","\tvar serializationIndex = serializer(buffer, object, checkKeys, index || 0, 0, serializeFunctions, ignoreUndefined);","\t// Create the final buffer","\tvar finishedBuffer = new Buffer(serializationIndex);","\t// Copy into the finished buffer","\tbuffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);","\t// Return the buffer","\treturn finishedBuffer;","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} checkKeys the serializer will check if keys are valid."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Number} index the index in the buffer where we wish to start serializing into."," * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**."," * @return {Number} returns the new write index in the Buffer."," * @api public"," */","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, finalBuffer, startIndex, serializeFunctions, ignoreUndefined) {","\t// Attempt to serialize","\tvar serializationIndex = serializer(buffer, object, checkKeys, startIndex || 0, 0, serializeFunctions, ignoreUndefined);","\t// Return the index","\treturn startIndex + serializationIndex - 1;","/**"," * Deserialize data as BSON."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Boolean} [isArray] ignore used for recursive parsing."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.prototype.deserialize = function(data, options) {","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.prototype.calculateObjectSize = function(object, serializeFunctions, ignoreUndefined) {","/**"," * Deserialize stream data as BSON documents."," *"," * Options"," *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function."," *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");","  options = options != null ? options : {};","  // Loop over all documents","  for(var i = 0; i \u003c numberOfDocuments; i++) {","    // Find size of the document","    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;","    // Update options with index","    options['index'] = index;","    // Parse the document at this point","    documents[docStartIndex + i] = this.deserialize(data, options);","    // Adjust index by the document size","    index = index + size;","  // Return object containing end index of parsing and list of documents","  return index;","/**"," * @ignore"," * @api private"," */","// BSON MAX VALUES","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","/**","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","// Return BSON","module.exports = BSON;"],"Functions":["var BSON = function() "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serialize = function serialize(object, checkKeys, asBuffer, serializeFunctions, index, ignoreUndefined) "," * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.","BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, finalBuffer, startIndex, serializeFunctions, ignoreUndefined) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserialize = function(data, options) "," * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.","BSON.prototype.calculateObjectSize = function(object, serializeFunctions, ignoreUndefined) "," *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized."," *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse."," *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) "],"Dependencies":["./float_parser","./float_parser","./map","./long","./double","./timestamp","./objectid","./regexp","./symbol","./code","./min_key","./max_key","./db_ref","./binary","./parser/deserializer","./parser/serializer","./parser/calculate_size"]},{"FileName":"node_modules\\bson\\lib\\bson\\code.js","LineCount":24,"CharCount":533,"Comments":["/**"," * A class representation of the BSON Code type."," *"," * @class"," * @param {(string|function)} code a string or function."," * @param {Object} [scope] an optional scope for the function."," * @return {Code}"," */","var Code = function Code(code, scope) {","/**"," * @ignore"," */","Code.prototype.toJSON = function() {"],"Functions":[" * @param (string|function)} code a string or function."," * @param Object} [scope] an optional scope for the function.","var Code = function Code(code, scope) ","Code.prototype.toJSON = function() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\db_ref.js","LineCount":32,"CharCount":691,"Comments":["/**"," * A class representation of the BSON DBRef type."," *"," * @class"," * @param {string} namespace the collection name."," * @param {ObjectID} oid the reference ObjectID."," * @param {string} [db] optional db name, if omitted the reference is local to the current db."," * @return {DBRef}"," */","function DBRef(namespace, oid, db) {","/**"," * @ignore"," * @api private"," */","DBRef.prototype.toJSON = function() {"],"Functions":["function DBRef(namespace, oid, db) ","DBRef.prototype.toJSON = function() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\double.js","LineCount":33,"CharCount":578,"Comments":["/**"," * A class representation of the BSON Double type."," *"," * @class"," * @param {number} value the number we want to represent as a double."," * @return {Double}"," */","function Double(value) {","/**"," * Access the number value."," *"," * @method"," * @return {number} returns the wrapped double number."," */","Double.prototype.valueOf = function() {","/**"," * @ignore"," */","Double.prototype.toJSON = function() {"],"Functions":["function Double(value) ","Double.prototype.valueOf = function() ","Double.prototype.toJSON = function() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\float_parser.js","LineCount":121,"CharCount":3788,"Comments":["// Copyright (c) 2008, Fair Oaks Labs, Inc.","// All rights reserved.","// ","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions are met:","// ","//  * Redistributions of source code must retain the above copyright notice,","//    this list of conditions and the following disclaimer.","// ","//  * Redistributions in binary form must reproduce the above copyright notice,","//    this list of conditions and the following disclaimer in the documentation","//    and/or other materials provided with the distribution.","// ","//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors","//    may be used to endorse or promote products derived from this software","//    without specific prior written permission.","// ","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"","// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE","// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE","// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR","// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF","// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS","// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN","// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)","// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE","// POSSIBILITY OF SUCH DAMAGE.","//","//","// Modifications to writeIEEE754 to support negative zeroes made by Brian White","","var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {"],"Functions":["var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ","var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\index.js","LineCount":87,"CharCount":1579,"Comments":["// Exports all the classes for the PURE JS BSON Parser","exports.pure = function() {","  // Map all the classes","  [ './binary_parser'","  // Return classes list","  return classes;","// Exports all the classes for the NATIVE JS BSON Parser","exports.native = function() {","  // Map all the classes","  [ './binary_parser'","  // Catch error and return no classes found","  try {","  // Return classes list","  return classes;"],"Functions":["  , './long'].forEach(function (path) ","exports.pure = function() ","    , './bson'].forEach(function (path) ","exports.native = function() ","  ].forEach(function (path) "],"Dependencies":["./bson","./bson","./bson"]},{"FileName":"node_modules\\bson\\lib\\bson\\long.js","LineCount":856,"CharCount":22049,"Comments":["// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**","/**"," * Defines a Long class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Long\". This"," * implementation is derived from LongLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Longs."," *"," * The internal representation of a Long is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class"," * @param {number} low  the low (signed) 32 bits of the Long."," * @param {number} high the high (signed) 32 bits of the Long."," * @return {Long}"," */","function Long(low, high) {","  /**","   * @type {number}","   * @ignore","   */","  this.low_ = low | 0;  // force into 32 signed bits.","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","  /**","   * @type {number}","   * @ignore","   */","  this.high_ = high | 0;  // force into 32 signed bits.","  this.high_ = high | 0;  // force into 32 signed bits.","};","/**"," * Return the int value."," *"," * @method"," * @return {number} the value, assuming it is a 32-bit integer."," */","Long.prototype.toInt = function() {","/**"," * Return the Number value."," *"," * @method"," * @return {number} the closest floating-point representation to this value."," */","Long.prototype.toNumber = function() {","/**"," * Return the JSON value."," *"," * @method"," * @return {string} the JSON representation."," */","Long.prototype.toJSON = function() {","/**"," * Return the String value."," *"," * @method"," * @param {number} [opt_radix] the radix in which the text should be written."," * @return {string} the textual representation of this value."," */","Long.prototype.toString = function(opt_radix) {","      // We need to change the Long value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixLong = Long.fromNumber(radix);","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 6));","/**"," * Return the high 32-bits value."," *"," * @method"," * @return {number} the high 32-bits as a signed value."," */","Long.prototype.getHighBits = function() {","/**"," * Return the low 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as a signed value."," */","Long.prototype.getLowBits = function() {","/**"," * Return the low unsigned 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as an unsigned value."," */","Long.prototype.getLowBitsUnsigned = function() {","/**"," * Returns the number of bits needed to represent the absolute value of this Long."," *"," * @method"," * @return {number} Returns the number of bits needed to represent the absolute value of this Long."," */","Long.prototype.getNumBitsAbs = function() {","/**"," * Return whether this value is zero."," *"," * @method"," * @return {boolean} whether this value is zero."," */","Long.prototype.isZero = function() {","/**"," * Return whether this value is negative."," *"," * @method"," * @return {boolean} whether this value is negative."," */","Long.prototype.isNegative = function() {","/**"," * Return whether this value is odd."," *"," * @method"," * @return {boolean} whether this value is odd."," */","Long.prototype.isOdd = function() {","/**"," * Return whether this Long equals the other"," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long equals the other"," */","Long.prototype.equals = function(other) {","/**"," * Return whether this Long does not equal the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long does not equal the other."," */","Long.prototype.notEquals = function(other) {","/**"," * Return whether this Long is less than the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is less than the other."," */","Long.prototype.lessThan = function(other) {","/**"," * Return whether this Long is less than or equal to the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is less than or equal to the other."," */","Long.prototype.lessThanOrEqual = function(other) {","/**"," * Return whether this Long is greater than the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is greater than the other."," */","Long.prototype.greaterThan = function(other) {","/**"," * Return whether this Long is greater than or equal to the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is greater than or equal to the other."," */","Long.prototype.greaterThanOrEqual = function(other) {","/**"," * Compares this Long with the given one."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," */","Long.prototype.compare = function(other) {","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","/**"," * The negation of this value."," *"," * @method"," * @return {Long} the negation of this value."," */","Long.prototype.negate = function() {","/**"," * Returns the sum of this and the given Long."," *"," * @method"," * @param {Long} other Long to add to this one."," * @return {Long} the sum of this and the given Long."," */","Long.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns the difference of this and the given Long."," *"," * @method"," * @param {Long} other Long to subtract from this."," * @return {Long} the difference of this and the given Long."," */","Long.prototype.subtract = function(other) {","/**"," * Returns the product of this and the given Long."," *"," * @method"," * @param {Long} other Long to multiply with this."," * @return {Long} the product of this and the other."," */","Long.prototype.multiply = function(other) {","  // If both Longs are small, use float multiplication","  if (this.lessThan(Long.TWO_PWR_24_) \u0026\u0026","  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns this Long divided by the given one."," *"," * @method"," * @param {Long} other Long by which to divide."," * @return {Long} this Long divided by the given one."," */","Long.prototype.div = function(other) {","      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Long.MIN_VALUE)) {","      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Long.ZERO;","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Long.fromNumber(approx);","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","/**"," * Returns this Long modulo the given one."," *"," * @method"," * @param {Long} other Long by which to mod."," * @return {Long} this Long modulo the given one."," */","Long.prototype.modulo = function(other) {","/**"," * The bitwise-NOT of this value."," *"," * @method"," * @return {Long} the bitwise-NOT of this value."," */","Long.prototype.not = function() {","/**"," * Returns the bitwise-AND of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to AND."," * @return {Long} the bitwise-AND of this and the other."," */","Long.prototype.and = function(other) {","/**"," * Returns the bitwise-OR of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to OR."," * @return {Long} the bitwise-OR of this and the other."," */","Long.prototype.or = function(other) {","/**"," * Returns the bitwise-XOR of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to XOR."," * @return {Long} the bitwise-XOR of this and the other."," */","Long.prototype.xor = function(other) {","/**"," * Returns this Long with bits shifted to the left by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the left by the given amount."," */","Long.prototype.shiftLeft = function(numBits) {","/**"," * Returns this Long with bits shifted to the right by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount."," */","Long.prototype.shiftRight = function(numBits) {","/**"," * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits."," */","Long.prototype.shiftRightUnsigned = function(numBits) {","/**"," * Returns a Long representing the given (32-bit) integer value."," *"," * @method"," * @param {number} value the 32-bit integer in question."," * @return {Long} the corresponding Long value."," */","Long.fromInt = function(value) {","/**"," * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @method"," * @param {number} value the number in question."," * @return {Long} the corresponding Long value."," */","Long.fromNumber = function(value) {","/**"," * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @method"," * @param {number} lowBits the low 32-bits."," * @param {number} highBits the high 32-bits."," * @return {Long} the corresponding Long value."," */","Long.fromBits = function(lowBits, highBits) {","/**"," * Returns a Long representation of the given string, written using the given radix."," *"," * @method"," * @param {string} str the textual representation of the Long."," * @param {number} opt_radix the radix in which the text is written."," * @return {Long} the corresponding Long value."," */","Long.fromString = function(str, opt_radix) {","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 8));","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**","/**"," * A cache of the Long representations of small integer values."," * @type {Object}"," * @ignore"," */","Long.INT_CACHE_ = {};","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @ignore"," */","Long.TWO_PWR_16_DBL_ = 1 \u003c\u003c 16;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_24_DBL_ = 1 \u003c\u003c 24;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;","/** @type {Long} */","Long.ZERO = Long.fromInt(0);","/** @type {Long} */","Long.ONE = Long.fromInt(1);","/** @type {Long} */","Long.NEG_ONE = Long.fromInt(-1);","/** @type {Long} */","Long.MAX_VALUE =","/** @type {Long} */","Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);","/**"," * @type {Long}"," * @ignore"," */","Long.TWO_PWR_24_ = Long.fromInt(1 \u003c\u003c 24);","/**"," * Expose."," */","module.exports = Long;"],"Functions":[" * values as *signed* integers.  See the from* functions below for more","function Long(low, high) ","Long.prototype.toInt = function() ","Long.prototype.toNumber = function() ","Long.prototype.toJSON = function() ","Long.prototype.toString = function(opt_radix) ","Long.prototype.getHighBits = function() ","Long.prototype.getLowBits = function() ","Long.prototype.getLowBitsUnsigned = function() ","Long.prototype.getNumBitsAbs = function() ","Long.prototype.isZero = function() ","Long.prototype.isNegative = function() ","Long.prototype.isOdd = function() ","Long.prototype.equals = function(other) ","Long.prototype.notEquals = function(other) ","Long.prototype.lessThan = function(other) ","Long.prototype.lessThanOrEqual = function(other) ","Long.prototype.greaterThan = function(other) ","Long.prototype.greaterThanOrEqual = function(other) ","Long.prototype.compare = function(other) ","Long.prototype.negate = function() ","Long.prototype.add = function(other) ","Long.prototype.subtract = function(other) ","Long.prototype.multiply = function(other) ","Long.prototype.div = function(other) ","Long.prototype.modulo = function(other) ","Long.prototype.not = function() ","Long.prototype.and = function(other) ","Long.prototype.or = function(other) ","Long.prototype.xor = function(other) ","Long.prototype.shiftLeft = function(numBits) ","Long.prototype.shiftRight = function(numBits) ","Long.prototype.shiftRightUnsigned = function(numBits) ","Long.fromInt = function(value) ","Long.fromNumber = function(value) ","Long.fromBits = function(lowBits, highBits) ","Long.fromString = function(str, opt_radix) "," * first call to any from* function below."],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\map.js","LineCount":126,"CharCount":3014,"Comments":["// We have an ES6 Map available, return the native instance","if(typeof global.Map !== 'undefined') {","  // We will return a polyfill","  var Map = function(array) {","      if(array[i] == null) continue;  // skip null and undefined","      var entry = array[i];","      // Add the key to the list of keys in order","      this._keys.push(key);","      // Add the key and value to the values dictionary with a point","      // to the location in the ordered keys list","      this._values[key] = {v: value, i: this._keys.length - 1};","    // Delete entry","    delete this._values[key];","    // Remove the key from the ordered keys list","    this._keys.splice(value.i, 1);","      // Call the forEach callback","      callback.call(self, this._values[key].v, key, self);","    // Add the key to the list of keys in order","    this._keys.push(key);","    // Add the key and value to the values dictionary with a point","    // to the location in the ordered keys list","    this._values[key] = {v: value, i: this._keys.length - 1};","  // Last ismaster","  Object.defineProperty(Map.prototype, 'size', {"],"Functions":["  var Map = function(array) ","  Map.prototype.clear = function() ","  Map.prototype.delete = function(key) ","  Map.prototype.entries = function() ","      next: function() ","  Map.prototype.forEach = function(callback, self) ","  Map.prototype.get = function(key) ","  Map.prototype.has = function(key) ","  Map.prototype.keys = function(key) ","      next: function() ","  Map.prototype.set = function(key, value) ","  Map.prototype.values = function(key, value) ","      next: function() ","    get: function()  return this._keys.length; }"],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\max_key.js","LineCount":14,"CharCount":263,"Comments":["/**"," * A class representation of the BSON MaxKey type."," *"," * @class"," * @return {MaxKey} A MaxKey instance"," */","function MaxKey() {"],"Functions":["function MaxKey() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\min_key.js","LineCount":14,"CharCount":261,"Comments":["/**"," * A class representation of the BSON MinKey type."," *"," * @class"," * @return {MinKey} A MinKey instance"," */","function MinKey() {"],"Functions":["function MinKey() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\objectid.js","LineCount":287,"CharCount":7613,"Comments":["/**"," * Module dependencies."," * @ignore"," */","var BinaryParser = require('./binary_parser').BinaryParser;","/**"," * Machine id."," *"," * Create a random 3-byte value (i.e. unique for this"," * process). Other drivers use a md5 of the machine id here, but"," * that would mean an asyc call to gethostname, so we don't bother."," * @ignore"," */","var MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);","// Regular expression that checks for hex value","var checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");","/**","* Create a new ObjectID instance","*","* @class","* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.","* @property {number} generationTime The generation time of this ObjectId instance","* @return {ObjectID} instance of ObjectID.","*/","var ObjectID = function ObjectID(id) {","  // Duck-typing to support ObjectId from different npm packages","  if((id instanceof ObjectID) || (id \u0026\u0026 id.toHexString)) return id;","  // Throw an error if it's not a valid setup","  if(!valid \u0026\u0026 id != null){","    // convert to 12 byte binary string","    this.id = this.generate(id);","    // assume 12 byte string","    this.id = id;","// Allow usage of ObjectId as well as ObjectID","var ObjectId = ObjectID;","// Precomputed hex table enables speedy hex string conversion","var hexTable = [];","/**","* Return the ObjectID id as a 24 byte hex string representation","*","* @method","* @return {string} return the 24 byte hex string representation.","*/","ObjectID.prototype.toHexString = function() {","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @method","* @return {number} returns next index value.","* @ignore","*/","ObjectID.prototype.get_inc = function() {","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @method","* @return {number} returns next index value.","* @ignore","*/","ObjectID.prototype.getInc = function() {","/**","* Generate a 12 byte id string used in ObjectID's","*","* @method","* @param {number} [time] optional parameter allowing to pass in a second based timestamp.","* @return {string} return the 12 byte id binary string.","*/","ObjectID.prototype.generate = function(time) {","  /* for time-based ObjectID the bytes following the time will be zeroed */","  var machine3Bytes = BinaryParser.encodeInt(MACHINE_ID, 24, false);","/**","* Converts the id into a 24 byte hex string for printing","*","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.toString = function() {","/**","* Converts to a string representation of this Id.","*","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.inspect = ObjectID.prototype.toString;","/**","* Converts to its JSON representation.","*","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.toJSON = function() {","/**","* Compares the equality of this ObjectID with `otherID`.","*","* @method","* @param {object} otherID ObjectID instance to compare against.","* @return {boolean} the result of comparing two ObjectID's","*/","ObjectID.prototype.equals = function equals (otherID) {","/**","* Returns the generation date (accurate up to the second) that this ID was generated.","*","* @method","* @return {date} the generation date","*/","ObjectID.prototype.getTimestamp = function() {","/**","* @ignore","*/","ObjectID.index = parseInt(Math.random() * 0xFFFFFF, 10);","/**","* @ignore","*/","ObjectID.createPk = function createPk () {","/**","* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.","*","* @method","* @param {number} time an integer number representing a number of seconds.","* @return {ObjectID} return the created ObjectID","*/","ObjectID.createFromTime = function createFromTime (time) {","/**","* Creates an ObjectID from a hex string representation of an ObjectID.","*","* @method","* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.","* @return {ObjectID} return the created ObjectID","*/","ObjectID.createFromHexString = function createFromHexString (hexString) {","  // Throw an error if it's not a valid setup","  if(typeof hexString === 'undefined' || hexString != null \u0026\u0026 hexString.length != 24)","/**","* Checks if a value is a valid bson ObjectId","*","* @method","* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.","*/","ObjectID.isValid = function isValid(id) {","  // Duck-Typing detection of ObjectId like objects","  if(id.toHexString) {","/**","* @ignore","*/","Object.defineProperty(ObjectID.prototype, \"generationTime\", {","     // delete this.__id;","     this.toHexString();","/**"," * Expose."," */","module.exports = ObjectID;"],"Functions":["var ObjectID = function ObjectID(id) ","ObjectID.prototype.toHexString = function() ","ObjectID.prototype.get_inc = function() ","ObjectID.prototype.getInc = function() ","ObjectID.prototype.generate = function(time) ","ObjectID.prototype.toString = function() ","ObjectID.prototype.toJSON = function() ","ObjectID.prototype.equals = function equals (otherID) ","ObjectID.prototype.getTimestamp = function() ","ObjectID.createPk = function createPk () ","ObjectID.createFromTime = function createFromTime (time) ","ObjectID.createFromHexString = function createFromHexString (hexString) ","ObjectID.isValid = function isValid(id) "," , get: function () "," , set: function (value) "],"Dependencies":["./binary_parser"]},{"FileName":"node_modules\\bson\\lib\\bson\\parser\\calculate_size.js","LineCount":311,"CharCount":10177,"Comments":["// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t// Calculate size","    for(var key in object) {","/**"," * @ignore"," * @api private"," */","function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {","\t// If we have toBSON defined, override the current object","  if(value \u0026\u0026 value.toBSON){","        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);","      } else {  // 64 bit","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);","        // Calculate size depending on the availability of a scope","        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) {","        // Check what kind of subtype we have","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","        // Set up correct object for serialization","        var ordered_values = {","        // Add db reference if it exists","        if(null != value.db) {","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = calculateObjectSize;"],"Functions":["var isDate = function isDate(d) ","var calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) ","function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) ","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };"],"Dependencies":["../float_parser","../float_parser","../long","../double","../timestamp","../objectid","../symbol","../regexp","../code","../min_key","../max_key","../db_ref","../binary"]},{"FileName":"node_modules\\bson\\lib\\bson\\parser\\deserializer.js","LineCount":532,"CharCount":17670,"Comments":["\t// Read the document size","  var size = buffer[index] | buffer[index+1] \u003c\u003c 8 | buffer[index+2] \u003c\u003c 16 | buffer[index+3] \u003c\u003c 24;","\t// Ensure buffer is valid size","  if(size \u003c 5 || buffer.length \u003c size) {","\t// Illegal end value","\tif(buffer[index + size - 1] != 0) {","\t// Start deserializtion","\treturn deserializeObject(buffer, index, options, isArray);","  // Return BSONRegExp objects instead of native regular expressions","  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;","  // Validate that we have at least 4 bytes of buffer","  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");","\t// Read the document size","  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","\t// Ensure buffer is valid size","  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");","  // Create holding object","  var object = isArray ? [] : {};","  // While we have more left data left keep parsing","  while(true) {","    // Read the type","    var elementType = buffer[index++];","    // If we get a zero it's the last byte, exit","    if(elementType == 0) break;","\t\t// Get the start search index","\t\tvar i = index;","\t\t// Locate the end of the c string","\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t\t// If are at the end of the buffer there is a problem with the document","\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// We have a raw value","\t\t\tif(raw) {","\t\t\t// All elements of array to be returned as raw bson","\t\t\tif(fieldsAsRaw \u0026\u0026 fieldsAsRaw[name]) {","      // Unpack the low and high bits","      var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;","      // Promote the long if possible","      if(promoteLongs) {","      // Decode as raw Buffer object if options specifies it","      if(buffer['slice'] != null) {","        // If we have subtype 2 skip the 4 bytes for the size","        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","        // If we have subtype 2 skip the 4 bytes for the size","        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","        // Copy the data","        for(var i = 0; i \u003c binarySize; i++) {","      // Update the index","      index = index + binarySize;","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar source = buffer.toString('utf8', index, i);","      // Create the regexp","\t\t\tindex = i + 1;","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);","      // For each option add the corresponding one for javascript","      var optionsArray = new Array(regExpOptions.length);","      // Parse options","      for(var i = 0; i \u003c regExpOptions.length; i++) {","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar source = buffer.toString('utf8', index, i);","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);","      // Set the object","      object[name] = new BSONRegExp(source, regExpOptions);","      // If we are evaluating the functions","      if(evalFunctions) {","        // If we have cache enabled let's look for the md5 of the function in the cache","        if(cacheFunctions) {","          // Got to do this to avoid V8 deoptimizing the call due to finding eval","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","      // Update parse index position","      index = index + stringSize;","      // Javascript function","      var functionString = buffer.toString('utf8', index, index + stringSize - 1);","      // Update parse index position","      index = index + stringSize;","      // Parse the element","\t\t\tvar _index = index;","      // Decode the size of the object document","      var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;","      // Decode the scope object","      var scopeObject = deserializeObject(buffer, _index, options, false);","      // Adjust the index","      index = index + objectSize;","      // If we are evaluating the functions","      if(evalFunctions) {","        // Contains the value we are going to set","        var value = null;","        // If we have cache enabled let's look for the md5 of the function in the cache","        if(cacheFunctions) {","          // Got to do this to avoid V8 deoptimizing the call due to finding eval","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","  // Check if we have a db ref object","  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEvalWithHash = function(functionCache, hash, functionString, object) {","  // Contains the value we are going to set","  var value = null;","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) {","  // Set the object","  return functionCache[hash].bind(object);","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEval = function(functionString) {","  // Contains the value we are going to set","  var value = null;","  // Eval the function","  eval(\"value = \" + functionString);","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_UNDEFINED"," **/","BSON.BSON_DATA_UNDEFINED = 7;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = deserialize"],"Functions":["var deserialize = function(buffer, options, isArray) ","var deserializeObject = function(buffer, index, options, isArray) ","      var functionString = buffer.toString('utf8', index, index + stringSize - 1);","      // If we are evaluating the functions","        // If we have cache enabled let's look for the md5 of the function in the cache","          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","          object[name] = isolateEval(functionString);","        object[name]  = new Code(functionString, });","      // Javascript function","      var functionString = buffer.toString('utf8', index, index + stringSize - 1);","      // If we are evaluating the functions","        // If we have cache enabled let's look for the md5 of the function in the cache","          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","          object[name] = isolateEval(functionString);","        object[name]  = new Code(functionString, scopeObject);","var isolateEvalWithHash = function(functionCache, hash, functionString, object) ","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) ","    eval(\"value = \" + functionString);","    functionCache[hash] = value;","  return functionCache[hash].bind(object);","var isolateEval = function(functionString) ","  // Eval the function","  eval(\"value = \" + functionString);"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };"],"Dependencies":["../float_parser","util","../long","../double","../timestamp","../objectid","../symbol","../code","../min_key","../max_key","../db_ref","../regexp","../binary"]},{"FileName":"node_modules\\bson\\lib\\bson\\parser\\serializer.js","LineCount":913,"CharCount":29702,"Comments":["// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","  // Encode String type","  buffer[index++] = BSON.BSON_DATA_STRING;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes + 1;","  // Write the string","  var size = buffer.write(value, index + 4, 'utf8');","  // Write the size of the string to buffer","  buffer[index + 3] = (size + 1 \u003e\u003e 24) \u0026 0xff;","  // Update index","  index = index + 4 + size;","  // Write zero","  buffer[index++] = 0;","  // We have an integer value","  if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) {","    // If the value fits in 32 bits encode as int, if it fits in a double","    // encode it as a double, otherwise long","    if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) {","      // Set int type 32 bits or less","      buffer[index++] = BSON.BSON_DATA_INT;","      // Number of written bytes","      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","      // Encode the name","      index = index + numberOfWrittenBytes;","      // Write the int value","      buffer[index++] = value \u0026 0xff;","      // Encode as double","      buffer[index++] = BSON.BSON_DATA_NUMBER;","      // Number of written bytes","      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","      // Encode the name","      index = index + numberOfWrittenBytes;","      // Write float","      writeIEEE754(buffer, value, index, 'little', 52, 8);","      // Ajust index","      index = index + 8;","      // Set long type","      buffer[index++] = BSON.BSON_DATA_LONG;","      // Number of written bytes","      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","      // Encode the name","      index = index + numberOfWrittenBytes;","      // Encode low bits","      buffer[index++] = lowBits \u0026 0xff;","      // Encode high bits","      buffer[index++] = highBits \u0026 0xff;","    // Encode as double","    buffer[index++] = BSON.BSON_DATA_NUMBER;","    // Number of written bytes","    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","    // Encode the name","    index = index + numberOfWrittenBytes;","    // Write float","    writeIEEE754(buffer, value, index, 'little', 52, 8);","    // Ajust index","    index = index + 8;","  // Set long type","  buffer[index++] = BSON.BSON_DATA_NULL;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BOOLEAN;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Encode the boolean value","  buffer[index++] = value ? 1 : 0;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_DATE;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the date","  var dateInMilis = Long.fromNumber(value.getTime());","  // Encode low bits","  buffer[index++] = lowBits \u0026 0xff;","  // Encode high bits","  buffer[index++] = highBits \u0026 0xff;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_REGEXP;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Adjust the index","  index = index + buffer.write(value.source, index, 'utf8');","  // Write zero","  buffer[index++] = 0x00;","  // Write the parameters","  if(value.global) buffer[index++] = 0x73; // s","  if(value.ignoreCase) buffer[index++] = 0x69; // i","  if(value.multiline) buffer[index++] = 0x6d; // m","  // Add ending zero","  buffer[index++] = 0x00;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_REGEXP;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Adjust the index","  index = index + buffer.write(value.pattern, index, 'utf8');","  // Write zero","  buffer[index++] = 0x00;","  // Write the options","  index = index + buffer.write(value.options, index, 'utf8');","  // Add ending zero","  buffer[index++] = 0x00;","  // Write the type of either min or max key","  if(value === null) {","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_OID;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the objectId into the shared buffer","  buffer.write(value.id, index, 'binary')","  // Ajust index","  return index + 12;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BINARY;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Get size of the buffer (current write point)","  var size = value.length;","  // Write the size of the string to buffer","  buffer[index++] = size \u0026 0xff;","  // Write the default subtype","  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;","  // Copy the content form the binary field to the buffer","  value.copy(buffer, index, 0, size);","  // Adjust the index","  index = index + size;","  // Write the type","  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write size","  var size = endIndex - index;","  // Write the type","  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the date","  var lowBits = value.getLowBits();","  // Encode low bits","  buffer[index++] = lowBits \u0026 0xff;","  // Encode high bits","  buffer[index++] = highBits \u0026 0xff;","  // Encode as double","  buffer[index++] = BSON.BSON_DATA_NUMBER;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write float","  writeIEEE754(buffer, value, index, 'little', 52, 8);","  // Ajust index","  index = index + 8;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Function string","  var functionString = value.toString();","  // Write the string","  var size = buffer.write(functionString, index + 4, 'utf8') + 1;","  // Write the size of the string to buffer","  buffer[index] = size \u0026 0xff;","  // Update index","  index = index + 4 + size - 1;","  // Write zero","  buffer[index++] = 0;","    // Write the type","    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","    // Number of written bytes","    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","    // Encode the name","    index = index + numberOfWrittenBytes;","    // Starting index","    var startIndex = index;","    // Serialize the function","    // Get the function string","    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();","    // Index adjustment","    index = index + 4;","    // Write string into buffer","    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;","    // Write the size of the string to buffer","    buffer[index] = codeSize \u0026 0xff;","    // Write end 0","    buffer[index + 4 + codeSize - 1] = 0;","    // Write the","    index = index + codeSize + 4;","    //","    // Serialize the scope value","    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)","    // Writ the total","    var totalSize = endIndex - startIndex;","    // Write the total size of the object","    buffer[startIndex++] = totalSize \u0026 0xff;","    // Write trailing zero","    buffer[index++] = 0;","    // Number of written bytes","    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","    // Encode the name","    index = index + numberOfWrittenBytes;","    // Function string","    var functionString = value.code.toString();","    // Write the string","    var size = buffer.write(functionString, index + 4, 'utf8') + 1;","    // Write the size of the string to buffer","    buffer[index] = size \u0026 0xff;","    // Update index","    index = index + 4 + size - 1;","    // Write zero","    buffer[index++] = 0;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BINARY;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Extract the buffer","  var data = value.value(true);","  // Calculate size","  var size = value.position;","  // Write the size of the string to buffer","  buffer[index++] = size \u0026 0xff;","  // Write the subtype to the buffer","  buffer[index++] = value.sub_type;","  // If we have binary type 2 the 4 first bytes are the size","  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","  // Write the data to the object","  data.copy(buffer, index, 0, value.position);","  // Adjust the index","  index = index + value.position;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_SYMBOL;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Write the string","  var size = buffer.write(value.value, index + 4, 'utf8') + 1;","  // Write the size of the string to buffer","  buffer[index] = size \u0026 0xff;","  // Update index","  index = index + 4 + size - 1;","  // Write zero","  buffer[index++] = 0x00;","  // Write the type","  buffer[index++] = BSON.BSON_DATA_OBJECT;","  // Number of written bytes","  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');","  // Encode the name","  index = index + numberOfWrittenBytes;","  // Serialize object","  if(null != value.db) {","  // Calculate object size","  var size = endIndex - startIndex;","  // Write the size","  buffer[startIndex++] = size \u0026 0xff;","  // Set index","  return endIndex;","  // Start place to serialize into","  var index = startingIndex + 4;","  // Special case isArray","  if(Array.isArray(object)) {","    // Get object keys","    for(var i = 0; i \u003c object.length; i++) {","      // Is there an override value","      if(value \u0026\u0026 value.toBSON) {","      // Unpack the next entry","      var entry = iterator.next();","      // Are we done, then skip and terminate","      if(done) continue;","      // Get the entry values","      var key = entry.value[0];","      // Check the type of the value","      var type = typeof value;","      // Check the key and throw error if it's illegal","      if(key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') {","          // The BSON spec doesn't allow keys with null bytes because keys are","          // null-terminated.","          throw Error(\"key \" + key + \" must not contain null bytes\");","      // console.log(\"---------------------------------------------------\")","      // console.dir(\"key = \" + key)","      // console.dir(\"value = \" + value)","","      if(type == 'string') {","    // Did we provide a custom serialization method","    if(object.toBSON) {","    // Iterate over all the keys","    for(var key in object) {","      // Is there an override value","      if(value \u0026\u0026 value.toBSON) {","      // Check the type of the value","      var type = typeof value;","      // Check the key and throw error if it's illegal","      if(key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') {","          // The BSON spec doesn't allow keys with null bytes because keys are","          // null-terminated.","          throw Error(\"key \" + key + \" must not contain null bytes\");","  // Final padding byte for object","  buffer[index++] = 0x00;","  // Final size","  var size = index - startingIndex;","  // Write the size of the object","  buffer[startingIndex++] = size \u0026 0xff;","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = serializeInto;"],"Functions":["var isDate = function isDate(d) ","var isRegExp = function isRegExp(d) ","var serializeString = function(buffer, key, value, index) ","var serializeNumber = function(buffer, key, value, index) ","var serializeUndefined = function(buffer, key, value, index) ","var serializeBoolean = function(buffer, key, value, index) ","var serializeDate = function(buffer, key, value, index) ","var serializeRegExp = function(buffer, key, value, index) ","var serializeBSONRegExp = function(buffer, key, value, index) ","var serializeMinMax = function(buffer, key, value, index) ","var serializeObjectId = function(buffer, key, value, index) ","var serializeBuffer = function(buffer, key, value, index) ","var serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) ","var serializeLong = function(buffer, key, value, index) ","var serializeDouble = function(buffer, key, value, index) ","var serializeFunction = function(buffer, key, value, index, checkKeys, depth) ","  var functionString = value.toString();","  var size = buffer.write(functionString, index + 4, 'utf8') + 1;","var serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) ","    // Serialize the function","    // Get the function string","    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();","    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;","    var functionString = value.code.toString();","    var size = buffer.write(functionString, index + 4, 'utf8') + 1;","var serializeBinary = function(buffer, key, value, index) ","var serializeSymbol = function(buffer, key, value, index) ","var serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions) ","var serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined) ","        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");","      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) ","      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) ","      if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");","      if(object != null \u0026\u0026 typeof object != 'object') throw new Error(\"toBSON function did not return an object\");","        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");","      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) "," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5","var functionCache = BSON.functionCache = };"],"Dependencies":["../float_parser","../float_parser","../long","../map","../double","../timestamp","../objectid","../symbol","../code","../regexp","../min_key","../max_key","../db_ref","../binary"]},{"FileName":"node_modules\\bson\\lib\\bson\\regexp.js","LineCount":30,"CharCount":737,"Comments":["/**"," * A class representation of the BSON RegExp type."," *"," * @class"," * @return {BSONRegExp} A MinKey instance"," */","function BSONRegExp(pattern, options) {","  // Execute","  this._bsontype = 'BSONRegExp';","  // Validate options","  for(var i = 0; i \u003c options.length; i++) {"],"Functions":["function BSONRegExp(pattern, options) "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\symbol.js","LineCount":47,"CharCount":735,"Comments":["/**"," * A class representation of the BSON Symbol type."," *"," * @class"," * @deprecated"," * @param {string} value the string representing the symbol."," * @return {Symbol}"," */","function Symbol(value) {","/**"," * Access the wrapped string value."," *"," * @method"," * @return {String} returns the wrapped string."," */","Symbol.prototype.valueOf = function() {","/**"," * @ignore"," */","Symbol.prototype.toString = function() {","/**"," * @ignore"," */","Symbol.prototype.inspect = function() {","/**"," * @ignore"," */","Symbol.prototype.toJSON = function() {"],"Functions":["function Symbol(value) ","Symbol.prototype.valueOf = function() ","Symbol.prototype.toString = function() ","Symbol.prototype.inspect = function() ","Symbol.prototype.toJSON = function() "],"Dependencies":null},{"FileName":"node_modules\\bson\\lib\\bson\\timestamp.js","LineCount":856,"CharCount":23397,"Comments":["// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**","/**"," * This type is for INTERNAL use in MongoDB only and should not be used in applications."," * The appropriate corresponding type is the JavaScript Date type."," * "," * Defines a Timestamp class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This"," * implementation is derived from TimestampLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Timestamps."," *"," * The internal representation of a Timestamp is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class"," * @param {number} low  the low (signed) 32 bits of the Timestamp."," * @param {number} high the high (signed) 32 bits of the Timestamp."," */","function Timestamp(low, high) {","  /**","   * @type {number}","   * @ignore","   */","  this.low_ = low | 0;  // force into 32 signed bits.","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","  /**","   * @type {number}","   * @ignore","   */","  this.high_ = high | 0;  // force into 32 signed bits.","  this.high_ = high | 0;  // force into 32 signed bits.","};","/**"," * Return the int value."," *"," * @return {number} the value, assuming it is a 32-bit integer."," */","Timestamp.prototype.toInt = function() {","/**"," * Return the Number value."," *"," * @method"," * @return {number} the closest floating-point representation to this value."," */","Timestamp.prototype.toNumber = function() {","/**"," * Return the JSON value."," *"," * @method"," * @return {string} the JSON representation."," */","Timestamp.prototype.toJSON = function() {","/**"," * Return the String value."," *"," * @method"," * @param {number} [opt_radix] the radix in which the text should be written."," * @return {string} the textual representation of this value."," */","Timestamp.prototype.toString = function(opt_radix) {","      // We need to change the Timestamp value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixTimestamp = Timestamp.fromNumber(radix);","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));","/**"," * Return the high 32-bits value."," *"," * @method"," * @return {number} the high 32-bits as a signed value."," */","Timestamp.prototype.getHighBits = function() {","/**"," * Return the low 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as a signed value."," */","Timestamp.prototype.getLowBits = function() {","/**"," * Return the low unsigned 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as an unsigned value."," */","Timestamp.prototype.getLowBitsUnsigned = function() {","/**"," * Returns the number of bits needed to represent the absolute value of this Timestamp."," *"," * @method"," * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp."," */","Timestamp.prototype.getNumBitsAbs = function() {","/**"," * Return whether this value is zero."," *"," * @method"," * @return {boolean} whether this value is zero."," */","Timestamp.prototype.isZero = function() {","/**"," * Return whether this value is negative."," *"," * @method"," * @return {boolean} whether this value is negative."," */","Timestamp.prototype.isNegative = function() {","/**"," * Return whether this value is odd."," *"," * @method"," * @return {boolean} whether this value is odd."," */","Timestamp.prototype.isOdd = function() {","/**"," * Return whether this Timestamp equals the other"," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp equals the other"," */","Timestamp.prototype.equals = function(other) {","/**"," * Return whether this Timestamp does not equal the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp does not equal the other."," */","Timestamp.prototype.notEquals = function(other) {","/**"," * Return whether this Timestamp is less than the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is less than the other."," */","Timestamp.prototype.lessThan = function(other) {","/**"," * Return whether this Timestamp is less than or equal to the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is less than or equal to the other."," */","Timestamp.prototype.lessThanOrEqual = function(other) {","/**"," * Return whether this Timestamp is greater than the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is greater than the other."," */","Timestamp.prototype.greaterThan = function(other) {","/**"," * Return whether this Timestamp is greater than or equal to the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is greater than or equal to the other."," */","Timestamp.prototype.greaterThanOrEqual = function(other) {","/**"," * Compares this Timestamp with the given one."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," */","Timestamp.prototype.compare = function(other) {","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","/**"," * The negation of this value."," *"," * @method"," * @return {Timestamp} the negation of this value."," */","Timestamp.prototype.negate = function() {","/**"," * Returns the sum of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to add to this one."," * @return {Timestamp} the sum of this and the given Timestamp."," */","Timestamp.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns the difference of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to subtract from this."," * @return {Timestamp} the difference of this and the given Timestamp."," */","Timestamp.prototype.subtract = function(other) {","/**"," * Returns the product of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to multiply with this."," * @return {Timestamp} the product of this and the other."," */","Timestamp.prototype.multiply = function(other) {","  // If both Timestamps are small, use float multiplication","  if (this.lessThan(Timestamp.TWO_PWR_24_) \u0026\u0026","  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ \u003e\u003e\u003e 16;","/**"," * Returns this Timestamp divided by the given one."," *"," * @method"," * @param {Timestamp} other Timestamp by which to divide."," * @return {Timestamp} this Timestamp divided by the given one."," */","Timestamp.prototype.div = function(other) {","      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Timestamp.MIN_VALUE)) {","      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Timestamp.ZERO;","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Timestamp.fromNumber(approx);","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","/**"," * Returns this Timestamp modulo the given one."," *"," * @method"," * @param {Timestamp} other Timestamp by which to mod."," * @return {Timestamp} this Timestamp modulo the given one."," */","Timestamp.prototype.modulo = function(other) {","/**"," * The bitwise-NOT of this value."," *"," * @method"," * @return {Timestamp} the bitwise-NOT of this value."," */","Timestamp.prototype.not = function() {","/**"," * Returns the bitwise-AND of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to AND."," * @return {Timestamp} the bitwise-AND of this and the other."," */","Timestamp.prototype.and = function(other) {","/**"," * Returns the bitwise-OR of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to OR."," * @return {Timestamp} the bitwise-OR of this and the other."," */","Timestamp.prototype.or = function(other) {","/**"," * Returns the bitwise-XOR of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to XOR."," * @return {Timestamp} the bitwise-XOR of this and the other."," */","Timestamp.prototype.xor = function(other) {","/**"," * Returns this Timestamp with bits shifted to the left by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the left by the given amount."," */","Timestamp.prototype.shiftLeft = function(numBits) {","/**"," * Returns this Timestamp with bits shifted to the right by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount."," */","Timestamp.prototype.shiftRight = function(numBits) {","/**"," * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits."," */","Timestamp.prototype.shiftRightUnsigned = function(numBits) {","/**"," * Returns a Timestamp representing the given (32-bit) integer value."," *"," * @method"," * @param {number} value the 32-bit integer in question."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromInt = function(value) {","/**"," * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @method"," * @param {number} value the number in question."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromNumber = function(value) {","/**"," * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @method"," * @param {number} lowBits the low 32-bits."," * @param {number} highBits the high 32-bits."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromBits = function(lowBits, highBits) {","/**"," * Returns a Timestamp representation of the given string, written using the given radix."," *"," * @method"," * @param {string} str the textual representation of the Timestamp."," * @param {number} opt_radix the radix in which the text is written."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromString = function(str, opt_radix) {","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**","/**"," * A cache of the Timestamp representations of small integer values."," * @type {Object}"," * @ignore"," */","Timestamp.INT_CACHE_ = {};","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_16_DBL_ = 1 \u003c\u003c 16;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_24_DBL_ = 1 \u003c\u003c 24;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;","/** @type {Timestamp} */","Timestamp.ZERO = Timestamp.fromInt(0);","/** @type {Timestamp} */","Timestamp.ONE = Timestamp.fromInt(1);","/** @type {Timestamp} */","Timestamp.NEG_ONE = Timestamp.fromInt(-1);","/** @type {Timestamp} */","Timestamp.MAX_VALUE =","/** @type {Timestamp} */","Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);","/**"," * @type {Timestamp}"," * @ignore"," */","Timestamp.TWO_PWR_24_ = Timestamp.fromInt(1 \u003c\u003c 24);","/**"," * Expose."," */","module.exports = Timestamp;"],"Functions":[" * values as *signed* integers.  See the from* functions below for more","function Timestamp(low, high) ","Timestamp.prototype.toInt = function() ","Timestamp.prototype.toNumber = function() ","Timestamp.prototype.toJSON = function() ","Timestamp.prototype.toString = function(opt_radix) ","Timestamp.prototype.getHighBits = function() ","Timestamp.prototype.getLowBits = function() ","Timestamp.prototype.getLowBitsUnsigned = function() ","Timestamp.prototype.getNumBitsAbs = function() ","Timestamp.prototype.isZero = function() ","Timestamp.prototype.isNegative = function() ","Timestamp.prototype.isOdd = function() ","Timestamp.prototype.equals = function(other) ","Timestamp.prototype.notEquals = function(other) ","Timestamp.prototype.lessThan = function(other) ","Timestamp.prototype.lessThanOrEqual = function(other) ","Timestamp.prototype.greaterThan = function(other) ","Timestamp.prototype.greaterThanOrEqual = function(other) ","Timestamp.prototype.compare = function(other) ","Timestamp.prototype.negate = function() ","Timestamp.prototype.add = function(other) ","Timestamp.prototype.subtract = function(other) ","Timestamp.prototype.multiply = function(other) ","Timestamp.prototype.div = function(other) ","Timestamp.prototype.modulo = function(other) ","Timestamp.prototype.not = function() ","Timestamp.prototype.and = function(other) ","Timestamp.prototype.or = function(other) ","Timestamp.prototype.xor = function(other) ","Timestamp.prototype.shiftLeft = function(numBits) ","Timestamp.prototype.shiftRight = function(numBits) ","Timestamp.prototype.shiftRightUnsigned = function(numBits) ","Timestamp.fromInt = function(value) ","Timestamp.fromNumber = function(value) ","Timestamp.fromBits = function(lowBits, highBits) ","Timestamp.fromString = function(str, opt_radix) "," * first call to any from* function below."],"Dependencies":null},{"FileName":"node_modules\\bson\\tools\\gleak.js","LineCount":22,"CharCount":641,"Comments":[],"Functions":null,"Dependencies":["gleak"]},{"FileName":"node_modules\\buffer-equal-constant-time\\index.js","LineCount":42,"CharCount":1004,"Comments":["/*jshint node:true */","'use strict';","var Buffer = require('buffer').Buffer; // browserify","var SlowBuffer = require('buffer').SlowBuffer;","  // shortcutting on type is necessary for correctness","  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {","  // buffer sizes should be well-known information, so despite this","  // shortcutting, it doesn't leak any information about the *contents* of the","  // buffers.","  if (a.length !== b.length) {","    /*jshint bitwise:false */","    c |= a[i] ^ b[i]; // XOR","    c |= a[i] ^ b[i]; // XOR","  }"],"Functions":["function bufferEq(a, b) ","bufferEq.install = function() ","  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) ","bufferEq.restore = function() "],"Dependencies":["buffer","buffer"]},{"FileName":"node_modules\\buffer-equal-constant-time\\test.js","LineCount":43,"CharCount":971,"Comments":["/*jshint node:true */","'use strict';"],"Functions":["describe('buffer-equal-constant-time', function() ","  describe('bufferEq', function() ","    it('says a == b', function() ","    it('says a != c', function() ","  describe('install/restore', function() ","    before(function() ","    after(function() ","    it('installed an .equal method', function() ","    it('infected existing Buffers', function() "],"Dependencies":["./index","assert","buffer"]},{"FileName":"node_modules\\bytes\\index.js","LineCount":158,"CharCount":3208,"Comments":["/*!"," * bytes"," * Copyright(c) 2012-2014 TJ Holowaychuk"," * Copyright(c) 2015 Jed Watson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","module.exports = bytes;","/**"," * Module variables."," * @private"," */","","var formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;","// TODO: use is-finite module?","var numberIsFinite = Number.isFinite || function (v) { return typeof v === 'number' \u0026\u0026 isFinite(v); };","/**"," * Convert the given value in bytes into a string or parse to string to an integer in bytes."," *"," * @param {string|number} value"," * @param {{"," *  case: [string],"," *  decimalPlaces: [number]"," *  fixedDecimals: [boolean]"," *  thousandsSeparator: [string]"," *  unitSeparator: [string]"," *  }} [options] bytes options."," *"," * @returns {string|number|null}"," */","","function bytes(value, options) {","/**"," * Format the given value in bytes into a string."," *"," * If the value is negative, it is kept as such. If it is a float,"," * it is rounded."," *"," * @param {number} value"," * @param {object} [options]"," * @param {number} [options.decimalPlaces=2]"," * @param {number} [options.fixedDecimals=false]"," * @param {string} [options.thousandsSeparator=]"," * @param {string} [options.unitSeparator=]"," *"," * @returns {string|null}"," * @public"," */","","function format(value, options) {","/**"," * Parse the string value into an integer in bytes."," *"," * If no unit is given, it is assumed the value is in bytes."," *"," * @param {number|string} val"," *"," * @returns {number|null}"," * @public"," */","","function parse(val) {","  // Test if the string passed is valid","  var results = parseRegExp.exec(val);","    // Nothing could be extracted from the given string","    floatValue = parseInt(val, 10);","    // Retrieve the value and the unit","    floatValue = parseFloat(results[1]);"],"Functions":["var numberIsFinite = Number.isFinite || function (v)  return typeof v === 'number' \u0026\u0026 isFinite(v); };","function bytes(value, options) ","function format(value, options) ","function parse(val) "],"Dependencies":null},{"FileName":"node_modules\\camelcase\\index.js","LineCount":28,"CharCount":523,"Comments":[],"Functions":["module.exports = function () ","\tvar str = [].map.call(arguments, function (str) ","\t}).filter(function (str) ","\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) "],"Dependencies":null},{"FileName":"node_modules\\camelcase-keys\\index.js","LineCount":10,"CharCount":193,"Comments":[],"Functions":["module.exports = function (obj) ","\treturn mapObj(obj, function (key, val) "],"Dependencies":["map-obj","camelcase"]},{"FileName":"node_modules\\concat-stream\\index.js","LineCount":137,"CharCount":3444,"Comments":[],"Functions":["function ConcatStream(opts, cb) ","  if (typeof opts === 'function') ","  if (cb) this.on('finish', function ()  cb(this.getBody()) })","ConcatStream.prototype._write = function(chunk, enc, next) ","ConcatStream.prototype.inferEncoding = function (buff) ","ConcatStream.prototype.getBody = function () ","var isArray = Array.isArray || function (arr) ","function isArrayish (arr) ","function stringConcat (parts) ","function bufferConcat (parts) ","    || (p \u0026\u0026 typeof p.subarray === 'function')) ","function arrayConcat (parts) ","function u8Concat (parts) "],"Dependencies":["readable-stream","inherits","typedarray"]},{"FileName":"node_modules\\content-disposition\\index.js","LineCount":446,"CharCount":9763,"Comments":["/*!"," * content-disposition"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," */","","module.exports = contentDisposition","/**"," * Module dependencies."," */","","var basename = require('path').basename","/**"," * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")"," */","","var encodeUriAttrCharRegExp = /[\\x00-\\x20\"'\\(\\)*,\\/:;\u003c=\u003e?@\\[\\\\\\]\\{\\}\\x7f]/g","/**"," * RegExp to match percent encoding escape."," */","","var hexEscapeRegExp = /%[0-9A-Fa-f]{2}/","/**"," * RegExp to match non-latin1 characters."," */","","var nonLatin1RegExp = /[^\\x20-\\x7e\\xa0-\\xff]/g","/**"," * RegExp to match quoted-pair in RFC 2616"," *"," * quoted-pair = \"\\\" CHAR"," * CHAR        = \u003cany US-ASCII character (octets 0 - 127)\u003e"," */","","var qescRegExp = /\\\\([\\u0000-\\u007f])/g;","/**"," * RegExp to match chars that must be quoted-pair in RFC 2616"," */","","var quoteRegExp = /([\\\\\"])/g","/**"," * RegExp for various RFC 2616 grammar"," *"," * parameter     = token \"=\" ( token | quoted-string )"," * token         = 1*\u003cany CHAR except CTLs or separators\u003e"," * separators    = \"(\" | \")\" | \"\u003c\" | \"\u003e\" | \"@\""," *               | \",\" | \";\" | \":\" | \"\\\" | \u003c\"\u003e"," *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\""," *               | \"{\" | \"}\" | SP | HT"," * quoted-string = ( \u003c\"\u003e *(qdtext | quoted-pair ) \u003c\"\u003e )"," * qdtext        = \u003cany TEXT except \u003c\"\u003e\u003e"," * quoted-pair   = \"\\\" CHAR"," * CHAR          = \u003cany US-ASCII character (octets 0 - 127)\u003e"," * TEXT          = \u003cany OCTET except CTLs, but including LWS\u003e"," * LWS           = [CRLF] 1*( SP | HT )"," * CRLF          = CR LF"," * CR            = \u003cUS-ASCII CR, carriage return (13)\u003e"," * LF            = \u003cUS-ASCII LF, linefeed (10)\u003e"," * SP            = \u003cUS-ASCII SP, space (32)\u003e"," * HT            = \u003cUS-ASCII HT, horizontal-tab (9)\u003e"," * CTL           = \u003cany US-ASCII control character (octets 0 - 31) and DEL (127)\u003e"," * OCTET         = \u003cany 8-bit sequence of data\u003e"," */","","var paramRegExp = /; *([!#$%\u0026'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%\u0026'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g","/**"," * RegExp for various RFC 5987 grammar"," *"," * ext-value     = charset  \"'\" [ language ] \"'\" value-chars"," * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset"," * mime-charset  = 1*mime-charsetc"," * mime-charsetc = ALPHA / DIGIT"," *               / \"!\" / \"#\" / \"$\" / \"%\" / \"\u0026\""," *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\""," *               / \"{\" / \"}\" / \"~\""," * language      = ( 2*3ALPHA [ extlang ] )"," *               / 4ALPHA"," *               / 5*8ALPHA"," * extlang       = *3( \"-\" 3ALPHA )"," * value-chars   = *( pct-encoded / attr-char )"," * pct-encoded   = \"%\" HEXDIG HEXDIG"," * attr-char     = ALPHA / DIGIT"," *               / \"!\" / \"#\" / \"$\" / \"\u0026\" / \"+\" / \"-\" / \".\""," *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\""," */","","var extValueRegExp = /^([A-Za-z0-9!#$%\u0026+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$\u0026+\\-\\.^_`|~])+)$/","/**"," * RegExp for various RFC 6266 grammar"," *"," * disposition-type = \"inline\" | \"attachment\" | disp-ext-type"," * disp-ext-type    = token"," * disposition-parm = filename-parm | disp-ext-parm"," * filename-parm    = \"filename\" \"=\" value"," *                  | \"filename*\" \"=\" ext-value"," * disp-ext-parm    = token \"=\" value"," *                  | ext-token \"=\" ext-value"," * ext-token        = \u003cthe characters in token, followed by \"*\"\u003e"," */","","var dispositionTypeRegExp = /^([!#$%\u0026'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *(?:$|;)/","/**"," * Create an attachment Content-Disposition header."," *"," * @param {string} [filename]"," * @param {object} [options]"," * @param {string} [options.type=attachment]"," * @param {string|boolean} [options.fallback=true]"," * @return {string}"," * @api public"," */","","function contentDisposition(filename, options) {","  // get type","  var type = opts.type || 'attachment'","  // get parameters","  var params = createparams(filename, opts.fallback)","  // format into string","  return format(new ContentDisposition(type, params))","/**"," * Create parameters object from filename and fallback."," *"," * @param {string} [filename]"," * @param {string|boolean} [fallback=true]"," * @return {object}"," * @api private"," */","","function createparams(filename, fallback) {","  // fallback defaults to true","  if (fallback === undefined) {","  // restrict to file base name","  var name = basename(filename)","  // determine if name is suitable for quoted string","  var isQuotedString = textRegExp.test(name)","  // generate fallback name","  var fallbackName = typeof fallback !== 'string'","  // set extended filename parameter","  if (hasFallback || !isQuotedString || hexEscapeRegExp.test(name)) {","  // set filename parameter","  if (isQuotedString || hasFallback) {","/**"," * Format object to Content-Disposition header."," *"," * @param {object} obj"," * @param {string} obj.type"," * @param {object} [obj.parameters]"," * @return {string}"," * @api private"," */","","function format(obj) {","  // start with normalized type","  var string = String(type).toLowerCase()","  // append parameters","  if (parameters \u0026\u0026 typeof parameters === 'object') {","/**"," * Decode a RFC 6987 field value (gracefully)."," *"," * @param {string} str"," * @return {string}"," * @api private"," */","","function decodefield(str) {","  // to binary string","  var binary = encoded.replace(hexEscapeReplaceRegExp, pdecode)","/**"," * Get ISO-8859-1 version of string."," *"," * @param {string} val"," * @return {string}"," * @api private"," */","","function getlatin1(val) {","  // simple Unicode -\u003e ISO-8859-1 transformation","  return String(val).replace(nonLatin1RegExp, '?')","/**"," * Parse Content-Disposition header string."," *"," * @param {string} string"," * @return {object}"," * @api private"," */","","function parse(string) {","  // normalize type","  var index = match[0].length","  // calculate index to start at","  index = paramRegExp.lastIndex = match[0].substr(-1) === ';'","  // match parameters","  while (match = paramRegExp.exec(string)) {","      // decode extended value","      key = key.slice(0, -1)","      // overwrite existing value","      params[key] = value","      // remove quotes and escapes","      value = value","/**"," * Percent decode a single character."," *"," * @param {string} str"," * @param {string} hex"," * @return {string}"," * @api private"," */","","function pdecode(str, hex) {","/**"," * Percent encode a single character."," *"," * @param {string} char"," * @return {string}"," * @api private"," */","","function pencode(char) {","/**"," * Quote a string for HTTP."," *"," * @param {string} val"," * @return {string}"," * @api private"," */","","function qstring(val) {","/**"," * Encode a Unicode string for HTTP (RFC 5987)."," *"," * @param {string} val"," * @return {string}"," * @api private"," */","","function ustring(val) {","  // percent encode as UTF-8","  var encoded = encodeURIComponent(str)","/**"," * Class for parsed Content-Disposition header for v8 optimization"," */","","function ContentDisposition(type, parameters) {"],"Functions":["function contentDisposition(filename, options) ","function createparams(filename, fallback) ","function format(obj) ","function decodefield(str) ","function getlatin1(val) ","function parse(string) ","function pdecode(str, hex) ","function pencode(char) ","function qstring(val) ","function ustring(val) ","function ContentDisposition(type, parameters) "],"Dependencies":["path"]},{"FileName":"node_modules\\content-type\\index.js","LineCount":217,"CharCount":4476,"Comments":["/*!"," * content-type"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1"," *"," * parameter     = token \"=\" ( token / quoted-string )"," * token         = 1*tchar"," * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"\u0026\" / \"'\" / \"*\""," *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\""," *               / DIGIT / ALPHA"," *               ; any VCHAR, except delimiters"," * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE"," * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text"," * obs-text      = %x80-FF"," * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )"," */","var paramRegExp = /; *([!#$%\u0026'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%\u0026'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+) */g","/**"," * RegExp to match quoted-pair in RFC 7230 sec 3.2.6"," *"," * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )"," * obs-text    = %x80-FF"," */","var qescRegExp = /\\\\([\\u000b\\u0020-\\u00ff])/g","/**"," * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6"," */","var quoteRegExp = /([\\\\\"])/g","/**"," * RegExp to match type in RFC 6838"," *"," * media-type = type \"/\" subtype"," * type       = token"," * subtype    = token"," */","var typeRegExp = /^[!#$%\u0026'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+\\/[!#$%\u0026'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+$/","/**"," * Module exports."," * @public"," */","","exports.format = format","/**"," * Format object to media type."," *"," * @param {object} obj"," * @return {string}"," * @public"," */","","function format(obj) {","  // append parameters","  if (parameters \u0026\u0026 typeof parameters === 'object') {","/**"," * Parse media type to object."," *"," * @param {string|object} string"," * @return {Object}"," * @public"," */","","function parse(string) {","    // support req/res-like objects as argument","    string = getcontenttype(string)","      // remove quotes and escapes","      value = value","/**"," * Get content-type from req/res objects."," *"," * @param {object}"," * @return {Object}"," * @private"," */","","function getcontenttype(obj) {","    // res-like","    return obj.getHeader('content-type')","    // req-like","    return obj.headers \u0026\u0026 obj.headers['content-type']","/**"," * Quote a string if necessary."," *"," * @param {string} val"," * @return {string}"," * @private"," */","","function qstring(val) {","  // no need to quote tokens","  if (tokenRegExp.test(str)) {","/**"," * Class to represent a content type."," * @private"," */","function ContentType(type) {"],"Functions":["function format(obj) ","function parse(string) ","function getcontenttype(obj) ","  if (typeof obj.getHeader === 'function') ","function qstring(val) ","function ContentType(type) "],"Dependencies":null},{"FileName":"node_modules\\cookie\\index.js","LineCount":196,"CharCount":3774,"Comments":["/*!"," * cookie"," * Copyright(c) 2012-2014 Roman Shtylman"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","exports.parse = parse;","/**"," * Module variables."," * @private"," */","","var decode = decodeURIComponent;","/**"," * RegExp to match field-content in RFC 7230 sec 3.2"," *"," * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]"," * field-vchar   = VCHAR / obs-text"," * obs-text      = %x80-FF"," */","","var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;","/**"," * Parse a cookie header."," *"," * Parse the given cookie header string into an object"," * The object has the various cookies as keys(names) =\u003e values"," *"," * @param {string} str"," * @param {object} [options]"," * @return {object}"," * @public"," */","","function parse(str, options) {","    // skip things that don't look like key=value","    if (eq_idx \u003c 0) {","    // quoted values","    if ('\"' == val[0]) {","    // only assign once","    if (undefined == obj[key]) {","/**"," * Serialize data into a cookie header."," *"," * Serialize the a name value pair into a cookie string suitable for"," * http headers. An optional options object specified cookie parameters."," *"," * serialize('foo', 'bar', { httpOnly: true })"," *   =\u003e \"foo=bar; httpOnly\""," *"," * @param {string} name"," * @param {string} val"," * @param {object} [options]"," * @return {string}"," * @public"," */","","function serialize(name, val, options) {","/**"," * Try decoding a string using a decoding function."," *"," * @param {string} str"," * @param {function} decode"," * @private"," */","","function tryDecode(str, decode) {"],"Functions":["function parse(str, options) ","function serialize(name, val, options) ","  if (typeof enc !== 'function') ","    if (typeof opt.expires.toUTCString !== 'function') "," * Try decoding a string using a decoding function."," * @param function} decode","function tryDecode(str, decode) "],"Dependencies":null},{"FileName":"node_modules\\cookie-signature\\index.js","LineCount":52,"CharCount":1179,"Comments":["/**"," * Module dependencies."," */","","var crypto = require('crypto');","/**"," * Sign the given `val` with `secret`."," *"," * @param {String} val"," * @param {String} secret"," * @return {String}"," * @api private"," */","","exports.sign = function(val, secret){","/**"," * Unsign and decode the given `val` with `secret`,"," * returning `false` if the signature is invalid."," *"," * @param {String} val"," * @param {String} secret"," * @return {String|Boolean}"," * @api private"," */","","exports.unsign = function(val, secret){","/**"," * Private"," */","","function sha1(str){"],"Functions":["exports.sign = function(val, secret)","exports.unsign = function(val, secret)","function sha1(str)"],"Dependencies":["crypto"]},{"FileName":"node_modules\\core-util-is\\lib\\util.js","LineCount":108,"CharCount":2914,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// NOTE: These type checking functions intentionally don't use `instanceof`","// because it is fragile and can be easily faked with `Object.create()`.","","function isArray(arg) {","         typeof arg === 'symbol' ||  // ES6 symbol","         typeof arg === 'undefined';"],"Functions":["// NOTE: These type checking functions intentionally don't use `instanceof`","function isArray(arg) ","function isBoolean(arg) ","function isNull(arg) ","function isNullOrUndefined(arg) ","function isNumber(arg) ","function isString(arg) ","function isSymbol(arg) ","function isUndefined(arg) ","function isRegExp(re) ","function isObject(arg) ","function isDate(d) ","function isError(e) ","function isFunction(arg) ","  return typeof arg === 'function';","function isPrimitive(arg) ","function objectToString(o) "],"Dependencies":null},{"FileName":"node_modules\\core-util-is\\test.js","LineCount":69,"CharCount":2033,"Comments":[],"Functions":["assert.equal(t.isFunction(function() }), true);"],"Dependencies":["tap","./lib/util"]},{"FileName":"node_modules\\debug\\browser.js","LineCount":169,"CharCount":3595,"Comments":["/**"," * This is the web browser implementation of `debug()`."," *"," * Expose `debug()` as the module."," */","","exports = module.exports = require('./debug');","/**"," * Colors."," */","","exports.colors = [","/**"," * Currently only WebKit-based Web Inspectors, Firefox \u003e= v31,"," * and the Firebug extension (any Firefox version) are known"," * to support \"%c\" CSS customizations."," *"," * TODO: add a `localStorage` variable to explicitly enable/disable colors"," */","","function useColors() {","  // is webkit? http://stackoverflow.com/a/16459606/376773","  return ('WebkitAppearance' in document.documentElement.style) ||","    // is firebug? http://stackoverflow.com/a/398120/376773","    (window.console \u0026\u0026 (console.firebug || (console.exception \u0026\u0026 console.table))) ||","    // is firefox \u003e= v31?","    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages","    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) \u0026\u0026 parseInt(RegExp.$1, 10) \u003e= 31);","/**"," * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default."," */","","exports.formatters.j = function(v) {","/**"," * Colorize log arguments if enabled."," *"," * @api public"," */","","function formatArgs() {","  // the final \"%c\" is somewhat tricky, because there could be other","  // arguments passed either before or after the %c, so we need to","  // figure out the correct index to insert the CSS into","  var index = 0;","      // we only are interested in the *last* %c","      // (the user may have provided their own)","      lastC = index;","/**"," * Invokes `console.log()` when available."," * No-op when `console.log` is not a \"function\"."," *"," * @api public"," */","","function log() {","  // this hackery is required for IE8/9, where","  // the `console.log` function doesn't have 'apply'","  return 'object' === typeof console","/**"," * Save `namespaces`."," *"," * @param {String} namespaces"," * @api private"," */","","function save(namespaces) {","/**"," * Load `namespaces`."," *"," * @return {String} returns the previously persisted debug modes"," * @api private"," */","","function load() {","/**"," * Enable namespaces listed in `localStorage.debug` initially."," */","","exports.enable(load());","/**"," * Localstorage attempts to return the localstorage."," *"," * This is necessary because safari throws"," * when a user disables cookies/localstorage"," * and you attempt to access it."," *"," * @return {LocalStorage}"," * @api private"," */","","function localstorage(){"],"Functions":["function useColors() ","exports.formatters.j = function(v) ","function formatArgs() ","  args[0].replace(/%[a-z%]/g, function(match) "," * No-op when `console.log` is not a \"function\".","function log() ","  // the `console.log` function doesn't have 'apply'","function save(namespaces) ","function load() ","function localstorage()"],"Dependencies":["./debug"]},{"FileName":"node_modules\\debug\\debug.js","LineCount":198,"CharCount":3899,"Comments":["/**"," * This is the common logic for both the Node.js and web browser"," * implementations of `debug()`."," *"," * Expose `debug()` as the module."," */","","exports = module.exports = debug;","/**"," * The currently active debug mode names, and names to skip."," */","","exports.names = [];","/**"," * Map of special \"%n\" handling functions, for the debug \"format\" argument."," *"," * Valid key names are a single, lowercased letter, i.e. \"n\"."," */","","exports.formatters = {};","/**"," * Previously assigned color."," */","","var prevColor = 0;","/**"," * Previous log timestamp."," */","","var prevTime;","/**"," * Select a color."," *"," * @return {Number}"," * @api private"," */","","function selectColor() {","/**"," * Create a debugger with the given `namespace`."," *"," * @param {String} namespace"," * @return {Function}"," * @api public"," */","","function debug(namespace) {","  // define the `disabled` version","  function disabled() {","  // define the `enabled` version","  function enabled() {","    // set `diff` timestamp","    var curr = +new Date();","    // add the `color` if not set","    if (null == self.useColors) self.useColors = exports.useColors();","      // anything else let's inspect with %o","      args = ['%o'].concat(args);","    // apply any `formatters` transformations","    var index = 0;","      // if we encounter an escaped % then don't increase the array index","      if (match === '%%') return match;","        // now we need to remove `args[index]` since it's inlined in the `format`","        args.splice(index, 1);","/**"," * Enables a debug mode by namespaces. This can include modes"," * separated by a colon and wildcards."," *"," * @param {String} namespaces"," * @api public"," */","","function enable(namespaces) {","    if (!split[i]) continue; // ignore empty strings","    namespaces = split[i].replace(/\\*/g, '.*?');","/**"," * Disable debug output."," *"," * @api public"," */","","function disable() {","/**"," * Returns true if the given mode name is enabled, false otherwise."," *"," * @param {String} name"," * @return {Boolean}"," * @api public"," */","","function enabled(name) {","/**"," * Coerce `val`."," *"," * @param {Mixed} val"," * @return {Mixed}"," * @api private"," */","","function coerce(val) {"],"Functions":[" * Map of special \"%n\" handling functions, for the debug \"format\" argument.","function selectColor() ","function debug(namespace) ","  function disabled() ","  function enabled() ","    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) ","      if ('function' === typeof formatter) ","    if ('function' === typeof exports.formatArgs) ","function enable(namespaces) ","function disable() ","function enabled(name) ","function coerce(val) "],"Dependencies":["ms"]},{"FileName":"node_modules\\debug\\node.js","LineCount":210,"CharCount":4549,"Comments":["/**"," * Module dependencies."," */","","var tty = require('tty');","/**"," * This is the Node.js implementation of `debug()`."," *"," * Expose `debug()` as the module."," */","","exports = module.exports = require('./debug');","/**"," * Colors."," */","","exports.colors = [6, 2, 3, 4, 5, 1];","/**"," * The file descriptor to write the `debug()` calls to."," * Set the `DEBUG_FD` env variable to override with another value. i.e.:"," *"," *   $ DEBUG_FD=3 node script.js 3\u003edebug.log"," */","","var fd = parseInt(process.env.DEBUG_FD, 10) || 2;","/**"," * Is stdout a TTY? Colored output is enabled when `true`."," */","","function useColors() {","/**"," * Map %o to `util.inspect()`, since Node doesn't do that out of the box."," */","","var inspect = (4 === util.inspect.length ?","  // node \u003c= 0.8.x","  function (v, colors) {","  // node \u003e 0.8.x","  function (v, colors) {","/**"," * Adds ANSI color escape codes if enabled."," *"," * @api public"," */","","function formatArgs() {","/**"," * Invokes `console.error()` with the specified arguments."," */","","function log() {","/**"," * Save `namespaces`."," *"," * @param {String} namespaces"," * @api private"," */","","function save(namespaces) {","    // If you set a process.env field to null or undefined, it gets cast to the","    // string 'null' or 'undefined'. Just delete instead.","    delete process.env.DEBUG;","/**"," * Load `namespaces`."," *"," * @return {String} returns the previously persisted debug modes"," * @api private"," */","","function load() {","/**"," * Copied from `node/src/node.js`."," *"," * XXX: It's lame that node doesn't expose this API out-of-the-box. It also"," * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame."," */","","function createWritableStdioStream (fd) {","  // Note stream._type is used for test-module-load-list.js","","  switch (tty_wrap.guessHandleType(fd)) {","      // Hack to have stream not keep the event loop alive.","      // See https://github.com/joyent/node/issues/1726","      if (stream._handle \u0026\u0026 stream._handle.unref) {","      // FIXME Should probably have an option in net.Socket to create a","      // stream from an existing fd which is writable only. But for now","      // we'll just add this hack and set the `readable` member to false.","      // Test: ./node test/fixtures/echo.js \u003c /etc/passwd","      stream.readable = false;","      // FIXME Hack to have stream not keep the event loop alive.","      // See https://github.com/joyent/node/issues/1726","      if (stream._handle \u0026\u0026 stream._handle.unref) {","      // Probably an error on in uv_guess_handle()","      throw new Error('Implement me. Unknown stream file type!');","  // For supporting legacy API we put the FD here.","  stream.fd = fd;","/**"," * Enable namespaces listed in `process.env.DEBUG` initially."," */","","exports.enable(load());"],"Functions":["function useColors() ","  function (v, colors) ","  function (v, colors) ","exports.formatters.o = function(v) ","function formatArgs() ","function log() ","function save(namespaces) ","function load() ","function createWritableStdioStream (fd) "],"Dependencies":["tty","util","./debug","fs","net"]},{"FileName":"node_modules\\depd\\index.js","LineCount":522,"CharCount":10006,"Comments":["/*!"," * depd"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var callSiteToString = require('./lib/compat').callSiteToString","/**"," * Module exports."," */","","module.exports = depd","/**"," * Get the path to base files on."," */","","var basePath = process.cwd()","/**"," * Determine if namespace is contained in the string."," */","","function containsNamespace(str, namespace) {","    // namespace contained","    if (str === '*' || str.toLowerCase() === namespace) {","/**"," * Convert a data descriptor to accessor descriptor."," */","","function convertDataDescriptorToAccessor(obj, prop, message) {","/**"," * Create arguments string to keep arity."," */","","function createArgumentsString(arity) {","/**"," * Create stack string from stack."," */","","function createStackString(stack) {","/**"," * Create deprecate for namespace in caller."," */","","function depd(namespace) {","    // call to self as log","    log.call(deprecate, message)","/**"," * Determine if namespace is ignored."," */","","function isignored(namespace) {","  /* istanbul ignore next: tested in a child processs */","  if (process.noDeprecation) {","    // --no-deprecation support","    return true","  // namespace ignored","  return containsNamespace(str, namespace)","/**"," * Determine if namespace is traced."," */","","function istraced(namespace) {","  /* istanbul ignore next: tested in a child processs */","  if (process.traceDeprecation) {","    // --trace-deprecation support","    return true","  // namespace traced","  return containsNamespace(str, namespace)","/**"," * Display deprecation message."," */","","function log(message, site) {","  // abort early if no destination","  if (!haslisteners \u0026\u0026 this._ignored) {","    // provided site","    callSite = callSiteLocation(stack[1])","    // get call site","    i = 2","  // get caller of deprecated thing in relation to file","  for (; i \u003c stack.length; i++) {","    // already warned","    return","  // generate automatic message from call site","  if (!message) {","  // emit deprecation if listeners exist","  if (haslisteners) {","  // format and write message","  var format = process.stderr.isTTY","/**"," * Get call site location as array."," */","","function callSiteLocation(callSite) {","/**"," * Generate a default message from the site."," */","","function defaultMessage(site) {","  // make useful anonymous name","  if (!funcName) {","  // ignore useless type name","  if (typeName === 'Object') {","  // make useful type name","  if (typeName === 'Function') {","/**"," * Format deprecation message without color."," */","","function formatPlain(msg, caller, stack) {","  // add stack trace","  if (this._traced) {","/**"," * Format deprecation message with color."," */","","function formatColor(msg, caller, stack) {","  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' // bold cyan","    + ' \\x1b[33;1mdeprecated\\x1b[22;39m' // bold yellow","    + ' \\x1b[0m' + msg + '\\x1b[39m' // reset","","  // add stack trace","  if (this._traced) {","      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan","    }","    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan","  }","/**"," * Format call site location."," */","","function formatLocation(callSite) {","/**"," * Get the stack as array of call sites."," */","","function getStack() {","  // capture the stack","  Error.captureStackTrace(obj)","  // slice this function off the top","  var stack = obj.stack.slice(1)","/**"," * Capture call site stack from v8."," */","","function prepareObjectStackTrace(obj, stack) {","/**"," * Return a wrapped function in a deprecation message."," */","","function wrapfunction(fn, message) {","/**"," * Wrap property in a deprecation message."," */","","function wrapproperty(obj, prop, message) {","  // set site name","  site.name = prop","  // convert data descriptor","  if ('value' in descriptor) {","  // wrap getter","  if (typeof get === 'function') {","  // wrap setter","  if (typeof set === 'function') {","/**"," * Create DeprecationError for deprecation"," */","","function DeprecationError(namespace, message, stack) {","      // prepare stack trace","      return stackString = createStackString.call(this, stack)"],"Functions":["function containsNamespace(str, namespace) ","function convertDataDescriptorToAccessor(obj, prop, message) ","  descriptor.get = function getter()  return value }","    descriptor.set = function setter(val)  return value = val }","function createArgumentsString(arity) ","function createStackString(stack) ","function depd(namespace) ","  function deprecate(message) ","  deprecate.function = wrapfunction","function isignored(namespace) ","function istraced(namespace) ","function log(message, site) ","function callSiteLocation(callSite) ","function defaultMessage(site) ","function formatPlain(msg, caller, stack) ","function formatColor(msg, caller, stack) ","function formatLocation(callSite) ","function getStack() ","  // slice this function off the top","function prepareObjectStackTrace(obj, stack) "," * Return a wrapped function in a deprecation message.","function wrapfunction(fn, message) ","  if (typeof fn !== 'function') ","    throw new TypeError('argument fn must be a function')","  var deprecatedfn = eval('(function (' + args + ') \\n'","function wrapproperty(obj, prop, message) ","  if (!obj || (typeof obj !== 'object' \u0026\u0026 typeof obj !== 'function')) ","  if (typeof get === 'function') ","    descriptor.get = function getter() ","  if (typeof set === 'function') ","    descriptor.set = function setter() ","function DeprecationError(namespace, message, stack) ","    get: function () ","    set: function setter(val) "],"Dependencies":["./lib/compat","./lib/compat","path"]},{"FileName":"node_modules\\depd\\lib\\browser\\index.js","LineCount":80,"CharCount":1439,"Comments":["/*!"," * depd"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = depd","/**"," * Create deprecate for namespace in caller."," */","","function depd(namespace) {","    // no-op in browser","  }","/**"," * Return a wrapped function in a deprecation message."," *"," * This is a no-op version of the wrapper, which does nothing but call"," * validation."," */","","function wrapfunction(fn, message) {","/**"," * Wrap property in a deprecation message."," *"," * This is a no-op version of the wrapper, which does nothing but call"," * validation."," */","","function wrapproperty(obj, prop, message) {"],"Functions":["function depd(namespace) ","  function deprecate(message) ","  deprecate.function = wrapfunction"," * Return a wrapped function in a deprecation message.","function wrapfunction(fn, message) ","  if (typeof fn !== 'function') ","    throw new TypeError('argument fn must be a function')","function wrapproperty(obj, prop, message) ","  if (!obj || (typeof obj !== 'object' \u0026\u0026 typeof obj !== 'function')) "],"Dependencies":null},{"FileName":"node_modules\\depd\\lib\\compat\\buffer-concat.js","LineCount":36,"CharCount":471,"Comments":["/*!"," * depd"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," */","","module.exports = bufferConcat","/**"," * Concatenate an array of Buffers."," */","","function bufferConcat(bufs) {"],"Functions":["function bufferConcat(bufs) "],"Dependencies":null},{"FileName":"node_modules\\depd\\lib\\compat\\callsite-tostring.js","LineCount":104,"CharCount":2123,"Comments":["/*!"," * depd"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," */","","module.exports = callSiteToString","/**"," * Format a CallSite file location to a string."," */","","function callSiteFileLocation(callSite) {","/**"," * Format a CallSite to a string."," */","","function callSiteToString(callSite) {","/**"," * Get constructor name of reviver."," */","","function getConstructorName(obj) {"],"Functions":["function callSiteFileLocation(callSite) ","function callSiteToString(callSite) ","  var functionName = callSite.getFunctionName()","    if (functionName) ","      if (typeName \u0026\u0026 functionName.indexOf(typeName) !== 0) ","      line += functionName","      if (methodName \u0026\u0026 functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) ","    line += 'new ' + (functionName || '\u003canonymous\u003e')","  } else if (functionName) ","    line += functionName","function getConstructorName(obj) "],"Dependencies":null},{"FileName":"node_modules\\depd\\lib\\compat\\event-listener-count.js","LineCount":23,"CharCount":315,"Comments":["/*!"," * depd"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = eventListenerCount","/**"," * Get the count of listeners on an event emitter of a specific type."," */","","function eventListenerCount(emitter, type) {"],"Functions":["function eventListenerCount(emitter, type) "],"Dependencies":null},{"FileName":"node_modules\\depd\\lib\\compat\\index.js","LineCount":85,"CharCount":1490,"Comments":["/*!"," * depd"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var Buffer = require('buffer')","/**"," * Module exports."," * @public"," */","","lazyProperty(module.exports, 'bufferConcat', function bufferConcat() {","  // capture the stack","  Error.captureStackTrace(obj)","  // slice the stack","  var stack = obj.stack.slice()","/**"," * Define a lazy property."," */","","function lazyProperty(obj, prop, getter) {","/**"," * Call toString() on the obj"," */","","function toString(obj) {"],"Functions":["lazyProperty(module.exports, 'bufferConcat', function bufferConcat() ","lazyProperty(module.exports, 'callSiteToString', function callSiteToString() ","  function prepareObjectStackTrace(obj, stack) ","lazyProperty(module.exports, 'eventListenerCount', function eventListenerCount() ","function lazyProperty(obj, prop, getter) ","  function get() ","function toString(obj) "],"Dependencies":["buffer","events"]},{"FileName":"node_modules\\destroy\\index.js","LineCount":76,"CharCount":968,"Comments":["/*!"," * destroy"," * Copyright(c) 2014 Jonathan Ong"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var ReadStream = require('fs').ReadStream","/**"," * Module exports."," * @public"," */","","module.exports = destroy","/**"," * Destroy a stream."," *"," * @param {object} stream"," * @public"," */","","function destroy(stream) {","/**"," * Destroy a ReadStream."," *"," * @param {object} stream"," * @private"," */","","function destroyReadStream(stream) {","    // node.js core bug work-around","    stream.on('open', onOpenClose)","/**"," * On open handler to close stream."," * @private"," */","","function onOpenClose() {","    // actually close down the fd","    this.close()"],"Functions":["function destroy(stream) ","  if (typeof stream.destroy === 'function') ","function destroyReadStream(stream) ","  if (typeof stream.close === 'function') ","function onOpenClose() "],"Dependencies":["fs","stream"]},{"FileName":"node_modules\\ecdsa-sig-formatter\\src\\ecdsa-sig-formatter.js","LineCount":181,"CharCount":4709,"Comments":["\t// the DER encoded param should at most be the param size, plus a padding","\t// zero, since due to being a signed integer","\tvar maxEncodedParamLength = paramBytes + 1;","\t\t// Bit 8 has value \"0\"","\t\t// bits 7-1 give the length.","\t\tdst[offset++] = rsBytes;","\t\t// Bit 8 of first octet has value \"1\"","\t\t// bits 7-1 give the number of additional length octets.","\t\tdst[offset++] = MAX_OCTET\t| 1;","\t\t// length, base 256","\t\tdst[offset++] = rsBytes \u0026 0xff;"],"Functions":["function signatureAsBuffer(signature) ","function derToJose(signature, alg) ","function countPadding(buf, start, stop) ","function joseToDer(signature, alg) "],"Dependencies":["base64-url","./param-bytes-for-alg"]},{"FileName":"node_modules\\ecdsa-sig-formatter\\src\\param-bytes-for-alg.js","LineCount":24,"CharCount":433,"Comments":[],"Functions":["function getParamSize(keySize) ","function getParamBytesForAlg(alg) "],"Dependencies":null},{"FileName":"node_modules\\ee-first\\index.js","LineCount":96,"CharCount":1589,"Comments":["/*!"," * ee-first"," * Copyright(c) 2014 Jonathan Ong"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = first","/**"," * Get the first event in a set of event emitters and event pairs."," *"," * @param {array} stuff"," * @param {function} done"," * @public"," */","","function first(stuff, done) {","      // listen to the event","      ee.on(event, fn)","      // push this listener to the list of cleanups","      cleanups.push({","/**"," * Create the event listener."," * @private"," */","","function listener(event, done) {","    // copy args to prevent arguments escaping scope","    for (var i = 0; i \u003c args.length; i++) {"],"Functions":[" * @param function} done","function first(stuff, done) ","  function callback() ","  function cleanup() ","  function thunk(fn) ","function listener(event, done) ","  return function onevent(arg1) "],"Dependencies":null},{"FileName":"node_modules\\encodeurl\\index.js","LineCount":61,"CharCount":1524,"Comments":["/*!"," * encodeurl"," * Copyright(c) 2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = encodeUrl","/**"," * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")"," * and including invalid escape sequences."," * @private"," */","","var ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]))+/g","/**"," * RegExp to match unmatched surrogate pair."," * @private"," */","","var UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g","/**"," * String to replace unmatched surrogate pair with."," * @private"," */","","var UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'","/**"," * Encode a URL to a percent-encoded form, excluding already-encoded sequences."," *"," * This function will take an already-encoded URL and encode all the non-URL"," * code points. This function will not encode the \"%\" character unless it is"," * not part of a valid sequence (`%20` will be left as-is, but `%foo` will"," * be encoded as `%25foo`)."," *"," * This encode is meant to be \"safe\" and does not throw errors. It will try as"," * hard as it can to properly encode the given URL, including replacing any raw,"," * unpaired surrogate pairs with the Unicode replacement character prior to"," * encoding."," *"," * @param {string} url"," * @return {string}"," * @public"," */","","function encodeUrl (url) {"],"Functions":[" * This function will take an already-encoded URL and encode all the non-URL"," * code points. This function will not encode the \"%\" character unless it is","function encodeUrl (url) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\dist\\es6-promise.js","LineCount":968,"CharCount":31328,"Comments":["/*!"," * @overview es6-promise - a tiny implementation of Promises/A+."," * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)"," * @license   Licensed under MIT license"," *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE"," * @version   3.0.2"," */","","(function() {","        // If len is 2, that means that we need to schedule an async flush.","        // If additional callbacks are queued before the queue is flushed, they","        // will be processed by this flush that we are scheduling.","        if (lib$es6$promise$asap$$customSchedulerFn) {","    // test for web worker but not in IE10","    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' \u0026\u0026","    // node","    function lib$es6$promise$asap$$useNextTick() {","      // node version 0.10.x displays a deprecation warning when nextTick is used recursively","      // see https://github.com/cujojs/when/issues/410 for details","      return function() {","    // vertx","    function lib$es6$promise$asap$$useVertxTimer() {","    // web worker","    function lib$es6$promise$asap$$useMessageChannel() {","    // Decide what async method to use to triggering processing of queued callbacks:","    if (lib$es6$promise$asap$$isNode) {","        // noop","      } else if (hasCallback \u0026\u0026 succeeded) {","      /*jshint validthis:true */","      var Constructor = this;","      /*jshint validthis:true */","      var Constructor = this;","      /*jshint validthis:true */","      var Constructor = this;","    /**","      Promise objects represent the eventual result of an asynchronous operation. The","      primary way of interacting with a promise is through its `then` method, which","      registers callbacks to receive either a promise's eventual value or the reason","      why the promise cannot be fulfilled.","","      Terminology","      -----------","","      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.","      - `thenable` is an object or function that defines a `then` method.","      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).","      - `exception` is a value that is thrown using the throw statement.","      - `reason` is a value that indicates why a promise was rejected.","      - `settled` the final resting state of a promise, fulfilled or rejected.","","      A promise can be in one of three states: pending, fulfilled, or rejected.","","      Promises that are fulfilled have a fulfillment value and are in the fulfilled","      state.  Promises that are rejected have a rejection reason and are in the","      rejected state.  A fulfillment value is never a thenable.","","      Promises can also be said to *resolve* a value.  If this value is also a","      promise, then the original promise's settled state will match the value's","      settled state.  So a promise that *resolves* a promise that rejects will","      itself reject, and a promise that *resolves* a promise that fulfills will","      itself fulfill.","","","      Basic Usage:","      ------------","","      ```js","      var promise = new Promise(function(resolve, reject) {","        // on success","        resolve(value);","","        // on failure","        reject(reason);","      });","","      promise.then(function(value) {","        // on fulfillment","      }, function(reason) {","        // on rejection","      });","      ```","","      Advanced Usage:","      ---------------","","      Promises shine when abstracting away asynchronous interactions such as","      `XMLHttpRequest`s.","","      ```js","      function getJSON(url) {","        return new Promise(function(resolve, reject){","          var xhr = new XMLHttpRequest();","","          xhr.open('GET', url);","          xhr.onreadystatechange = handler;","          xhr.responseType = 'json';","          xhr.setRequestHeader('Accept', 'application/json');","          xhr.send();","","          function handler() {","            if (this.readyState === this.DONE) {","              if (this.status === 200) {","                resolve(this.response);","              } else {","                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));","              }","            }","          };","        });","      }","","      getJSON('/posts.json').then(function(json) {","        // on fulfillment","      }, function(reason) {","        // on rejection","      });","      ```","","      Unlike callbacks, promises are great composable primitives.","","      ```js","      Promise.all([","        getJSON('/posts'),","        getJSON('/comments')","      ]).then(function(values){","        values[0] // =\u003e postsJSON","        values[1] // =\u003e commentsJSON","","        return values;","      });","      ```","","      @class Promise","      @param {function} resolver","      Useful for tooling.","      @constructor","    */","    function lib$es6$promise$promise$$Promise(resolver) {","    /**","      The primary way of interacting with a promise is through its `then` method,","      which registers callbacks to receive either a promise's eventual value or the","      reason why the promise cannot be fulfilled.","","      ```js","      findUser().then(function(user){","        // user is available","      }, function(reason){","        // user is unavailable, and you are given the reason why","      });","      ```","","      Chaining","      --------","","      The return value of `then` is itself a promise.  This second, 'downstream'","      promise is resolved with the return value of the first promise's fulfillment","      or rejection handler, or rejected if the handler throws an exception.","","      ```js","      findUser().then(function (user) {","        return user.name;","      }, function (reason) {","        return 'default name';","      }).then(function (userName) {","        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it","        // will be `'default name'`","      });","","      findUser().then(function (user) {","        throw new Error('Found user, but still unhappy');","      }, function (reason) {","        throw new Error('`findUser` rejected and we're unhappy');","      }).then(function (value) {","        // never reached","      }, function (reason) {","        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.","        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.","      });","      ```","      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.","","      ```js","      findUser().then(function (user) {","        throw new PedagogicalException('Upstream error');","      }).then(function (value) {","        // never reached","      }).then(function (value) {","        // never reached","      }, function (reason) {","        // The `PedgagocialException` is propagated all the way down to here","      });","      ```","","      Assimilation","      ------------","","      Sometimes the value you want to propagate to a downstream promise can only be","      retrieved asynchronously. This can be achieved by returning a promise in the","      fulfillment or rejection handler. The downstream promise will then be pending","      until the returned promise is settled. This is called *assimilation*.","","      ```js","      findUser().then(function (user) {","        return findCommentsByAuthor(user);","      }).then(function (comments) {","        // The user's comments are now available","      });","      ```","","      If the assimliated promise rejects, then the downstream promise will also reject.","","      ```js","      findUser().then(function (user) {","        return findCommentsByAuthor(user);","      }).then(function (comments) {","        // If `findCommentsByAuthor` fulfills, we'll have the value here","      }, function (reason) {","        // If `findCommentsByAuthor` rejects, we'll have the reason here","      });","      ```","","      Simple Example","      --------------","","      Synchronous Example","","      ```javascript","      var result;","","      try {","        result = findResult();","        // success","      } catch(reason) {","        // failure","      }","      ```","","      Errback Example","","      ```js","      findResult(function(result, err){","        if (err) {","          // failure","        } else {","          // success","        }","      });","      ```","","      Promise Example;","","      ```javascript","      findResult().then(function(result){","        // success","      }, function(reason){","        // failure","      });","      ```","","      Advanced Example","      --------------","","      Synchronous Example","","      ```javascript","      var author, books;","","      try {","        author = findAuthor();","        books  = findBooksByAuthor(author);","        // success","      } catch(reason) {","        // failure","      }","      ```","","      Errback Example","","      ```js","","      function foundBooks(books) {","","      }","","      function failure(reason) {","","      }","","      findAuthor(function(author, err){","        if (err) {","          failure(err);","          // failure","        } else {","          try {","            findBoooksByAuthor(author, function(books, err) {","              if (err) {","                failure(err);","              } else {","                try {","                  foundBooks(books);","                } catch(reason) {","                  failure(reason);","                }","              }","            });","          } catch(error) {","            failure(err);","          }","          // success","        }","      });","      ```","","      Promise Example;","","      ```javascript","      findAuthor().","        then(findBooksByAuthor).","        then(function(books){","          // found books","      }).catch(function(reason){","        // something went wrong","      });","      ```","","      @method then","      @param {Function} onFulfilled","      @param {Function} onRejected","      Useful for tooling.","      @return {Promise}","    */","      then: function(onFulfillment, onRejection) {","    /**","      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same","      as the catch block of a try/catch statement.","","      ```js","      function findAuthor(){","        throw new Error('couldn't find that author');","      }","","      // synchronous","      try {","        findAuthor();","      } catch(reason) {","        // something went wrong","      }","","      // async with promises","      findAuthor().catch(function(reason){","        // something went wrong","      });","      ```","","      @method catch","      @param {Function} onRejection","      Useful for tooling.","      @return {Promise}","    */","      'catch': function(onRejection) {","    /* global define:true module:true window: true */","    if (typeof define === 'function' \u0026\u0026 define['amd']) {"],"Functions":["(function() ","    function lib$es6$promise$utils$$objectOrFunction(x) ","      return typeof x === 'function' || (typeof x === 'object' \u0026\u0026 x !== null);","    function lib$es6$promise$utils$$isFunction(x) ","      return typeof x === 'function';","    function lib$es6$promise$utils$$isMaybeThenable(x) ","      lib$es6$promise$utils$$_isArray = function (x) ","    var lib$es6$promise$asap$$asap = function asap(callback, arg) ","    function lib$es6$promise$asap$$setScheduler(scheduleFn) ","    function lib$es6$promise$asap$$setAsap(asapFn) ","    function lib$es6$promise$asap$$useNextTick() ","      return function() ","    function lib$es6$promise$asap$$useVertxTimer() ","      return function() ","    function lib$es6$promise$asap$$useMutationObserver() ","      return function() ","    function lib$es6$promise$asap$$useMessageChannel() ","      return function () ","    function lib$es6$promise$asap$$useSetTimeout() ","      return function() ","    function lib$es6$promise$asap$$flush() ","    function lib$es6$promise$asap$$attemptVertx() ","    } else if (lib$es6$promise$asap$$browserWindow === undefined \u0026\u0026 typeof require === 'function') ","    function lib$es6$promise$$internal$$noop() }","    function lib$es6$promise$$internal$$selfFulfillment() ","    function lib$es6$promise$$internal$$cannotReturnOwn() ","    function lib$es6$promise$$internal$$getThen(promise) ","    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) ","    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) ","       lib$es6$promise$asap$$asap(function(promise) ","        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) ","        }, function(reason) ","    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) ","        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) ","        }, function(reason) ","    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) ","    function lib$es6$promise$$internal$$resolve(promise, value) ","    function lib$es6$promise$$internal$$publishRejection(promise) ","    function lib$es6$promise$$internal$$fulfill(promise, value) ","    function lib$es6$promise$$internal$$reject(promise, reason) ","    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) ","    function lib$es6$promise$$internal$$publish(promise) ","    function lib$es6$promise$$internal$$ErrorObject() ","    function lib$es6$promise$$internal$$tryCatch(callback, detail) ","    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) ","    function lib$es6$promise$$internal$$initializePromise(promise, resolver) ","        resolver(function resolvePromise(value)","        }, function rejectPromise(reason) ","    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) ","    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) ","    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() ","    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() ","    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() ","    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) ","    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) ","    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) ","      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) ","      }, function(reason) ","    function lib$es6$promise$promise$all$$all(entries) ","    function lib$es6$promise$promise$race$$race(entries) ","      function onFulfillment(value) ","      function onRejection(reason) ","    function lib$es6$promise$promise$resolve$$resolve(object) ","    function lib$es6$promise$promise$reject$$reject(reason) ","    function lib$es6$promise$promise$$needsResolver() ","      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');","    function lib$es6$promise$promise$$needsNew() ","      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");","      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.","      - `thenable` is an object or function that defines a `then` method.","      var promise = new Promise(function(resolve, reject) ","      promise.then(function(value) ","      }, function(reason) ","      function getJSON(url) ","        return new Promise(function(resolve, reject)","          function handler() ","      getJSON('/posts.json').then(function(json) ","      }, function(reason) ","      ]).then(function(values)","      @param function} resolver","    function lib$es6$promise$promise$$Promise(resolver) ","      findUser().then(function(user)","      }, function(reason)","      findUser().then(function (user) ","      }, function (reason) ","      }).then(function (userName) ","      findUser().then(function (user) ","      }, function (reason) ","      }).then(function (value) ","      }, function (reason) ","      findUser().then(function (user) ","      }).then(function (value) ","      }).then(function (value) ","      }, function (reason) ","      findUser().then(function (user) ","      }).then(function (comments) ","      findUser().then(function (user) ","      }).then(function (comments) ","      }, function (reason) ","      findResult(function(result, err)","      findResult().then(function(result)","      }, function(reason)","      function foundBooks(books) ","      function failure(reason) ","      findAuthor(function(author, err)","            findBoooksByAuthor(author, function(books, err) ","        then(function(books)","      }).catch(function(reason)","      then: function(onFulfillment, onRejection) ","          lib$es6$promise$asap$$asap(function()","      function findAuthor()","      findAuthor().catch(function(reason)","      'catch': function(onRejection) ","    function lib$es6$promise$polyfill$$polyfill() ","    if (typeof define === 'function' \u0026\u0026 define['amd']) ","      define(function()  return lib$es6$promise$umd$$ES6Promise; });"],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\dist\\es6-promise.min.js","LineCount":9,"CharCount":17944,"Comments":["/*!"," * @overview es6-promise - a tiny implementation of Promises/A+."," * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)"," * @license   Licensed under MIT license"," *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE"," * @version   3.0.2"," */","","(function(){\"use strict\";function lib$es6$promise$utils$$objectOrFunction(x){return typeof x===\"function\"||typeof x===\"object\"\u0026\u0026x!==null}function lib$es6$promise$utils$$isFunction(x){return typeof x===\"function\"}function lib$es6$promise$utils$$isMaybeThenable(x){return typeof x===\"object\"\u0026\u0026x!==null}var lib$es6$promise$utils$$_isArray;if(!Array.isArray){lib$es6$promise$utils$$_isArray=function(x){return Object.prototype.toString.call(x)===\"[object Array]\"}}else{lib$es6$promise$utils$$_isArray=Array.isArray}var lib$es6$promise$utils$$isArray=lib$es6$promise$utils$$_isArray;var lib$es6$promise$asap$$len=0;var lib$es6$promise$asap$$toString={}.toString;var lib$es6$promise$asap$$vertxNext;var lib$es6$promise$asap$$customSchedulerFn;var lib$es6$promise$asap$$asap=function asap(callback,arg){lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len]=callback;lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len+1]=arg;lib$es6$promise$asap$$len+=2;if(lib$es6$promise$asap$$len===2){if(lib$es6$promise$asap$$customSchedulerFn){lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush)}else{lib$es6$promise$asap$$scheduleFlush()}}};function lib$es6$promise$asap$$setScheduler(scheduleFn){lib$es6$promise$asap$$customSchedulerFn=scheduleFn}function lib$es6$promise$asap$$setAsap(asapFn){lib$es6$promise$asap$$asap=asapFn}var lib$es6$promise$asap$$browserWindow=typeof window!==\"undefined\"?window:undefined;var lib$es6$promise$asap$$browserGlobal=lib$es6$promise$asap$$browserWindow||{};var lib$es6$promise$asap$$BrowserMutationObserver=lib$es6$promise$asap$$browserGlobal.MutationObserver||lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;var lib$es6$promise$asap$$isNode=typeof process!==\"undefined\"\u0026\u0026{}.toString.call(process)===\"[object process]\";var lib$es6$promise$asap$$isWorker=typeof Uint8ClampedArray!==\"undefined\"\u0026\u0026typeof importScripts!==\"undefined\"\u0026\u0026typeof MessageChannel!==\"undefined\";function lib$es6$promise$asap$$useNextTick(){return function(){process.nextTick(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useVertxTimer(){return function(){lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useMutationObserver(){var iterations=0;var observer=new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);var node=document.createTextNode(\"\");observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2}}function lib$es6$promise$asap$$useMessageChannel(){var channel=new MessageChannel;channel.port1.onmessage=lib$es6$promise$asap$$flush;return function(){channel.port2.postMessage(0)}}function lib$es6$promise$asap$$useSetTimeout(){return function(){setTimeout(lib$es6$promise$asap$$flush,1)}}var lib$es6$promise$asap$$queue=new Array(1e3);function lib$es6$promise$asap$$flush(){for(var i=0;i\u003clib$es6$promise$asap$$len;i+=2){var callback=lib$es6$promise$asap$$queue[i];var arg=lib$es6$promise$asap$$queue[i+1];callback(arg);lib$es6$promise$asap$$queue[i]=undefined;lib$es6$promise$asap$$queue[i+1]=undefined}lib$es6$promise$asap$$len=0}function lib$es6$promise$asap$$attemptVertx(){try{var r=require;var vertx=r(\"vertx\");lib$es6$promise$asap$$vertxNext=vertx.runOnLoop||vertx.runOnContext;return lib$es6$promise$asap$$useVertxTimer()}catch(e){return lib$es6$promise$asap$$useSetTimeout()}}var lib$es6$promise$asap$$scheduleFlush;if(lib$es6$promise$asap$$isNode){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useNextTick()}else if(lib$es6$promise$asap$$BrowserMutationObserver){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMutationObserver()}else if(lib$es6$promise$asap$$isWorker){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMessageChannel()}else if(lib$es6$promise$asap$$browserWindow===undefined\u0026\u0026typeof require===\"function\"){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$attemptVertx()}else{lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useSetTimeout()}function lib$es6$promise$$internal$$noop(){}var lib$es6$promise$$internal$$PENDING=void 0;var lib$es6$promise$$internal$$FULFILLED=1;var lib$es6$promise$$internal$$REJECTED=2;var lib$es6$promise$$internal$$GET_THEN_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$selfFulfillment(){return new TypeError(\"You cannot resolve a promise with itself\")}function lib$es6$promise$$internal$$cannotReturnOwn(){return new TypeError(\"A promises callback cannot return that same promise.\")}function lib$es6$promise$$internal$$getThen(promise){try{return promise.then}catch(error){lib$es6$promise$$internal$$GET_THEN_ERROR.error=error;return lib$es6$promise$$internal$$GET_THEN_ERROR}}function lib$es6$promise$$internal$$tryThen(then,value,fulfillmentHandler,rejectionHandler){try{then.call(value,fulfillmentHandler,rejectionHandler)}catch(e){return e}}function lib$es6$promise$$internal$$handleForeignThenable(promise,thenable,then){lib$es6$promise$asap$$asap(function(promise){var sealed=false;var error=lib$es6$promise$$internal$$tryThen(then,thenable,function(value){if(sealed){return}sealed=true;if(thenable!==value){lib$es6$promise$$internal$$resolve(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}},function(reason){if(sealed){return}sealed=true;lib$es6$promise$$internal$$reject(promise,reason)},\"Settle: \"+(promise._label||\" unknown promise\"));if(!sealed\u0026\u0026error){sealed=true;lib$es6$promise$$internal$$reject(promise,error)}},promise)}function lib$es6$promise$$internal$$handleOwnThenable(promise,thenable){if(thenable._state===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,thenable._result)}else if(thenable._state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,thenable._result)}else{lib$es6$promise$$internal$$subscribe(thenable,undefined,function(value){lib$es6$promise$$internal$$resolve(promise,value)},function(reason){lib$es6$promise$$internal$$reject(promise,reason)})}}function lib$es6$promise$$internal$$handleMaybeThenable(promise,maybeThenable){if(maybeThenable.constructor===promise.constructor){lib$es6$promise$$internal$$handleOwnThenable(promise,maybeThenable)}else{var then=lib$es6$promise$$internal$$getThen(maybeThenable);if(then===lib$es6$promise$$internal$$GET_THEN_ERROR){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$GET_THEN_ERROR.error)}else if(then===undefined){lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}else if(lib$es6$promise$utils$$isFunction(then)){lib$es6$promise$$internal$$handleForeignThenable(promise,maybeThenable,then)}else{lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}}}function lib$es6$promise$$internal$$resolve(promise,value){if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$selfFulfillment())}else if(lib$es6$promise$utils$$objectOrFunction(value)){lib$es6$promise$$internal$$handleMaybeThenable(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}}function lib$es6$promise$$internal$$publishRejection(promise){if(promise._onerror){promise._onerror(promise._result)}lib$es6$promise$$internal$$publish(promise)}function lib$es6$promise$$internal$$fulfill(promise,value){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._result=value;promise._state=lib$es6$promise$$internal$$FULFILLED;if(promise._subscribers.length!==0){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,promise)}}function lib$es6$promise$$internal$$reject(promise,reason){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._state=lib$es6$promise$$internal$$REJECTED;promise._result=reason;lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection,promise)}function lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection){var subscribers=parent._subscribers;var length=subscribers.length;parent._onerror=null;subscribers[length]=child;subscribers[length+lib$es6$promise$$internal$$FULFILLED]=onFulfillment;subscribers[length+lib$es6$promise$$internal$$REJECTED]=onRejection;if(length===0\u0026\u0026parent._state){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,parent)}}function lib$es6$promise$$internal$$publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return}var child,callback,detail=promise._result;for(var i=0;i\u003csubscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){lib$es6$promise$$internal$$invokeCallback(settled,child,callback,detail)}else{callback(detail)}}promise._subscribers.length=0}function lib$es6$promise$$internal$$ErrorObject(){this.error=null}var lib$es6$promise$$internal$$TRY_CATCH_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$tryCatch(callback,detail){try{return callback(detail)}catch(e){lib$es6$promise$$internal$$TRY_CATCH_ERROR.error=e;return lib$es6$promise$$internal$$TRY_CATCH_ERROR}}function lib$es6$promise$$internal$$invokeCallback(settled,promise,callback,detail){var hasCallback=lib$es6$promise$utils$$isFunction(callback),value,error,succeeded,failed;if(hasCallback){value=lib$es6$promise$$internal$$tryCatch(callback,detail);if(value===lib$es6$promise$$internal$$TRY_CATCH_ERROR){failed=true;error=value.error;value=null}else{succeeded=true}if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$cannotReturnOwn());return}}else{value=detail;succeeded=true}if(promise._state!==lib$es6$promise$$internal$$PENDING){}else if(hasCallback\u0026\u0026succeeded){lib$es6$promise$$internal$$resolve(promise,value)}else if(failed){lib$es6$promise$$internal$$reject(promise,error)}else if(settled===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,value)}else if(settled===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}}function lib$es6$promise$$internal$$initializePromise(promise,resolver){try{resolver(function resolvePromise(value){lib$es6$promise$$internal$$resolve(promise,value)},function rejectPromise(reason){lib$es6$promise$$internal$$reject(promise,reason)})}catch(e){lib$es6$promise$$internal$$reject(promise,e)}}function lib$es6$promise$enumerator$$Enumerator(Constructor,input){var enumerator=this;enumerator._instanceConstructor=Constructor;enumerator.promise=new Constructor(lib$es6$promise$$internal$$noop);if(enumerator._validateInput(input)){enumerator._input=input;enumerator.length=input.length;enumerator._remaining=input.length;enumerator._init();if(enumerator.length===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}else{enumerator.length=enumerator.length||0;enumerator._enumerate();if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}}}else{lib$es6$promise$$internal$$reject(enumerator.promise,enumerator._validationError())}}lib$es6$promise$enumerator$$Enumerator.prototype._validateInput=function(input){return lib$es6$promise$utils$$isArray(input)};lib$es6$promise$enumerator$$Enumerator.prototype._validationError=function(){return new Error(\"Array Methods must be provided an Array\")};lib$es6$promise$enumerator$$Enumerator.prototype._init=function(){this._result=new Array(this.length)};var lib$es6$promise$enumerator$$default=lib$es6$promise$enumerator$$Enumerator;lib$es6$promise$enumerator$$Enumerator.prototype._enumerate=function(){var enumerator=this;var length=enumerator.length;var promise=enumerator.promise;var input=enumerator._input;for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING\u0026\u0026i\u003clength;i++){enumerator._eachEntry(input[i],i)}};lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry=function(entry,i){var enumerator=this;var c=enumerator._instanceConstructor;if(lib$es6$promise$utils$$isMaybeThenable(entry)){if(entry.constructor===c\u0026\u0026entry._state!==lib$es6$promise$$internal$$PENDING){entry._onerror=null;enumerator._settledAt(entry._state,i,entry._result)}else{enumerator._willSettleAt(c.resolve(entry),i)}}else{enumerator._remaining--;enumerator._result[i]=entry}};lib$es6$promise$enumerator$$Enumerator.prototype._settledAt=function(state,i,value){var enumerator=this;var promise=enumerator.promise;if(promise._state===lib$es6$promise$$internal$$PENDING){enumerator._remaining--;if(state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}else{enumerator._result[i]=value}}if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(promise,enumerator._result)}};lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt=function(promise,i){var enumerator=this;lib$es6$promise$$internal$$subscribe(promise,undefined,function(value){enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED,i,value)},function(reason){enumerator._settledAt(lib$es6$promise$$internal$$REJECTED,i,reason)})};function lib$es6$promise$promise$all$$all(entries){return new lib$es6$promise$enumerator$$default(this,entries).promise}var lib$es6$promise$promise$all$$default=lib$es6$promise$promise$all$$all;function lib$es6$promise$promise$race$$race(entries){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);if(!lib$es6$promise$utils$$isArray(entries)){lib$es6$promise$$internal$$reject(promise,new TypeError(\"You must pass an array to race.\"));return promise}var length=entries.length;function onFulfillment(value){lib$es6$promise$$internal$$resolve(promise,value)}function onRejection(reason){lib$es6$promise$$internal$$reject(promise,reason)}for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING\u0026\u0026i\u003clength;i++){lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]),undefined,onFulfillment,onRejection)}return promise}var lib$es6$promise$promise$race$$default=lib$es6$promise$promise$race$$race;function lib$es6$promise$promise$resolve$$resolve(object){var Constructor=this;if(object\u0026\u0026typeof object===\"object\"\u0026\u0026object.constructor===Constructor){return object}var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$resolve(promise,object);return promise}var lib$es6$promise$promise$resolve$$default=lib$es6$promise$promise$resolve$$resolve;function lib$es6$promise$promise$reject$$reject(reason){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$reject(promise,reason);return promise}var lib$es6$promise$promise$reject$$default=lib$es6$promise$promise$reject$$reject;var lib$es6$promise$promise$$counter=0;function lib$es6$promise$promise$$needsResolver(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function lib$es6$promise$promise$$needsNew(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}var lib$es6$promise$promise$$default=lib$es6$promise$promise$$Promise;function lib$es6$promise$promise$$Promise(resolver){this._id=lib$es6$promise$promise$$counter++;this._state=undefined;this._result=undefined;this._subscribers=[];if(lib$es6$promise$$internal$$noop!==resolver){if(!lib$es6$promise$utils$$isFunction(resolver)){lib$es6$promise$promise$$needsResolver()}if(!(this instanceof lib$es6$promise$promise$$Promise)){lib$es6$promise$promise$$needsNew()}lib$es6$promise$$internal$$initializePromise(this,resolver)}}lib$es6$promise$promise$$Promise.all=lib$es6$promise$promise$all$$default;lib$es6$promise$promise$$Promise.race=lib$es6$promise$promise$race$$default;lib$es6$promise$promise$$Promise.resolve=lib$es6$promise$promise$resolve$$default;lib$es6$promise$promise$$Promise.reject=lib$es6$promise$promise$reject$$default;lib$es6$promise$promise$$Promise._setScheduler=lib$es6$promise$asap$$setScheduler;lib$es6$promise$promise$$Promise._setAsap=lib$es6$promise$asap$$setAsap;lib$es6$promise$promise$$Promise._asap=lib$es6$promise$asap$$asap;lib$es6$promise$promise$$Promise.prototype={constructor:lib$es6$promise$promise$$Promise,then:function(onFulfillment,onRejection){var parent=this;var state=parent._state;if(state===lib$es6$promise$$internal$$FULFILLED\u0026\u0026!onFulfillment||state===lib$es6$promise$$internal$$REJECTED\u0026\u0026!onRejection){return this}var child=new this.constructor(lib$es6$promise$$internal$$noop);var result=parent._result;if(state){var callback=arguments[state-1];lib$es6$promise$asap$$asap(function(){lib$es6$promise$$internal$$invokeCallback(state,child,callback,result)})}else{lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection)}return child},\"catch\":function(onRejection){return this.then(null,onRejection)}};function lib$es6$promise$polyfill$$polyfill(){var local;if(typeof global!==\"undefined\"){local=global}else if(typeof self!==\"undefined\"){local=self}else{try{local=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}}var P=local.Promise;if(P\u0026\u0026Object.prototype.toString.call(P.resolve())===\"[object Promise]\"\u0026\u0026!P.cast){return}local.Promise=lib$es6$promise$promise$$default}var lib$es6$promise$polyfill$$default=lib$es6$promise$polyfill$$polyfill;var lib$es6$promise$umd$$ES6Promise={Promise:lib$es6$promise$promise$$default,polyfill:lib$es6$promise$polyfill$$default};if(typeof define===\"function\"\u0026\u0026define[\"amd\"]){define(function(){return lib$es6$promise$umd$$ES6Promise})}else if(typeof module!==\"undefined\"\u0026\u0026module[\"exports\"]){module[\"exports\"]=lib$es6$promise$umd$$ES6Promise}else if(typeof this!==\"undefined\"){this[\"ES6Promise\"]=lib$es6$promise$umd$$ES6Promise}lib$es6$promise$polyfill$$default()}).call(this);"],"Functions":["(function()\"use strict\";function lib$es6$promise$utils$$objectOrFunction(x){return typeof x===\"function\"||typeof x===\"object\"\u0026\u0026x!==null}function lib$es6$promise$utils$$isFunction(x){return typeof x===\"function\"}function lib$es6$promise$utils$$isMaybeThenable(x){return typeof x===\"object\"\u0026\u0026x!==null}var lib$es6$promise$utils$$_isArray;if(!Array.isArray){lib$es6$promise$utils$$_isArray=function(x){return Object.prototype.toString.call(x)===\"[object Array]\"}}else{lib$es6$promise$utils$$_isArray=Array.isArray}var lib$es6$promise$utils$$isArray=lib$es6$promise$utils$$_isArray;var lib$es6$promise$asap$$len=0;var lib$es6$promise$asap$$toString={}.toString;var lib$es6$promise$asap$$vertxNext;var lib$es6$promise$asap$$customSchedulerFn;var lib$es6$promise$asap$$asap=function asap(callback,arg){lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len]=callback;lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len+1]=arg;lib$es6$promise$asap$$len+=2;if(lib$es6$promise$asap$$len===2){if(lib$es6$promise$asap$$customSchedulerFn){lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush)}else{lib$es6$promise$asap$$scheduleFlush()}}};function lib$es6$promise$asap$$setScheduler(scheduleFn){lib$es6$promise$asap$$customSchedulerFn=scheduleFn}function lib$es6$promise$asap$$setAsap(asapFn){lib$es6$promise$asap$$asap=asapFn}var lib$es6$promise$asap$$browserWindow=typeof window!==\"undefined\"?window:undefined;var lib$es6$promise$asap$$browserGlobal=lib$es6$promise$asap$$browserWindow||{};var lib$es6$promise$asap$$BrowserMutationObserver=lib$es6$promise$asap$$browserGlobal.MutationObserver||lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;var lib$es6$promise$asap$$isNode=typeof process!==\"undefined\"\u0026\u0026{}.toString.call(process)===\"[object process]\";var lib$es6$promise$asap$$isWorker=typeof Uint8ClampedArray!==\"undefined\"\u0026\u0026typeof importScripts!==\"undefined\"\u0026\u0026typeof MessageChannel!==\"undefined\";function lib$es6$promise$asap$$useNextTick(){return function(){process.nextTick(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useVertxTimer(){return function(){lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useMutationObserver(){var iterations=0;var observer=new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);var node=document.createTextNode(\"\");observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2}}function lib$es6$promise$asap$$useMessageChannel(){var channel=new MessageChannel;channel.port1.onmessage=lib$es6$promise$asap$$flush;return function(){channel.port2.postMessage(0)}}function lib$es6$promise$asap$$useSetTimeout(){return function(){setTimeout(lib$es6$promise$asap$$flush,1)}}var lib$es6$promise$asap$$queue=new Array(1e3);function lib$es6$promise$asap$$flush(){for(var i=0;i\u003clib$es6$promise$asap$$len;i+=2){var callback=lib$es6$promise$asap$$queue[i];var arg=lib$es6$promise$asap$$queue[i+1];callback(arg);lib$es6$promise$asap$$queue[i]=undefined;lib$es6$promise$asap$$queue[i+1]=undefined}lib$es6$promise$asap$$len=0}function lib$es6$promise$asap$$attemptVertx(){try{var r=require;var vertx=r(\"vertx\");lib$es6$promise$asap$$vertxNext=vertx.runOnLoop||vertx.runOnContext;return lib$es6$promise$asap$$useVertxTimer()}catch(e){return lib$es6$promise$asap$$useSetTimeout()}}var lib$es6$promise$asap$$scheduleFlush;if(lib$es6$promise$asap$$isNode){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useNextTick()}else if(lib$es6$promise$asap$$BrowserMutationObserver){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMutationObserver()}else if(lib$es6$promise$asap$$isWorker){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMessageChannel()}else if(lib$es6$promise$asap$$browserWindow===undefined\u0026\u0026typeof require===\"function\"){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$attemptVertx()}else{lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useSetTimeout()}function lib$es6$promise$$internal$$noop(){}var lib$es6$promise$$internal$$PENDING=void 0;var lib$es6$promise$$internal$$FULFILLED=1;var lib$es6$promise$$internal$$REJECTED=2;var lib$es6$promise$$internal$$GET_THEN_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$selfFulfillment(){return new TypeError(\"You cannot resolve a promise with itself\")}function lib$es6$promise$$internal$$cannotReturnOwn(){return new TypeError(\"A promises callback cannot return that same promise.\")}function lib$es6$promise$$internal$$getThen(promise){try{return promise.then}catch(error){lib$es6$promise$$internal$$GET_THEN_ERROR.error=error;return lib$es6$promise$$internal$$GET_THEN_ERROR}}function lib$es6$promise$$internal$$tryThen(then,value,fulfillmentHandler,rejectionHandler){try{then.call(value,fulfillmentHandler,rejectionHandler)}catch(e){return e}}function lib$es6$promise$$internal$$handleForeignThenable(promise,thenable,then){lib$es6$promise$asap$$asap(function(promise){var sealed=false;var error=lib$es6$promise$$internal$$tryThen(then,thenable,function(value){if(sealed){return}sealed=true;if(thenable!==value){lib$es6$promise$$internal$$resolve(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}},function(reason){if(sealed){return}sealed=true;lib$es6$promise$$internal$$reject(promise,reason)},\"Settle: \"+(promise._label||\" unknown promise\"));if(!sealed\u0026\u0026error){sealed=true;lib$es6$promise$$internal$$reject(promise,error)}},promise)}function lib$es6$promise$$internal$$handleOwnThenable(promise,thenable){if(thenable._state===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,thenable._result)}else if(thenable._state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,thenable._result)}else{lib$es6$promise$$internal$$subscribe(thenable,undefined,function(value){lib$es6$promise$$internal$$resolve(promise,value)},function(reason){lib$es6$promise$$internal$$reject(promise,reason)})}}function lib$es6$promise$$internal$$handleMaybeThenable(promise,maybeThenable){if(maybeThenable.constructor===promise.constructor){lib$es6$promise$$internal$$handleOwnThenable(promise,maybeThenable)}else{var then=lib$es6$promise$$internal$$getThen(maybeThenable);if(then===lib$es6$promise$$internal$$GET_THEN_ERROR){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$GET_THEN_ERROR.error)}else if(then===undefined){lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}else if(lib$es6$promise$utils$$isFunction(then)){lib$es6$promise$$internal$$handleForeignThenable(promise,maybeThenable,then)}else{lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}}}function lib$es6$promise$$internal$$resolve(promise,value){if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$selfFulfillment())}else if(lib$es6$promise$utils$$objectOrFunction(value)){lib$es6$promise$$internal$$handleMaybeThenable(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}}function lib$es6$promise$$internal$$publishRejection(promise){if(promise._onerror){promise._onerror(promise._result)}lib$es6$promise$$internal$$publish(promise)}function lib$es6$promise$$internal$$fulfill(promise,value){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._result=value;promise._state=lib$es6$promise$$internal$$FULFILLED;if(promise._subscribers.length!==0){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,promise)}}function lib$es6$promise$$internal$$reject(promise,reason){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._state=lib$es6$promise$$internal$$REJECTED;promise._result=reason;lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection,promise)}function lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection){var subscribers=parent._subscribers;var length=subscribers.length;parent._onerror=null;subscribers[length]=child;subscribers[length+lib$es6$promise$$internal$$FULFILLED]=onFulfillment;subscribers[length+lib$es6$promise$$internal$$REJECTED]=onRejection;if(length===0\u0026\u0026parent._state){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,parent)}}function lib$es6$promise$$internal$$publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return}var child,callback,detail=promise._result;for(var i=0;i\u003csubscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){lib$es6$promise$$internal$$invokeCallback(settled,child,callback,detail)}else{callback(detail)}}promise._subscribers.length=0}function lib$es6$promise$$internal$$ErrorObject(){this.error=null}var lib$es6$promise$$internal$$TRY_CATCH_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$tryCatch(callback,detail){try{return callback(detail)}catch(e){lib$es6$promise$$internal$$TRY_CATCH_ERROR.error=e;return lib$es6$promise$$internal$$TRY_CATCH_ERROR}}function lib$es6$promise$$internal$$invokeCallback(settled,promise,callback,detail){var hasCallback=lib$es6$promise$utils$$isFunction(callback),value,error,succeeded,failed;if(hasCallback){value=lib$es6$promise$$internal$$tryCatch(callback,detail);if(value===lib$es6$promise$$internal$$TRY_CATCH_ERROR){failed=true;error=value.error;value=null}else{succeeded=true}if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$cannotReturnOwn());return}}else{value=detail;succeeded=true}if(promise._state!==lib$es6$promise$$internal$$PENDING){}else if(hasCallback\u0026\u0026succeeded){lib$es6$promise$$internal$$resolve(promise,value)}else if(failed){lib$es6$promise$$internal$$reject(promise,error)}else if(settled===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,value)}else if(settled===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}}function lib$es6$promise$$internal$$initializePromise(promise,resolver){try{resolver(function resolvePromise(value){lib$es6$promise$$internal$$resolve(promise,value)},function rejectPromise(reason){lib$es6$promise$$internal$$reject(promise,reason)})}catch(e){lib$es6$promise$$internal$$reject(promise,e)}}function lib$es6$promise$enumerator$$Enumerator(Constructor,input){var enumerator=this;enumerator._instanceConstructor=Constructor;enumerator.promise=new Constructor(lib$es6$promise$$internal$$noop);if(enumerator._validateInput(input)){enumerator._input=input;enumerator.length=input.length;enumerator._remaining=input.length;enumerator._init();if(enumerator.length===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}else{enumerator.length=enumerator.length||0;enumerator._enumerate();if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}}}else{lib$es6$promise$$internal$$reject(enumerator.promise,enumerator._validationError())}}lib$es6$promise$enumerator$$Enumerator.prototype._validateInput=function(input){return lib$es6$promise$utils$$isArray(input)};lib$es6$promise$enumerator$$Enumerator.prototype._validationError=function(){return new Error(\"Array Methods must be provided an Array\")};lib$es6$promise$enumerator$$Enumerator.prototype._init=function(){this._result=new Array(this.length)};var lib$es6$promise$enumerator$$default=lib$es6$promise$enumerator$$Enumerator;lib$es6$promise$enumerator$$Enumerator.prototype._enumerate=function(){var enumerator=this;var length=enumerator.length;var promise=enumerator.promise;var input=enumerator._input;for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING\u0026\u0026i\u003clength;i++){enumerator._eachEntry(input[i],i)}};lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry=function(entry,i){var enumerator=this;var c=enumerator._instanceConstructor;if(lib$es6$promise$utils$$isMaybeThenable(entry)){if(entry.constructor===c\u0026\u0026entry._state!==lib$es6$promise$$internal$$PENDING){entry._onerror=null;enumerator._settledAt(entry._state,i,entry._result)}else{enumerator._willSettleAt(c.resolve(entry),i)}}else{enumerator._remaining--;enumerator._result[i]=entry}};lib$es6$promise$enumerator$$Enumerator.prototype._settledAt=function(state,i,value){var enumerator=this;var promise=enumerator.promise;if(promise._state===lib$es6$promise$$internal$$PENDING){enumerator._remaining--;if(state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}else{enumerator._result[i]=value}}if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(promise,enumerator._result)}};lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt=function(promise,i){var enumerator=this;lib$es6$promise$$internal$$subscribe(promise,undefined,function(value){enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED,i,value)},function(reason){enumerator._settledAt(lib$es6$promise$$internal$$REJECTED,i,reason)})};function lib$es6$promise$promise$all$$all(entries){return new lib$es6$promise$enumerator$$default(this,entries).promise}var lib$es6$promise$promise$all$$default=lib$es6$promise$promise$all$$all;function lib$es6$promise$promise$race$$race(entries){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);if(!lib$es6$promise$utils$$isArray(entries)){lib$es6$promise$$internal$$reject(promise,new TypeError(\"You must pass an array to race.\"));return promise}var length=entries.length;function onFulfillment(value){lib$es6$promise$$internal$$resolve(promise,value)}function onRejection(reason){lib$es6$promise$$internal$$reject(promise,reason)}for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING\u0026\u0026i\u003clength;i++){lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]),undefined,onFulfillment,onRejection)}return promise}var lib$es6$promise$promise$race$$default=lib$es6$promise$promise$race$$race;function lib$es6$promise$promise$resolve$$resolve(object){var Constructor=this;if(object\u0026\u0026typeof object===\"object\"\u0026\u0026object.constructor===Constructor){return object}var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$resolve(promise,object);return promise}var lib$es6$promise$promise$resolve$$default=lib$es6$promise$promise$resolve$$resolve;function lib$es6$promise$promise$reject$$reject(reason){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$reject(promise,reason);return promise}var lib$es6$promise$promise$reject$$default=lib$es6$promise$promise$reject$$reject;var lib$es6$promise$promise$$counter=0;function lib$es6$promise$promise$$needsResolver(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function lib$es6$promise$promise$$needsNew(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}var lib$es6$promise$promise$$default=lib$es6$promise$promise$$Promise;function lib$es6$promise$promise$$Promise(resolver){this._id=lib$es6$promise$promise$$counter++;this._state=undefined;this._result=undefined;this._subscribers=[];if(lib$es6$promise$$internal$$noop!==resolver){if(!lib$es6$promise$utils$$isFunction(resolver)){lib$es6$promise$promise$$needsResolver()}if(!(this instanceof lib$es6$promise$promise$$Promise)){lib$es6$promise$promise$$needsNew()}lib$es6$promise$$internal$$initializePromise(this,resolver)}}lib$es6$promise$promise$$Promise.all=lib$es6$promise$promise$all$$default;lib$es6$promise$promise$$Promise.race=lib$es6$promise$promise$race$$default;lib$es6$promise$promise$$Promise.resolve=lib$es6$promise$promise$resolve$$default;lib$es6$promise$promise$$Promise.reject=lib$es6$promise$promise$reject$$default;lib$es6$promise$promise$$Promise._setScheduler=lib$es6$promise$asap$$setScheduler;lib$es6$promise$promise$$Promise._setAsap=lib$es6$promise$asap$$setAsap;lib$es6$promise$promise$$Promise._asap=lib$es6$promise$asap$$asap;lib$es6$promise$promise$$Promise.prototype={constructor:lib$es6$promise$promise$$Promise,then:function(onFulfillment,onRejection){var parent=this;var state=parent._state;if(state===lib$es6$promise$$internal$$FULFILLED\u0026\u0026!onFulfillment||state===lib$es6$promise$$internal$$REJECTED\u0026\u0026!onRejection){return this}var child=new this.constructor(lib$es6$promise$$internal$$noop);var result=parent._result;if(state){var callback=arguments[state-1];lib$es6$promise$asap$$asap(function(){lib$es6$promise$$internal$$invokeCallback(state,child,callback,result)})}else{lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection)}return child},\"catch\":function(onRejection){return this.then(null,onRejection)}};function lib$es6$promise$polyfill$$polyfill(){var local;if(typeof global!==\"undefined\"){local=global}else if(typeof self!==\"undefined\"){local=self}else{try{local=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}}var P=local.Promise;if(P\u0026\u0026Object.prototype.toString.call(P.resolve())===\"[object Promise]\"\u0026\u0026!P.cast){return}local.Promise=lib$es6$promise$promise$$default}var lib$es6$promise$polyfill$$default=lib$es6$promise$polyfill$$polyfill;var lib$es6$promise$umd$$ES6Promise={Promise:lib$es6$promise$promise$$default,polyfill:lib$es6$promise$polyfill$$default};if(typeof define===\"function\"\u0026\u0026define[\"amd\"]){define(function(){return lib$es6$promise$umd$$ES6Promise})}else if(typeof module!==\"undefined\"\u0026\u0026module[\"exports\"]){module[\"exports\"]=lib$es6$promise$umd$$ES6Promise}else if(typeof this!==\"undefined\"){this[\"ES6Promise\"]=lib$es6$promise$umd$$ES6Promise}lib$es6$promise$polyfill$$default()}).call(this);"],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\-internal.js","LineCount":253,"CharCount":5114,"Comments":["    // noop","  } else if (hasCallback \u0026\u0026 succeeded) {"],"Functions":["function noop() }","function selfFulfillment() ","function cannotReturnOwn() ","function getThen(promise) ","function tryThen(then, value, fulfillmentHandler, rejectionHandler) ","function handleForeignThenable(promise, thenable, then) ","   asap(function(promise) ","    var error = tryThen(then, thenable, function(value) ","    }, function(reason) ","function handleOwnThenable(promise, thenable) ","    subscribe(thenable, undefined, function(value) ","    }, function(reason) ","function handleMaybeThenable(promise, maybeThenable) ","function resolve(promise, value) ","function publishRejection(promise) ","function fulfill(promise, value) ","function reject(promise, reason) ","function subscribe(parent, child, onFulfillment, onRejection) ","function publish(promise) ","function ErrorObject() ","function tryCatch(callback, detail) ","function invokeCallback(settled, promise, callback, detail) ","function initializePromise(promise, resolver) ","    resolver(function resolvePromise(value)","    }, function rejectPromise(reason) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\asap.js","LineCount":121,"CharCount":2812,"Comments":["    // If len is 2, that means that we need to schedule an async flush.","    // If additional callbacks are queued before the queue is flushed, they","    // will be processed by this flush that we are scheduling.","    if (customSchedulerFn) {","// test for web worker but not in IE10","var isWorker = typeof Uint8ClampedArray !== 'undefined' \u0026\u0026","// node","function useNextTick() {","  // node version 0.10.x displays a deprecation warning when nextTick is used recursively","  // see https://github.com/cujojs/when/issues/410 for details","  return function() {","// vertx","function useVertxTimer() {","// web worker","function useMessageChannel() {","// Decide what async method to use to triggering processing of queued callbacks:","if (isNode) {"],"Functions":["export var asap = function asap(callback, arg) ","export function setScheduler(scheduleFn) ","export function setAsap(asapFn) ","function useNextTick() ","  return function() ","function useVertxTimer() ","  return function() ","function useMutationObserver() ","  return function() ","function useMessageChannel() ","  return function () ","function useSetTimeout() ","  return function() ","function flush() ","function attemptVertx() ","} else if (browserWindow === undefined \u0026\u0026 typeof require === 'function') "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\enumerator.js","LineCount":114,"CharCount":2523,"Comments":[],"Functions":["function Enumerator(Constructor, input) ","Enumerator.prototype._validateInput = function(input) ","Enumerator.prototype._validationError = function() ","Enumerator.prototype._init = function() ","Enumerator.prototype._enumerate = function() ","Enumerator.prototype._eachEntry = function(entry, i) ","Enumerator.prototype._settledAt = function(state, i, value) ","Enumerator.prototype._willSettleAt = function(promise, i) ","  subscribe(promise, undefined, function(value) ","  }, function(reason) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\polyfill.js","LineCount":27,"CharCount":568,"Comments":["/*global self*/","import Promise from './promise';"],"Functions":["export default function polyfill() "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\promise\\all.js","LineCount":53,"CharCount":1519,"Comments":["/**","  `Promise.all` accepts an array of promises, and returns a new promise which","  is fulfilled with an array of fulfillment values for the passed promises, or","  rejected with the reason of the first passed promise to be rejected. It casts all","  elements of the passed iterable to promises as it runs this algorithm.","","  Example:","","  ```javascript","  var promise1 = resolve(1);","  var promise2 = resolve(2);","  var promise3 = resolve(3);","  var promises = [ promise1, promise2, promise3 ];","","  Promise.all(promises).then(function(array){","    // The array here would be [ 1, 2, 3 ];","  });","  ```","","  If any of the `promises` given to `all` are rejected, the first promise","  that is rejected will be given as an argument to the returned promises's","  rejection handler. For example:","","  Example:","","  ```javascript","  var promise1 = resolve(1);","  var promise2 = reject(new Error(\"2\"));","  var promise3 = reject(new Error(\"3\"));","  var promises = [ promise1, promise2, promise3 ];","","  Promise.all(promises).then(function(array){","    // Code here never runs because there are rejected promises!","  }, function(error) {","    // error.message === \"2\"","  });","  ```","","  @method all","  @static","  @param {Array} entries array of promises","  @param {String} label optional string for labeling the promise.","  Useful for tooling.","  @return {Promise} promise that is fulfilled when all `promises` have been","  fulfilled, or rejected if any of them become rejected.","  @static","*/","export default function all(entries) {"],"Functions":["  Promise.all(promises).then(function(array)","  Promise.all(promises).then(function(array)","  }, function(error) ","export default function all(entries) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\promise\\race.js","LineCount":105,"CharCount":2391,"Comments":["/**","  `Promise.race` returns a new promise which is settled in the same way as the","  first passed promise to settle.","","  Example:","","  ```javascript","  var promise1 = new Promise(function(resolve, reject){","    setTimeout(function(){","      resolve('promise 1');","    }, 200);","  });","","  var promise2 = new Promise(function(resolve, reject){","    setTimeout(function(){","      resolve('promise 2');","    }, 100);","  });","","  Promise.race([promise1, promise2]).then(function(result){","    // result === 'promise 2' because it was resolved before promise1","    // was resolved.","  });","  ```","","  `Promise.race` is deterministic in that only the state of the first","  settled promise matters. For example, even if other promises given to the","  `promises` array argument are resolved, but the first settled promise has","  become rejected before the other promises became fulfilled, the returned","  promise will become rejected:","","  ```javascript","  var promise1 = new Promise(function(resolve, reject){","    setTimeout(function(){","      resolve('promise 1');","    }, 200);","  });","","  var promise2 = new Promise(function(resolve, reject){","    setTimeout(function(){","      reject(new Error('promise 2'));","    }, 100);","  });","","  Promise.race([promise1, promise2]).then(function(result){","    // Code here never runs","  }, function(reason){","    // reason.message === 'promise 2' because promise 2 became rejected before","    // promise 1 became fulfilled","  });","  ```","","  An example real-world use case is implementing timeouts:","","  ```javascript","  Promise.race([ajax('foo.json'), timeout(5000)])","  ```","","  @method race","  @static","  @param {Array} promises array of promises to observe","  Useful for tooling.","  @return {Promise} a promise which settles in the same way as the first passed","  promise to settle.","*/","export default function race(entries) {","  /*jshint validthis:true */","  var Constructor = this;"],"Functions":["  var promise1 = new Promise(function(resolve, reject)","    setTimeout(function()","  var promise2 = new Promise(function(resolve, reject)","    setTimeout(function()","  Promise.race([promise1, promise2]).then(function(result)","  var promise1 = new Promise(function(resolve, reject)","    setTimeout(function()","  var promise2 = new Promise(function(resolve, reject)","    setTimeout(function()","  Promise.race([promise1, promise2]).then(function(result)","  }, function(reason)","export default function race(entries) ","  function onFulfillment(value) ","  function onRejection(reason) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\promise\\reject.js","LineCount":47,"CharCount":1093,"Comments":["/**","  `Promise.reject` returns a promise rejected with the passed `reason`.","  It is shorthand for the following:","","  ```javascript","  var promise = new Promise(function(resolve, reject){","    reject(new Error('WHOOPS'));","  });","","  promise.then(function(value){","    // Code here doesn't run because the promise is rejected!","  }, function(reason){","    // reason.message === 'WHOOPS'","  });","  ```","","  Instead of writing the above, your code now simply becomes the following:","","  ```javascript","  var promise = Promise.reject(new Error('WHOOPS'));","","  promise.then(function(value){","    // Code here doesn't run because the promise is rejected!","  }, function(reason){","    // reason.message === 'WHOOPS'","  });","  ```","","  @method reject","  @static","  @param {Any} reason value that the returned promise will be rejected with.","  Useful for tooling.","  @return {Promise} a promise rejected with the given `reason`.","*/","export default function reject(reason) {","  /*jshint validthis:true */","  var Constructor = this;"],"Functions":["  var promise = new Promise(function(resolve, reject)","  promise.then(function(value)","  }, function(reason)","  promise.then(function(value)","  }, function(reason)","export default function reject(reason) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\promise\\resolve.js","LineCount":49,"CharCount":1002,"Comments":["/**","  `Promise.resolve` returns a promise that will become resolved with the","  passed `value`. It is shorthand for the following:","","  ```javascript","  var promise = new Promise(function(resolve, reject){","    resolve(1);","  });","","  promise.then(function(value){","    // value === 1","  });","  ```","","  Instead of writing the above, your code now simply becomes the following:","","  ```javascript","  var promise = Promise.resolve(1);","","  promise.then(function(value){","    // value === 1","  });","  ```","","  @method resolve","  @static","  @param {Any} value value that the returned promise will be resolved with","  Useful for tooling.","  @return {Promise} a promise that will become fulfilled with the given","  `value`","*/","export default function resolve(object) {","  /*jshint validthis:true */","  var Constructor = this;"],"Functions":["  var promise = new Promise(function(resolve, reject)","  promise.then(function(value)","  promise.then(function(value)","export default function resolve(object) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\promise.js","LineCount":416,"CharCount":9181,"Comments":["/**","  Promise objects represent the eventual result of an asynchronous operation. The","  primary way of interacting with a promise is through its `then` method, which","  registers callbacks to receive either a promise's eventual value or the reason","  why the promise cannot be fulfilled.","","  Terminology","  -----------","","  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.","  - `thenable` is an object or function that defines a `then` method.","  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).","  - `exception` is a value that is thrown using the throw statement.","  - `reason` is a value that indicates why a promise was rejected.","  - `settled` the final resting state of a promise, fulfilled or rejected.","","  A promise can be in one of three states: pending, fulfilled, or rejected.","","  Promises that are fulfilled have a fulfillment value and are in the fulfilled","  state.  Promises that are rejected have a rejection reason and are in the","  rejected state.  A fulfillment value is never a thenable.","","  Promises can also be said to *resolve* a value.  If this value is also a","  promise, then the original promise's settled state will match the value's","  settled state.  So a promise that *resolves* a promise that rejects will","  itself reject, and a promise that *resolves* a promise that fulfills will","  itself fulfill.","","","  Basic Usage:","  ------------","","  ```js","  var promise = new Promise(function(resolve, reject) {","    // on success","    resolve(value);","","    // on failure","    reject(reason);","  });","","  promise.then(function(value) {","    // on fulfillment","  }, function(reason) {","    // on rejection","  });","  ```","","  Advanced Usage:","  ---------------","","  Promises shine when abstracting away asynchronous interactions such as","  `XMLHttpRequest`s.","","  ```js","  function getJSON(url) {","    return new Promise(function(resolve, reject){","      var xhr = new XMLHttpRequest();","","      xhr.open('GET', url);","      xhr.onreadystatechange = handler;","      xhr.responseType = 'json';","      xhr.setRequestHeader('Accept', 'application/json');","      xhr.send();","","      function handler() {","        if (this.readyState === this.DONE) {","          if (this.status === 200) {","            resolve(this.response);","          } else {","            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));","          }","        }","      };","    });","  }","","  getJSON('/posts.json').then(function(json) {","    // on fulfillment","  }, function(reason) {","    // on rejection","  });","  ```","","  Unlike callbacks, promises are great composable primitives.","","  ```js","  Promise.all([","    getJSON('/posts'),","    getJSON('/comments')","  ]).then(function(values){","    values[0] // =\u003e postsJSON","    values[1] // =\u003e commentsJSON","","    return values;","  });","  ```","","  @class Promise","  @param {function} resolver","  Useful for tooling.","  @constructor","*/","function Promise(resolver) {","/**","  The primary way of interacting with a promise is through its `then` method,","  which registers callbacks to receive either a promise's eventual value or the","  reason why the promise cannot be fulfilled.","","  ```js","  findUser().then(function(user){","    // user is available","  }, function(reason){","    // user is unavailable, and you are given the reason why","  });","  ```","","  Chaining","  --------","","  The return value of `then` is itself a promise.  This second, 'downstream'","  promise is resolved with the return value of the first promise's fulfillment","  or rejection handler, or rejected if the handler throws an exception.","","  ```js","  findUser().then(function (user) {","    return user.name;","  }, function (reason) {","    return 'default name';","  }).then(function (userName) {","    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it","    // will be `'default name'`","  });","","  findUser().then(function (user) {","    throw new Error('Found user, but still unhappy');","  }, function (reason) {","    throw new Error('`findUser` rejected and we're unhappy');","  }).then(function (value) {","    // never reached","  }, function (reason) {","    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.","    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.","  });","  ```","  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.","","  ```js","  findUser().then(function (user) {","    throw new PedagogicalException('Upstream error');","  }).then(function (value) {","    // never reached","  }).then(function (value) {","    // never reached","  }, function (reason) {","    // The `PedgagocialException` is propagated all the way down to here","  });","  ```","","  Assimilation","  ------------","","  Sometimes the value you want to propagate to a downstream promise can only be","  retrieved asynchronously. This can be achieved by returning a promise in the","  fulfillment or rejection handler. The downstream promise will then be pending","  until the returned promise is settled. This is called *assimilation*.","","  ```js","  findUser().then(function (user) {","    return findCommentsByAuthor(user);","  }).then(function (comments) {","    // The user's comments are now available","  });","  ```","","  If the assimliated promise rejects, then the downstream promise will also reject.","","  ```js","  findUser().then(function (user) {","    return findCommentsByAuthor(user);","  }).then(function (comments) {","    // If `findCommentsByAuthor` fulfills, we'll have the value here","  }, function (reason) {","    // If `findCommentsByAuthor` rejects, we'll have the reason here","  });","  ```","","  Simple Example","  --------------","","  Synchronous Example","","  ```javascript","  var result;","","  try {","    result = findResult();","    // success","  } catch(reason) {","    // failure","  }","  ```","","  Errback Example","","  ```js","  findResult(function(result, err){","    if (err) {","      // failure","    } else {","      // success","    }","  });","  ```","","  Promise Example;","","  ```javascript","  findResult().then(function(result){","    // success","  }, function(reason){","    // failure","  });","  ```","","  Advanced Example","  --------------","","  Synchronous Example","","  ```javascript","  var author, books;","","  try {","    author = findAuthor();","    books  = findBooksByAuthor(author);","    // success","  } catch(reason) {","    // failure","  }","  ```","","  Errback Example","","  ```js","","  function foundBooks(books) {","","  }","","  function failure(reason) {","","  }","","  findAuthor(function(author, err){","    if (err) {","      failure(err);","      // failure","    } else {","      try {","        findBoooksByAuthor(author, function(books, err) {","          if (err) {","            failure(err);","          } else {","            try {","              foundBooks(books);","            } catch(reason) {","              failure(reason);","            }","          }","        });","      } catch(error) {","        failure(err);","      }","      // success","    }","  });","  ```","","  Promise Example;","","  ```javascript","  findAuthor().","    then(findBooksByAuthor).","    then(function(books){","      // found books","  }).catch(function(reason){","    // something went wrong","  });","  ```","","  @method then","  @param {Function} onFulfilled","  @param {Function} onRejected","  Useful for tooling.","  @return {Promise}","*/","  then: function(onFulfillment, onRejection) {","/**","  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same","  as the catch block of a try/catch statement.","","  ```js","  function findAuthor(){","    throw new Error('couldn't find that author');","  }","","  // synchronous","  try {","    findAuthor();","  } catch(reason) {","    // something went wrong","  }","","  // async with promises","  findAuthor().catch(function(reason){","    // something went wrong","  });","  ```","","  @method catch","  @param {Function} onRejection","  Useful for tooling.","  @return {Promise}","*/","  'catch': function(onRejection) {"],"Functions":["function needsResolver() ","  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');","function needsNew() ","  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");","  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.","  - `thenable` is an object or function that defines a `then` method.","  var promise = new Promise(function(resolve, reject) ","  promise.then(function(value) ","  }, function(reason) ","  function getJSON(url) ","    return new Promise(function(resolve, reject)","      function handler() ","  getJSON('/posts.json').then(function(json) ","  }, function(reason) ","  ]).then(function(values)","  @param function} resolver","function Promise(resolver) ","  findUser().then(function(user)","  }, function(reason)","  findUser().then(function (user) ","  }, function (reason) ","  }).then(function (userName) ","  findUser().then(function (user) ","  }, function (reason) ","  }).then(function (value) ","  }, function (reason) ","  findUser().then(function (user) ","  }).then(function (value) ","  }).then(function (value) ","  }, function (reason) ","  findUser().then(function (user) ","  }).then(function (comments) ","  findUser().then(function (user) ","  }).then(function (comments) ","  }, function (reason) ","  findResult(function(result, err)","  findResult().then(function(result)","  }, function(reason)","  function foundBooks(books) ","  function failure(reason) ","  findAuthor(function(author, err)","        findBoooksByAuthor(author, function(books, err) ","    then(function(books)","  }).catch(function(reason)","  then: function(onFulfillment, onRejection) ","      asap(function()","  function findAuthor()","  findAuthor().catch(function(reason)","  'catch': function(onRejection) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise\\utils.js","LineCount":23,"CharCount":456,"Comments":[],"Functions":["export function objectOrFunction(x) ","  return typeof x === 'function' || (typeof x === 'object' \u0026\u0026 x !== null);","export function isFunction(x) ","  return typeof x === 'function';","export function isMaybeThenable(x) ","  _isArray = function (x) "],"Dependencies":null},{"FileName":"node_modules\\es6-promise\\lib\\es6-promise.umd.js","LineCount":19,"CharCount":482,"Comments":["/* global define:true module:true window: true */","if (typeof define === 'function' \u0026\u0026 define['amd']) {"],"Functions":["if (typeof define === 'function' \u0026\u0026 define['amd']) ","  define(function()  return ES6Promise; });"],"Dependencies":null},{"FileName":"node_modules\\escape-html\\index.js","LineCount":79,"CharCount":1284,"Comments":["/*!"," * escape-html"," * Copyright(c) 2012-2013 TJ Holowaychuk"," * Copyright(c) 2015 Andreas Lubbe"," * Copyright(c) 2015 Tiancheng \"Timothy\" Gu"," * MIT Licensed"," */","","'use strict';","/**"," * Module variables."," * @private"," */","","var matchHtmlRegExp = /[\"'\u0026\u003c\u003e]/;","/**"," * Module exports."," * @public"," */","","module.exports = escapeHtml;","/**"," * Escape special characters in the given string of html."," *"," * @param  {string} string The string to escape for inserting into HTML"," * @return {string}"," * @public"," */","","function escapeHtml(string) {","      case 34: // \"","        escape = '\u0026quot;';","      case 38: // \u0026","        escape = '\u0026amp;';","      case 39: // '","        escape = '\u0026#39;';","      case 60: // \u003c","        escape = '\u0026lt;';","      case 62: // \u003e","        escape = '\u0026gt;';"],"Functions":["function escapeHtml(string) "],"Dependencies":null},{"FileName":"node_modules\\etag\\index.js","LineCount":133,"CharCount":2385,"Comments":["/*!"," * etag"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = etag","/**"," * Module dependencies."," * @private"," */","","var crypto = require('crypto')","/**"," * Module variables."," * @private"," */","","var base64PadCharRegExp = /=+$/","/**"," * Generate an entity tag."," *"," * @param {Buffer|string} entity"," * @return {string}"," * @private"," */","","function entitytag(entity) {","    // fast-path empty","    return '\"0-1B2M2Y8AsgTpgAmY7PhCfg\"'","  // compute hash of entity","  var hash = crypto","  // compute length of entity","  var len = typeof entity === 'string'","/**"," * Create a simple ETag."," *"," * @param {string|Buffer|Stats} entity"," * @param {object} [options]"," * @param {boolean} [options.weak]"," * @return {String}"," * @public"," */","","function etag(entity, options) {","  // support fs.Stats object","  var isStats = isstats(entity)","  // validate argument","  if (!isStats \u0026\u0026 typeof entity !== 'string' \u0026\u0026 !Buffer.isBuffer(entity)) {","  // generate entity tag","  var tag = isStats","/**"," * Determine if object is a Stats object."," *"," * @param {object} obj"," * @return {boolean}"," * @api private"," */","","function isstats(obj) {","  // genuine fs.Stats","  if (typeof Stats === 'function' \u0026\u0026 obj instanceof Stats) {","  // quack quack","  return obj \u0026\u0026 typeof obj === 'object'","/**"," * Generate a tag for a stat."," *"," * @param {object} stat"," * @return {string}"," * @private"," */","","function stattag(stat) {"],"Functions":["function entitytag(entity) ","function etag(entity, options) ","function isstats(obj) ","  if (typeof Stats === 'function' \u0026\u0026 obj instanceof Stats) ","function stattag(stat) "],"Dependencies":["crypto","fs"]},{"FileName":"node_modules\\express\\index.js","LineCount":12,"CharCount":213,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';"],"Functions":null,"Dependencies":["./lib/express"]},{"FileName":"node_modules\\express\\lib\\application.js","LineCount":644,"CharCount":13559,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var finalhandler = require('finalhandler');","/**"," * Application prototype."," */","","var app = exports = module.exports = {};","/**"," * Variable for trust proxy inheritance back-compat"," * @private"," */","","var trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';","/**"," * Initialize the server."," *"," *   - setup default configuration"," *   - setup default middleware"," *   - setup route reflection methods"," *"," * @private"," */","","app.init = function init() {","/**"," * Initialize application configuration."," * @private"," */","","app.defaultConfiguration = function defaultConfiguration() {","  // default settings","  this.enable('x-powered-by');","  // trust proxy inherit back-compat","  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {","    // inherit trust proxy","    if (this.settings[trustProxyDefaultSymbol] === true","    // inherit protos","    this.request.__proto__ = parent.request;","  // setup locals","  this.locals = Object.create(null);","  // top-most app is mounted at /","  this.mountpath = '/';","  // default locals","  this.locals.settings = this.settings;","  // default configuration","  this.set('view', View);","/**"," * lazily adds the base router if it has not yet been added."," *"," * We cannot add the base router in the defaultConfiguration because"," * it reads app settings which might be set after that has run."," *"," * @private"," */","app.lazyrouter = function lazyrouter() {","/**"," * Dispatch a req, res pair into the application. Starts pipeline processing."," *"," * If no callback is provided, then default error handlers will respond"," * in the event of an error bubbling through the stack."," *"," * @private"," */","","app.handle = function handle(req, res, callback) {","  // final handler","  var done = callback || finalhandler(req, res, {","  // no routes","  if (!router) {","/**"," * Proxy `Router#use()` to add middleware to the app router."," * See Router#use() documentation for details."," *"," * If the _fn_ parameter is an express app, then it will be"," * mounted at the _route_ specified."," *"," * @public"," */","","app.use = function use(fn) {","  // default path to '/'","  // disambiguate app.use([fn])","  if (typeof fn !== 'function') {","    // first arg is the path","    if (typeof arg !== 'function') {","  // setup router","  this.lazyrouter();","    // non-express app","    if (!fn || !fn.handle || !fn.set) {","    // restore .app property on req and res","    router.use(path, function mounted_app(req, res, next) {","    // mounted an app","    fn.emit('mount', this);","/**"," * Proxy to the app `Router#route()`"," * Returns a new `Route` instance for the _path_."," *"," * Routes are isolated middleware stacks for specific paths."," * See the Route api docs for details."," *"," * @public"," */","","app.route = function route(path) {","/**"," * Register the given template engine callback `fn`"," * as `ext`."," *"," * By default will `require()` the engine based on the"," * file extension. For example if you try to render"," * a \"foo.jade\" file Express will invoke the following internally:"," *"," *     app.engine('jade', require('jade').__express);"," *"," * For engines that do not provide `.__express` out of the box,"," * or if you wish to \"map\" a different extension to the template engine"," * you may use this method. For example mapping the EJS template engine to"," * \".html\" files:"," *"," *     app.engine('html', require('ejs').renderFile);"," *"," * In this case EJS provides a `.renderFile()` method with"," * the same signature that Express expects: `(path, options, callback)`,"," * though note that it aliases this method as `ejs.__express` internally"," * so if you're using \".ejs\" extensions you dont need to do anything."," *"," * Some template engines do not follow this convention, the"," * [Consolidate.js](https://github.com/tj/consolidate.js)"," * library was created to map all of node's popular template"," * engines to follow this convention, thus allowing them to"," * work seamlessly within Express."," *"," * @param {String} ext"," * @param {Function} fn"," * @return {app} for chaining"," * @public"," */","","app.engine = function engine(ext, fn) {","  // get file extension","  var extension = ext[0] !== '.'","  // store engine","  this.engines[extension] = fn;","/**"," * Proxy to `Router#param()` with one added api feature. The _name_ parameter"," * can be an array of names."," *"," * See the Router#param() docs for more details."," *"," * @param {String|Array} name"," * @param {Function} fn"," * @return {app} for chaining"," * @public"," */","","app.param = function param(name, fn) {","/**"," * Assign `setting` to `val`, or return `setting`'s value."," *"," *    app.set('foo', 'bar');"," *    app.get('foo');"," *    // =\u003e \"bar\""," *"," * Mounted servers inherit their parent server's settings."," *"," * @param {String} setting"," * @param {*} [val]"," * @return {Server} for chaining"," * @public"," */","","app.set = function set(setting, val) {","    // app.get(setting)","    return this.settings[setting];","  // set value","  this.settings[setting] = val;","  // trigger matched settings","  switch (setting) {","      // trust proxy inherit back-compat","      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {","/**"," * Return the app's absolute pathname"," * based on the parent(s) that have"," * mounted it."," *"," * For example if the application was"," * mounted as \"/admin\", which itself"," * was mounted as \"/blog\" then the"," * return value would be \"/blog/admin\"."," *"," * @return {String}"," * @private"," */","","app.path = function path() {","/**"," * Check if `setting` is enabled (truthy)."," *"," *    app.enabled('foo')"," *    // =\u003e false"," *"," *    app.enable('foo')"," *    app.enabled('foo')"," *    // =\u003e true"," *"," * @param {String} setting"," * @return {Boolean}"," * @public"," */","","app.enabled = function enabled(setting) {","/**"," * Check if `setting` is disabled."," *"," *    app.disabled('foo')"," *    // =\u003e true"," *"," *    app.enable('foo')"," *    app.disabled('foo')"," *    // =\u003e false"," *"," * @param {String} setting"," * @return {Boolean}"," * @public"," */","","app.disabled = function disabled(setting) {","/**"," * Enable `setting`."," *"," * @param {String} setting"," * @return {app} for chaining"," * @public"," */","","app.enable = function enable(setting) {","/**"," * Disable `setting`."," *"," * @param {String} setting"," * @return {app} for chaining"," * @public"," */","","app.disable = function disable(setting) {","/**"," * Delegate `.VERB(...)` calls to `router.VERB(...)`."," */","","methods.forEach(function(method){","      // app.get(setting)","      return this.set(path);","/**"," * Special-cased \"all\" method, applying the given route `path`,"," * middleware, and callback to _every_ HTTP method."," *"," * @param {String} path"," * @param {Function} ..."," * @return {app} for chaining"," * @public"," */","","app.all = function all(path) {","// del -\u003e delete alias","","app.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');","/**"," * Render the given view `name` name with `options`"," * and a callback accepting an error and the"," * rendered template string."," *"," * Example:"," *"," *    app.render('email', { name: 'Tobi' }, function(err, html){"," *      // ..."," *    })"," *"," * @param {String} name"," * @param {Object|Function} options or fn"," * @param {Function} callback"," * @public"," */","","app.render = function render(name, options, callback) {","  // support callback function as second arg","  if (typeof options === 'function') {","  // merge app.locals","  merge(renderOptions, this.locals);","  // merge options._locals","  if (opts._locals) {","  // merge options","  merge(renderOptions, opts);","  // set .cache unless explicitly provided","  if (renderOptions.cache == null) {","  // primed cache","  if (renderOptions.cache) {","  // view","  if (!view) {","    // prime the cache","    if (renderOptions.cache) {","  // render","  tryRender(view, renderOptions, done);","/**"," * Listen for connections."," *"," * A node `http.Server` is returned, with this"," * application (which is a `Function`) as its"," * callback. If you wish to create both an HTTP"," * and HTTPS server you may do so with the \"http\""," * and \"https\" modules as shown here:"," *"," *    var http = require('http')"," *      , https = require('https')"," *      , express = require('express')"," *      , app = express();"," *"," *    http.createServer(app).listen(80);"," *    https.createServer({ ... }, app).listen(443);"," *"," * @return {http.Server}"," * @public"," */","","app.listen = function listen() {","/**"," * Log error using console.error."," *"," * @param {Error} err"," * @private"," */","","function logerror(err) {","  /* istanbul ignore next */","  if (this.get('env') !== 'test') console.error(err.stack || err.toString());","/**"," * Try rendering a view."," * @private"," */","","function tryRender(view, options, callback) {"],"Functions":["app.init = function init() ","app.defaultConfiguration = function defaultConfiguration() ","  this.on('mount', function onmount(parent) ","      \u0026\u0026 typeof parent.settings['trust proxy fn'] === 'function') ","    get: function() ","app.lazyrouter = function lazyrouter() ","app.handle = function handle(req, res, callback) ","app.use = function use(fn) ","  if (typeof fn !== 'function') ","    if (typeof arg !== 'function') ","    throw new TypeError('app.use() requires middleware functions');","  fns.forEach(function (fn) ","    router.use(path, function mounted_app(req, res, next) ","      fn.handle(req, res, function (err) ","app.route = function route(path) ","app.engine = function engine(ext, fn) ","  if (typeof fn !== 'function') ","    throw new Error('callback function required');","app.param = function param(name, fn) ","app.set = function set(setting, val) ","app.path = function path() ","app.enabled = function enabled(setting) ","app.disabled = function disabled(setting) ","app.enable = function enable(setting) ","app.disable = function disable(setting) ","methods.forEach(function(method)","  app[method] = function(path)","app.all = function all(path) ","app.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');"," *    app.render('email',  name: 'Tobi' }, function(err, html){","app.render = function render(name, options, callback) ","  // support callback function as second arg","  if (typeof options === 'function') ","app.listen = function listen() ","function logerror(err) ","function tryRender(view, options, callback) "],"Dependencies":["finalhandler","./router","methods","./middleware/init","./middleware/query","debug\")(\"express:application","./view","http","./utils","./utils","./utils","depd\")(\"express","array-flatten","utils-merge","path","http","https","express"]},{"FileName":"node_modules\\express\\lib\\express.js","LineCount":104,"CharCount":1851,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","/**"," * Expose `createApplication()`."," */","","exports = module.exports = createApplication;","/**"," * Create an express application."," *"," * @return {Function}"," * @api public"," */","","function createApplication() {","/**"," * Expose the prototypes."," */","","exports.application = proto;","/**"," * Expose constructors."," */","","exports.Route = Route;","/**"," * Expose middleware"," */","","exports.query = require('./middleware/query');","/**"," * Replace removed middleware with an appropriate error message."," */","","[","      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');","    },"],"Functions":["function createApplication() ","  var app = function(req, res, next) ","].forEach(function (name) ","    get: function () "],"Dependencies":["events","merge-descriptors","./application","./router/route","./router","./request","./response","./middleware/query","serve-static"]},{"FileName":"node_modules\\express\\lib\\middleware\\init.js","LineCount":37,"CharCount":716,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Initialization middleware, exposing the"," * request and response to each other, as well"," * as defaulting the X-Powered-By header field."," *"," * @param {Function} app"," * @return {Function}"," * @api private"," */","","exports.init = function(app){"],"Functions":["exports.init = function(app)","  return function expressInit(req, res, next)"],"Dependencies":null},{"FileName":"node_modules\\express\\lib\\middleware\\query.js","LineCount":47,"CharCount":817,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," */","","var parseUrl = require('parseurl');","/**"," * @param {Object} options"," * @return {Function}"," * @api public"," */","","module.exports = function query(options) {","    // back-compat for qs module","    opts.allowPrototypes = true;"],"Functions":["module.exports = function query(options) ","  if (typeof options === 'function') ","  return function query(req, res, next)"],"Dependencies":["parseurl","qs"]},{"FileName":"node_modules\\express\\lib\\request.js","LineCount":503,"CharCount":11490,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var accepts = require('accepts');","/**"," * Request prototype."," */","","var req = exports = module.exports = {","/**"," * Return request header."," *"," * The `Referrer` header field is special-cased,"," * both `Referrer` and `Referer` are interchangeable."," *"," * Examples:"," *"," *     req.get('Content-Type');"," *     // =\u003e \"text/plain\""," *"," *     req.get('content-type');"," *     // =\u003e \"text/plain\""," *"," *     req.get('Something');"," *     // =\u003e undefined"," *"," * Aliased as `req.header()`."," *"," * @param {String} name"," * @return {String}"," * @public"," */","","req.get =","/**"," * To do: update docs."," *"," * Check if the given `type(s)` is acceptable, returning"," * the best match when true, otherwise `undefined`, in which"," * case you should respond with 406 \"Not Acceptable\"."," *"," * The `type` value may be a single MIME type string"," * such as \"application/json\", an extension name"," * such as \"json\", a comma-delimited list such as \"json, html, text/plain\","," * an argument list such as `\"json\", \"html\", \"text/plain\"`,"," * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list"," * or array is given, the _best_ match, if any is returned."," *"," * Examples:"," *"," *     // Accept: text/html"," *     req.accepts('html');"," *     // =\u003e \"html\""," *"," *     // Accept: text/*, application/json"," *     req.accepts('html');"," *     // =\u003e \"html\""," *     req.accepts('text/html');"," *     // =\u003e \"text/html\""," *     req.accepts('json, text');"," *     // =\u003e \"json\""," *     req.accepts('application/json');"," *     // =\u003e \"application/json\""," *"," *     // Accept: text/*, application/json"," *     req.accepts('image/png');"," *     req.accepts('png');"," *     // =\u003e undefined"," *"," *     // Accept: text/*;q=.5, application/json"," *     req.accepts(['html', 'json']);"," *     req.accepts('html', 'json');"," *     req.accepts('html, json');"," *     // =\u003e \"json\""," *"," * @param {String|Array} type(s)"," * @return {String|Array|Boolean}"," * @public"," */","","req.accepts = function(){","/**"," * Check if the given `encoding`s are accepted."," *"," * @param {String} ...encoding"," * @return {String|Array}"," * @public"," */","","req.acceptsEncodings = function(){","/**"," * Check if the given `charset`s are acceptable,"," * otherwise you should respond with 406 \"Not Acceptable\"."," *"," * @param {String} ...charset"," * @return {String|Array}"," * @public"," */","","req.acceptsCharsets = function(){","/**"," * Check if the given `lang`s are acceptable,"," * otherwise you should respond with 406 \"Not Acceptable\"."," *"," * @param {String} ...lang"," * @return {String|Array}"," * @public"," */","","req.acceptsLanguages = function(){","/**"," * Parse Range header field, capping to the given `size`."," *"," * Unspecified ranges such as \"0-\" require knowledge of your resource length. In"," * the case of a byte range this is of course the total number of bytes. If the"," * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,"," * and `-2` when syntactically invalid."," *"," * When ranges are returned, the array has a \"type\" property which is the type of"," * range that is required (most commonly, \"bytes\"). Each array element is an object"," * with a \"start\" and \"end\" property for the portion of the range."," *"," * The \"combine\" option can be set to `true` and overlapping \u0026 adjacent ranges"," * will be combined into a single range."," *"," * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\""," * should respond with 4 users when available, not 3."," *"," * @param {number} size"," * @param {object} [options]"," * @param {boolean} [options.combine=false]"," * @return {number|array}"," * @public"," */","","req.range = function range(size, options) {","/**"," * Return the value of param `name` when present or `defaultValue`."," *"," *  - Checks route placeholders, ex: _/user/:id_"," *  - Checks body params, ex: id=12, {\"id\":12}"," *  - Checks query string params, ex: ?id=12"," *"," * To utilize request bodies, `req.body`"," * should be an object. This can be done by using"," * the `bodyParser()` middleware."," *"," * @param {String} name"," * @param {Mixed} [defaultValue]"," * @return {String}"," * @public"," */","","req.param = function param(name, defaultValue) {","/**"," * Check if the incoming request contains the \"Content-Type\""," * header field, and it contains the give mime `type`."," *"," * Examples:"," *"," *      // With Content-Type: text/html; charset=utf-8"," *      req.is('html');"," *      req.is('text/html');"," *      req.is('text/*');"," *      // =\u003e true"," *"," *      // When Content-Type is application/json"," *      req.is('json');"," *      req.is('application/json');"," *      req.is('application/*');"," *      // =\u003e true"," *"," *      req.is('html');"," *      // =\u003e false"," *"," * @param {String|Array} types..."," * @return {String|false|null}"," * @public"," */","","req.is = function is(types) {","  // support flattened arguments","  if (!Array.isArray(types)) {","/**"," * Return the protocol string \"http\" or \"https\""," * when requested with TLS. When the \"trust proxy\""," * setting trusts the socket address, the"," * \"X-Forwarded-Proto\" header field will be trusted"," * and used if present."," *"," * If you're running behind a reverse proxy that"," * supplies https for you this may be enabled."," *"," * @return {String}"," * @public"," */","","defineGetter(req, 'protocol', function protocol(){","  // Note: X-Forwarded-Proto is normally only ever a","  //       single value, but this is to be safe.","  proto = this.get('X-Forwarded-Proto') || proto;","/**"," * Short-hand for:"," *"," *    req.protocol === 'https'"," *"," * @return {Boolean}"," * @public"," */","","defineGetter(req, 'secure', function secure(){","/**"," * Return the remote address from the trusted proxy."," *"," * The is the remote address on the socket unless"," * \"trust proxy\" is set."," *"," * @return {String}"," * @public"," */","","defineGetter(req, 'ip', function ip(){","/**"," * When \"trust proxy\" is set, trusted proxy addresses + client."," *"," * For example if the value were \"client, proxy1, proxy2\""," * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`"," * where \"proxy2\" is the furthest down-stream and \"proxy1\" and"," * \"proxy2\" were trusted."," *"," * @return {Array}"," * @public"," */","","defineGetter(req, 'ips', function ips() {","/**"," * Return subdomains as an array."," *"," * Subdomains are the dot-separated parts of the host before the main domain of"," * the app. By default, the domain of the app is assumed to be the last two"," * parts of the host. This can be changed by setting \"subdomain offset\"."," *"," * For example, if the domain is \"tobi.ferrets.example.com\":"," * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`."," * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`."," *"," * @return {Array}"," * @public"," */","","defineGetter(req, 'subdomains', function subdomains() {","/**"," * Short-hand for `url.parse(req.url).pathname`."," *"," * @return {String}"," * @public"," */","","defineGetter(req, 'path', function path() {","/**"," * Parse the \"Host\" header field to a hostname."," *"," * When the \"trust proxy\" setting trusts the socket"," * address, the \"X-Forwarded-Host\" header field will"," * be trusted."," *"," * @return {String}"," * @public"," */","","defineGetter(req, 'hostname', function hostname(){","  // IPv6 literal support","  var offset = host[0] === '['","// TODO: change req.host to return host in next major","","defineGetter(req, 'host', deprecate.function(function host(){","/**"," * Check if the request is fresh, aka"," * Last-Modified and/or the ETag"," * still match."," *"," * @return {Boolean}"," * @public"," */","","defineGetter(req, 'fresh', function(){","  // GET or HEAD for weak freshness validation only","  if ('GET' !== method \u0026\u0026 'HEAD' !== method) return false;","  // 2xx or 304 as per rfc2616 14.26","  if ((s \u003e= 200 \u0026\u0026 s \u003c 300) || 304 === s) {","/**"," * Check if the request is stale, aka"," * \"Last-Modified\" and / or the \"ETag\" for the"," * resource has changed."," *"," * @return {Boolean}"," * @public"," */","","defineGetter(req, 'stale', function stale(){","/**"," * Check if the request was an _XMLHttpRequest_."," *"," * @return {Boolean}"," * @public"," */","","defineGetter(req, 'xhr', function xhr(){","/**"," * Helper function for creating a getter on an object."," *"," * @param {Object} obj"," * @param {String} name"," * @param {Function} getter"," * @private"," */","function defineGetter(obj, name, getter) {"],"Functions":["req.header = function header(name) ","req.accepts = function()","req.acceptsEncodings = function()","req.acceptsEncoding = deprecate.function(req.acceptsEncodings,","req.acceptsCharsets = function()","req.acceptsCharset = deprecate.function(req.acceptsCharsets,","req.acceptsLanguages = function()","req.acceptsLanguage = deprecate.function(req.acceptsLanguages,","req.range = function range(size, options) ","req.param = function param(name, defaultValue) ","req.is = function is(types) ","defineGetter(req, 'protocol', function protocol()","defineGetter(req, 'secure', function secure()","defineGetter(req, 'ip', function ip()","defineGetter(req, 'ips', function ips() ","defineGetter(req, 'subdomains', function subdomains() ","defineGetter(req, 'path', function path() ","defineGetter(req, 'hostname', function hostname()","defineGetter(req, 'host', deprecate.function(function host()","defineGetter(req, 'fresh', function()","defineGetter(req, 'stale', function stale()","defineGetter(req, 'xhr', function xhr()"," * Helper function for creating a getter on an object.","function defineGetter(obj, name, getter) "],"Dependencies":["accepts","depd\")(\"express","net","type-is","http","fresh","range-parser","parseurl","proxy-addr"]},{"FileName":"node_modules\\express\\lib\\response.js","LineCount":1066,"CharCount":24056,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var contentDisposition = require('content-disposition');","/**"," * Response prototype."," */","","var res = module.exports = {","/**"," * Module variables."," * @private"," */","","var charsetRegExp = /;\\s*charset\\s*=/;","/**"," * Set status `code`."," *"," * @param {Number} code"," * @return {ServerResponse}"," * @public"," */","","res.status = function status(code) {","/**"," * Set Link header field with the given `links`."," *"," * Examples:"," *"," *    res.links({"," *      next: 'http://api.example.com/users?page=2',"," *      last: 'http://api.example.com/users?page=5'"," *    });"," *"," * @param {Object} links"," * @return {ServerResponse}"," * @public"," */","","res.links = function(links){","/**"," * Send a response."," *"," * Examples:"," *"," *     res.send(new Buffer('wahoo'));"," *     res.send({ some: 'json' });"," *     res.send('\u003cp\u003esome html\u003c/p\u003e');"," *"," * @param {string|number|boolean|object|Buffer} body"," * @public"," */","","res.send = function send(body) {","  // settings","  var app = this.app;","  // allow status / body","  if (arguments.length === 2) {","    // res.send(body, status) backwards compat","    if (typeof arguments[0] !== 'number' \u0026\u0026 typeof arguments[1] === 'number') {","  // disambiguate res.send(status) and res.send(status, num)","  if (typeof chunk === 'number' \u0026\u0026 arguments.length === 1) {","    // res.send(status) will set status message as text string","    if (!this.get('Content-Type')) {","    // string defaulting to html","    case 'string':","  // write strings in utf-8","  if (typeof chunk === 'string') {","    // reflect this in content-type","    if (typeof type === 'string') {","  // populate Content-Length","  if (chunk !== undefined) {","      // convert chunk to Buffer; saves later double conversions","      chunk = new Buffer(chunk, encoding);","  // populate ETag","  var etag;","  // freshness","  if (req.fresh) this.statusCode = 304;","  // strip irrelevant headers","  if (204 === this.statusCode || 304 === this.statusCode) {","    // skip body for HEAD","    this.end();","    // respond","    this.end(chunk, encoding);","/**"," * Send JSON response."," *"," * Examples:"," *"," *     res.json(null);"," *     res.json({ user: 'tj' });"," *"," * @param {string|number|boolean|object} obj"," * @public"," */","","res.json = function json(obj) {","  // allow status / body","  if (arguments.length === 2) {","    // res.json(body, status) backwards compat","    if (typeof arguments[1] === 'number') {","  // settings","  var app = this.app;","  // content-type","  if (!this.get('Content-Type')) {","/**"," * Send JSON response with JSONP callback support."," *"," * Examples:"," *"," *     res.jsonp(null);"," *     res.jsonp({ user: 'tj' });"," *"," * @param {string|number|boolean|object} obj"," * @public"," */","","res.jsonp = function jsonp(obj) {","  // allow status / body","  if (arguments.length === 2) {","    // res.json(body, status) backwards compat","    if (typeof arguments[1] === 'number') {","  // settings","  var app = this.app;","  // content-type","  if (!this.get('Content-Type')) {","  // fixup callback","  if (Array.isArray(callback)) {","  // jsonp","  if (typeof callback === 'string' \u0026\u0026 callback.length !== 0) {","    // restrict callback charset","    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');","    // replace chars not allowed in JavaScript that are in JSON","    body = body","    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"","    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"","    // the typeof check is just to reduce client error noise","    // the typeof check is just to reduce client error noise","    body = '/**/ typeof ' + callback + ' === \\'function\\' \u0026\u0026 ' + callback + '(' + body + ');';","    body = '/**/ typeof ' + callback + ' === \\'function\\' \u0026\u0026 ' + callback + '(' + body + ');';","  }","/**"," * Send given HTTP status code."," *"," * Sets the response status to `statusCode` and the body of the"," * response to the standard description from node's http.STATUS_CODES"," * or the statusCode number if no description."," *"," * Examples:"," *"," *     res.sendStatus(200);"," *"," * @param {number} statusCode"," * @public"," */","","res.sendStatus = function sendStatus(statusCode) {","/**"," * Transfer the file at the given `path`."," *"," * Automatically sets the _Content-Type_ response header field."," * The callback `callback(err)` is invoked when the transfer is complete"," * or when an error occurs. Be sure to check `res.sentHeader`"," * if you wish to attempt responding, as the header and some data"," * may have already been transferred."," *"," * Options:"," *"," *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)"," *   - `root`     root directory for relative filenames"," *   - `headers`  object of headers to serve with file"," *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them"," *"," * Other options are passed along to `send`."," *"," * Examples:"," *"," *  The following example illustrates how `res.sendFile()` may"," *  be used as an alternative for the `static()` middleware for"," *  dynamic situations. The code backing `res.sendFile()` is actually"," *  the same code, so HTTP cache support etc is identical."," *"," *     app.get('/user/:uid/photos/:file', function(req, res){"," *       var uid = req.params.uid"," *         , file = req.params.file;"," *"," *       req.user.mayViewFilesFrom(uid, function(yes){"," *         if (yes) {"," *           res.sendFile('/uploads/' + uid + '/' + file);"," *         } else {"," *           res.send(403, 'Sorry! you cant see that.');"," *         }"," *       });"," *     });"," *"," * @public"," */","","res.sendFile = function sendFile(path, options, callback) {","  // support function as second arg","  if (typeof options === 'function') {","  // create file stream","  var pathname = encodeURI(path);","  // transfer","  sendfile(res, file, opts, function (err) {","    // next() all but write errors","    if (err \u0026\u0026 err.code !== 'ECONNABORTED' \u0026\u0026 err.syscall !== 'write') {","/**"," * Transfer the file at the given `path`."," *"," * Automatically sets the _Content-Type_ response header field."," * The callback `callback(err)` is invoked when the transfer is complete"," * or when an error occurs. Be sure to check `res.sentHeader`"," * if you wish to attempt responding, as the header and some data"," * may have already been transferred."," *"," * Options:"," *"," *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)"," *   - `root`     root directory for relative filenames"," *   - `headers`  object of headers to serve with file"," *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them"," *"," * Other options are passed along to `send`."," *"," * Examples:"," *"," *  The following example illustrates how `res.sendfile()` may"," *  be used as an alternative for the `static()` middleware for"," *  dynamic situations. The code backing `res.sendfile()` is actually"," *  the same code, so HTTP cache support etc is identical."," *"," *     app.get('/user/:uid/photos/:file', function(req, res){"," *       var uid = req.params.uid"," *         , file = req.params.file;"," *"," *       req.user.mayViewFilesFrom(uid, function(yes){"," *         if (yes) {"," *           res.sendfile('/uploads/' + uid + '/' + file);"," *         } else {"," *           res.send(403, 'Sorry! you cant see that.');"," *         }"," *       });"," *     });"," *"," * @public"," */","","res.sendfile = function (path, options, callback) {","  // support function as second arg","  if (typeof options === 'function') {","  // create file stream","  var file = send(req, path, opts);","  // transfer","  sendfile(res, file, opts, function (err) {","    // next() all but write errors","    if (err \u0026\u0026 err.code !== 'ECONNABORT' \u0026\u0026 err.syscall !== 'write') {","/**"," * Transfer the file at the given `path` as an attachment."," *"," * Optionally providing an alternate attachment `filename`,"," * and optional callback `callback(err)`. The callback is invoked"," * when the data transfer is complete, or when an error has"," * ocurred. Be sure to check `res.headersSent` if you plan to respond."," *"," * This method uses `res.sendfile()`."," *"," * @public"," */","","res.download = function download(path, filename, callback) {","  // support function as second arg","  if (typeof filename === 'function') {","  // set Content-Disposition when file is sent","  var headers = {","  // Resolve the full path for sendFile","  var fullPath = resolve(path);","/**"," * Set _Content-Type_ response header with `type` through `mime.lookup()`"," * when it does not contain \"/\", or set the Content-Type to `type` otherwise."," *"," * Examples:"," *"," *     res.type('.html');"," *     res.type('html');"," *     res.type('json');"," *     res.type('application/json');"," *     res.type('png');"," *"," * @param {String} type"," * @return {ServerResponse} for chaining"," * @public"," */","","res.contentType =","/**"," * Respond to the Acceptable formats using an `obj`"," * of mime-type callbacks."," *"," * This method uses `req.accepted`, an array of"," * acceptable types ordered by their quality values."," * When \"Accept\" is not present the _first_ callback"," * is invoked, otherwise the first match is used. When"," * no match is performed the server responds with"," * 406 \"Not Acceptable\"."," *"," * Content-Type is set for you, however if you choose"," * you may alter this within the callback using `res.type()`"," * or `res.set('Content-Type', ...)`."," *"," *    res.format({"," *      'text/plain': function(){"," *        res.send('hey');"," *      },"," *"," *      'text/html': function(){"," *        res.send('\u003cp\u003ehey\u003c/p\u003e');"," *      },"," *"," *      'appliation/json': function(){"," *        res.send({ message: 'hey' });"," *      }"," *    });"," *"," * In addition to canonicalized MIME types you may"," * also use extnames mapped to these types:"," *"," *    res.format({"," *      text: function(){"," *        res.send('hey');"," *      },"," *"," *      html: function(){"," *        res.send('\u003cp\u003ehey\u003c/p\u003e');"," *      },"," *"," *      json: function(){"," *        res.send({ message: 'hey' });"," *      }"," *    });"," *"," * By default Express passes an `Error`"," * with a `.status` of 406 to `next(err)`"," * if a match is not made. If you provide"," * a `.default` callback it will be invoked"," * instead."," *"," * @param {Object} obj"," * @return {ServerResponse} for chaining"," * @public"," */","","res.format = function(obj){","/**"," * Set _Content-Disposition_ header to _attachment_ with optional `filename`."," *"," * @param {String} filename"," * @return {ServerResponse}"," * @public"," */","","res.attachment = function attachment(filename) {","/**"," * Append additional header `field` with value `val`."," *"," * Example:"," *"," *    res.append('Link', ['\u003chttp://localhost/\u003e', '\u003chttp://localhost:3000/\u003e']);"," *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');"," *    res.append('Warning', '199 Miscellaneous warning');"," *"," * @param {String} field"," * @param {String|Array} val"," * @return {ServerResponse} for chaining"," * @public"," */","","res.append = function append(field, val) {","    // concat the new and prev vals","    value = Array.isArray(prev) ? prev.concat(val)","/**"," * Set header `field` to `val`, or pass"," * an object of header fields."," *"," * Examples:"," *"," *    res.set('Foo', ['bar', 'baz']);"," *    res.set('Accept', 'application/json');"," *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });"," *"," * Aliased as `res.header()`."," *"," * @param {String|Object} field"," * @param {String|Array} val"," * @return {ServerResponse} for chaining"," * @public"," */","","res.set =","    // add charset to content-type","    if (field.toLowerCase() === 'content-type' \u0026\u0026 !charsetRegExp.test(value)) {","/**"," * Get value for header `field`."," *"," * @param {String} field"," * @return {String}"," * @public"," */","","res.get = function(field){","/**"," * Clear cookie `name`."," *"," * @param {String} name"," * @param {Object} [options]"," * @return {ServerResponse} for chaining"," * @public"," */","","res.clearCookie = function clearCookie(name, options) {","/**"," * Set cookie `name` to `value`, with the given `options`."," *"," * Options:"," *"," *    - `maxAge`   max-age in milliseconds, converted to `expires`"," *    - `signed`   sign the cookie"," *    - `path`     defaults to \"/\""," *"," * Examples:"," *"," *    // \"Remember Me\" for 15 minutes"," *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });"," *"," *    // save as above"," *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })"," *"," * @param {String} name"," * @param {String|Object} value"," * @param {Options} options"," * @return {ServerResponse} for chaining"," * @public"," */","","res.cookie = function (name, value, options) {","/**"," * Set the location header to `url`."," *"," * The given `url` can also be \"back\", which redirects"," * to the _Referrer_ or _Referer_ headers or \"/\"."," *"," * Examples:"," *"," *    res.location('/foo/bar').;"," *    res.location('http://example.com');"," *    res.location('../login');"," *"," * @param {String} url"," * @return {ServerResponse} for chaining"," * @public"," */","","res.location = function location(url) {","  // \"back\" is an alias for the referrer","  if (url === 'back') {","  // set location","  return this.set('Location', encodeUrl(loc));","/**"," * Redirect to the given `url` with optional response `status`"," * defaulting to 302."," *"," * The resulting `url` is determined by `res.location()`, so"," * it will play nicely with mounted apps, relative paths,"," * `\"back\"` etc."," *"," * Examples:"," *"," *    res.redirect('/foo/bar');"," *    res.redirect('http://example.com');"," *    res.redirect(301, 'http://example.com');"," *    res.redirect('../login'); // /blog/post/1 -\u003e /blog/login"," *"," * @public"," */","","res.redirect = function redirect(url) {","  // allow status / url","  if (arguments.length === 2) {","  // Set location header","  address = this.location(address).get('Location');","  // Support text/{plain,html} by default","  this.format({","  // Respond","  this.statusCode = status;","/**"," * Add `field` to Vary. If already present in the Vary set, then"," * this call is simply ignored."," *"," * @param {Array|String} field"," * @return {ServerResponse} for chaining"," * @public"," */","","res.vary = function(field){","  // checks for back-compat","  if (!field || (Array.isArray(field) \u0026\u0026 !field.length)) {","/**"," * Render `view` with the given `options` and optional callback `fn`."," * When a callback function is given a response will _not_ be made"," * automatically, otherwise a response of _200_ and _text/html_ is given."," *"," * Options:"," *"," *  - `cache`     boolean hinting to the engine it should cache"," *  - `filename`  filename of the view being rendered"," *"," * @public"," */","","res.render = function render(view, options, callback) {","  // support callback function as second arg","  if (typeof options === 'function') {","  // merge res.locals","  opts._locals = self.locals;","  // default callback to respond","  done = done || function (err, str) {","  // render","  app.render(view, opts, done);","// pipe the send file stream","function sendfile(res, file, options, callback) {","  // request aborted","  function onaborted() {","  // directory","  function ondirectory() {","  // errors","  function onerror(err) {","  // ended","  function onend() {","  // file","  function onfile() {","  // finished","  function onfinish(err) {","  // streaming","  function onstream() {","    // set headers on successful transfer","    file.on('headers', function headers(res) {","  // pipe","  file.pipe(res);","/**"," * Stringify JSON, like JSON.stringify, but v8 optimized."," * @private"," */","","function stringify(value, replacer, spaces) {","  // v8 checks arguments.length for optimizing simple call","  // https://bugs.chromium.org/p/v8/issues/detail?id=4730","  return replacer || spaces"],"Functions":["res.status = function status(code) ","res.links = function(links)","  return this.set('Link', link + Object.keys(links).map(function(rel)","res.send = function send(body) ","  if (typeof generateETag === 'function' \u0026\u0026 !this.get('ETag')) ","res.json = function json(obj) ","res.jsonp = function jsonp(obj) ","    body = '/**/ typeof ' + callback + ' === \\'function\\' \u0026\u0026 ' + callback + '(' + body + ');';","res.sendStatus = function sendStatus(statusCode) "," *     app.get('/user/:uid/photos/:file', function(req, res)"," *       req.user.mayViewFilesFrom(uid, function(yes)","res.sendFile = function sendFile(path, options, callback) ","  // support function as second arg","  if (typeof options === 'function') ","  sendfile(res, file, opts, function (err) "," *     app.get('/user/:uid/photos/:file', function(req, res)"," *       req.user.mayViewFilesFrom(uid, function(yes)","res.sendfile = function (path, options, callback) ","  // support function as second arg","  if (typeof options === 'function') ","  sendfile(res, file, opts, function (err) ","res.sendfile = deprecate.function(res.sendfile,","res.download = function download(path, filename, callback) ","  // support function as second arg","  if (typeof filename === 'function') ","res.type = function contentType(type) "," *      'text/plain': function()"," *      'text/html': function()"," *      'appliation/json': function()"," *      text: function()"," *      html: function()"," *      json: function()","res.format = function(obj)","    err.types = normalizeTypes(keys).map(function(o) return o.value });","res.attachment = function attachment(filename) ","res.append = function append(field, val) ","res.header = function header(field, val) ","res.get = function(field)","res.clearCookie = function clearCookie(name, options) ","res.cookie = function (name, value, options) ","res.location = function location(url) ","res.redirect = function redirect(url) ","    text: function()","    html: function()","    default: function()","res.vary = function(field)"," * When a callback function is given a response will _not_ be made","res.render = function render(view, options, callback) ","  // support callback function as second arg","  if (typeof options === 'function') ","  done = done || function (err, str) ","function sendfile(res, file, options, callback) ","  function onaborted() ","  function ondirectory() ","  function onerror(err) ","  function onend() ","  function onfile() ","  function onfinish(err) ","    setImmediate(function () ","  function onstream() ","    file.on('headers', function headers(res) ","function stringify(value, replacer, spaces) "],"Dependencies":["content-disposition","depd\")(\"express","encodeurl","escape-html","http","./utils","on-finished","path","utils-merge","cookie-signature","./utils","./utils","./utils","cookie","send","vary"]},{"FileName":"node_modules\\express\\lib\\router\\index.js","LineCount":646,"CharCount":13844,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var Route = require('./route');","/**"," * Module variables."," * @private"," */","","var objectRegExp = /^\\[object (\\S+)\\]$/;","/**"," * Initialize a new `Router` with the given `options`."," *"," * @param {Object} options"," * @return {Router} which is an callable function"," * @public"," */","","var proto = module.exports = function(options) {","  // mixin Router class functions","  router.__proto__ = proto;","/**"," * Map the given param placeholder `name`(s) to the given callback."," *"," * Parameter mapping is used to provide pre-conditions to routes"," * which use normalized placeholders. For example a _:user_id_ parameter"," * could automatically load a user's information from the database without"," * any additional code,"," *"," * The callback uses the same signature as middleware, the only difference"," * being that the value of the placeholder is passed, in this case the _id_"," * of the user. Once the `next()` function is invoked, just like middleware"," * it will continue on to execute the route, or subsequent parameter functions."," *"," * Just like in middleware, you must either respond to the request or call next"," * to avoid stalling the request."," *"," *  app.param('user_id', function(req, res, next, id){"," *    User.find(id, function(err, user){"," *      if (err) {"," *        return next(err);"," *      } else if (!user) {"," *        return next(new Error('failed to load user'));"," *      }"," *      req.user = user;"," *      next();"," *    });"," *  });"," *"," * @param {String} name"," * @param {Function} fn"," * @return {app} for chaining"," * @public"," */","","proto.param = function param(name, fn) {","  // param logic","  if (typeof name === 'function') {","  // apply param functions","  var params = this._params;","  // ensure we end up with a","  // middleware function","  if ('function' !== typeof fn) {","/**"," * Dispatch a req, res into the router."," * @private"," */","","proto.handle = function handle(req, res, out) {","  var fqdn = req.url[0] !== '/' \u0026\u0026 1 + req.url.substr(0, pathlength).indexOf('://');","  var protohost = fqdn ? req.url.substr(0, req.url.indexOf('/', 2 + fqdn)) : '';","  // store options for OPTIONS request","  // only used if OPTIONS request","  var options = [];","  // middleware and routes","  var stack = self.stack;","  // manage inter-router variables","  var parentParams = req.params;","  // setup next layer","  req.next = next;","  // for options requests, respond with a default if nothing else responds","  if (req.method === 'OPTIONS') {","  // setup basic req values","  req.baseUrl = parentUrl;","    // remove added slash","    if (slashAdded) {","    // restore altered req.url","    if (removed.length !== 0) {","    // no more matching layers","    if (idx \u003e= stack.length) {","    // get pathname of request","    var path = getPathname(req);","    // find next matching layer","    var layer;","        // hold on to layerError","        layerError = layerError || match;","        // process non-route handlers normally","        continue;","        // routes do not match with a pending error","        match = false;","      // build up automatic options response","      if (!has_method \u0026\u0026 method === 'OPTIONS') {","      // don't even bother matching route","      if (!has_method \u0026\u0026 method !== 'HEAD') {","    // no match","    if (match !== true) {","    // store route for dispatch on change","    if (route) {","    // Capture one-time layer values","    req.params = self.mergeParams","    // this should be done for the layer","    self.process_params(layer, paramcalled, req, res, function (err) {","     // Trim off the part of the url that matches the route","     // middleware (.use stuff) needs to have the path stripped","    if (layerPath.length !== 0) {","      // Ensure leading slash","      if (!fqdn \u0026\u0026 req.url[0] !== '/') {","      // Setup base URL (no trailing slash)","      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'","/**"," * Process any parameters for the layer."," * @private"," */","","proto.process_params = function process_params(layer, called, req, res, done) {","  // captured parameters from the layer, keys and values","  var keys = layer.keys;","  // fast track","  if (!keys || keys.length === 0) {","  // process params in order","  // param callbacks can be async","  function param(err) {","    // param previously called with same value or error occurred","    if (paramCalled \u0026\u0026 (paramCalled.match === paramVal","      // restore value","      req.params[name] = paramCalled.value;","      // next param","      return param(paramCalled.error);","  // single param callbacks","  function paramCallback(err) {","    // store updated value","    paramCalled.value = req.params[key.name];","      // store error","      paramCalled.error = err;","/**"," * Use the given middleware function, with optional path, defaulting to \"/\"."," *"," * Use (like `.all`) will run for any http METHOD, but it will not add"," * handlers for those methods so OPTIONS requests will not consider `.use`"," * functions even if they could respond."," *"," * The other difference is that _route_ path is stripped and not visible"," * to the handler function. The main effect of this feature is that mounted"," * handlers can operate without any code changes regardless of the \"prefix\""," * pathname."," *"," * @public"," */","","proto.use = function use(fn) {","  // default path to '/'","  // disambiguate router.use([fn])","  if (typeof fn !== 'function') {","    // first arg is the path","    if (typeof arg !== 'function') {","    // add the middleware","    debug('use %s %s', path, fn.name || '\u003canonymous\u003e');","/**"," * Create a new Route for the given path."," *"," * Each route contains a separate middleware stack and VERB handlers."," *"," * See the Route api documentation for details on adding handlers"," * and middleware to routes."," *"," * @param {String} path"," * @return {Route}"," * @public"," */","","proto.route = function route(path) {","// create Router#VERB functions","methods.concat('all').forEach(function(method){","// append methods to a list of methods","function appendMethods(list, addition) {","// get pathname of request","function getPathname(req) {","// get type for error message","function gettype(obj) {","  // inspect [[Class]] for objects","  return toString.call(obj)","/**"," * Match path to a layer."," *"," * @param {Layer} layer"," * @param {string} path"," * @private"," */","","function matchLayer(layer, path) {","// merge params with parent params","function mergeParams(params, parent) {","  // make copy of parent for base","  var obj = mixin({}, parent);","  // simple non-numeric merging","  if (!(0 in params) || !(0 in parent)) {","  // determine numeric gaps","  while (i in params) {","  // offset numeric indices in params before merge","  for (i--; i \u003e= 0; i--) {","    // create holes for the merge when necessary","    if (i \u003c o) {","// restore obj props after function","function restore(fn, obj) {","    // restore vals","    for (var i = 0; i \u003c props.length; i++) {","// send an OPTIONS response","function sendOptionsResponse(res, options, next) {","// wrap a function","function wrap(old, fn) {"],"Functions":[" * @return Router} which is an callable function","var proto = module.exports = function(options) ","  function router(req, res, next) ","  // mixin Router class functions"," * of the user. Once the `next()` function is invoked, just like middleware"," * it will continue on to execute the route, or subsequent parameter functions."," *  app.param('user_id', function(req, res, next, id)"," *    User.find(id, function(err, user)","proto.param = function param(name, fn) ","  if (typeof name === 'function') ","  // apply param functions","  // middleware function","  if ('function' !== typeof fn) ","proto.handle = function handle(req, res, out) ","    done = wrap(done, function(old, err) ","  function next(err) ","    self.process_params(layer, paramcalled, req, res, function (err) ","  function trim_prefix(layer, layerError, layerPath, path) ","proto.process_params = function process_params(layer, called, req, res, done) ","  function param(err) ","  function paramCallback(err) "," * Use the given middleware function, with optional path, defaulting to \"/\"."," * functions even if they could respond."," * to the handler function. The main effect of this feature is that mounted","proto.use = function use(fn) ","  if (typeof fn !== 'function') ","    if (typeof arg !== 'function') ","    throw new TypeError('Router.use() requires middleware functions');","    if (typeof fn !== 'function') ","      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));","proto.route = function route(path) ","// create Router#VERB functions","methods.concat('all').forEach(function(method)","  proto[method] = function(path)","function appendMethods(list, addition) ","function getPathname(req) ","function gettype(obj) ","function matchLayer(layer, path) ","function mergeParams(params, parent) ","// restore obj props after function","function restore(fn, obj) ","  return function(err)","function sendOptionsResponse(res, options, next) ","// wrap a function","function wrap(old, fn) ","  return function proxy() "],"Dependencies":["./route","./layer","methods","utils-merge","debug\")(\"express:router","depd\")(\"express","array-flatten","parseurl"]},{"FileName":"node_modules\\express\\lib\\router\\layer.js","LineCount":177,"CharCount":2948,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var pathRegexp = require('path-to-regexp');","/**"," * Module variables."," * @private"," */","","var hasOwnProperty = Object.prototype.hasOwnProperty;","/**"," * Module exports."," * @public"," */","","module.exports = Layer;","/**"," * Handle the error for the layer."," *"," * @param {Error} error"," * @param {Request} req"," * @param {Response} res"," * @param {function} next"," * @api private"," */","","Layer.prototype.handle_error = function handle_error(error, req, res, next) {","    // not a standard error handler","    return next(error);","/**"," * Handle the request for the layer."," *"," * @param {Request} req"," * @param {Response} res"," * @param {function} next"," * @api private"," */","","Layer.prototype.handle_request = function handle(req, res, next) {","    // not a standard request handler","    return next();","/**"," * Check if this route matches `path`, if so"," * populate `.params`."," *"," * @param {String} path"," * @return {Boolean}"," * @api private"," */","","Layer.prototype.match = function match(path) {","    // no path, nothing matches","    this.params = undefined;","    // fast path non-ending match for / (everything matches)","    this.params = {};","  // store values","  this.params = {};","/**"," * Decode param value."," *"," * @param {string} val"," * @return {string}"," * @private"," */","","function decode_param(val) {"],"Functions":["function Layer(path, options, fn) "," * @param function} next","Layer.prototype.handle_error = function handle_error(error, req, res, next) "," * @param function} next","Layer.prototype.handle_request = function handle(req, res, next) ","Layer.prototype.match = function match(path) ","function decode_param(val) "],"Dependencies":["path-to-regexp","debug\")(\"express:router:layer"]},{"FileName":"node_modules\\express\\lib\\router\\route.js","LineCount":211,"CharCount":3819,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var debug = require('debug')('express:router:route');","/**"," * Module variables."," * @private"," */","","var slice = Array.prototype.slice;","/**"," * Module exports."," * @public"," */","","module.exports = Route;","/**"," * Initialize `Route` with the given `path`,"," *"," * @param {String} path"," * @public"," */","","function Route(path) {","  // route handlers for various http methods","  this.methods = {};","/**"," * Determine if the route handles a given method."," * @private"," */","","Route.prototype._handles_method = function _handles_method(method) {","/**"," * @return {Array} supported HTTP methods"," * @private"," */","","Route.prototype._options = function _options() {","  // append automatic head","  if (this.methods.get \u0026\u0026 !this.methods.head) {","    // make upper case","    methods[i] = methods[i].toUpperCase();","/**"," * dispatch req, res into this route"," * @private"," */","","Route.prototype.dispatch = function dispatch(req, res, done) {","/**"," * Add a handler for all HTTP verbs to this route."," *"," * Behaves just like middleware and can respond or call `next`"," * to continue processing."," *"," * You can use multiple `.all` call to add multiple handlers."," *"," *   function check_something(req, res, next){"," *     next();"," *   };"," *"," *   function validate_user(req, res, next){"," *     next();"," *   };"," *"," *   route"," *   .all(validate_user)"," *   .all(check_something)"," *   .get(function(req, res, next){"," *     res.send('hello world');"," *   });"," *"," * @param {function} handler"," * @return {Route} for chaining"," * @api public"," */","","Route.prototype.all = function all() {"],"Functions":["function Route(path) ","Route.prototype._handles_method = function _handles_method(method) ","Route.prototype._options = function _options() ","Route.prototype.dispatch = function dispatch(req, res, done) ","  function next(err) "," *   function check_something(req, res, next)"," *   function validate_user(req, res, next)"," *   .get(function(req, res, next)"," * @param function} handler","Route.prototype.all = function all() ","    if (typeof handle !== 'function') ","      var msg = 'Route.all() requires callback functions but got a ' + type;","methods.forEach(function(method)","  Route.prototype[method] = function()","      if (typeof handle !== 'function') ","        var msg = 'Route.' + method + '() requires callback functions but got a ' + type;"],"Dependencies":["debug\")(\"express:router:route","array-flatten","./layer","methods"]},{"FileName":"node_modules\\express\\lib\\utils.js","LineCount":300,"CharCount":5525,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @api private"," */","","var contentDisposition = require('content-disposition');","/**"," * Return strong ETag for `body`."," *"," * @param {String|Buffer} body"," * @param {String} [encoding]"," * @return {String}"," * @api private"," */","","exports.etag = function (body, encoding) {","/**"," * Return weak ETag for `body`."," *"," * @param {String|Buffer} body"," * @param {String} [encoding]"," * @return {String}"," * @api private"," */","","exports.wetag = function wetag(body, encoding){","/**"," * Check if `path` looks absolute."," *"," * @param {String} path"," * @return {Boolean}"," * @api private"," */","","exports.isAbsolute = function(path){","  if (':' === path[1] \u0026\u0026 ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path","  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path","};","/**"," * Flatten the given `arr`."," *"," * @param {Array} arr"," * @return {Array}"," * @api private"," */","","exports.flatten = deprecate.function(flatten,","/**"," * Normalize the given `type`, for example \"html\" becomes \"text/html\"."," *"," * @param {String} type"," * @return {Object}"," * @api private"," */","","exports.normalizeType = function(type){","/**"," * Normalize `types`, for example \"html\" becomes \"text/html\"."," *"," * @param {Array} types"," * @return {Array}"," * @api private"," */","","exports.normalizeTypes = function(types){","/**"," * Generate Content-Disposition header appropriate for the filename."," * non-ascii filenames are urlencoded and a filename* parameter is added"," *"," * @param {String} filename"," * @return {String}"," * @api private"," */","","exports.contentDisposition = deprecate.function(contentDisposition,","/**"," * Parse accept params `str` returning an"," * object with `.value`, `.quality` and `.params`."," * also includes `.originalIndex` for stable sorting"," *"," * @param {String} str"," * @return {Object}"," * @api private"," */","","function acceptParams(str, index) {","/**"," * Compile \"etag\" value to function."," *"," * @param  {Boolean|String|Function} val"," * @return {Function}"," * @api private"," */","","exports.compileETag = function(val) {","/**"," * Compile \"query parser\" value to function."," *"," * @param  {String|Function} val"," * @return {Function}"," * @api private"," */","","exports.compileQueryParser = function compileQueryParser(val) {","/**"," * Compile \"proxy trust\" value to function."," *"," * @param  {Boolean|String|Number|Array|Function} val"," * @return {Function}"," * @api private"," */","","exports.compileTrust = function(val) {","    // Support plain true/false","    return function(){ return true };","    // Support trusting hop count","    return function(a, i){ return i \u003c val };","    // Support comma-separated values","    val = val.split(/ *, */);","/**"," * Set the charset in a given Content-Type string."," *"," * @param {String} type"," * @param {String} charset"," * @return {String}"," * @api private"," */","","exports.setCharset = function setCharset(type, charset) {","  // parse type","  var parsed = contentType.parse(type);","  // set charset","  parsed.parameters.charset = charset;","  // format type","  return contentType.format(parsed);","/**"," * Parse an extended query string with qs."," *"," * @return {Object}"," * @private"," */","","function parseExtendedQueryString(str) {","/**"," * Return new empty object."," *"," * @return {Object}"," * @api private"," */","","function newObject() {"],"Functions":["exports.etag = function (body, encoding) ","exports.wetag = function wetag(body, encoding)","exports.isAbsolute = function(path)","exports.flatten = deprecate.function(flatten,","exports.normalizeType = function(type)","exports.normalizeTypes = function(types)","exports.contentDisposition = deprecate.function(contentDisposition,","function acceptParams(str, index) "," * Compile \"etag\" value to function.","exports.compileETag = function(val) ","  if (typeof val === 'function') ","      throw new TypeError('unknown value for etag function: ' + val);"," * Compile \"query parser\" value to function.","exports.compileQueryParser = function compileQueryParser(val) ","  if (typeof val === 'function') ","      throw new TypeError('unknown value for query parser function: ' + val);"," * Compile \"proxy trust\" value to function.","exports.compileTrust = function(val) ","  if (typeof val === 'function') return val;","    return function() return true };","    return function(a, i) return i \u003c val };","exports.setCharset = function setCharset(type, charset) ","function parseExtendedQueryString(str) ","function newObject() "],"Dependencies":["content-disposition","content-type","depd\")(\"express","array-flatten","send","path","etag","proxy-addr","qs","querystring"]},{"FileName":"node_modules\\express\\lib\\view.js","LineCount":174,"CharCount":2969,"Comments":["/*!"," * express"," * Copyright(c) 2009-2013 TJ Holowaychuk"," * Copyright(c) 2013 Roman Shtylman"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var debug = require('debug')('express:view');","/**"," * Module variables."," * @private"," */","","var dirname = path.dirname;","/**"," * Module exports."," * @public"," */","","module.exports = View;","/**"," * Initialize a new `View` with the given `name`."," *"," * Options:"," *"," *   - `defaultEngine` the default template engine name"," *   - `engines` template engine require() cache"," *   - `root` root path for view lookup"," *"," * @param {string} name"," * @param {object} options"," * @public"," */","","function View(name, options) {","    // get extension from default engine name","    this.ext = this.defaultEngine[0] !== '.'","    // load engine","    opts.engines[this.ext] = require(this.ext.substr(1)).__express;","  // store loaded engine","  this.engine = opts.engines[this.ext];","  // lookup path","  this.path = this.lookup(fileName);","/**"," * Lookup view by the given `name`"," *"," * @param {string} name"," * @private"," */","","View.prototype.lookup = function lookup(name) {","    // resolve the path","    var loc = resolve(root, name);","    // resolve the file","    path = this.resolve(dir, file);","/**"," * Render with the given options."," *"," * @param {object} options"," * @param {function} callback"," * @private"," */","","View.prototype.render = function render(options, callback) {","/**"," * Resolve the file within the given directory."," *"," * @param {string} dir"," * @param {string} file"," * @private"," */","","View.prototype.resolve = function resolve(dir, file) {","  // \u003cpath\u003e.\u003cext\u003e","  var path = join(dir, file);","  // \u003cpath\u003e/index.\u003cext\u003e","  path = join(dir, basename(file, ext), 'index' + ext);","/**"," * Return a stat, maybe."," *"," * @param {string} path"," * @return {fs.Stats}"," * @private"," */","","function tryStat(path) {"],"Functions":["function View(name, options) ","View.prototype.lookup = function lookup(name) "," * @param function} callback","View.prototype.render = function render(options, callback) ","View.prototype.resolve = function resolve(dir, file) ","function tryStat(path) "],"Dependencies":["debug\")(\"express:view","path","fs","./utils"]},{"FileName":"node_modules\\finalhandler\\index.js","LineCount":190,"CharCount":3902,"Comments":["/*!"," * finalhandler"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var debug = require('debug')('finalhandler')","/**"," * Module variables."," * @private"," */","","/* istanbul ignore next */","var defer = typeof setImmediate === 'function'","/**"," * Module exports."," * @public"," */","","module.exports = finalhandler","/**"," * Create a function to handle the final response."," *"," * @param {Request} req"," * @param {Response} res"," * @param {Object} [options]"," * @return {Function}"," * @public"," */","","function finalhandler (req, res, options) {","  // get environment","  var env = opts.env || process.env.NODE_ENV || 'development'","  // get error callback","  var onerror = opts.onerror","    // ignore 404 on in-flight response","    if (!err \u0026\u0026 res._header) {","    // unhandled error","    if (err) {","      // respect status code from error","      status = getErrorStatusCode(err) || res.statusCode","      // default status code to 500 if outside valid range","      if (typeof status !== 'number' || status \u003c 400 || status \u003e 599) {","      // respect err.headers","      if (err.headers \u0026\u0026 (err.status === status || err.statusCode === status)) {","      // production gets a basic error message","      var msg = env === 'production'","    // schedule onerror callback","    if (err \u0026\u0026 onerror) {","    // cannot actually respond","    if (res._header) {","    // send response","    send(req, res, status, headers, msg)","/**"," * Get status code from Error object."," *"," * @param {Error} err"," * @return {number}"," * @private"," */","","function getErrorStatusCode (err) {","  // check err.status","  if (typeof err.status === 'number' \u0026\u0026 err.status \u003e= 400 \u0026\u0026 err.status \u003c 600) {","  // check err.statusCode","  if (typeof err.statusCode === 'number' \u0026\u0026 err.statusCode \u003e= 400 \u0026\u0026 err.statusCode \u003c 600) {","/**"," * Send response."," *"," * @param {IncomingMessage} req"," * @param {OutgoingMessage} res"," * @param {number} status"," * @param {object} headers"," * @param {string} body"," * @private"," */","","function send (req, res, status, headers, body) {","    // response status","    res.statusCode = status","    // response headers","    var keys = Object.keys(headers)","    // security header for content sniffing","    res.setHeader('X-Content-Type-Options', 'nosniff')","    // standard headers","    res.setHeader('Content-Type', 'text/html; charset=utf-8')","  // unpipe everything from the request","  unpipe(req)","  // flush the request","  onFinished(req, write)"],"Functions":["var defer = typeof setImmediate === 'function'","  : function (fn)  process.nextTick(fn.bind.apply(fn, arguments)) }"," * Create a function to handle the final response.","function finalhandler (req, res, options) ","  return function (err) ","function getErrorStatusCode (err) ","function send (req, res, status, headers, body) ","  function write () "],"Dependencies":["debug\")(\"finalhandler","escape-html","on-finished","statuses","unpipe"]},{"FileName":"node_modules\\forwarded\\index.js","LineCount":36,"CharCount":606,"Comments":["/*!"," * forwarded"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","/**"," * Module exports."," */","","module.exports = forwarded","/**"," * Get all addresses in the request, using the `X-Forwarded-For` header."," *"," * @param {Object} req"," * @api public"," */","","function forwarded(req) {","  // simple header parsing","  var proxyAddrs = (req.headers['x-forwarded-for'] || '')","  // return all addresses","  return addrs"],"Functions":["function forwarded(req) "],"Dependencies":null},{"FileName":"node_modules\\fresh\\index.js","LineCount":58,"CharCount":1243,"Comments":["/**"," * Expose `fresh()`."," */","","module.exports = fresh;","/**"," * Check freshness of `req` and `res` headers."," *"," * When the cache is \"fresh\" __true__ is returned,"," * otherwise __false__ is returned to indicate that"," * the cache is now stale."," *"," * @param {Object} req"," * @param {Object} res"," * @return {Boolean}"," * @api public"," */","","function fresh(req, res) {","  // defaults","  var etagMatches = true;","  // fields","  var modifiedSince = req['if-modified-since'];","  // unconditional request","  if (!modifiedSince \u0026\u0026 !noneMatch) return false;","  // check for no-cache cache request directive","  if (cc \u0026\u0026 cc.indexOf('no-cache') !== -1) return false;  ","  // parse if-none-match","  if (noneMatch) noneMatch = noneMatch.split(/ *, */);","  // if-none-match","  if (noneMatch) {","  // if-modified-since","  if (modifiedSince) {"],"Functions":["function fresh(req, res) ","    etagMatches = noneMatch.some(function (match) "],"Dependencies":null},{"FileName":"node_modules\\get-stdin\\index.js","LineCount":50,"CharCount":666,"Comments":[],"Functions":["module.exports = function (cb) ","\tstdin.on('readable', function () ","\tstdin.on('end', function () ","module.exports.buffer = function (cb) ","\tstdin.on('readable', function () ","\tstdin.on('end', function () "],"Dependencies":null},{"FileName":"node_modules\\hoek\\lib\\escape.js","LineCount":133,"CharCount":2536,"Comments":["// Declare internals","","var internals = {};","        if ((i \u003e= 97) ||                    // a-z","            (i \u003e= 65 \u0026\u0026 i \u003c= 90) ||         // A-Z","            (i \u003e= 48 \u0026\u0026 i \u003c= 57) ||         // 0-9","            i === 32 ||                     // space","            i === 46 ||                     // .","            i === 44 ||                     // ,","            i === 45 ||                     // -","            i === 58 ||                     // :","            i === 95) {                     // _","","            safe[i] = null;"],"Functions":["exports.escapeJavaScript = function (input) ","exports.escapeHtml = function (input) ","internals.escapeJavaScriptChar = function (charCode) ","internals.escapeHtmlChar = function (charCode) ","internals.padLeft = function (str, len) ","internals.isSafe = function (charCode) ","internals.safeCharCodes = (function () "],"Dependencies":null},{"FileName":"node_modules\\hoek\\lib\\index.js","LineCount":994,"CharCount":23654,"Comments":["// Load modules","","var Crypto = require('crypto');","// Declare internals","","var internals = {};","// Clone object or array","","exports.clone = function (obj, seen) {","// Merge all the properties of source into target, source wins in conflict, and by default null and undefined from source are applied","/*eslint-disable */","/*eslint-disable */","exports.merge = function (target, source, isNullOverride /* = true */, isMergeArrays /* = true */) {","/*eslint-enable */","    exports.assert(target \u0026\u0026 typeof target === 'object', 'Invalid target value: must be an object');","        if (isMergeArrays === false) {                                                  // isMergeArrays defaults to true","            target.length = 0;                                                          // Must not change target assignment","        }","                value !== undefined) {                              // Explicit to preserve empty strings","","                target[key] = value;","            else if (isNullOverride !== false) {                    // Defaults to true","                target[key] = value;","// Apply options to a copy of the defaults","","exports.applyToDefaults = function (defaults, options, isNullOverride) {","    if (!options) {                                                 // If no options, return null","        return null;","    if (options === true) {                                         // If options is set to true, use defaults","        return copy;","// Clone an object except for the listed keys which are shallow copied","","exports.cloneWithShallow = function (source, keys) {","    var storage = internals.store(source, keys);    // Move shallow copy items to storage","    var copy = exports.clone(source);               // Deep copy the rest","    internals.restore(copy, source, storage);       // Shallow copy the stored items and restore","    return copy;","// Apply options to defaults except for the listed keys which are shallow copied from option without merging","","exports.applyToDefaultsWithShallow = function (defaults, options, keys) {","    if (!options) {                                                 // If no options, return null","        return null;","    if (options === true) {                                         // If options is set to true, use defaults","        return copy;","    var storage = internals.store(options, keys);   // Move shallow copy items to storage","    exports.merge(copy, options, false, false);     // Deep copy the rest","    internals.restore(copy, options, storage);      // Shallow copy the stored items and restore","    return copy;","// Deep object or array comparison","","exports.deepEqual = function (obj, ref, options, seen) {","        if (obj === ref) {                                                      // Copied from Deep-eql, copyright(c) 2013 Jake Luer, jake@alogicalparadox.com, MIT Licensed, https://github.com/chaijs/deep-eql","            return obj !== 0 || 1 / obj === 1 / ref;        // -0 / +0","        }","        return obj !== obj \u0026\u0026 ref !== ref;                  // NaN","    }","        return true;                            // If previous comparison failed, it would have stopped execution","    }","// Remove duplicate items from array","","exports.unique = function (array, key) {","// Convert array into object","","exports.mapToObject = function (array, key) {","// Find the common unique items in two arrays","","exports.intersect = function (array1, array2, justFirst) {","// Test if the reference contains the values","","exports.contain = function (ref, values, options) {","    /*","        string -\u003e string(s)","        array -\u003e item(s)","        object -\u003e key(s)","        object -\u003e object (key:value)","    */","","    var valuePairs = null;","    options = options || {};            // deep, once, only, part","","    exports.assert(arguments.length \u003e= 2, 'Insufficient arguments');","            return '';          // Remove from string","        });","// Flatten array","","exports.flatten = function (array, target) {","// Convert an object key chain string ('a.b.c') to reference (object[a][b][c])","","exports.reach = function (obj, chain, options) {","            (typeof ref !== 'object' \u0026\u0026 options.functions === false)) {         // Only object and function can have properties","","            exports.assert(!options.strict || i + 1 === il, 'Missing segment', key, 'in reach path ', chain);","    // http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi","","    var v8 = Error.prepareStackTrace;","    Error.captureStackTrace(capture, arguments.callee);     /*eslint no-caller:0 */","    var stack = capture.stack;","exports.assert = function (condition /*, msg1, msg2, msg3 */) {","","    if (condition) {","            msgs.push(arguments[i]);            // Avoids Array.slice arguments leak, allowing for V8 optimizations","        }","// Escape string for Regex construction","","exports.escapeRegex = function (string) {","    // Escape ^$.*+-?=!:|\\/()[]{},","    return string.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, '\\\\$\u0026');","// Base64url (RFC 4648) encode","","exports.base64urlEncode = function (value, encoding) {","    return buf.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');","};","// Base64url (RFC 4648) decode","","exports.base64urlDecode = function (value, encoding) {","// Escape attribute value for use in HTTP header","","exports.escapeHeaderAttribute = function (attribute) {","    // Allowed value characters: !#$%\u0026'()*+,-./:;\u003c=\u003e?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \\, \"","","    exports.assert(/^[ \\w\\!#\\$%\u0026'\\(\\)\\*\\+,\\-\\.\\/\\:;\u003c\\=\u003e\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');","    return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');                             // Escape quotes and slash","};","    if (Path.isAbsolute) {                      // node \u003e= 0.11","        return Path.isAbsolute(path);","    // Unix","","    if (platform !== 'win32') {","    // Windows","","    return !!/^(?:[a-zA-Z]:[\\\\\\/])|(?:[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/])/.test(path);        // C:\\ or \\\\something\\something","};"],"Functions":["exports.clone = function (obj, seen) ","exports.merge = function (target, source, isNullOverride /* = true */, isMergeArrays /* = true */) ","exports.applyToDefaults = function (defaults, options, isNullOverride) ","exports.cloneWithShallow = function (source, keys) ","internals.store = function (source, keys) ","internals.restore = function (copy, source, storage) ","internals.reachSet = function (obj, key, value) ","exports.applyToDefaultsWithShallow = function (defaults, options, keys) ","exports.deepEqual = function (obj, ref, options, seen) ","exports.unique = function (array, key) ","exports.mapToObject = function (array, key) ","exports.intersect = function (array1, array2, justFirst) ","exports.contain = function (ref, values, options) ","        compare = function (a, b) ","        var leftovers = ref.replace(regex, function ($0, $1) ","exports.flatten = function (array, target) ","exports.reach = function (obj, chain, options) ","            (typeof ref !== 'object' \u0026\u0026 options.functions === false))          // Only object and function can have properties","            exports.assert(typeof ref === 'object' || options.functions === true || typeof ref !== 'function', 'Invalid segment', key, 'in reach path ', chain);","exports.reachTemplate = function (obj, template, options) ","    return template.replace(/([^}]+)}/g, function ($0, chain) {","exports.formatStack = function (stack) ","exports.formatTrace = function (trace) ","exports.callStack = function (slice) ","    Error.prepareStackTrace = function (err, stack) ","exports.displayStack = function (slice) ","exports.abort = function (message, hideStack) ","exports.assert = function (condition /*, msg1, msg2, msg3 */) ","    msgs = msgs.map(function (msg) ","exports.Timer = function () ","exports.Timer.prototype.reset = function () ","exports.Timer.prototype.elapsed = function () ","exports.Bench = function () ","exports.Bench.prototype.reset = function () ","exports.Bench.prototype.elapsed = function () ","exports.Bench.now = function () ","exports.escapeRegex = function (string) ","exports.base64urlEncode = function (value, encoding) ","exports.base64urlDecode = function (value, encoding) ","exports.escapeHeaderAttribute = function (attribute) ","exports.escapeHtml = function (string) ","exports.escapeJavaScript = function (string) ","exports.nextTick = function (callback) ","    return function () ","        process.nextTick(function () ","exports.once = function (method) ","    var wrapped = function () ","exports.isAbsolutePath = function (path, platform) ","exports.isInteger = function (value) ","exports.ignore = function ()  };","exports.transform = function (source, transform, options) ","exports.uniqueFilename = function (path, extension) ","exports.stringify = function () ","exports.shallow = function (source) "],"Dependencies":["crypto","path","util","./escape"]},{"FileName":"node_modules\\hoek\\test\\escaper.js","LineCount":89,"CharCount":2215,"Comments":["// Load modules","","var Code = require('code');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('escapeJavaScript()', function () ","    it('encodes / characters', function (done) ","    it('encodes \\' characters', function (done) ","    it('encodes large unicode characters with the correct padding', function (done) ","    it('doesn\\'t throw an exception when passed null', function (done) ","describe('escapeHtml()', function () ","    it('encodes / characters', function (done) ","    it('encodes \u003c and \u003e as named characters', function (done) ","    it('encodes large unicode characters', function (done) ","    it('doesn\\'t throw an exception when passed null', function (done) ","    it('encodes } characters', function (done) {"],"Dependencies":["code","../lib","lab"]},{"FileName":"node_modules\\hoek\\test\\index.js","LineCount":2514,"CharCount":64771,"Comments":["// Load modules","","var Fs = require('fs');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","        // Date","        expect(x.z).to.not.equal(nestedObj.z);","        // Regex","        expect(x.w).to.not.equal(nestedObj.w);","        // Array","        expect(x.v).to.not.equal(nestedObj.v);","        // Immutable(s)","        x.y = 5;","                expect(Hoek.deepEqual(arg1, arguments)).to.be.false(); // callee is not the same","            };","        expect(Hoek.contain('abc', ['ab', 'bc'])).to.be.false();                      // Overlapping values not supported","        done();","        expect(Hoek.contain({ a: 1, b: 2, c: 3 }, { a: 2, b: 2 }, { part: true })).to.be.false();             // part does not ignore bad value","        expect(Hoek.contain({ a: 1, b: 2, c: 3 }, { a: 1, d: 3 })).to.be.false();","        // Getter check","        var Foo = function (bar) {","            expect(error).to.equal(error);  // should be the same reference","            expect(error).to.not.equal(error2); // error with the same message should not match","        }","        expect(Hoek.isAbsolutePath('//server/file', 'win32')).to.equal(true);","        expect(Hoek.isAbsolutePath('//server/file', 'win32')).to.equal(true);","        expect(Hoek.isAbsolutePath('\\\\\\\\server\\\\file', 'win32')).to.equal(true);"],"Functions":["describe('clone()', function () ","    it('clones a nested object', function (done) ","    it('clones a null object', function (done) ","    it('should not convert undefined properties to null', function (done) ","    it('should not throw on circular reference', function (done) ","        var test = function () ","    it('clones circular reference', function (done) ","    it('clones an object with a null prototype', function (done) ","    it('clones deeply nested object', function (done) ","    it('clones arrays', function (done) ","    it('performs actual copy for shallow keys (no pass by reference)', function (done) ","    it('performs actual copy for deep keys (no pass by reference)', function (done) ","    it('copies functions with properties', function (done) ","            x: function () ","        a.x.z = 'string in function';","        a.x.v = function () ","        expect(b.x.z).to.equal('string in function');","    it('should copy a buffer', function (done) ","    it('clones an object with a prototype', function (done) ","        var Obj = function () ","        Obj.prototype.b = function () ","    it('reuses cloned Date object', function (done) ","    it('shallow copies an object with a prototype and isImmutable flag', function (done) ","        var Obj = function () ","        Obj.prototype.b = function () ","    it('clones an object with property getter without executing it', function (done) ","            get: function () ","    it('clones an object with property getter and setter', function (done) ","            get: function () ","            set: function (value) ","    it('clones an object with only property setter', function (done) ","            set: function (value) ","    it('clones an object with non-enumerable properties', function (done) ","            set: function (value) ","    it('clones an object where getOwnPropertyDescriptor returns undefined', function (done) ","        Object.getOwnPropertyDescriptor = function () ","describe('merge()', function () ","    it('deep copies source items', function (done) ","    it('merges array over an object', function (done) ","    it('merges object over an array', function (done) ","    it('does not throw if source is null', function (done) ","        expect(function () ","    it('does not throw if source is undefined', function (done) ","        expect(function () ","    it('throws if source is not an object', function (done) ","        expect(function () ","    it('throws if target is not an object', function (done) ","        expect(function () ","    it('throws if target is not an array and source is', function (done) ","        expect(function () ","    it('returns the same object when merging arrays', function (done) ","    it('combines an empty object with a non-empty object', function (done) ","    it('overrides values in target', function (done) ","    it('overrides values in target (flip)', function (done) ","    it('retains Date properties', function (done) ","    it('retains Date properties when merging keys', function (done) ","    it('overrides Buffer', function (done) ","describe('applyToDefaults()', function () ","    it('throws when target is null', function (done) ","        expect(function () ","    it('returns null if options is false', function (done) ","    it('returns null if options is null', function (done) ","    it('returns null if options is undefined', function (done) ","    it('returns a copy of defaults if options is true', function (done) ","    it('applies object to defaults', function (done) ","    it('applies object to defaults with null', function (done) ","describe('cloneWithShallow()', function () ","    it('deep clones except for listed keys', function (done) ","    it('returns immutable value', function (done) ","    it('returns null value', function (done) ","    it('returns undefined value', function (done) ","    it('deep clones except for listed keys (including missing keys)', function (done) ","describe('applyToDefaultsWithShallow()', function () ","    it('shallow copies the listed keys from options without merging', function (done) ","    it('shallow copies the nested keys (override)', function (done) ","    it('shallow copies the nested keys (missing)', function (done) ","    it('shallow copies the nested keys (override)', function (done) ","    it('shallow copies the nested keys (deeper)', function (done) ","    it('shallow copies the nested keys (not present)', function (done) ","    it('shallow copies the listed keys in the defaults', function (done) ","    it('shallow copies the listed keys in the defaults (true)', function (done) ","    it('returns null on false', function (done) ","    it('throws on missing defaults', function (done) ","        expect(function () ","    it('throws on invalid defaults', function (done) ","        expect(function () ","    it('throws on invalid options', function (done) ","        expect(function () ","    it('throws on missing keys', function (done) ","        expect(function () ","    it('throws on invalid keys', function (done) ","        expect(function () ","describe('deepEqual()', function () ","    it('compares simple values', function (done) ","    it('compares different types', function (done) ","    it('compares empty structures', function (done) ","    it('compares empty arguments object', function (done) ","        var compare = function () ","    it('compares empty arguments objects', function (done) ","        var compare = function () ","            var inner = function () ","    it('compares dates', function (done) ","    it('compares regular expressions', function (done) ","    it('compares arrays', function (done) ","    it('compares buffers', function (done) ","    it('compares objects', function (done) ","    it('handles circular dependency', function (done) ","    it('compares an object with property getter without executing it', function (done) ","            get: function () ","    it('compares objects with property getters', function (done) ","            get: function () ","            get: function () ","    it('compares object prototypes', function (done) ","        var Obj = function () ","        Obj.prototype.b = function () ","        var Ref = function () ","        Ref.prototype.b = function () ","    it('compares plain objects', function (done) ","    it('compares an object with an empty object', function (done) ","    it('compares an object ignoring the prototype', function (done) ","    it('compares an object ignoring the prototype recursively', function (done) ","describe('unique()', function () ","    it('ensures uniqueness within array of objects based on subkey', function (done) ","    it('removes duplicated without key', function (done) ","describe('mapToObject()', function () ","    it('returns null on null array', function (done) ","    it('converts basic array to existential object', function (done) ","    it('converts array of objects to existential object', function (done) ","describe('intersect()', function () ","    it('returns the common objects of two arrays', function (done) ","    it('returns just the first common object of two arrays', function (done) ","    it('returns null when no common and returning just the first common object of two arrays', function (done) ","    it('returns an empty array if either input is null', function (done) ","    it('returns the common objects of object and array', function (done) ","describe('contain()', function () ","    it('tests strings', function (done) ","    it('tests arrays', function (done) ","    it('tests objects', function (done) ","        var Foo = function (bar) ","            get: function () ","describe('flatten()', function () ","    it('returns a flat array', function (done) ","describe('reach()', function () ","        i: function ()  },","    it('returns object itself', function (done) ","    it('returns first value of array', function (done) ","    it('returns last value of array using negative index', function (done) ","    it('returns a valid member', function (done) ","    it('returns a valid member with separator override', function (done) ","    it('returns undefined on null object', function (done) ","    it('returns undefined on missing object member', function (done) ","    it('returns undefined on missing function member', function (done) ","        expect(Hoek.reach(obj, 'i.y',  functions: true })).to.equal(undefined);","    it('throws on missing member in strict mode', function (done) ","        expect(function () ","    it('returns undefined on invalid member', function (done) ","    it('returns function member', function (done) ","        expect(typeof Hoek.reach(obj, 'i')).to.equal('function');","    it('returns function property', function (done) ","    it('returns null', function (done) ","    it('throws on function property when functions not allowed', function (done) ","        expect(function () ","            Hoek.reach(obj, 'i.x',  functions: false });","    it('will return a default value if property is not found', function (done) ","    it('will return a default value if path is not found', function (done) ","    it('allows a falsey value to be used as the default value', function (done) ","describe('reachTemplate()', function () ","    it('applies object to template', function (done) ","    it('applies object to template (options)', function (done) ","describe('callStack()', function () ","    it('returns the full call stack', function (done) ","describe('displayStack ()', function () ","    it('returns the full call stack for display', function (done) ","    it('includes constructor functions correctly', function (done) ","        var Something = function (next) ","        var something = new Something(function () ","describe('abort()', function () ","    it('exits process when not in test mode', function (done) ","        process.stdout.write = function ()  };","        process.exit = function (state) ","    it('throws when not in test mode and abortThrow is true', function (done) ","        var fn = function () ","    it('respects hideStack argument', function (done) ","        process.exit = function ()  };","        process.stdout.write = function (message) ","    it('throws in test mode', function (done) ","        expect(function () ","    it('throws in test mode with default message', function (done) ","        expect(function () ","    it('defaults to showing stack', function (done) ","        process.exit = function ()  };","        process.stdout.write = function (message) ","describe('assert()', function () ","    it('throws an Error when using assert in a test', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with no message', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with multipart message', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with multipart message (empty)', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with object message', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with multipart string and error messages', function (done) ","        var fn = function () ","    it('throws an Error when using assert in a test with error object message', function (done) ","        var fn = function () ","    it('throws the same Error that is passed to it if there is only one error passed', function (done) ","        var fn = function () ","describe('Timer', function () ","    it('returns time elapsed', function (done) ","        setTimeout(function () ","describe('Bench', function () ","    it('returns time elapsed', function (done) ","        setTimeout(function () ","describe('escapeRegex()', function () ","    it('escapes all special regular expression characters', function (done) ","describe('Base64Url', function () ","    describe('base64urlEncode()', function () ","        it('should base64 URL-safe a string', function (done) ","        it('encodes a buffer', function (done) ","        it('should base64 URL-safe a hex string', function (done) ","        it('works on larger input strings', function (done) ","    describe('base64urlDecode()', function () ","        it('should un-base64 URL-safe a string', function (done) ","        it('should un-base64 URL-safe a string into hex', function (done) ","        it('should un-base64 URL-safe a string and return a buffer', function (done) ","        it('returns error on undefined input', function (done) ","        it('returns error on invalid input', function (done) ","describe('escapeHeaderAttribute()', function () ","    it('should not alter ascii values', function (done) ","    it('escapes all special HTTP header attribute characters', function (done) ","    it('throws on large unicode characters', function (done) ","        var fn = function () ","    it('throws on CRLF to prevent response splitting', function (done) ","        var fn = function () ","describe('escapeHtml()', function () ","    it('escapes all special HTML characters', function (done) ","    it('returns empty string on falsy input', function (done) ","    it('returns unchanged string on no reserved input', function (done) ","describe('nextTick()', function () ","    it('calls the provided callback on nextTick', function (done) ","        var inc = function (step, next) ","        ticked(5, function () ","        inc(1, function () ","describe('once()', function () ","    it('allows function to only execute once', function (done) ","        var add = function (x) ","    it('double once wraps one time', function (done) ","        var method = function ()  };","describe('isAbsoltePath()', function () ","    it('identifies if path is absolute on Unix without node support',  parallel: false }, function (done) {","    it('identifies if path is absolute with fake node support',  parallel: false }, function (done) {","        Path.isAbsolute = function (path) ","    it('identifies if path is absolute on Windows without node support',  parallel: false }, function (done) {","describe('isInteger()', function () ","    it('validates integers', function (done) ","describe('ignore()', function () ","    it('exists', function (done) ","        expect(typeof Hoek.ignore).to.equal('function');","describe('inherits()', function () ","    it('exists', function (done) ","        expect(typeof Hoek.inherits).to.equal('function');","describe('format()', function () ","    it('exists', function (done) ","        expect(typeof Hoek.format).to.equal('function');","    it('is a reference to Util.format', function (done) ","describe('transform()', function () ","    it('transforms an object based on the input object', function (done) ","    it('transforms an array of objects based on the input object', function (done) ","    it('uses the reach options passed into it', function (done) ","    it('works to create shallow objects', function (done) ","    it('only allows strings in the map', function (done) ","        expect(function () ","    it('throws an error on invalid arguments', function (done) ","        expect(function () ","    it('is safe to pass null', function (done) ","    it('is safe to pass undefined', function (done) ","describe('uniqueFilename()', function () ","    it('generates a random file path', function (done) ","    it('is random enough to use in fast loops', function (done) ","        var filter = results.filter(function (item, index, array) ","    it('combines the random elements with a supplied character', function (done) ","    it('accepts extensions with a \".\" in it', function (done) ","describe('stringify()', function (done) ","    it('converts object to string', function (done) ","    it('returns error in result string', function (done) ","describe('shallow()', function (done) ","    it('shallow copies an object', function (done) "],"Dependencies":["fs","path","code","../lib","lab"]},{"FileName":"node_modules\\hoek\\test\\modules\\test1.js","LineCount":2,"CharCount":14,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\hoek\\test\\modules\\test2.js","LineCount":2,"CharCount":14,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\hoek\\test\\modules\\test3.js","LineCount":2,"CharCount":14,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\hooks-fixed\\hooks.alt.js","LineCount":135,"CharCount":3968,"Comments":["/**"," * Hooks are useful if we want to add a method that automatically has `pre` and `post` hooks."," * For example, it would be convenient to have `pre` and `post` hooks for `save`."," * _.extend(Model, mixins.hooks);"," * Model.hook('save', function () {"," *  console.log('saving');"," * });"," * Model.pre('save', function (next, done) {"," *  console.log('about to save');"," *  next();"," * });"," * Model.post('save', function (next, done) {"," *  console.log('saved');"," *  next();"," * });"," *"," * var m = new Model();"," * m.save();"," * // about to save"," * // saving"," * // saved "," */","","// TODO Add in pre and post skipping options","// TODO Add in pre and post skipping options","module.exports = {","  /**","   *  Declares a new hook to which you can add pres and posts","   *  @param {String} name of the function","   *  @param {Function} the method","   *  @param {Function} the error handler callback","   */","  hook: function (name, fn, err) {","      for (var k in name) { // `name` is a hash of hookName-\u003ehookFn","        this.hook(k, name[k]);","                // arguments[1] === asyncComplete","                if (arguments.length)","            }; // end wrapper = function () {...","            if (wrapper.isAsync = pre.isAsync)","          }); // end posts.map(...)","      function allPresInvoked () {","          }; // end wrapper = function () {...","          return wrapper;","        }); // end posts.map(...)","        if (postChain.length) postChain[0]();"],"Functions":[" * Model.hook('save', function () "," * Model.pre('save', function (next, done) "," * Model.post('save', function (next, done) ","   *  @param String} name of the function","  hook: function (name, fn, err) ","    function noop () }","    proto[name] = function () ","        , preChain = pres.map( function (pre, i) ","            var wrapper = function () ","            }; // end wrapper = function () ...","      function allPresInvoked () ","      function allPresDone () ","        var postChain = posts.map( function (post, i) ","          var wrapper = function () ","          }; // end wrapper = function () ...","        function asyncComplete () ","  pre: function (name, fn, isAsync) ","  post: function (name, fn, isAsync) "],"Dependencies":null},{"FileName":"node_modules\\hooks-fixed\\hooks.js","LineCount":189,"CharCount":6318,"Comments":["// TODO Add in pre and post skipping options","module.exports = {","  /**","   *  Declares a new hook to which you can add pres and posts","   *  @param {String} name of the function","   *  @param {Function} the method","   *  @param {Function} the error handler callback","   */","  hook: function (name, fn, errorCb) {","      for (var k in name) { // `name` is a hash of hookName-\u003ehookFn","        this.hook(k, name[k]);","        , hookArgs // arguments eventually passed to the hook - are mutable","        , lastArg = arguments[arguments.length-1]","                  // All post handlers are done, call original callback function","                  return lastArg.apply(self, arguments);","              // We are assuming that if the last argument provided to the wrapped function is a function, it was expecting","              // a callback.  We trap that callback and wait to call it until all post handlers have finished.","              if(typeof lastArg === 'function'){","              ret = fn.apply(self, args_); // Execute wrapped function, post handlers come afterward","","              if (total_ \u0026\u0026 typeof lastArg !== 'function') return next_();  // no callback provided, execute next_() manually","              return ret;","      // Remove all pre callbacks for hook `name`","      pres[name].length = 0;","      // Remove all post callbacks for hook `name`","      posts[name].length = 0;"],"Functions":["   *  @param String} name of the function","  hook: function (name, fn, errorCb) ","    proto[name] = function () ","        , _asyncsDone = function(err) ","        , handleError = function(err) ","            if ('function' == typeof lastArg)","        , _next = function () ","            if (_args.length \u0026\u0026 !(arguments[0] == null \u0026\u0026 typeof lastArg === 'function'))","                throw new Error(\"Your pre must have next and done arguments -- e.g., function (next, done, ...)\");","                throw new Error(\"Your pre must have a next argument -- e.g., function (next, ...)\");","        , _done = function () ","              next_ = function () ","                    throw new Error(\"Your post must have a next argument -- e.g., function (next, ...)\");","                } else if (typeof lastArg === 'function')","                  // All post handlers are done, call original callback function","              // We are assuming that if the last argument provided to the wrapped function is a function, it was expecting","              if(typeof lastArg === 'function')","              ret = fn.apply(self, args_); // Execute wrapped function, post handlers come afterward","              if (total_ \u0026\u0026 typeof lastArg !== 'function') return next_();  // no callback provided, execute next_() manually","  pre: function (name, isAsync, fn, errorCb) ","  post: function (name, isAsync, fn) ","  removePre: function (name, fnToRemove) ","      pres[name] = pres[name].filter( function (currFn) ","  removePost: function (name, fnToRemove) ","      posts[name] = posts[name].filter( function (currFn) ","  _lazySetupHooks: function (proto, methodName, errorCb) ","function once (fn, scope) ","  return function fnWrapper () "],"Dependencies":null},{"FileName":"node_modules\\hooks-fixed\\test.js","LineCount":787,"CharCount":20315,"Comments":["// TODO Add in test for making sure all pres get called if pre is defined directly on an instance.","// TODO Test for calling `done` twice or `next` twice in the same function counts only once","module.exports = {","//  \"can pass the hook's arguments as an array to pres\": function () {","//    // Great for dynamic arity - e.g., slice(...)","//    var A = function () {};","//    _.extend(A, hooks);","//    A.hook('set', function (path, val) {","//      this[path] = val;","//    });","//    A.pre('set', function (next, hello, world) {","//      hello.should.equal('hello');","//      world.should.equal('world');","//      next();","//    });","//    var a = new A();","//    a.set('hello', 'world');","//    assert.equal(a.hello, 'world');","//  },","  \"can pass the hook's arguments verbatim to posts\": function () {","//  \"can pass the hook's arguments as an array to posts\": function () {","//    var A = function () {};","//    _.extend(A, hooks);","//    A.hook('set', function (path, val) {","//      this[path] = val;","//    });","//    A.post('set', function (next, halt, args) {","//      assert.equal(args[0], 'hello');","//      assert.equal(args[1], 'world');","//      next();","//    });","//    var a = new A();","//    a.set('hello', 'world');","//    assert.equal(a.hello, 'world');","//  },","  \"pres should be able to modify and pass on a modified version of the hook's arguments\": function () {","    // Otherwise, with hookFn = function (a, b, next, ),","    // if we use hookFn(a), then because the pre functions are of the form","    // preFn = function (a, b, next, ), then it actually gets executed with","    // preFn(a, next, ), so when we call next() from within preFn, we are actually","    // calling ()","","    var A = function () {};","      // Notice that done() is not invoked here","    });","      // force a throw to re-exec next()","      try {"],"Functions":["// TODO Test for calling `done` twice or `next` twice in the same function counts only once","  'should be able to assign multiple hooks at once': function () ","    var A = function () };","      hook1: function (a) },","      hook2: function (b) }","    assert.equal(typeof a.hook1, 'function');","    assert.equal(typeof a.hook2, 'function');","  'should run without pres and posts when not present': function () ","    var A = function () };","    A.hook('save', function () ","  'should run with pres when present': function () ","    var A = function () };","    A.hook('save', function () ","    A.pre('save', function (next) ","  'should run with posts when present': function () ","    var A = function () };","    A.hook('save', function () ","    A.post('save', function (next) ","  'should run pres and posts when present': function () ","    var A = function () };","    A.hook('save', function () ","    A.pre('save', function (next) ","    A.post('save', function (next) ","  'should run posts after pres': function () ","    var A = function () };","    A.hook('save', function () ","    A.pre('save', function (next) ","    A.post('save', function (next) ","  'should not run a hook if a pre fails': function () ","    var A = function () };","    A.hook('save', function () ","    }, function (err) ","    A.pre('save', true, function (next, done) ","  'should be able to run multiple pres': function () ","    var A = function () };","    A.hook('save', function () ","    A.pre('save', function (next) ","    }).pre('save', function (next) ","  'should run multiple pres until a pre fails and not call the hook': function () ","    var A = function () };","    A.hook('save', function () ","    }, function (err) });","    A.pre('save', function (next) ","    }).pre('save', function (next) ","    }).pre('save', function (next) ","  'should be able to run multiple posts': function () ","    var A = function () };","    A.hook('save', function () ","    A.post('save', function (next) ","    }).post('save', function (next) ","    }).post('save', function (next) ","  'should run only posts up until an error': function () ","    var A = function () };","    A.hook('save', function () ","    }, function (err) });","    A.post('save', function (next) ","    }).post('save', function (next) ","    }).post('save', function (next) ","  \"should fall back first to the hook method's last argument as the error handler if it is a function of arity 1 or 2\": function () ","    var A = function () };","    A.hook('save', function (callback) ","    A.pre('save', true, function (next, done) ","    a.save( function (err) ","  'should fall back second to the default error handler if specified': function () ","    var A = function () };","    A.hook('save', function (callback) ","    }, function (err) ","    A.pre('save', true, function (next, done) ","  'fallback default error handler should scope to the object': function () ","    var A = function () ","    A.hook('save', function (callback) ","    }, function (err) ","    A.pre('save', true, function (next, done) ","  'should fall back last to throwing the error': function () ","    var A = function () };","    A.hook('save', function (err) ","    A.pre('save', true, function (next, done) ","  \"should proceed without mutating arguments if `next(null|undefined)` is called in a serial pre, and the last argument of the target method is a callback with node-like signature function (err, obj) ...} or function (err) {...}\": function () {","    var A = function () };","    A.prototype.save = function (callback) ","    A.pre('save', function (next) ","    A.pre('save', function (next) ","    a.save( function (err) ","  \"should proceed with mutating arguments if `next(null|undefined)` is callback in a serial pre, and the last argument of the target method is not a function\": function () ","    var A = function () };","    A.prototype.set = function (v) ","    A.pre('set', function (next) ","    A.pre('set', function (next) ","  'should not run any posts if a pre fails': function () ","    var A = function () };","    A.hook('save', function () ","    }, function (err) });","    A.pre('save', function (next) ","    }).post('save', function (next) ","  \"can pass the hook's arguments verbatim to pres\": function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.pre('set', function (next, path, val) ","//  \"can pass the hook's arguments as an array to pres\": function () ","//    var A = function () };","//    A.hook('set', function (path, val) ","//    A.pre('set', function (next, hello, world) ","  \"can pass the hook's arguments verbatim to posts\": function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.post('set', function (next, path, val) ","//  \"can pass the hook's arguments as an array to posts\": function () ","//    var A = function () };","//    A.hook('set', function (path, val) ","//    A.post('set', function (next, halt, args) ","  \"pres should be able to modify and pass on a modified version of the hook's arguments\": function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.pre('set', function (next, path, val) ","    A.pre('set', function (next, path, val) ","    A.pre('set', function (next, path, val, opt) ","  'posts should see the modified version of arguments if the pres modified them': function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.pre('set', function (next, path, val) ","    A.post('set', function (next, path, val) ","  'should pad missing arguments (relative to expected arguments of the hook) with null': function () ","    // Otherwise, with hookFn = function (a, b, next, ),","    // if we use hookFn(a), then because the pre functions are of the form","    // preFn = function (a, b, next, ), then it actually gets executed with","    var A = function () };","    A.hook('set', function (path, val, opts) ","    A.pre('set', function (next, path, val, opts) ","  'should not invoke the target method until all asynchronous middleware have invoked dones': function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.pre('set', function (next, path, val) ","    A.pre('set', true, function (next, done, path, val) ","      setTimeout(function () ","    A.pre('set', function (next, path, val) ","    A.pre('set', true, function (next, done, path, val) ","      setTimeout(function () ","  'invoking a method twice should run its async middleware twice': function () ","    var A = function () };","    A.hook('set', function (path, val) ","    A.pre('set', true, function (next, done, path, val) ","      setTimeout(function () ","  'calling the same done multiple times should have the effect of only calling it once': function () ","    var A = function () ","    A.hook('ack', function () ","    A.pre('ack', true, function (next, done) ","    A.pre('ack', true, function (next, done) ","    setTimeout( function () ","  'calling the same next multiple times should have the effect of only calling it once': function (beforeExit) ","    var A = function () ","    A.hook('ack', function () ","    A.pre('ack', function (next) ","    A.pre('ack', function (next) ","    beforeExit( function () ","  'asynchronous middleware should be able to pass an error via `done`, stopping the middleware chain': function () ","    var A = function () };","    A.hook('set', function (path, val, fn) ","    A.pre('set', true, function (next, done, path, val, fn) ","      setTimeout(function () ","    a.set('hello', 'world', function (err) ","  'should be able to remove a particular pre': function () ","    var A = function () }","    A.hook('save', function () ","    A.pre('save', function (next) ","    A.pre('save', preTwo = function (next) ","  'should be able to remove all pres associated with a hook': function () ","    var A = function () };","    A.hook('save', function () ","    A.pre('save', function (next) ","    A.pre('save', function (next) ","  'should be able to remove a particular post': function () ","    var A = function () }","    A.hook('save', function () ","    A.post('save', function (next) ","    A.post('save', postTwo = function (next) ","  'should be able to remove all posts associated with a hook': function () ","    var A = function () };","    A.hook('save', function () ","    A.post('save', function (next) ","    A.post('save', function (next) ","  '#pre should lazily make a method hookable': function () ","    var A = function () };","    A.prototype.save = function () ","    A.pre('save', function (next) ","  '#pre lazily making a method hookable should be able to provide a default errorHandler as the last argument': function () ","    var A = function () };","    A.prototype.save = function () ","    A.pre('save', function (next) ","    }, function (err) ","  '#post should lazily make a method hookable': function () ","    var A = function () };","    A.prototype.save = function () ","    A.post('save', function (next) ","  \"a lazy hooks setup should handle errors via a method's last argument, if it's a callback\": function () ","    var A = function () };","    A.prototype.save = function (fn) };","    A.pre('save', function (next) ","    a.save( function (err) ","  'should intercept method callbacks for post handlers': function () ","    var A = function () };","    A.hook('save', function (val, callback) ","    A.post('save', function (next) ","    }).post('save', function (next) ","    }).post('save', function (next) ","    a.save(2, function()","  'should handle parallel followed by serial': function () ","    var A = function () };","    A.hook('save', function (val, callback) ","    A.pre('save', true, function(next, done) ","      process.nextTick(function() ","    }).pre('save', function(done) ","      process.nextTick(function() ","    a.save(2, function()"],"Dependencies":["./hooks","should","assert","underscore"]},{"FileName":"node_modules\\http-errors\\index.js","LineCount":224,"CharCount":4520,"Comments":["/*!"," * http-errors"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var setPrototypeOf = require('setprototypeof')","/**"," * Module exports."," * @public"," */","","module.exports = createError","// Populate exports for all constructors","populateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)","/**"," * Create a new HTTP Error."," *"," * @returns {Error}"," * @public"," */","","function createError () {","  // so much arity going on ~_~","  var err","  // constructor","  var HttpError = createError[status]","    // create error","    err = HttpError","    // add properties to generic error","    err.expose = status \u003c 500","/**"," * Create HTTP error abstract base class."," * @private"," */","","function createHttpErrorConstructor () {","/**"," * Create a constructor for a client error."," * @private"," */","","function createClientErrorConstructor (HttpError, name, code) {","    // create the error object","    var err = new Error(message != null ? message : statuses[code])","    // capture a stack trace to the construction point","    Error.captureStackTrace(err, ClientError)","    // adjust the [[Prototype]]","    setPrototypeOf(err, ClientError.prototype)","    // redefine the error name","    Object.defineProperty(err, 'name', {","/**"," * Create a constructor for a server error."," * @private"," */","","function createServerErrorConstructor (HttpError, name, code) {","    // create the error object","    var err = new Error(message != null ? message : statuses[code])","    // capture a stack trace to the construction point","    Error.captureStackTrace(err, ServerError)","    // adjust the [[Prototype]]","    setPrototypeOf(err, ServerError.prototype)","    // redefine the error name","    Object.defineProperty(err, 'name', {","/**"," * Populate the exports object with constructors for every error class."," * @private"," */","","function populateConstructorExports (exports, codes, HttpError) {","      // export the constructor","      exports[code] = CodeError","  // backwards-compatibility","  exports[\"I'mateapot\"] = exports.ImATeapot","/**"," * Convert a string of words to a JavaScript identifier."," * @private"," */","","function toIdentifier (str) {"],"Functions":["function createError () ","function createHttpErrorConstructor () ","  function HttpError () ","function createClientErrorConstructor (HttpError, name, code) ","  function ClientError (message) ","function createServerErrorConstructor (HttpError, name, code) ","  function ServerError (message) ","function populateConstructorExports (exports, codes, HttpError) ","  codes.forEach(function forEachCode (code) ","function toIdentifier (str) ","  return str.split(' ').map(function (token) "],"Dependencies":["setprototypeof","statuses","inherits"]},{"FileName":"node_modules\\iconv-lite\\encodings\\dbcs-codec.js","LineCount":555,"CharCount":20806,"Comments":["// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.","// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.","// To save memory and loading time, we read table files only when requested.","","exports._dbcs = DBCSCodec;","// Class DBCSCodec reads and initializes mapping tables.","function DBCSCodec(codecOptions, iconv) {","    // Load tables.","    var mappingTable = codecOptions.table();","    // Decode tables: MBCS -\u003e Unicode.","","    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.","    // Trie root is decodeTables[0].","    // Values: \u003e=  0 -\u003e unicode character code. can be \u003e 0xFFFF","    //         == UNASSIGNED -\u003e unknown/unassigned sequence.","    //         == GB18030_CODE -\u003e this is the end of a GB18030 4-byte sequence.","    //         \u003c= NODE_START -\u003e index of the next node in our trie to process next byte.","    //         \u003c= SEQ_START  -\u003e index of the start of a character code sequence, in decodeTableSeq.","    this.decodeTables = [];","    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.","","    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. ","    this.decodeTableSeq = [];","    // Actual mapping tables consist of chunks. Use them to fill up decode tables.","    for (var i = 0; i \u003c mappingTable.length; i++)","    // Encode tables: Unicode -\u003e DBCS.","","    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.","    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.","    // Values: \u003e=  0 -\u003e it is a normal char. Write the value (if \u003c=256 then 1 byte, if \u003c=65536 then 2 bytes, etc.).","    //         == UNASSIGNED -\u003e no conversion found. Output a default char.","    //         \u003c= SEQ_START  -\u003e it's an index in encodeTableSeq, see below. The character starts a sequence.","    this.encodeTable = [];","    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of","    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key","    // means end of sequence (needed when one sequence is a strict subsequence of another).","    // Objects are kept separately from encodeTable to increase performance.","    this.encodeTableSeq = [];","    // Some chars can be decoded, but need not be encoded.","    var skipEncodeChars = {};","    // Use decode trie to recursively fill out encode tables.","    this._fillEncodeTable(0, 0, skipEncodeChars);","    // Add more encoding pairs when needed.","    if (codecOptions.encodeAdd) {","    // Load \u0026 create GB18030 tables when needed.","    if (typeof codecOptions.gb18030 === 'function') {","        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.","","        // Add GB18030 decode tables.","        var thirdByteNodeIdx = this.decodeTables.length;","// Decoder helpers","DBCSCodec.prototype._getDecodeTrieNode = function(addr) {","    for (var i = bytes.length-1; i \u003e 0; i--) { // Traverse nodes deeper into the trie.","        var val = node[bytes[i]];","        if (val == UNASSIGNED) { // Create new node.","            node[bytes[i]] = NODE_START - this.decodeTables.length;","        else if (val \u003c= NODE_START) { // Existing node.","            node = this.decodeTables[NODE_START - val];","    // First element of chunk is the hex mbcs code where we start.","    var curAddr = parseInt(chunk[0], 16);","    // Choose the decoding node where we'll write our chars.","    var writeTable = this._getDecodeTrieNode(curAddr);","    // Write all other elements of the chunk to the table.","    for (var k = 1; k \u003c chunk.length; k++) {","        if (typeof part === \"string\") { // String, write as-is.","            for (var l = 0; l \u003c part.length;) {","                if (0xD800 \u003c= code \u0026\u0026 code \u003c 0xDC00) { // Decode surrogate","                    var codeTrail = part.charCodeAt(l++);","                else if (0x0FF0 \u003c code \u0026\u0026 code \u003c= 0x0FFF) { // Character sequence (our own encoding used)","                    var len = 0xFFF - code + 2;","                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.","","                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;","                    writeTable[curAddr++] = code; // Basic char","            }","        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.","            var charCode = writeTable[curAddr - 1] + 1;","// Encoder helpers","DBCSCodec.prototype._getEncodeBucket = function(uCode) {","    var high = uCode \u003e\u003e 8; // This could be \u003e 0xFF because of astral characters.","    if (this.encodeTable[high] === undefined)","        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.","    return this.encodeTable[high];","        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.","    else if (bucket[low] == UNASSIGNED)","    // Get the root of character tree according to first character of the sequence.","    var uCode = seq[0];","        // There's already a sequence with  - use it.","        node = this.encodeTableSeq[SEQ_START-bucket[low]];","        // There was no sequence object - allocate a new one.","        node = {};","        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.","        bucket[low] = SEQ_START - this.encodeTableSeq.length;","    // Traverse the character tree, allocating new nodes as needed.","    for (var j = 1; j \u003c seq.length-1; j++) {","    // Set the leaf to given dbcsCode.","    uCode = seq[seq.length-1];","// == Encoder ==================================================================","","function DBCSEncoder(options, codec) {","    // Encoder state","    this.leadSurrogate = -1;","    // Static data","    this.encodeTable = codec.encodeTable;","        // 0. Get next character.","        if (nextChar === -1) {","        // 1. Handle surrogates.","        if (0xD800 \u003c= uCode \u0026\u0026 uCode \u003c 0xE000) { // Char is one of surrogates.","            if (uCode \u003c 0xDC00) { // We've got lead surrogate.","                if (leadSurrogate === -1) {","                    // Double lead surrogate found.","                    uCode = UNASSIGNED;","            } else { // We've got trail surrogate.","                if (leadSurrogate !== -1) {","                    // Incomplete surrogate pair - only trail surrogate found.","                    uCode = UNASSIGNED;","            // Incomplete surrogate pair - only lead surrogate found.","            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.","            leadSurrogate = -1;","        // 2. Convert uCode character.","        var dbcsCode = UNASSIGNED;","        if (seqObj !== undefined \u0026\u0026 uCode != UNASSIGNED) { // We are in the middle of the sequence","            var resCode = seqObj[uCode];","            if (typeof resCode === 'object') { // Sequence continues.","                seqObj = resCode;","            } else if (typeof resCode == 'number') { // Sequence finished. Write it.","                dbcsCode = resCode;","            } else if (resCode == undefined) { // Current character is not part of the sequence.","","                // Try default character for this sequence","                resCode = seqObj[DEF_CHAR];","                    dbcsCode = resCode; // Found. Write it.","                    nextChar = uCode; // Current character will be written too in the next iteration.","","                } else {","                    // TODO: What if we have no default? (resCode == undefined)","                    // Then, we should write first char of the sequence as-is and try the rest recursively.","                    // Didn't do it for now because no encoding has this situation yet.","                    // Currently, just skip the sequence and write current char.","                }","        else if (uCode \u003e= 0) {  // Regular character","            var subtable = this.encodeTable[uCode \u003e\u003e 8];","            if (dbcsCode \u003c= SEQ_START) { // Sequence start","                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];","                // Use GB18030 algorithm to find character(s) to write.","                var idx = findIdx(this.gb18030.uChars, uCode);","        // 3. Write dbcsCode character.","        if (dbcsCode === UNASSIGNED)","            newBuf[j++] = dbcsCode \u003e\u003e 8;   // high byte","            newBuf[j++] = dbcsCode \u0026 0xFF; // low byte","        }","        return; // All clean. Most often case.","","    var newBuf = new Buffer(10), j = 0;","    if (this.seqObj) { // We're in the sequence.","        var dbcsCode = this.seqObj[DEF_CHAR];","        if (dbcsCode !== undefined) { // Write beginning of the sequence.","            if (dbcsCode \u003c 0x100) {","                newBuf[j++] = dbcsCode \u003e\u003e 8;   // high byte","                newBuf[j++] = dbcsCode \u0026 0xFF; // low byte","            }","            // See todo above.","        }","        // Incomplete surrogate pair - only lead surrogate found.","        newBuf[j++] = this.defaultCharSingleByte;","// Export for testing","DBCSEncoder.prototype.findIdx = findIdx;","// == Decoder ==================================================================","","function DBCSDecoder(options, codec) {","    // Decoder state","    this.nodeIdx = 0;","    // Static data","    this.decodeTables = codec.decodeTables;","        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.","        uCode;","    if (prevBufOffset \u003e 0) // Make prev buf overlap a little to make it easier to slice later.","        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);","        // Lookup in current trie node.","        var uCode = this.decodeTables[nodeIdx][curByte];","            // Normal character, just use it.","        }","        else if (uCode === UNASSIGNED) { // Unknown char.","            // TODO: Callback with seq.","            //var curSeq = (seqStart \u003e= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);","            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).","            uCode = this.defaultCharUnicode.charCodeAt(0);","        else if (uCode \u003c= NODE_START) { // Go to next trie node.","            nodeIdx = NODE_START - uCode;","        else if (uCode \u003c= SEQ_START) { // Output a sequence of chars.","            var seq = this.decodeTableSeq[SEQ_START - uCode];","        // Write the character to buffer, handling higher planes using surrogate pair.","        if (uCode \u003e 0xFFFF) { ","        // Reset trie node.","        nodeIdx = 0; seqStart = i+1;","    // Try to parse all remaining chars.","    while (this.prevBuf.length \u003e 0) {","        // Skip 1 character in the buffer.","        ret += this.defaultCharUnicode;","        // Parse remaining as usual.","        this.prevBuf = new Buffer(0);","// Binary search for GB18030. Returns largest i such that table[i] \u003c= val.","function findIdx(table, val) {","    while (l \u003c r-1) { // always table[l] \u003c= val \u003c table[r]","        var mid = l + Math.floor((r-l+1)/2);"],"Functions":["function DBCSCodec(codecOptions, iconv) ","    if (typeof codecOptions.gb18030 === 'function') ","DBCSCodec.prototype._getDecodeTrieNode = function(addr) ","DBCSCodec.prototype._addDecodeChunk = function(chunk) ","DBCSCodec.prototype._getEncodeBucket = function(uCode) ","DBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) ","DBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) ","DBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) ","function DBCSEncoder(options, codec) ","DBCSEncoder.prototype.write = function(str) ","DBCSEncoder.prototype.end = function() ","function DBCSDecoder(options, codec) ","DBCSDecoder.prototype.write = function(buf) ","DBCSDecoder.prototype.end = function() ","function findIdx(table, val) "],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\dbcs-data.js","LineCount":171,"CharCount":7942,"Comments":["// Description of supported double byte encodings and aliases.","// Tables are not require()-d until they are needed to speed up library load.","// require()-s are direct to support Browserify.","","module.exports = {","    // == Japanese/ShiftJIS ====================================================","    // All japanese encodings are based on JIS X set of standards:","    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.","    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. ","    //              Has several variations in 1978, 1983, 1990 and 1997.","    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.","    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.","    //              2 planes, first is superset of 0208, second - revised 0212.","    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)","","    // Byte encodings are:","    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte","    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.","    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.","    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.","    //               0x00-0x7F       - lower part of 0201","    //               0x8E, 0xA1-0xDF - upper part of 0201","    //               (0xA1-0xFE)x2   - 0208 plane (94x94).","    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).","    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.","    //               Used as-is in ISO2022 family.","    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, ","    //                0201-1976 Roman, 0208-1978, 0208-1983.","    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.","    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.","    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.","    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.","    //","    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.","    //","    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html","","","    'shiftjis': {","    // TODO: KDDI extension to Shift_JIS","    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.","    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.","","    // == Chinese/GBK ==========================================================","    // http://en.wikipedia.org/wiki/GBK","","    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936","    'gb2312': 'cp936',","    // Microsoft's CP936 is a subset and approximation of GBK.","    // TODO: Euro = 0x80 in cp936, but not in GBK (where it's valid but undefined)","    'windows936': 'cp936',","    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.","    'gbk': {","    // GB18030 is an algorithmic extension of GBK.","    'gb18030': {","    // TODO: Support GB18030 (~27000 chars + whole unicode mapping, cp54936)","    // http://icu-project.org/docs/papers/gb18030.html","    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml","    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0","","    // == Korean ===============================================================","    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.","    'windows949': 'cp949',","    // == Big5/Taiwan/Hong Kong ================================================","    // There are lots of tables for Big5 and cp950. Please see the following links for history:","    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html","    // Variations, in roughly number of defined chars:","    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT","    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/","    //  * Big5-2003 (Taiwan standard) almost superset of cp950.","    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.","    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. ","    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.","    //    Plus, it has 4 combining sequences.","    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299","    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.","    //    Implementations are not consistent within browsers; sometimes labeled as just big5.","    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.","    //    Great discussion \u0026 recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31","    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.","    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt","    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt","    // ","    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder","    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.","","    'windows950': 'cp950',","    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.","    'big5': 'big5hkscs',"],"Functions":["        table: function()  return require('./tables/shiftjis.json') },","        table: function()  return require('./tables/eucjp.json') },","        table: function()  return require('./tables/cp936.json') },","        table: function()  return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },","        table: function()  return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },","        gb18030: function()  return require('./tables/gb18030-ranges.json') },","        table: function()  return require('./tables/cp949.json') },","        table: function()  return require('./tables/cp950.json') },","        table: function()  return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },"],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\index.js","LineCount":23,"CharCount":687,"Comments":["// Update this array if you add/rename/remove files in this directory.","// We support Browserify by skipping automatic module discovery and requiring modules directly.","var modules = [","// Put all encoding/alias/codec definitions to single object and export it. ","for (var i = 0; i \u003c modules.length; i++) {"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\internal.js","LineCount":188,"CharCount":5871,"Comments":["// Export Node.js internal encodings.","","module.exports = {","    // Encodings","    utf8:   { type: \"_internal\", bomAware: true},","    // Codec.","    _internal: InternalCodec,","//------------------------------------------------------------------------------","","function InternalCodec(codecOptions, iconv) {","        this.enc = \"utf8\"; // Use utf8 for decoding.","        this.encoder = InternalEncoderCesu8;","        // Add decoder for versions of Node not supporting CESU-8","        if (new Buffer(\"eda080\", 'hex').toString().length == 3) {","//------------------------------------------------------------------------------","","// We use node.js internal decoder. Its signature is the same as ours.","var StringDecoder = require('string_decoder').StringDecoder;","if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.","    StringDecoder.prototype.end = function() {};","//------------------------------------------------------------------------------","// Encoder is mostly trivial","","function InternalEncoder(options, codec) {","//------------------------------------------------------------------------------","// Except base64 encoder, which must keep its state.","","function InternalEncoderBase64(options, codec) {","//------------------------------------------------------------------------------","// CESU-8 encoder is also special.","","function InternalEncoderCesu8(options, codec) {","        // Naive implementation, but it works because CESU-8 is especially easy","        // to convert from UTF-16 (which all JS strings are encoded in).","        if (charCode \u003c 0x80)","        else { // charCode will always be \u003c 0x10000 in javascript.","            buf[bufIdx++] = 0xE0 + (charCode \u003e\u003e\u003e 12);","//------------------------------------------------------------------------------","// CESU-8 decoder is not implemented in Node v4.0+","","function InternalDecoderCesu8(options, codec) {","        if ((curByte \u0026 0xC0) !== 0x80) { // Leading byte","            if (contBytes \u003e 0) { // Previous code is invalid","                res += this.defaultCharUnicode;","            if (curByte \u003c 0x80) { // Single-byte code","                res += String.fromCharCode(curByte);","            } else if (curByte \u003c 0xE0) { // Two-byte code","                acc = curByte \u0026 0x1F;","            } else if (curByte \u003c 0xF0) { // Three-byte code","                acc = curByte \u0026 0x0F;","            } else { // Four or more are not supported for CESU-8.","                res += this.defaultCharUnicode;","        } else { // Continuation byte","            if (contBytes \u003e 0) { // We're waiting for it.","                acc = (acc \u003c\u003c 6) | (curByte \u0026 0x3f);","                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)","                    if (accBytes === 2 \u0026\u0026 acc \u003c 0x80 \u0026\u0026 acc \u003e 0)","                        // Actually add character.","                        res += String.fromCharCode(acc);","            } else { // Unexpected continuation byte","                res += this.defaultCharUnicode;"],"Functions":["function InternalCodec(codecOptions, iconv) ","    StringDecoder.prototype.end = function() };","function InternalDecoder(options, codec) ","function InternalEncoder(options, codec) ","InternalEncoder.prototype.write = function(str) ","InternalEncoder.prototype.end = function() ","function InternalEncoderBase64(options, codec) ","InternalEncoderBase64.prototype.write = function(str) ","InternalEncoderBase64.prototype.end = function() ","function InternalEncoderCesu8(options, codec) ","InternalEncoderCesu8.prototype.write = function(str) ","InternalEncoderCesu8.prototype.end = function() ","function InternalDecoderCesu8(options, codec) ","InternalDecoderCesu8.prototype.write = function(buf) ","InternalDecoderCesu8.prototype.end = function() "],"Dependencies":["string_decoder"]},{"FileName":"node_modules\\iconv-lite\\encodings\\sbcs-codec.js","LineCount":73,"CharCount":2086,"Comments":["// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that","// correspond to encoded bytes (if 128 - then lower half is ASCII). ","","exports._sbcs = SBCSCodec;","    // Prepare char buffer for decoding.","    if (!codecOptions.chars || (codecOptions.chars.length !== 128 \u0026\u0026 codecOptions.chars.length !== 256))","    // Encoding buffer.","    var encodeBuf = new Buffer(65536);","    // Strings are immutable in JS -\u003e we use ucs2 buffer to speed up computations.","    var decodeBuf = this.decodeBuf;"],"Functions":["function SBCSCodec(codecOptions, iconv) ","function SBCSEncoder(options, codec) ","SBCSEncoder.prototype.write = function(str) ","SBCSEncoder.prototype.end = function() ","function SBCSDecoder(options, codec) ","SBCSDecoder.prototype.write = function(buf) ","SBCSDecoder.prototype.end = function() "],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js","LineCount":451,"CharCount":31584,"Comments":["// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.","module.exports = {"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\sbcs-data.js","LineCount":170,"CharCount":4151,"Comments":["// Manually added data to be used by sbcs codec in addition to generated one.","","module.exports = {","    // Not supported by iconv, not sure why.","    \"10029\": \"maccenteuro\",","    // Aliases of generated encodings.","    \"ascii8bit\": \"ascii\","],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\utf16.js","LineCount":175,"CharCount":4708,"Comments":["// == UTF16-BE codec. ==========================================================","","exports.utf16be = Utf16BECodec;","// -- Encoding","","function Utf16BEEncoder() {","// -- Decoding","","function Utf16BEDecoder() {","// == UTF-16 codec =============================================================","// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.","// Defaults to UTF-16LE, as it's prevalent and default in Node.","// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le","// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});","","// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).","","exports.utf16 = Utf16Codec;","// -- Encoding (pass-through)","","function Utf16Encoder(options, codec) {","// -- Decoding","","function Utf16Decoder(options, codec) {","        // Codec is not chosen yet. Accumulate initial bytes.","        this.initialBytes.push(buf);","        if (this.initialBytesLen \u003c 16) // We need more bytes to use space heuristic (see below)","            return '';","        // We have enough bytes -\u003e detect endianness.","        var buf = Buffer.concat(this.initialBytes),","        // Check BOM.","        if (buf[0] == 0xFE \u0026\u0026 buf[1] == 0xFF) // UTF-16BE BOM","            enc = 'utf-16be';","        else if (buf[0] == 0xFF \u0026\u0026 buf[1] == 0xFE) // UTF-16LE BOM","            enc = 'utf-16le';","            // No BOM found. Try to deduce encoding from initial content.","            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.","            // So, we count ASCII as if it was LE or BE, and decide from that.","            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions","                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.","","            for (var i = 0; i \u003c _len; i += 2) {"],"Functions":["function Utf16BECodec() ","function Utf16BEEncoder() ","Utf16BEEncoder.prototype.write = function(str) ","Utf16BEEncoder.prototype.end = function() ","function Utf16BEDecoder() ","Utf16BEDecoder.prototype.write = function(buf) ","Utf16BEDecoder.prototype.end = function() ","function Utf16Codec(codecOptions, iconv) ","function Utf16Encoder(options, codec) ","Utf16Encoder.prototype.write = function(str) ","Utf16Encoder.prototype.end = function() ","function Utf16Decoder(options, codec) ","Utf16Decoder.prototype.write = function(buf) ","Utf16Decoder.prototype.end = function() ","function detectEncoding(buf, defaultEncoding) "],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\encodings\\utf7.js","LineCount":290,"CharCount":8867,"Comments":["// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152","// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3","","exports.utf7 = Utf7Codec;","exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7","function Utf7Codec(codecOptions, iconv) {","// -- Encoding","","var nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;","    // Naive implementation.","    // Non-direct chars are encoded as \"+\u003cbase64\u003e-\"; single \"+\" char is encoded as \"+-\".","    return new Buffer(str.replace(nonDirectChars, function(chunk) {","// -- Decoding","","function Utf7Decoder(options, codec) {","    // The decoder is more involved as we must handle chunks in stream.","","    for (var i = 0; i \u003c buf.length; i++) {","        if (!inBase64) { // We're in direct mode.","            // Write direct chars until '+'","            if (buf[i] == plusChar) {","                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.","                lastI = i+1;","        } else { // We decode base64.","            if (!base64Chars[buf[i]]) { // Base64 ended.","                if (i == lastI \u0026\u0026 buf[i] == minusChar) {// \"+-\" -\u003e \"+\"","                    res += \"+\";","                if (buf[i] != minusChar) // Minus is absorbed after base64.","                    i--;","        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.","    } else {","        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -\u003e 2x3 bytes -\u003e 3 chars.","        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.","        b64str = b64str.slice(0, canBeDecoded);","// UTF-7-IMAP codec.","// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)","// Differences:","//  * Base64 part is started by \"\u0026\" instead of \"+\"","//  * Direct characters are 0x20-0x7E, except \"\u0026\" (0x26)","//  * In Base64, \",\" is used instead of \"/\"","//  * Base64 must not be used to represent direct characters.","//  * No implicit shift back from Base64 (should always end with '-')","//  * String must end in non-shifted position.","//  * \"-\u0026\" while in base64 is not allowed.","","","exports.utf7imap = Utf7IMAPCodec;","// -- Encoding","","function Utf7IMAPEncoder(options, codec) {","        if (0x20 \u003c= uChar \u0026\u0026 uChar \u003c= 0x7E) { // Direct character or '\u0026'.","            if (inBase64) {","                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);","                    base64AccumIdx = 0;","                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.","                inBase64 = false;","                buf[bufIdx++] = uChar; // Write direct character","","                if (uChar === andChar)  // Ampersand -\u003e '\u0026-'","                    buf[bufIdx++] = minusChar;","        } else { // Non-direct character","            if (!inBase64) {","                buf[bufIdx++] = andChar; // Write '\u0026', then go to base64 mode.","                inBase64 = true;","                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);","                    base64AccumIdx = 0;","            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);","            this.base64AccumIdx = 0;","        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.","        this.inBase64 = false;","// -- Decoding","","function Utf7IMAPDecoder(options, codec) {","    // The decoder is more involved as we must handle chunks in stream.","    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).","","    for (var i = 0; i \u003c buf.length; i++) {","        if (!inBase64) { // We're in direct mode.","            // Write direct chars until '\u0026'","            if (buf[i] == andChar) {","                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.","                lastI = i+1;","        } else { // We decode base64.","            if (!base64IMAPChars[buf[i]]) { // Base64 ended.","                if (i == lastI \u0026\u0026 buf[i] == minusChar) { // \"\u0026-\" -\u003e \"\u0026\"","                    res += \"\u0026\";","                if (buf[i] != minusChar) // Minus may be absorbed after base64.","                    i--;","        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.","    } else {","        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -\u003e 2x3 bytes -\u003e 3 chars.","        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.","        b64str = b64str.slice(0, canBeDecoded);"],"Functions":["function Utf7Codec(codecOptions, iconv) ","function Utf7Encoder(options, codec) ","Utf7Encoder.prototype.write = function(str) ","    return new Buffer(str.replace(nonDirectChars, function(chunk) ","Utf7Encoder.prototype.end = function() ","function Utf7Decoder(options, codec) ","Utf7Decoder.prototype.write = function(buf) ","Utf7Decoder.prototype.end = function() ","function Utf7IMAPCodec(codecOptions, iconv) ","function Utf7IMAPEncoder(options, codec) ","Utf7IMAPEncoder.prototype.write = function(str) ","Utf7IMAPEncoder.prototype.end = function() ","function Utf7IMAPDecoder(options, codec) ","Utf7IMAPDecoder.prototype.write = function(buf) ","Utf7IMAPDecoder.prototype.end = function() "],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\lib\\bom-handling.js","LineCount":53,"CharCount":1056,"Comments":["//------------------------------------------------------------------------------","","exports.StripBOM = StripBOMWrapper;"],"Functions":["function PrependBOMWrapper(encoder, options) ","PrependBOMWrapper.prototype.write = function(str) ","PrependBOMWrapper.prototype.end = function() ","function StripBOMWrapper(decoder, options) ","StripBOMWrapper.prototype.write = function(buf) ","        if (typeof this.options.stripBOM === 'function')","StripBOMWrapper.prototype.end = function() "],"Dependencies":null},{"FileName":"node_modules\\iconv-lite\\lib\\extend-node.js","LineCount":215,"CharCount":8299,"Comments":["// == Extend Node primitives to use iconv-lite =================================","","module.exports = function (iconv) {","    var original = undefined; // Place to keep original methods.","","    // Node authors rewrote Buffer internals to make it compatible with","    // Uint8Array and we cannot patch key functions since then.","    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);","            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");","            return;","        // -- SlowBuffer -----------------------------------------------------------","        var SlowBuffer = require('buffer').SlowBuffer;","            // Use native conversion when possible","            if (Buffer.isNativeEncoding(encoding))","            // Otherwise, use our decoding method.","            if (typeof start == 'undefined') start = 0;","            // Support both (string, offset, length, encoding)","            // and the legacy (string, encoding, offset, length)","            if (isFinite(offset)) {","            } else {  // legacy","                var swap = encoding;","            // Use native conversion when possible","            if (Buffer.isNativeEncoding(encoding))","            // Otherwise, use our encoding method.","            var buf = iconv.encode(string, encoding);","        // -- Buffer ---------------------------------------------------------------","","        original.BufferIsEncoding = Buffer.isEncoding;","            // Use native conversion when possible","            if (Buffer.isNativeEncoding(encoding))","            // Slow, I know, but we don't have a better way yet.","            return iconv.encode(str, encoding).length;","            // Use native conversion when possible","            if (Buffer.isNativeEncoding(encoding))","            // Otherwise, use our decoding method.","            if (typeof start == 'undefined') start = 0;","            // Support both (string, offset, length, encoding)","            // and the legacy (string, encoding, offset, length)","            if (isFinite(offset)) {","            } else {  // legacy","                var swap = encoding;","            // Use native conversion when possible","            if (Buffer.isNativeEncoding(encoding))","            // Otherwise, use our encoding method.","            var buf = iconv.encode(string, encoding);","            // TODO: Set _charsWritten.","        }","        // -- Readable -------------------------------------------------------------","        if (iconv.supportsStreams) {","                // Use our own decoder, it has the same interface.","                // We cannot use original function as it doesn't handle BOM-s.","                this._readableState.decoder = iconv.getDecoder(enc, options);","    // Remove iconv-lite Node primitive extensions.","    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {"],"Functions":["module.exports = function (iconv) ","    // Uint8Array and we cannot patch key functions since then.","    iconv.extendNodeEncodings = function extendNodeEncodings() ","        Buffer.isNativeEncoding = function(enc) ","        SlowBuffer.prototype.toString = function(encoding, start, end) ","        SlowBuffer.prototype.write = function(string, offset, length, encoding) ","        Buffer.isEncoding = function(encoding) ","        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) ","        Buffer.prototype.toString = function(encoding, start, end) ","        Buffer.prototype.write = function(string, offset, length, encoding) ","            Readable.prototype.setEncoding = function setEncoding(enc, options) ","                // We cannot use original function as it doesn't handle BOM-s.","    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() "],"Dependencies":["buffer","stream","buffer","stream"]},{"FileName":"node_modules\\iconv-lite\\lib\\index.js","LineCount":142,"CharCount":4380,"Comments":["// All codecs and aliases are kept here, keyed by encoding name/alias.","// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.","iconv.encodings = null;","// Characters emitted in case of error.","iconv.defaultCharUnicode = '�';","// Public API.","iconv.encode = function encode(str, encoding, options) {","    str = \"\" + (str || \"\"); // Ensure string.","","    var encoder = iconv.getEncoder(encoding, options);","            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');","            iconv.skipDecodeWarning = true;","        buf = new Buffer(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.","    }","// Legacy aliases to convert functions","iconv.toEncoding = iconv.encode;","// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.","iconv._codecDataCache = {};","        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.","    ","    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.","    var enc = (''+encoding).toLowerCase().replace(/[^0-9a-z]|:\\d{4}$/g, \"\");","    // Traverse iconv.encodings to find actual codec.","    var codecOptions = {};","            case \"string\": // Direct alias to other encoding.","                enc = codecDef;","            case \"object\": // Alias with options. Can be layered.","                for (var key in codecDef)","            case \"function\": // Codec itself.","                if (!codecOptions.encodingName)","                // The codec function must load all tables and return object with .encoder and .decoder methods.","                // It'll be called only once (for each different options object).","                codec = new codecDef(codecOptions, iconv);","                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.","                return codec;","// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.","var nodeVer = typeof process !== 'undefined' \u0026\u0026 process.versions \u0026\u0026 process.versions.node;","    // Load streaming support in Node v0.10+","    var nodeVerArr = nodeVer.split(\".\").map(Number);","    // Load Node primitive extensions.","    require(\"./extend-node\")(iconv);"],"Functions":["iconv.encode = function encode(str, encoding, options) ","iconv.decode = function decode(buf, encoding, options) ","iconv.encodingExists = function encodingExists(enc) ","// Legacy aliases to convert functions","iconv.getCodec = function getCodec(encoding) ","            case \"function\": // Codec itself.","                // The codec function must load all tables and return object with .encoder and .decoder methods.","iconv.getEncoder = function getEncoder(encoding, options) ","iconv.getDecoder = function getDecoder(encoding, options) "],"Dependencies":["./bom-handling","../encodings"]},{"FileName":"node_modules\\iconv-lite\\lib\\streams.js","LineCount":121,"CharCount":3227,"Comments":["// == Exports ==================================================================","module.exports = function(iconv) {","    // Additional Public API.","    iconv.encodeStream = function encodeStream(encoding, options) {","    // Not published yet.","    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;","// == Encoder stream =======================================================","function IconvLiteEncoderStream(conv, options) {","    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.","    Transform.call(this, options);","// == Decoder stream =======================================================","function IconvLiteDecoderStream(conv, options) {","    options.encoding = this.encoding = 'utf8'; // We output strings.","    Transform.call(this, options);"],"Functions":["module.exports = function(iconv) ","    iconv.encodeStream = function encodeStream(encoding, options) ","    iconv.decodeStream = function decodeStream(encoding, options) ","function IconvLiteEncoderStream(conv, options) ","IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) ","IconvLiteEncoderStream.prototype._flush = function(done) ","IconvLiteEncoderStream.prototype.collect = function(cb) ","    this.on('data', function(chunk)  chunks.push(chunk); });","    this.on('end', function() ","function IconvLiteDecoderStream(conv, options) ","IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) ","IconvLiteDecoderStream.prototype._flush = function(done) ","IconvLiteDecoderStream.prototype.collect = function(cb) ","    this.on('data', function(chunk)  res += chunk; });","    this.on('end', function() "],"Dependencies":["stream"]},{"FileName":"node_modules\\indent-string\\cli.js","LineCount":49,"CharCount":860,"Comments":[],"Functions":["function help() ","function init(data) "],"Dependencies":["get-stdin","minimist","./package.json","./"]},{"FileName":"node_modules\\indent-string\\index.js","LineCount":21,"CharCount":465,"Comments":[],"Functions":["module.exports = function (str, indent, count) "],"Dependencies":["repeating"]},{"FileName":"node_modules\\inherits\\inherits.js","LineCount":2,"CharCount":41,"Comments":[],"Functions":null,"Dependencies":["util"]},{"FileName":"node_modules\\inherits\\inherits_browser.js","LineCount":24,"CharCount":649,"Comments":["  // implementation from standard node.js 'util' module","  module.exports = function inherits(ctor, superCtor) {","  // old school shim for old browsers","  module.exports = function inherits(ctor, superCtor) {"],"Functions":["if (typeof Object.create === 'function') ","  module.exports = function inherits(ctor, superCtor) ","  module.exports = function inherits(ctor, superCtor) ","    var TempCtor = function () }"],"Dependencies":null},{"FileName":"node_modules\\inherits\\test.js","LineCount":26,"CharCount":485,"Comments":[],"Functions":["function test(c) ","function Child() ","function Parent() }"],"Dependencies":["./inherits.js","assert"]},{"FileName":"node_modules\\ipaddr.js\\ipaddr.min.js","LineCount":1,"CharCount":7460,"Comments":[],"Functions":["(function()var r,t,n,e,i,o,a,s;t={},s=this,\"undefined\"!=typeof module\u0026\u0026null!==module\u0026\u0026module.exports?module.exports=t:s.ipaddr=t,a=function(r,t,n,e){var i,o;if(r.length!==t.length)throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");for(i=0;e\u003e0;){if(o=n-e,0\u003eo\u0026\u0026(o=0),r[i]\u003e\u003eo!==t[i]\u003e\u003eo)return!1;e-=n,i+=1}return!0},t.subnetMatch=function(r,t,n){var e,i,o,a,s;null==n\u0026\u0026(n=\"unicast\");for(e in t)for(i=t[e],!i[0]||i[0]instanceof Array||(i=[i]),a=0,s=i.length;s\u003ea;a++)if(o=i[a],r.match.apply(r,o))return e;return n},t.IPv4=function(){function r(r){var t,n,e;if(4!==r.length)throw new Error(\"ipaddr: ipv4 octet count should be 4\");for(n=0,e=r.length;e\u003en;n++)if(t=r[n],!(t\u003e=0\u0026\u0026255\u003e=t))throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");this.octets=r}return r.prototype.kind=function(){return\"ipv4\"},r.prototype.toString=function(){return this.octets.join(\".\")},r.prototype.toByteArray=function(){return this.octets.slice(0)},r.prototype.match=function(r,t){var n;if(void 0===t\u0026\u0026(n=r,r=n[0],t=n[1]),\"ipv4\"!==r.kind())throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");return a(this.octets,r.octets,8,t)},r.prototype.SpecialRanges={unspecified:[[new r([0,0,0,0]),8]],broadcast:[[new r([255,255,255,255]),32]],multicast:[[new r([224,0,0,0]),4]],linkLocal:[[new r([169,254,0,0]),16]],loopback:[[new r([127,0,0,0]),8]],\"private\":[[new r([10,0,0,0]),8],[new r([172,16,0,0]),12],[new r([192,168,0,0]),16]],reserved:[[new r([192,0,0,0]),24],[new r([192,0,2,0]),24],[new r([192,88,99,0]),24],[new r([198,51,100,0]),24],[new r([203,0,113,0]),24],[new r([240,0,0,0]),4]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.toIPv4MappedAddress=function(){return t.IPv6.parse(\"::ffff:\"+this.toString())},r.prototype.prefixLengthFromSubnetMask=function(){var r,t,n,e,i,o,a;for(o={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0},r=0,e=!1,t=a=3;a\u003e=0;t=a+=-1){if(n=this.octets[t],!(n in o))return null;if(i=o[n],e\u0026\u00260!==i)return null;8!==i\u0026\u0026(e=!0),r+=i}return 32-r},r}(),n=\"(0?\\\\d+|0x[a-f0-9]+)\",e={fourOctet:new RegExp(\"^\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"$\",\"i\"),longValue:new RegExp(\"^\"+n+\"$\",\"i\")},t.IPv4.parser=function(r){var t,n,i,o,a;if(n=function(r){return\"0\"===r[0]\u0026\u0026\"x\"!==r[1]?parseInt(r,8):parseInt(r)},t=r.match(e.fourOctet))return function(){var r,e,o,a;for(o=t.slice(1,6),a=[],r=0,e=o.length;e\u003er;r++)i=o[r],a.push(n(i));return a}();if(t=r.match(e.longValue)){if(a=n(t[1]),a\u003e4294967295||0\u003ea)throw new Error(\"ipaddr: address outside defined range\");return function(){var r,t;for(t=[],o=r=0;24\u003e=r;o=r+=8)t.push(a\u003e\u003eo\u0026255);return t}().reverse()}return null},t.IPv6=function(){function r(r){var t,n,e,i,o,a;if(16===r.length)for(this.parts=[],t=e=0;14\u003e=e;t=e+=2)this.parts.push(r[t]\u003c\u003c8|r[t+1]);else{if(8!==r.length)throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");this.parts=r}for(a=this.parts,i=0,o=a.length;o\u003ei;i++)if(n=a[i],!(n\u003e=0\u0026\u002665535\u003e=n))throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\")}return r.prototype.kind=function(){return\"ipv6\"},r.prototype.toString=function(){var r,t,n,e,i,o,a;for(i=function(){var r,n,e,i;for(e=this.parts,i=[],r=0,n=e.length;n\u003er;r++)t=e[r],i.push(t.toString(16));return i}.call(this),r=[],n=function(t){return r.push(t)},e=0,o=0,a=i.length;a\u003eo;o++)switch(t=i[o],e){case 0:n(\"0\"===t?\"\":t),e=1;break;case 1:\"0\"===t?e=2:n(t);break;case 2:\"0\"!==t\u0026\u0026(n(\"\"),n(t),e=3);break;case 3:n(t)}return 2===e\u0026\u0026(n(\"\"),n(\"\")),r.join(\":\")},r.prototype.toByteArray=function(){var r,t,n,e,i;for(r=[],i=this.parts,n=0,e=i.length;e\u003en;n++)t=i[n],r.push(t\u003e\u003e8),r.push(255\u0026t);return r},r.prototype.toNormalizedString=function(){var r;return function(){var t,n,e,i;for(e=this.parts,i=[],t=0,n=e.length;n\u003et;t++)r=e[t],i.push(r.toString(16));return i}.call(this).join(\":\")},r.prototype.match=function(r,t){var n;if(void 0===t\u0026\u0026(n=r,r=n[0],t=n[1]),\"ipv6\"!==r.kind())throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");return a(this.parts,r.parts,16,t)},r.prototype.SpecialRanges={unspecified:[new r([0,0,0,0,0,0,0,0]),128],linkLocal:[new r([65152,0,0,0,0,0,0,0]),10],multicast:[new r([65280,0,0,0,0,0,0,0]),8],loopback:[new r([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new r([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new r([0,0,0,0,0,65535,0,0]),96],rfc6145:[new r([0,0,0,0,65535,0,0,0]),96],rfc6052:[new r([100,65435,0,0,0,0,0,0]),96],\"6to4\":[new r([8194,0,0,0,0,0,0,0]),16],teredo:[new r([8193,0,0,0,0,0,0,0]),32],reserved:[[new r([8193,3512,0,0,0,0,0,0]),32]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.isIPv4MappedAddress=function(){return\"ipv4Mapped\"===this.range()},r.prototype.toIPv4Address=function(){var r,n,e;if(!this.isIPv4MappedAddress())throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");return e=this.parts.slice(-2),r=e[0],n=e[1],new t.IPv4([r\u003e\u003e8,255\u0026r,n\u003e\u003e8,255\u0026n])},r}(),i=\"(?:[0-9a-f]+::?)+\",o={\"native\":new RegExp(\"^(::)?(\"+i+\")?([0-9a-f]+)?(::)?$\",\"i\"),transitional:new RegExp(\"^((?:\"+i+\")|(?:::)(?:\"+i+\")?)\"+(\"\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"$\"),\"i\")},r=function(r,t){var n,e,i,o,a;if(r.indexOf(\"::\")!==r.lastIndexOf(\"::\"))return null;for(n=0,e=-1;(e=r.indexOf(\":\",e+1))\u003e=0;)n++;if(\"::\"===r.substr(0,2)\u0026\u0026n--,\"::\"===r.substr(-2,2)\u0026\u0026n--,n\u003et)return null;for(a=t-n,o=\":\";a--;)o+=\"0:\";return r=r.replace(\"::\",o),\":\"===r[0]\u0026\u0026(r=r.slice(1)),\":\"===r[r.length-1]\u0026\u0026(r=r.slice(0,-1)),function(){var t,n,e,o;for(e=r.split(\":\"),o=[],t=0,n=e.length;n\u003et;t++)i=e[t],o.push(parseInt(i,16));return o}()},t.IPv6.parser=function(t){var n,e,i,a,s,p;if(t.match(o[\"native\"]))return r(t,8);if((n=t.match(o.transitional))\u0026\u0026(a=r(n[1].slice(0,-1),6))){for(i=[parseInt(n[2]),parseInt(n[3]),parseInt(n[4]),parseInt(n[5])],s=0,p=i.length;p\u003es;s++)if(e=i[s],!(e\u003e=0\u0026\u0026255\u003e=e))return null;return a.push(i[0]\u003c\u003c8|i[1]),a.push(i[2]\u003c\u003c8|i[3]),a}return null},t.IPv4.isIPv4=t.IPv6.isIPv6=function(r){return null!==this.parser(r)},t.IPv4.isValid=function(r){var t;try{return new this(this.parser(r)),!0}catch(n){return t=n,!1}},t.IPv6.isValid=function(r){var t;if(\"string\"==typeof r\u0026\u0026-1===r.indexOf(\":\"))return!1;try{return new this(this.parser(r)),!0}catch(n){return t=n,!1}},t.IPv4.parse=t.IPv6.parse=function(r){var t;if(t=this.parser(r),null===t)throw new Error(\"ipaddr: string is not formatted like ip address\");return new this(t)},t.IPv4.parseCIDR=function(r){var t,n;if((n=r.match(/^(.+)\\/(\\d+)$/))\u0026\u0026(t=parseInt(n[2]),t\u003e=0\u0026\u002632\u003e=t))return[this.parse(n[1]),t];throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\")},t.IPv6.parseCIDR=function(r){var t,n;if((n=r.match(/^(.+)\\/(\\d+)$/))\u0026\u0026(t=parseInt(n[2]),t\u003e=0\u0026\u0026128\u003e=t))return[this.parse(n[1]),t];throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\")},t.isValid=function(r){return t.IPv6.isValid(r)||t.IPv4.isValid(r)},t.parse=function(r){if(t.IPv6.isValid(r))return t.IPv6.parse(r);if(t.IPv4.isValid(r))return t.IPv4.parse(r);throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\")},t.parseCIDR=function(r){var n;try{return t.IPv6.parseCIDR(r)}catch(e){n=e;try{return t.IPv4.parseCIDR(r)}catch(e){throw n=e,new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\")}}},t.fromByteArray=function(r){var n;if(n=r.length,4===n)return new t.IPv4(r);if(16===n)return new t.IPv6(r);throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\")},t.process=function(r){var t;return t=this.parse(r),\"ipv6\"===t.kind()\u0026\u0026t.isIPv4MappedAddress()?t.toIPv4Address():t}}).call(this);"],"Dependencies":null},{"FileName":"node_modules\\ipaddr.js\\lib\\ipaddr.js","LineCount":527,"CharCount":14594,"Comments":[],"Functions":["(function() ","  matchCIDR = function(first, second, partSize, cidrBits) ","  ipaddr.subnetMatch = function(address, rangeList, defaultName) ","  ipaddr.IPv4 = (function() ","    function IPv4(octets) ","    IPv4.prototype.kind = function() ","    IPv4.prototype.toString = function() ","    IPv4.prototype.toByteArray = function() ","    IPv4.prototype.match = function(other, cidrRange) ","    IPv4.prototype.range = function() ","    IPv4.prototype.toIPv4MappedAddress = function() ","    IPv4.prototype.prefixLengthFromSubnetMask = function() ","  ipaddr.IPv4.parser = function(string) ","    parseIntAuto = function(string) ","      return (function() ","      return ((function() ","  ipaddr.IPv6 = (function() ","    function IPv6(parts) ","    IPv6.prototype.kind = function() ","    IPv6.prototype.toString = function() ","      stringParts = (function() ","      pushPart = function(part) ","    IPv6.prototype.toByteArray = function() ","    IPv6.prototype.toNormalizedString = function() ","      return ((function() ","    IPv6.prototype.match = function(other, cidrRange) ","    IPv6.prototype.range = function() ","    IPv6.prototype.isIPv4MappedAddress = function() ","    IPv6.prototype.toIPv4Address = function() ","  expandIPv6 = function(string, parts) ","    return (function() ","  ipaddr.IPv6.parser = function(string) ","  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) ","  ipaddr.IPv4.isValid = function(string) ","  ipaddr.IPv6.isValid = function(string) ","  ipaddr.IPv4.parse = ipaddr.IPv6.parse = function(string) ","  ipaddr.IPv4.parseCIDR = function(string) ","  ipaddr.IPv6.parseCIDR = function(string) ","  ipaddr.isValid = function(string) ","  ipaddr.parse = function(string) ","  ipaddr.parseCIDR = function(string) ","  ipaddr.fromByteArray = function(bytes) ","  ipaddr.process = function(string) "],"Dependencies":null},{"FileName":"node_modules\\is-finite\\index.js","LineCount":7,"CharCount":206,"Comments":[],"Functions":["module.exports = Number.isFinite || function (val) "],"Dependencies":["number-is-nan"]},{"FileName":"node_modules\\isarray\\build\\build.js","LineCount":210,"CharCount":3880,"Comments":["/**"," * Require the given path."," *"," * @param {String} path"," * @return {Object} exports"," * @api public"," */","","function require(path, parent, orig) {","  // lookup failed","  if (null == resolved) {","  // perform real require()","  // by invoking the module's","  // registered function","  if (!module.exports) {","/**"," * Registered modules."," */","","require.modules = {};","/**"," * Registered aliases."," */","","require.aliases = {};","/**"," * Resolve `path`."," *"," * Lookup:"," *"," *   - PATH/index.js"," *   - PATH.js"," *   - PATH"," *"," * @param {String} path"," * @return {String} path or null"," * @api private"," */","","require.resolve = function(path) {","/**"," * Normalize `path` relative to the current path."," *"," * @param {String} curr"," * @param {String} path"," * @return {String}"," * @api private"," */","","require.normalize = function(curr, path) {","/**"," * Register module at `path` with callback `definition`."," *"," * @param {String} path"," * @param {Function} definition"," * @api private"," */","","require.register = function(path, definition) {","/**"," * Alias a module definition."," *"," * @param {String} from"," * @param {String} to"," * @api private"," */","","require.alias = function(from, to) {","/**"," * Return a require function relative to the `parent` path."," *"," * @param {String} parent"," * @return {Function}"," * @api private"," */","","require.relative = function(parent) {","  /**","   * lastIndexOf helper.","   */","","  function lastIndexOf(arr, obj) {","  /**","   * The relative require() itself.","   */","","  function localRequire(path) {","  /**","   * Resolve relative to the parent.","   */","","  localRequire.resolve = function(path) {","    // resolve deps by returning","    // the dep in the nearest \"deps\"","    // directory","    var segs = parent.split('/');","  /**","   * Check if module is defined at `path`.","   */","","  localRequire.exists = function(path) {"],"Functions":["function require(path, parent, orig) ","  // registered function","require.resolve = function(path) ","require.normalize = function(curr, path) ","require.register = function(path, definition) ","require.alias = function(from, to) "," * Return a require function relative to the `parent` path.","require.relative = function(parent) ","  function lastIndexOf(arr, obj) ","  function localRequire(path) ","  localRequire.resolve = function(path) ","  localRequire.exists = function(path) ","require.register(\"isarray/index.js\", function(exports, require, module)","module.exports = Array.isArray || function (arr) "],"Dependencies":null},{"FileName":"node_modules\\isarray\\index.js","LineCount":4,"CharCount":117,"Comments":[],"Functions":["module.exports = Array.isArray || function (arr) "],"Dependencies":null},{"FileName":"node_modules\\isemail\\index.js","LineCount":2,"CharCount":43,"Comments":[],"Functions":null,"Dependencies":["./lib/isemail"]},{"FileName":"node_modules\\isemail\\lib\\isemail.js","LineCount":1395,"CharCount":62848,"Comments":["/**\r"," * To validate an email address according to RFCs 5321, 5322 and others\r"," *\r"," * Copyright © 2008-2011, Dominic Sayers\r"," * Test schema documentation Copyright © 2011, Daniel Marschall\r"," * Port for Node.js Copyright © 2013-2014, GlobeSherpa\r"," *              and Copyright © 2014-2015, Eli Skeggs\r"," * All rights reserved.\r"," *\r"," * Redistribution and use in source and binary forms, with or without\r"," * modification, are permitted provided that the following conditions are met:\r"," *\r"," *   - Redistributions of source code must retain the above copyright notice,\r"," *     this list of conditions and the following disclaimer.\r"," *   - Redistributions in binary form must reproduce the above copyright notice,\r"," *     this list of conditions and the following disclaimer in the documentation\r"," *     and/or other materials provided with the distribution.\r"," *   - Neither the name of Dominic Sayers nor the names of its contributors may\r"," *     be used to endorse or promote products derived from this software without\r"," *     specific prior written permission.\r"," *\r"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r"," * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r"," * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r"," * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r"," * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r"," * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r"," * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r"," * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r"," * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r"," * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r"," * POSSIBILITY OF SUCH DAMAGE.\r"," *\r"," * @author      Dominic Sayers \u003cdominic@sayers.cc\u003e\r"," * @author      Eli Skeggs \u003cskeggse@gmail.com\u003e\r"," * @copyright   2008-2011 Dominic Sayers\r"," * @copyright   2013-2014 GlobeSherpa\r"," * @copyright   2014-2015 Eli Skeggs\r"," * @license     http://www.opensource.org/licenses/bsd-license.php BSD License\r"," * @link        http://www.dominicsayers.com/isemail\r"," * @link        https://github.com/hapijs/isemail\r"," * @version     1.2.0 Drop Node 0.8, fix style, switch to lab/code\r"," */\r","\r","        // Address is valid\r","        valid: 0,\r","        // Address is valid, but the DNS check failed\r","        dnsWarnNoMXRecord: 5,\r","        // Address is valid for SMTP but has unusual elements\r","        rfc5321TLD: 9,\r","        // Address is valid for message, but must be modified for envelope\r","        cfwsComment: 17,\r","        // Address contains deprecated elements, but may still be valid in some contexts\r","        deprecatedLocalPart: 33,\r","        // Address is only valid according to broad definition in RFC 5322, but is otherwise invalid\r","        rfc5322Domain: 65,\r","        // Address is invalid for any purpose\r","        errExpectingDTEXT: 129,\r","// $lab:coverage:off$\r","internals.defer = typeof process !== 'undefined' \u0026\u0026 process \u0026\u0026 typeof process.nextTick === 'function' ?\r","// $lab:coverage:on$\r","\r","// US-ASCII visible characters not valid for atext\r","// (http://tools.ietf.org/html/rfc5322#section-3.2.3)\r","var SPECIALS = '()\u003c\u003e[]:;@\\\\,.\"';\r","// A silly little optimized function generator\r","var optimizeLookup = function optimizeLookup (string) {\r","// This matches valid IPv4 addresses from the end of a string\r","var IPv4_REGEX =\r","/**\r"," * Check that an email address conforms to RFCs 5321, 5322 and others\r"," *\r"," * We distinguish clearly between a Mailbox as defined by RFC 5321 and an\r"," * addr-spec as defined by RFC 5322. Depending on the context, either can be\r"," * regarded as a valid email address. The RFC 5321 Mailbox specification is\r"," * more restrictive (comments, white space and obsolete forms are not allowed).\r"," *\r"," * @param {string} email The email address to check.\r"," * @param {Object} options The (optional) options:\r"," *   {boolean} checkDNS If true then will check DNS for MX records. If\r"," *     true this call to isEmail _will_ be asynchronous.\r"," *   {*} errorLevel Determines the boundary between valid and invalid\r"," *     addresses. Status codes above this number will be returned as-is, status\r"," *     codes below will be returned as valid. Thus the calling program can\r"," *     simply look for diagnoses.valid if it is only interested in whether an\r"," *     address is valid or not. The errorLevel will determine how \"picky\"\r"," *     isEmail() is about the address. If omitted or passed as false then\r"," *     isEmail() will return true or false rather than an integer error or\r"," *     warning. NB Note the difference between errorLevel = false and\r"," *     errorLevel = 0.\r"," * @param {function(number|boolean)} callback The (optional) callback handler.\r"," * @return {*}\r"," */\r","var isEmail = function isEmail (email, options, callback) {\r","        // Token is used outside the loop, must declare similarly\r","        token = email[i];\r","            // Local-part\r","            case internals.components.localpart:\r","                // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                //   local-part      =   dot-atom / quoted-string / obs-local-part\r","                //\r","                //   dot-atom        =   [CFWS] dot-atom-text [CFWS]\r","                //\r","                //   dot-atom-text   =   1*atext *(\".\" 1*atext)\r","                //\r","                //   quoted-string   =   [CFWS]\r","                //                       DQUOTE *([FWS] qcontent) [FWS] DQUOTE\r","                //                       [CFWS]\r","                //\r","                //   obs-local-part  =   word *(\".\" word)\r","                //\r","                //   word            =   atom / quoted-string\r","                //\r","                //   atom            =   [CFWS] 1*atext [CFWS]\r","                switch (token) {\r","                    // Comment\r","                    case '(':\r","                            // Comments are OK at the beginning of an element\r","                            updateResult(elementCount === 0 ? internals.diagnoses.cfwsComment : internals.diagnoses.deprecatedComment);\r","                             // Cannot start a comment in an element, should be end\r","                            assertEnd = true;\r","                    // Next dot-atom element\r","                    case '.':\r","                            // Another dot, already?\r","                            updateResult(elementCount === 0 ? internals.diagnoses.errDotStart : internals.diagnoses.errConsecutiveDots);\r","                            // The entire local-part can be a quoted string for RFC 5321; if one atom is quoted it's an RFC 5322 obsolete form\r","                            if (assertEnd) {\r","                            // CFWS \u0026 quoted strings are OK again now we're at the beginning of an element (although they are obsolete forms)\r","                            assertEnd = false;\r","                    // Quoted string\r","                    case '\"':\r","                            // The entire local-part can be a quoted string for RFC 5321; if one atom is quoted it's an RFC 5322 obsolete form\r","                            updateResult(elementCount === 0 ? internals.diagnoses.rfc5321QuotedString : internals.diagnoses.deprecatedLocalPart);\r","                            // Quoted string must be the entire element\r","                            assertEnd = true;\r","                    // Folding white space\r","                    case '\\r':\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errCRNoLF);\r","                        // Fallthrough\r","\r","                            // We can't start FWS in the middle of an element, better be end\r","                            assertEnd = true;\r","                        // At this point we should have a valid local-part\r","                        // $lab:coverage:off$\r","                        if (context.stack.length !== 1) {\r","                        // $lab:coverage:on$\r","\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errNoLocalPart);\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errDotEnd);\r","                        // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.1 the maximum total length of a user name or other local-part is 64\r","                        //    octets\r","                        else if (parseData.local.length \u003e 64) {\r","                        // http://tools.ietf.org/html/rfc5322#section-3.4.1 comments and folding white space SHOULD NOT be used around \"@\" in the\r","                        //    addr-spec\r","                        //\r","                        // http://tools.ietf.org/html/rfc2119\r","                        // 4. SHOULD NOT this phrase, or the phrase \"NOT RECOMMENDED\" mean that there may exist valid reasons in particular\r","                        //    circumstances when the particular behavior is acceptable or even useful, but the full implications should be understood\r","                        //    and the case carefully weighed before implementing any behavior described with this label.\r","                        else if (context.prev === internals.components.contextComment || context.prev === internals.components.contextFWS) {\r","                        // Clear everything down for the domain parsing\r","                        context.now = internals.components.domain;\r","                        assertEnd = false; // CFWS can only appear at the end of the element\r","                        break;\r","                    // ATEXT\r","                    default:\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\r","                        //    atext = ALPHA / DIGIT / ; Printable US-ASCII\r","                        //            \"!\" / \"#\" /     ;  characters not including\r","                        //            \"$\" / \"%\" /     ;  specials.  Used for atoms.\r","                        //            \"\u0026\" / \"'\" /\r","                        //            \"*\" / \"+\" /\r","                        //            \"-\" / \"/\" /\r","                        //            \"=\" / \"?\" /\r","                        //            \"^\" / \"_\" /\r","                        //            \"`\" / \"{\" /\r","                        //            \"|\" / \"}\" /\r","                        //            \"~\"\r","                        if (assertEnd) {\r","                            // We have encountered atext where it is no longer valid\r","                            switch (context.prev) {\r","                                // $lab:coverage:off$\r","                                default:\r","                                // $lab:coverage:on$\r","                            }\r","                            // Especially if charCode == 10\r","                            if (charCode \u003c 33 || charCode \u003e 126 || specialsLookup(charCode)) {\r","                                // Fatal error\r","                                updateResult(internals.diagnoses.errExpectingATEXT);\r","                // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                //   domain          =   dot-atom / domain-literal / obs-domain\r","                //\r","                //   dot-atom        =   [CFWS] dot-atom-text [CFWS]\r","                //\r","                //   dot-atom-text   =   1*atext *(\".\" 1*atext)\r","                //\r","                //   domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\r","                //\r","                //   dtext           =   %d33-90 /          ; Printable US-ASCII\r","                //                       %d94-126 /         ;  characters not including\r","                //                       obs-dtext          ;  \"[\", \"]\", or \"\\\"\r","                //\r","                //   obs-domain      =   atom *(\".\" atom)\r","                //\r","                //   atom            =   [CFWS] 1*atext [CFWS]\r","\r","                // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","                //   Mailbox        = Local-part \"@\" ( Domain / address-literal )\r","                //\r","                //   Domain         = sub-domain *(\".\" sub-domain)\r","                //\r","                //   address-literal  = \"[\" ( IPv4-address-literal /\r","                //                    IPv6-address-literal /\r","                //                    General-address-literal ) \"]\"\r","                //                    ; See Section 4.1.3\r","\r","                // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                //      Note: A liberal syntax for the domain portion of addr-spec is\r","                //      given here.  However, the domain portion contains addressing\r","                //      information specified by and used in other protocols (e.g.,\r","                //      [RFC1034], [RFC1035], [RFC1123], [RFC5321]).  It is therefore\r","                //      incumbent upon implementations to conform to the syntax of\r","                //      addresses for the context in which they are used.\r","                //\r","                // is_email() author's note: it's not clear how to interpret this in\r","                // he context of a general email address validator. The conclusion I\r","                // have reached is this: \"addressing information\" must comply with\r","                // RFC 5321 (and in turn RFC 1035), anything that is \"semantically\r","                // invisible\" must comply only with RFC 5322.\r","                switch (token) {\r","                    // Comment\r","                    case '(':\r","                            // Comments at the start of the domain are deprecated in the text, comments at the start of a subdomain are obs-domain\r","                            // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                            updateResult(elementCount === 0 ? internals.diagnoses.deprecatedCFWSNearAt : internals.diagnoses.deprecatedComment);\r","                            // We can't start a comment mid-element, better be at the end\r","                            assertEnd = true;\r","                    // Next dot-atom element\r","                    case '.':\r","                            // Another dot, already? Fatal error.\r","                            updateResult(elementCount === 0 ? internals.diagnoses.errDotStart : internals.diagnoses.errConsecutiveDots);\r","                            // Previous subdomain ended in a hyphen. Fatal error.\r","                            updateResult(internals.diagnoses.errDomainHyphenEnd);\r","                            // Nowhere in RFC 5321 does it say explicitly that the domain part of a Mailbox must be a valid domain according to the\r","                            // DNS standards set out in RFC 1035, but this *is* implied in several places. For instance, wherever the idea of host\r","                            // routing is discussed the RFC says that the domain must be looked up in the DNS. This would be nonsense unless the\r","                            // domain was designed to be a valid DNS domain. Hence we must conclude that the RFC 1035 restriction on label length\r","                            // also applies to RFC 5321 domains.\r","                            //\r","                            // http://tools.ietf.org/html/rfc1035#section-2.3.4\r","                            // labels          63 octets or less\r","\r","                        // CFWS is OK again now we're at the beginning of an element (although\r","                        // it may be obsolete CFWS)\r","                        assertEnd = false;\r","                    // Domain literal\r","                    case '[':\r","                            // Domain literal must be the only component\r","                            assertEnd = true;\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errExpectingATEXT);\r","                    // Folding white space\r","                    case '\\r':\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errCRNoLF);\r","                        // Fallthrough\r","\r","                            // We can't start FWS in the middle of an element, so this better be the end\r","                            updateResult(internals.diagnoses.cfwsFWS);\r","                    // This must be ATEXT\r","                    default:\r","                        // RFC 5322 allows any atext...\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\r","                        //    atext = ALPHA / DIGIT / ; Printable US-ASCII\r","                        //            \"!\" / \"#\" /     ;  characters not including\r","                        //            \"$\" / \"%\" /     ;  specials.  Used for atoms.\r","                        //            \"\u0026\" / \"'\" /\r","                        //            \"*\" / \"+\" /\r","                        //            \"-\" / \"/\" /\r","                        //            \"=\" / \"?\" /\r","                        //            \"^\" / \"_\" /\r","                        //            \"`\" / \"{\" /\r","                        //            \"|\" / \"}\" /\r","                        //            \"~\"\r","\r","                        // But RFC 5321 only allows letter-digit-hyphen to comply with DNS rules\r","                        //   (RFCs 1034 \u0026 1123)\r","                        // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","                        //   sub-domain     = Let-dig [Ldh-str]\r","                        //\r","                        //   Let-dig        = ALPHA / DIGIT\r","                        //\r","                        //   Ldh-str        = *( ALPHA / DIGIT / \"-\" ) Let-dig\r","                        //\r","                        if (assertEnd) {\r","                            // We have encountered ATEXT where it is no longer valid\r","                            switch (context.prev) {\r","                                // $lab:coverage:off$\r","                                default:\r","                                // $lab:coverage:on$\r","                            }\r","                        // Assume this token isn't a hyphen unless we discover it is\r","                        hyphenFlag = false;\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errExpectingATEXT);\r","                                // Hyphens cannot be at the beginning of a subdomain, fatal error\r","                                updateResult(internals.diagnoses.errDomainHyphenStart);\r","                        // Check if it's a neither a number nor a latin letter\r","                        else if (charCode \u003c 48 || charCode \u003e 122 || (charCode \u003e 57 \u0026\u0026 charCode \u003c 65) || (charCode \u003e 90 \u0026\u0026 charCode \u003c 97)) {\r","                            // This is not an RFC 5321 subdomain, but still OK by RFC 5322\r","                            updateResult(internals.diagnoses.rfc5322Domain);\r","            // Domain literal\r","            case internals.components.literal:\r","                // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                //   domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\r","                //\r","                //   dtext           =   %d33-90 /          ; Printable US-ASCII\r","                //                       %d94-126 /         ;  characters not including\r","                //                       obs-dtext          ;  \"[\", \"]\", or \"\\\"\r","                //\r","                //   obs-dtext       =   obs-NO-WS-CTL / quoted-pair\r","                switch (token) {\r","                    // End of domain literal\r","                    case ']':\r","                            // Could be a valid RFC 5321 address literal, so let's check\r","\r","                            // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","                            //   address-literal  = \"[\" ( IPv4-address-literal /\r","                            //                    IPv6-address-literal /\r","                            //                    General-address-literal ) \"]\"\r","                            //                    ; See Section 4.1.3\r","                            //\r","                            // http://tools.ietf.org/html/rfc5321#section-4.1.3\r","                            //   IPv4-address-literal  = Snum 3(\".\"  Snum)\r","                            //\r","                            //   IPv6-address-literal  = \"IPv6:\" IPv6-addr\r","                            //\r","                            //   General-address-literal  = Standardized-tag \":\" 1*dcontent\r","                            //\r","                            //   Standardized-tag  = Ldh-str\r","                            //                     ; Standardized-tag MUST be specified in a\r","                            //                     ; Standards-Track RFC and registered with IANA\r","                            //\r","                            //   dcontent      = %d33-90 / ; Printable US-ASCII\r","                            //                 %d94-126 ; excl. \"[\", \"\\\", \"]\"\r","                            //\r","                            //   Snum          = 1*3DIGIT\r","                            //                 ; representing a decimal integer\r","                            //                 ; value in the range 0 through 255\r","                            //\r","                            //   IPv6-addr     = IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp\r","                            //\r","                            //   IPv6-hex      = 1*4HEXDIG\r","                            //\r","                            //   IPv6-full     = IPv6-hex 7(\":\" IPv6-hex)\r","                            //\r","                            //   IPv6-comp     = [IPv6-hex *5(\":\" IPv6-hex)] \"::\"\r","                            //                 [IPv6-hex *5(\":\" IPv6-hex)]\r","                            //                 ; The \"::\" represents at least 2 16-bit groups of\r","                            //                 ; zeros.  No more than 6 groups in addition to the\r","                            //                 ; \"::\" may be present.\r","                            //\r","                            //   IPv6v4-full   = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\r","                            //\r","                            //   IPv6v4-comp   = [IPv6-hex *3(\":\" IPv6-hex)] \"::\"\r","                            //                 [IPv6-hex *3(\":\" IPv6-hex) \":\"]\r","                            //                 IPv4-address-literal\r","                            //                 ; The \"::\" represents at least 2 16-bit groups of\r","                            //                 ; zeros.  No more than 4 groups in addition to the\r","                            //                 ; \"::\" and IPv4-address-literal may be present.\r","\r","                            // Maybe extract IPv4 part from the end of the address-literal\r","                            if (matchesIP) {\r","                                    // Convert IPv4 part to IPv6 format for futher testing\r","                                    addressLiteral = addressLiteral.slice(0, index) + '0:0';\r","                                // Nothing there except a valid IPv4 address, so...\r","                                updateResult(internals.diagnoses.rfc5321AddressLiteral);\r","                                    // Need exactly the right number of groups\r","                                    if (groups.length !== maxGroups) {\r","                                        // RFC 4291 allows :: at the start or end of an address with 7 other groups in addition\r","                                        ++maxGroups;\r","                                        // Eliding a single \"::\"\r","                                        updateResult(internals.diagnoses.deprecatedIPv6);\r","                                // IPv6 testing strategy\r","                                if (match[0] === ':' \u0026\u0026 match[1] !== ':') {\r","                    // Folding white space\r","                    case '\\r':\r","                        // Fallthrough\r","\r","                    // DTEXT\r","                    default:\r","                        // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                        //   dtext         =   %d33-90 /  ; Printable US-ASCII\r","                        //                     %d94-126 / ;  characters not including\r","                        //                     obs-dtext  ;  \"[\", \"]\", or \"\\\"\r","                        //\r","                        //   obs-dtext     =   obs-NO-WS-CTL / quoted-pair\r","                        //\r","                        //   obs-NO-WS-CTL =   %d1-8 /    ; US-ASCII control\r","                        //                     %d11 /     ;  characters that do not\r","                        //                     %d12 /     ;  include the carriage\r","                        //                     %d14-31 /  ;  return, line feed, and\r","                        //                     %d127      ;  white space characters\r","                        charCode = token.charCodeAt(0);\r","                        // '\\r', '\\n', ' ', and '\\t' have already been parsed above\r","                        if (charCode \u003e 127 || charCode === 0 || token === '[') {\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errExpectingDTEXT);\r","            // Quoted string\r","            case internals.components.contextQuotedString:\r","                // http://tools.ietf.org/html/rfc5322#section-3.2.4\r","                //   quoted-string = [CFWS]\r","                //                   DQUOTE *([FWS] qcontent) [FWS] DQUOTE\r","                //                   [CFWS]\r","                //\r","                //   qcontent      = qtext / quoted-pair\r","                switch (token) {\r","                    // Quoted pair\r","                    case '\\\\':\r","                    // Folding white space. Spaces are allowed as regular characters inside a quoted string - it's only FWS if we include '\\t' or '\\r\\n'\r","                    case '\\r':\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errCRNoLF);\r","                        // Fallthrough\r","\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.2\r","                        //   Runs of FWS, comment, or CFWS that occur between lexical tokens in\r","                        //   a structured header field are semantically interpreted as a single\r","                        //   space character.\r","\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.4\r","                        //   the CRLF in any FWS/CFWS that appears within the quoted-string [is]\r","                        //   semantically \"invisible\" and therefore not part of the\r","                        //   quoted-string\r","\r","                    // End of quoted string\r","                    case '\"':\r","                    // QTEXT\r","                    default:\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.4\r","                        //   qtext          =   %d33 /             ; Printable US-ASCII\r","                        //                      %d35-91 /          ;  characters not including\r","                        //                      %d93-126 /         ;  \"\\\" or the quote character\r","                        //                      obs-qtext\r","                        //\r","                        //   obs-qtext      =   obs-NO-WS-CTL\r","                        //\r","                        //   obs-NO-WS-CTL  =   %d1-8 /            ; US-ASCII control\r","                        //                      %d11 /             ;  characters that do not\r","                        //                      %d12 /             ;  include the carriage\r","                        //                      %d14-31 /          ;  return, line feed, and\r","                        //                      %d127              ;  white space characters\r","                        charCode = token.charCodeAt(0);\r","                // http://tools.ietf.org/html/rfc5322#section-3.4.1\r","                //   If the string can be represented as a dot-atom (that is, it contains\r","                //   no characters other than atext characters or \".\" surrounded by atext\r","                //   characters), then the dot-atom form SHOULD be used and the quoted-\r","                //   string form SHOULD NOT be used.\r","\r","            // Quoted pair\r","            case internals.components.contextQuotedPair:\r","                // http://tools.ietf.org/html/rfc5322#section-3.2.1\r","                //   quoted-pair     =   (\"\\\" (VCHAR / WSP)) / obs-qp\r","                //\r","                //   VCHAR           =  %d33-126   ; visible (printing) characters\r","                //   WSP             =  SP / HTAB  ; white space\r","                //\r","                //   obs-qp          =   \"\\\" (%d0 / obs-NO-WS-CTL / LF / CR)\r","                //\r","                //   obs-NO-WS-CTL   =   %d1-8 /   ; US-ASCII control\r","                //                       %d11 /    ;  characters that do not\r","                //                       %d12 /    ;  include the carriage\r","                //                       %d14-31 / ;  return, line feed, and\r","                //                       %d127     ;  white space characters\r","                //\r","                // i.e. obs-qp       =  \"\\\" (%d0-8, %d10-31 / %d127)\r","                charCode = token.charCodeAt(0);\r","                    // Fatal error\r","                    updateResult(internals.diagnoses.errExpectingQPair);\r","                    // ' ' and '\\t' are allowed\r","                    updateResult(internals.diagnoses.deprecatedQP);\r","                // At this point we know where this qpair occurred so we could check to see if the character actually needed to be quoted at all.\r","                // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","                //   the sending system SHOULD transmit the form that uses the minimum quoting possible.\r","\r","                // End of qpair\r","                context.now = context.stack.pop();\r","                        // The maximum sizes specified by RFC 5321 are octet counts, so we must include the backslash\r","                        elementLength += 2;\r","                        // The maximum sizes specified by RFC 5321 are octet counts, so we must include the backslash\r","                        elementLength += 2;\r","                    // $lab:coverage:off$\r","                    default:\r","                    // $lab:coverage:on$\r","                }\r","            // Comment\r","            case internals.components.contextComment:\r","                // http://tools.ietf.org/html/rfc5322#section-3.2.2\r","                //   comment  = \"(\" *([FWS] ccontent) [FWS] \")\"\r","                //\r","                //   ccontent = ctext / quoted-pair / comment\r","                switch (token) {\r","                    // Nested comment\r","                    case '(':\r","                        // Nested comments are ok\r","                        context.stack.push(context.now);\r","                    // End of comment\r","                    case ')':\r","                    // Quoted pair\r","                    case '\\\\':\r","                    // Folding white space\r","                    case '\\r':\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errCRNoLF);\r","                        // Fallthrough\r","\r","                    // CTEXT\r","                    default:\r","                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\r","                        //   ctext         = %d33-39 /  ; Printable US-ASCII\r","                        //                   %d42-91 /  ;  characters not including\r","                        //                   %d93-126 / ;  \"(\", \")\", or \"\\\"\r","                        //                   obs-ctext\r","                        //\r","                        //   obs-ctext     = obs-NO-WS-CTL\r","                        //\r","                        //   obs-NO-WS-CTL = %d1-8 /    ; US-ASCII control\r","                        //                   %d11 /     ;  characters that do not\r","                        //                   %d12 /     ;  include the carriage\r","                        //                   %d14-31 /  ;  return, line feed, and\r","                        //                   %d127      ;  white space characters\r","                        charCode = token.charCodeAt(0);\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errExpectingCTEXT);\r","            // Folding white space\r","            case internals.components.contextFWS:\r","                // http://tools.ietf.org/html/rfc5322#section-3.2.2\r","                //   FWS     =   ([*WSP CRLF] 1*WSP) /  obs-FWS\r","                //                                   ; Folding white space\r","\r","                // But note the erratum:\r","                // http://www.rfc-editor.org/errata_search.php?rfc=5322\u0026eid=1908:\r","                //   In the obsolete syntax, any amount of folding white space MAY be\r","                //   inserted where the obs-FWS rule is allowed.  This creates the\r","                //   possibility of having two consecutive \"folds\" in a line, and\r","                //   therefore the possibility that a line which makes up a folded header\r","                //   field could be composed entirely of white space.\r","                //\r","                //   obs-FWS =   1*([CRLF] WSP)\r","\r","                        // Fatal error\r","                        updateResult(internals.diagnoses.errFWSCRLFx2);\r","                        // Multiple folds =\u003e obsolete FWS\r","                        updateResult(internals.diagnoses.deprecatedFWS);\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errCRNoLF);\r","                            // Fatal error\r","                            updateResult(internals.diagnoses.errFWSCRLFEnd);\r","                        // End of FWS\r","                        context.prev = context.now;\r","                        // Look at this token again in the parent context\r","                        --i;\r","            // Unexpected context\r","            // $lab:coverage:off$\r","            default:\r","            // $lab:coverage:on$\r","        } // Primary state machine\r","\r","            // Fatal error, no point continuing\r","            break;\r","    } // Token loop\r","\r","    // Check for errors\r","    if (maxResult \u003c internals.categories.rfc5322) {\r","        // Fatal errors\r","        if (context.now === internals.components.contextQuotedString) {\r","        // Other errors\r","        else if (parseData.domain.length \u003e 255) {\r","            // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.2\r","            //   The maximum total length of a domain name or number is 255 octets.\r","            updateResult(internals.diagnoses.rfc5322DomainTooLong);\r","        else if (parseData.local.length + parseData.domain.length + /* '@' */ 1 \u003e 254) {\r","            // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","            // http://tools.ietf.org/html/rfc5321#section-4.1.2\r","            //   Forward-path   = Path\r","            //\r","            //   Path           = \"\u003c\" [ A-d-l \":\" ] Mailbox \"\u003e\"\r","            //\r","            // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.3\r","            //   The maximum total length of a reverse-path or forward-path is 256 octets (including the punctuation and element separators).\r","            //\r","            // Thus, even without (obsolete) routing information, the Mailbox can only be 254 characters long. This is confirmed by this verified\r","            // erratum to RFC 3696:\r","            //\r","            // http://www.rfc-editor.org/errata_search.php?rfc=3696\u0026eid=1690\r","            //   However, there is a restriction in RFC 2821 on the length of an address in MAIL and RCPT commands of 254 characters.  Since\r","            //   addresses that do not fit in those fields are not normally useful, the upper limit on address lengths should normally be considered\r","            //   to be 254.\r","            updateResult(internals.diagnoses.rfc5322TooLong);\r","            // http://tools.ietf.org/html/rfc1035#section-2.3.4\r","            // labels   63 octets or less\r","            updateResult(internals.diagnoses.rfc5322LabelTooLong);\r","    } // Check for errors\r","\r","            // Per RFC 5321, domain atoms are limited to letter-digit-hyphen, so we only need to check code \u003c= 57 to check for a digit\r","            var code = atomData.domains[elementCount].charCodeAt(0);\r","    }; // Finish\r","\r","        // http://tools.ietf.org/html/rfc5321#section-2.3.5\r","        //   Names that can be resolved to MX RRs or address (i.e., A or AAAA) RRs (as discussed in Section 5) are permitted, as are CNAME RRs whose\r","        //   targets can be resolved, in turn, to MX or address RRs.\r","        //\r","        // http://tools.ietf.org/html/rfc5321#section-5.1\r","        //   The lookup first attempts to locate an MX record associated with the name.  If a CNAME record is found, the resulting name is processed\r","        //   as if it were the initial name. ... If an empty list of MXs is returned, the address is treated as if it was associated with an implicit\r","        //   MX RR, with a preference of 0, pointing to that host.\r","        //\r","        // isEmail() author's note: We will regard the existence of a CNAME to be sufficient evidence of the domain's existence. For performance\r","        // reasons we will not repeat the DNS lookup for the CNAME's target, but we will raise a warning because we didn't immediately find an MX\r","        // record.\r","        if (elementCount === 0) {\r","            // Checking TLD DNS only works if you explicitly check from the root\r","            parseData.domain += '.';\r","            // If we have a fatal error, then we must assume that there are no records\r","            if (err \u0026\u0026 err.code !== Dns.NODATA) {\r","                    // No usable records for the domain can be found\r","                    updateResult(internals.diagnoses.dnsWarnNoRecord);\r","    } // CheckDNS\r","};\r"],"Functions":["internals.defer = typeof process !== 'undefined' \u0026\u0026 process \u0026\u0026 typeof process.nextTick === 'function' ?\r","    function (callback) \r","// A silly little optimized function generator\r","var optimizeLookup = function optimizeLookup (string) \r","    var body = 'return function (code) \\n';\r"," * @param function(number|boolean)} callback The (optional) callback handler.\r","var isEmail = function isEmail (email, options, callback) \r","    if (typeof options === 'function') \r","    if (typeof callback !== 'function') \r","            throw new TypeError('expected callback function for checkDNS option');\r","    var updateResult = function updateResult (value) \r","    var finish = function finish () \r","        Dns.resolveMx(dnsDomain, function resolveDNS (err, mxRecords) \r","            var handleRecords = function handleRecords (err, records) \r","isEmail.diagnoses = (function exportDiagnoses () \r"],"Dependencies":["dns"]},{"FileName":"node_modules\\isemail\\test\\isemail.js","LineCount":176,"CharCount":4184,"Comments":["// Test shortcuts\r","var isEmail = IsEmail;\r","// Diagnoses\r","var diag = isEmail.diagnoses;\r","// Expectations\r","var expectations = Tests.map(function mapper (value) {\r","// Null characters aren't supported in JSON\r","expectations.push(['test@[\\0', diag.errExpectingDTEXT]);\r"],"Functions":["var expectations = Tests.map(function mapper (value) \r","describe('isEmail', function () \r","    it('should check options.tldWhitelist', function (done) \r","        expect(function () \r","    it('should check options.minDomainAtoms', function (done) \r","        expect(function () \r","        expect(function () \r","    it('should use options.errorLevel', function (done) \r","    it('should ensure callback provided with checkDNS', function (done) \r","        expect(function () \r","    it('should handle omitted options', function (done) \r","    it('should handle omitted options with callback', function (done) \r","        isEmail(expectations[0][0], function (res) \r","    expectations.forEach(function (obj, i) \r","        it('should handle test ' + (i + 1), function (done) \r","            }, function (res) \r","    tldExpectations.forEach(function (obj, i) \r","        it('should handle tld test ' + (i + 1), function (done) \r","    it('should handle domain atom test 1', function (done) \r","    it('should handle domain atom test 2', function (done) \r"],"Dependencies":["lab","code","..","./tests.json"]},{"FileName":"node_modules\\joi\\examples\\conditionalRequire.js","LineCount":44,"CharCount":2000,"Comments":["// This is an example of a survey to obtain the reputation of Parisians","// It contains examples of how to conditionally require keys based on values of other keys","","var Joi = require('../');","// This is a valid value for integer rating 1 - 5","var intRating = Joi.number().integer().min(1).max(5);","    // Do you know any French people? yes or no (required)","    q1: Joi.boolean().required(),","    // Do you know any Parisians? yes or no (required if answered yes in q1)","    q2: Joi.boolean()","    // How many french in paris do you know? 1-6, 6-10, 11-50 or 50+ (required if answered yes in q2)","    q3: Joi.string()","    // Rate 20% of most friendly Parisians, from how many people you know answered in q3, individually on 1-5 rating","    q4: Joi.array()","    // Rate remaining 80% of Parisians, from how many people you know answered in q3, individually on 1-5 rating","    q5: Joi.array()","    // Rate the reputation of Parisians in general, 1-5 rating","    q6: intRating.required()"],"Functions":null,"Dependencies":["../"]},{"FileName":"node_modules\\joi\\examples\\customMessage.js","LineCount":23,"CharCount":754,"Comments":[],"Functions":null,"Dependencies":["../"]},{"FileName":"node_modules\\joi\\examples\\multipleWhen.js","LineCount":18,"CharCount":619,"Comments":["Joi.assert({ type: 'video', subtype: 'mp4' }, schema); // Pass","Joi.assert({ type: 'video', subtype: 'wav' }, schema); // Pass","Joi.assert({ type: 'other', subtype: 'something' }, schema); // Fail","Joi.assert({ type: 'audio', subtype: 'mp4' }, schema); // Fail",""],"Functions":null,"Dependencies":["../"]},{"FileName":"node_modules\\joi\\generate-readme-toc.js","LineCount":22,"CharCount":558,"Comments":[],"Functions":["    slugify: function (text) "],"Dependencies":["markdown-toc","fs","./package.json"]},{"FileName":"node_modules\\joi\\lib\\alternatives.js","LineCount":153,"CharCount":3899,"Comments":["// Load modules","","var Hoek = require('hoek');","// Declare internals","","var internals = {};","        if (!result.errors) {     // Found a valid match","            return result;","internals.Alternatives.prototype.try = function (/* schemas */) {","","","    var schemas = Hoek.flatten(Array.prototype.slice.call(arguments));","        // Only apply required if this wasn't already a schema, we'll suppose people know what they're doing","        is = is.required();","            // try()","","            alternatives.push(item.schema.describe());","            // when()","","            var when = {"],"Functions":["internals.Alternatives = function () ","internals.Alternatives.prototype._base = function (value, state, options) ","internals.Alternatives.prototype.try = function (/* schemas */) ","internals.Alternatives.prototype.when = function (ref, options) ","internals.Alternatives.prototype.describe = function () "],"Dependencies":["hoek","./any","./cast","./ref","./errors"]},{"FileName":"node_modules\\joi\\lib\\any.js","LineCount":900,"CharCount":23035,"Comments":["// Load modules","","var Hoek = require('hoek');","var Alternatives = null;                // Delay-loaded to prevent circular dependencies","var Cast = null;","// Declare internals","","var internals = {};","    // context: null","};","    this._flags = { /*","        presence: 'optional',                   // optional, required, forbidden, ignore","        allowOnly: false,","        allowUnknown: undefined,","        default: undefined,","        forbidden: false,","        encoding: undefined,","        insensitive: false,","        trim: false,","        case: undefined,                        // upper, lower","        empty: undefined,","        func: false","    */ };","","    this._description = null;","    this._inner = {};                           // Hash of arrays of immutable objects","};","internals.Any.prototype.isImmutable = true;     // Prevents Hoek from deep cloning schema objects","","","internals.Any.prototype.clone = function () {","        // Reset values as if we were \"this\"","        var tmpObj = schema.clone();","    // Setup state and settings","","    state = state || { key: '', path: '', parent: null, reference: reference };","    // Check presence requirements","","    var presence = this._flags.presence || options.presence;","    // Check allowed and denied values using the original value","","    if (this._valids.has(value, state, options, this._flags.insensitive)) {","            value === undefined) {          // No reason to keep validating missing value","","            return finish();","    // Convert value and validate type","","    if (this._base) {","            return finish();                            // Base error always aborts early","        }","            // Check allowed and denied values using the converted value","","            if (this._valids.has(value, state, options, this._flags.insensitive)) {","    // Required values did not match","","    if (this._flags.allowOnly) {","    // Helper.validate tests","","    for (var i = 0, il = this._tests.length; i \u003c il; ++i) {","    // If language.label is set, it should override this label","    obj._settings = internals.concatSettings(options, obj._settings);","// Set","","internals.Set = function () {","    // Used to avoid cloning context","","    if (!target \u0026\u0026"],"Functions":["internals.checkOptions = function (options) ","module.exports = internals.Any = function () ","internals.Any.prototype.clone = function () ","internals.Any.prototype.concat = function (schema) ","internals.Any.prototype._test = function (name, arg, func) ","internals.Any.prototype.options = function (options) ","internals.Any.prototype.strict = function (isStrict) ","internals.Any.prototype.raw = function (isRaw) ","internals.Any.prototype._allow = function () ","internals.Any.prototype.allow = function () ","internals.Any.prototype.valid = internals.Any.prototype.only = internals.Any.prototype.equal = function () ","internals.Any.prototype.invalid = internals.Any.prototype.disallow = internals.Any.prototype.not = function (value) ","internals.Any.prototype.required = internals.Any.prototype.exist = function () ","internals.Any.prototype.optional = function () ","internals.Any.prototype.forbidden = function () ","internals.Any.prototype.strip = function () ","internals.Any.prototype.applyFunctionToChildren = function (children, fn, args, root) ","        var extraChildren = (children[0] === '' ? children.slice(1) : children).map(function (child) ","internals.Any.prototype.default = function (value, description) ","    if (typeof value === 'function' \u0026\u0026","            Hoek.assert(typeof value.description === 'string' \u0026\u0026 value.description.length \u003e 0, 'description must be provided when default value is a function');","internals.Any.prototype.empty = function (schema) ","internals.Any.prototype.when = function (ref, options) ","internals.Any.prototype.description = function (desc) ","internals.Any.prototype.notes = function (notes) ","internals.Any.prototype.tags = function (tags) ","internals.Any.prototype.meta = function (meta) ","internals.Any.prototype.example = function (value) ","internals.Any.prototype.unit = function (name) ","internals._try = function (fn, arg) ","internals.Any.prototype._validate = function (value, state, options, reference) ","    var finish = function () ","            else if (typeof self._flags.default === 'function' \u0026\u0026","internals.Any.prototype._validateWithOptions = function (value, options, callback) ","internals.Any.prototype.validate = function (value, callback) ","internals.Any.prototype.describe = function () ","internals.Any.prototype.label = function (name) ","internals.Set = function () ","internals.Set.prototype.add = function (value, refs) ","    Hoek.assert(value === null || value === undefined || value instanceof Date || Buffer.isBuffer(value) || Ref.isRef(value) || (typeof value !== 'function' \u0026\u0026 typeof value !== 'object'), 'Value cannot be an object or function');","    if (typeof value !== 'function' \u0026\u0026","internals.Set.prototype.merge = function (add, remove) ","internals.Set.prototype.remove = function (value) ","    this._set = this._set.filter(function (item) ","internals.Set.prototype.has = function (value, state, options, insensitive) ","internals.Set.prototype.values = function (options) ","internals.concatSettings = function (target, source) "],"Dependencies":["hoek","./ref","./errors"]},{"FileName":"node_modules\\joi\\lib\\array.js","LineCount":518,"CharCount":14160,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {};","        // Clone the array so that we don't modify the original","        if (wasArray) {","            // Attempt a 2nd pass by putting the array inside one.","            var previousErrors = result.errors;","                // Restore previous errors and value since this didn't validate either.","                result.errors = previousErrors;","        // Sparse","","        if (!this._flags.sparse \u0026\u0026 item === undefined) {","        // Exclusions","","        for (var i = 0, il = this._inner.exclusions.length; i \u003c il; ++i) {","            res = this._inner.exclusions[i]._validate(item, localState, {});                // Not passing options to use defaults","","            if (!res.errors) {","        // Ordered","        if (this._inner.ordereds.length) {","        // Requireds","","        var requiredChecks = [];","        // Inclusions","","        for (i = 0, il = inclusions.length; i \u003c il; ++i) {","            // Avoid re-running requireds that already didn't match in the previous loop","            var previousCheck = requireds.indexOf(inclusion);","            // Return the actual error if only one inclusion defined","            if (il === 1) {","            // All available types are supported, so it's not possible to reach 100% coverage without ignoring this line.","            // I still want to keep the test for future js versions with new types (eg. Symbol).","            if (/* $lab:coverage:off$ */ records /* $lab:coverage:on$ */) {","            if (/* $lab:coverage:off$ */ records /* $lab:coverage:on$ */) {","                if (Array.isArray(records)) {"],"Functions":["internals.fastSplice = function (arr, i) ","internals.Array = function () ","internals.Array.prototype._base = function (value, state, options) ","internals.checkItems = function (items, wasArray, state, options) ","internals.fillMissedErrors = function (errors, requireds, state, options) ","internals.fillOrderedErrors = function (errors, ordereds, state, options) ","internals.Array.prototype.describe = function () ","internals.Array.prototype.items = function () ","    Hoek.flatten(Array.prototype.slice.call(arguments)).forEach(function (type, index) ","internals.Array.prototype.ordered = function () ","    Hoek.flatten(Array.prototype.slice.call(arguments)).forEach(function (type, index) ","internals.Array.prototype.min = function (limit) ","    return this._test('min', limit, function (value, state, options) ","internals.Array.prototype.max = function (limit) ","    return this._test('max', limit, function (value, state, options) ","internals.Array.prototype.length = function (limit) ","    return this._test('length', limit, function (value, state, options) ","internals.Array.prototype.unique = function () ","    return this._test('unique', undefined, function (value, state, options) ","            function: []","internals.Array.prototype.sparse = function (enabled) ","internals.Array.prototype.single = function (enabled) "],"Dependencies":["./any","./cast","./errors","hoek"]},{"FileName":"node_modules\\joi\\lib\\binary.js","LineCount":99,"CharCount":2116,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {};"],"Functions":["internals.Binary = function () ","internals.Binary.prototype._base = function (value, state, options) ","internals.Binary.prototype.encoding = function (encoding) ","internals.Binary.prototype.min = function (limit) ","    return this._test('min', limit, function (value, state, options) ","internals.Binary.prototype.max = function (limit) ","    return this._test('max', limit, function (value, state, options) ","internals.Binary.prototype.length = function (limit) ","    return this._test('length', limit, function (value, state, options) "],"Dependencies":["./any","./errors","hoek"]},{"FileName":"node_modules\\joi\\lib\\boolean.js","LineCount":42,"CharCount":897,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {};"],"Functions":["internals.Boolean = function () ","internals.Boolean.prototype._base = function (value, state, options) "],"Dependencies":["./any","./errors","hoek"]},{"FileName":"node_modules\\joi\\lib\\cast.js","LineCount":76,"CharCount":1542,"Comments":["// Load modules","","var Hoek = require('hoek');","// Type modules are delay-loaded to prevent circular dependencies","","","// Declare internals","","var internals = {"],"Functions":["exports.schema = function (config) ","exports.ref = function (id) "],"Dependencies":["hoek","./ref"]},{"FileName":"node_modules\\joi\\lib\\date.js","LineCount":169,"CharCount":3947,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {};"],"Functions":["internals.isIsoDate = (function () ","    return function (date) ","internals.Date = function () ","internals.Date.prototype._base = function (value, state, options) ","internals.toDate = function (value, format) ","internals.compare = function (type, compare) ","    return function (date) ","        return this._test(type, date, function (value, state, options) ","internals.Date.prototype.min = internals.compare('min', function (value, date) ","internals.Date.prototype.max = internals.compare('max', function (value, date) ","internals.Date.prototype.format = function (format) ","    Hoek.assert(typeof format === 'string' || (Array.isArray(format) \u0026\u0026 format.every(function (f) ","internals.Date.prototype.iso = function () ","internals.Date.prototype._isIsoDate = function (value) "],"Dependencies":["./any","./errors","./ref","hoek","moment"]},{"FileName":"node_modules\\joi\\lib\\errors.js","LineCount":298,"CharCount":7914,"Comments":["// Load modules","","var Hoek = require('hoek');","// Declare internals","","var internals = {};","    // Construct error","","    var message = '';","            // Do not push intermediate errors, we're only interested in leafs","            if (item.context.reason \u0026\u0026 item.context.reason.length) {","// Inspired by json-stringify-safe","internals.safeStringify = function (obj, spaces) {","    for (var e = el - 1; e \u003e= 0; --e) {        // Reverse order to process deepest child first","        var pos = el - e;"],"Functions":["internals.stringify = function (value, wrapArrays) ","    if (value instanceof internals.Err || type === 'function') ","internals.Err = function (type, context, state, options) ","internals.Err.prototype.toString = function () ","    var message = format.replace(/\\\\{(\\!?)([^}]+)\\}\\}/g, function ($0, isSecure, name) {","exports.create = function (type, context, state, options) ","exports.process = function (errors, object) ","    var processErrors = function (localErrors, parent) ","internals.getPath = function (item) ","    var recursePath = function (it) ","internals.safeStringify = function (obj, spaces) ","internals.serializer = function () ","    var cycleReplacer = function (key, value) ","    return function (key, value) ","internals.annotate = function () ","        .replace(/_\\$key\\$_([, \\d]+)_\\$end\\$_\\\"/g, function ($0, $1) ","        }).replace(/\\\"_\\$miss\\$_([^\\|]+)\\|(\\d+)_\\$end\\$_\\\"\\: \\\"__missing__\\\"/g, function ($0, $1, $2) ","        }).replace(/\\s*\\\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\\\",?\\n(.*)/g, function ($0, $1, $2) "],"Dependencies":["hoek","./language"]},{"FileName":"node_modules\\joi\\lib\\index.js","LineCount":153,"CharCount":3083,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {","    root.validate = function (value /*, [schema], [options], callback */) {","","        var last = arguments[arguments.length - 1];"],"Functions":["internals.root = function () ","    root.any = function () ","    root.alternatives = root.alt = function () ","    root.array = function () ","    root.boolean = root.bool = function () ","    root.binary = function () ","    root.date = function () ","    root.func = function () ","    root.number = function () ","    root.object = function () ","    root.string = function () ","    root.ref = function () ","    root.isRef = function (ref) ","    root.validate = function (value /*, [schema], [options], callback */) ","        var callback = typeof last === 'function' ? last : null;","    root.describe = function () ","    root.compile = function (schema) ","    root.assert = function (value, schema, message) ","    root.attempt = function (value, schema, message) "],"Dependencies":["./any","./cast","./ref"]},{"FileName":"node_modules\\joi\\lib\\language.js","LineCount":126,"CharCount":5560,"Comments":["// Load modules","","","// Declare internals","","var internals = {};"],"Functions":["    function: "],"Dependencies":null},{"FileName":"node_modules\\joi\\lib\\number.js","LineCount":185,"CharCount":4515,"Comments":["// Load modules","","var Any = require('./any');","// Declare internals","","var internals = {};","        // This is conceptually equivalent to using toFixed but it should be much faster","        var precision = Math.pow(10, this._flags.precision);"],"Functions":["internals.Number = function () ","internals.compare = function (type, compare) ","    return function (limit) ","        return this._test(type, limit, function (value, state, options) ","internals.Number.prototype._base = function (value, state, options) ","internals.Number.prototype.min = internals.compare('min', function (value, limit) ","internals.Number.prototype.max = internals.compare('max', function (value, limit) ","internals.Number.prototype.greater = internals.compare('greater', function (value, limit) ","internals.Number.prototype.less = internals.compare('less', function (value, limit) ","internals.Number.prototype.multiple = function (base) ","    return this._test('multiple', base, function (value, state, options) ","internals.Number.prototype.integer = function () ","    return this._test('integer', undefined, function (value, state, options) ","internals.Number.prototype.negative = function () ","    return this._test('negative', undefined, function (value, state, options) ","internals.Number.prototype.positive = function () ","    return this._test('positive', undefined, function (value, state, options) ","internals.Number.prototype.precision = function (limit) ","    var obj = this._test('precision', limit, function (value, state, options)"],"Dependencies":["./any","./ref","./errors","hoek"]},{"FileName":"node_modules\\joi\\lib\\object.js","LineCount":755,"CharCount":20089,"Comments":["// Load modules","","var Hoek = require('hoek');","// Declare internals","","var internals = {};","    // Skip if there are no other rules to test","","    if (!this._inner.renames.length \u0026\u0026","        !this._inner.children \u0026\u0026                    // null allows any keys","        !this._inner.patterns.length) {","    // Ensure target is a local copy (parsed) or shallow copy","","    if (target === value) {","    // Rename keys","","    var renamed = {};","    // Validate schema","","    if (!this._inner.children \u0026\u0026            // null allows any keys","        !this._inner.patterns.length \u0026\u0026","    // Unknown keys","","    var unprocessedKeys = Object.keys(unprocessed);","    // Validate dependencies","","    for (var d = 0, dl = this._inner.dependencies.length; d \u003c dl; ++d) {","            // Only add the key if we are not going to replace it later","            if (children.indexOf(child.key) === -1) {","    pattern = new RegExp(pattern.source, pattern.ignoreCase ? 'i' : undefined);         // Future version should break this and forbid unsupported regex flags","","    try {","    alias: false,                   // Keep old value in place","    multiple: false,                // Allow renaming multiple keys into the same target","    override: false                 // Overrides an existing key","};"],"Functions":["internals.Object = function () ","internals.Object.prototype._base = function (value, state, options) ","    var finish = function () ","    var type = this._flags.func ? 'function' : 'object';","            target = function () ","                else if (typeof target[key] === 'function') ","internals.Object.prototype._func = function () ","internals.Object.prototype.keys = function (schema) ","internals.Object.prototype.unknown = function (allow) ","internals.Object.prototype.length = function (limit) ","    return this._test('length', limit, function (value, state, options) ","internals.Object.prototype.min = function (limit) ","    return this._test('min', limit, function (value, state, options) ","internals.Object.prototype.max = function (limit) ","    return this._test('max', limit, function (value, state, options) ","internals.Object.prototype.pattern = function (pattern, schema) ","internals.Object.prototype.with = function (key, peers) ","internals.Object.prototype.without = function (key, peers) ","internals.Object.prototype.xor = function () ","internals.Object.prototype.or = function () ","internals.Object.prototype.and = function () ","internals.Object.prototype.nand = function () ","internals.Object.prototype.requiredKeys = function (children) ","internals.Object.prototype.optionalKeys = function (children) ","internals.Object.prototype.rename = function (from, to, options) ","internals.groupChildren = function (children) ","internals.Object.prototype.applyFunctionToChildren = function (children, fn, args, root) ","internals.Object.prototype._dependency = function (type, key, peers) ","internals.with = function (value, peers, parent, state, options) ","internals.without = function (value, peers, parent, state, options) ","internals.xor = function (value, peers, parent, state, options) ","internals.or = function (value, peers, parent, state, options) ","internals.and = function (value, peers, parent, state, options) ","internals.nand = function (value, peers, parent, state, options) ","internals.Object.prototype.describe = function (shallow) ","internals.Object.prototype.assert = function (ref, schema, message) ","    return this._test('assert',  cast: cast, ref: ref }, function (value, state, options) {","internals.Object.prototype.type = function (constructor, name) ","    Hoek.assert(typeof constructor === 'function', 'type must be a constructor function');","    return this._test('type', name, function (value, state, options) "],"Dependencies":["hoek","topo","./any","./cast","./errors"]},{"FileName":"node_modules\\joi\\lib\\ref.js","LineCount":52,"CharCount":1043,"Comments":["// Load modules","","var Hoek = require('hoek');","// Declare internals","","var internals = {};","    var settings = Hoek.clone(options);         // options can be reused and modified","","    var ref = function (value, validationOptions) {"],"Functions":["exports.create = function (key, options) ","    var ref = function (value, validationOptions) ","    ref.toString = function () ","exports.isRef = function (ref) ","    return typeof ref === 'function' \u0026\u0026 ref.isJoi;","exports.push = function (array, ref) "],"Dependencies":["hoek"]},{"FileName":"node_modules\\joi\\lib\\string\\ip.js","LineCount":33,"CharCount":781,"Comments":[],"Functions":["internals.Ip.createIpRegex = function (versions, cidr) "],"Dependencies":["./rfc3986"]},{"FileName":"node_modules\\joi\\lib\\string\\rfc3986.js","LineCount":175,"CharCount":5495,"Comments":["/**"," * elements separated by forward slash (\"/\") are alternatives."," */","var or = '|';","/**"," * DIGIT = %x30-39 ; 0-9"," */","var digit = '0-9';","/**"," * ALPHA = %x41-5A / %x61-7A   ; A-Z / a-z"," */","var alpha = 'a-zA-Z';","/**"," * cidr       = DIGIT                ; 0-9"," *            / %x31-32 DIGIT         ; 10-29"," *            / \"3\" %x30-32           ; 30-32"," */","internals.rfc3986.cidr = digitOnly + or + '[1-2]' + digitOnly + or + '3' + '[0-2]';","/**"," * HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\""," */","var hexDigit = digit + 'A-Fa-f',","/**"," * unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\""," */","var unreserved = alpha + digit + '-\\\\._~';","/**"," * sub-delims = \"!\" / \"$\" / \"\u0026\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\""," */","var subDelims = '!\\\\$\u0026\\'\\\\(\\\\)\\\\*\\\\+,;=';","/**"," * pct-encoded = \"%\" HEXDIG HEXDIG"," */","var pctEncoded = '%' + hexDigit;","/**"," * pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\""," */","var pchar = unreserved + pctEncoded + subDelims + ':@';","/**"," * Rule to support zero-padded addresses."," */","var zeroPad = '0?';","/**"," * dec-octet   = DIGIT                 ; 0-9"," *            / %x31-39 DIGIT         ; 10-99"," *            / \"1\" 2DIGIT            ; 100-199"," *            / \"2\" %x30-34 DIGIT     ; 200-249"," *            / \"25\" %x30-35          ; 250-255"," */","var decOctect = '(?:' + zeroPad + zeroPad + digitOnly + or + zeroPad + '[1-9]' + digitOnly + or + '1' + digitOnly + digitOnly + or + '2' + '[0-4]' + digitOnly + or + '25' + '[0-5])';","/**"," * IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet"," */","internals.rfc3986.IPv4address = '(?:' + decOctect + '\\\\.){3}' + decOctect;","/**"," * h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal"," * ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address"," * IPv6address =                            6( h16 \":\" ) ls32"," *             /                       \"::\" 5( h16 \":\" ) ls32"," *             / [               h16 ] \"::\" 4( h16 \":\" ) ls32"," *             / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32"," *             / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32"," *             / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32"," *             / [ *4( h16 \":\" ) h16 ] \"::\"              ls32"," *             / [ *5( h16 \":\" ) h16 ] \"::\"              h16"," *             / [ *6( h16 \":\" ) h16 ] \"::\""," */","var h16 = hexDigitOnly + '{1,4}';","/**"," * IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )"," */","internals.rfc3986.IPvFuture = 'v' + hexDigitOnly + '+\\\\.[' + unreserved + subDelims + ':]+';","/**"," * scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )"," */","internals.rfc3986.scheme = alphaOnly + '[' + alpha + digit + '+-\\\\.]*';","/**"," * userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )"," */","var userinfo = '[' + unreserved + pctEncoded + subDelims + ':]*';","/**"," * IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\""," */","var IPLiteral = '\\\\[(?:' + internals.rfc3986.IPv6address + or + internals.rfc3986.IPvFuture + ')\\\\]';","/**"," * reg-name = *( unreserved / pct-encoded / sub-delims )"," */","var regName = '[' + unreserved + pctEncoded + subDelims + ']{0,255}';","/**"," * host = IP-literal / IPv4address / reg-name"," */","var host = '(?:' + IPLiteral + or + internals.rfc3986.IPv4address + or + regName + ')';","/**"," * port = *DIGIT"," */","var port = digitOnly + '*';","/**"," * authority   = [ userinfo \"@\" ] host [ \":\" port ]"," */","var authority = '(?:' + userinfo + '@)?' + host + '(?::' + port + ')?';","/**"," * segment       = *pchar"," * segment-nz    = 1*pchar"," * path          = path-abempty    ; begins with \"/\" or is empty"," *               / path-absolute   ; begins with \"/\" but not \"//\""," *               / path-noscheme   ; begins with a non-colon segment"," *               / path-rootless   ; begins with a segment"," *               / path-empty      ; zero characters"," * path-abempty  = *( \"/\" segment )"," * path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]"," * path-rootless = segment-nz *( \"/\" segment )"," */","var segment = pcharOnly + '*';","/**"," * hier-part = \"//\" authority path"," */","internals.rfc3986.hierPart = '(?:\\\\/\\\\/' + authority + pathAbEmpty + or + pathAbsolute + or + pathRootless + ')';","/**"," * query = *( pchar / \"/\" / \"?\" )"," */","internals.rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)'; //Finish matching either at the fragment part or end of the line.","internals.rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)'; //Finish matching either at the fragment part or end of the line.","","/**","/**"," * fragment = *( pchar / \"/\" / \"?\" )"," */","internals.rfc3986.fragment = '[' + pchar + '\\\\/\\\\?]*';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\joi\\lib\\string\\uri.js","LineCount":25,"CharCount":705,"Comments":["            // If we were passed a scheme, use it instead of the generic one","            if (optionalScheme) {","                // Have to put this in a non-capturing group to handle the OR statements","                scheme = '(?:' + optionalScheme + ')';","            /**","             * URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]","             */","            return new RegExp('^' + scheme + ':' + RFC3986.hierPart + '(?:\\\\?' + RFC3986.query + ')?' + '(?:#' + RFC3986.fragment + ')?$');"],"Functions":["        createUriRegex: function (optionalScheme) "],"Dependencies":["./rfc3986"]},{"FileName":"node_modules\\joi\\lib\\string.js","LineCount":469,"CharCount":13671,"Comments":["// Load modules","","var Net = require('net');","// Declare internals","","var internals = {","    pattern = new RegExp(pattern.source, pattern.ignoreCase ? 'i' : undefined);         // Future version should break this and forbid unsupported regex flags","","    return this._test('regex', pattern, function (value, state, options) {","        // If we only received a `cidr` setting, create a regex for it. But we don't need to create one if `cidr` is \"optional\" since that is the default","        if (!ipOptions.version \u0026\u0026 ipOptions.cidr !== 'optional') {","        // Set our default cidr strategy","        ipOptions.cidr = 'optional';","        // Make sure we have a set of versions","        versions = Hoek.unique(versions);","            // Flatten the array into a string to be used to match the schemes.","            for (var i = 0, il = uriOptions.scheme.length; i \u003c il; ++i) {","                // Add OR separators if a value already exists","                customScheme += customScheme ? '|' : '';","                // If someone wants to match HTTP or HTTPS for example then we need to support both RegExp and String so we don't escape their pattern unknowingly.","                if (scheme instanceof RegExp) {","    // This can not be considere a test like trim, we can't \"reject\"","    // anything from this rule, so just clone the current object","    var obj = this.clone();"],"Functions":["internals.String = function () ","internals.compare = function (type, compare) ","    return function (limit, encoding) ","        return this._test(type, limit, function (value, state, options) ","internals.String.prototype._base = function (value, state, options) ","internals.String.prototype.insensitive = function () ","internals.String.prototype.min = internals.compare('min', function (value, limit, encoding) ","internals.String.prototype.max = internals.compare('max', function (value, limit, encoding) ","internals.String.prototype.creditCard = function () ","    return this._test('creditCard', undefined, function (value, state, options) ","internals.String.prototype.length = internals.compare('length', function (value, limit, encoding) ","internals.String.prototype.regex = function (pattern, name) ","    return this._test('regex', pattern, function (value, state, options) ","internals.String.prototype.alphanum = function () ","    return this._test('alphanum', undefined, function (value, state, options) ","internals.String.prototype.token = function () ","    return this._test('token', undefined, function (value, state, options) ","internals.String.prototype.email = function (isEmailOptions) ","    return this._test('email', isEmailOptions, function (value, state, options) ","internals.String.prototype.ip = function (ipOptions) ","    return this._test('ip', ipOptions, function (value, state, options) ","internals.String.prototype.uri = function (uriOptions) ","    return this._test('uri', uriOptions, function (value, state, options) ","internals.String.prototype.isoDate = function () ","    return this._test('isoDate', undefined, function (value, state, options) ","internals.String.prototype.guid = function () ","    return this._test('guid', undefined, function (value, state, options) ","internals.String.prototype.hex = function () ","    return this._test('hex', regex, function (value, state, options) ","internals.String.prototype.hostname = function () ","    return this._test('hostname', undefined, function (value, state, options) ","internals.String.prototype.lowercase = function () ","    var obj = this._test('lowercase', undefined, function (value, state, options) ","internals.String.prototype.uppercase = function () ","    var obj = this._test('uppercase', undefined, function (value, state, options) ","internals.String.prototype.trim = function () ","    var obj = this._test('trim', undefined, function (value, state, options) ","internals.String.prototype.replace = function (pattern, replacement) "],"Dependencies":["net","hoek","isemail","./any","./ref","./date","./errors","./string/uri","./string/ip"]},{"FileName":"node_modules\\joi\\test\\alternatives.js","LineCount":489,"CharCount":14970,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","                [{ b: true }, true]           // true because required() only applies to the one alternative","            ], done);"],"Functions":["describe('alternatives', function () ","    it('fails when no alternatives are provided', function (done) ","        Joi.alternatives().validate('a', function (err, value) ","    it('allows undefined when no alternatives are provided', function (done) ","        Joi.alternatives().validate(undefined, function (err, value) ","    it('applies modifiers when higher priority converts', function (done) ","        schema.validate( a: '5' }, function (err, value) {","    it('applies modifiers when lower priority valid is a match', function (done) ","        schema.validate( a: '5' }, function (err, value) {","    it('does not apply modifier if alternative fails', function (done) ","        schema.validate(input, function (err, value) ","    describe('#try', function () ","        it('throws when missing alternatives', function (done) ","            expect(function () ","    describe('#when', function () ","        it('throws on invalid ref (not string)', function (done) ","            expect(function () ","        it('validates conditional alternatives', function (done) ","        it('validates conditional alternatives (empty key)', function (done) ","        it('validates only then', function (done) ","        it('validates only otherwise', function (done) ","        it('validates when is is null', function (done) ","        it('validates when is has ref', function (done) ","        it('validates when then has ref', function (done) ","        it('validates when otherwise has ref', function (done) ","        it('validates when empty value', function (done) ","        it('validates when missing value', function (done) ","    describe('#describe', function () ","        it('describes when', function (done) ","        it('describes when (only then)', function (done) ","        it('describes when (only otherwise)', function (done) ","        it('describes inherited fields (from any)', function (done) "],"Dependencies":["lab","code","..","./helper"]},{"FileName":"node_modules\\joi\\test\\any.js","LineCount":1596,"CharCount":44417,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('any', function () ","    describe('#equal', function () ","        it('validates valid values', function (done) ","    describe('#not', function () ","        it('validates invalid values', function (done) ","    describe('#exist', function () ","        it('validates required values', function (done) ","    describe('#strict', function () ","        it('validates without converting', function (done) ","        it('can be disabled', function (done) ","    describe('#options', function () ","        it('adds to existing options', function (done) ","            schema.validate(input, function (err, value) ","        it('throws with an invalid option', function (done) ","            expect(function () ","        it('throws with an invalid option type', function (done) ","            expect(function () ","        it('throws with an invalid option value', function (done) ","            expect(function () ","        it('does not throw with multiple options including presence key', function (done) ","            expect(function () ","    describe('#label', function () ","        it('adds to existing options', function (done) ","            schema.validate(input, function (err, value) ","        it('throws when label is missing', function (done) ","            expect(function () ","        it('can describe a label', function (done) ","    describe('#strict', function () ","        it('adds to existing options', function (done) ","            schema.validate(input, function (err, value) ","    describe('#raw', function () ","        it('gives the raw input', function (done) ","            tests.forEach(function (test) ","                schemas.forEach(function (schema) ","                    schema.raw().validate(input, function (err, value) ","    describe('#default', function () ","        it('sets the value', function (done) ","            schema.validate(input, function (err, value) ","        it('throws when value is a method and no description is provided', function (done) ","            expect(function () ","                    foo: Joi.string().default(function () ","        it('allows passing description as a property of a default method', function (done) ","            var defaultFn = function () ","            expect(function () ","        it('sets the value when passing a method', function (done) ","                foo: Joi.string().default(function () ","            schema.validate(input, function (err, value) ","        it('executes the default method each time validate is called', function (done) ","                foo: Joi.number().default(function () ","            schema.validate(input, function (err, value) ","            schema.validate(input, function (err, value) ","        it('passes a clone of the context if the default method accepts an argument', function (done) ","                foo: Joi.string().default(function (context) ","            schema.validate(input, function (err, value) ","        it('does not modify the original object when modifying the clone in a default method', function (done) ","            var defaultFn = function (context) ","            schema.validate(input, function (err, value) ","        it('passes undefined as the context if the default method has no parent', function (done) ","            var schema = Joi.string().default(function (context) ","            schema.validate(undefined, function (err, value) ","        it('allows passing a method with no description to default when the object being validated is a function', function (done) ","            var defaultFn = function () ","                return 'just a function';","            expect(function () ","            schema.validate(undefined, function (err, value) ","        it('allows passing a method that generates a default method when validating a function', function (done) ","            var defaultFn = function () ","                return 'just a function';","            var defaultGeneratorFn = function () ","            expect(function () ","            schema.validate(undefined, function (err, value) ","        it('allows passing a ref as a default without a description', function (done) ","            schema.validate( a: 'test' }, function (err, value) {","        it('ignores description when passing a ref as a default', function (done) ","            schema.validate( a: 'test' }, function (err, value) {","        it('catches errors in default methods', function (done) ","            var defaultFn = function () ","            schema.validate(undefined, function (err, value) ","        it('should not overide a value when value is given', function (done) ","            schema.validate(input, function (err, value) ","        it('sets value based on condition (outer)', function (done) ","            schema.validate( a: false }, function (err, value) {","        it('sets value based on condition (inner)', function (done) ","            schema.validate( a: true }, function (err, value) {","        it('creates deep defaults', function (done) ","        it('should not affect objects other than object when called without an argument', function (done) ","        it('should set default value as a clone', function (done) ","            schema.validate(input, function (err, value) ","                schema.validate(input, function (err2, value2) ","        it('should not apply default values if the noDefaults option is enquire', function (done) ","            Joi.validate(input, schema,  noDefaults: true }, function (err, value) {","        it('should not apply default values from functions if the noDefaults option is enquire', function (done) ","            var func = function (context) ","            Joi.validate(input, schema,  noDefaults: true }, function (err, value) {","        it('should not apply default values from references if the noDefaults option is enquire', function (done) ","            Joi.validate(input, schema,  noDefaults: true }, function (err, value) {","    describe('#optional', function () ","        it('validates optional with default required', function (done) ","    describe('#forbidden', function () ","        it('validates forbidden', function (done) ","    describe('#strip', function () ","        it('validates and returns undefined', function (done) ","            schema.validate('test', function (err, value) ","        it('validates and returns an error', function (done) ","            schema.validate(1, function (err, value) ","    describe('#description', function () ","        it('sets the description', function (done) ","        it('throws when description is missing', function (done) ","            expect(function () ","    describe('#notes', function () ","        it('sets the notes', function (done) ","        it('throws when notes are missing', function (done) ","            expect(function () ","        it('throws when notes are invalid', function (done) ","            expect(function () ","    describe('#tags', function () ","        it('sets the tags', function (done) ","        it('throws when tags are missing', function (done) ","            expect(function () ","        it('throws when tags are invalid', function (done) ","            expect(function () ","    describe('#meta', function () ","        it('sets the meta', function (done) ","        it('throws when meta is missing', function (done) ","            expect(function () ","    describe('#example', function () ","        it('sets an example', function (done) ","        it('throws when tags are missing', function (done) ","            expect(function () ","        it('throws when example fails own rules', function (done) ","            expect(function () ","    describe('#unit', function () ","        it('sets the unit', function (done) ","        it('throws when unit is missing', function (done) ","            expect(function () ","    describe('#_validate', function () ","        it('checks value after conversion', function (done) ","            Joi.validate('2', schema,  abortEarly: false }, function (err, value) {","    describe('#concat', function () ","        it('throws when schema is not any', function (done) ","            expect(function () ","        it('throws when schema is missing', function (done) ","            expect(function () ","        it('throws when schema is invalid', function (done) ","            expect(function () ","        it('merges two schemas (settings)', function (done) ","        it('merges two schemas (valid)', function (done) ","        it('merges two schemas (invalid)', function (done) ","        it('merges two schemas (valid/invalid)', function (done) ","        it('merges two schemas (tests)', function (done) ","        it('merges two schemas (flags)', function (done) ","        it('overrides and append information', function (done) ","        it('merges two objects (any key + specific key)', function (done) ","        it('merges two objects (no key + any key)', function (done) ","        it('merges two objects (key + key)', function (done) ","        it('merges two objects (renames)', function (done) ","            a.concat(b).validate( c: 1, d: 2 }, function (err, value) {","        it('merges two objects (deps)', function (done) ","            a.concat(b).validate( a: 1, b: 2 }, function (err, value) {","        it('merges two objects (same key)', function (done) ","        it('throws when schema key types do not match', function (done) ","            expect(function () ","        it('merges two alternatives with references', function (done) ","        it('merges meta properly', function (done) ","        it('merges into an any', function (done) ","            expect(function () ","    describe('#when', function () ","        it('throws when options are invalid', function (done) ","            expect(function () ","        it('forks type into alternatives', function (done) ","        it('forks type into alternatives (only then)', function (done) ","        it('forks type into alternatives (only otherwise)', function (done) ","        it('forks type into alternatives (with a schema)', function (done) ","        it('makes peer required', function (done) ","    describe('#requiredKeys', function () ","        it('should set keys as required', function (done) ","        it('should work on types other than objects', function (done) ","            schemas.forEach(function (schema) ","                expect(function () ","                expect(function () ","                expect(function () ","        it('should throw on unknown key', function (done) ","            expect(function () ","            expect(function () ","        it('should throw on empty object', function (done) ","            expect(function () ","        it('should not modify original object', function (done) ","            schema.validate(}, function (err) {","                requiredSchema.validate(}, function (err) {","    describe('#optionalKeys', function () ","        it('should set keys as optional', function (done) ","    describe('#empty', function () ","        it('should void values when considered empty', function (done) ","        it('should override any previous empty', function (done) ","        it('should be possible to reset the empty value', function (done) ","        it('should have no effect if only reset is used', function (done) ","        it('should work with dependencies', function (done) ","    describe('Set', function () ","        describe('#add', function () ","            it('throws when adding a non ref function', function (done) ","                expect(function () ","                    Joi.valid(function ()  });","                }).to.throw('Value cannot be an object or function');","            it('throws when adding an object function', function (done) ","                expect(function () ","                }).to.throw('Value cannot be an object or function');","        describe('#has', function () ","            it('compares date to null', function (done) ","            it('compares buffer to null', function (done) ","        describe('#values', function () ","            it('returns array', function (done) ","            it('strips undefined', function (done) ","        describe('#allow', function () ","            it('allows valid values to be set', function (done) ","                expect(function () ","            it('throws when passed undefined', function (done) ","                expect(function () ","        describe('#valid', function () ","            it('allows valid values to be set', function (done) ","                expect(function () ","            it('throws when passed undefined', function (done) ","                expect(function () ","        describe('#invalid', function () ","            it('allows invalid values to be set', function (done) ","                expect(function () ","            it('throws when passed undefined', function (done) ","                expect(function () "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\array.js","LineCount":1050,"CharCount":34550,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","                [[02, 2], false], // eslint-disable-line no-octal","                [[0x2, 2], false],"],"Functions":["describe('array', function () ","    it('converts a string to an array', function (done) ","        Joi.array().validate('[1,2,3]', function (err, value) ","    it('errors on non-array string', function (done) ","        Joi.array().validate(' \"something\": false }', function (err, value) {","    it('errors on number', function (done) ","        Joi.array().validate(3, function (err, value) ","    it('converts a non-array string with number type', function (done) ","        Joi.array().validate('3', function (err, value) ","    it('errors on a non-array string', function (done) ","        Joi.array().validate('asdf', function (err, value) ","    describe('#items', function () ","        it('converts members', function (done) ","            schema.validate(input, function (err, value) ","        it('shows path to errors in array items', function (done) ","            expect(function () ","            expect(function () ","        it('allows zero size', function (done) ","            schema.validate(input, function (err, value) ","        it('returns the first error when only one inclusion', function (done) ","            schema.validate(input, function (err, value) ","        it('validates multiple types added in two calls', function (done) ","        it('validates multiple types with stripUnknown', function (done) ","        it('allows forbidden to restrict values', function (done) ","            schema.validate(input, function (err, value) ","        it('validates that a required value exists', function (done) ","            schema.validate(input, function (err, value) ","        it('validates that a required value exists with abortEarly = false', function (done) ","            schema.validate(input, function (err, value) ","        it('does not re-run required tests that have already been matched', function (done) ","            schema.validate(input, function (err, value) ","        it('does not re-run required tests that have already failed', function (done) ","            schema.validate(input, function (err, value) ","        it('can require duplicates of the same schema and fail', function (done) ","            schema.validate(input, function (err, value) ","        it('can require duplicates of the same schema and pass', function (done) ","            schema.validate(input, function (err, value) ","        it('continues to validate after a required match', function (done) ","            schema.validate(input, function (err, value) ","        it('can use a label on a required parameter', function (done) ","            schema.validate(input, function (err, value) ","        it('can use a label on one required parameter, and no label on another', function (done) ","            schema.validate(input, function (err, value) ","        it('can strip matching items', function (done) ","            schema.validate(['one', 'two', 3, 4], function (err, value) ","    describe('#min', function () ","        it('validates array size', function (done) ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","    describe('#max', function () ","        it('validates array size', function (done) ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","    describe('#length', function () ","        it('validates array size', function (done) ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","    describe('#validate', function () ","        it('should, by default, allow undefined, allow empty array', function (done) ","        it('should, when .required(), deny undefined', function (done) ","        it('allows empty arrays', function (done) ","        it('excludes values when items are forbidden', function (done) ","        it('allows types to be forbidden', function (done) ","            schema.validate(n, function (err, value) ","                schema.validate(m, function (err2, value2) ","        it('validates array of Numbers', function (done) ","        it('validates array of mixed Numbers \u0026 Strings', function (done) ","        it('validates array of objects with schema', function (done) ","        it('errors on array of unallowed mixed types (Array)', function (done) ","        it('errors on invalid number rule using includes', function (done) ","            schema.validate(input, function (err, value) ","        it('validates an array within an object', function (done) ","        it('should not change original value', function (done) ","            schema.validate(input, function (err, value) ","        it('should have multiple errors if abort early is false', function (done) ","            Joi.validate(input, schema,  abortEarly: false }, function (err, value) {","    describe('#describe', function () ","        it('returns an empty description when no rules are applied', function (done) ","        it('returns an updated description when sparse rule is applied', function (done) ","        it('returns an items array only if items are specified', function (done) ","        it('returns a recursively defined array of items when specified', function (done) ","    describe('#unique', function () ","        it('errors if duplicate numbers, strings, objects, binaries, functions, dates and booleans', function (done) ","            var func = function () };","        it('ignores duplicates if they are of different types', function (done) ","        it('validates without duplicates', function (done) ","            var func = function () };","            var func2 = function () };","    describe('#sparse', function () ","        it('errors on undefined value', function (done) ","        it('validates on undefined value with sparse', function (done) ","        it('switches the sparse flag', function (done) ","        it('switches the sparse flag with explicit value', function (done) ","        it('switches the sparse flag back', function (done) ","    describe('#single', function () ","        it('should allow a single element', function (done) ","        it('should allow a single element with multiple types', function (done) ","        it('should allow nested arrays', function (done) ","        it('should allow nested arrays with multiple types', function (done) ","        it('switches the single flag with explicit value', function (done) ","        it('switches the single flag back', function (done) ","    describe('#options', function () ","        it('respects stripUnknown', function (done) ","            schema.validate(['one', 'two', 3, 4, true, false], function (err, value) ","    describe('#ordered', function () ","        it('shows path to errors in array ordered items', function (done) ","            expect(function () ","            expect(function () ","        it('validates input against items in order', function (done) ","            schema.validate(input, function (err, value) ","        it('validates input with optional item', function (done) ","            schema.validate(input, function (err, value) ","        it('validates input without optional item', function (done) ","            schema.validate(input, function (err, value) ","        it('validates input without optional item', function (done) ","            schema.validate(input, function (err, value) ","        it('validates input without optional item in a sparse array', function (done) ","            schema.validate(input, function (err, value) ","        it('validates when input matches ordered items and matches regular items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input does not match ordered items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input has more items than ordered items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input has more items than ordered items with abortEarly = false', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input has less items than ordered items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input matches ordered items but not matches regular items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input does not match ordered items but matches regular items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors when input does not match ordered items not matches regular items', function (done) ","            schema.validate(input, function (err, value) ","        it('errors but continues when abortEarly is set to false', function (done) ","            schema.validate(input, function (err, value) ","        it('strips item', function (done) ","            schema.validate(input, function (err, value) ","        it('strips multiple items', function (done) ","            schema.validate(input, function (err, value) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\binary.js","LineCount":189,"CharCount":4728,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('binary', function () ","    it('converts a string to a buffer', function (done) ","        Joi.binary().validate('test', function (err, value) ","    it('validates allowed buffer content', function (done) ","    describe('#validate', function () ","        it('returns an error when a non-buffer or non-string is used', function (done) ","            Joi.binary().validate(5, function (err, value) ","        it('accepts a buffer object', function (done) ","            Joi.binary().validate(new Buffer('hello world'), function (err, value) ","    describe('#encoding', function () ","        it('applies encoding', function (done) ","            schema.validate(input.toString('base64'), function (err, value) ","        it('throws when encoding is invalid', function (done) ","            expect(function () ","    describe('#min', function () ","        it('validates buffer size', function (done) ","        it('throws when min is not a number', function (done) ","            expect(function () ","        it('throws when min is not an integer', function (done) ","            expect(function () ","    describe('#max', function () ","        it('validates buffer size', function (done) ","        it('throws when max is not a number', function (done) ","            expect(function () ","        it('throws when max is not an integer', function (done) ","            expect(function () ","    describe('#length', function () ","        it('validates buffer size', function (done) ","        it('throws when length is not a number', function (done) ","            expect(function () ","        it('throws when length is not an integer', function (done) ","            expect(function () "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\boolean.js","LineCount":130,"CharCount":3204,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('boolean', function () ","    it('converts a string to a boolean', function (done) ","        Joi.boolean().validate('true', function (err, value) ","    it('errors on a number', function (done) ","        Joi.boolean().validate(1, function (err, value) ","    describe('#validate', function () ","        it('converts string values and validates', function (done) ","        it('should handle work with required', function (done) ","        it('should handle work with allow', function (done) ","        it('should handle work with invalid', function (done) ","        it('should handle work with invalid and null allowed', function (done) ","        it('should handle work with allow and invalid', function (done) ","        it('should handle work with allow, invalid, and null allowed', function (done) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\date.js","LineCount":339,"CharCount":11140,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('date', function () ","    it('fails on boolean', function (done) ","    it('matches specific date', function (done) ","        Joi.date().valid(new Date(now)).validate(new Date(now), function (err, value) ","    it('errors on invalid input and convert disabled', function (done) ","        Joi.date().options( convert: false }).validate('1-1-2013 UTC', function (err, value) {","    it('validates date', function (done) ","        Joi.date().validate(new Date(), function (err, value) ","    it('validates millisecond date as a string', function (done) ","        Joi.date().validate(mili.toString(), function (err, value) ","    describe('#validate', function () ","        describe('min', function () ","            it('validates min', function (done) ","            it('accepts \"now\" as the min date', function (done) ","                Joi.date().min('now').validate(future, function (err, value) ","            it('errors if .min(\"now\") is used with a past date', function (done) ","                Joi.date().min('now').validate(past, function (err, value) ","            it('accepts references as min date', function (done) ","            it('accepts context references as min date', function (done) ","            it('errors if reference is not a date', function (done) ","            it('errors if context reference is not a date', function (done) ","        describe('max', function () ","            it('validates max', function (done) ","            it('accepts \"now\" as the max date', function (done) ","                Joi.date().max('now').validate(past, function (err, value) ","            it('errors if .max(\"now\") is used with a future date', function (done) ","                Joi.date().max('now').validate(future, function (err, value) ","            it('accepts references as max date', function (done) ","            it('accepts references as max date', function (done) ","            it('errors if reference is not a date', function (done) ","            it('errors if context reference is not a date', function (done) ","        it('validates only valid dates', function (done) ","        describe('#iso', function () ","            it('validates isoDate', function (done) ","            it('validates isoDate with a friendly error message', function (done) ","                Joi.compile(schema).validate( item: 'something' }, function (err, value) {","            it('validates isoDate after clone', function (done) ","                Joi.compile(schema).validate( item: '2013-06-07T14:21:46.295Z' }, function (err, value) {","        describe('#format', function () ","            it('validates custom format', function (done) ","            it('validates several custom formats', function (done) ","            it('fails with bad formats', function (done) ","                expect(function () ","                expect(function () "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\errors.js","LineCount":460,"CharCount":14944,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('errors', function () ","    it('supports custom errors when validating types', function (done) ","        Joi.validate(input, schema,  abortEarly: false, language: lang }, function (err, value) {","    it('does not prefix with key when language uses context.key', function (done) ","        Joi.valid('sad').options( language: { any: { allowOnly: 'my hero \"{{key}}\" is not {{valids}}' } } }).validate(5, function (err, value) {","    it('escapes unsafe keys', function (done) ","        Joi.validate( 'a()': 'x' }, schema, function (err, value) {","            Joi.validate( 'b()': 'x' }, schema, function (err2, value2) {","    it('returns error type in validation error', function (done) ","        Joi.validate(input, schema,  abortEarly: false }, function (err, value) {","    it('returns a full path to an error value on an array (items)', function (done) ","        schema.validate(input, function (err, value) ","    it('returns a full path to an error value on an array (items forbidden)', function (done) ","        schema.validate(input, function (err, value) ","    it('returns a full path to an error value on an object', function (done) ","        Joi.validate(input, schema, function (err, value) ","    it('overrides root key language', function (done) ","        Joi.string().options( language: { root: 'blah' } }).validate(4, function (err, value) {","    it('overrides label key language', function (done) ","        Joi.string().options( language: { key: 'my own {{!key}} ' } }).validate(4, function (err, value) {","    it('overrides wrapArrays', function (done) ","        Joi.array().items(Joi.boolean()).options( language: { messages: { wrapArrays: false } } }).validate([4], function (err, value) {","    it('allows html escaping', function (done) ","        Joi.string().options( language: { root: 'blah', label: 'bleh' } }).validate(4, function (err, value) {","    it('provides context with the error', function (done) ","        Joi.object( length: Joi.number().min(3).required() }).validate({ length: 1 }, function (err) {","    it('has a name that is ValidationError', function (done) ","        schema.validate('a', function (validateErr) ","    describe('#annotate', function () ","        it('annotates error', function (done) ","            Joi.validate(object, schema,  abortEarly: false }, function (err, value) {","        it('annotates error within array', function (done) ","            Joi.validate(object, schema,  abortEarly: false }, function (err, value) {","        it('annotates error within array multiple times on the same element', function (done) ","            Joi.validate(object, schema,  abortEarly: false }, function (err, value) {","        it('annotates error within array when it is an object', function (done) ","            Joi.validate(object, schema,  abortEarly: false }, function (err, value) {","        it('annotates error within multiple arrays and multiple times on the same element', function (done) ","            Joi.validate(object, schema,  abortEarly: false }, function (err, value) {","        it('displays alternatives fail as a single line', function (done) ","            Joi.validate( x: true }, schema, function (err, value) {","        it('annotates circular input', function (done) ","            Joi.validate(input, schema, function (err, value) ","        it('annotates deep circular input', function (done) ","            Joi.validate(input, schema, function (err, value) ","        it('annotates deep circular input with extra keys', function (done) ","            Joi.validate(input, schema, function (err, value) "],"Dependencies":["lab","code","../lib"]},{"FileName":"node_modules\\joi\\test\\function.js","LineCount":114,"CharCount":2341,"Comments":["// Load modules","","var Code = require('code');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('func', function () ","    it('validates a function', function (done) ","            [function ()  }, true],","    it('validates a function with keys', function (done) ","        var a = function ()  };","        var b = function ()  };","            [function ()  }, false],","    it('keeps validated value as a function', function (done) ","        var value = function () ","        schema.validate(value, function (err, validated) ","            expect(validated).to.be.a.function();","    it('retains validated value prototype', function (done) ","        var value = function () ","        value.prototype.get = function () ","        schema.validate(value, function (err, validated) ","            expect(validated).to.be.a.function();","    it('keeps validated value as a function (no clone)', function (done) ","        var value = function () ","        schema.validate(value, function (err, validated) ","            expect(validated).to.be.a.function();"],"Dependencies":["code","lab","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\helper.js","LineCount":64,"CharCount":1295,"Comments":["// Load modules","","var Code = require('code');","// Declare internals","","var internals = {};","// Test shortcuts","","var expect = Code.expect;"],"Functions":["exports.validate = function (schema, config, callback) ","exports.validateOptions = function (schema, config, options, callback) "],"Dependencies":["code","../"]},{"FileName":"node_modules\\joi\\test\\index.js","LineCount":1693,"CharCount":47820,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('Joi', function () ","    it('validates object', function (done) ","        schema.validate(obj, function (err, value) ","    it('keeps schema immutable', function (done) ","        ], function () ","    it('validates null', function (done) ","        Joi.string().validate(null, function (err, value) ","    it('validates null schema', function (done) ","    it('validates number literal', function (done) ","    it('validates string literal', function (done) ","    it('validates boolean literal', function (done) ","    it('validates date literal', function (done) ","    it('validates complex literal', function (done) ","    it('validates a compiled complex literal', function (done) ","    it('validates regex directly', function (done) ","        Joi.compile(/^5$/).validate('5', function (err, value) ","            Joi.compile(/.2}/).validate('6', function (err2, value2) {","    it('validated with', function (done) ","        Joi.validate( txt: 'a' }, schema, { abortEarly: false }, function (err, value) {","    it('validated without', function (done) ","        Joi.validate( txt: 'a', upc: 'b' }, schema, { abortEarly: false }, function (err, value) {","    it('validates xor', function (done) ","        Joi.validate(}, schema, { abortEarly: false }, function (err, value) {","    it('validates multiple peers xor', function (done) ","    it('validates xor with number types', function (done) ","    it('validates xor when empty value of peer allowed', function (done) ","    it('validates or', function (done) ","        Joi.validate(}, schema, { abortEarly: false }, function (err, value) {","    it('validates and', function (done) ","        Joi.validate( txt: 'x' }, schema, { abortEarly: false }, function (err, value) {","    it('validates nand()', function (done) ","        Joi.validate( txt: 'x', upc: 'y', code: 123 }, schema, { abortEarly: false }, function (err, value) {","    it('validates an array of valid types', function (done) ","        schema.validate( auth: { mode: 'none' } }, function (err, value) {","    it('validates alternatives', function (done) ","        schema.validate( auth: { mode: 'none' } }, function (err, value) {","    it('validates required alternatives', function (done) ","    it('validates required [] alternatives', function (done) ","    it('validates an array of string with valid', function (done) ","    it('validates pre and post convert value', function (done) ","    it('does not change object when validation fails', function (done) ","        schema.validate(obj, function (err, value) ","    it('does not set optional keys when missing', function (done) ","        schema.validate(obj, function (err, value) ","    it('invalidates pre and post convert value', function (done) ","    it('invalidates missing peers', function (done) ","        schema.validate( username: 'bob' }, function (err, value) {","    it('validates config where the root item is a joi type', function (done) ","        Joi.boolean().allow(null).validate(true, function (err, value) ","            Joi.object().validate( auth: { mode: 'try' } }, function (err2, value2) {","                Joi.object().validate(true, function (err3, value3) ","                    Joi.string().validate(true, function (err4, value4) ","                        Joi.string().email().validate('test@test.com', function (err5, value5) ","                            Joi.object( param: Joi.string().required() }).validate({ param: 'item' }, function (err6, value6) {","    it('converts string to number', function (done) ","        schema.validate(input, function (err, value) ","    it('allows unknown keys in objects if no schema was given', function (done) ","        Joi.object().validate( foo: 'bar' }, function (err, value) {","    it('fails on unknown keys in objects if a schema was given', function (done) ","        Joi.object(}).validate({ foo: 'bar' }, function (err, value) {","            Joi.compile(}).validate({ foo: 'bar' }, function (err2, value2) {","                Joi.compile( other: Joi.number() }).validate({ foo: 'bar' }, function (err3, value3) {","    it('validates an unknown option', function (done) ","        Joi.compile(config).validate( auth: { unknown: true } }, function (err, value) {","            Joi.compile(config).validate( something: false }, function (err2, value2) {","    it('validates required key with multiple options', function (done) ","        Joi.compile(config).validate(}, function (err, value) {","            Joi.compile(config).validate( module: 'test' }, function (err2, value2) {","                Joi.compile(config).validate( module: {} }, function (err3, value3) {","                    Joi.compile(config).validate( module: { compile: function () { } } }, function (err4, value4) {","    it('validates key with required alternatives', function (done) ","        Joi.compile(config).validate(}, function (err, value) {","    it('validates required key with alternatives', function (done) ","        Joi.compile(config).validate(}, function (err, value) {","    it('does not require optional numbers', function (done) ","        Joi.compile(config).validate( suggestion: 'something' }, function (err, value) {","            Joi.compile(config).validate( position: 1 }, function (err2, value2) {","    it('does not require optional objects', function (done) ","        Joi.compile(config).validate( suggestion: {} }, function (err, value) {","            Joi.compile(config).validate( position: 1 }, function (err2, value2) {","    it('validates object successfully when config has an array of types', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('validates object successfully when config allows for optional key and key is missing', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('fails validation', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('fails validation when the wrong types are supplied', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('fails validation when missing a required parameter', function (done) ","        Joi.compile( a: Joi.string().required() }).validate(obj, function (err, value) {","    it('fails validation when missing a required parameter within an object config', function (done) ","        Joi.compile( a: Joi.object({ b: Joi.string().required() }) }).validate(obj, function (err, value) {","    it('fails validation when parameter is required to be an object but is given as string', function (done) ","        Joi.compile( a: Joi.object({ b: Joi.string().required() }) }).validate(obj, function (err, value) {","    it('validates when parameter is required to be an object and is given correctly as a json string', function (done) ","        Joi.validate(input, schema, function (err, value) ","    it('fails validation when parameter is required to be an object but is given as a json string that is incorrect (number instead of string)', function (done) ","        Joi.object( a: Joi.object({ b: Joi.string().required() }) }).validate(obj, function (err, value) {","    it('fails validation when parameter is required to be an Array but is given as string', function (done) ","        Joi.object( a: Joi.array() }).validate(obj, function (err, value) {","    it('validates when parameter is required to be an Array and is given correctly as a json string', function (done) ","        Joi.object( a: Joi.array() }).validate(obj, function (err, value) {","    it('fails validation when parameter is required to be an Array but is given as a json that is incorrect (object instead of array)', function (done) ","        Joi.object( a: Joi.object({ b: Joi.string().required() }) }).validate(obj, function (err, value) {","    it('fails validation when config is an array and fails', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('fails validation when config is an array and fails with extra keys', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('fails validation with extra keys', function (done) ","        Joi.compile(schema).validate(obj, function (err, value) ","    it('validates missing optional key with string condition', function (done) ","        Joi.compile(schema).validate(}, function (err, value) {","    it('validates with extra keys and remove them when stripUnknown is set', function (done) ","        Joi.validate(obj, schema,  stripUnknown: true, allowUnknown: true }, function (err, value) {","    it('validates dependencies when stripUnknown is set', function (done) ","        Joi.validate(obj, schema,  stripUnknown: true }, function (err, value) {","    it('fails to validate with incorrect property when asked to strip unkown keys without aborting early', function (done) ","        Joi.validate(obj, schema,  stripUnknown: true, abortEarly: false }, function (err, value) {","    it('should pass validation with extra keys when allowUnknown is set', function (done) ","        Joi.validate(obj, schema,  allowUnknown: true }, function (err, value) {","    it('should pass validation with extra keys set', function (done) ","        localConfig.validate(obj, function (err, value) ","            localConfig.validate(value, function (err2, value2) ","    it('should pass validation with extra keys and remove them when skipExtraKeys is set locally', function (done) ","        localConfig.validate(obj, function (err, value) ","            localConfig.validate(value, function (err2, value2) ","    it('should work when the skipFunctions setting is enabled', function (done) ","        var input =  username: 'test', func: function () { } };","        Joi.validate(input, schema, function (err, value) ","    it('should work when the skipFunctions setting is disabled', function (done) ","        var input =  username: 'test', func: function () { } };","        Joi.validate(input, schema,  skipFunctions: false }, function (err, value) {","    it('should not convert values when convert is false', function (done) ","        Joi.validate(input, schema,  convert: false }, function (err, value) {","    it('full errors when abortEarly is false', function (done) ","        Joi.validate(input, schema, function (errOne, valueOne) ","            Joi.validate(input, schema,  abortEarly: false }, function (errFull, valueFull) {","    it('errors multiple times when abortEarly is false in a complex object', function (done) ","        Joi.validate(input, schema,  abortEarly: false }, function (err, value) {","    it('validates using the root any object', function (done) ","        any.validate('abc', function (err, value) ","    it('validates using the root any object (no callback)', function (done) ","    it('accepts no options', function (done) ","        Joi.validate('test', Joi.string(), function (err, value) ","    it('accepts no options (no callback)', function (done) ","    it('accepts options', function (done) ","        Joi.validate('5', Joi.number(),  convert: false }, function (err, value) {","    it('accepts options (no callback)', function (done) ","    it('accepts null options', function (done) ","        Joi.validate('test', Joi.string(), null, function (err, value) ","    it('accepts undefined options', function (done) ","        Joi.validate('test', Joi.string(), undefined, function (err, value) ","    describe('#describe', function () ","        var defaultFn = function () ","        var defaultDescribedFn = function () ","        it('describes schema (direct)', function (done) ","        it('describes schema (root)', function (done) ","        it('describes schema (any)', function (done) ","        it('describes schema without invalids', function (done) ","    describe('#assert', function () ","        it('does not have a return value', function (done) ","            expect(function () ","    describe('#attempt', function () ","        it('throws on invalid value', function (done) ","            expect(function () ","        it('does not throw on valid value', function (done) ","            expect(function () ","        it('returns validated structure', function (done) ","            expect(function () ","        it('throws on invalid value with message', function (done) ","            expect(function () ","        it('throws on invalid value with message as error', function (done) ","            expect(function () ","    describe('#compile', function () ","        it('throws an error on invalid value', function (done) ","            expect(function () ","        it('shows path to errors in object', function (done) ","            expect(function () "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\number.js","LineCount":835,"CharCount":25965,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","                [0, true], // 0 is a multiple of every integer","                [3, true],"],"Functions":["describe('number', function () ","    it('fails on boolean', function (done) ","    describe('#validate', function () ","        it('should, by default, allow undefined', function (done) ","        it('should, when .required(), deny undefined', function (done) ","        it('should return false for denied value', function (done) ","            text.validate(50, function (err, value) ","        it('should validate integer', function (done) ","        it('should return false for Infinity', function (done) ","        it('should return true for allowed Infinity', function (done) ","        it('can accept string numbers', function (done) ","        it('required validates correctly', function (done) ","        it('converts an object string to a number', function (done) ","            Joi.compile(config).validate(obj, function (err, value) ","        it('converts a string to a number', function (done) ","            Joi.number().validate('1', function (err, value) ","        it('errors on null', function (done) ","            Joi.number().validate(null, function (err, value) ","        it('should handle combination of min and max', function (done) ","        it('should handle combination of min, max, and null allowed', function (done) ","        it('should handle combination of min and positive', function (done) ","        it('should handle combination of max and positive', function (done) ","        it('should handle combination of min and negative', function (done) ","        it('should handle combination of negative and positive', function (done) ","        it('should handle combination of negative and allow', function (done) ","        it('should handle combination of positive and allow', function (done) ","        it('should handle combination of positive, allow, and null allowed', function (done) ","        it('should handle combination of negative, allow, and null allowed', function (done) ","        it('should handle combination of positive, allow, null allowed, and invalid', function (done) ","        it('should handle combination of negative, allow, null allowed, and invalid', function (done) ","        it('should handle combination of min, max, and allow', function (done) ","        it('should handle combination of min, max, allow, and null allowed', function (done) ","        it('should handle combination of min, max, allow, and invalid', function (done) ","        it('should handle combination of min, max, allow, invalid, and null allowed', function (done) ","        it('should handle combination of min, max, and integer', function (done) ","        it('should handle combination of min, max, integer, and allow', function (done) ","        it('should handle combination of min, max, integer, allow, and invalid', function (done) ","        it('should handle combination of min, max, integer, allow, invalid, and null allowed', function (done) ","        it('should handle limiting the number of decimal places', function (done) ","        it('should handle combination of min, max, integer, allow, invalid, null allowed and precision', function (done) ","        it('should handle combination of greater and less', function (done) ","        it('should handle combination of greater, less, and integer', function (done) ","        it('should handle combination of greater, less, and null allowed', function (done) ","        it('should handle combination of greater, less, invalid, and allow', function (done) ","    it('should instantiate separate copies on invocation', function (done) ","    it('should show resulting object with #valueOf', function (done) ","    describe('error message', function () ","        it('should display correctly for int type', function (done) ","            Joi.compile(t).validate('1.1', function (err, value) ","    describe('#min', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('supports 64bit numbers', function (done) ","            schema.validate(input, function (err, value) ","        it('accepts references as min value', function (done) ","        it('accepts context references as min value', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#max', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('accepts references as max value', function (done) ","        it('accepts context references as max value', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#less', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('accepts references as less value', function (done) ","        it('accepts context references as less value', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#greater', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('accepts references as greater value', function (done) ","        it('accepts context references as greater value', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#precision', function () ","        it('converts numbers', function (done) ","    describe('#describe', function () ","        it('should describe a minimum of 0', function (done) ","    describe('#multiple', function () ","        it('throws when multiple is not a number', function (done) ","            expect(function () ","        it('throws when multiple is 0', function (done) ","            expect(function () ","        it('should handle multiples correctly', function (done) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\object.js","LineCount":1310,"CharCount":37237,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('object', function () ","    it('converts a json string to an object', function (done) ","        Joi.object().validate('\"hi\":true}', function (err, value) {","    it('errors on non-object string', function (done) ","        Joi.object().validate('a string', function (err, value) ","    it('validates an object', function (done) ","    it('return object reference when no rules specified', function (done) ","        schema.validate( a: item }, function (err, value) {","    it('retains ignored values', function (done) ","        schema.validate( a: 5 }, function (err, value) {","    it('retains skipped values', function (done) ","        schema.validate( b: '5', a: 5 }, function (err, value) {","    it('allows any key when schema is undefined', function (done) ","        Joi.object().validate( a: 4 }, function (err, value) {","            Joi.object(undefined).validate( a: 4 }, function (err2, value2) {","    it('allows any key when schema is null', function (done) ","        Joi.object(null).validate( a: 4 }, function (err, value) {","    it('throws on invalid object schema', function (done) ","        expect(function () ","    it('throws on joi object schema', function (done) ","        expect(function () ","    it('skips conversion when value is undefined', function (done) ","        Joi.object( a: Joi.object() }).validate(undefined, function (err, value) {","    it('errors on array', function (done) ","        Joi.object().validate([1, 2, 3], function (err, value) ","    it('should prevent extra keys from existing by default', function (done) ","    it('should validate count when min is set', function (done) ","    it('should validate count when max is set', function (done) ","    it('should validate count when min and max is set', function (done) ","    it('should validate count when length is set', function (done) ","    it('should validate constructor when type is set', function (done) ","    it('should traverse an object and validate all properties in the top level', function (done) ","    it('should traverse an object and child objects and validate all properties', function (done) ","    it('should traverse an object several levels', function (done) ","    it('should traverse an object several levels with required levels', function (done) ","    it('should traverse an object several levels with required levels (without Joi.obj())', function (done) ","    it('errors on unknown keys when functions allows', function (done) ","        schema.validate(obj, function (err, value) ","    it('validates both valid() and with()', function (done) ","    it('validates referenced arrays in valid()', function (done) ","    it('errors on unknown nested keys with the correct path', function (done) ","        schema.validate(obj, function (err, value) ","    it('errors on unknown nested keys with the correct path at the root level', function (done) ","        schema.validate(obj, function (err, value) ","    it('should work on prototype-less objects', function (done) ","        Joi.validate(input, schema, function (err) ","    it('should be able to use rename safely with a fake hasOwnProperty', function (done) ","        Joi.validate(input, schema, function (err) ","    it('should be able to use object.with() safely with a fake hasOwnProperty', function (done) ","        Joi.validate(input, schema, function (err) ","    describe('#keys', function () ","        it('allows any key', function (done) ","            a.validate( b: 3 }, function (err, value) {","                b.validate( b: 3 }, function (err2, value2) {","        it('forbids all keys', function (done) ","            a.validate( b: 3 }, function (err, value) {","                b.validate( b: 3 }, function (err2, value2) {","        it('adds to existing keys', function (done) ","            a.validate( a: 1, b: 2 }, function (err, value) {","                b.validate( a: 1, b: 2 }, function (err2, value2) {","        it('overrides existing keys', function (done) ","            ], function () ","        it('strips keys flagged with strip', function (done) ","            schema.validate( a: 'test', b: 'test' }, function (err, value) {","        it('does not alter the original object when stripping keys', function (done) ","            schema.validate(valid, function (err, value) ","        it('should strip from an alternative', function (done) ","            schema.validate(valid, function (err, value) ","    describe('#unknown', function () ","        it('allows local unknown without applying to children', function (done) ","        it('forbids local unknown without applying to children', function (done) ","    describe('#rename', function () ","        it('allows renaming multiple times with multiple enabled', function (done) ","            Joi.compile(schema).validate( test1: 'a', test2: 'b' }, function (err, value) {","        it('errors renaming multiple times with multiple disabled', function (done) ","            Joi.compile(schema).validate( test1: 'a', test2: 'b' }, function (err, value) {","        it('errors multiple times when abortEarly is false', function (done) ","            Joi.object().rename('a', 'b').rename('c', 'b').rename('d', 'b').options( abortEarly: false }).validate({ a: 1, c: 1, d: 1 }, function (err, value) {","        it('aliases a key', function (done) ","            Joi.compile(schema).validate(obj, function (err, value) ","        it('with override disabled should not allow overwriting existing value', function (done) ","            schema.validate( test: 'b', test1: 'a' }, function (err, value) {","        it('with override enabled should allow overwriting existing value', function (done) ","            schema.validate( test: 'b', test1: 'a' }, function (err, value) {","        it('renames when data is nested in an array via items', function (done) ","            Joi.object(schema).validate(data, function (err, value) ","        it('applies rename and validation in the correct order regardless of key order', function (done) ","            schema1.validate(input1, function (err1, value1) ","                schema2.validate(input2, function (err2, value2) ","        it('sets the default value after key is renamed', function (done) ","            Joi.validate(input, schema, function (err, value) ","        it('should be able to rename keys that are empty strings', function (done) ","            schema.validate(input, function (err, value) ","        it('should not create new keys when they key in question does not exist', function (done) ","            schema.validate(input, function (err, value) ","        it('should remove a key with override if from does not exist', function (done) ","            schema.validate(input, function (err, value) ","        it('should ignore a key with ignoredUndefined if from does not exist', function (done)","            schema.validate(input, function (err, value) ","        it('shouldn\\'t delete a key with override and ignoredUndefined if from does not exist', function (done)","            schema.validate(input, function (err, value) ","    describe('#describe', function () ","        it('return empty description when no schema defined', function (done) ","        it('respects the shallow parameter', function (done) ","        it('describes patterns', function (done) ","    describe('#length', function () ","        it('throws when length is not a number', function (done) ","            expect(function () ","    describe('#min', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","    describe('#max', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","    describe('#pattern', function () ","        it('shows path to errors in schema', function (done) ","            expect(function () ","            expect(function () ","                Joi.object().pattern(/.*/, function () ","        it('validates unknown keys using a pattern', function (done) ","            Joi.validate( bb: 'y', 5: 'x' }, schema, { abortEarly: false }, function (err, value) {","        it('validates unknown keys using a pattern (nested)', function (done) ","            Joi.validate( x: { bb: 'y', 5: 'x' } }, schema, { abortEarly: false }, function (err, value) {","        it('errors when using a pattern on empty schema with unknown(false) and pattern mismatch', function (done) ","            Joi.validate( a: 5 }, schema, { abortEarly: false }, function (err, value) {","        it('removes global flag from patterns', function (done) ","            Joi.validate( a1: 5, a2: 6 }, schema, function (err, value) {","    describe('#with', function () ","        it('should throw an error when a parameter is not a string', function (done) ","        it('should validate correctly when key is an empty string', function (done) ","    describe('#without', function () ","        it('should throw an error when a parameter is not a string', function (done) ","        it('should validate correctly when key is an empty string', function (done) ","    describe('#xor', function () ","        it('should throw an error when a parameter is not a string', function (done) ","    describe('#or', function () ","        it('should throw an error when a parameter is not a string', function (done) ","        it('errors multiple levels deep', function (done) ","            }).validate( a: { b: { c: 1 } } }, function (err, value) {","    describe('#assert', function () ","        it('shows path to errors in schema', function (done) ","            expect(function () ","        it('shows errors in schema', function (done) ","            expect(function () ","        it('validates upwards reference', function (done) ","            schema.validate( a: { b: 'x', c: 5 }, d: { e: 6 } }, function (err, value) {","        it('validates upwards reference with implicit context', function (done) ","            schema.validate( a: { b: 'x', c: 5 }, d: { e: 6 } }, function (err, value) {","        it('throws when context is at root level', function (done) ","            expect(function () ","        it('allows root level context ref', function (done) ","            expect(function () ","        it('provides a default message for failed assertions', function (done) ","            }, function (err) ","    describe('#type', function () ","        it('uses constructor name for default type name', function (done) ","            var Foo = function Foo () };","            schema.validate(}, function (err) {","        it('uses custom type name if supplied', function (done) ","            var Foo = function () };","            schema.validate(}, function (err) {","        it('overrides constructor name with custom name', function (done) ","            var Foo = function Foo () };","            schema.validate(}, function (err) {","        it('throws when constructor is not a function', function (done) ","            expect(function () ","            }).to.throw('type must be a constructor function');","        it('uses the constructor name in the schema description', function (done) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\ref.js","LineCount":388,"CharCount":10454,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();"],"Functions":["describe('ref', function () ","    it('uses ref as a valid value', function (done) ","        schema.validate( a: 5, b: 6 }, function (err, value) {","    it('uses ref as a valid value (empty key)', function (done) ","        schema.validate( a: 5, '': 6 }, function (err, value) {","    it('uses ref with nested keys as a valid value', function (done) ","        schema.validate( a: 5, b: { c: 6 } }, function (err, value) {","    it('uses ref with combined nested keys in sub child', function (done) ","        schema.validate(input, function (err, value) ","            parent.validate( e: input }, function (err2, value2) {","    it('uses ref reach options', function (done) ","        schema.validate( a: 5, b: { c: 5 } }, function (err, value) {","    it('ignores the order in which keys are defined', function (done) ","        ab.validate( a: { c: '5' }, b: 5 }, function (err, value) {","            ba.validate( a: { c: '5' }, b: 5 }, function (err2, value2) {","    it('uses ref as default value', function (done) ","        schema.validate( b: 6 }, function (err, value) {","    it('uses ref as default value regardless of order', function (done) ","        ab.validate( b: '6' }, function (err, value) {","            ba.validate( b: '6' }, function (err2, value2) {","    it('ignores the order in which keys are defined with alternatives', function (done) ","    it('uses context as default value', function (done) ","        Joi.validate( b: 6 }, schema, { context: { x: 22 } }, function (err, value) {","    it('uses context as default value with custom prefix', function (done) ","        Joi.validate( b: 6 }, schema, { context: { x: 22 } }, function (err, value) {","    it('uses context as a valid value', function (done) ","        Joi.validate( a: 5, b: 6 }, schema, { context: { x: 22 } }, function (err, value) {","    it('uses context in when condition', function (done) ","    it('uses nested context in when condition', function (done) ","    it('describes schema with ref', function (done) ","    describe('#create', function () ","        it('throws when key is missing', function (done) ","            expect(function () ","        it('finds root with default separator', function (done) ","        it('finds root with default separator and options', function (done) ","        it('finds root with custom separator', function (done) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\joi\\test\\string.js","LineCount":3036,"CharCount":113742,"Comments":["// Load modules","","var Lab = require('lab');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","                    ['378734493671000', true],  // american express","                    ['371449635398431', true],  // american express","                    ['378282246310005', true],  // american express","                    ['341111111111111', true],  // american express","                    ['5610591081018250', true], // australian bank","                    ['5019717010103742', true], // dankort pbs","                    ['38520000023237', true],   // diners club","                    ['30569309025904', true],   // diners club","                    ['6011000990139424', true], // discover","                    ['6011111111111117', true], // discover","                    ['6011601160116611', true], // discover","                    ['3566002020360505', true], // jbc","                    ['3530111333300000', true], // jbc","                    ['5105105105105100', true], // mastercard","                    ['5555555555554444', true], // mastercard","                    ['5431111111111111', true], // mastercard","                    ['6331101999990016', true], // switch/solo paymentech","                    ['4222222222222', true],    // visa","                    ['4012888888881881', true], // visa","                    ['4111111111111111', true], // visa","                    ['4111111111111112', false],","            var schema = Joi.string().replace(/\\s+/, ''); // no \"g\" flag","            Helper.validateOptions(schema, [","                ['so me thing', true, null, 'some thing'] // first occurrence!","            ], { convert: true }, done);","            var schema = Joi.string().replace(/\\s+/g, ''); // has \"g\" flag","            Helper.validateOptions(schema, [","            var schema = Joi.string().replace('foo', 'X'); // has \"g\" flag","            Helper.validateOptions(schema, [","            // The string below is the name \"Yamada Tarou\" separated by a","            // carriage return, a \"full width\" ideographic space and a newline","","            var schema = Joi.string().trim().replace(/\\s+/g, ' ');","                ['a-b-c', true, null, 'a-b-c'] // nothing changes here!","            ], done);","                ['ftp://www.example.com', false],","                ['Bananas in pajamas are coming down the stairs', false]","            // Handful of tests taken from Node: https://github.com/joyent/node/blob/cfcb1de130867197cbc9c6012b7e84e08e53d032/test/simple/test-url.js","            // Also includes examples from RFC 8936: http://tools.ietf.org/html/rfc3986#page-7","            var schema = Joi.string().uri();","                ['foo://example.com:8042/over/there?name=ferret#nose', true],","                ['urn:example:animal:ferret:nose', true],","                ['ftp://ftp.is.co.za/rfc/rfc1808.txt', true],","                ['http://www.ietf.org/rfc/rfc2396.txt', true],","                ['ldap://[2001:db8::7]/c=GB?objectClass?one', true],","                ['mailto:John.Doe@example.com', true],","                ['telnet://192.0.2.16:80/', true],","                ['urn:oasis:names:specification:docbook:dtd:xml:4.1.2', true],","                ['file:///example.txt', true],","                ['http://asdf:qw%20er@localhost:8000?asdf=12345\u0026asda=fc%2F#bacon', true],","                ['http://asdf@localhost:8000', true],","                ['http://[v1.09azAZ-._~!$\u0026\\'()*+,;=:]', true],","                ['http://[a:b:c:d:e::1.2.3.4]', true],","                ['coap://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]', true],","                ['http://[1080:0:0:0:8:800:200C:417A]', true],","                ['http://127.0.0.1:8000/foo?bar', true],","                ['http://asdf:qwer@localhost:8000', true],","                ['http://user:pass%3A@localhost:80', true],","                ['http://localhost:123', true],","                ['https://localhost:123', true],","                ['file:///whatever', true],","                ['mailto:asdf@asdf.com', true],","                ['ftp://www.example.com', true],","                ['javascript:alert(\\'hello\\');', true], // eslint-disable-line no-script-url","                ['xmpp:isaacschlueter@jabber.org', true],","                ['f://some.host/path', true],","                ['http://localhost:18/asdf', true],","                ['http://localhost:42/asdf?qwer=zxcv', true],","                ['HTTP://www.example.com/', true],","                ['HTTP://www.example.com', true],","                ['http://www.ExAmPlE.com/', true],","                ['http://user:pw@www.ExAmPlE.com/', true],","                ['http://USER:PW@www.ExAmPlE.com/', true],","                ['http://user@www.example.com/', true],","                ['http://user%3Apw@www.example.com/', true],","                ['http://x.com/path?that%27s#all,%20folks', true],","                ['HTTP://X.COM/Y', true],","                ['http://www.narwhaljs.org/blog/categories?id=news', true],","                ['http://mt0.google.com/vt/lyrs=m@114\u0026hl=en\u0026src=api\u0026x=2\u0026y=2\u0026z=3\u0026s=', true],","                ['http://mt0.google.com/vt/lyrs=m@114???\u0026hl=en\u0026src=api\u0026x=2\u0026y=2\u0026z=3\u0026s=', true],","                ['http://user:pass@mt0.google.com/vt/lyrs=m@114???\u0026hl=en\u0026src=api\u0026x=2\u0026y=2\u0026z=3\u0026s=', true],","                ['http://_jabber._tcp.google.com:80/test', true],","                ['http://user:pass@_jabber._tcp.google.com:80/test', true],","                ['http://[fe80::1]/a/b?a=b#abc', true],","                ['http://user:password@[3ffe:2a00:100:7031::1]:8080', true],","                ['coap://[1080:0:0:0:8:800:200C:417A]:61616/', true],","                ['git+http://github.com/joyent/node.git', true],","                ['http://bucket_name.s3.amazonaws.com/image.jpg', true],","                ['dot.test://foo/bar', true],","                ['svn+ssh://foo/bar', true],","                ['dash-test://foo/bar', true],","                ['xmpp:isaacschlueter@jabber.org', true],","                ['http://atpass:foo%40bar@127.0.0.1:8080/path?search=foo#bar', true],","                ['javascript:alert(\\'hello\\');', true], // eslint-disable-line no-script-url","                ['file://localhost/etc/node/', true],","                ['file:///etc/node/', true],","                ['http://USER:PW@www.ExAmPlE.com/', true],","                ['mailto:local1@domain1?query1', true],","                ['http://example/a/b?c/../d', true],","                ['http://example/x%2Fabc', true],","                ['http://a/b/c/d;p=1/g;x=1/y', true],","                ['http://a/b/c/g#s/../x', true],","                ['http://a/b/c/.foo', true],","                ['http://example.com/b//c//d;p?q#blarg', true],","                ['g:h', true],","                ['http://a/b/c/g', true],","                ['http://a/b/c/g/', true],","                ['http://a/g', true],","                ['http://g', true],","                ['http://a/b/c/d;p?y', true],","                ['http://a/b/c/g?y', true],","                ['http://a/b/c/d;p?q#s', true],","                ['http://a/b/c/g#s', true],","                ['http://a/b/c/g?y#s', true],","                ['http://a/b/c/;x', true],","                ['http://a/b/c/g;x', true],","                ['http://a/b/c/g;x?y#s', true],","                ['http://a/b/c/d;p?q', true],","                ['http://a/b/c/', true],","                ['http://a/b/', true],","                ['http://a/b/g', true],","                ['http://a/', true],","                ['http://a/g', true],","                ['http://a/g', true],","                ['file:/asda', true],","                ['1http://google.com', false],","                ['http://testdomain`,.\u003c\u003e/?\\'\";{}][++\\\\|~!@#$%^\u0026*().org', false],","                ['', false],","                ['//username:password@test.example.com/one/two/three?value=abc\u0026value2=123#david-rules', false],","                ['http://a\\r\" \\t\\n\u003c\\'b:b@c\\r\\nd/e?f', false]","            ], done);","                ['http://google.com', true],","                ['https://google.com', false],","                ['ftp://google.com', false],","                ['file:/asdf', false],","                ['http://google.com', true],","                ['https://google.com', true],","                ['ftp://google.com', false],","                ['file:/asdf', false],","                ['http://google.com', true],","                ['https://google.com', true],","                ['ftp://google.com', true],","                ['file:/asdf', true],","                ['git+http://github.com/hapijs/joi', true],","                ['/path?query=value#hash', false]"],"Functions":["describe('string', function () ","    it('fails on boolean', function (done) ","    describe('#valid', function () ","        it('should throw error on input not matching type', function (done) ","            expect(function () ","        it('should not throw on input matching type', function (done) ","            expect(function () ","        it('validates case sensitive values', function (done) ","        it('validates case insensitive values', function (done) ","        it('validates case insensitive values with non-strings', function (done) ","    describe('#invalid', function () ","        it('should throw error on input not matching type', function (done) ","            expect(function () ","        it('should not throw on input matching type', function (done) ","            expect(function () ","        it('invalidates case sensitive values', function (done) ","        it('invalidates case insensitive values', function (done) ","    describe('#min', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","        it('throws when limit is not a positive integer', function (done) ","            expect(function () ","        it('enforces a limit using byte count', function (done) ","        it('accepts references as min length', function (done) ","        it('accepts context references as min length', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#max', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","        it('throws when limit is not a positive integer', function (done) ","            expect(function () ","        it('enforces a limit using byte count', function (done) ","        it('accepts references as min length', function (done) ","        it('accepts context references as min length', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#creditCard', function () ","        it('should validate credit card', function (done) ","            t.validate('4111111111111112', function (err, value) ","    describe('#length', function () ","        it('throws when limit is not a number', function (done) ","            expect(function () ","        it('throws when limit is not an integer', function (done) ","            expect(function () ","        it('throws when limit is not a positive integer', function (done) ","            expect(function () ","        it('enforces a limit using byte count', function (done) ","        it('accepts references as length', function (done) ","        it('accepts context references as length', function (done) ","        it('errors if reference is not a number', function (done) ","        it('errors if context reference is not a number', function (done) ","    describe('#email', function () ","        it('throws when options are not an object', function (done) ","            expect(function () ","        it('throws when checkDNS option is enabled', function (done) ","            expect(function () ","        it('throws when tldWhitelist is not an array or object', function (done) ","            expect(function () ","        it('throws when minDomainAtoms is not a number', function (done) ","            expect(function () ","        it('throws when minDomainAtoms is not an integer', function (done) ","            expect(function () ","        it('throws when minDomainAtoms is not positive', function (done) ","            expect(function () ","        it('does not throw when minDomainAtoms is a positive integer', function (done) ","            expect(function () ","        it('throws when errorLevel is not an integer or boolean', function (done) ","            expect(function () ","        it('throws when errorLevel is negative', function (done) ","            expect(function () ","        it('does not throw when errorLevel is 0', function (done) ","            expect(function () ","    describe('#hostname', function () ","        it('validates hostnames', function (done) ","    describe('#lowercase', function () ","        it('only allows strings that are entirely lowercase', function (done) ","        it('coerce string to lowercase before validation', function (done) ","            schema.validate('UPPER TO LOWER', function (err, value) ","        it('should work in combination with a trim', function (done) ","        it('should work in combination with a replacement', function (done) ","    describe('#uppercase', function () ","        it('only allow strings that are entirely uppercase', function (done) ","        it('coerce string to uppercase before validation', function (done) ","            schema.validate('lower to upper', function (err, value) ","        it('works in combination with a forced trim', function (done) ","        it('works in combination with a forced replacement', function (done) ","    describe('#trim', function () ","        it('only allow strings that have no leading or trailing whitespace', function (done) ","        it('removes leading and trailing whitespace before validation', function (done) ","            schema.validate(' trim this ', function (err, value) ","        it('removes leading and trailing whitespace before validation', function (done) ","            schema.validate('     ', function (err, value) ","        it('should work in combination with min', function (done) ","        it('should work in combination with max', function (done) ","        it('should work in combination with length', function (done) ","        it('should work in combination with a case change', function (done) ","    describe('#replace', function () ","        it('successfully replaces the first occurrence of the expression', function (done) ","        it('successfully replaces all occurrences of the expression', function (done) ","        it('successfully replaces all occurrences of a string pattern', function (done) ","        it('successfully replaces multiple times', function (done) ","            schema.validate('a quick brown fox', function (err, value) ","        it('should work in combination with trim', function (done) ","            schema.validate(' \\u5C71\\u7530\\r\\u3000\\n\\u592A\\u90CE ', function (err, value) ","        it('should work in combination with min', function (done) ","        it('should work in combination with max', function (done) ","        it('should work in combination with length', function (done) ","    describe('#regex', function () ","        it('should not include a pattern name by default', function (done) ","            schema.validate('abcd', function (err, value) ","        it('should include a pattern name if specified', function (done) ","            schema.validate('abcd', function (err, value) ","    describe('#ip', function () ","            validIPv4sWithCidr = function (success) ","            validIPv4sWithoutCidr = function (success) ","            validIPv6sWithCidr = function (success) ","            validIPv6sWithoutCidr = function (success) ","            validIPvFuturesWithCidr = function (success) ","            validIPvFuturesWithoutCidr = function (success) ","        it('should validate all ip addresses with optional CIDR by default', function (done) ","        it('should validate all ip addresses with an optional CIDR', function (done) ","        it('should validate all ip addresses with a required CIDR', function (done) ","        it('should validate all ip addresses with a forbidden CIDR', function (done) ","        it('throws when options is not an object', function (done) ","            expect(function () ","        it('throws when options.cidr is not a string', function (done) ","            expect(function () ","        it('throws when options.cidr is not a valid value', function (done) ","            expect(function () ","        it('throws when options.version is an empty array', function (done) ","            expect(function () ","        it('throws when options.version is not a string', function (done) ","            expect(function () ","        it('throws when options.version is not a valid value', function (done) ","            expect(function () ","        it('validates ip with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        it('validates ip and cidr presence with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        it('validates custom ip version and cidr presence with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        describe('#ip( version: \"ipv4\" })', function () {","            it('should validate all ipv4 addresses with a default CIDR strategy', function (done) ","            it('should validate all ipv4 addresses with an optional CIDR', function (done) ","            it('should validate all ipv4 addresses with a required CIDR', function (done) ","            it('should validate all ipv4 addresses with a forbidden CIDR', function (done) ","        describe('#ip( version: \"ipv6\" })', function () {","            it('should validate all ipv6 addresses with a default CIDR strategy', function (done) ","            it('should validate all ipv6 addresses with an optional CIDR', function (done) ","            it('should validate all ipv6 addresses with a required CIDR', function (done) ","            it('should validate all ipv6 addresses with a forbidden CIDR', function (done) ","        describe('#ip( version: \"ipvfuture\" })', function () {","            it('should validate all ipvfuture addresses with a default CIDR strategy', function (done) ","            it('should validate all ipvfuture addresses with an optional CIDR', function (done) ","            it('should validate all ipvfuture addresses with a required CIDR', function (done) ","            it('should validate all ipvfuture addresses with a forbidden CIDR', function (done) ","        describe('#ip( version: [ \"ipv4\", \"ipv6\" ] })', function () {","            it('should validate all ipv4 and ipv6 addresses with a default CIDR strategy', function (done) ","            it('should validate all ipv4 and ipv6 addresses with an optional CIDR', function (done) ","            it('should validate all ipv4 and ipv6 addresses with a required CIDR', function (done) ","            it('should validate all ipv4 and ipv6 addresses with a forbidden CIDR', function (done) ","    describe('#validate', function () ","        it('should, by default, allow undefined, deny empty string', function (done) ","        it('should, when .required(), deny undefined, deny empty string', function (done) ","        it('should, when .required(), print a friend error message for an empty string', function (done) ","            Joi.compile(schema).validate('', function (err, value) ","        it('should, when .required(), validate non-empty strings', function (done) ","        it('validates invalid values', function (done) ","        it('should invalidate invalid values', function (done) ","        it('validates array arguments correctly', function (done) ","        it('validates minimum length when min is used', function (done) ","        it('validates minimum length when min is 0', function (done) ","        it('should return false with minimum length and a null value passed in', function (done) ","        it('null allowed overrides min length requirement', function (done) ","        it('validates maximum length when max is used', function (done) ","        it('should return true with max and not required when value is undefined', function (done) ","        it('validates length requirements', function (done) ","        it('validates regex', function (done) ","        it('validates regex (ignoring global flag)', function (done) ","        it('validates token', function (done) ","        it('validates alphanum', function (done) ","        it('validates email', function (done) ","        it('validates email with tldWhitelist as array', function (done) ","        it('validates email with tldWhitelist as object', function (done) ","        it('validates email with minDomainAtoms', function (done) ","        it('validates email with errorLevel as boolean', function (done) ","        it('validates email with errorLevel as integer', function (done) ","        it('validates email with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        it('should return false for denied value', function (done) ","            text.validate('joi', function (err, value) ","        it('should return true for allowed value', function (done) ","            text.validate('result', function (err, value) ","        it('validates with one validator (min)', function (done) ","            text.validate('joi', function (err, value) ","        it('validates with two validators (min, required)', function (done) ","            text.validate('joi', function (err, value) ","                text.validate('', function (err2, value2) ","        it('validates null with allow(null)', function (done) ","        it('validates \"\" (empty string) with allow(\\'\\')', function (done) ","        it('validates combination of required and min', function (done) ","        it('validates combination of required and max', function (done) ","        it('validates combination of allow(\\'\\') and min', function (done) ","        it('validates combination of allow(\\'\\') and max', function (done) ","        it('validates combination of null allowed and max', function (done) ","        it('validates combination of min and max', function (done) ","        it('validates combination of min, max, and allow(\\'\\')', function (done) ","        it('validates combination of min, max, and required', function (done) ","        it('validates combination of min, max, and regex', function (done) ","        it('validates combination of min, max, regex, and allow(\\'\\')', function (done) ","        it('validates combination of min, max, regex, and required', function (done) ","        it('validates combination of min, max, and alphanum', function (done) ","        it('validates combination of min, max, alphanum, and allow(\\'\\')', function (done) ","        it('validates combination of min, max, alphanum, and required', function (done) ","        it('validates combination of min, max, alphanum, and regex', function (done) ","        it('validates combination of min, max, alphanum, required, and regex', function (done) ","        it('validates combination of min, max, alphanum, allow(\\'\\'), and regex', function (done) ","        it('validates combination of email and min', function (done) ","        it('validates combination of email, min, and max', function (done) ","        it('validates combination of email, min, max, and invalid', function (done) ","        it('validates combination of email, min, max, and allow', function (done) ","        it('validates combination of email, min, max, allow, and invalid', function (done) ","        it('validates combination of email, min, max, allow, invalid, and allow(\\'\\')', function (done) ","        it('validates combination of email, min, max, allow, and allow(\\'\\')', function (done) ","        it('validates combination of email, min, max, allow, invalid, and regex', function (done) ","        it('validates combination of email, min, max, allow, invalid, regex, and allow(\\'\\')', function (done) ","        it('validates combination of email, min, max, and allow(\\'\\')', function (done) ","        it('validates combination of email, min, max, and regex', function (done) ","        it('validates combination of email, min, max, regex, and allow(\\'\\')', function (done) ","        it('validates combination of email, min, max, regex, and required', function (done) ","        it('validates uri', function (done) ","        it('validates uri with a single scheme provided', function (done) ","        it('validates uri with a single regex scheme provided', function (done) ","        it('validates uri with multiple schemes provided', function (done) ","        it('validates uri with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something invalid' }, function (err, value) {","        it('validates uri with a custom scheme with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something invalid' }, function (err, value) {","        it('validates uri with a custom array of schemes with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something invalid' }, function (err, value) {","        it('validates uri treats scheme as optional', function (done) ","            expect(function () ","        it('validates uri requires uriOptions as an object with a friendly error message', function (done) ","            expect(function () ","        it('validates uri requires scheme to be a RegExp, String, or Array with a friendly error message', function (done) ","            expect(function () ","        it('validates uri requires scheme to not be an empty array', function (done) ","            expect(function () ","        it('validates uri requires scheme to be an Array of schemes to all be valid schemes with a friendly error message', function (done) ","            expect(function () ","        it('validates uri requires scheme to be an Array of schemes to be strings or RegExp', function (done) ","            expect(function () ","        it('validates uri requires scheme to be a valid String scheme with a friendly error message', function (done) ","            expect(function () ","        it('validates isoDate', function (done) ","        it('validates isoDate with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        it('validates combination of isoDate and min', function (done) ","        it('validates combination of isoDate, min and max', function (done) ","        it('validates combination of isoDate, min, max and invalid', function (done) ","        it('validates combination of isoDate, min, max and allow', function (done) ","        it('validates combination of isoDate, min, max, allow and invalid', function (done) ","        it('validates combination of isoDate, min, max, allow, invalid and allow(\\'\\')', function (done) ","        it('validates combination of isoDate, min, max, allow, invalid and allow(\\'\\')', function (done) ","        it('validates combination of isoDate, min, max, allow, invalid and regex', function (done) ","        it('validates combination of isoDate, min, max, allow, invalid, regex and allow(\\'\\')', function (done) ","        it('validates combination of isoDate, min, max and allow(\\'\\')', function (done) ","        it('validates combination of isoDate, min, max and regex', function (done) ","        it('validates combination of isoDate, min, max, regex and allow(\\'\\')', function (done) ","        it('validates combination of isoDate, min, max, regex and required', function (done) ","        it('validates guid', function (done) ","        it('validates guid with a friendly error message', function (done) ","            Joi.compile(schema).validate( item: 'something' }, function (err, value) {","        it('validates combination of guid and min', function (done) ","        it('validates combination of guid, min and max', function (done) ","        it('validates combination of guid, min, max and invalid', function (done) ","        it('validates combination of guid, min, max and allow', function (done) ","        it('validates combination of guid, min, max, allow and invalid', function (done) ","        it('validates combination of guid, min, max, allow, invalid and allow(\\'\\')', function (done) ","        it('validates combination of guid, min, max, allow and allow(\\'\\')', function (done) ","        it('validates combination of guid, min, max, allow, invalid and regex', function (done) ","        it('validates combination of guid, min, max, allow, invalid, regex and allow(\\'\\')', function (done) ","        it('validates combination of guid, min, max and allow(\\'\\')', function (done) ","        it('validates combination of guid, min, max and regex', function (done) ","        it('validates combination of guid, min, max, regex and allow(\\'\\')', function (done) ","        it('validates combination of guid, min, max, regex and required', function (done) ","        it('validates an hexadecimal string', function (done) "],"Dependencies":["lab","code","../lib","./helper"]},{"FileName":"node_modules\\jsonwebtoken\\decode.js","LineCount":31,"CharCount":721,"Comments":["  //try parse the payload","  if(typeof payload === 'string') {","  //return header if `complete` option is enabled.  header includes claims","  //such as `kid` and `alg` used to select the key within a JWKS needed to","  //verify the signature","  if (options.complete === true) {"],"Functions":["module.exports = function (jwt, options) "],"Dependencies":["jws"]},{"FileName":"node_modules\\jsonwebtoken\\index.js","LineCount":9,"CharCount":268,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\jsonwebtoken\\lib\\JsonWebTokenError.js","LineCount":12,"CharCount":378,"Comments":[],"Functions":["var JsonWebTokenError = function (message, error) "],"Dependencies":null},{"FileName":"node_modules\\jsonwebtoken\\lib\\NotBeforeError.js","LineCount":13,"CharCount":350,"Comments":[],"Functions":["var NotBeforeError = function (message, date) "],"Dependencies":["./JsonWebTokenError"]},{"FileName":"node_modules\\jsonwebtoken\\lib\\TokenExpiredError.js","LineCount":13,"CharCount":383,"Comments":[],"Functions":["var TokenExpiredError = function (message, expiredAt) "],"Dependencies":["./JsonWebTokenError"]},{"FileName":"node_modules\\jsonwebtoken\\lib\\timespan.js","LineCount":18,"CharCount":395,"Comments":[],"Functions":["module.exports = function (time, iat) "],"Dependencies":["ms"]},{"FileName":"node_modules\\jsonwebtoken\\sign.js","LineCount":147,"CharCount":4160,"Comments":[],"Functions":["module.exports = function (payload, secretOrPrivateKey, options, callback) ","  function failure(err) ","    var invalid_options = options_for_objects.filter(function (opt) ","  Object.keys(options_to_payload).forEach(function (key) ","  if (typeof callback === 'function') ","      .once('done', function (signature) "],"Dependencies":["joi","./lib/timespan","xtend","jws","lodash.once"]},{"FileName":"node_modules\\jsonwebtoken\\test\\async_sign.tests.js","LineCount":61,"CharCount":1954,"Comments":["      //this throw an error because the secret is not a cert and RS256 requires a cert.","      jwt.sign({ foo: 'bar' }, secret, { algorithm: 'RS256' }, function (err) {","      //this throw an error because the secret is not a cert and RS256 requires a cert.","      jwt.sign({ foo: 'bar' }, secret, { notBefore: {} }, function (err) {"],"Functions":["describe('signing a token asynchronously', function() ","  describe('when signing a token', function() ","    it('should return the same result as singing synchronously', function(done) ","      jwt.sign( foo: 'bar' }, secret, { algorithm: 'HS256' }, function (err, asyncToken) {","    it('should work', function (done) ","      jwt.sign(abc: 1}, \"secret\", {}, function (err, res) {","    it('should return error when secret is not a cert for RS256', function(done) ","      jwt.sign( foo: 'bar' }, secret, { algorithm: 'RS256' }, function (err) {","    it('should return error on wrong arguments', function(done) ","      jwt.sign( foo: 'bar' }, secret, { notBefore: {} }, function (err) {","    it('should return error on wrong arguments (2)', function(done) ","      jwt.sign('string', 'secret', noTimestamp: true}, function (err) {","    it('should not stringify the payload', function (done) ","      jwt.sign('string', 'secret', }, function (err, token) {"],"Dependencies":["../index","chai","jws"]},{"FileName":"node_modules\\jsonwebtoken\\test\\buffer.tests.js","LineCount":11,"CharCount":315,"Comments":[],"Functions":["describe('buffer payload', function () ","  it('should work', function () "],"Dependencies":["../.","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\encoding.tests.js","LineCount":38,"CharCount":1017,"Comments":[],"Functions":["describe('encoding', function() ","  function b64_to_utf8 (str) ","  it('should properly encode the token (utf8)', function () ","  it('should properly encode the token (binary)', function () ","  it('should return the same result when decoding', function () "],"Dependencies":["../index","chai","atob"]},{"FileName":"node_modules\\jsonwebtoken\\test\\expires_format.tests.js","LineCount":54,"CharCount":1931,"Comments":[],"Functions":["describe('expires option', function() ","  it('should work with a number of seconds', function () ","  it('should work with a string', function () ","  it('should work with a string second example', function () ","  it('should throw if expires has a bad string format', function () ","    expect(function () ","  it('should throw if expires is not an string or number', function () ","    expect(function () ","  it('should throw an error if expiresIn and exp are provided', function () ","    expect(function () ","  it('should throw on deprecated expiresInSeconds option', function () ","    expect(function () "],"Dependencies":["../index","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\iat.tests.js","LineCount":22,"CharCount":632,"Comments":[],"Functions":["describe('iat', function () ","  it('should work with a exp calculated based on numeric iat', function () ","  it('should throw if iat is not a number', function () ","    expect(function () "],"Dependencies":["../index","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\invalid_exp.tests.js","LineCount":58,"CharCount":1744,"Comments":[],"Functions":["describe('invalid expiration', function() ","  it('should fail with string', function (done) ","    jwt.verify(broken_token, '123', function (err, decoded) ","  it('should fail with 0', function (done) ","    jwt.verify(broken_token, '123', function (err) ","  it('should fail with false', function (done) ","    jwt.verify(broken_token, '123', function (err) ","  it('should fail with true', function (done) ","    jwt.verify(broken_token, '123', function (err) ","  it('should fail with object', function (done) ","    jwt.verify(broken_token, '123', function (err) "],"Dependencies":["../index","chai","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\issue_147.tests.js","LineCount":12,"CharCount":389,"Comments":[],"Functions":["describe('issue 147 - signing with a sealed payload', function() ","  it('should put the expiration claim', function () "],"Dependencies":["../index","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\issue_196.tests.js","LineCount":16,"CharCount":447,"Comments":[],"Functions":["describe('issue 196', function () ","  function b64_to_utf8 (str) ","  it('should use issuer provided in payload.iss', function () "],"Dependencies":["chai","./..","atob"]},{"FileName":"node_modules\\jsonwebtoken\\test\\issue_70.tests.js","LineCount":15,"CharCount":419,"Comments":[],"Functions":["describe('issue 70 - public key start with BEING PUBLIC KEY', function () ","  it('should work', function (done) "],"Dependencies":["../","fs"]},{"FileName":"node_modules\\jsonwebtoken\\test\\jwt.hs.tests.js","LineCount":83,"CharCount":2488,"Comments":[],"Functions":["describe('HS256', function() ","  describe('when signing a token', function() ","    it('should be syntactically valid', function() ","    it('should without options', function(done) ","      var callback = function(err, decoded) ","    it('should validate with secret', function(done) ","      jwt.verify(token, secret, function(err, decoded) ","    it('should throw with invalid secret', function(done) ","      jwt.verify(token, 'invalid secret', function(err, decoded) ","    it('should throw with secret and token not signed', function(done) ","      jwt.verify(unsigned, 'secret', function(err, decoded) ","    it('should throw when verifying null', function(done) ","      jwt.verify(null, 'secret', function(err, decoded) ","    it('should return an error when the token is expired', function(done) ","      jwt.verify(token, secret,  algorithm: 'HS256' }, function(err, decoded) {","    it('should NOT return an error when the token is expired with \"ignoreExpiration\"', function(done) ","      jwt.verify(token, secret,  algorithm: 'HS256', ignoreExpiration: true }, function(err, decoded) {"],"Dependencies":["../index","chai","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\jwt.rs.tests.js","LineCount":424,"CharCount":13434,"Comments":["      // expired token","      token = jwt.sign({ foo: 'bar' }, priv, { algorithm: 'RS256', expiresIn: -1 * ms('10m') });","      // expired token","      token = jwt.sign({ foo: 'bar' }, priv, { algorithm: 'RS256', expiresIn: -1 * ms('10m') });","      // not active token","      token = jwt.sign({ foo: 'bar' }, priv, { algorithm: 'RS256', notBefore: '10m' });","      // not active token","      token = jwt.sign({ foo: 'bar' }, priv, { algorithm: 'RS256', notBefore: '10m' });"],"Functions":["describe('RS256', function() ","  describe('when signing a token', function() ","    it('should be syntactically valid', function() ","    context('asynchronous', function() ","      it('should validate with public key', function(done) ","        jwt.verify(token, pub, function(err, decoded) ","      it('should throw with invalid public key', function(done) ","        jwt.verify(token, invalid_pub, function(err, decoded) ","    context('synchronous', function() ","      it('should validate with public key', function() ","      it('should throw with invalid public key', function() ","  describe('when signing a token with expiration', function() ","    it('should be valid expiration', function(done) ","      jwt.verify(token, pub, function(err, decoded) ","    it('should be invalid', function(done) ","      jwt.verify(token, pub, function(err, decoded) ","    it('should NOT be invalid', function(done) ","      jwt.verify(token, pub,  ignoreExpiration: true }, function(err, decoded) {","  describe('when signing a token with not before', function() ","    it('should be valid expiration', function(done) ","      jwt.verify(token, pub, function(err, decoded) ","    it('should be invalid', function(done) ","      jwt.verify(token, pub, function(err, decoded) ","    it('should valid when date are equals', function(done) ","      jwt.verify(token, pub, function(err, decoded) ","    it('should NOT be invalid', function(done) ","      jwt.verify(token, pub,  ignoreNotBefore: true }, function(err, decoded) {","  describe('when signing a token with audience', function() ","    it('should check audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:foo' }, function(err, decoded) {","    it('should check audience in array', function(done) ","      jwt.verify(token, pub,  audience: ['urn:foo', 'urn:other'] }, function (err, decoded) {","    it('should throw when invalid audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:wrong' }, function(err, decoded) {","    it('should throw when invalid audience in array', function(done) ","      jwt.verify(token, pub,  audience: ['urn:wrong', 'urn:morewrong'] }, function(err, decoded) {","  describe('when signing a token with array audience', function() ","    it('should check audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:foo' }, function(err, decoded) {","    it('should check other audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:bar' }, function(err, decoded) {","    it('should check audience in array', function(done) ","      jwt.verify(token, pub,  audience: ['urn:foo', 'urn:other'] }, function (err, decoded) {","    it('should throw when invalid audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:wrong' }, function(err, decoded) {","    it('should throw when invalid audience in array', function(done) ","      jwt.verify(token, pub,  audience: ['urn:wrong', 'urn:morewrong'] }, function(err, decoded) {","  describe('when signing a token without audience', function() ","    it('should check audience', function(done) ","      jwt.verify(token, pub,  audience: 'urn:wrong' }, function(err, decoded) {","    it('should check audience in array', function(done) ","      jwt.verify(token, pub,  audience: ['urn:wrong', 'urn:morewrong'] }, function(err, decoded) {","  describe('when signing a token with issuer', function() ","    it('should check issuer', function(done) ","      jwt.verify(token, pub,  issuer: 'urn:foo' }, function(err, decoded) {","    it('should check the issuer when providing a list of valid issuers', function(done) ","      jwt.verify(token, pub,  issuer: [ 'urn:foo', 'urn:bar' ] }, function(err, decoded) {","    it('should throw when invalid issuer', function(done) ","      jwt.verify(token, pub,  issuer: 'urn:wrong' }, function(err, decoded) {","  describe('when signing a token without issuer', function() ","    it('should check issuer', function(done) ","      jwt.verify(token, pub,  issuer: 'urn:foo' }, function(err, decoded) {","  describe('when signing a token with subject', function() ","    it('should check subject', function(done) ","      jwt.verify(token, pub,  subject: 'subject' }, function(err, decoded) {","    it('should throw when invalid subject', function(done) ","      jwt.verify(token, pub,  subject: 'wrongSubject' }, function(err, decoded) {","  describe('when signing a token without subject', function() ","    it('should check subject', function(done) ","      jwt.verify(token, pub,  subject: 'subject' }, function(err, decoded) {","  describe('when signing a token with jwt id', function() ","    it('should check jwt id', function(done) ","      jwt.verify(token, pub,  jwtid: 'jwtid' }, function(err, decoded) {","    it('should throw when invalid jwt id', function(done) ","      jwt.verify(token, pub,  jwtid: 'wrongJwtid' }, function(err, decoded) {","  describe('when signing a token without jwt id', function() ","    it('should check jwt id', function(done) ","      jwt.verify(token, pub,  jwtid: 'jwtid' }, function(err, decoded) {","  describe('when verifying a malformed token', function() ","    it('should throw', function(done) ","      jwt.verify('fruit.fruit.fruit', pub, function(err, decoded) ","  describe('when decoding a jwt token with additional parts', function() ","    it('should throw', function(done) ","      jwt.verify(token + '.foo', pub, function(err, decoded) ","  describe('when decoding a invalid jwt token', function() ","    it('should return null', function(done) ","  describe('when decoding a valid jwt token', function() ","    it('should return the payload', function(done) ","    it('should return the header and payload and signature if complete option is set', function(done) "],"Dependencies":["../index","fs","path","chai","chai","ms"]},{"FileName":"node_modules\\jsonwebtoken\\test\\noTimestamp.tests.js","LineCount":13,"CharCount":364,"Comments":[],"Functions":["describe('noTimestamp', function() ","  it('should work with string', function () "],"Dependencies":["../index","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\non_object_values.tests.js","LineCount":34,"CharCount":983,"Comments":["  //v6 version will throw in this case:","  it('should throw with expiresIn', function () {"],"Functions":["describe('non_object_values values', function() ","  it('should work with string', function () ","  it('should throw with expiresIn', function () ","    expect(function () ","  it('should fail to validate audience when the payload is string', function () ","    expect(function () ","  it('should work with number', function () "],"Dependencies":["../index","chai","../lib/JsonWebTokenError"]},{"FileName":"node_modules\\jsonwebtoken\\test\\rsa-public-key.tests.js","LineCount":16,"CharCount":416,"Comments":[],"Functions":["describe('public key start with BEGIN RSA PUBLIC KEY', function () ","  it('should work', function (done) "],"Dependencies":["../","fs"]},{"FileName":"node_modules\\jsonwebtoken\\test\\set_headers.tests.js","LineCount":19,"CharCount":559,"Comments":[],"Functions":["describe('set header', function() ","  it('should add the header', function () ","  it('should allow overriding header', function () "],"Dependencies":["../index","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\undefined_secretOrPublickey.tests.js","LineCount":20,"CharCount":682,"Comments":[],"Functions":["describe('verifying without specified secret or public key', function () ","  it('should not verify null', function () ","    expect(function () ","  it('should not verify undefined', function () ","    expect(function () "],"Dependencies":["fs","../index","../lib/JsonWebTokenError","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\util\\fakeDate.js","LineCount":32,"CharCount":562,"Comments":["/*"," * fix new Date() to a fixed unix timestamp."," */","global.Date.fix = function (timestamp) {"],"Functions":["global.Date.fix = function (timestamp) ","  global.Date = function (ts) ","  global.Date.prototype.now = function () ","  global.Date.now = function () ","  global.Date.unfix = function () "],"Dependencies":null},{"FileName":"node_modules\\jsonwebtoken\\test\\verify.tests.js","LineCount":195,"CharCount":6277,"Comments":["    // { foo: 'bar', iat: 1437018582, exp: 1437018583 }","    var token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmb28iOiJiYXIiLCJpYXQiOjE0MzcwMTg1ODIsImV4cCI6MTQzNzAxODU4M30.NmMv7sXjM1dW0eALNXud8LoXknZ0mH14GtnFclwJv0s';","          // maxAge not exceded, but still expired","          assert.equal(err.name, 'TokenExpiredError');"],"Functions":["describe('verify', function() ","  it('should first assume JSON claim set', function (done) ","    jwt.verify(signed, pub, typ: 'JWT'}, function(err, p) {","  it('should be able to validate unsigned token', function (done) ","    jwt.verify(signed, null, typ: 'JWT'}, function(err, p) {","  it('should not mutate options', function (done) ","    jwt.verify(signed, null, options, function(err) ","  describe('expiration', function () ","    afterEach(function () ","    it('should error on expired token', function (done) ","      jwt.verify(token, key, options, function (err, p) ","    it('should not error on expired token within clockTolerance interval', function (done) ","      jwt.verify(token, key, options, function (err, p) ","    it('should not error if within maxAge timespan', function (done) ","      jwt.verify(token, key, options, function (err, p) ","    describe('option: maxAge', function () ","      it('should error for claims issued before a certain timespan', function (done) ","        jwt.verify(token, key, options, function (err, p) ","      it('should not error for claims issued before a certain timespan but still inside clockTolerance timespan', function (done) ","        jwt.verify(token, key, options, function (err, p) ","      it('should not error if within maxAge timespan', function (done) ","        jwt.verify(token, key, options, function (err, p) ","      it('can be more restrictive than expiration', function (done) ","        jwt.verify(token, key, options, function (err, p) ","      it('cannot be more permissive than expiration', function (done) ","        jwt.verify(token, key, options, function (err, p) ","      it('should error if maxAge is specified but there is no iat claim', function (done) ","        jwt.verify(token, key, options, function (err, p) "],"Dependencies":["../index","jws","fs","path","sinon","chai"]},{"FileName":"node_modules\\jsonwebtoken\\test\\wrong_alg.tests.js","LineCount":43,"CharCount":1381,"Comments":["// priv is never used","// var priv = fs.readFileSync(path.join(__dirname, 'priv.pem'));","","var TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmb28iOiJiYXIiLCJpYXQiOjE0MjY1NDY5MTl9.ETgkTn8BaxIX4YqvUWVFPmum3moNZ7oARZtSBXb_vP4';"],"Functions":["describe('when setting a wrong `header.alg`', function () ","  describe('signing with pub key as symmetric', function () ","    it('should not verify', function () ","      expect(function () ","  describe('signing with pub key as HS256 and whitelisting only RS256', function () ","    it('should not verify', function () ","      expect(function () ","  describe('signing with HS256 and checking with HS384', function () ","    it('should not verify', function () ","      expect(function () "],"Dependencies":["fs","path","../index","../lib/JsonWebTokenError","chai"]},{"FileName":"node_modules\\jsonwebtoken\\verify.js","LineCount":169,"CharCount":4826,"Comments":["  //clone this object since we are going to mutate it.","  options = xtend(options);"],"Functions":["module.exports = function (jwtString, secretOrPublicKey, options, callback) ","  if ((typeof options === 'function') \u0026\u0026 !callback) ","    done = function() ","      return process.nextTick(function() ","    done = function(err, data) ","    var match = target.some(function(aud)  return audiences.indexOf(aud) != -1; });"],"Dependencies":["./lib/JsonWebTokenError","./lib/NotBeforeError","./lib/TokenExpiredError","./decode","jws","ms","xtend"]},{"FileName":"node_modules\\jwa\\index.js","LineCount":125,"CharCount":3667,"Comments":["    // Even though we are specifying \"RSA\" here, this works with ECDSA","    // keys as well.","    var signer = crypto.createSign('RSA-SHA' + bits);"],"Functions":["function typeError(template) ","function bufferOrString(obj) ","function normalizeInput(thing) ","function createHmacSigner(bits) ","  return function sign(thing, secret) ","function createHmacVerifier(bits) ","  return function verify(thing, signature, secret) ","function createKeySigner(bits) "," return function sign(thing, privateKey) ","function createKeyVerifier(bits) ","  return function verify(thing, signature, publicKey) ","function createECDSASigner(bits) ","  return function sign() ","function createECDSAVerifer(bits) ","  return function verify(thing, signature, publicKey) ","function createNoneSigner() ","  return function sign() ","function createNoneVerifier() ","  return function verify(thing, signature) ","module.exports = function jwa(algorithm) "],"Dependencies":["buffer-equal-constant-time","base64url","crypto","ecdsa-sig-formatter","util"]},{"FileName":"node_modules\\jwa\\test\\jwa.test.js","LineCount":306,"CharCount":9799,"Comments":["// these key files will be generated as part of `make test`","const rsaPrivateKey = fs.readFileSync(__dirname + '/rsa-private.pem').toString();","// run only on nodejs version \u003e= 0.11.8 ","if (semver.gte(nodeVersion, '0.11.8')) {"],"Functions":["test('HMAC signing, verifying', function (t) ","  BIT_DEPTHS.forEach(function (bits) ","test('RSA signing, verifying', function (t) ","  BIT_DEPTHS.forEach(function (bits) ","  test('RSA with passphrase signing, verifying', function (t) ","  BIT_DEPTHS.forEach(function (bits) ","BIT_DEPTHS.forEach(function (bits) ","  test('RS'+bits+': openssl sign -\u003e js verify', function (t) ","    dgst.stdout.on('data', function (buf) ","    dgst.on('exit', function (code) ","BIT_DEPTHS.forEach(function (bits) ","  test('ES'+bits+': signing, verifying', function (t) ","BIT_DEPTHS.forEach(function (bits) ","  test('ES'+bits+': openssl sign -\u003e js verify', function (t) ","    dgst.stdout.on('data', function (buf) ","    dgst.on('exit', function (code) ","BIT_DEPTHS.forEach(function (bits) ","  function opensslVerify(keyfile) ","  test('ES'+bits+': js sign -\u003e openssl verify', function (t) ","    opensslVerify(publicKeyFile).on('exit', function (code) ","    opensslVerify(wrongPublicKeyFile).on('exit', function (code) ","BIT_DEPTHS.forEach(function (bits) ","  function opensslVerify(keyfile) ","  test('RS'+bits+': js sign -\u003e openssl verify', function (t) ","    opensslVerify(publicKeyFile).on('exit', function (code) ","    opensslVerify(wrongPublicKeyFile).on('exit', function (code) ","test('jwa: none', function (t) ","test('jwa: some garbage algorithm', function (t) ","['ahs256b', 'anoneb', 'none256', 'rsnone'].forEach(function (superstringAlg) ","  test('jwa: superstrings of other algorithms', function (t) ","['rs', 'es', 'hs'].forEach(function (partialAlg) ","  test('jwa: partial strings of other algorithms', function (t) ","test('jwa: hs512, missing secret', function (t) ","test('jwa: hs512, weird input type', function (t) ","test('jwa: rs512, weird input type', function (t) ","test('jwa: rs512, missing signing key', function (t) ","test('jwa: rs512, missing verifying key', function (t) "],"Dependencies":["path","base64url","ecdsa-sig-formatter","child_process","semver","fs","tap",".."]},{"FileName":"node_modules\\jws\\index.js","LineCount":22,"CharCount":559,"Comments":["/*global exports*/","var SignStream = require('./lib/sign-stream');"],"Functions":["exports.createSign = function createSign(opts) ","exports.createVerify = function createVerify(opts) "],"Dependencies":["./lib/sign-stream","./lib/verify-stream"]},{"FileName":"node_modules\\jws\\lib\\data-stream.js","LineCount":56,"CharCount":1173,"Comments":["/*global module, process*/","var Buffer = require('buffer').Buffer;","  // No input","  if (!data) {","  // Stream","  if (typeof data.pipe === 'function') {","  // Buffer or String","  // or Object (assumedly a passworded key)","  if (data.length || typeof data === 'object') {"],"Functions":["function DataStream(data) ","  if (typeof data.pipe === 'function') ","    process.nextTick(function () ","DataStream.prototype.write = function write(data) ","DataStream.prototype.end = function end(data) "],"Dependencies":["buffer","stream","util"]},{"FileName":"node_modules\\jws\\lib\\sign-stream.js","LineCount":70,"CharCount":1938,"Comments":["/*global module*/","var base64url = require('base64url');"],"Functions":["function jwsSecuredInput(header, payload, encoding) ","function jwsSign(opts) ","function SignStream(opts) ","  this.secret.once('close', function () ","  this.payload.once('close', function () ","SignStream.prototype.sign = function sign() "],"Dependencies":["base64url","./data-stream","jwa","stream","./tostring","util"]},{"FileName":"node_modules\\jws\\lib\\tostring.js","LineCount":11,"CharCount":252,"Comments":["/*global module*/","var Buffer = require('buffer').Buffer;"],"Functions":["module.exports = function toString(obj) "],"Dependencies":["buffer"]},{"FileName":"node_modules\\jws\\lib\\verify-stream.js","LineCount":121,"CharCount":3072,"Comments":["/*global module*/","var base64url = require('base64url');"],"Functions":["function isObject(thing) ","function safeJsonParse(thing) ","function headerFromJWS(jwsSig) ","function securedInputFromJWS(jwsSig) ","function signatureFromJWS(jwsSig) ","function payloadFromJWS(jwsSig, encoding) ","function isValidJws(string) ","function jwsVerify(jwsSig, algorithm, secretOrKey) ","function jwsDecode(jwsSig, opts) ","function VerifyStream(opts) ","  this.secret.once('close', function () ","  this.signature.once('close', function () ","VerifyStream.prototype.verify = function verify() "],"Dependencies":["base64url","./data-stream","jwa","stream","./tostring","util"]},{"FileName":"node_modules\\jws\\test\\jws.test.js","LineCount":322,"CharCount":9919,"Comments":["/*global process*/","const Buffer = require('buffer').Buffer;","    signature: 'a.b.c', // the short/invalid length signature will make jwa throw","    publicKey: 'invalid-key-will-make-crypto-throw'","  t.same(jws.decode('http://sub.domain.org'), null);","  t.end();","  t.same(jws.isValid('http://sub.domain.org'), false);","  t.same(jws.isValid(invalid), false);"],"Functions":["function readfile(path) ","function readstream(path) ","BITS.forEach(function (bits) ","  test('HMAC using SHA-'+bits+' hash algorithm', function (t) ","BITS.forEach(function (bits) ","  test('RSASSA using SHA-'+bits+' hash algorithm', function (t) ","BITS.forEach(function (bits) ","  test('ECDSA using P-'+curve+' curve and SHA-'+bits+' hash algorithm', function (t) ","test('No digital signature or MAC value included', function (t) ","test('Streaming sign: HMAC', function (t) ","  sig.on('done', function (signature) ","test('Streaming sign: RSA', function (t) ","  process.nextTick(function () ","  sig.on('done', function (signature) ","test('Streaming sign: RSA, predefined streams', function (t) ","  sig.on('done', function (signature) ","test('Streaming verify: ECDSA', function (t) ","  verifier.on('done', function (valid) ","test('Streaming verify: ECDSA, with invalid key', function (t) ","  verifier.on('done', function (valid) ","test('Streaming verify: errors during verify should emit as \"error\"', function (t) ","  verifierShouldError.on('done', function () ","  verifierShouldError.on('error', function () ","  test('Signing: should accept an encrypted key', function (t) ","  test('Streaming sign: should accept an encrypted key', function (t) ","    verifier.on('done', function (verified) ","test('jws.decode: not a jws signature', function (t) ","test('jws.decode: with a bogus header ', function (t) ","test('jws.verify: missing or invalid algorithm', function (t) ","test('jws.isValid', function (t) ","  const invalid = (function()"],"Dependencies":["buffer","fs","tape","..","semver","semver\").gte(NODE_VERSION,\"0.11.8"]},{"FileName":"node_modules\\kareem\\docs.js","LineCount":38,"CharCount":1572,"Comments":["  '  [![Build Status](https://travis-ci.org/vkarpov15/kareem.svg?branch=master)](https://travis-ci.org/vkarpov15/kareem)\\n' +","  '  [![Coverage Status](https://img.shields.io/coveralls/vkarpov15/kareem.svg)](https://coveralls.io/r/vkarpov15/kareem)\\n\\n' +","  'Re-imagined take on the [hooks](http://npmjs.org/package/hooks) module, ' +","  'meant to offer additional flexibility in allowing you to execute hooks ' +","  'for his mastery of the [hook shot](http://en.wikipedia.org/wiki/Kareem_Abdul-Jabbar#Skyhook)\\n\\n' +","  '\u003cimg src=\"http://upload.wikimedia.org/wikipedia/commons/0/00/Kareem-Abdul-Jabbar_Lipofsky.jpg\" width=\"220\"\u003e\\n\\n' +","  '# API\\n\\n';"],"Functions":["  'whenever necessary, as opposed to simply wrapping a single function.\\n\\n' +"],"Dependencies":["acquit","fs\").readFileSync(\"./test/examples.test.js"]},{"FileName":"node_modules\\kareem\\gulpfile.js","LineCount":19,"CharCount":412,"Comments":["  return gulp.src('./test/*').","    pipe(mocha({ reporter: 'dot' }));","});","","gulp.task('jscs', function() {","  return gulp.src('./index.js').","    pipe(jscs(config.jscsConfig));","});","","gulp.task('watch', function() {","  gulp.watch('./index.js', ['jscs', 'mocha']);","});",""],"Functions":["gulp.task('mocha', function() ","gulp.task('jscs', function() ","gulp.task('watch', function() "],"Dependencies":["gulp","gulp-mocha","./package.json","gulp-jscs"]},{"FileName":"node_modules\\kareem\\index.js","LineCount":313,"CharCount":7206,"Comments":["            // Leave parallel hooks to run","            return;","          // Leave parallel hooks to run","          return;","        // Skip error handlers if no error","        if (++currentPost \u003e= numPosts) {","    // Filter out trailing undefineds","    for (var i = args.length; i \u003e= 0; --i) {","        // Assume error","        return _handleWrapError(_this, arguments[0], name, context,"],"Functions":["function Kareem() ","Kareem.prototype.execPre = function(name, context, callback) ","    return process.nextTick(function() ","  var next = function() ","        function(error) ","        function(error) ","      var args = [function(error) ","          return process.nextTick(function() ","Kareem.prototype.execPreSync = function(name, context) ","Kareem.prototype.execPost = function(name, context, args, options, callback) ","    return process.nextTick(function() ","  var next = function() ","        post.apply(context, [firstError].concat(args).concat(function(error) ","        post.apply(context, args.concat(function(error) ","Kareem.prototype.execPostSync = function(name, context) ","function _handleWrapError(instance, error, name, context, args, options, callback) ","    return instance.execPost(name, context, newArgs, _options, function(error) ","      return typeof callback === 'function' \u0026\u0026 callback(error);","    return typeof callback === 'function' ?","Kareem.prototype.wrap = function(name, fn, context, args, options) ","  var argsWithoutCb = typeof lastArg === 'function' ?","  this.execPre(name, context, function(error) ","    var end = (typeof lastArg === 'function' ? args.length - 1 : args.length);","    fn.apply(context, args.slice(0, end).concat(function() ","        if (useLegacyPost \u0026\u0026 typeof lastArg === 'function') ","        _this.execPost(name, context, argsWithoutError, function() ","            return typeof lastArg === 'function' ?","          return typeof lastArg === 'function' \u0026\u0026 !useLegacyPost ?","Kareem.prototype.createWrapper = function(name, fn, context, options) ","  return function() ","Kareem.prototype.pre = function(name, isAsync, fn, error) ","Kareem.prototype.post = function(name, fn) ","Kareem.prototype.clone = function() "],"Dependencies":null},{"FileName":"node_modules\\kareem\\test\\examples.test.js","LineCount":340,"CharCount":7587,"Comments":["/* Much like [hooks](https://npmjs.org/package/hooks), kareem lets you define"," * pre and post hooks: pre hooks are called before a given function executes."," * Unlike hooks, kareem stores hooks and other internal state in a separate"," * object, rather than relying on inheritance. Furthermore, kareem exposes"," * an `execPre()` function that allows you to execute your pre hooks when"," * appropriate, giving you more fine-grained control over your function hooks."," */","describe('pre hooks', function() {","  /* pre hook functions take one parameter, a \"done\" function that you execute","   * when your pre hook is finished.","   */","  it('runs basic serial pre hooks', function(done) {","  /* If your pre hook function takes no parameters, its assumed to be","   * fully synchronous.","   */","  it('can run fully synchronous pre hooks', function(done) {","  /* Pre save hook functions are bound to the second parameter to `execPre()`","   */","  it('properly attaches context to pre hooks', function(done) {","    // In the pre hooks, `this` will refer to `obj`","    hooks.execPre('cook', obj, function(error) {","  /* Like the hooks module, you can declare \"async\" pre hooks - these take two","   * parameters, the functions `next()` and `done()`. `next()` passes control to","   * the next pre hook, but the underlying function won't be called until all","   * async pre hooks have called `done()`.","   */","  it('can execute parallel (async) pre hooks', function(done) {"],"Functions":[" * pre and post hooks: pre hooks are called before a given function executes."," * an `execPre()` function that allows you to execute your pre hooks when"," * appropriate, giving you more fine-grained control over your function hooks.","describe('pre hooks', function() ","  beforeEach(function() ","  it('runs without any hooks specified', function(done) ","    hooks.execPre('cook', null, function() ","  /* pre hook functions take one parameter, a \"done\" function that you execute","  it('runs basic serial pre hooks', function(done) ","    hooks.pre('cook', function(done) ","    hooks.execPre('cook', null, function() ","  it('can run multipe pre hooks', function(done) ","    hooks.pre('cook', function(done) ","    hooks.pre('cook', function(done) ","    hooks.execPre('cook', null, function() ","  /* If your pre hook function takes no parameters, its assumed to be","  it('can run fully synchronous pre hooks', function(done) ","    hooks.pre('cook', function() ","    hooks.pre('cook', function() ","    hooks.execPre('cook', null, function(error) ","  /* Pre save hook functions are bound to the second parameter to `execPre()`","  it('properly attaches context to pre hooks', function(done) ","    hooks.pre('cook', function(done) ","    hooks.pre('cook', function(done) ","    hooks.execPre('cook', obj, function(error) ","   * parameters, the functions `next()` and `done()`. `next()` passes control to","   * the next pre hook, but the underlying function won't be called until all","  it('can execute parallel (async) pre hooks', function(done) ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', function(next) ","    hooks.execPre('cook', obj, function() ","describe('post hooks', function() ","  beforeEach(function() ","  it('runs without any hooks specified', function(done) ","    hooks.execPost('cook', null, [1], function(error, eggs) ","  it('executes with parameters passed in', function(done) ","    hooks.post('cook', function(eggs, bacon, callback) ","    hooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) ","  it('can use synchronous post hooks', function(done) ","    hooks.post('cook', function(eggs, bacon) ","    hooks.post('cook', function(eggs, bacon, callback) ","    hooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) ","describe('wrap()', function() ","  beforeEach(function() ","  it('wraps pre and post calls into one call', function(done) ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', function(next) ","    hooks.post('cook', function(obj) ","    args.push(function(error, result) ","      function(o, callback) ","describe('createWrapper()', function() ","  beforeEach(function() ","  it('wraps wrap() into a callable function', function(done) ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', true, function(next, done) ","      setTimeout(function() ","    hooks.pre('cook', function(next) ","    hooks.post('cook', function(obj) ","      function(o, callback) ","    cook(obj, function(error, result) ","describe('clone()', function() ","  it('clones a Kareem object', function() ","    k1.pre('cook', function() });","    k1.post('cook', function() });"],"Dependencies":["assert","../"]},{"FileName":"node_modules\\kareem\\test\\post.test.js","LineCount":156,"CharCount":3338,"Comments":[],"Functions":["describe('execPost', function() ","  beforeEach(function() ","  it('handles errors', function(done) ","    hooks.post('cook', function(eggs, callback) ","    hooks.execPost('cook', null, [4], function(error, eggs) ","  it('multiple posts', function(done) ","    hooks.post('cook', function(eggs, callback) ","        function() ","    hooks.post('cook', function(eggs, callback) ","        function() ","    hooks.execPost('cook', null, [4], function(error, eggs) ","  it('error posts', function(done) ","    hooks.post('cook', function(eggs, callback) ","    hooks.post('cook', function(eggs, callback) ","    hooks.post('cook', function(eggs, callback) ","    hooks.post('cook', function(error, eggs, callback) ","    hooks.post('cook', function(error, eggs, callback) ","    hooks.execPost('cook', null, [4], function(error, eggs) ","  it('error posts with initial error', function(done) ","    hooks.post('cook', function(eggs, callback) ","    hooks.post('cook', function(error, eggs, callback) ","    hooks.post('cook', function(error, eggs, callback) ","    hooks.post('cook', function(error, eggs, callback) ","    hooks.execPost('cook', null, [4], options, function(error, eggs) ","describe('execPostSync', function() ","  beforeEach(function() ","  it('executes hooks synchronously', function() ","    hooks.post('cook', function() ","    hooks.post('cook', function() ","  it('works with no hooks specified', function() ","    assert.doesNotThrow(function() "],"Dependencies":["assert","../"]},{"FileName":"node_modules\\kareem\\test\\pre.test.js","LineCount":257,"CharCount":5128,"Comments":[],"Functions":["describe('execPre', function() ","  beforeEach(function() ","  it('handles errors with multiple pres', function(done) ","    hooks.pre('cook', function(done) ","    hooks.pre('cook', function(done) ","    hooks.pre('cook', function(done) ","    hooks.execPre('cook', null, function(err) ","  it('handles async errors', function(done) ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.execPre('cook', null, function(err) ","  it('handles async errors in next()', function(done) ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.execPre('cook', null, function(err) ","  it('handles async errors in next() when already done', function(done) ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.execPre('cook', null, function(err) ","  it('returns correct error when async pre errors', function(done) ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.pre('cook', function(next) ","        function() ","    hooks.execPre('cook', null, function(err) ","  it('lets async pres run when fully sync pres are done', function(done) ","    hooks.pre('cook', true, function(next, done) ","        function() ","    hooks.pre('cook', function() ","    hooks.execPre('cook', null, function(err) ","  it('allows passing arguments to the next pre', function(done) ","    hooks.pre('cook', function(next) ","    hooks.pre('cook', function(next, p) ","    hooks.pre('cook', function(next, p) ","    hooks.execPre('cook', null, function(err) ","describe('execPreSync', function() ","  beforeEach(function() ","  it('executes hooks synchronously', function() ","    hooks.pre('cook', function() ","    hooks.pre('cook', function() ","  it('works with no hooks specified', function() ","    assert.doesNotThrow(function() "],"Dependencies":["assert","../"]},{"FileName":"node_modules\\kareem\\test\\wrap.test.js","LineCount":348,"CharCount":6141,"Comments":["        // Should never get called","        assert.ok(false);","        // Should never get called","        assert.ok(false);"],"Functions":["describe('wrap()', function() ","  beforeEach(function() ","  it('handles pre errors', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(obj) ","    args.push(function(error, result) ","      function(o, callback) ","  it('handles pre errors when no callback defined', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(obj) ","      function(o, callback) ","      function() ","  it('handles errors in wrapped function', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(obj) ","    args.push(function(error, result) ","      function(o, callback) ","  it('handles errors in post', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(obj, callback) ","    args.push(function(error, result) ","      function(o, callback) ","  it('defers errors to post hooks if enabled', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(error, callback) ","    args.push(function(error) ","      function(callback) ","  it('error handlers with no callback', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(error, callback) ","      function(callback) ","  it('error handlers with no error', function(done) ","    hooks.post('cook', function(error, callback) ","    args.push(function(error) ","      function(callback) ","  it('works with no args', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(callback) ","      function(callback) ","      function() ","  it('handles pre errors with no args', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(callback) ","      function(callback) ","      function() ","  it('handles wrapped function errors with no args', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(callback) ","      function(callback) ","      function() ","  it('handles post errors with no args', function(done) ","    hooks.pre('cook', function(done) ","    hooks.post('cook', function(callback) ","      function(callback) ","      function() ","  it('can use legacy post behavior', function(done) ","    hooks.post('cook', function(callback) ","    var args = [function(error) ","      setTimeout(function() ","      function(callback) "],"Dependencies":["assert","../"]},{"FileName":"node_modules\\lodash.once\\index.js","LineCount":295,"CharCount":6800,"Comments":["/**"," * lodash (Custom Build) \u003chttps://lodash.com/\u003e"," * Build: `lodash modularize exports=\"npm\" -o ./`"," * Copyright jQuery Foundation and other contributors \u003chttps://jquery.org/\u003e"," * Released under MIT license \u003chttps://lodash.com/license\u003e"," * Based on Underscore.js 1.8.3 \u003chttp://underscorejs.org/LICENSE\u003e"," * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters \u0026 Editors"," */","","/** Used as the `TypeError` message for \"Functions\" methods. */","var FUNC_ERROR_TEXT = 'Expected a function';","/** Used as references for various `Number` constants. */","var INFINITY = 1 / 0,","/** `Object#toString` result references. */","var symbolTag = '[object Symbol]';","/** Used to match leading and trailing whitespace. */","var reTrim = /^\\s+|\\s+$/g;","/** Used to detect bad signed hexadecimal string values. */","var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;","/** Used to detect binary string values. */","var reIsBinary = /^0b[01]+$/i;","/** Used to detect octal string values. */","var reIsOctal = /^0o[0-7]+$/i;","/** Built-in method references without a dependency on `root`. */","var freeParseInt = parseInt;","/** Used for built-in method references. */","var objectProto = Object.prototype;","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var objectToString = objectProto.toString;","/**"," * Creates a function that invokes `func`, with the `this` binding and arguments"," * of the created function, while it's called less than `n` times. Subsequent"," * calls to the created function return the result of the last `func` invocation."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category Function"," * @param {number} n The number of calls at which `func` is no longer invoked."," * @param {Function} func The function to restrict."," * @returns {Function} Returns the new restricted function."," * @example"," *"," * jQuery(element).on('click', _.before(5, addContactToList));"," * // =\u003e Allows adding up to 4 contacts to the list."," */","function before(n, func) {","/**"," * Creates a function that is restricted to invoking `func` once. Repeat calls"," * to the function return the value of the first invocation. The `func` is"," * invoked with the `this` binding and arguments of the created function."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Function"," * @param {Function} func The function to restrict."," * @returns {Function} Returns the new restricted function."," * @example"," *"," * var initialize = _.once(createApplication);"," * initialize();"," * initialize();"," * // =\u003e `createApplication` is invoked once"," */","function once(func) {","/**"," * Checks if `value` is the"," * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)"," * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)"," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an object, else `false`."," * @example"," *"," * _.isObject({});"," * // =\u003e true"," *"," * _.isObject([1, 2, 3]);"," * // =\u003e true"," *"," * _.isObject(_.noop);"," * // =\u003e true"," *"," * _.isObject(null);"," * // =\u003e false"," */","function isObject(value) {","/**"," * Checks if `value` is object-like. A value is object-like if it's not `null`"," * and has a `typeof` result of \"object\"."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is object-like, else `false`."," * @example"," *"," * _.isObjectLike({});"," * // =\u003e true"," *"," * _.isObjectLike([1, 2, 3]);"," * // =\u003e true"," *"," * _.isObjectLike(_.noop);"," * // =\u003e false"," *"," * _.isObjectLike(null);"," * // =\u003e false"," */","function isObjectLike(value) {","/**"," * Checks if `value` is classified as a `Symbol` primitive or object."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a symbol, else `false`."," * @example"," *"," * _.isSymbol(Symbol.iterator);"," * // =\u003e true"," *"," * _.isSymbol('abc');"," * // =\u003e false"," */","function isSymbol(value) {","/**"," * Converts `value` to a finite number."," *"," * @static"," * @memberOf _"," * @since 4.12.0"," * @category Lang"," * @param {*} value The value to convert."," * @returns {number} Returns the converted number."," * @example"," *"," * _.toFinite(3.2);"," * // =\u003e 3.2"," *"," * _.toFinite(Number.MIN_VALUE);"," * // =\u003e 5e-324"," *"," * _.toFinite(Infinity);"," * // =\u003e 1.7976931348623157e+308"," *"," * _.toFinite('3.2');"," * // =\u003e 3.2"," */","function toFinite(value) {","/**"," * Converts `value` to an integer."," *"," * **Note:** This method is loosely based on"," * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger)."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to convert."," * @returns {number} Returns the converted integer."," * @example"," *"," * _.toInteger(3.2);"," * // =\u003e 3"," *"," * _.toInteger(Number.MIN_VALUE);"," * // =\u003e 0"," *"," * _.toInteger(Infinity);"," * // =\u003e 1.7976931348623157e+308"," *"," * _.toInteger('3.2');"," * // =\u003e 3"," */","function toInteger(value) {","/**"," * Converts `value` to a number."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to process."," * @returns {number} Returns the number."," * @example"," *"," * _.toNumber(3.2);"," * // =\u003e 3.2"," *"," * _.toNumber(Number.MIN_VALUE);"," * // =\u003e 5e-324"," *"," * _.toNumber(Infinity);"," * // =\u003e Infinity"," *"," * _.toNumber('3.2');"," * // =\u003e 3.2"," */","function toNumber(value) {"],"Functions":["var FUNC_ERROR_TEXT = 'Expected a function';"," * Creates a function that invokes `func`, with the `this` binding and arguments"," * of the created function, while it's called less than `n` times. Subsequent"," * calls to the created function return the result of the last `func` invocation."," * @param Function} func The function to restrict."," * @returns Function} Returns the new restricted function.","function before(n, func) ","  if (typeof func != 'function') ","  return function() "," * Creates a function that is restricted to invoking `func` once. Repeat calls"," * to the function return the value of the first invocation. The `func` is"," * invoked with the `this` binding and arguments of the created function."," * @param Function} func The function to restrict."," * @returns Function} Returns the new restricted function.","function once(func) "," * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)","function isObject(value) ","  return !!value \u0026\u0026 (type == 'object' || type == 'function');","function isObjectLike(value) ","function isSymbol(value) ","function toFinite(value) ","function toInteger(value) ","function toNumber(value) ","    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;"],"Dependencies":null},{"FileName":"node_modules\\map-obj\\index.js","LineCount":14,"CharCount":227,"Comments":[],"Functions":["module.exports = function (obj, cb) "],"Dependencies":null},{"FileName":"node_modules\\media-typer\\index.js","LineCount":271,"CharCount":6105,"Comments":["/*!"," * media-typer"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","/**"," * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7"," *"," * parameter     = token \"=\" ( token | quoted-string )"," * token         = 1*\u003cany CHAR except CTLs or separators\u003e"," * separators    = \"(\" | \")\" | \"\u003c\" | \"\u003e\" | \"@\""," *               | \",\" | \";\" | \":\" | \"\\\" | \u003c\"\u003e"," *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\""," *               | \"{\" | \"}\" | SP | HT"," * quoted-string = ( \u003c\"\u003e *(qdtext | quoted-pair ) \u003c\"\u003e )"," * qdtext        = \u003cany TEXT except \u003c\"\u003e\u003e"," * quoted-pair   = \"\\\" CHAR"," * CHAR          = \u003cany US-ASCII character (octets 0 - 127)\u003e"," * TEXT          = \u003cany OCTET except CTLs, but including LWS\u003e"," * LWS           = [CRLF] 1*( SP | HT )"," * CRLF          = CR LF"," * CR            = \u003cUS-ASCII CR, carriage return (13)\u003e"," * LF            = \u003cUS-ASCII LF, linefeed (10)\u003e"," * SP            = \u003cUS-ASCII SP, space (32)\u003e"," * SHT           = \u003cUS-ASCII HT, horizontal-tab (9)\u003e"," * CTL           = \u003cany US-ASCII control character (octets 0 - 31) and DEL (127)\u003e"," * OCTET         = \u003cany 8-bit sequence of data\u003e"," */","var paramRegExp = /; *([!#$%\u0026'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%\u0026'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;","/**"," * RegExp to match quoted-pair in RFC 2616"," *"," * quoted-pair = \"\\\" CHAR"," * CHAR        = \u003cany US-ASCII character (octets 0 - 127)\u003e"," */","var qescRegExp = /\\\\([\\u0000-\\u007f])/g;","/**"," * RegExp to match chars that must be quoted-pair in RFC 2616"," */","var quoteRegExp = /([\\\\\"])/g;","/**"," * RegExp to match type in RFC 6838"," *"," * type-name = restricted-name"," * subtype-name = restricted-name"," * restricted-name = restricted-name-first *126restricted-name-chars"," * restricted-name-first  = ALPHA / DIGIT"," * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /"," *                          \"$\" / \"\u0026\" / \"-\" / \"^\" / \"_\""," * restricted-name-chars =/ \".\" ; Characters before first dot always"," *                              ; specify a facet name"," * restricted-name-chars =/ \"+\" ; Characters after last plus always"," *                              ; specify a structured syntax suffix"," * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z"," * DIGIT =  %x30-39             ; 0-9"," */","var subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$\u0026^_.-]{0,126}$/","/**"," * Module exports."," */","","exports.format = format","/**"," * Format object to media type."," *"," * @param {object} obj"," * @return {string}"," * @api public"," */","","function format(obj) {","  // format as type/subtype","  var string = type + '/' + subtype","  // append +suffix","  if (suffix) {","  // append parameters","  if (parameters \u0026\u0026 typeof parameters === 'object') {","/**"," * Parse media type to object."," *"," * @param {string|object} string"," * @return {Object}"," * @api public"," */","","function parse(string) {","  // support req/res-like objects as argument","  if (typeof string === 'object') {","      // remove quotes and escapes","      value = value","/**"," * Get content-type from req/res objects."," *"," * @param {object}"," * @return {Object}"," * @api private"," */","","function getcontenttype(obj) {","    // res-like","    return obj.getHeader('content-type')","    // req-like","    return obj.headers \u0026\u0026 obj.headers['content-type']","/**"," * Quote a string if necessary."," *"," * @param {string} val"," * @return {string}"," * @api private"," */","","function qstring(val) {","  // no need to quote tokens","  if (tokenRegExp.test(str)) {","/**"," * Simply \"type/subtype+siffx\" into parts."," *"," * @param {string} string"," * @return {Object}"," * @api private"," */","","function splitType(string) {","  // suffix after last +","  var index = subtype.lastIndexOf('+')"],"Functions":["function format(obj) ","function parse(string) ","function getcontenttype(obj) ","  if (typeof obj.getHeader === 'function') ","function qstring(val) ","function splitType(string) "],"Dependencies":null},{"FileName":"node_modules\\meow\\index.js","LineCount":46,"CharCount":954,"Comments":["// needed to get the uncached parent","delete require.cache[__filename];"],"Functions":["module.exports = function (opts, minimistOpts) ","\tvar showHelp = function () "],"Dependencies":["path","minimist","indent-string","object-assign","camelcase-keys"]},{"FileName":"node_modules\\merge-descriptors\\index.js","LineCount":61,"CharCount":1155,"Comments":["/*!"," * merge-descriptors"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = merge","/**"," * Module variables."," * @private"," */","","var hasOwnProperty = Object.prototype.hasOwnProperty","/**"," * Merge the property descriptors of `src` into `dest`"," *"," * @param {object} dest Object to add descriptors to"," * @param {object} src Object to clone descriptors from"," * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties"," * @returns {object} Reference to dest"," * @public"," */","","function merge(dest, src, redefine) {","    // Default to true","    redefine = true","      // Skip desriptor","      return","    // Copy descriptor","    var descriptor = Object.getOwnPropertyDescriptor(src, name)"],"Functions":["function merge(dest, src, redefine) ","  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) "],"Dependencies":null},{"FileName":"node_modules\\methods\\index.js","LineCount":70,"CharCount":971,"Comments":["/*!"," * methods"," * Copyright(c) 2013-2014 TJ Holowaychuk"," * Copyright(c) 2015-2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module dependencies."," * @private"," */","","var http = require('http');","/**"," * Module exports."," * @public"," */","","module.exports = getCurrentNodeMethods() || getBasicNodeMethods();","/**"," * Get the current Node.js methods."," * @private"," */","","function getCurrentNodeMethods() {","/**"," * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10."," * @private"," */","","function getBasicNodeMethods() {"],"Functions":["function getCurrentNodeMethods() ","  return http.METHODS \u0026\u0026 http.METHODS.map(function lowerCaseMethod(method) ","function getBasicNodeMethods() "],"Dependencies":["http"]},{"FileName":"node_modules\\mime\\build\\build.js","LineCount":12,"CharCount":220,"Comments":[],"Functions":["Object.keys(db).forEach(function(key) "],"Dependencies":["mime-db"]},{"FileName":"node_modules\\mime\\build\\test.js","LineCount":58,"CharCount":2127,"Comments":["/**"," * Usage: node test.js"," */","","var mime = require('../mime');","//","// Test mime lookups","//","","assert.equal('text/plain', mime.lookup('text.txt'));     // normal file","assert.equal('text/plain', mime.lookup('TEXT.TXT'));     // uppercase","assert.equal('text/plain', mime.lookup('dir/text.txt')); // dir + file","assert.equal('text/plain', mime.lookup('.text.txt'));    // hidden file","assert.equal('text/plain', mime.lookup('.txt'));         // nameless","assert.equal('text/plain', mime.lookup('txt'));          // extension-only","assert.equal('text/plain', mime.lookup('/txt'));         // extension-less ()","assert.equal('text/plain', mime.lookup('\\\\txt'));        // Windows, extension-less","assert.equal('application/octet-stream', mime.lookup('text.nope')); // unrecognized","assert.equal('fallback', mime.lookup('text.fallback', 'fallback')); // alternate default","","//","// Test extensions","//","","assert.equal('txt', mime.extension(mime.types.text));","//","// Test node.types lookups","//","","assert.equal('application/font-woff', mime.lookup('file.woff'));","//","// Test charsets","//","","assert.equal('UTF-8', mime.charsets.lookup('text/plain'));"],"Functions":null,"Dependencies":["../mime","assert","path"]},{"FileName":"node_modules\\mime\\cli.js","LineCount":9,"CharCount":141,"Comments":[],"Functions":null,"Dependencies":["./mime.js"]},{"FileName":"node_modules\\mime\\mime.js","LineCount":109,"CharCount":2563,"Comments":["  // Map of extension -\u003e mime type","  this.types = Object.create(null);","  // Map of mime type -\u003e extension","  this.extensions = Object.create(null);","/**"," * Define mimetype -\u003e extension mappings.  Each key is a mime-type that maps"," * to an array of extensions associated with the type.  The first extension is"," * used as the default extension for the type."," *"," * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});"," *"," * @param map (Object) type definitions"," */","Mime.prototype.define = function (map) {","        console.warn(this._loading.replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +","          this.types[exts] + ' to ' + type);","    // Default extension is the first one we encounter","    if (!this.extensions[type]) {","/**"," * Load an Apache2-style \".types\" file"," *"," * This may be called multiple times (it's expected).  Where files declare"," * overlapping types/extensions, the last file wins."," *"," * @param file (String) path of file to load."," */","Mime.prototype.load = function(file) {","  // Read file and split into lines","  var map = {},","    // Clean up whitespace/comments, and split into fields","    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);","/**"," * Lookup a mime type based on extension"," */","Mime.prototype.lookup = function(path, fallback) {","/**"," * Return file extension associated with a mime type"," */","Mime.prototype.extension = function(mimeType) {","// Default instance","var mime = new Mime();","// Define built-in types","mime.define(require('./types.json'));","// Default type","mime.default_type = mime.lookup('bin');","//","// Additional API specific to the default instance","//","","mime.Mime = Mime;","/**"," * Lookup a charset based on mime type."," */","mime.charsets = {","    // Assume text types are utf8","    return (/^text\\//).test(mimeType) ? 'UTF-8' : fallback;","  }"],"Functions":["function Mime() ","Mime.prototype.define = function (map) ","Mime.prototype.load = function(file) ","  lines.forEach(function(line) ","Mime.prototype.lookup = function(path, fallback) ","Mime.prototype.extension = function(mimeType) ","  lookup: function(mimeType, fallback) "],"Dependencies":["path","fs"]},{"FileName":"node_modules\\mime-db\\index.js","LineCount":12,"CharCount":125,"Comments":["/*!"," * mime-db"," * Copyright(c) 2014 Jonathan Ong"," * MIT Licensed"," */","","/**"," * Module exports."," */","","module.exports = require('./db.json')"],"Functions":null,"Dependencies":["./db.json"]},{"FileName":"node_modules\\mime-types\\index.js","LineCount":189,"CharCount":3457,"Comments":["/*!"," * mime-types"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var db = require('mime-db')","/**"," * Module variables."," * @private"," */","","var extractTypeRegExp = /^\\s*([^;\\s]*)(?:;|\\s|$)/","var textTypeRegExp = /^text\\//i","","/**","/**"," * Module exports."," * @public"," */","","exports.charset = charset","// Populate the extensions/types maps","populateMaps(exports.extensions, exports.types)","/**"," * Get the default charset for a MIME type."," *"," * @param {string} type"," * @return {boolean|string}"," */","","function charset(type) {","  // TODO: use media-typer","  var match = extractTypeRegExp.exec(type)","  // default text/* to utf-8","  if (match \u0026\u0026 textTypeRegExp.test(match[1])) {","    return 'UTF-8'","  }","","  return false","}","","/**"," * Create a full Content-Type header given a MIME type or extension."," *"," * @param {string} str"," * @return {boolean|string}"," */","","function contentType(str) {","  // TODO: should this even be in this module?","  if (!str || typeof str !== 'string') {","  // TODO: use content-type or other module","  if (mime.indexOf('charset') === -1) {","/**"," * Get the default extension for a MIME type."," *"," * @param {string} type"," * @return {boolean|string}"," */","","function extension(type) {","  // TODO: use media-typer","  var match = extractTypeRegExp.exec(type)","  // get extensions","  var exts = match \u0026\u0026 exports.extensions[match[1].toLowerCase()]","/**"," * Lookup the MIME type for a file path/extension."," *"," * @param {string} path"," * @return {boolean|string}"," */","","function lookup(path) {","  // get the extension (\"ext\" or \".ext\" or full path)","  var extension = extname('x.' + path)","/**"," * Populate the extensions and types maps."," * @private"," */","","function populateMaps(extensions, types) {","  // source preference (least -\u003e most)","  var preference = ['nginx', 'apache', undefined, 'iana']","    // mime -\u003e extensions","    extensions[type] = exts","    // extension -\u003e mime","    for (var i = 0; i \u003c exts.length; i++) {","          // skip the remapping","          continue","      // set the extension -\u003e mime","      types[extension] = type"],"Functions":["function charset(type) ","function contentType(str) ","function extension(type) ","function lookup(path) ","function populateMaps(extensions, types) ","  Object.keys(db).forEach(function forEachMimeType(type) "],"Dependencies":["mime-db","path"]},{"FileName":"node_modules\\minimist\\example\\parse.js","LineCount":3,"CharCount":67,"Comments":[],"Functions":null,"Dependencies":["../"]},{"FileName":"node_modules\\minimist\\index.js","LineCount":237,"CharCount":6953,"Comments":["            // Using [\\s\\S] instead of . because js doesn't support the","            // 'dotall' regex modifier. See:","            // http://stackoverflow.com/a/1068308/13216","            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);"],"Functions":["module.exports = function (args, opts) ","    if (typeof opts['unknown'] === 'function') ","      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) ","    Object.keys(opts.alias || }).forEach(function (key) {","        aliases[key].forEach(function (x) ","            aliases[x] = [key].concat(aliases[key].filter(function (y) ","    [].concat(opts.string).filter(Boolean).forEach(function (key) ","    Object.keys(flags.bools).forEach(function (key) ","    function argDefined(key, arg) ","    function setArg (key, val, arg) ","        (aliases[key] || []).forEach(function (x) ","    function setKey (obj, keys, value) ","        keys.slice(0,-1).forEach(function (key) ","    function aliasIsBoolean(key) ","      return aliases[key].some(function (x) ","    Object.keys(defaults).forEach(function (key) ","            (aliases[key] || []).forEach(function (x) ","        notFlags.forEach(function(key) ","        notFlags.forEach(function(key) ","function hasKey (obj, keys) ","    keys.slice(0,-1).forEach(function (key) ","function isNumber (x) "],"Dependencies":null},{"FileName":"node_modules\\minimist\\test\\all_bool.js","LineCount":33,"CharCount":724,"Comments":[],"Functions":["test('flag boolean true (default all --args to boolean)', function (t) ","test('flag boolean true only affects double hyphen arguments without equals signs', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\bool.js","LineCount":167,"CharCount":3777,"Comments":["// regression, see https://github.com/substack/node-optimist/issues/71","test('boolean and --x=true', function(t) {"],"Functions":["test('flag boolean default false', function (t) ","test('boolean groups', function (t) ","test('boolean and alias with chainable api', function (t) ","test('boolean and alias with options hash', function (t) ","test('boolean and alias array with options hash', function (t) ","test('boolean and alias using explicit true', function (t) ","test('boolean and --x=true', function(t) ","test('boolean --boool=true', function (t) ","test('boolean --boool=false', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\dash.js","LineCount":32,"CharCount":949,"Comments":[],"Functions":["test('-', function (t) ","test('-a -- b', function (t) ","test('move arguments after the -- into their own `--` array', function(t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\default_bool.js","LineCount":36,"CharCount":743,"Comments":[],"Functions":["test('boolean default true', function (t) ","test('boolean default false', function (t) ","test('boolean default to null', function (t) "],"Dependencies":["tape","../"]},{"FileName":"node_modules\\minimist\\test\\dotted.js","LineCount":23,"CharCount":566,"Comments":[],"Functions":["test('dotted alias', function (t) ","test('dotted default', function (t) ","test('dotted default with no alias', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\kv_short.js","LineCount":17,"CharCount":360,"Comments":[],"Functions":["test('short -k=v' , function (t) ","test('multi short -k=v' , function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\long.js","LineCount":32,"CharCount":748,"Comments":[],"Functions":["test('long opts', function (t) "],"Dependencies":["tape","../"]},{"FileName":"node_modules\\minimist\\test\\num.js","LineCount":37,"CharCount":873,"Comments":[],"Functions":["test('nums', function (t) ","test('already a number', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\parse.js","LineCount":198,"CharCount":4409,"Comments":["    // reproduce in bash:","    // VALUE=\"new","    // line\"","    // node program.js --s=\"$VALUE\"","    args = parse([ \"--s=X\\nX\" ])"],"Functions":["test('parse args', function (t) ","test('comprehensive', function (t) ","test('flag boolean', function (t) ","test('flag boolean value', function (t) ","test('newlines in params' , function (t) ","test('strings' , function (t) ","test('stringArgs', function (t) ","test('empty strings', function(t) ","test('string and alias', function(t) ","test('slashBreak', function (t) ","test('alias', function (t) ","test('multiAlias', function (t) ","test('nested dotted objects', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\parse_modified.js","LineCount":10,"CharCount":229,"Comments":[],"Functions":["test('parse with modifier functions' , function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\short.js","LineCount":68,"CharCount":1526,"Comments":[],"Functions":["test('numeric short args', function (t) ","test('short', function (t) ","test('mixed short bool and capture', function (t) ","test('short and long', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\stop_early.js","LineCount":16,"CharCount":313,"Comments":[],"Functions":["test('stops parsing on the first non-option when stopEarly is set', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\unknown.js","LineCount":103,"CharCount":2439,"Comments":["    unknownFn(); // exercise fn for 100% coverage","});"],"Functions":["test('boolean and alias is not unknown', function (t) ","    function unknownFn(arg) ","test('flag boolean true any double hyphen argument is not unknown', function (t) ","    function unknownFn(arg) ","test('string and alias is not unknown', function (t) ","    function unknownFn(arg) ","test('default and alias is not unknown', function (t) ","    function unknownFn(arg) ","test('value following -- is not unknown', function (t) ","    function unknownFn(arg) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\minimist\\test\\whitespace.js","LineCount":9,"CharCount":183,"Comments":[],"Functions":["test('whitespace should be whitespace' , function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\moment\\ender.js","LineCount":2,"CharCount":38,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\af.js","LineCount":73,"CharCount":2549,"Comments":["//! moment.js locale configuration","//! locale : Afrikaans [af]","//! author : Werner Mollentze : https://github.com/wernerm","",";(function (global, factory) {","            return number + ((number === 1 || number === 8 || number \u003e= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter","        },","            dow : 1, // Maandag is die eerste dag van die week.","            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ar-ma.js","LineCount":60,"CharCount":2367,"Comments":["//! moment.js locale configuration","//! locale : Arabic (Morocco) [ar-ma]","//! author : ElFadili Yassine : https://github.com/ElFadiliY","//! author : Abdel Said : https://github.com/abdelsaid","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ar-sa.js","LineCount":104,"CharCount":3412,"Comments":["//! moment.js locale configuration","//! locale : Arabic (Saudi Arabia) [ar-sa]","//! author : Suhail Alkowaileet : https://github.com/xsoh","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ar-tn.js","LineCount":58,"CharCount":2225,"Comments":["//! moment.js locale configuration","//! locale  :  Arabic (Tunisia) [ar-tn]","",";(function (global, factory) {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ar.js","LineCount":137,"CharCount":5037,"Comments":["//! moment.js locale configuration","//! locale : Arabic [ar]","//! author : Abdel Said: https://github.com/abdelsaid","//! changes in months, weekdays: Ahmed Elkhatib","//! Native plural forms: forabi https://github.com/forabi","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    }, pluralForm = function (n) ","    }, pluralize = function (u) ","        return function (number, withoutSuffix, string, isFuture) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/\\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\az.js","LineCount":105,"CharCount":3338,"Comments":["//! moment.js locale configuration","//! locale : Azerbaijani [az]","//! author : topchiyev : https://github.com/topchiyev","",";(function (global, factory) {","            if (number === 0) {  // special case for zero","                return number + '-ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\be.js","LineCount":134,"CharCount":5449,"Comments":["//! moment.js locale configuration","//! locale : Belarusian [be]","//! author : Dmitry Demidov : https://github.com/demidov91","//! author: Praleska: http://praleska.pro/","//! Author : Menelion Elensúle : https://github.com/Oire","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(word, num) ","    function relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek: function () ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\bg.js","LineCount":90,"CharCount":3376,"Comments":["//! moment.js locale configuration","//! locale : Bulgarian [bg]","//! author : Krasen Borisov : https://github.com/kraz","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            lastWeek : function () ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\bn.js","LineCount":119,"CharCount":4302,"Comments":["//! moment.js locale configuration","//! locale : Bengali [bn]","//! author : Kaushik Gandhi : https://github.com/kaushikgandhi","",";(function (global, factory) {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\bo.js","LineCount":119,"CharCount":5090,"Comments":["//! moment.js locale configuration","//! locale : Tibetan [bo]","//! author : Thupten N. Chakrishar : https://github.com/vajradog","",";(function (global, factory) {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\br.js","LineCount":108,"CharCount":3374,"Comments":["//! moment.js locale configuration","//! locale : Breton [br]","//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function relativeTimeWithMutation(number, withoutSuffix, key) ","    function specialMutationForYears(number) ","    function lastNumber(number) ","    function mutation(text, number) ","    function softMutation(text) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\bs.js","LineCount":143,"CharCount":4840,"Comments":["//! moment.js locale configuration","//! locale : Bosnian [bs]","//! author : Nedim Cholich : https://github.com/frontyard","//! based on (hr) translation by Bojan Marković","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ca.js","LineCount":81,"CharCount":2893,"Comments":["//! moment.js locale configuration","//! locale : Catalan [ca]","//! author : Juan G. Hurtado : https://github.com/juanghurtado","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\cs.js","LineCount":172,"CharCount":6612,"Comments":["//! moment.js locale configuration","//! locale : Czech [cs]","//! author : petrbela : https://github.com/petrbela","",";(function (global, factory) {","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'den' : 'dnem';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","                // use custom parser to solve problem with July (červenec)","                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(n) ","    function translate(number, withoutSuffix, key, isFuture) ","        monthsParse : (function (months, monthsShort) ","        shortMonthsParse : (function (monthsShort) ","        longMonthsParse : (function (months) ","            nextWeek: function () ","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\cv.js","LineCount":63,"CharCount":2645,"Comments":["//! moment.js locale configuration","//! locale : Chuvash [cv]","//! author : Anatoly Mironov : https://github.com/mirontoli","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            future : function (output) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\cy.js","LineCount":80,"CharCount":2841,"Comments":["//! moment.js locale configuration","//! locale : Welsh [cy]","//! author : Robert Allen","",";(function (global, factory) {","        // time formats are the same as en-gb","        longDateFormat: {","        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","        ordinal: function (number) {","                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed","                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed","                ];","                    output = 'fed'; // not 30ain, 70ain or 90ain","                } else {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal: function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\da.js","LineCount":60,"CharCount":2023,"Comments":["//! moment.js locale configuration","//! locale : Danish [da]","//! author : Ulrik Nielsen : https://github.com/mrbase","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\de-at.js","LineCount":79,"CharCount":2956,"Comments":["//! moment.js locale configuration","//! locale : German (Austria) [de-at]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Martin Groller : https://github.com/MadMG","//! author : Mikolaj Dadela : https://github.com/mik01aj","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\de.js","LineCount":78,"CharCount":2878,"Comments":["//! moment.js locale configuration","//! locale : German [de]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Mikolaj Dadela : https://github.com/mik01aj","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\dv.js","LineCount":99,"CharCount":2902,"Comments":["//! moment.js locale configuration","//! locale : Maldivian [dv]","//! author : Jawish Hameed : https://github.com/jawish","",";(function (global, factory) {","            dow : 7,  // Sunday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","        postformat: function (string) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\el.js","LineCount":98,"CharCount":4101,"Comments":["//! moment.js locale configuration","//! locale : Greek [el]","//! author : Aggelos Karalias : https://github.com/mehiel","",";(function (global, factory) {","            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'","                return this._monthsGenitiveEl[momentToFormat.month()];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function isFunction(input) ","        months : function (momentToFormat, format) ","        meridiem : function (hours, minutes, isLower) ","        isPM : function (input) ","            lastWeek : function () ","        calendar : function (key, mom) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\en-au.js","LineCount":66,"CharCount":2257,"Comments":["//! moment.js locale configuration","//! locale : English (Australia) [en-au]","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\en-ca.js","LineCount":63,"CharCount":2144,"Comments":["//! moment.js locale configuration","//! locale : English (Canada) [en-ca]","//! author : Jonathan Abourbih : https://github.com/jonbca","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\en-gb.js","LineCount":67,"CharCount":2316,"Comments":["//! moment.js locale configuration","//! locale : English (United Kingdom) [en-gb]","//! author : Chris Gedrim : https://github.com/chrisgedrim","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\en-ie.js","LineCount":67,"CharCount":2314,"Comments":["//! moment.js locale configuration","//! locale : English (Ireland) [en-ie]","//! author : Chris Cartlidge : https://github.com/chriscartlidge","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\en-nz.js","LineCount":66,"CharCount":2259,"Comments":["//! moment.js locale configuration","//! locale : English (New Zealand) [en-nz]","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\eo.js","LineCount":73,"CharCount":2613,"Comments":["//! moment.js locale configuration","//! locale : Esperanto [eo]","//! author : Colin Dean : https://github.com/colindean","//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.","//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!","",";(function (global, factory) {","            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo","            dd : '%d tagoj',","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\es-do.js","LineCount":80,"CharCount":2889,"Comments":["//! moment.js locale configuration","//! locale : Spanish (Dominican Republic) [es-do]","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\es.js","LineCount":81,"CharCount":2903,"Comments":["//! moment.js locale configuration","//! locale : Spanish [es]","//! author : Julio Napurí : https://github.com/julionc","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\et.js","LineCount":80,"CharCount":3089,"Comments":["//! moment.js locale configuration","//! locale : Estonian [et]","//! author : Henry Kehlmann : https://github.com/madhenry","//! improvements : Illimar Tambek : https://github.com/ragulka","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\eu.js","LineCount":66,"CharCount":2330,"Comments":["//! moment.js locale configuration","//! locale : Basque [eu]","//! author : Eneko Illarramendi : https://github.com/eillarra","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fa.js","LineCount":106,"CharCount":3535,"Comments":["//! moment.js locale configuration","//! locale : Persian [fa]","//! author : Ebrahim Byagowi : https://github.com/ebraminio","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12 // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[۰-۹]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fi.js","LineCount":107,"CharCount":3890,"Comments":["//! moment.js locale configuration","//! locale : Finnish [fi]","//! author : Tarmo Aidantausta : https://github.com/bleadof","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translate(number, withoutSuffix, key, isFuture) ","    function verbalNumber(number, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fo.js","LineCount":60,"CharCount":2075,"Comments":["//! moment.js locale configuration","//! locale : Faroese [fo]","//! author : Ragnar Johannesen : https://github.com/ragnar123","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fr-ca.js","LineCount":60,"CharCount":2041,"Comments":["//! moment.js locale configuration","//! locale : French (Canada) [fr-ca]","//! author : Jonathan Abourbih : https://github.com/jonbca","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fr-ch.js","LineCount":64,"CharCount":2215,"Comments":["//! moment.js locale configuration","//! locale : French (Switzerland) [fr-ch]","//! author : Gaspard Bucher : https://github.com/gaspard","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fr.js","LineCount":64,"CharCount":2187,"Comments":["//! moment.js locale configuration","//! locale : French [fr]","//! author : John Fischer : https://github.com/jfroffice","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\fy.js","LineCount":73,"CharCount":2578,"Comments":["//! moment.js locale configuration","//! locale : Frisian [fy]","//! author : Robin van der Vliet : https://github.com/robin0van0der0v","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        monthsShort : function (m, format) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\gd.js","LineCount":76,"CharCount":2568,"Comments":["//! moment.js locale configuration","//! locale : Scottish Gaelic [gd]","//! author : Jon Ashdown : https://github.com/jonashdown","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\gl.js","LineCount":77,"CharCount":2723,"Comments":["//! moment.js locale configuration","//! locale : Galician [gl]","//! author : Juan G. Hurtado : https://github.com/juanghurtado","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","            future : function (str) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\he.js","LineCount":99,"CharCount":3715,"Comments":["//! moment.js locale configuration","//! locale : Hebrew [he]","//! author : Tomer Cohen : https://github.com/tomer","//! author : Moshe Simantov : https://github.com/DevelopmentIL","//! author : Tal Ater : https://github.com/TalAter","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            hh : function (number) ","            dd : function (number) ","            MM : function (number) ","            yy : function (number) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\hi.js","LineCount":124,"CharCount":4466,"Comments":["//! moment.js locale configuration","//! locale : Hindi [hi]","//! author : Mayank Singhal : https://github.com/mayanksinghal","",";(function (global, factory) {","        // Hindi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","        meridiemParse: /रात|सुबह|दोपहर|शाम/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\hr.js","LineCount":145,"CharCount":4979,"Comments":["//! moment.js locale configuration","//! locale : Croatian [hr]","//! author : Bojan Marković : https://github.com/bmarkovic","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\hu.js","LineCount":109,"CharCount":4042,"Comments":["//! moment.js locale configuration","//! locale : Hungarian [hu]","//! author : Adam Brunner : https://github.com/adambrunner","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translate(number, withoutSuffix, key, isFuture) ","    function week(isFuture) ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","            nextWeek : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\hy-am.js","LineCount":95,"CharCount":3653,"Comments":["//! moment.js locale configuration","//! locale : Armenian [hy-am]","//! author : Armendarabyan : https://github.com/armendarabyan","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            nextWeek: function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour) ","        ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\id.js","LineCount":83,"CharCount":2855,"Comments":["//! moment.js locale configuration","//! locale : Indonesian [id]","//! author : Mohammad Satrio Utomo : https://github.com/tyok","//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\is.js","LineCount":127,"CharCount":4594,"Comments":["//! moment.js locale configuration","//! locale : Icelandic [is]","//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(n) ","    function translate(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\it.js","LineCount":70,"CharCount":2398,"Comments":["//! moment.js locale configuration","//! locale : Italian [it]","//! author : Lorenzo : https://github.com/aliem","//! author: Mattia Larentis: https://github.com/nostalgiaz","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            lastWeek: function () ","            future : function (s) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ja.js","LineCount":76,"CharCount":2394,"Comments":["//! moment.js locale configuration","//! locale : Japanese [ja]","//! author : LI Long : https://github.com/baryon","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\jv.js","LineCount":83,"CharCount":2864,"Comments":["//! moment.js locale configuration","//! locale : Japanese [jv]","//! author : Rony Lantip : https://github.com/lantip","//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ka.js","LineCount":89,"CharCount":4108,"Comments":["//! moment.js locale configuration","//! locale : Georgian [ka]","//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            future : function (s) ","            past : function (s) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\kk.js","LineCount":87,"CharCount":2954,"Comments":["//! moment.js locale configuration","//! locale : Kazakh [kk]","//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\km.js","LineCount":58,"CharCount":2691,"Comments":["//! moment.js locale configuration","//! locale : Cambodian [km]","//! author : Kruy Vanna : https://github.com/kruyvanna","",";(function (global, factory) {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ko.js","LineCount":68,"CharCount":2168,"Comments":["//! moment.js locale configuration","//! locale : Korean [ko]","//!","//! authors","//!","//! - Kyungwook, Park : https://github.com/kyungw00k","//! - Jeeeyul Lee \u003cjeeeyul@gmail.com\u003e","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (token) ","        meridiem : function (hour, minute, isUpper) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ky.js","LineCount":88,"CharCount":2964,"Comments":["//! moment.js locale configuration","//! locale : Kyrgyz [ky]","//! author : Chyngyz Arystan uulu : https://github.com/chyngyz","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\lb.js","LineCount":136,"CharCount":4798,"Comments":["//! moment.js locale configuration","//! locale : Luxembourgish [lb]","//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz","",";(function (global, factory) {","    /**","     * Returns true if the word before the given number loses the '-n' ending.","     * e.g. 'an 10 Deeg' but 'a 5 Deeg'","     *","     * @param number {integer}","     * @returns {boolean}","     */","    function eifelerRegelAppliesToNumber(number) {","            // Negative Number --\u003e always true","            return true;","            // Only 1 digit","            if (4 \u003c= number \u0026\u0026 number \u003c= 7) {","            // 2 digits","            var lastDigit = number % 10, firstDigit = number / 10;","            // 3 or 4 digits --\u003e recursively check first digit","            while (number \u003e= 10) {","            // Anything larger than 4 digits: recursively check first n-3 digits","            number = number / 1000;","                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","                switch (this.day()) {","            dow: 1, // Monday is the first day of the week.","            doy: 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function processRelativeTime(number, withoutSuffix, key, isFuture) ","    function processFutureTime(string) ","    function processPastTime(string) ","    function eifelerRegelAppliesToNumber(number) ","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\lo.js","LineCount":70,"CharCount":2975,"Comments":["//! moment.js locale configuration","//! locale : Lao [lo]","//! author : Ryan Hart : https://github.com/ryanhart2","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\lt.js","LineCount":117,"CharCount":4401,"Comments":["//! moment.js locale configuration","//! locale : Lithuanian [lt]","//! author : Mindaugas Mozūras : https://github.com/mmozuras","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translateSeconds(number, withoutSuffix, key, isFuture) ","    function translateSingular(number, withoutSuffix, key, isFuture) ","    function special(number) ","    function forms(key) ","    function translate(number, withoutSuffix, key, isFuture) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\lv.js","LineCount":97,"CharCount":3876,"Comments":["//! moment.js locale configuration","//! locale : Latvian [lv]","//! author : Kristaps Karlsons : https://github.com/skakri","//! author : Jānis Elmeris : https://github.com/JanisE","",";(function (global, factory) {","    /**","     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.","     */","    function format(forms, number, withoutSuffix) {","            // E.g. \"21 minūte\", \"3 minūtes\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[2] : forms[3];","            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".","            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[0] : forms[1];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function format(forms, number, withoutSuffix) ","    function relativeTimeWithPlural(number, withoutSuffix, key) ","    function relativeTimeWithSingular(number, withoutSuffix, key) ","    function relativeSeconds(number, withoutSuffix) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\me.js","LineCount":111,"CharCount":4053,"Comments":["//! moment.js locale configuration","//! locale : Montenegrin [me]","//! author : Miodrag Nikač \u003cmiodrag@restartit.me\u003e : https://github.com/miodragnikac","",";(function (global, factory) {","        words: { //Different grammatical cases","            m: ['jedan minut', 'jednog minuta'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\mk.js","LineCount":90,"CharCount":3398,"Comments":["//! moment.js locale configuration","//! locale : Macedonian [mk]","//! author : Borislav Mickov : https://github.com/B0k0","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            lastWeek : function () ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ml.js","LineCount":81,"CharCount":3670,"Comments":["//! moment.js locale configuration","//! locale : Malayalam [ml]","//! author : Floyd Pink : https://github.com/floydpink","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\mr.js","LineCount":159,"CharCount":6269,"Comments":["//! moment.js locale configuration","//! locale : Marathi [mr]","//! author : Harshad Kale : https://github.com/kalehv","//! author : Vivek Athalye : https://github.com/vnathalye","",";(function (global, factory) {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function relativeTimeMr(number, withoutSuffix, string, isFuture)","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem: function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ms-my.js","LineCount":83,"CharCount":2816,"Comments":["//! moment.js locale configuration","//! locale : Malay [ms-my]","//! note : DEPRECATED, the correct one is [ms]","//! author : Weldan Jamili : https://github.com/weldan","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ms.js","LineCount":82,"CharCount":2758,"Comments":["//! moment.js locale configuration","//! locale : Malay [ms]","//! author : Weldan Jamili : https://github.com/weldan","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\my.js","LineCount":93,"CharCount":3338,"Comments":["//! moment.js locale configuration","//! locale : Burmese [my]","//! author : Squar team, mysquar.com","",";(function (global, factory) {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\nb.js","LineCount":63,"CharCount":2184,"Comments":["//! moment.js locale configuration","//! locale : Norwegian Bokmål [nb]","//! authors : Espen Hovlandsdal : https://github.com/rexxars","//!           Sigurd Gartmann : https://github.com/sigurdga","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ne.js","LineCount":123,"CharCount":4499,"Comments":["//! moment.js locale configuration","//! locale : Nepalese [ne]","//! author : suvash : https://github.com/suvash","",";(function (global, factory) {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\nl.js","LineCount":73,"CharCount":2576,"Comments":["//! moment.js locale configuration","//! locale : Dutch [nl]","//! author : Joris Röling : https://github.com/jjupiter","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        monthsShort : function (m, format) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\nn.js","LineCount":60,"CharCount":2035,"Comments":["//! moment.js locale configuration","//! locale : Nynorsk [nn]","//! author : https://github.com/mechuwind","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\pa-in.js","LineCount":124,"CharCount":4664,"Comments":["//! moment.js locale configuration","//! locale : Punjabi (India) [pa-in]","//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit","",";(function (global, factory) {","        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),","        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        preparse: function (string) ","            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\pl.js","LineCount":105,"CharCount":3947,"Comments":["//! moment.js locale configuration","//! locale : Polish [pl]","//! author : Rafal Hirsz : https://github.com/evoL","",";(function (global, factory) {","                // Hack: if format empty we know this is used to generate","                // RegExp by moment. Give then back both valid forms of months","                // in RegExp ready format.","                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(n) ","    function translate(number, withoutSuffix, key) ","        months : function (momentToFormat, format) ","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\pt-br.js","LineCount":61,"CharCount":2198,"Comments":["//! moment.js locale configuration","//! locale : Portuguese (Brazil) [pt-br]","//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira","",";(function (global, factory) {","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\pt.js","LineCount":65,"CharCount":2302,"Comments":["//! moment.js locale configuration","//! locale : Portuguese [pt]","//! author : Jefferson : https://github.com/jalex79","",";(function (global, factory) {","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ro.js","LineCount":75,"CharCount":2552,"Comments":["//! moment.js locale configuration","//! locale : Romanian [ro]","//! author : Vlad Gurdiga : https://github.com/gurdiga","//! author : Valentin Agachi : https://github.com/avaly","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function relativeTimeWithPlural(number, withoutSuffix, key) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ru.js","LineCount":183,"CharCount":8621,"Comments":["//! moment.js locale configuration","//! locale : Russian [ru]","//! author : Viktorminator : https://github.com/Viktorminator","//! Author : Menelion Elensúle : https://github.com/Oire","//! author : Коренберг Марк : https://github.com/socketpair","",";(function (global, factory) {","    // http://new.gramota.ru/spravka/rules/139-prop : § 103","    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637","    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753","    var ru = moment.defineLocale('ru', {","            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),","        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // копия предыдущего","        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // полные названия с падежами","        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","        // Выражение, которое соотвествует только сокращённым формам","        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(word, num) ","    function relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function (now) ","            lastWeek: function (now) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\se.js","LineCount":61,"CharCount":2205,"Comments":["//! moment.js locale configuration","//! locale : Northern Sami [se]","//! authors : Bård Rolstad Henriksen : https://github.com/karamell","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\si.js","LineCount":71,"CharCount":3065,"Comments":["//! moment.js locale configuration","//! locale : Sinhalese [si]","//! author : Sampath Sitinamaluwa : https://github.com/sampathsris","",";(function (global, factory) {","    /*jshint -W100*/","    var si = moment.defineLocale('si', {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sk.js","LineCount":150,"CharCount":5672,"Comments":["//! moment.js locale configuration","//! locale : Slovak [sk]","//! author : Martin Minka : https://github.com/k2s","//! based on work of petrbela : https://github.com/petrbela","",";(function (global, factory) {","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(n) ","    function translate(number, withoutSuffix, key, isFuture) ","            nextWeek: function () ","            lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sl.js","LineCount":162,"CharCount":6356,"Comments":["//! moment.js locale configuration","//! locale : Slovenian [sl]","//! author : Robert Sedovšek : https://github.com/sedovsek","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function processRelativeTime(number, withoutSuffix, key, isFuture) ","            nextWeek : function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sq.js","LineCount":70,"CharCount":2413,"Comments":["//! moment.js locale configuration","//! locale : Albanian [sq]","//! author : Flakërim Ismani : https://github.com/flakerimi","//! author: Menelion Elensúle: https://github.com/Oire (tests)","//! author : Oerd Cukalla : https://github.com/oerd (fixes)","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sr-cyrl.js","LineCount":110,"CharCount":4516,"Comments":["//! moment.js locale configuration","//! locale : Serbian Cyrillic [sr-cyrl]","//! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","",";(function (global, factory) {","        words: { //Different grammatical cases","            m: ['један минут', 'једне минуте'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sr.js","LineCount":110,"CharCount":4032,"Comments":["//! moment.js locale configuration","//! locale : Serbian [sr]","//! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","",";(function (global, factory) {","        words: { //Different grammatical cases","            m: ['jedan minut', 'jedne minute'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ss.js","LineCount":89,"CharCount":3028,"Comments":["//! moment.js locale configuration","//! locale : Swazi [ss]","//! author : Nicolai Davies\u003cmail@nicolai.io\u003e : https://github.com/nicolaidavies","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiem : function (hours, minutes, isLower) ","        meridiemHour : function (hour, meridiem) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sv.js","LineCount":69,"CharCount":2347,"Comments":["//! moment.js locale configuration","//! locale : Swedish [sv]","//! author : Jens Alm : https://github.com/ulmus","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\sw.js","LineCount":59,"CharCount":2030,"Comments":["//! moment.js locale configuration","//! locale : Swahili [sw]","//! author : Fahad Kassim : https://github.com/fadsel","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\ta.js","LineCount":129,"CharCount":5240,"Comments":["//! moment.js locale configuration","//! locale : Tamil [ta]","//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404","",";(function (global, factory) {","        // refer http://ta.wikipedia.org/s/1er1","        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,","                return ' வைகறை';  // வைகறை","            } else if (hour \u003c 10) {","                return ' காலை'; // காலை","            } else if (hour \u003c 14) {","                return ' நண்பகல்'; // நண்பகல்","            } else if (hour \u003c 18) {","                return ' எற்பாடு'; // எற்பாடு","            } else if (hour \u003c 22) {","                return ' மாலை'; // மாலை","            } else {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiem : function (hour, minute, isLower) ","        meridiemHour : function (hour, meridiem) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\te.js","LineCount":89,"CharCount":3817,"Comments":["//! moment.js locale configuration","//! locale : Telugu [te]","//! author : Krishna Chaitanya Thota : https://github.com/kcthota","",";(function (global, factory) {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\th.js","LineCount":67,"CharCount":3190,"Comments":["//! moment.js locale configuration","//! locale : Thai [th]","//! author : Kridsada Thanabulpong : https://github.com/sirn","",";(function (global, factory) {","        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference","        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tl-ph.js","LineCount":62,"CharCount":2085,"Comments":["//! moment.js locale configuration","//! locale : Tagalog (Philippines) [tl-ph]","//! author : Dan Hagman","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tlh.js","LineCount":120,"CharCount":4092,"Comments":["//! moment.js locale configuration","//! locale : Klingon [tlh]","//! author : Dominika Kruk : https://github.com/amaranthrose","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function translateFuture(output) ","    function translatePast(output) ","    function translate(number, withoutSuffix, string, isFuture) ","    function numberAsNoun(number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tr.js","LineCount":90,"CharCount":2857,"Comments":["//! moment.js locale configuration","//! locale : Turkish [tr]","//! authors : Erhan Gundogan : https://github.com/erhangundogan,","//!           Burak Yiğit Kaya: https://github.com/BYK","",";(function (global, factory) {","            if (number === 0) {  // special case for zero","                return number + '\\'ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tzl.js","LineCount":91,"CharCount":3544,"Comments":["//! moment.js locale configuration","//! locale : Talossan [tzl]","//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun","",";(function (global, factory) {","    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.","    // This is currently too difficult (maybe even impossible) to add.","    var tzl = moment.defineLocale('tzl', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","    function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tzm-latn.js","LineCount":58,"CharCount":2074,"Comments":["//! moment.js locale configuration","//! locale : Central Atlas Tamazight Latin [tzm-latn]","//! author : Abdel Said : https://github.com/abdelsaid","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\tzm.js","LineCount":58,"CharCount":2686,"Comments":["//! moment.js locale configuration","//! locale : Central Atlas Tamazight [tzm]","//! author : Abdel Said : https://github.com/abdelsaid","",";(function (global, factory) {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\uk.js","LineCount":146,"CharCount":6010,"Comments":["//! moment.js locale configuration","//! locale : Ukrainian [uk]","//! author : zemlanin : https://github.com/zemlanin","//! Author : Menelion Elensúle : https://github.com/Oire","",";(function (global, factory) {","        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","        meridiemParse: /ночі|ранку|дня|вечора/,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","    function plural(word, num) ","    function relativeTimeWithPlural(number, withoutSuffix, key) ","    function weekdaysCaseReplace(m, format) ","    function processHoursFunction(str) ","        return function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\uz.js","LineCount":58,"CharCount":2285,"Comments":["//! moment.js locale configuration","//! locale : Uzbek [uz]","//! author : Sardor Muminov : https://github.com/muminoff","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';"],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\vi.js","LineCount":79,"CharCount":2715,"Comments":["//! moment.js locale configuration","//! locale : Vietnamese [vi]","//! author : Bang Nguyen : https://github.com/bangnk","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\x-pseudo.js","LineCount":68,"CharCount":2588,"Comments":["//! moment.js locale configuration","//! locale : Pseudo [x-pseudo]","//! author : Andrew Hood : https://github.com/andrewhood125","",";(function (global, factory) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\zh-cn.js","LineCount":127,"CharCount":4720,"Comments":["//! moment.js locale configuration","//! locale : Chinese (China) [zh-cn]","//! author : suupic : https://github.com/suupic","//! author : Zeno Zeng : https://github.com/zenozeng","",";(function (global, factory) {","                // '中午'","                return hour \u003e= 11 ? hour : hour + 12;","            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","            sameDay : function () ","            nextDay : function () ","            lastDay : function () ","            nextWeek : function () ","            lastWeek : function () ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\locale\\zh-tw.js","LineCount":104,"CharCount":3574,"Comments":["//! moment.js locale configuration","//! locale : Chinese (Taiwan) [zh-tw]","//! author : Ben : https://github.com/ben-lin","//! author : Chris Lam : https://github.com/hehachris","",";(function (global, factory) {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\min\\locales.js","LineCount":8104,"CharCount":309876,"Comments":["    //! moment.js locale configuration","    //! locale : Afrikaans [af]","    //! author : Werner Mollentze : https://github.com/wernerm","","    var af = moment.defineLocale('af', {","            return number + ((number === 1 || number === 8 || number \u003e= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter","        },","            dow : 1, // Maandag is die eerste dag van die week.","            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.","        }","    //! moment.js locale configuration","    //! locale : Arabic (Morocco) [ar-ma]","    //! author : ElFadili Yassine : https://github.com/ElFadiliY","    //! author : Abdel Said : https://github.com/abdelsaid","","    var ar_ma = moment.defineLocale('ar-ma', {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Arabic (Saudi Arabia) [ar-sa]","    //! author : Suhail Alkowaileet : https://github.com/xsoh","","    var ar_sa__symbolMap = {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale  :  Arabic (Tunisia) [ar-tn]","","    var ar_tn = moment.defineLocale('ar-tn', {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Arabic [ar]","    //! author : Abdel Said: https://github.com/abdelsaid","    //! changes in months, weekdays: Ahmed Elkhatib","    //! Native plural forms: forabi https://github.com/forabi","","    var ar__symbolMap = {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Azerbaijani [az]","    //! author : topchiyev : https://github.com/topchiyev","","    var az__suffixes = {","            if (number === 0) {  // special case for zero","                return number + '-ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Belarusian [be]","    //! author : Dmitry Demidov : https://github.com/demidov91","    //! author: Praleska: http://praleska.pro/","    //! Author : Menelion Elensúle : https://github.com/Oire","","    function be__plural(word, num) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Bulgarian [bg]","    //! author : Krasen Borisov : https://github.com/kraz","","    var bg = moment.defineLocale('bg', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Bengali [bn]","    //! author : Kaushik Gandhi : https://github.com/kaushikgandhi","","    var bn__symbolMap = {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Tibetan [bo]","    //! author : Thupten N. Chakrishar : https://github.com/vajradog","","    var bo__symbolMap = {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Breton [br]","    //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou","","    function relativeTimeWithMutation(number, withoutSuffix, key) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Bosnian [bs]","    //! author : Nedim Cholich : https://github.com/frontyard","    //! based on (hr) translation by Bojan Marković","","    function bs__translate(number, withoutSuffix, key) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Catalan [ca]","    //! author : Juan G. Hurtado : https://github.com/juanghurtado","","    var ca = moment.defineLocale('ca', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Czech [cs]","    //! author : petrbela : https://github.com/petrbela","","    var cs__months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'den' : 'dnem';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","                // use custom parser to solve problem with July (červenec)","                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Chuvash [cv]","    //! author : Anatoly Mironov : https://github.com/mirontoli","","    var cv = moment.defineLocale('cv', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Welsh [cy]","    //! author : Robert Allen","","    var cy = moment.defineLocale('cy', {","        // time formats are the same as en-gb","        longDateFormat: {","        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","        ordinal: function (number) {","                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed","                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed","                ];","                    output = 'fed'; // not 30ain, 70ain or 90ain","                } else {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Danish [da]","    //! author : Ulrik Nielsen : https://github.com/mrbase","","    var da = moment.defineLocale('da', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : German (Austria) [de-at]","    //! author : lluchs : https://github.com/lluchs","    //! author: Menelion Elensúle: https://github.com/Oire","    //! author : Martin Groller : https://github.com/MadMG","    //! author : Mikolaj Dadela : https://github.com/mik01aj","","    function de_at__processRelativeTime(number, withoutSuffix, key, isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : German [de]","    //! author : lluchs : https://github.com/lluchs","    //! author: Menelion Elensúle: https://github.com/Oire","    //! author : Mikolaj Dadela : https://github.com/mik01aj","","    function de__processRelativeTime(number, withoutSuffix, key, isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Maldivian [dv]","    //! author : Jawish Hameed : https://github.com/jawish","","    var dv__months = [","            dow : 7,  // Sunday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Greek [el]","    //! author : Aggelos Karalias : https://github.com/mehiel","","    var el = moment.defineLocale('el', {","            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'","                return this._monthsGenitiveEl[momentToFormat.month()];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : English (Australia) [en-au]","","    var en_au = moment.defineLocale('en-au', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : English (Canada) [en-ca]","    //! author : Jonathan Abourbih : https://github.com/jonbca","","    var en_ca = moment.defineLocale('en-ca', {","    //! moment.js locale configuration","    //! locale : English (United Kingdom) [en-gb]","    //! author : Chris Gedrim : https://github.com/chrisgedrim","","    var en_gb = moment.defineLocale('en-gb', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : English (Ireland) [en-ie]","    //! author : Chris Cartlidge : https://github.com/chriscartlidge","","    var en_ie = moment.defineLocale('en-ie', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : English (New Zealand) [en-nz]","","    var en_nz = moment.defineLocale('en-nz', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Esperanto [eo]","    //! author : Colin Dean : https://github.com/colindean","    //! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.","    //!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!","","    var eo = moment.defineLocale('eo', {","            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo","            dd : '%d tagoj',","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Spanish (Dominican Republic) [es-do]","","    var es_do__monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Spanish [es]","    //! author : Julio Napurí : https://github.com/julionc","","    var es__monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Estonian [et]","    //! author : Henry Kehlmann : https://github.com/madhenry","    //! improvements : Illimar Tambek : https://github.com/ragulka","","    function et__processRelativeTime(number, withoutSuffix, key, isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Basque [eu]","    //! author : Eneko Illarramendi : https://github.com/eillarra","","    var eu = moment.defineLocale('eu', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Persian [fa]","    //! author : Ebrahim Byagowi : https://github.com/ebraminio","","    var fa__symbolMap = {","            dow : 6, // Saturday is the first day of the week.","            doy : 12 // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Finnish [fi]","    //! author : Tarmo Aidantausta : https://github.com/bleadof","","    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Faroese [fo]","    //! author : Ragnar Johannesen : https://github.com/ragnar123","","    var fo = moment.defineLocale('fo', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : French (Canada) [fr-ca]","    //! author : Jonathan Abourbih : https://github.com/jonbca","","    var fr_ca = moment.defineLocale('fr-ca', {","    //! moment.js locale configuration","    //! locale : French (Switzerland) [fr-ch]","    //! author : Gaspard Bucher : https://github.com/gaspard","","    var fr_ch = moment.defineLocale('fr-ch', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : French [fr]","    //! author : John Fischer : https://github.com/jfroffice","","    var fr = moment.defineLocale('fr', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Frisian [fy]","    //! author : Robin van der Vliet : https://github.com/robin0van0der0v","","    var fy__monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Scottish Gaelic [gd]","    //! author : Jon Ashdown : https://github.com/jonashdown","","    var gd__months = [","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Galician [gl]","    //! author : Juan G. Hurtado : https://github.com/juanghurtado","","    var gl = moment.defineLocale('gl', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Hebrew [he]","    //! author : Tomer Cohen : https://github.com/tomer","    //! author : Moshe Simantov : https://github.com/DevelopmentIL","    //! author : Tal Ater : https://github.com/TalAter","","    var he = moment.defineLocale('he', {","    //! moment.js locale configuration","    //! locale : Hindi [hi]","    //! author : Mayank Singhal : https://github.com/mayanksinghal","","    var hi__symbolMap = {","        // Hindi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","        meridiemParse: /रात|सुबह|दोपहर|शाम/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Croatian [hr]","    //! author : Bojan Marković : https://github.com/bmarkovic","","    function hr__translate(number, withoutSuffix, key) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Hungarian [hu]","    //! author : Adam Brunner : https://github.com/adambrunner","","    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Armenian [hy-am]","    //! author : Armendarabyan : https://github.com/armendarabyan","","    var hy_am = moment.defineLocale('hy-am', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Indonesian [id]","    //! author : Mohammad Satrio Utomo : https://github.com/tyok","    //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan","","    var id = moment.defineLocale('id', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Icelandic [is]","    //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik","","    function is__plural(n) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Italian [it]","    //! author : Lorenzo : https://github.com/aliem","    //! author: Mattia Larentis: https://github.com/nostalgiaz","","    var it = moment.defineLocale('it', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Japanese [ja]","    //! author : LI Long : https://github.com/baryon","","    var ja = moment.defineLocale('ja', {","    //! moment.js locale configuration","    //! locale : Japanese [jv]","    //! author : Rony Lantip : https://github.com/lantip","    //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa","","    var jv = moment.defineLocale('jv', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Georgian [ka]","    //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili","","    var ka = moment.defineLocale('ka', {","    //! moment.js locale configuration","    //! locale : Kazakh [kk]","    //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan","","    var kk__suffixes = {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Cambodian [km]","    //! author : Kruy Vanna : https://github.com/kruyvanna","","    var km = moment.defineLocale('km', {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Korean [ko]","    //!","    //! authors","    //!","    //! - Kyungwook, Park : https://github.com/kyungw00k","    //! - Jeeeyul Lee \u003cjeeeyul@gmail.com\u003e","","    var ko = moment.defineLocale('ko', {","    //! moment.js locale configuration","    //! locale : Kyrgyz [ky]","    //! author : Chyngyz Arystan uulu : https://github.com/chyngyz","","","    var ky__suffixes = {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Luxembourgish [lb]","    //! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz","","    function lb__processRelativeTime(number, withoutSuffix, key, isFuture) {","    /**","     * Returns true if the word before the given number loses the '-n' ending.","     * e.g. 'an 10 Deeg' but 'a 5 Deeg'","     *","     * @param number {integer}","     * @returns {boolean}","     */","    function eifelerRegelAppliesToNumber(number) {","            // Negative Number --\u003e always true","            return true;","            // Only 1 digit","            if (4 \u003c= number \u0026\u0026 number \u003c= 7) {","            // 2 digits","            var lastDigit = number % 10, firstDigit = number / 10;","            // 3 or 4 digits --\u003e recursively check first digit","            while (number \u003e= 10) {","            // Anything larger than 4 digits: recursively check first n-3 digits","            number = number / 1000;","                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","                switch (this.day()) {","            dow: 1, // Monday is the first day of the week.","            doy: 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Lao [lo]","    //! author : Ryan Hart : https://github.com/ryanhart2","","    var lo = moment.defineLocale('lo', {","    //! moment.js locale configuration","    //! locale : Lithuanian [lt]","    //! author : Mindaugas Mozūras : https://github.com/mmozuras","","    var lt__units = {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Latvian [lv]","    //! author : Kristaps Karlsons : https://github.com/skakri","    //! author : Jānis Elmeris : https://github.com/JanisE","","    var lv__units = {","    /**","     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.","     */","    function format(forms, number, withoutSuffix) {","            // E.g. \"21 minūte\", \"3 minūtes\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[2] : forms[3];","            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".","            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[0] : forms[1];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Montenegrin [me]","    //! author : Miodrag Nikač \u003cmiodrag@restartit.me\u003e : https://github.com/miodragnikac","","    var me__translator = {","        words: { //Different grammatical cases","            m: ['jedan minut', 'jednog minuta'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Macedonian [mk]","    //! author : Borislav Mickov : https://github.com/B0k0","","    var mk = moment.defineLocale('mk', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Malayalam [ml]","    //! author : Floyd Pink : https://github.com/floydpink","","    var ml = moment.defineLocale('ml', {","    //! moment.js locale configuration","    //! locale : Marathi [mr]","    //! author : Harshad Kale : https://github.com/kalehv","    //! author : Vivek Athalye : https://github.com/vnathalye","","    var mr__symbolMap = {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Malay [ms-my]","    //! note : DEPRECATED, the correct one is [ms]","    //! author : Weldan Jamili : https://github.com/weldan","","    var ms_my = moment.defineLocale('ms-my', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Malay [ms]","    //! author : Weldan Jamili : https://github.com/weldan","","    var ms = moment.defineLocale('ms', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Burmese [my]","    //! author : Squar team, mysquar.com","","    var my__symbolMap = {","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Norwegian Bokmål [nb]","    //! authors : Espen Hovlandsdal : https://github.com/rexxars","    //!           Sigurd Gartmann : https://github.com/sigurdga","","    var nb = moment.defineLocale('nb', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Nepalese [ne]","    //! author : suvash : https://github.com/suvash","","    var ne__symbolMap = {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Dutch [nl]","    //! author : Joris Röling : https://github.com/jjupiter","","    var nl__monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Nynorsk [nn]","    //! author : https://github.com/mechuwind","","    var nn = moment.defineLocale('nn', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Punjabi (India) [pa-in]","    //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit","","    var pa_in__symbolMap = {","        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),","        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Polish [pl]","    //! author : Rafal Hirsz : https://github.com/evoL","","    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),","                // Hack: if format empty we know this is used to generate","                // RegExp by moment. Give then back both valid forms of months","                // in RegExp ready format.","                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Portuguese (Brazil) [pt-br]","    //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira","","    var pt_br = moment.defineLocale('pt-br', {","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },","    //! moment.js locale configuration","    //! locale : Portuguese [pt]","    //! author : Jefferson : https://github.com/jalex79","","    var pt = moment.defineLocale('pt', {","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Romanian [ro]","    //! author : Vlad Gurdiga : https://github.com/gurdiga","    //! author : Valentin Agachi : https://github.com/avaly","","    function ro__relativeTimeWithPlural(number, withoutSuffix, key) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Russian [ru]","    //! author : Viktorminator : https://github.com/Viktorminator","    //! Author : Menelion Elensúle : https://github.com/Oire","    //! author : Коренберг Марк : https://github.com/socketpair","","    function ru__plural(word, num) {","    // http://new.gramota.ru/spravka/rules/139-prop : § 103","    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637","    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753","    var ru = moment.defineLocale('ru', {","            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),","        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // копия предыдущего","        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // полные названия с падежами","        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","        // Выражение, которое соотвествует только сокращённым формам","        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Northern Sami [se]","    //! authors : Bård Rolstad Henriksen : https://github.com/karamell","","","    var se = moment.defineLocale('se', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Sinhalese [si]","    //! author : Sampath Sitinamaluwa : https://github.com/sampathsris","","    /*jshint -W100*/","    /*jshint -W100*/","    var si = moment.defineLocale('si', {","    //! moment.js locale configuration","    //! locale : Slovak [sk]","    //! author : Martin Minka : https://github.com/k2s","    //! based on work of petrbela : https://github.com/petrbela","","    var sk__months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Slovenian [sl]","    //! author : Robert Sedovšek : https://github.com/sedovsek","","    function sl__processRelativeTime(number, withoutSuffix, key, isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Albanian [sq]","    //! author : Flakërim Ismani : https://github.com/flakerimi","    //! author: Menelion Elensúle: https://github.com/Oire (tests)","    //! author : Oerd Cukalla : https://github.com/oerd (fixes)","","    var sq = moment.defineLocale('sq', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Serbian Cyrillic [sr-cyrl]","    //! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","","    var sr_cyrl__translator = {","        words: { //Different grammatical cases","            m: ['један минут', 'једне минуте'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Serbian [sr]","    //! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","","    var sr__translator = {","        words: { //Different grammatical cases","            m: ['jedan minut', 'jedne minute'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Swazi [ss]","    //! author : Nicolai Davies\u003cmail@nicolai.io\u003e : https://github.com/nicolaidavies","","","    var ss = moment.defineLocale('ss', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Swedish [sv]","    //! author : Jens Alm : https://github.com/ulmus","","    var sv = moment.defineLocale('sv', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Swahili [sw]","    //! author : Fahad Kassim : https://github.com/fadsel","","    var sw = moment.defineLocale('sw', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Tamil [ta]","    //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404","","    var ta__symbolMap = {","        // refer http://ta.wikipedia.org/s/1er1","        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,","                return ' வைகறை';  // வைகறை","            } else if (hour \u003c 10) {","                return ' காலை'; // காலை","            } else if (hour \u003c 14) {","                return ' நண்பகல்'; // நண்பகல்","            } else if (hour \u003c 18) {","                return ' எற்பாடு'; // எற்பாடு","            } else if (hour \u003c 22) {","                return ' மாலை'; // மாலை","            } else {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Telugu [te]","    //! author : Krishna Chaitanya Thota : https://github.com/kcthota","","    var te = moment.defineLocale('te', {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Thai [th]","    //! author : Kridsada Thanabulpong : https://github.com/sirn","","    var th = moment.defineLocale('th', {","        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference","        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),","    //! moment.js locale configuration","    //! locale : Tagalog (Philippines) [tl-ph]","    //! author : Dan Hagman","","    var tl_ph = moment.defineLocale('tl-ph', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Klingon [tlh]","    //! author : Dominika Kruk : https://github.com/amaranthrose","","    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Turkish [tr]","    //! authors : Erhan Gundogan : https://github.com/erhangundogan,","    //!           Burak Yiğit Kaya: https://github.com/BYK","","    var tr__suffixes = {","            if (number === 0) {  // special case for zero","                return number + '\\'ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Talossan [tzl]","    //! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun","","","    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.","    // This is currently too difficult (maybe even impossible) to add.","    var tzl = moment.defineLocale('tzl', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Central Atlas Tamazight Latin [tzm-latn]","    //! author : Abdel Said : https://github.com/abdelsaid","","    var tzm_latn = moment.defineLocale('tzm-latn', {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Central Atlas Tamazight [tzm]","    //! author : Abdel Said : https://github.com/abdelsaid","","    var tzm = moment.defineLocale('tzm', {","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Ukrainian [uk]","    //! author : zemlanin : https://github.com/zemlanin","    //! Author : Menelion Elensúle : https://github.com/Oire","","    function uk__plural(word, num) {","        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","        meridiemParse: /ночі|ранку|дня|вечора/,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Uzbek [uz]","    //! author : Sardor Muminov : https://github.com/muminoff","","    var uz = moment.defineLocale('uz', {","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Vietnamese [vi]","    //! author : Bang Nguyen : https://github.com/bangnk","","    var vi = moment.defineLocale('vi', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Pseudo [x-pseudo]","    //! author : Andrew Hood : https://github.com/andrewhood125","","    var x_pseudo = moment.defineLocale('x-pseudo', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Chinese (China) [zh-cn]","    //! author : suupic : https://github.com/suupic","    //! author : Zeno Zeng : https://github.com/zenozeng","","    var zh_cn = moment.defineLocale('zh-cn', {","                // '中午'","                return hour \u003e= 11 ? hour : hour + 12;","            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    //! moment.js locale configuration","    //! locale : Chinese (Taiwan) [zh-tw]","    //! author : Ben : https://github.com/ben-lin","    //! author : Chris Lam : https://github.com/hehachris","","    var zh_tw = moment.defineLocale('zh-tw', {"],"Functions":[";(function (global, factory) ","       \u0026\u0026 typeof require === 'function' ? factory(require('../moment')) :","   typeof define === 'function' \u0026\u0026 define.amd ? define(['../moment'], factory) :","}(this, function (moment)  'use strict';","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","    }, pluralForm = function (n) ","    }, pluralize = function (u) ","        return function (number, withoutSuffix, string, isFuture) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/\\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function be__plural(word, num) ","    function be__relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek: function () ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","            lastWeek : function () ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function relativeTimeWithMutation(number, withoutSuffix, key) ","    function specialMutationForYears(number) ","    function lastNumber(number) ","    function mutation(text, number) ","    function softMutation(text) ","        ordinal : function (number) ","    function bs__translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","        ordinal : function (number, period) ","    function cs__plural(n) ","    function cs__translate(number, withoutSuffix, key, isFuture) ","        monthsParse : (function (months, monthsShort) ","        shortMonthsParse : (function (monthsShort) ","        longMonthsParse : (function (months) ","            nextWeek: function () ","            lastWeek: function () ","            future : function (output) ","        ordinal: function (number) ","    function de_at__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function de__processRelativeTime(number, withoutSuffix, key, isFuture) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","        postformat: function (string) ","    function isFunction(input) ","        months : function (momentToFormat, format) ","        meridiem : function (hours, minutes, isLower) ","        isPM : function (input) ","            lastWeek : function () ","        calendar : function (key, mom) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","    function et__processRelativeTime(number, withoutSuffix, key, isFuture) ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[۰-۹]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","    function fi__translate(number, withoutSuffix, key, isFuture) ","    function verbalNumber(number, isFuture) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        monthsShort : function (m, format) ","        ordinal : function (number) ","        ordinal : function (number) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","            future : function (str) ","            hh : function (number) ","            dd : function (number) ","            MM : function (number) ","            yy : function (number) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function hr__translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () ","    function hu__translate(number, withoutSuffix, key, isFuture) ","    function week(isFuture) ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","            nextWeek : function () ","            lastWeek : function () ","            nextWeek: function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour) ","        ordinal: function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","    function is__plural(n) ","    function is__translate(number, withoutSuffix, key, isFuture) ","            lastWeek: function () ","            future : function (s) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","            future : function (s) ","            past : function (s) ","        ordinal : function (number) ","        ordinal : function (number) ","        isPM : function (token) ","        meridiem : function (hour, minute, isUpper) ","        ordinal : function (number) ","    function lb__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function processFutureTime(string) ","    function processPastTime(string) ","    function eifelerRegelAppliesToNumber(number) ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function translateSeconds(number, withoutSuffix, key, isFuture) ","    function translateSingular(number, withoutSuffix, key, isFuture) ","    function special(number) ","    function forms(key) ","    function lt__translate(number, withoutSuffix, key, isFuture) ","        ordinal : function (number) ","    function format(forms, number, withoutSuffix) ","    function lv__relativeTimeWithPlural(number, withoutSuffix, key) ","    function relativeTimeWithSingular(number, withoutSuffix, key) ","    function relativeSeconds(number, withoutSuffix) ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","            lastWeek : function () ","        ordinal : function (number) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function relativeTimeMr(number, withoutSuffix, string, isFuture)","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem: function (hour, minute, isLower) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","        preparse: function (string) ","            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        monthsShort : function (m, format) ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function pl__plural(n) ","    function pl__translate(number, withoutSuffix, key) ","        months : function (momentToFormat, format) ","            lastWeek: function () ","            lastWeek: function () ","            lastWeek: function () ","    function ro__relativeTimeWithPlural(number, withoutSuffix, key) ","    function ru__plural(word, num) ","    function ru__relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function (now) ","            lastWeek: function (now) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","    function sk__plural(n) ","    function sk__translate(number, withoutSuffix, key, isFuture) ","            nextWeek: function () ","            lastWeek: function () ","    function sl__processRelativeTime(number, withoutSuffix, key, isFuture) ","            nextWeek : function () ","            lastWeek : function () ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","        meridiem : function (hours, minutes, isLower) ","        meridiemHour : function (hour, meridiem) ","        ordinal : function (number) ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiem : function (hour, minute, isLower) ","        meridiemHour : function (hour, meridiem) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function translateFuture(output) ","    function translatePast(output) ","    function tlh__translate(number, withoutSuffix, string, isFuture) ","    function numberAsNoun(number) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","    function tzl__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function uk__plural(word, num) ","    function uk__relativeTimeWithPlural(number, withoutSuffix, key) ","    function weekdaysCaseReplace(m, format) ","    function processHoursFunction(str) ","        return function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) ","        ordinal : function (number) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","            sameDay : function () ","            nextDay : function () ","            lastDay : function () ","            nextWeek : function () ","            lastWeek : function () ","        ordinal : function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\min\\locales.min.js","LineCount":253,"CharCount":168727,"Comments":["//! moment.js locale configuration","//! locale : Belarusian [be]","//! author : Dmitry Demidov : https://github.com/demidov91","//! author: Praleska: http://praleska.pro/","//! Author : Menelion Elensúle : https://github.com/Oire","function b(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function c(a,c,d){var e={mm:c?\"хвіліна_хвіліны_хвілін\":\"хвіліну_хвіліны_хвілін\",hh:c?\"гадзіна_гадзіны_гадзін\":\"гадзіну_гадзіны_гадзін\",dd:\"дзень_дні_дзён\",MM:\"месяц_месяцы_месяцаў\",yy:\"год_гады_гадоў\"};return\"m\"===d?c?\"хвіліна\":\"хвіліну\":\"h\"===d?c?\"гадзіна\":\"гадзіну\":a+\" \"+b(e[d],+a)}","//! moment.js locale configuration","//! locale : Breton [br]","//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou","function d(a,b,c){var d={mm:\"munutenn\",MM:\"miz\",dd:\"devezh\"};return a+\" \"+g(d[c],a)}function e(a){switch(f(a)){case 1:case 3:case 4:case 5:case 9:return a+\" bloaz\";default:return a+\" vloaz\"}}function f(a){return a\u003e9?f(a%10):a}function g(a,b){return 2===b?h(a):a}function h(a){var b={m:\"v\",b:\"v\",d:\"z\"};return void 0===b[a.charAt(0)]?a:b[a.charAt(0)]+a.substring(1)}","//! moment.js locale configuration","//! locale : Bosnian [bs]","//! author : Nedim Cholich : https://github.com/frontyard","//! based on (hr) translation by Bojan Marković","function i(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function j(a){return a\u003e1\u0026\u00265\u003ea\u0026\u00261!==~~(a/10)}function k(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?\"pár sekund\":\"pár sekundami\";case\"m\":// a minute / in a minute / a minute ago","return b?\"minuta\":d?\"minutu\":\"minutou\";case\"mm\":// 9 minutes / in 9 minutes / 9 minutes ago","// 9 minutes / in 9 minutes / 9 minutes ago","return b||d?e+(j(a)?\"minuty\":\"minut\"):e+\"minutami\";break;case\"h\":// an hour / in an hour / an hour ago","return b?\"hodina\":d?\"hodinu\":\"hodinou\";case\"hh\":// 9 hours / in 9 hours / 9 hours ago","// 9 hours / in 9 hours / 9 hours ago","return b||d?e+(j(a)?\"hodiny\":\"hodin\"):e+\"hodinami\";break;case\"d\":// a day / in a day / a day ago","return b||d?\"den\":\"dnem\";case\"dd\":// 9 days / in 9 days / 9 days ago","// 9 days / in 9 days / 9 days ago","return b||d?e+(j(a)?\"dny\":\"dní\"):e+\"dny\";break;case\"M\":// a month / in a month / a month ago","return b||d?\"měsíc\":\"měsícem\";case\"MM\":// 9 months / in 9 months / 9 months ago","// 9 months / in 9 months / 9 months ago","return b||d?e+(j(a)?\"měsíce\":\"měsíců\"):e+\"měsíci\";break;case\"y\":// a year / in a year / a year ago","return b||d?\"rok\":\"rokem\";case\"yy\":// 9 years / in 9 years / 9 years ago","// 9 years / in 9 years / 9 years ago","return b||d?e+(j(a)?\"roky\":\"let\"):e+\"lety\"}}","//! moment.js locale configuration","//! locale : German (Austria) [de-at]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Martin Groller : https://github.com/MadMG","//! author : Mikolaj Dadela : https://github.com/mik01aj","function l(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}","//! moment.js locale configuration","//! locale : German [de]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Mikolaj Dadela : https://github.com/mik01aj","function m(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function n(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}","//! moment.js locale configuration","//! locale : Estonian [et]","//! author : Henry Kehlmann : https://github.com/madhenry","//! improvements : Illimar Tambek : https://github.com/ragulka","function o(a,b,c,d){var e={s:[\"mõne sekundi\",\"mõni sekund\",\"paar sekundit\"],m:[\"ühe minuti\",\"üks minut\"],mm:[a+\" minuti\",a+\" minutit\"],h:[\"ühe tunni\",\"tund aega\",\"üks tund\"],hh:[a+\" tunni\",a+\" tundi\"],d:[\"ühe päeva\",\"üks päev\"],M:[\"kuu aja\",\"kuu aega\",\"üks kuu\"],MM:[a+\" kuu\",a+\" kuud\"],y:[\"ühe aasta\",\"aasta\",\"üks aasta\"],yy:[a+\" aasta\",a+\" aastat\"]};return b?e[c][2]?e[c][2]:e[c][1]:d?e[c][0]:e[c][1]}function p(a,b,c,d){var e=\"\";switch(c){case\"s\":return d?\"muutaman sekunnin\":\"muutama sekunti\";case\"m\":return d?\"minuutin\":\"minuutti\";case\"mm\":e=d?\"minuutin\":\"minuuttia\";break;case\"h\":return d?\"tunnin\":\"tunti\";case\"hh\":e=d?\"tunnin\":\"tuntia\";break;case\"d\":return d?\"päivän\":\"päivä\";case\"dd\":e=d?\"päivän\":\"päivää\";break;case\"M\":return d?\"kuukauden\":\"kuukausi\";case\"MM\":e=d?\"kuukauden\":\"kuukautta\";break;case\"y\":return d?\"vuoden\":\"vuosi\";case\"yy\":e=d?\"vuoden\":\"vuotta\"}return e=q(a,d)+\" \"+e}function q(a,b){return 10\u003ea?b?xa[a]:wa[a]:a}","//! moment.js locale configuration","//! locale : Croatian [hr]","//! author : Bojan Marković : https://github.com/bmarkovic","function r(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function s(a,b,c,d){var e=a;switch(c){case\"s\":return d||b?\"néhány másodperc\":\"néhány másodperce\";case\"m\":return\"egy\"+(d||b?\" perc\":\" perce\");case\"mm\":return e+(d||b?\" perc\":\" perce\");case\"h\":return\"egy\"+(d||b?\" óra\":\" órája\");case\"hh\":return e+(d||b?\" óra\":\" órája\");case\"d\":return\"egy\"+(d||b?\" nap\":\" napja\");case\"dd\":return e+(d||b?\" nap\":\" napja\");case\"M\":return\"egy\"+(d||b?\" hónap\":\" hónapja\");case\"MM\":return e+(d||b?\" hónap\":\" hónapja\");case\"y\":return\"egy\"+(d||b?\" év\":\" éve\");case\"yy\":return e+(d||b?\" év\":\" éve\")}return\"\"}function t(a){return(a?\"\":\"[múlt] \")+\"[\"+Ha[this.day()]+\"] LT[-kor]\"}","//! moment.js locale configuration","//! locale : Icelandic [is]","//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik","function u(a){return a%100===11?!0:a%10!==1}function v(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nokkrar sekúndur\":\"nokkrum sekúndum\";case\"m\":return b?\"mínúta\":\"mínútu\";case\"mm\":return u(a)?e+(b||d?\"mínútur\":\"mínútum\"):b?e+\"mínúta\":e+\"mínútu\";case\"hh\":return u(a)?e+(b||d?\"klukkustundir\":\"klukkustundum\"):e+\"klukkustund\";case\"d\":return b?\"dagur\":d?\"dag\":\"degi\";case\"dd\":return u(a)?b?e+\"dagar\":e+(d?\"daga\":\"dögum\"):b?e+\"dagur\":e+(d?\"dag\":\"degi\");case\"M\":return b?\"mánuður\":d?\"mánuð\":\"mánuði\";case\"MM\":return u(a)?b?e+\"mánuðir\":e+(d?\"mánuði\":\"mánuðum\"):b?e+\"mánuður\":e+(d?\"mánuð\":\"mánuði\");case\"y\":return b||d?\"ár\":\"ári\";case\"yy\":return u(a)?e+(b||d?\"ár\":\"árum\"):e+(b||d?\"ár\":\"ári\")}}","//! moment.js locale configuration","//! locale : Luxembourgish [lb]","//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz","function w(a,b,c,d){var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function x(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"a \"+a:\"an \"+a}function y(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"viru \"+a:\"virun \"+a}/**","function w(a,b,c,d){var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function x(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"a \"+a:\"an \"+a}function y(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"viru \"+a:\"virun \"+a}/**","     * Returns true if the word before the given number loses the '-n' ending.","     * e.g. 'an 10 Deeg' but 'a 5 Deeg'","     *","     * @param number {integer}","     * @returns {boolean}","     */","function z(a){if(a=parseInt(a,10),isNaN(a))return!1;if(0\u003ea)","// Negative Number --\u003e always true","return!0;if(10\u003ea)","// Only 1 digit","return a\u003e=4\u0026\u00267\u003e=a;if(100\u003ea){","// 2 digits","var b=a%10,c=a/10;return z(0===b?c:b)}if(1e4\u003ea){","// 3 or 4 digits --\u003e recursively check first digit","for(;a\u003e=10;)a/=10;return z(a)}","// Anything larger than 4 digits: recursively check first n-3 digits","return a/=1e3,z(a)}function A(a,b,c,d){return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function B(a,b,c,d){return b?D(c)[0]:d?D(c)[1]:D(c)[2]}function C(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function D(a){return Ka[a].split(\"_\")}function E(a,b,c,d){var e=a+\" \";return 1===a?e+B(a,b,c[0],d):b?e+(C(a)?D(c)[1]:D(c)[0]):d?e+D(c)[1]:e+(C(a)?D(c)[1]:D(c)[2])}/**","return a/=1e3,z(a)}function A(a,b,c,d){return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function B(a,b,c,d){return b?D(c)[0]:d?D(c)[1]:D(c)[2]}function C(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function D(a){return Ka[a].split(\"_\")}function E(a,b,c,d){var e=a+\" \";return 1===a?e+B(a,b,c[0],d):b?e+(C(a)?D(c)[1]:D(c)[0]):d?e+D(c)[1]:e+(C(a)?D(c)[1]:D(c)[2])}/**","     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.","     */","function F(a,b,c){return c?b%10===1\u0026\u0026b%100!==11?a[2]:a[3]:b%10===1\u0026\u0026b%100!==11?a[0]:a[1]}function G(a,b,c){return a+\" \"+F(La[c],a,b)}function H(a,b,c){return F(La[c],a,b)}function I(a,b){return b?\"dažas sekundes\":\"dažām sekundēm\"}function J(a,b,c,d){var e=\"\";if(b)switch(c){case\"s\":e=\"काही सेकंद\";break;case\"m\":e=\"एक मिनिट\";break;case\"mm\":e=\"%d मिनिटे\";break;case\"h\":e=\"एक तास\";break;case\"hh\":e=\"%d तास\";break;case\"d\":e=\"एक दिवस\";break;case\"dd\":e=\"%d दिवस\";break;case\"M\":e=\"एक महिना\";break;case\"MM\":e=\"%d महिने\";break;case\"y\":e=\"एक वर्ष\";break;case\"yy\":e=\"%d वर्षे\"}else switch(c){case\"s\":e=\"काही सेकंदां\";break;case\"m\":e=\"एका मिनिटा\";break;case\"mm\":e=\"%d मिनिटां\";break;case\"h\":e=\"एका तासा\";break;case\"hh\":e=\"%d तासां\";break;case\"d\":e=\"एका दिवसा\";break;case\"dd\":e=\"%d दिवसां\";break;case\"M\":e=\"एका महिन्या\";break;case\"MM\":e=\"%d महिन्यां\";break;case\"y\":e=\"एका वर्षा\";break;case\"yy\":e=\"%d वर्षां\"}return e.replace(/%d/i,a)}function K(a){return 5\u003ea%10\u0026\u0026a%10\u003e1\u0026\u0026~~(a/10)%10!==1}function L(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"minuta\":\"minutę\";case\"mm\":return d+(K(a)?\"minuty\":\"minut\");case\"h\":return b?\"godzina\":\"godzinę\";case\"hh\":return d+(K(a)?\"godziny\":\"godzin\");case\"MM\":return d+(K(a)?\"miesiące\":\"miesięcy\");case\"yy\":return d+(K(a)?\"lata\":\"lat\")}}","//! moment.js locale configuration","//! locale : Romanian [ro]","//! author : Vlad Gurdiga : https://github.com/gurdiga","//! author : Valentin Agachi : https://github.com/avaly","function M(a,b,c){var d={mm:\"minute\",hh:\"ore\",dd:\"zile\",MM:\"luni\",yy:\"ani\"},e=\" \";return(a%100\u003e=20||a\u003e=100\u0026\u0026a%100===0)\u0026\u0026(e=\" de \"),a+e+d[c]}","//! moment.js locale configuration","//! locale : Russian [ru]","//! author : Viktorminator : https://github.com/Viktorminator","//! Author : Menelion Elensúle : https://github.com/Oire","//! author : Коренберг Марк : https://github.com/socketpair","function N(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function O(a,b,c){var d={mm:b?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"};return\"m\"===c?b?\"минута\":\"минуту\":a+\" \"+N(d[c],+a)}function P(a){return a\u003e1\u0026\u00265\u003ea}function Q(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?\"pár sekúnd\":\"pár sekundami\";case\"m\":// a minute / in a minute / a minute ago","return b?\"minúta\":d?\"minútu\":\"minútou\";case\"mm\":// 9 minutes / in 9 minutes / 9 minutes ago","// 9 minutes / in 9 minutes / 9 minutes ago","return b||d?e+(P(a)?\"minúty\":\"minút\"):e+\"minútami\";break;case\"h\":// an hour / in an hour / an hour ago","return b?\"hodina\":d?\"hodinu\":\"hodinou\";case\"hh\":// 9 hours / in 9 hours / 9 hours ago","// 9 hours / in 9 hours / 9 hours ago","return b||d?e+(P(a)?\"hodiny\":\"hodín\"):e+\"hodinami\";break;case\"d\":// a day / in a day / a day ago","return b||d?\"deň\":\"dňom\";case\"dd\":// 9 days / in 9 days / 9 days ago","// 9 days / in 9 days / 9 days ago","return b||d?e+(P(a)?\"dni\":\"dní\"):e+\"dňami\";break;case\"M\":// a month / in a month / a month ago","return b||d?\"mesiac\":\"mesiacom\";case\"MM\":// 9 months / in 9 months / 9 months ago","// 9 months / in 9 months / 9 months ago","return b||d?e+(P(a)?\"mesiace\":\"mesiacov\"):e+\"mesiacmi\";break;case\"y\":// a year / in a year / a year ago","return b||d?\"rok\":\"rokom\";case\"yy\":// 9 years / in 9 years / 9 years ago","// 9 years / in 9 years / 9 years ago","return b||d?e+(P(a)?\"roky\":\"rokov\"):e+\"rokmi\"}}","//! moment.js locale configuration","//! locale : Slovenian [sl]","//! author : Robert Sedovšek : https://github.com/sedovsek","function R(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nekaj sekund\":\"nekaj sekundami\";case\"m\":return b?\"ena minuta\":\"eno minuto\";case\"mm\":return e+=1===a?b?\"minuta\":\"minuto\":2===a?b||d?\"minuti\":\"minutama\":5\u003ea?b||d?\"minute\":\"minutami\":b||d?\"minut\":\"minutami\";case\"h\":return b?\"ena ura\":\"eno uro\";case\"hh\":return e+=1===a?b?\"ura\":\"uro\":2===a?b||d?\"uri\":\"urama\":5\u003ea?b||d?\"ure\":\"urami\":b||d?\"ur\":\"urami\";case\"d\":return b||d?\"en dan\":\"enim dnem\";case\"dd\":return e+=1===a?b||d?\"dan\":\"dnem\":2===a?b||d?\"dni\":\"dnevoma\":b||d?\"dni\":\"dnevi\";case\"M\":return b||d?\"en mesec\":\"enim mesecem\";case\"MM\":return e+=1===a?b||d?\"mesec\":\"mesecem\":2===a?b||d?\"meseca\":\"mesecema\":5\u003ea?b||d?\"mesece\":\"meseci\":b||d?\"mesecev\":\"meseci\";case\"y\":return b||d?\"eno leto\":\"enim letom\";case\"yy\":return e+=1===a?b||d?\"leto\":\"letom\":2===a?b||d?\"leti\":\"letoma\":5\u003ea?b||d?\"leta\":\"leti\":b||d?\"let\":\"leti\"}}function S(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"leS\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"waQ\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"nem\":b+\" pIq\"}function T(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"Hu’\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"wen\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"ben\":b+\" ret\"}function U(a,b,c,d){var e=V(a);switch(c){case\"mm\":return e+\" tup\";case\"hh\":return e+\" rep\";case\"dd\":return e+\" jaj\";case\"MM\":return e+\" jar\";case\"yy\":return e+\" DIS\"}}function V(a){var b=Math.floor(a%1e3/100),c=Math.floor(a%100/10),d=a%10,e=\"\";return b\u003e0\u0026\u0026(e+=eb[b]+\"vatlh\"),c\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+eb[c]+\"maH\"),d\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+eb[d]),\"\"===e?\"pagh\":e}function W(a,b,c,d){var e={s:[\"viensas secunds\",\"'iensas secunds\"],m:[\"'n míut\",\"'iens míut\"],mm:[a+\" míuts\",\"\"+a+\" míuts\"],h:[\"'n þora\",\"'iensa þora\"],hh:[a+\" þoras\",\"\"+a+\" þoras\"],d:[\"'n ziua\",\"'iensa ziua\"],dd:[a+\" ziuas\",\"\"+a+\" ziuas\"],M:[\"'n mes\",\"'iens mes\"],MM:[a+\" mesen\",\"\"+a+\" mesen\"],y:[\"'n ar\",\"'iens ar\"],yy:[a+\" ars\",\"\"+a+\" ars\"]};return d?e[c][0]:b?e[c][0]:e[c][1]}","//! moment.js locale configuration","//! locale : Ukrainian [uk]","//! author : zemlanin : https://github.com/zemlanin","//! Author : Menelion Elensúle : https://github.com/Oire","function X(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function Y(a,b,c){var d={mm:b?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:b?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"};return\"m\"===c?b?\"хвилина\":\"хвилину\":\"h\"===c?b?\"година\":\"годину\":a+\" \"+X(d[c],+a)}function Z(a,b){var c={nominative:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),accusative:\"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу\".split(\"_\"),genitive:\"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи\".split(\"_\")},d=/(\\[[ВвУу]\\]) ?dddd/.test(b)?\"accusative\":/\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(b)?\"genitive\":\"nominative\";return c[d][a.day()]}function $(a){return function(){return a+\"о\"+(11===this.hours()?\"б\":\"\")+\"] LT\"}}","//! moment.js locale configuration","//! locale : Afrikaans [af]","//! author : Werner Mollentze : https://github.com/wernerm","var _=(a.defineLocale(\"af\",{months:\"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),weekdaysShort:\"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),weekdaysMin:\"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),meridiemParse:/vm|nm/i,isPM:function(a){return/^nm$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"vm\":\"VM\":c?\"nm\":\"NM\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Vandag om] LT\",nextDay:\"[Môre om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[Gister om] LT\",lastWeek:\"[Laas] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oor %s\",past:\"%s gelede\",s:\"'n paar sekondes\",m:\"'n minuut\",mm:\"%d minute\",h:\"'n uur\",hh:\"%d ure\",d:\"'n dag\",dd:\"%d dae\",M:\"'n maand\",MM:\"%d maande\",y:\"'n jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Maandag is die eerste dag van die week.","doy:4}}),a.defineLocale(\"ar-ma\",{months:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),weekdays:\"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),{1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),aa={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},ba=(a.defineLocale(\"ar-sa\",{months:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},preparse:function(a){return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return aa[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return _[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),a.defineLocale(\"ar-tn\",{months:\"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),ca={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},da=function(a){return 0===a?0:1===a?1:2===a?2:a%100\u003e=3\u0026\u002610\u003e=a%100?3:a%100\u003e=11?4:5},ea={s:[\"أقل من ثانية\",\"ثانية واحدة\",[\"ثانيتان\",\"ثانيتين\"],\"%d ثوان\",\"%d ثانية\",\"%d ثانية\"],m:[\"أقل من دقيقة\",\"دقيقة واحدة\",[\"دقيقتان\",\"دقيقتين\"],\"%d دقائق\",\"%d دقيقة\",\"%d دقيقة\"],h:[\"أقل من ساعة\",\"ساعة واحدة\",[\"ساعتان\",\"ساعتين\"],\"%d ساعات\",\"%d ساعة\",\"%d ساعة\"],d:[\"أقل من يوم\",\"يوم واحد\",[\"يومان\",\"يومين\"],\"%d أيام\",\"%d يومًا\",\"%d يوم\"],M:[\"أقل من شهر\",\"شهر واحد\",[\"شهران\",\"شهرين\"],\"%d أشهر\",\"%d شهرا\",\"%d شهر\"],y:[\"أقل من عام\",\"عام واحد\",[\"عامان\",\"عامين\"],\"%d أعوام\",\"%d عامًا\",\"%d عام\"]},fa=function(a){return function(b,c,d,e){var f=da(b),g=ea[a][da(b)];return 2===f\u0026\u0026(g=g[c?0:1]),g.replace(/%d/i,b)}},ga=[\"كانون الثاني يناير\",\"شباط فبراير\",\"آذار مارس\",\"نيسان أبريل\",\"أيار مايو\",\"حزيران يونيو\",\"تموز يوليو\",\"آب أغسطس\",\"أيلول سبتمبر\",\"تشرين الأول أكتوبر\",\"تشرين الثاني نوفمبر\",\"كانون الأول ديسمبر\"],ha=(a.defineLocale(\"ar\",{months:ga,monthsShort:ga,weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/‏M/‏YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم عند الساعة] LT\",nextDay:\"[غدًا عند الساعة] LT\",nextWeek:\"dddd [عند الساعة] LT\",lastDay:\"[أمس عند الساعة] LT\",lastWeek:\"dddd [عند الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"بعد %s\",past:\"منذ %s\",s:fa(\"s\"),m:fa(\"m\"),mm:fa(\"m\"),h:fa(\"h\"),hh:fa(\"h\"),d:fa(\"d\"),dd:fa(\"d\"),M:fa(\"M\"),MM:fa(\"M\"),y:fa(\"y\"),yy:fa(\"y\")},preparse:function(a){return a.replace(/\\u200f/g,\"\").replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return ca[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ba[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),{1:\"-inci\",5:\"-inci\",8:\"-inci\",70:\"-inci\",80:\"-inci\",2:\"-nci\",7:\"-nci\",20:\"-nci\",50:\"-nci\",3:\"-üncü\",4:\"-üncü\",100:\"-üncü\",6:\"-ncı\",9:\"-uncu\",10:\"-uncu\",30:\"-uncu\",60:\"-ıncı\",90:\"-ıncı\"}),ia=(a.defineLocale(\"az\",{months:\"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr\".split(\"_\"),monthsShort:\"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek\".split(\"_\"),weekdays:\"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə\".split(\"_\"),weekdaysShort:\"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən\".split(\"_\"),weekdaysMin:\"Bz_BE_ÇA_Çə_CA_Cü_Şə\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[sabah saat] LT\",nextWeek:\"[gələn həftə] dddd [saat] LT\",lastDay:\"[dünən] LT\",lastWeek:\"[keçən həftə] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s əvvəl\",s:\"birneçə saniyyə\",m:\"bir dəqiqə\",mm:\"%d dəqiqə\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir il\",yy:\"%d il\"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(a){return/^(gündüz|axşam)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"gecə\":12\u003ea?\"səhər\":17\u003ea?\"gündüz\":\"axşam\"},ordinalParse:/\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(a){if(0===a)// special case for zero","return a+\"-ıncı\";var b=a%10,c=a%100-b,d=a\u003e=100?100:null;return a+(ha[b]||ha[c]||ha[d])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"be\",{months:{format:\"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня\".split(\"_\"),standalone:\"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань\".split(\"_\")},monthsShort:\"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж\".split(\"_\"),weekdays:{format:\"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу\".split(\"_\"),standalone:\"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/},weekdaysShort:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сёння ў] LT\",nextDay:\"[Заўтра ў] LT\",lastDay:\"[Учора ў] LT\",nextWeek:function(){return\"[У] dddd [ў] LT\"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return\"[У мінулую] dddd [ў] LT\";case 1:case 2:case 4:return\"[У мінулы] dddd [ў] LT\"}},sameElse:\"L\"},relativeTime:{future:\"праз %s\",past:\"%s таму\",s:\"некалькі секунд\",m:c,mm:c,h:c,hh:c,d:\"дзень\",dd:c,M:\"месяц\",MM:c,y:\"год\",yy:c},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(a){return/^(дня|вечара)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночы\":12\u003ea?\"раніцы\":17\u003ea?\"дня\":\"вечара\"},ordinalParse:/\\d{1,2}-(і|ы|га)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a%10!==2\u0026\u0026a%10!==3||a%100===12||a%100===13?a+\"-ы\":a+\"-і\";case\"D\":return a+\"-га\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"bg\",{months:\"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Днес в] LT\",nextDay:\"[Утре в] LT\",nextWeek:\"dddd [в] LT\",lastDay:\"[Вчера в] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[В изминалата] dddd [в] LT\";case 1:case 2:case 4:case 5:return\"[В изминалия] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"след %s\",past:\"преди %s\",s:\"няколко секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дни\",M:\"месец\",MM:\"%d месеца\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"১\",2:\"২\",3:\"৩\",4:\"৪\",5:\"৫\",6:\"৬\",7:\"৭\",8:\"৮\",9:\"৯\",0:\"০\"}),ja={\"১\":\"1\",\"২\":\"2\",\"৩\":\"3\",\"৪\":\"4\",\"৫\":\"5\",\"৬\":\"6\",\"৭\":\"7\",\"৮\":\"8\",\"৯\":\"9\",\"০\":\"0\"},ka=(a.defineLocale(\"bn\",{months:\"জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর\".split(\"_\"),monthsShort:\"জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্\".split(\"_\"),weekdays:\"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার\".split(\"_\"),weekdaysShort:\"রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি\".split(\"_\"),weekdaysMin:\"রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি\".split(\"_\"),longDateFormat:{LT:\"A h:mm সময়\",LTS:\"A h:mm:ss সময়\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm সময়\",LLLL:\"dddd, D MMMM YYYY, A h:mm সময়\"},calendar:{sameDay:\"[আজ] LT\",nextDay:\"[আগামীকাল] LT\",nextWeek:\"dddd, LT\",lastDay:\"[গতকাল] LT\",lastWeek:\"[গত] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s পরে\",past:\"%s আগে\",s:\"কয়েক সেকেন্ড\",m:\"এক মিনিট\",mm:\"%d মিনিট\",h:\"এক ঘন্টা\",hh:\"%d ঘন্টা\",d:\"এক দিন\",dd:\"%d দিন\",M:\"এক মাস\",MM:\"%d মাস\",y:\"এক বছর\",yy:\"%d বছর\"},preparse:function(a){return a.replace(/[১২৩৪৫৬৭৮৯০]/g,function(a){return ja[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ia[a]})},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"রাত\"===b\u0026\u0026a\u003e=4||\"দুপুর\"===b\u0026\u00265\u003ea||\"বিকাল\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"রাত\":10\u003ea?\"সকাল\":17\u003ea?\"দুপুর\":20\u003ea?\"বিকাল\":\"রাত\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),{1:\"༡\",2:\"༢\",3:\"༣\",4:\"༤\",5:\"༥\",6:\"༦\",7:\"༧\",8:\"༨\",9:\"༩\",0:\"༠\"}),la={\"༡\":\"1\",\"༢\":\"2\",\"༣\":\"3\",\"༤\":\"4\",\"༥\":\"5\",\"༦\":\"6\",\"༧\":\"7\",\"༨\":\"8\",\"༩\":\"9\",\"༠\":\"0\"},ma=(a.defineLocale(\"bo\",{months:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),monthsShort:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),weekdays:\"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་\".split(\"_\"),weekdaysShort:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),weekdaysMin:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[དི་རིང] LT\",nextDay:\"[སང་ཉིན] LT\",nextWeek:\"[བདུན་ཕྲག་རྗེས་མ], LT\",lastDay:\"[ཁ་སང] LT\",lastWeek:\"[བདུན་ཕྲག་མཐའ་མ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ལ་\",past:\"%s སྔན་ལ\",s:\"ལམ་སང\",m:\"སྐར་མ་གཅིག\",mm:\"%d སྐར་མ\",h:\"ཆུ་ཚོད་གཅིག\",hh:\"%d ཆུ་ཚོད\",d:\"ཉིན་གཅིག\",dd:\"%d ཉིན་\",M:\"ཟླ་བ་གཅིག\",MM:\"%d ཟླ་བ\",y:\"ལོ་གཅིག\",yy:\"%d ལོ\"},preparse:function(a){return a.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,function(a){return la[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ka[a]})},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"མཚན་མོ\"===b\u0026\u0026a\u003e=4||\"ཉིན་གུང\"===b\u0026\u00265\u003ea||\"དགོང་དག\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"མཚན་མོ\":10\u003ea?\"ཞོགས་ཀས\":17\u003ea?\"ཉིན་གུང\":20\u003ea?\"དགོང་དག\":\"མཚན་མོ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"br\",{months:\"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu\".split(\"_\"),monthsShort:\"Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker\".split(\"_\"),weekdays:\"Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn\".split(\"_\"),weekdaysShort:\"Sul_Lun_Meu_Mer_Yao_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Lu_Me_Mer_Ya_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h[e]mm A\",LTS:\"h[e]mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [a viz] MMMM YYYY\",LLL:\"D [a viz] MMMM YYYY h[e]mm A\",LLLL:\"dddd, D [a viz] MMMM YYYY h[e]mm A\"},calendar:{sameDay:\"[Hiziv da] LT\",nextDay:\"[Warc'hoazh da] LT\",nextWeek:\"dddd [da] LT\",lastDay:\"[Dec'h da] LT\",lastWeek:\"dddd [paset da] LT\",sameElse:\"L\"},relativeTime:{future:\"a-benn %s\",past:\"%s 'zo\",s:\"un nebeud segondennoù\",m:\"ur vunutenn\",mm:d,h:\"un eur\",hh:\"%d eur\",d:\"un devezh\",dd:d,M:\"ur miz\",MM:d,y:\"ur bloaz\",yy:e},ordinalParse:/\\d{1,2}(añ|vet)/,ordinal:function(a){var b=1===a?\"añ\":\"vet\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"bs\",{months:\"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:i,mm:i,h:i,hh:i,d:\"dan\",dd:i,M:\"mjesec\",MM:i,y:\"godinu\",yy:i},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ca\",{months:\"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre\".split(\"_\"),monthsShort:\"gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte\".split(\"_\"),weekdaysShort:\"dg._dl._dt._dc._dj._dv._ds.\".split(\"_\"),weekdaysMin:\"Dg_Dl_Dt_Dc_Dj_Dv_Ds\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[avui a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextDay:function(){return\"[demà a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextWeek:function(){return\"dddd [a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastDay:function(){return\"[ahir a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [passat a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"fa %s\",s:\"uns segons\",m:\"un minut\",mm:\"%d minuts\",h:\"una hora\",hh:\"%d hores\",d:\"un dia\",dd:\"%d dies\",M:\"un mes\",MM:\"%d mesos\",y:\"un any\",yy:\"%d anys\"},ordinalParse:/\\d{1,2}(r|n|t|è|a)/,ordinal:function(a,b){var c=1===a?\"r\":2===a?\"n\":3===a?\"r\":4===a?\"t\":\"è\";return\"w\"!==b\u0026\u0026\"W\"!==b||(c=\"a\"),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\")),na=\"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\"),oa=(a.defineLocale(\"cs\",{months:ma,monthsShort:na,monthsParse:function(a,b){var c,d=[];for(c=0;12\u003ec;c++)","// use custom parser to solve problem with July (červenec)","d[c]=new RegExp(\"^\"+a[c]+\"$|^\"+b[c]+\"$\",\"i\");return d}(ma,na),shortMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(na),longMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(ma),weekdays:\"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),weekdaysShort:\"ne_po_út_st_čt_pá_so\".split(\"_\"),weekdaysMin:\"ne_po_út_st_čt_pá_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},calendar:{sameDay:\"[dnes v] LT\",nextDay:\"[zítra v] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v neděli v] LT\";case 1:case 2:return\"[v] dddd [v] LT\";case 3:return\"[ve středu v] LT\";case 4:return\"[ve čtvrtek v] LT\";case 5:return\"[v pátek v] LT\";case 6:return\"[v sobotu v] LT\"}},lastDay:\"[včera v] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulou neděli v] LT\";case 1:case 2:return\"[minulé] dddd [v] LT\";case 3:return\"[minulou středu v] LT\";case 4:case 5:return\"[minulý] dddd [v] LT\";case 6:return\"[minulou sobotu v] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"před %s\",s:k,m:k,mm:k,h:k,hh:k,d:k,dd:k,M:k,MM:k,y:k,yy:k},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"cv\",{months:\"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав\".split(\"_\"),monthsShort:\"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш\".split(\"_\"),weekdays:\"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун\".split(\"_\"),weekdaysShort:\"выр_тун_ытл_юн_кӗҫ_эрн_шӑм\".split(\"_\"),weekdaysMin:\"вр_тн_ыт_юн_кҫ_эр_шм\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]\",LLL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\",LLLL:\"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\"},calendar:{sameDay:\"[Паян] LT [сехетре]\",nextDay:\"[Ыран] LT [сехетре]\",lastDay:\"[Ӗнер] LT [сехетре]\",nextWeek:\"[Ҫитес] dddd LT [сехетре]\",lastWeek:\"[Иртнӗ] dddd LT [сехетре]\",sameElse:\"L\"},relativeTime:{future:function(a){var b=/сехет$/i.exec(a)?\"рен\":/ҫул$/i.exec(a)?\"тан\":\"ран\";return a+b},past:\"%s каялла\",s:\"пӗр-ик ҫеккунт\",m:\"пӗр минут\",mm:\"%d минут\",h:\"пӗр сехет\",hh:\"%d сехет\",d:\"пӗр кун\",dd:\"%d кун\",M:\"пӗр уйӑх\",MM:\"%d уйӑх\",y:\"пӗр ҫул\",yy:\"%d ҫул\"},ordinalParse:/\\d{1,2}-мӗш/,ordinal:\"%d-мӗш\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"cy\",{months:\"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr\".split(\"_\"),monthsShort:\"Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag\".split(\"_\"),weekdays:\"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn\".split(\"_\"),weekdaysShort:\"Sul_Llun_Maw_Mer_Iau_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Ll_Ma_Me_Ia_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,","// time formats are the same as en-gb","longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Heddiw am] LT\",nextDay:\"[Yfory am] LT\",nextWeek:\"dddd [am] LT\",lastDay:\"[Ddoe am] LT\",lastWeek:\"dddd [diwethaf am] LT\",sameElse:\"L\"},relativeTime:{future:\"mewn %s\",past:\"%s yn ôl\",s:\"ychydig eiliadau\",m:\"munud\",mm:\"%d munud\",h:\"awr\",hh:\"%d awr\",d:\"diwrnod\",dd:\"%d diwrnod\",M:\"mis\",MM:\"%d mis\",y:\"blwyddyn\",yy:\"%d flynedd\"},ordinalParse:/\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,","// traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","ordinal:function(a){var b=a,c=\"\",d=[\"\",\"af\",\"il\",\"ydd\",\"ydd\",\"ed\",\"ed\",\"ed\",\"fed\",\"fed\",\"fed\",// 1af to 10fed","\"eg\",\"fed\",\"eg\",\"eg\",\"fed\",\"eg\",\"eg\",\"fed\",\"eg\",\"fed\"];return b\u003e20?c=40===b||50===b||60===b||80===b||100===b?\"fed\":\"ain\":b\u003e0\u0026\u0026(c=d[b]),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"da\",{months:\"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"søn_man_tir_ons_tor_fre_lør\".split(\"_\"),weekdaysMin:\"sø_ma_ti_on_to_fr_lø\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd [d.] D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[I dag kl.] LT\",nextDay:\"[I morgen kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[I går kl.] LT\",lastWeek:\"[sidste] dddd [kl] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"få sekunder\",m:\"et minut\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dage\",M:\"en måned\",MM:\"%d måneder\",y:\"et år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"de-at\",{months:\"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[heute um] LT [Uhr]\",sameElse:\"L\",nextDay:\"[morgen um] LT [Uhr]\",nextWeek:\"dddd [um] LT [Uhr]\",lastDay:\"[gestern um] LT [Uhr]\",lastWeek:\"[letzten] dddd [um] LT [Uhr]\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:\"ein paar Sekunden\",m:l,mm:\"%d Minuten\",h:l,hh:\"%d Stunden\",d:l,dd:l,M:l,MM:l,y:l,yy:l},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"de\",{months:\"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[heute um] LT [Uhr]\",sameElse:\"L\",nextDay:\"[morgen um] LT [Uhr]\",nextWeek:\"dddd [um] LT [Uhr]\",lastDay:\"[gestern um] LT [Uhr]\",lastWeek:\"[letzten] dddd [um] LT [Uhr]\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:\"ein paar Sekunden\",m:m,mm:\"%d Minuten\",h:m,hh:\"%d Stunden\",d:m,dd:m,M:m,MM:m,y:m,yy:m},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"ޖެނުއަރީ\",\"ފެބްރުއަރީ\",\"މާރިޗު\",\"އޭޕްރީލު\",\"މޭ\",\"ޖޫން\",\"ޖުލައި\",\"އޯގަސްޓު\",\"ސެޕްޓެމްބަރު\",\"އޮކްޓޯބަރު\",\"ނޮވެމްބަރު\",\"ޑިސެމްބަރު\"]),pa=[\"އާދިއްތަ\",\"ހޯމަ\",\"އަންގާރަ\",\"ބުދަ\",\"ބުރާސްފަތި\",\"ހުކުރު\",\"ހޮނިހިރު\"],qa=(a.defineLocale(\"dv\",{months:oa,monthsShort:oa,weekdays:pa,weekdaysShort:pa,weekdaysMin:\"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/M/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/މކ|މފ/,isPM:function(a){return\"މފ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"މކ\":\"މފ\"},calendar:{sameDay:\"[މިއަދު] LT\",nextDay:\"[މާދަމާ] LT\",nextWeek:\"dddd LT\",lastDay:\"[އިއްޔެ] LT\",lastWeek:\"[ފާއިތުވި] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"ތެރޭގައި %s\",past:\"ކުރިން %s\",s:\"ސިކުންތުކޮޅެއް\",m:\"މިނިޓެއް\",mm:\"މިނިޓު %d\",h:\"ގަޑިއިރެއް\",hh:\"ގަޑިއިރު %d\",d:\"ދުވަހެއް\",dd:\"ދުވަސް %d\",M:\"މަހެއް\",MM:\"މަސް %d\",y:\"އަހަރެއް\",yy:\"އަހަރު %d\"},preparse:function(a){return a.replace(/،/g,\",\")},postformat:function(a){return a.replace(/,/g,\"،\")},week:{dow:7,// Sunday is the first day of the week.","doy:12}}),a.defineLocale(\"el\",{monthsNominativeEl:\"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),monthsGenitiveEl:\"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου\".split(\"_\"),months:function(a,b){return/D/.test(b.substring(0,b.indexOf(\"MMMM\")))?this._monthsGenitiveEl[a.month()]:this._monthsNominativeEl[a.month()]},monthsShort:\"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ\".split(\"_\"),weekdays:\"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),weekdaysShort:\"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),weekdaysMin:\"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),meridiem:function(a,b,c){return a\u003e11?c?\"μμ\":\"ΜΜ\":c?\"πμ\":\"ΠΜ\"},isPM:function(a){return\"μ\"===(a+\"\").toLowerCase()[0]},meridiemParse:/[ΠΜ]\\.?Μ?\\.?/i,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendarEl:{sameDay:\"[Σήμερα {}] LT\",nextDay:\"[Αύριο {}] LT\",nextWeek:\"dddd [{}] LT\",lastDay:\"[Χθες {}] LT\",lastWeek:function(){switch(this.day()){case 6:return\"[το προηγούμενο] dddd [{}] LT\";default:return\"[την προηγούμενη] dddd [{}] LT\"}},sameElse:\"L\"},calendar:function(a,b){var c=this._calendarEl[a],d=b\u0026\u0026b.hours();return n(c)\u0026\u0026(c=c.apply(b)),c.replace(\"{}\",d%12===1?\"στη\":\"στις\")},relativeTime:{future:\"σε %s\",past:\"%s πριν\",s:\"λίγα δευτερόλεπτα\",m:\"ένα λεπτό\",mm:\"%d λεπτά\",h:\"μία ώρα\",hh:\"%d ώρες\",d:\"μία μέρα\",dd:\"%d μέρες\",M:\"ένας μήνας\",MM:\"%d μήνες\",y:\"ένας χρόνος\",yy:\"%d χρόνια\"},ordinalParse:/\\d{1,2}η/,ordinal:\"%dη\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-au\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-ca\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"YYYY-MM-DD\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),a.defineLocale(\"en-gb\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-ie\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-nz\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"eo\",{months:\"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec\".split(\"_\"),weekdays:\"Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato\".split(\"_\"),weekdaysShort:\"Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Ĵa_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D[-an de] MMMM, YYYY\",LLL:\"D[-an de] MMMM, YYYY HH:mm\",LLLL:\"dddd, [la] D[-an de] MMMM, YYYY HH:mm\"},meridiemParse:/[ap]\\.t\\.m/i,isPM:function(a){return\"p\"===a.charAt(0).toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"p.t.m.\":\"P.T.M.\":c?\"a.t.m.\":\"A.T.M.\"},calendar:{sameDay:\"[Hodiaŭ je] LT\",nextDay:\"[Morgaŭ je] LT\",nextWeek:\"dddd [je] LT\",lastDay:\"[Hieraŭ je] LT\",lastWeek:\"[pasinta] dddd [je] LT\",sameElse:\"L\"},relativeTime:{future:\"je %s\",past:\"antaŭ %s\",s:\"sekundoj\",m:\"minuto\",mm:\"%d minutoj\",h:\"horo\",hh:\"%d horoj\",d:\"tago\",//ne 'diurno', ĉar estas uzita por proksimumo","dd:\"%d tagoj\",M:\"monato\",MM:\"%d monatoj\",y:\"jaro\",yy:\"%d jaroj\"},ordinalParse:/\\d{1,2}a/,ordinal:\"%da\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),ra=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),sa=(a.defineLocale(\"es-do\",{months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?ra[a.month()]:qa[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),ta=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),ua=(a.defineLocale(\"es\",{months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?ta[a.month()]:sa[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"et\",{months:\"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember\".split(\"_\"),monthsShort:\"jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets\".split(\"_\"),weekdays:\"pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev\".split(\"_\"),weekdaysShort:\"P_E_T_K_N_R_L\".split(\"_\"),weekdaysMin:\"P_E_T_K_N_R_L\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[Täna,] LT\",nextDay:\"[Homme,] LT\",nextWeek:\"[Järgmine] dddd LT\",lastDay:\"[Eile,] LT\",lastWeek:\"[Eelmine] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s pärast\",past:\"%s tagasi\",s:o,m:o,mm:o,h:o,hh:o,d:o,dd:\"%d päeva\",M:o,MM:o,y:o,yy:o},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"eu\",{months:\"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua\".split(\"_\"),monthsShort:\"urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.\".split(\"_\"),monthsParseExact:!0,weekdays:\"igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata\".split(\"_\"),weekdaysShort:\"ig._al._ar._az._og._ol._lr.\".split(\"_\"),weekdaysMin:\"ig_al_ar_az_og_ol_lr\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY[ko] MMMM[ren] D[a]\",LLL:\"YYYY[ko] MMMM[ren] D[a] HH:mm\",LLLL:\"dddd, YYYY[ko] MMMM[ren] D[a] HH:mm\",l:\"YYYY-M-D\",ll:\"YYYY[ko] MMM D[a]\",lll:\"YYYY[ko] MMM D[a] HH:mm\",llll:\"ddd, YYYY[ko] MMM D[a] HH:mm\"},calendar:{sameDay:\"[gaur] LT[etan]\",nextDay:\"[bihar] LT[etan]\",nextWeek:\"dddd LT[etan]\",lastDay:\"[atzo] LT[etan]\",lastWeek:\"[aurreko] dddd LT[etan]\",sameElse:\"L\"},relativeTime:{future:\"%s barru\",past:\"duela %s\",s:\"segundo batzuk\",m:\"minutu bat\",mm:\"%d minutu\",h:\"ordu bat\",hh:\"%d ordu\",d:\"egun bat\",dd:\"%d egun\",M:\"hilabete bat\",MM:\"%d hilabete\",y:\"urte bat\",yy:\"%d urte\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"۱\",2:\"۲\",3:\"۳\",4:\"۴\",5:\"۵\",6:\"۶\",7:\"۷\",8:\"۸\",9:\"۹\",0:\"۰\"}),va={\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"۰\":\"0\"},wa=(a.defineLocale(\"fa\",{months:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),monthsShort:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),weekdays:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysShort:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysMin:\"ی_د_س_چ_پ_ج_ش\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(a){return/بعد از ظهر/.test(a)},meridiem:function(a,b,c){return 12\u003ea?\"قبل از ظهر\":\"بعد از ظهر\"},calendar:{sameDay:\"[امروز ساعت] LT\",nextDay:\"[فردا ساعت] LT\",nextWeek:\"dddd [ساعت] LT\",lastDay:\"[دیروز ساعت] LT\",lastWeek:\"dddd [پیش] [ساعت] LT\",sameElse:\"L\"},relativeTime:{future:\"در %s\",past:\"%s پیش\",s:\"چندین ثانیه\",m:\"یک دقیقه\",mm:\"%d دقیقه\",h:\"یک ساعت\",hh:\"%d ساعت\",d:\"یک روز\",dd:\"%d روز\",M:\"یک ماه\",MM:\"%d ماه\",y:\"یک سال\",yy:\"%d سال\"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return va[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ua[a]}).replace(/,/g,\"،\")},ordinalParse:/\\d{1,2}م/,ordinal:\"%dم\",week:{dow:6,// Saturday is the first day of the week.","doy:12}}),\"nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän\".split(\" \")),xa=[\"nolla\",\"yhden\",\"kahden\",\"kolmen\",\"neljän\",\"viiden\",\"kuuden\",wa[7],wa[8],wa[9]],ya=(a.defineLocale(\"fi\",{months:\"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu\".split(\"_\"),monthsShort:\"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu\".split(\"_\"),weekdays:\"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai\".split(\"_\"),weekdaysShort:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),weekdaysMin:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"Do MMMM[ta] YYYY\",LLL:\"Do MMMM[ta] YYYY, [klo] HH.mm\",LLLL:\"dddd, Do MMMM[ta] YYYY, [klo] HH.mm\",l:\"D.M.YYYY\",ll:\"Do MMM YYYY\",lll:\"Do MMM YYYY, [klo] HH.mm\",llll:\"ddd, Do MMM YYYY, [klo] HH.mm\"},calendar:{sameDay:\"[tänään] [klo] LT\",nextDay:\"[huomenna] [klo] LT\",nextWeek:\"dddd [klo] LT\",lastDay:\"[eilen] [klo] LT\",lastWeek:\"[viime] dddd[na] [klo] LT\",sameElse:\"L\"},relativeTime:{future:\"%s päästä\",past:\"%s sitten\",s:p,m:p,mm:p,h:p,hh:p,d:p,dd:p,M:p,MM:p,y:p,yy:p},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"fo\",{months:\"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),weekdays:\"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur\".split(\"_\"),weekdaysShort:\"sun_mán_týs_mik_hós_frí_ley\".split(\"_\"),weekdaysMin:\"su_má_tý_mi_hó_fr_le\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D. MMMM, YYYY HH:mm\"},calendar:{sameDay:\"[Í dag kl.] LT\",nextDay:\"[Í morgin kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[Í gjár kl.] LT\",lastWeek:\"[síðstu] dddd [kl] LT\",sameElse:\"L\"},relativeTime:{future:\"um %s\",past:\"%s síðani\",s:\"fá sekund\",m:\"ein minutt\",mm:\"%d minuttir\",h:\"ein tími\",hh:\"%d tímar\",d:\"ein dagur\",dd:\"%d dagar\",M:\"ein mánaði\",MM:\"%d mánaðir\",y:\"eitt ár\",yy:\"%d ár\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"fr-ca\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")}}),a.defineLocale(\"fr-ch\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"fr\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|)/,ordinal:function(a){return a+(1===a?\"er\":\"\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.\".split(\"_\")),za=\"jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),Aa=(a.defineLocale(\"fy\",{months:\"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?za[a.month()]:ya[a.month()]},monthsParseExact:!0,weekdays:\"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon\".split(\"_\"),weekdaysShort:\"si._mo._ti._wo._to._fr._so.\".split(\"_\"),weekdaysMin:\"Si_Mo_Ti_Wo_To_Fr_So\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[hjoed om] LT\",nextDay:\"[moarn om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[juster om] LT\",lastWeek:\"[ôfrûne] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oer %s\",past:\"%s lyn\",s:\"in pear sekonden\",m:\"ien minút\",mm:\"%d minuten\",h:\"ien oere\",hh:\"%d oeren\",d:\"ien dei\",dd:\"%d dagen\",M:\"ien moanne\",MM:\"%d moannen\",y:\"ien jier\",yy:\"%d jierren\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"Am Faoilleach\",\"An Gearran\",\"Am Màrt\",\"An Giblean\",\"An Cèitean\",\"An t-Ògmhios\",\"An t-Iuchar\",\"An Lùnastal\",\"An t-Sultain\",\"An Dàmhair\",\"An t-Samhain\",\"An Dùbhlachd\"]),Ba=[\"Faoi\",\"Gear\",\"Màrt\",\"Gibl\",\"Cèit\",\"Ògmh\",\"Iuch\",\"Lùn\",\"Sult\",\"Dàmh\",\"Samh\",\"Dùbh\"],Ca=[\"Didòmhnaich\",\"Diluain\",\"Dimàirt\",\"Diciadain\",\"Diardaoin\",\"Dihaoine\",\"Disathairne\"],Da=[\"Did\",\"Dil\",\"Dim\",\"Dic\",\"Dia\",\"Dih\",\"Dis\"],Ea=[\"Dò\",\"Lu\",\"Mà\",\"Ci\",\"Ar\",\"Ha\",\"Sa\"],Fa=(a.defineLocale(\"gd\",{months:Aa,monthsShort:Ba,monthsParseExact:!0,weekdays:Ca,weekdaysShort:Da,weekdaysMin:Ea,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[An-diugh aig] LT\",nextDay:\"[A-màireach aig] LT\",nextWeek:\"dddd [aig] LT\",lastDay:\"[An-dè aig] LT\",lastWeek:\"dddd [seo chaidh] [aig] LT\",sameElse:\"L\"},relativeTime:{future:\"ann an %s\",past:\"bho chionn %s\",s:\"beagan diogan\",m:\"mionaid\",mm:\"%d mionaidean\",h:\"uair\",hh:\"%d uairean\",d:\"latha\",dd:\"%d latha\",M:\"mìos\",MM:\"%d mìosan\",y:\"bliadhna\",yy:\"%d bliadhna\"},ordinalParse:/\\d{1,2}(d|na|mh)/,ordinal:function(a){var b=1===a?\"d\":a%10===2?\"na\":\"mh\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"gl\",{months:\"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro\".split(\"_\"),monthsShort:\"Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado\".split(\"_\"),weekdaysShort:\"Dom._Lun._Mar._Mér._Xov._Ven._Sáb.\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Mé_Xo_Ve_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoxe \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextDay:function(){return\"[mañá \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextWeek:function(){return\"dddd [\"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},lastDay:function(){return\"[onte \"+(1!==this.hours()?\"á\":\"a\")+\"] LT\"},lastWeek:function(){return\"[o] dddd [pasado \"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:function(a){return\"uns segundos\"===a?\"nuns segundos\":\"en \"+a},past:\"hai %s\",s:\"uns segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"unha hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"he\",{months:\"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),monthsShort:\"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳\".split(\"_\"),weekdays:\"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),weekdaysShort:\"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),weekdaysMin:\"א_ב_ג_ד_ה_ו_ש\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[היום ב־]LT\",nextDay:\"[מחר ב־]LT\",nextWeek:\"dddd [בשעה] LT\",lastDay:\"[אתמול ב־]LT\",lastWeek:\"[ביום] dddd [האחרון בשעה] LT\",sameElse:\"L\"},relativeTime:{future:\"בעוד %s\",past:\"לפני %s\",s:\"מספר שניות\",m:\"דקה\",mm:\"%d דקות\",h:\"שעה\",hh:function(a){return 2===a?\"שעתיים\":a+\" שעות\"},d:\"יום\",dd:function(a){return 2===a?\"יומיים\":a+\" ימים\"},M:\"חודש\",MM:function(a){return 2===a?\"חודשיים\":a+\" חודשים\"},y:\"שנה\",yy:function(a){return 2===a?\"שנתיים\":a%10===0\u0026\u002610!==a?a+\" שנה\":a+\" שנים\"}},meridiemParse:/אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(a){return/^(אחה\"צ|אחרי הצהריים|בערב)$/.test(a)},meridiem:function(a,b,c){return 5\u003ea?\"לפנות בוקר\":10\u003ea?\"בבוקר\":12\u003ea?c?'לפנה\"צ':\"לפני הצהריים\":18\u003ea?c?'אחה\"צ':\"אחרי הצהריים\":\"בערב\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Ga={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Ha=(a.defineLocale(\"hi\",{months:\"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर\".split(\"_\"),monthsShort:\"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm बजे\",LTS:\"A h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, A h:mm बजे\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[कल] LT\",nextWeek:\"dddd, LT\",lastDay:\"[कल] LT\",lastWeek:\"[पिछले] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s में\",past:\"%s पहले\",s:\"कुछ ही क्षण\",m:\"एक मिनट\",mm:\"%d मिनट\",h:\"एक घंटा\",hh:\"%d घंटे\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महीने\",MM:\"%d महीने\",y:\"एक वर्ष\",yy:\"%d वर्ष\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Ga[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Fa[a]})},","// Hindi notation for meridiems are quite fuzzy in practice. While there exists","// a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात\"===b?4\u003ea?a:a+12:\"सुबह\"===b?a:\"दोपहर\"===b?a\u003e=10?a:a+12:\"शाम\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात\":10\u003ea?\"सुबह\":17\u003ea?\"दोपहर\":20\u003ea?\"शाम\":\"रात\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"hr\",{months:{format:\"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca\".split(\"_\"),standalone:\"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\")},monthsShort:\"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:r,mm:r,h:r,hh:r,d:\"dan\",dd:r,M:\"mjesec\",MM:r,y:\"godinu\",yy:r},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton\".split(\" \")),Ia=(a.defineLocale(\"hu\",{months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"},meridiemParse:/de|du/i,isPM:function(a){return\"u\"===a.charAt(1).toLowerCase()},meridiem:function(a,b,c){return 12\u003ea?c===!0?\"de\":\"DE\":c===!0?\"du\":\"DU\"},calendar:{sameDay:\"[ma] LT[-kor]\",nextDay:\"[holnap] LT[-kor]\",nextWeek:function(){return t.call(this,!0)},lastDay:\"[tegnap] LT[-kor]\",lastWeek:function(){return t.call(this,!1)},sameElse:\"L\"},relativeTime:{future:\"%s múlva\",past:\"%s\",s:s,m:s,mm:s,h:s,hh:s,d:s,dd:s,M:s,MM:s,y:s,yy:s},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"hy-am\",{months:{format:\"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի\".split(\"_\"),standalone:\"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր\".split(\"_\")},monthsShort:\"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ\".split(\"_\"),weekdays:\"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ\".split(\"_\"),weekdaysShort:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),weekdaysMin:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY թ.\",LLL:\"D MMMM YYYY թ., HH:mm\",LLLL:\"dddd, D MMMM YYYY թ., HH:mm\"},calendar:{sameDay:\"[այսօր] LT\",nextDay:\"[վաղը] LT\",lastDay:\"[երեկ] LT\",nextWeek:function(){return\"dddd [օրը ժամը] LT\"},lastWeek:function(){return\"[անցած] dddd [օրը ժամը] LT\"},sameElse:\"L\"},relativeTime:{future:\"%s հետո\",past:\"%s առաջ\",s:\"մի քանի վայրկյան\",m:\"րոպե\",mm:\"%d րոպե\",h:\"ժամ\",hh:\"%d ժամ\",d:\"օր\",dd:\"%d օր\",M:\"ամիս\",MM:\"%d ամիս\",y:\"տարի\",yy:\"%d տարի\"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(a){return/^(ցերեկվա|երեկոյան)$/.test(a)},meridiem:function(a){return 4\u003ea?\"գիշերվա\":12\u003ea?\"առավոտվա\":17\u003ea?\"ցերեկվա\":\"երեկոյան\"},ordinalParse:/\\d{1,2}|\\d{1,2}-(ին|րդ)/,ordinal:function(a,b){switch(b){case\"DDD\":case\"w\":case\"W\":case\"DDDo\":return 1===a?a+\"-ին\":a+\"-րդ\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"id\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"siang\"===b?a\u003e=11?a:a+12:\"sore\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"siang\":19\u003ea?\"sore\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Besok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kemarin pukul] LT\",lastWeek:\"dddd [lalu pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lalu\",s:\"beberapa detik\",m:\"semenit\",mm:\"%d menit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"is\",{months:\"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des\".split(\"_\"),weekdays:\"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur\".split(\"_\"),weekdaysShort:\"sun_mán_þri_mið_fim_fös_lau\".split(\"_\"),weekdaysMin:\"Su_Má_Þr_Mi_Fi_Fö_La\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] H:mm\",LLLL:\"dddd, D. MMMM YYYY [kl.] H:mm\"},calendar:{sameDay:\"[í dag kl.] LT\",nextDay:\"[á morgun kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[í gær kl.] LT\",lastWeek:\"[síðasta] dddd [kl.] LT\",sameElse:\"L\"},relativeTime:{future:\"eftir %s\",past:\"fyrir %s síðan\",s:v,m:v,mm:v,h:\"klukkustund\",hh:v,d:v,dd:v,M:v,MM:v,y:v,yy:v},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"it\",{months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),weekdays:\"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato\".split(\"_\"),weekdaysShort:\"Dom_Lun_Mar_Mer_Gio_Ven_Sab\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Me_Gi_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Oggi alle] LT\",nextDay:\"[Domani alle] LT\",nextWeek:\"dddd [alle] LT\",lastDay:\"[Ieri alle] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[la scorsa] dddd [alle] LT\";default:return\"[lo scorso] dddd [alle] LT\"}},sameElse:\"L\"},relativeTime:{future:function(a){return(/^[0-9].+$/.test(a)?\"tra\":\"in\")+\" \"+a},past:\"%s fa\",s:\"alcuni secondi\",m:\"un minuto\",mm:\"%d minuti\",h:\"un'ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"ja\",{months:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),weekdaysShort:\"日_月_火_水_木_金_土\".split(\"_\"),weekdaysMin:\"日_月_火_水_木_金_土\".split(\"_\"),longDateFormat:{LT:\"Ah時m分\",LTS:\"Ah時m分s秒\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah時m分\",LLLL:\"YYYY年M月D日Ah時m分 dddd\"},meridiemParse:/午前|午後/i,isPM:function(a){return\"午後\"===a},meridiem:function(a,b,c){return 12\u003ea?\"午前\":\"午後\"},calendar:{sameDay:\"[今日] LT\",nextDay:\"[明日] LT\",nextWeek:\"[来週]dddd LT\",lastDay:\"[昨日] LT\",lastWeek:\"[前週]dddd LT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}日/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";default:return a}},relativeTime:{future:\"%s後\",past:\"%s前\",s:\"数秒\",m:\"1分\",mm:\"%d分\",h:\"1時間\",hh:\"%d時間\",d:\"1日\",dd:\"%d日\",M:\"1ヶ月\",MM:\"%dヶ月\",y:\"1年\",yy:\"%d年\"}}),a.defineLocale(\"jv\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des\".split(\"_\"),weekdays:\"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Reb_Kem_Jem_Sep\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sp\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"enjing\"===b?a:\"siyang\"===b?a\u003e=11?a:a+12:\"sonten\"===b||\"ndalu\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"enjing\":15\u003ea?\"siyang\":19\u003ea?\"sonten\":\"ndalu\"},calendar:{sameDay:\"[Dinten puniko pukul] LT\",nextDay:\"[Mbenjang pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kala wingi pukul] LT\",lastWeek:\"dddd [kepengker pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"wonten ing %s\",past:\"%s ingkang kepengker\",s:\"sawetawis detik\",m:\"setunggal menit\",mm:\"%d menit\",h:\"setunggal jam\",hh:\"%d jam\",d:\"sedinten\",dd:\"%d dinten\",M:\"sewulan\",MM:\"%d wulan\",y:\"setaun\",yy:\"%d taun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ka\",{months:{standalone:\"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი\".split(\"_\"),format:\"იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს\".split(\"_\")},monthsShort:\"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),weekdays:{standalone:\"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი\".split(\"_\"),format:\"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს\".split(\"_\"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:\"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),weekdaysMin:\"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[დღეს] LT[-ზე]\",nextDay:\"[ხვალ] LT[-ზე]\",lastDay:\"[გუშინ] LT[-ზე]\",nextWeek:\"[შემდეგ] dddd LT[-ზე]\",lastWeek:\"[წინა] dddd LT-ზე\",sameElse:\"L\"},relativeTime:{future:function(a){return/(წამი|წუთი|საათი|წელი)/.test(a)?a.replace(/ი$/,\"ში\"):a+\"ში\"},past:function(a){return/(წამი|წუთი|საათი|დღე|თვე)/.test(a)?a.replace(/(ი|ე)$/,\"ის წინ\"):/წელი/.test(a)?a.replace(/წელი$/,\"წლის წინ\"):void 0},s:\"რამდენიმე წამი\",m:\"წუთი\",mm:\"%d წუთი\",h:\"საათი\",hh:\"%d საათი\",d:\"დღე\",dd:\"%d დღე\",M:\"თვე\",MM:\"%d თვე\",y:\"წელი\",yy:\"%d წელი\"},ordinalParse:/0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,ordinal:function(a){return 0===a?a:1===a?a+\"-ლი\":20\u003ea||100\u003e=a\u0026\u0026a%20===0||a%100===0?\"მე-\"+a:a+\"-ე\"},week:{dow:1,doy:7}}),{0:\"-ші\",1:\"-ші\",2:\"-ші\",3:\"-ші\",4:\"-ші\",5:\"-ші\",6:\"-шы\",7:\"-ші\",8:\"-ші\",9:\"-шы\",10:\"-шы\",20:\"-шы\",30:\"-шы\",40:\"-шы\",50:\"-ші\",60:\"-шы\",70:\"-ші\",80:\"-ші\",90:\"-шы\",100:\"-ші\"}),Ja=(a.defineLocale(\"kk\",{months:\"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан\".split(\"_\"),monthsShort:\"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел\".split(\"_\"),weekdays:\"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі\".split(\"_\"),weekdaysShort:\"жек_дүй_сей_сәр_бей_жұм_сен\".split(\"_\"),weekdaysMin:\"жк_дй_сй_ср_бй_жм_сн\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгін сағат] LT\",nextDay:\"[Ертең сағат] LT\",nextWeek:\"dddd [сағат] LT\",lastDay:\"[Кеше сағат] LT\",lastWeek:\"[Өткен аптаның] dddd [сағат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ішінде\",past:\"%s бұрын\",s:\"бірнеше секунд\",m:\"бір минут\",mm:\"%d минут\",h:\"бір сағат\",hh:\"%d сағат\",d:\"бір күн\",dd:\"%d күн\",M:\"бір ай\",MM:\"%d ай\",y:\"бір жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(ші|шы)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ia[a]||Ia[b]||Ia[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"km\",{months:\"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),monthsShort:\"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),weekdays:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),weekdaysShort:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),weekdaysMin:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ថ្ងៃនេះ ម៉ោង] LT\",nextDay:\"[ស្អែក ម៉ោង] LT\",nextWeek:\"dddd [ម៉ោង] LT\",lastDay:\"[ម្សិលមិញ ម៉ោង] LT\",lastWeek:\"dddd [សប្តាហ៍មុន] [ម៉ោង] LT\",sameElse:\"L\"},relativeTime:{future:\"%sទៀត\",past:\"%sមុន\",s:\"ប៉ុន្មានវិនាទី\",m:\"មួយនាទី\",mm:\"%d នាទី\",h:\"មួយម៉ោង\",hh:\"%d ម៉ោង\",d:\"មួយថ្ងៃ\",dd:\"%d ថ្ងៃ\",M:\"មួយខែ\",MM:\"%d ខែ\",y:\"មួយឆ្នាំ\",yy:\"%d ឆ្នាំ\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"ko\",{months:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),monthsShort:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),weekdays:\"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),weekdaysShort:\"일_월_화_수_목_금_토\".split(\"_\"),weekdaysMin:\"일_월_화_수_목_금_토\".split(\"_\"),longDateFormat:{LT:\"A h시 m분\",LTS:\"A h시 m분 s초\",L:\"YYYY.MM.DD\",LL:\"YYYY년 MMMM D일\",LLL:\"YYYY년 MMMM D일 A h시 m분\",LLLL:\"YYYY년 MMMM D일 dddd A h시 m분\"},calendar:{sameDay:\"오늘 LT\",nextDay:\"내일 LT\",nextWeek:\"dddd LT\",lastDay:\"어제 LT\",lastWeek:\"지난주 dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s 후\",past:\"%s 전\",s:\"몇 초\",ss:\"%d초\",m:\"일분\",mm:\"%d분\",h:\"한 시간\",hh:\"%d시간\",d:\"하루\",dd:\"%d일\",M:\"한 달\",MM:\"%d달\",y:\"일 년\",yy:\"%d년\"},ordinalParse:/\\d{1,2}일/,ordinal:\"%d일\",meridiemParse:/오전|오후/,isPM:function(a){return\"오후\"===a},meridiem:function(a,b,c){return 12\u003ea?\"오전\":\"오후\"}}),{0:\"-чү\",1:\"-чи\",2:\"-чи\",3:\"-чү\",4:\"-чү\",5:\"-чи\",6:\"-чы\",7:\"-чи\",8:\"-чи\",9:\"-чу\",10:\"-чу\",20:\"-чы\",30:\"-чу\",40:\"-чы\",50:\"-чү\",60:\"-чы\",70:\"-чи\",80:\"-чи\",90:\"-чу\",100:\"-чү\"}),Ka=(a.defineLocale(\"ky\",{months:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),monthsShort:\"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби\".split(\"_\"),weekdaysShort:\"Жек_Дүй_Шей_Шар_Бей_Жум_Ише\".split(\"_\"),weekdaysMin:\"Жк_Дй_Шй_Шр_Бй_Жм_Иш\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгүн саат] LT\",nextDay:\"[Эртең саат] LT\",nextWeek:\"dddd [саат] LT\",lastDay:\"[Кече саат] LT\",lastWeek:\"[Өткен аптанын] dddd [күнү] [саат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ичинде\",past:\"%s мурун\",s:\"бирнече секунд\",m:\"бир мүнөт\",mm:\"%d мүнөт\",h:\"бир саат\",hh:\"%d саат\",d:\"бир күн\",dd:\"%d күн\",M:\"бир ай\",MM:\"%d ай\",y:\"бир жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ja[a]||Ja[b]||Ja[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"lb\",{months:\"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),weekdaysShort:\"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm [Auer]\",LTS:\"H:mm:ss [Auer]\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm [Auer]\",LLLL:\"dddd, D. MMMM YYYY H:mm [Auer]\"},calendar:{sameDay:\"[Haut um] LT\",sameElse:\"L\",nextDay:\"[Muer um] LT\",nextWeek:\"dddd [um] LT\",lastDay:\"[Gëschter um] LT\",lastWeek:function(){","// Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","switch(this.day()){case 2:case 4:return\"[Leschten] dddd [um] LT\";default:return\"[Leschte] dddd [um] LT\"}}},relativeTime:{future:x,past:y,s:\"e puer Sekonnen\",m:w,mm:\"%d Minutten\",h:w,hh:\"%d Stonnen\",d:w,dd:\"%d Deeg\",M:w,MM:\"%d Méint\",y:w,yy:\"%d Joer\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"lo\",{months:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),monthsShort:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),weekdays:\"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysShort:\"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysMin:\"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"ວັນdddd D MMMM YYYY HH:mm\"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(a){return\"ຕອນແລງ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ຕອນເຊົ້າ\":\"ຕອນແລງ\"},calendar:{sameDay:\"[ມື້ນີ້ເວລາ] LT\",nextDay:\"[ມື້ອື່ນເວລາ] LT\",nextWeek:\"[ວັນ]dddd[ໜ້າເວລາ] LT\",lastDay:\"[ມື້ວານນີ້ເວລາ] LT\",lastWeek:\"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT\",sameElse:\"L\"},relativeTime:{future:\"ອີກ %s\",past:\"%sຜ່ານມາ\",s:\"ບໍ່ເທົ່າໃດວິນາທີ\",m:\"1 ນາທີ\",mm:\"%d ນາທີ\",h:\"1 ຊົ່ວໂມງ\",hh:\"%d ຊົ່ວໂມງ\",d:\"1 ມື້\",dd:\"%d ມື້\",M:\"1 ເດືອນ\",MM:\"%d ເດືອນ\",y:\"1 ປີ\",yy:\"%d ປີ\"},ordinalParse:/(ທີ່)\\d{1,2}/,ordinal:function(a){return\"ທີ່\"+a}}),{m:\"minutė_minutės_minutę\",mm:\"minutės_minučių_minutes\",h:\"valanda_valandos_valandą\",hh:\"valandos_valandų_valandas\",d:\"diena_dienos_dieną\",dd:\"dienos_dienų_dienas\",M:\"mėnuo_mėnesio_mėnesį\",MM:\"mėnesiai_mėnesių_mėnesius\",y:\"metai_metų_metus\",yy:\"metai_metų_metus\"}),La=(a.defineLocale(\"lt\",{months:{format:\"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),standalone:\"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis\".split(\"_\"),isFormat:/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?/},monthsShort:\"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),weekdays:{format:\"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį\".split(\"_\"),standalone:\"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis\".split(\"_\"),isFormat:/dddd HH:mm/},weekdaysShort:\"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),weekdaysMin:\"S_P_A_T_K_Pn_Š\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY [m.] MMMM D [d.]\",LLL:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",LLLL:\"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]\",l:\"YYYY-MM-DD\",ll:\"YYYY [m.] MMMM D [d.]\",lll:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",llll:\"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]\"},calendar:{sameDay:\"[Šiandien] LT\",nextDay:\"[Rytoj] LT\",nextWeek:\"dddd LT\",lastDay:\"[Vakar] LT\",lastWeek:\"[Praėjusį] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"po %s\",past:\"prieš %s\",s:A,m:B,mm:E,h:B,hh:E,d:B,dd:E,M:B,MM:E,y:B,yy:E},ordinalParse:/\\d{1,2}-oji/,ordinal:function(a){return a+\"-oji\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),{m:\"minūtes_minūtēm_minūte_minūtes\".split(\"_\"),mm:\"minūtes_minūtēm_minūte_minūtes\".split(\"_\"),h:\"stundas_stundām_stunda_stundas\".split(\"_\"),hh:\"stundas_stundām_stunda_stundas\".split(\"_\"),d:\"dienas_dienām_diena_dienas\".split(\"_\"),dd:\"dienas_dienām_diena_dienas\".split(\"_\"),M:\"mēneša_mēnešiem_mēnesis_mēneši\".split(\"_\"),MM:\"mēneša_mēnešiem_mēnesis_mēneši\".split(\"_\"),y:\"gada_gadiem_gads_gadi\".split(\"_\"),yy:\"gada_gadiem_gads_gadi\".split(\"_\")}),Ma=(a.defineLocale(\"lv\",{months:\"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena\".split(\"_\"),weekdaysShort:\"Sv_P_O_T_C_Pk_S\".split(\"_\"),weekdaysMin:\"Sv_P_O_T_C_Pk_S\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY.\",LL:\"YYYY. [gada] D. MMMM\",LLL:\"YYYY. [gada] D. MMMM, HH:mm\",LLLL:\"YYYY. [gada] D. MMMM, dddd, HH:mm\"},calendar:{sameDay:\"[Šodien pulksten] LT\",nextDay:\"[Rīt pulksten] LT\",nextWeek:\"dddd [pulksten] LT\",lastDay:\"[Vakar pulksten] LT\",lastWeek:\"[Pagājušā] dddd [pulksten] LT\",sameElse:\"L\"},relativeTime:{future:\"pēc %s\",past:\"pirms %s\",s:I,m:H,mm:G,h:H,hh:G,d:H,dd:G,M:H,MM:G,y:H,yy:G},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{words:{//Different grammatical cases","m:[\"jedan minut\",\"jednog minuta\"],mm:[\"minut\",\"minuta\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mjesec\",\"mjeseca\",\"mjeseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=Ma.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+Ma.correctGrammaticalCase(a,d)}}),Na=(a.defineLocale(\"me\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sjutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedjelje] [u] LT\",\"[prošlog] [ponedjeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srijede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"nekoliko sekundi\",m:Ma.translate,mm:Ma.translate,h:Ma.translate,hh:Ma.translate,d:\"dan\",dd:Ma.translate,M:\"mjesec\",MM:Ma.translate,y:\"godinu\",yy:Ma.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"mk\",{months:\"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"недела_понеделник_вторник_среда_четврток_петок_сабота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сре_чет_пет_саб\".split(\"_\"),weekdaysMin:\"нe_пo_вт_ср_че_пе_сa\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Денес во] LT\",nextDay:\"[Утре во] LT\",nextWeek:\"[Во] dddd [во] LT\",lastDay:\"[Вчера во] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[Изминатата] dddd [во] LT\";case 1:case 2:case 4:case 5:return\"[Изминатиот] dddd [во] LT\"}},sameElse:\"L\"},relativeTime:{future:\"после %s\",past:\"пред %s\",s:\"неколку секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дена\",M:\"месец\",MM:\"%d месеци\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ml\",{months:\"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ\".split(\"_\"),monthsShort:\"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച\".split(\"_\"),weekdaysShort:\"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി\".split(\"_\"),weekdaysMin:\"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ\".split(\"_\"),longDateFormat:{LT:\"A h:mm -നു\",LTS:\"A h:mm:ss -നു\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm -നു\",LLLL:\"dddd, D MMMM YYYY, A h:mm -നു\"},calendar:{sameDay:\"[ഇന്ന്] LT\",nextDay:\"[നാളെ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ഇന്നലെ] LT\",lastWeek:\"[കഴിഞ്ഞ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s കഴിഞ്ഞ്\",past:\"%s മുൻപ്\",s:\"അൽപ നിമിഷങ്ങൾ\",m:\"ഒരു മിനിറ്റ്\",mm:\"%d മിനിറ്റ്\",h:\"ഒരു മണിക്കൂർ\",hh:\"%d മണിക്കൂർ\",d:\"ഒരു ദിവസം\",dd:\"%d ദിവസം\",M:\"ഒരു മാസം\",MM:\"%d മാസം\",y:\"ഒരു വർഷം\",yy:\"%d വർഷം\"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"രാത്രി\"===b\u0026\u0026a\u003e=4||\"ഉച്ച കഴിഞ്ഞ്\"===b||\"വൈകുന്നേരം\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"രാത്രി\":12\u003ea?\"രാവിലെ\":17\u003ea?\"ഉച്ച കഴിഞ്ഞ്\":20\u003ea?\"വൈകുന്നേരം\":\"രാത്രി\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Oa={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Pa=(a.defineLocale(\"mr\",{months:\"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर\".split(\"_\"),monthsShort:\"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm वाजता\",LTS:\"A h:mm:ss वाजता\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm वाजता\",LLLL:\"dddd, D MMMM YYYY, A h:mm वाजता\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[उद्या] LT\",nextWeek:\"dddd, LT\",lastDay:\"[काल] LT\",lastWeek:\"[मागील] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%sमध्ये\",past:\"%sपूर्वी\",s:J,m:J,mm:J,h:J,hh:J,d:J,dd:J,M:J,MM:J,y:J,yy:J},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Oa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Na[a]})},meridiemParse:/रात्री|सकाळी|दुपारी|सायंकाळी/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात्री\"===b?4\u003ea?a:a+12:\"सकाळी\"===b?a:\"दुपारी\"===b?a\u003e=10?a:a+12:\"सायंकाळी\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात्री\":10\u003ea?\"सकाळी\":17\u003ea?\"दुपारी\":20\u003ea?\"सायंकाळी\":\"रात्री\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"ms-my\",{months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ms\",{months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"၁\",2:\"၂\",3:\"၃\",4:\"၄\",5:\"၅\",6:\"၆\",7:\"၇\",8:\"၈\",9:\"၉\",0:\"၀\"}),Qa={\"၁\":\"1\",\"၂\":\"2\",\"၃\":\"3\",\"၄\":\"4\",\"၅\":\"5\",\"၆\":\"6\",\"၇\":\"7\",\"၈\":\"8\",\"၉\":\"9\",\"၀\":\"0\"},Ra=(a.defineLocale(\"my\",{months:\"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ\".split(\"_\"),monthsShort:\"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ\".split(\"_\"),weekdays:\"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ\".split(\"_\"),weekdaysShort:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),weekdaysMin:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ယနေ.] LT [မှာ]\",nextDay:\"[မနက်ဖြန်] LT [မှာ]\",nextWeek:\"dddd LT [မှာ]\",lastDay:\"[မနေ.က] LT [မှာ]\",lastWeek:\"[ပြီးခဲ့သော] dddd LT [မှာ]\",sameElse:\"L\"},relativeTime:{future:\"လာမည့် %s မှာ\",past:\"လွန်ခဲ့သော %s က\",s:\"စက္ကန်.အနည်းငယ်\",m:\"တစ်မိနစ်\",mm:\"%d မိနစ်\",h:\"တစ်နာရီ\",hh:\"%d နာရီ\",d:\"တစ်ရက်\",dd:\"%d ရက်\",M:\"တစ်လ\",MM:\"%d လ\",y:\"တစ်နှစ်\",yy:\"%d နှစ်\"},preparse:function(a){return a.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,function(a){return Qa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Pa[a]})},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"nb\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"sø._ma._ti._on._to._fr._lø.\".split(\"_\"),weekdaysMin:\"sø_ma_ti_on_to_fr_lø\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[i dag kl.] LT\",nextDay:\"[i morgen kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[i går kl.] LT\",lastWeek:\"[forrige] dddd [kl.] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"noen sekunder\",m:\"ett minutt\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dager\",M:\"en måned\",MM:\"%d måneder\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Sa={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Ta=(a.defineLocale(\"ne\",{months:\"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर\".split(\"_\"),monthsShort:\"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.\".split(\"_\"),monthsParseExact:!0,weekdays:\"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार\".split(\"_\"),weekdaysShort:\"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.\".split(\"_\"),weekdaysMin:\"आ._सो._मं._बु._बि._शु._श.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"Aको h:mm बजे\",LTS:\"Aको h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, Aको h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, Aको h:mm बजे\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Sa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Ra[a]})},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"राति\"===b?4\u003ea?a:a+12:\"बिहान\"===b?a:\"दिउँसो\"===b?a\u003e=10?a:a+12:\"साँझ\"===b?a+12:void 0},meridiem:function(a,b,c){return 3\u003ea?\"राति\":12\u003ea?\"बिहान\":16\u003ea?\"दिउँसो\":20\u003ea?\"साँझ\":\"राति\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[भोलि] LT\",nextWeek:\"[आउँदो] dddd[,] LT\",lastDay:\"[हिजो] LT\",lastWeek:\"[गएको] dddd[,] LT\",sameElse:\"L\"},relativeTime:{future:\"%sमा\",past:\"%s अगाडि\",s:\"केही क्षण\",m:\"एक मिनेट\",mm:\"%d मिनेट\",h:\"एक घण्टा\",hh:\"%d घण्टा\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महिना\",MM:\"%d महिना\",y:\"एक बर्ष\",yy:\"%d बर्ष\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\")),Ua=\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),Va=(a.defineLocale(\"nl\",{months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Ua[a.month()]:Ta[a.month()]},monthsParseExact:!0,weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[vandaag om] LT\",nextDay:\"[morgen om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[gisteren om] LT\",lastWeek:\"[afgelopen] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"nn\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),weekdays:\"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag\".split(\"_\"),weekdaysShort:\"sun_mån_tys_ons_tor_fre_lau\".split(\"_\"),weekdaysMin:\"su_må_ty_on_to_fr_lø\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] H:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[I dag klokka] LT\",nextDay:\"[I morgon klokka] LT\",nextWeek:\"dddd [klokka] LT\",lastDay:\"[I går klokka] LT\",lastWeek:\"[Føregåande] dddd [klokka] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s sidan\",s:\"nokre sekund\",m:\"eit minutt\",mm:\"%d minutt\",h:\"ein time\",hh:\"%d timar\",d:\"ein dag\",dd:\"%d dagar\",M:\"ein månad\",MM:\"%d månader\",y:\"eit år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"੧\",2:\"੨\",3:\"੩\",4:\"੪\",5:\"੫\",6:\"੬\",7:\"੭\",8:\"੮\",9:\"੯\",0:\"੦\"}),Wa={\"੧\":\"1\",\"੨\":\"2\",\"੩\":\"3\",\"੪\":\"4\",\"੫\":\"5\",\"੬\":\"6\",\"੭\":\"7\",\"੮\":\"8\",\"੯\":\"9\",\"੦\":\"0\"},Xa=(a.defineLocale(\"pa-in\",{","// There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","months:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),monthsShort:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdays:\"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ\".split(\"_\"),weekdaysShort:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),weekdaysMin:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),longDateFormat:{LT:\"A h:mm ਵਜੇ\",LTS:\"A h:mm:ss ਵਜੇ\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm ਵਜੇ\",LLLL:\"dddd, D MMMM YYYY, A h:mm ਵਜੇ\"},calendar:{sameDay:\"[ਅਜ] LT\",nextDay:\"[ਕਲ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ਕਲ] LT\",lastWeek:\"[ਪਿਛਲੇ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ਵਿੱਚ\",past:\"%s ਪਿਛਲੇ\",s:\"ਕੁਝ ਸਕਿੰਟ\",m:\"ਇਕ ਮਿੰਟ\",mm:\"%d ਮਿੰਟ\",h:\"ਇੱਕ ਘੰਟਾ\",hh:\"%d ਘੰਟੇ\",d:\"ਇੱਕ ਦਿਨ\",dd:\"%d ਦਿਨ\",M:\"ਇੱਕ ਮਹੀਨਾ\",MM:\"%d ਮਹੀਨੇ\",y:\"ਇੱਕ ਸਾਲ\",yy:\"%d ਸਾਲ\"},preparse:function(a){return a.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,function(a){return Wa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Va[a]})},","// Punjabi notation for meridiems are quite fuzzy in practice. While there exists","// a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ਰਾਤ\"===b?4\u003ea?a:a+12:\"ਸਵੇਰ\"===b?a:\"ਦੁਪਹਿਰ\"===b?a\u003e=10?a:a+12:\"ਸ਼ਾਮ\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"ਰਾਤ\":10\u003ea?\"ਸਵੇਰ\":17\u003ea?\"ਦੁਪਹਿਰ\":20\u003ea?\"ਸ਼ਾਮ\":\"ਰਾਤ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\")),Ya=\"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\"),Za=(a.defineLocale(\"pl\",{months:function(a,b){return\"\"===b?\"(\"+Ya[a.month()]+\"|\"+Xa[a.month()]+\")\":/D MMMM/.test(b)?Ya[a.month()]:Xa[a.month()]},monthsShort:\"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),weekdays:\"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),weekdaysShort:\"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),weekdaysMin:\"Nd_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Dziś o] LT\",nextDay:\"[Jutro o] LT\",nextWeek:\"[W] dddd [o] LT\",lastDay:\"[Wczoraj o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[W zeszłą niedzielę o] LT\";case 3:return\"[W zeszłą środę o] LT\";case 6:return\"[W zeszłą sobotę o] LT\";default:return\"[W zeszły] dddd [o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"%s temu\",s:\"kilka sekund\",m:L,mm:L,h:L,hh:L,d:\"1 dzień\",dd:\"%d dni\",M:\"miesiąc\",MM:L,y:\"rok\",yy:L},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"pt-br\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:{future:\"em %s\",past:\"%s atrás\",s:\"poucos segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\"}),a.defineLocale(\"pt\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:{future:\"em %s\",past:\"há %s\",s:\"segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"ro\",{months:\"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie\".split(\"_\"),monthsShort:\"ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"duminică_luni_marți_miercuri_joi_vineri_sâmbătă\".split(\"_\"),weekdaysShort:\"Dum_Lun_Mar_Mie_Joi_Vin_Sâm\".split(\"_\"),weekdaysMin:\"Du_Lu_Ma_Mi_Jo_Vi_Sâ\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[azi la] LT\",nextDay:\"[mâine la] LT\",nextWeek:\"dddd [la] LT\",lastDay:\"[ieri la] LT\",lastWeek:\"[fosta] dddd [la] LT\",sameElse:\"L\"},relativeTime:{future:\"peste %s\",past:\"%s în urmă\",s:\"câteva secunde\",m:\"un minut\",mm:M,h:\"o oră\",hh:M,d:\"o zi\",dd:M,M:\"o lună\",MM:M,y:\"un an\",yy:M},week:{dow:1,// Monday is the first day of the week.","doy:7}}),[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i]),$a=(a.defineLocale(\"ru\",{months:{format:\"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря\".split(\"_\"),standalone:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\")},monthsShort:{","// по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","format:\"янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.\".split(\"_\"),standalone:\"янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.\".split(\"_\")},weekdays:{standalone:\"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота\".split(\"_\"),format:\"воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/},weekdaysShort:\"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),monthsParse:Za,longMonthsParse:Za,shortMonthsParse:Za,","// полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","monthsRegex:/^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","// копия предыдущего","monthsShortRegex:/^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","// полные названия с падежами","monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","// Выражение, которое соотвествует только сокращённым формам","monthsShortStrictRegex:/^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сегодня в] LT\",nextDay:\"[Завтра в] LT\",lastDay:\"[Вчера в] LT\",nextWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В следующее] dddd [в] LT\";case 1:case 2:case 4:return\"[В следующий] dddd [в] LT\";case 3:case 5:case 6:return\"[В следующую] dddd [в] LT\"}},lastWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В прошлое] dddd [в] LT\";case 1:case 2:case 4:return\"[В прошлый] dddd [в] LT\";case 3:case 5:case 6:return\"[В прошлую] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"через %s\",past:\"%s назад\",s:\"несколько секунд\",m:O,mm:O,h:\"час\",hh:O,d:\"день\",dd:O,M:\"месяц\",MM:O,y:\"год\",yy:O},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(a){return/^(дня|вечера)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночи\":12\u003ea?\"утра\":17\u003ea?\"дня\":\"вечера\"},ordinalParse:/\\d{1,2}-(й|го|я)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":return a+\"-й\";case\"D\":return a+\"-го\";case\"w\":case\"W\":return a+\"-я\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"se\",{months:\"ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu\".split(\"_\"),monthsShort:\"ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov\".split(\"_\"),weekdays:\"sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat\".split(\"_\"),weekdaysShort:\"sotn_vuos_maŋ_gask_duor_bear_láv\".split(\"_\"),weekdaysMin:\"s_v_m_g_d_b_L\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"MMMM D. [b.] YYYY\",LLL:\"MMMM D. [b.] YYYY [ti.] HH:mm\",LLLL:\"dddd, MMMM D. [b.] YYYY [ti.] HH:mm\"},calendar:{sameDay:\"[otne ti] LT\",nextDay:\"[ihttin ti] LT\",nextWeek:\"dddd [ti] LT\",lastDay:\"[ikte ti] LT\",lastWeek:\"[ovddit] dddd [ti] LT\",sameElse:\"L\"},relativeTime:{future:\"%s geažes\",past:\"maŋit %s\",s:\"moadde sekunddat\",m:\"okta minuhta\",mm:\"%d minuhtat\",h:\"okta diimmu\",hh:\"%d diimmut\",d:\"okta beaivi\",dd:\"%d beaivvit\",M:\"okta mánnu\",MM:\"%d mánut\",y:\"okta jahki\",yy:\"%d jagit\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"si\",{months:\"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්\".split(\"_\"),monthsShort:\"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ\".split(\"_\"),weekdays:\"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා\".split(\"_\"),weekdaysShort:\"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන\".split(\"_\"),weekdaysMin:\"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"a h:mm\",LTS:\"a h:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY MMMM D\",LLL:\"YYYY MMMM D, a h:mm\",LLLL:\"YYYY MMMM D [වැනි] dddd, a h:mm:ss\"},calendar:{sameDay:\"[අද] LT[ට]\",nextDay:\"[හෙට] LT[ට]\",nextWeek:\"dddd LT[ට]\",lastDay:\"[ඊයේ] LT[ට]\",lastWeek:\"[පසුගිය] dddd LT[ට]\",sameElse:\"L\"},relativeTime:{future:\"%sකින්\",past:\"%sකට පෙර\",s:\"තත්පර කිහිපය\",m:\"මිනිත්තුව\",mm:\"මිනිත්තු %d\",h:\"පැය\",hh:\"පැය %d\",d:\"දිනය\",dd:\"දින %d\",M:\"මාසය\",MM:\"මාස %d\",y:\"වසර\",yy:\"වසර %d\"},ordinalParse:/\\d{1,2} වැනි/,ordinal:function(a){return a+\" වැනි\"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(a){return\"ප.ව.\"===a||\"පස් වරු\"===a},meridiem:function(a,b,c){return a\u003e11?c?\"ප.ව.\":\"පස් වරු\":c?\"පෙ.ව.\":\"පෙර වරු\"}}),\"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\")),_a=\"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\"),ab=(a.defineLocale(\"sk\",{months:$a,monthsShort:_a,weekdays:\"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),weekdaysShort:\"ne_po_ut_st_št_pi_so\".split(\"_\"),weekdaysMin:\"ne_po_ut_st_št_pi_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[dnes o] LT\",nextDay:\"[zajtra o] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v nedeľu o] LT\";case 1:case 2:return\"[v] dddd [o] LT\";case 3:return\"[v stredu o] LT\";case 4:return\"[vo štvrtok o] LT\";case 5:return\"[v piatok o] LT\";case 6:return\"[v sobotu o] LT\"}},lastDay:\"[včera o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulú nedeľu o] LT\";case 1:case 2:return\"[minulý] dddd [o] LT\";case 3:return\"[minulú stredu o] LT\";case 4:case 5:return\"[minulý] dddd [o] LT\";case 6:return\"[minulú sobotu o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pred %s\",s:Q,m:Q,mm:Q,h:Q,hh:Q,d:Q,dd:Q,M:Q,MM:Q,y:Q,yy:Q},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"sl\",{months:\"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),weekdaysShort:\"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),weekdaysMin:\"ne_po_to_sr_če_pe_so\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danes ob] LT\",nextDay:\"[jutri ob] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v] [nedeljo] [ob] LT\";case 3:return\"[v] [sredo] [ob] LT\";case 6:return\"[v] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[v] dddd [ob] LT\"}},lastDay:\"[včeraj ob] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[prejšnjo] [nedeljo] [ob] LT\";case 3:return\"[prejšnjo] [sredo] [ob] LT\";case 6:return\"[prejšnjo] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[prejšnji] dddd [ob] LT\"}},sameElse:\"L\"},relativeTime:{future:\"čez %s\",past:\"pred %s\",s:R,m:R,mm:R,h:R,hh:R,d:R,dd:R,M:R,MM:R,y:R,yy:R},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"sq\",{months:\"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor\".split(\"_\"),monthsShort:\"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj\".split(\"_\"),weekdays:\"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë\".split(\"_\"),weekdaysShort:\"Die_Hën_Mar_Mër_Enj_Pre_Sht\".split(\"_\"),weekdaysMin:\"D_H_Ma_Më_E_P_Sh\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(a){return\"M\"===a.charAt(0)},meridiem:function(a,b,c){return 12\u003ea?\"PD\":\"MD\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Sot në] LT\",nextDay:\"[Nesër në] LT\",nextWeek:\"dddd [në] LT\",lastDay:\"[Dje në] LT\",lastWeek:\"dddd [e kaluar në] LT\",sameElse:\"L\"},relativeTime:{future:\"në %s\",past:\"%s më parë\",s:\"disa sekonda\",m:\"një minutë\",mm:\"%d minuta\",h:\"një orë\",hh:\"%d orë\",d:\"një ditë\",dd:\"%d ditë\",M:\"një muaj\",MM:\"%d muaj\",y:\"një vit\",yy:\"%d vite\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{words:{//Different grammatical cases","m:[\"један минут\",\"једне минуте\"],mm:[\"минут\",\"минуте\",\"минута\"],h:[\"један сат\",\"једног сата\"],hh:[\"сат\",\"сата\",\"сати\"],dd:[\"дан\",\"дана\",\"дана\"],MM:[\"месец\",\"месеца\",\"месеци\"],yy:[\"година\",\"године\",\"година\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=ab.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+ab.correctGrammaticalCase(a,d)}}),bb=(a.defineLocale(\"sr-cyrl\",{months:\"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар\".split(\"_\"),monthsShort:\"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.\".split(\"_\"),monthsParseExact:!0,weekdays:\"недеља_понедељак_уторак_среда_четвртак_петак_субота\".split(\"_\"),weekdaysShort:\"нед._пон._уто._сре._чет._пет._суб.\".split(\"_\"),weekdaysMin:\"не_по_ут_ср_че_пе_су\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[данас у] LT\",nextDay:\"[сутра у] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[у] [недељу] [у] LT\";case 3:return\"[у] [среду] [у] LT\";case 6:return\"[у] [суботу] [у] LT\";case 1:case 2:case 4:case 5:return\"[у] dddd [у] LT\"}},lastDay:\"[јуче у] LT\",lastWeek:function(){var a=[\"[прошле] [недеље] [у] LT\",\"[прошлог] [понедељка] [у] LT\",\"[прошлог] [уторка] [у] LT\",\"[прошле] [среде] [у] LT\",\"[прошлог] [четвртка] [у] LT\",\"[прошлог] [петка] [у] LT\",\"[прошле] [суботе] [у] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"пре %s\",s:\"неколико секунди\",m:ab.translate,mm:ab.translate,h:ab.translate,hh:ab.translate,d:\"дан\",dd:ab.translate,M:\"месец\",MM:ab.translate,y:\"годину\",yy:ab.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),{words:{//Different grammatical cases","m:[\"jedan minut\",\"jedne minute\"],mm:[\"minut\",\"minute\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mesec\",\"meseca\",\"meseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=bb.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+bb.correctGrammaticalCase(a,d)}}),cb=(a.defineLocale(\"sr\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sre._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedelju] [u] LT\";case 3:return\"[u] [sredu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedelje] [u] LT\",\"[prošlog] [ponedeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pre %s\",s:\"nekoliko sekundi\",m:bb.translate,mm:bb.translate,h:bb.translate,hh:bb.translate,d:\"dan\",dd:bb.translate,M:\"mesec\",MM:bb.translate,y:\"godinu\",yy:bb.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ss\",{months:\"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\"_\"),monthsShort:\"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo\".split(\"_\"),weekdays:\"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo\".split(\"_\"),weekdaysShort:\"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg\".split(\"_\"),weekdaysMin:\"Li_Us_Lb_Lt_Ls_Lh_Ug\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Namuhla nga] LT\",nextDay:\"[Kusasa nga] LT\",nextWeek:\"dddd [nga] LT\",lastDay:\"[Itolo nga] LT\",lastWeek:\"dddd [leliphelile] [nga] LT\",sameElse:\"L\"},relativeTime:{future:\"nga %s\",past:\"wenteka nga %s\",s:\"emizuzwana lomcane\",m:\"umzuzu\",mm:\"%d emizuzu\",h:\"lihora\",hh:\"%d emahora\",d:\"lilanga\",dd:\"%d emalanga\",M:\"inyanga\",MM:\"%d tinyanga\",y:\"umnyaka\",yy:\"%d iminyaka\"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(a,b,c){return 11\u003ea?\"ekuseni\":15\u003ea?\"emini\":19\u003ea?\"entsambama\":\"ebusuku\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ekuseni\"===b?a:\"emini\"===b?a\u003e=11?a:a+12:\"entsambama\"===b||\"ebusuku\"===b?0===a?0:a+12:void 0},ordinalParse:/\\d{1,2}/,ordinal:\"%d\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"sv\",{months:\"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),weekdaysShort:\"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),weekdaysMin:\"sö_må_ti_on_to_fr_lö\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D MMMM YYYY [kl.] HH:mm\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Idag] LT\",nextDay:\"[Imorgon] LT\",lastDay:\"[Igår] LT\",nextWeek:\"[På] dddd LT\",lastWeek:\"[I] dddd[s] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"för %s sedan\",s:\"några sekunder\",m:\"en minut\",mm:\"%d minuter\",h:\"en timme\",hh:\"%d timmar\",d:\"en dag\",dd:\"%d dagar\",M:\"en månad\",MM:\"%d månader\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}(e|a)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"e\":1===b?\"a\":2===b?\"a\":\"e\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"sw\",{months:\"Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi\".split(\"_\"),weekdaysShort:\"Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos\".split(\"_\"),weekdaysMin:\"J2_J3_J4_J5_Al_Ij_J1\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[leo saa] LT\",nextDay:\"[kesho saa] LT\",nextWeek:\"[wiki ijayo] dddd [saat] LT\",lastDay:\"[jana] LT\",lastWeek:\"[wiki iliyopita] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s baadaye\",past:\"tokea %s\",s:\"hivi punde\",m:\"dakika moja\",mm:\"dakika %d\",h:\"saa limoja\",hh:\"masaa %d\",d:\"siku moja\",dd:\"masiku %d\",M:\"mwezi mmoja\",MM:\"miezi %d\",y:\"mwaka mmoja\",yy:\"miaka %d\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"௧\",2:\"௨\",3:\"௩\",4:\"௪\",5:\"௫\",6:\"௬\",7:\"௭\",8:\"௮\",9:\"௯\",0:\"௦\"}),db={\"௧\":\"1\",\"௨\":\"2\",\"௩\":\"3\",\"௪\":\"4\",\"௫\":\"5\",\"௬\":\"6\",\"௭\":\"7\",\"௮\":\"8\",\"௯\":\"9\",\"௦\":\"0\"},eb=(a.defineLocale(\"ta\",{months:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),monthsShort:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),weekdays:\"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை\".split(\"_\"),weekdaysShort:\"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி\".split(\"_\"),weekdaysMin:\"ஞா_தி_செ_பு_வி_வெ_ச\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, HH:mm\",LLLL:\"dddd, D MMMM YYYY, HH:mm\"},calendar:{sameDay:\"[இன்று] LT\",nextDay:\"[நாளை] LT\",nextWeek:\"dddd, LT\",lastDay:\"[நேற்று] LT\",lastWeek:\"[கடந்த வாரம்] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s இல்\",past:\"%s முன்\",s:\"ஒரு சில விநாடிகள்\",m:\"ஒரு நிமிடம்\",mm:\"%d நிமிடங்கள்\",h:\"ஒரு மணி நேரம்\",hh:\"%d மணி நேரம்\",d:\"ஒரு நாள்\",dd:\"%d நாட்கள்\",M:\"ஒரு மாதம்\",MM:\"%d மாதங்கள்\",y:\"ஒரு வருடம்\",yy:\"%d ஆண்டுகள்\"},ordinalParse:/\\d{1,2}வது/,ordinal:function(a){return a+\"வது\"},preparse:function(a){return a.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,function(a){return db[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return cb[a]})},","// refer http://ta.wikipedia.org/s/1er1","meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(a,b,c){return 2\u003ea?\" யாமம்\":6\u003ea?\" வைகறை\":10\u003ea?\" காலை\":14\u003ea?\" நண்பகல்\":18\u003ea?\" எற்பாடு\":22\u003ea?\" மாலை\":\" யாமம்\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"யாமம்\"===b?2\u003ea?a:a+12:\"வைகறை\"===b||\"காலை\"===b?a:\"நண்பகல்\"===b\u0026\u0026a\u003e=10?a:a+12},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"te\",{months:\"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్\".split(\"_\"),monthsShort:\"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం\".split(\"_\"),weekdaysShort:\"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని\".split(\"_\"),weekdaysMin:\"ఆ_సో_మం_బు_గు_శు_శ\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[నేడు] LT\",nextDay:\"[రేపు] LT\",nextWeek:\"dddd, LT\",lastDay:\"[నిన్న] LT\",lastWeek:\"[గత] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s లో\",past:\"%s క్రితం\",s:\"కొన్ని క్షణాలు\",m:\"ఒక నిమిషం\",mm:\"%d నిమిషాలు\",h:\"ఒక గంట\",hh:\"%d గంటలు\",d:\"ఒక రోజు\",dd:\"%d రోజులు\",M:\"ఒక నెల\",MM:\"%d నెలలు\",y:\"ఒక సంవత్సరం\",yy:\"%d సంవత్సరాలు\"},ordinalParse:/\\d{1,2}వ/,ordinal:\"%dవ\",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"రాత్రి\"===b?4\u003ea?a:a+12:\"ఉదయం\"===b?a:\"మధ్యాహ్నం\"===b?a\u003e=10?a:a+12:\"సాయంత్రం\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"రాత్రి\":10\u003ea?\"ఉదయం\":17\u003ea?\"మధ్యాహ్నం\":20\u003ea?\"సాయంత్రం\":\"రాత్రి\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"th\",{months:\"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม\".split(\"_\"),monthsShort:\"ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.\".split(\"_\"),monthsParseExact:!0,weekdays:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์\".split(\"_\"),weekdaysShort:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์\".split(\"_\"),// yes, three characters difference","weekdaysMin:\"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H นาฬิกา m นาที\",LTS:\"H นาฬิกา m นาที s วินาที\",L:\"YYYY/MM/DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY เวลา H นาฬิกา m นาที\",LLLL:\"วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที\"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(a){return\"หลังเที่ยง\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ก่อนเที่ยง\":\"หลังเที่ยง\"},calendar:{sameDay:\"[วันนี้ เวลา] LT\",nextDay:\"[พรุ่งนี้ เวลา] LT\",nextWeek:\"dddd[หน้า เวลา] LT\",lastDay:\"[เมื่อวานนี้ เวลา] LT\",lastWeek:\"[วัน]dddd[ที่แล้ว เวลา] LT\",sameElse:\"L\"},relativeTime:{future:\"อีก %s\",past:\"%sที่แล้ว\",s:\"ไม่กี่วินาที\",m:\"1 นาที\",mm:\"%d นาที\",h:\"1 ชั่วโมง\",hh:\"%d ชั่วโมง\",d:\"1 วัน\",dd:\"%d วัน\",M:\"1 เดือน\",MM:\"%d เดือน\",y:\"1 ปี\",yy:\"%d ปี\"}}),a.defineLocale(\"tl-ph\",{months:\"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre\".split(\"_\"),monthsShort:\"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis\".split(\"_\"),weekdays:\"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado\".split(\"_\"),weekdaysShort:\"Lin_Lun_Mar_Miy_Huw_Biy_Sab\".split(\"_\"),weekdaysMin:\"Li_Lu_Ma_Mi_Hu_Bi_Sab\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"MM/D/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY HH:mm\",LLLL:\"dddd, MMMM DD, YYYY HH:mm\"},calendar:{sameDay:\"[Ngayon sa] LT\",nextDay:\"[Bukas sa] LT\",nextWeek:\"dddd [sa] LT\",lastDay:\"[Kahapon sa] LT\",lastWeek:\"dddd [huling linggo] LT\",sameElse:\"L\"},relativeTime:{future:\"sa loob ng %s\",past:\"%s ang nakalipas\",s:\"ilang segundo\",m:\"isang minuto\",mm:\"%d minuto\",h:\"isang oras\",hh:\"%d oras\",d:\"isang araw\",dd:\"%d araw\",M:\"isang buwan\",MM:\"%d buwan\",y:\"isang taon\",yy:\"%d taon\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut\".split(\"_\")),fb=(a.defineLocale(\"tlh\",{months:\"tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’\".split(\"_\"),monthsShort:\"jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’\".split(\"_\"),monthsParseExact:!0,weekdays:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),weekdaysShort:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),weekdaysMin:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[DaHjaj] LT\",nextDay:\"[wa’leS] LT\",nextWeek:\"LLL\",lastDay:\"[wa’Hu’] LT\",lastWeek:\"LLL\",sameElse:\"L\"},relativeTime:{future:S,past:T,s:\"puS lup\",m:\"wa’ tup\",mm:U,h:\"wa’ rep\",hh:U,d:\"wa’ jaj\",dd:U,M:\"wa’ jar\",MM:U,y:\"wa’ DIS\",yy:U},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"'inci\",5:\"'inci\",8:\"'inci\",70:\"'inci\",80:\"'inci\",2:\"'nci\",7:\"'nci\",20:\"'nci\",50:\"'nci\",3:\"'üncü\",4:\"'üncü\",100:\"'üncü\",6:\"'ncı\",9:\"'uncu\",10:\"'uncu\",30:\"'uncu\",60:\"'ıncı\",90:\"'ıncı\"});a.defineLocale(\"tr\",{months:\"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),monthsShort:\"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),weekdays:\"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),weekdaysShort:\"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),weekdaysMin:\"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[yarın saat] LT\",nextWeek:\"[haftaya] dddd [saat] LT\",lastDay:\"[dün] LT\",lastWeek:\"[geçen hafta] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s önce\",s:\"birkaç saniye\",m:\"bir dakika\",mm:\"%d dakika\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir yıl\",yy:\"%d yıl\"},ordinalParse:/\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,ordinal:function(a){if(0===a)// special case for zero","return a+\"'ıncı\";var b=a%10,c=a%100-b,d=a\u003e=100?100:null;return a+(fb[b]||fb[c]||fb[d])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"tzl\",{months:\"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec\".split(\"_\"),weekdays:\"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi\".split(\"_\"),weekdaysShort:\"Súl_Lún_Mai_Már_Xhú_Vié_Sát\".split(\"_\"),weekdaysMin:\"Sú_Lú_Ma_Má_Xh_Vi_Sá\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM [dallas] YYYY\",LLL:\"D. MMMM [dallas] YYYY HH.mm\",LLLL:\"dddd, [li] D. MMMM [dallas] YYYY HH.mm\"},meridiemParse:/d\\'o|d\\'a/i,isPM:function(a){return\"d'o\"===a.toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"d'o\":\"D'O\":c?\"d'a\":\"D'A\"},calendar:{sameDay:\"[oxhi à] LT\",nextDay:\"[demà à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[ieiri à] LT\",lastWeek:\"[sür el] dddd [lasteu à] LT\",sameElse:\"L\"},relativeTime:{future:\"osprei %s\",past:\"ja%s\",s:W,m:W,mm:W,h:W,hh:W,d:W,dd:W,M:W,MM:W,y:W,yy:W},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"tzm-latn\",{months:\"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),monthsShort:\"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),weekdays:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),weekdaysShort:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),weekdaysMin:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[asdkh g] LT\",nextDay:\"[aska g] LT\",nextWeek:\"dddd [g] LT\",lastDay:\"[assant g] LT\",lastWeek:\"dddd [g] LT\",sameElse:\"L\"},relativeTime:{future:\"dadkh s yan %s\",past:\"yan %s\",s:\"imik\",m:\"minuḍ\",mm:\"%d minuḍ\",h:\"saɛa\",hh:\"%d tassaɛin\",d:\"ass\",dd:\"%d ossan\",M:\"ayowr\",MM:\"%d iyyirn\",y:\"asgas\",yy:\"%d isgasn\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),a.defineLocale(\"tzm\",{months:\"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),monthsShort:\"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),weekdays:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),weekdaysShort:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),weekdaysMin:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ⴰⵙⴷⵅ ⴴ] LT\",nextDay:\"[ⴰⵙⴽⴰ ⴴ] LT\",nextWeek:\"dddd [ⴴ] LT\",lastDay:\"[ⴰⵚⴰⵏⵜ ⴴ] LT\",lastWeek:\"dddd [ⴴ] LT\",sameElse:\"L\"},relativeTime:{future:\"ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s\",past:\"ⵢⴰⵏ %s\",s:\"ⵉⵎⵉⴽ\",m:\"ⵎⵉⵏⵓⴺ\",mm:\"%d ⵎⵉⵏⵓⴺ\",h:\"ⵙⴰⵄⴰ\",hh:\"%d ⵜⴰⵙⵙⴰⵄⵉⵏ\",d:\"ⴰⵙⵙ\",dd:\"%d oⵙⵙⴰⵏ\",M:\"ⴰⵢoⵓⵔ\",MM:\"%d ⵉⵢⵢⵉⵔⵏ\",y:\"ⴰⵙⴳⴰⵙ\",yy:\"%d ⵉⵙⴳⴰⵙⵏ\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),a.defineLocale(\"uk\",{months:{format:\"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня\".split(\"_\"),standalone:\"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень\".split(\"_\")},monthsShort:\"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),weekdays:Z,weekdaysShort:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY р.\",LLL:\"D MMMM YYYY р., HH:mm\",LLLL:\"dddd, D MMMM YYYY р., HH:mm\"},calendar:{sameDay:$(\"[Сьогодні \"),nextDay:$(\"[Завтра \"),lastDay:$(\"[Вчора \"),nextWeek:$(\"[У] dddd [\"),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return $(\"[Минулої] dddd [\").call(this);case 1:case 2:case 4:return $(\"[Минулого] dddd [\").call(this)}},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"%s тому\",s:\"декілька секунд\",m:Y,mm:Y,h:\"годину\",hh:Y,d:\"день\",dd:Y,M:\"місяць\",MM:Y,y:\"рік\",yy:Y},","// M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(a){return/^(дня|вечора)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночі\":12\u003ea?\"ранку\":17\u003ea?\"дня\":\"вечора\"},ordinalParse:/\\d{1,2}-(й|го)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a+\"-й\";case\"D\":return a+\"-го\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"uz\",{months:\"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр\".split(\"_\"),monthsShort:\"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба\".split(\"_\"),weekdaysShort:\"Якш_Душ_Сеш_Чор_Пай_Жум_Шан\".split(\"_\"),weekdaysMin:\"Як_Ду_Се_Чо_Па_Жу_Ша\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"D MMMM YYYY, dddd HH:mm\"},calendar:{sameDay:\"[Бугун соат] LT [да]\",nextDay:\"[Эртага] LT [да]\",nextWeek:\"dddd [куни соат] LT [да]\",lastDay:\"[Кеча соат] LT [да]\",lastWeek:\"[Утган] dddd [куни соат] LT [да]\",sameElse:\"L\"},relativeTime:{future:\"Якин %s ичида\",past:\"Бир неча %s олдин\",s:\"фурсат\",m:\"бир дакика\",mm:\"%d дакика\",h:\"бир соат\",hh:\"%d соат\",d:\"бир кун\",dd:\"%d кун\",M:\"бир ой\",MM:\"%d ой\",y:\"бир йил\",yy:\"%d йил\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"vi\",{months:\"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12\".split(\"_\"),monthsShort:\"Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12\".split(\"_\"),monthsParseExact:!0,weekdays:\"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy\".split(\"_\"),weekdaysShort:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysMin:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(a){return/^ch$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"sa\":\"SA\":c?\"ch\":\"CH\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM [năm] YYYY\",LLL:\"D MMMM [năm] YYYY HH:mm\",LLLL:\"dddd, D MMMM [năm] YYYY HH:mm\",l:\"DD/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Hôm nay lúc] LT\",nextDay:\"[Ngày mai lúc] LT\",nextWeek:\"dddd [tuần tới lúc] LT\",lastDay:\"[Hôm qua lúc] LT\",lastWeek:\"dddd [tuần rồi lúc] LT\",sameElse:\"L\"},relativeTime:{future:\"%s tới\",past:\"%s trước\",s:\"vài giây\",m:\"một phút\",mm:\"%d phút\",h:\"một giờ\",hh:\"%d giờ\",d:\"một ngày\",dd:\"%d ngày\",M:\"một tháng\",MM:\"%d tháng\",y:\"một năm\",yy:\"%d năm\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"x-pseudo\",{months:\"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér\".split(\"_\"),monthsShort:\"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc\".split(\"_\"),monthsParseExact:!0,weekdays:\"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý\".split(\"_\"),weekdaysShort:\"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát\".split(\"_\"),weekdaysMin:\"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[T~ódá~ý át] LT\",nextDay:\"[T~ómó~rró~w át] LT\",nextWeek:\"dddd [át] LT\",lastDay:\"[Ý~ést~érdá~ý át] LT\",lastWeek:\"[L~ást] dddd [át] LT\",sameElse:\"L\"},relativeTime:{future:\"í~ñ %s\",past:\"%s á~gó\",s:\"á ~féw ~sécó~ñds\",m:\"á ~míñ~úté\",mm:\"%d m~íñú~tés\",h:\"á~ñ hó~úr\",hh:\"%d h~óúrs\",d:\"á ~dáý\",dd:\"%d d~áýs\",M:\"á ~móñ~th\",MM:\"%d m~óñt~hs\",y:\"á ~ýéár\",yy:\"%d ý~éárs\"},ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"zh-cn\",{months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah点mm分\",LTS:\"Ah点m分s秒\",L:\"YYYY-MM-DD\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah点mm分\",LLLL:\"YYYY年MMMD日ddddAh点mm分\",l:\"YYYY-MM-DD\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah点mm分\",llll:\"YYYY年MMMD日ddddAh点mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"下午\"===b||\"晚上\"===b?a+12:a\u003e=11?a:a+12},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:function(){return 0===this.minutes()?\"[今天]Ah[点整]\":\"[今天]LT\"},nextDay:function(){return 0===this.minutes()?\"[明天]Ah[点整]\":\"[明天]LT\"},lastDay:function(){return 0===this.minutes()?\"[昨天]Ah[点整]\":\"[昨天]LT\"},nextWeek:function(){var b,c;return b=a().startOf(\"week\"),c=this.diff(b,\"days\")\u003e=7?\"[下]\":\"[本]\",0===this.minutes()?c+\"dddAh点整\":c+\"dddAh点mm\"},lastWeek:function(){var b,c;return b=a().startOf(\"week\"),c=this.unix()\u003cb.unix()?\"[上]\":\"[本]\",0===this.minutes()?c+\"dddAh点整\":c+\"dddAh点mm\"},sameElse:\"LL\"},ordinalParse:/\\d{1,2}(日|月|周)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"周\";default:return a}},relativeTime:{future:\"%s内\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},week:{","// GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"zh-tw\",{months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"週日_週一_週二_週三_週四_週五_週六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah點mm分\",LTS:\"Ah點m分s秒\",L:\"YYYY年MMMD日\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah點mm分\",LLLL:\"YYYY年MMMD日ddddAh點mm分\",l:\"YYYY年MMMD日\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah點mm分\",llll:\"YYYY年MMMD日ddddAh點mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"中午\"===b?a\u003e=11?a:a+12:\"下午\"===b||\"晚上\"===b?a+12:void 0},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:\"[今天]LT\",nextDay:\"[明天]LT\",nextWeek:\"[下]ddddLT\",lastDay:\"[昨天]LT\",lastWeek:\"[上]ddddLT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}(日|月|週)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"週\";default:return a}},relativeTime:{future:\"%s內\",past:\"%s前\",s:\"幾秒\",m:\"1 分鐘\",mm:\"%d 分鐘\",h:\"1 小時\",hh:\"%d 小時\",d:\"1 天\",dd:\"%d 天\",M:\"1 個月\",MM:\"%d 個月\",y:\"1 年\",yy:\"%d 年\"}});a.locale(\"en\")});"],"Functions":["!function(a,b)\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module\u0026\u0026\"function\"==typeof require?b(require(\"../moment\")):\"function\"==typeof define\u0026\u0026define.amd?define([\"../moment\"],b):b(a.moment)}(this,function(a){\"use strict\";","function b(a,b)var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function c(a,c,d){var e={mm:c?\"хвіліна_хвіліны_хвілін\":\"хвіліну_хвіліны_хвілін\",hh:c?\"гадзіна_гадзіны_гадзін\":\"гадзіну_гадзіны_гадзін\",dd:\"дзень_дні_дзён\",MM:\"месяц_месяцы_месяцаў\",yy:\"год_гады_гадоў\"};return\"m\"===d?c?\"хвіліна\":\"хвіліну\":\"h\"===d?c?\"гадзіна\":\"гадзіну\":a+\" \"+b(e[d],+a)}","function d(a,b,c)var d={mm:\"munutenn\",MM:\"miz\",dd:\"devezh\"};return a+\" \"+g(d[c],a)}function e(a){switch(f(a)){case 1:case 3:case 4:case 5:case 9:return a+\" bloaz\";default:return a+\" vloaz\"}}function f(a){return a\u003e9?f(a%10):a}function g(a,b){return 2===b?h(a):a}function h(a){var b={m:\"v\",b:\"v\",d:\"z\"};return void 0===b[a.charAt(0)]?a:b[a.charAt(0)]+a.substring(1)}","function i(a,b,c)var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function j(a){return a\u003e1\u0026\u00265\u003ea\u0026\u00261!==~~(a/10)}function k(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","function l(a,b,c,d)var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}","function m(a,b,c,d)var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function n(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}","function o(a,b,c,d)var e={s:[\"mõne sekundi\",\"mõni sekund\",\"paar sekundit\"],m:[\"ühe minuti\",\"üks minut\"],mm:[a+\" minuti\",a+\" minutit\"],h:[\"ühe tunni\",\"tund aega\",\"üks tund\"],hh:[a+\" tunni\",a+\" tundi\"],d:[\"ühe päeva\",\"üks päev\"],M:[\"kuu aja\",\"kuu aega\",\"üks kuu\"],MM:[a+\" kuu\",a+\" kuud\"],y:[\"ühe aasta\",\"aasta\",\"üks aasta\"],yy:[a+\" aasta\",a+\" aastat\"]};return b?e[c][2]?e[c][2]:e[c][1]:d?e[c][0]:e[c][1]}function p(a,b,c,d){var e=\"\";switch(c){case\"s\":return d?\"muutaman sekunnin\":\"muutama sekunti\";case\"m\":return d?\"minuutin\":\"minuutti\";case\"mm\":e=d?\"minuutin\":\"minuuttia\";break;case\"h\":return d?\"tunnin\":\"tunti\";case\"hh\":e=d?\"tunnin\":\"tuntia\";break;case\"d\":return d?\"päivän\":\"päivä\";case\"dd\":e=d?\"päivän\":\"päivää\";break;case\"M\":return d?\"kuukauden\":\"kuukausi\";case\"MM\":e=d?\"kuukauden\":\"kuukautta\";break;case\"y\":return d?\"vuoden\":\"vuosi\";case\"yy\":e=d?\"vuoden\":\"vuotta\"}return e=q(a,d)+\" \"+e}function q(a,b){return 10\u003ea?b?xa[a]:wa[a]:a}","function r(a,b,c)var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function s(a,b,c,d){var e=a;switch(c){case\"s\":return d||b?\"néhány másodperc\":\"néhány másodperce\";case\"m\":return\"egy\"+(d||b?\" perc\":\" perce\");case\"mm\":return e+(d||b?\" perc\":\" perce\");case\"h\":return\"egy\"+(d||b?\" óra\":\" órája\");case\"hh\":return e+(d||b?\" óra\":\" órája\");case\"d\":return\"egy\"+(d||b?\" nap\":\" napja\");case\"dd\":return e+(d||b?\" nap\":\" napja\");case\"M\":return\"egy\"+(d||b?\" hónap\":\" hónapja\");case\"MM\":return e+(d||b?\" hónap\":\" hónapja\");case\"y\":return\"egy\"+(d||b?\" év\":\" éve\");case\"yy\":return e+(d||b?\" év\":\" éve\")}return\"\"}function t(a){return(a?\"\":\"[múlt] \")+\"[\"+Ha[this.day()]+\"] LT[-kor]\"}","function u(a)return a%100===11?!0:a%10!==1}function v(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nokkrar sekúndur\":\"nokkrum sekúndum\";case\"m\":return b?\"mínúta\":\"mínútu\";case\"mm\":return u(a)?e+(b||d?\"mínútur\":\"mínútum\"):b?e+\"mínúta\":e+\"mínútu\";case\"hh\":return u(a)?e+(b||d?\"klukkustundir\":\"klukkustundum\"):e+\"klukkustund\";case\"d\":return b?\"dagur\":d?\"dag\":\"degi\";case\"dd\":return u(a)?b?e+\"dagar\":e+(d?\"daga\":\"dögum\"):b?e+\"dagur\":e+(d?\"dag\":\"degi\");case\"M\":return b?\"mánuður\":d?\"mánuð\":\"mánuði\";case\"MM\":return u(a)?b?e+\"mánuðir\":e+(d?\"mánuði\":\"mánuðum\"):b?e+\"mánuður\":e+(d?\"mánuð\":\"mánuði\");case\"y\":return b||d?\"ár\":\"ári\";case\"yy\":return u(a)?e+(b||d?\"ár\":\"árum\"):e+(b||d?\"ár\":\"ári\")}}","function w(a,b,c,d)var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function x(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"a \"+a:\"an \"+a}function y(a){var b=a.substr(0,a.indexOf(\" \"));return z(b)?\"viru \"+a:\"virun \"+a}/**","function z(a)if(a=parseInt(a,10),isNaN(a))return!1;if(0\u003ea)","return a/=1e3,z(a)}function A(a,b,c,d)return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function B(a,b,c,d){return b?D(c)[0]:d?D(c)[1]:D(c)[2]}function C(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function D(a){return Ka[a].split(\"_\")}function E(a,b,c,d){var e=a+\" \";return 1===a?e+B(a,b,c[0],d):b?e+(C(a)?D(c)[1]:D(c)[0]):d?e+D(c)[1]:e+(C(a)?D(c)[1]:D(c)[2])}/**","function F(a,b,c)return c?b%10===1\u0026\u0026b%100!==11?a[2]:a[3]:b%10===1\u0026\u0026b%100!==11?a[0]:a[1]}function G(a,b,c){return a+\" \"+F(La[c],a,b)}function H(a,b,c){return F(La[c],a,b)}function I(a,b){return b?\"dažas sekundes\":\"dažām sekundēm\"}function J(a,b,c,d){var e=\"\";if(b)switch(c){case\"s\":e=\"काही सेकंद\";break;case\"m\":e=\"एक मिनिट\";break;case\"mm\":e=\"%d मिनिटे\";break;case\"h\":e=\"एक तास\";break;case\"hh\":e=\"%d तास\";break;case\"d\":e=\"एक दिवस\";break;case\"dd\":e=\"%d दिवस\";break;case\"M\":e=\"एक महिना\";break;case\"MM\":e=\"%d महिने\";break;case\"y\":e=\"एक वर्ष\";break;case\"yy\":e=\"%d वर्षे\"}else switch(c){case\"s\":e=\"काही सेकंदां\";break;case\"m\":e=\"एका मिनिटा\";break;case\"mm\":e=\"%d मिनिटां\";break;case\"h\":e=\"एका तासा\";break;case\"hh\":e=\"%d तासां\";break;case\"d\":e=\"एका दिवसा\";break;case\"dd\":e=\"%d दिवसां\";break;case\"M\":e=\"एका महिन्या\";break;case\"MM\":e=\"%d महिन्यां\";break;case\"y\":e=\"एका वर्षा\";break;case\"yy\":e=\"%d वर्षां\"}return e.replace(/%d/i,a)}function K(a){return 5\u003ea%10\u0026\u0026a%10\u003e1\u0026\u0026~~(a/10)%10!==1}function L(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"minuta\":\"minutę\";case\"mm\":return d+(K(a)?\"minuty\":\"minut\");case\"h\":return b?\"godzina\":\"godzinę\";case\"hh\":return d+(K(a)?\"godziny\":\"godzin\");case\"MM\":return d+(K(a)?\"miesiące\":\"miesięcy\");case\"yy\":return d+(K(a)?\"lata\":\"lat\")}}","function M(a,b,c)var d={mm:\"minute\",hh:\"ore\",dd:\"zile\",MM:\"luni\",yy:\"ani\"},e=\" \";return(a%100\u003e=20||a\u003e=100\u0026\u0026a%100===0)\u0026\u0026(e=\" de \"),a+e+d[c]}","function N(a,b)var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function O(a,b,c){var d={mm:b?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"};return\"m\"===c?b?\"минута\":\"минуту\":a+\" \"+N(d[c],+a)}function P(a){return a\u003e1\u0026\u00265\u003ea}function Q(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","function R(a,b,c,d)var e=a+\" \";switch(c){case\"s\":return b||d?\"nekaj sekund\":\"nekaj sekundami\";case\"m\":return b?\"ena minuta\":\"eno minuto\";case\"mm\":return e+=1===a?b?\"minuta\":\"minuto\":2===a?b||d?\"minuti\":\"minutama\":5\u003ea?b||d?\"minute\":\"minutami\":b||d?\"minut\":\"minutami\";case\"h\":return b?\"ena ura\":\"eno uro\";case\"hh\":return e+=1===a?b?\"ura\":\"uro\":2===a?b||d?\"uri\":\"urama\":5\u003ea?b||d?\"ure\":\"urami\":b||d?\"ur\":\"urami\";case\"d\":return b||d?\"en dan\":\"enim dnem\";case\"dd\":return e+=1===a?b||d?\"dan\":\"dnem\":2===a?b||d?\"dni\":\"dnevoma\":b||d?\"dni\":\"dnevi\";case\"M\":return b||d?\"en mesec\":\"enim mesecem\";case\"MM\":return e+=1===a?b||d?\"mesec\":\"mesecem\":2===a?b||d?\"meseca\":\"mesecema\":5\u003ea?b||d?\"mesece\":\"meseci\":b||d?\"mesecev\":\"meseci\";case\"y\":return b||d?\"eno leto\":\"enim letom\";case\"yy\":return e+=1===a?b||d?\"leto\":\"letom\":2===a?b||d?\"leti\":\"letoma\":5\u003ea?b||d?\"leta\":\"leti\":b||d?\"let\":\"leti\"}}function S(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"leS\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"waQ\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"nem\":b+\" pIq\"}function T(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"Hu’\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"wen\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"ben\":b+\" ret\"}function U(a,b,c,d){var e=V(a);switch(c){case\"mm\":return e+\" tup\";case\"hh\":return e+\" rep\";case\"dd\":return e+\" jaj\";case\"MM\":return e+\" jar\";case\"yy\":return e+\" DIS\"}}function V(a){var b=Math.floor(a%1e3/100),c=Math.floor(a%100/10),d=a%10,e=\"\";return b\u003e0\u0026\u0026(e+=eb[b]+\"vatlh\"),c\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+eb[c]+\"maH\"),d\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+eb[d]),\"\"===e?\"pagh\":e}function W(a,b,c,d){var e={s:[\"viensas secunds\",\"'iensas secunds\"],m:[\"'n míut\",\"'iens míut\"],mm:[a+\" míuts\",\"\"+a+\" míuts\"],h:[\"'n þora\",\"'iensa þora\"],hh:[a+\" þoras\",\"\"+a+\" þoras\"],d:[\"'n ziua\",\"'iensa ziua\"],dd:[a+\" ziuas\",\"\"+a+\" ziuas\"],M:[\"'n mes\",\"'iens mes\"],MM:[a+\" mesen\",\"\"+a+\" mesen\"],y:[\"'n ar\",\"'iens ar\"],yy:[a+\" ars\",\"\"+a+\" ars\"]};return d?e[c][0]:b?e[c][0]:e[c][1]}","function X(a,b)var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function Y(a,b,c){var d={mm:b?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:b?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"};return\"m\"===c?b?\"хвилина\":\"хвилину\":\"h\"===c?b?\"година\":\"годину\":a+\" \"+X(d[c],+a)}function Z(a,b){var c={nominative:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),accusative:\"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу\".split(\"_\"),genitive:\"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи\".split(\"_\")},d=/(\\[[ВвУу]\\]) ?dddd/.test(b)?\"accusative\":/\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(b)?\"genitive\":\"nominative\";return c[d][a.day()]}function $(a){return function(){return a+\"о\"+(11===this.hours()?\"б\":\"\")+\"] LT\"}}","var _=(a.defineLocale(\"af\",months:\"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),weekdaysShort:\"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),weekdaysMin:\"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),meridiemParse:/vm|nm/i,isPM:function(a){return/^nm$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"vm\":\"VM\":c?\"nm\":\"NM\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Vandag om] LT\",nextDay:\"[Môre om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[Gister om] LT\",lastWeek:\"[Laas] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oor %s\",past:\"%s gelede\",s:\"'n paar sekondes\",m:\"'n minuut\",mm:\"%d minute\",h:\"'n uur\",hh:\"%d ure\",d:\"'n dag\",dd:\"%d dae\",M:\"'n maand\",MM:\"%d maande\",y:\"'n jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Maandag is die eerste dag van die week.","doy:12}}),1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),aa={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},ba=(a.defineLocale(\"ar-sa\",{months:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},preparse:function(a){return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return aa[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return _[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:4}}),1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),ca={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},da=function(a){return 0===a?0:1===a?1:2===a?2:a%100\u003e=3\u0026\u002610\u003e=a%100?3:a%100\u003e=11?4:5},ea={s:[\"أقل من ثانية\",\"ثانية واحدة\",[\"ثانيتان\",\"ثانيتين\"],\"%d ثوان\",\"%d ثانية\",\"%d ثانية\"],m:[\"أقل من دقيقة\",\"دقيقة واحدة\",[\"دقيقتان\",\"دقيقتين\"],\"%d دقائق\",\"%d دقيقة\",\"%d دقيقة\"],h:[\"أقل من ساعة\",\"ساعة واحدة\",[\"ساعتان\",\"ساعتين\"],\"%d ساعات\",\"%d ساعة\",\"%d ساعة\"],d:[\"أقل من يوم\",\"يوم واحد\",[\"يومان\",\"يومين\"],\"%d أيام\",\"%d يومًا\",\"%d يوم\"],M:[\"أقل من شهر\",\"شهر واحد\",[\"شهران\",\"شهرين\"],\"%d أشهر\",\"%d شهرا\",\"%d شهر\"],y:[\"أقل من عام\",\"عام واحد\",[\"عامان\",\"عامين\"],\"%d أعوام\",\"%d عامًا\",\"%d عام\"]},fa=function(a){return function(b,c,d,e){var f=da(b),g=ea[a][da(b)];return 2===f\u0026\u0026(g=g[c?0:1]),g.replace(/%d/i,b)}},ga=[\"كانون الثاني يناير\",\"شباط فبراير\",\"آذار مارس\",\"نيسان أبريل\",\"أيار مايو\",\"حزيران يونيو\",\"تموز يوليو\",\"آب أغسطس\",\"أيلول سبتمبر\",\"تشرين الأول أكتوبر\",\"تشرين الثاني نوفمبر\",\"كانون الأول ديسمبر\"],ha=(a.defineLocale(\"ar\",{months:ga,monthsShort:ga,weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/‏M/‏YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم عند الساعة] LT\",nextDay:\"[غدًا عند الساعة] LT\",nextWeek:\"dddd [عند الساعة] LT\",lastDay:\"[أمس عند الساعة] LT\",lastWeek:\"dddd [عند الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"بعد %s\",past:\"منذ %s\",s:fa(\"s\"),m:fa(\"m\"),mm:fa(\"m\"),h:fa(\"h\"),hh:fa(\"h\"),d:fa(\"d\"),dd:fa(\"d\"),M:fa(\"M\"),MM:fa(\"M\"),y:fa(\"y\"),yy:fa(\"y\")},preparse:function(a){return a.replace(/\\u200f/g,\"\").replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return ca[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ba[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),1:\"-inci\",5:\"-inci\",8:\"-inci\",70:\"-inci\",80:\"-inci\",2:\"-nci\",7:\"-nci\",20:\"-nci\",50:\"-nci\",3:\"-üncü\",4:\"-üncü\",100:\"-üncü\",6:\"-ncı\",9:\"-uncu\",10:\"-uncu\",30:\"-uncu\",60:\"-ıncı\",90:\"-ıncı\"}),ia=(a.defineLocale(\"az\",{months:\"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr\".split(\"_\"),monthsShort:\"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek\".split(\"_\"),weekdays:\"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə\".split(\"_\"),weekdaysShort:\"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən\".split(\"_\"),weekdaysMin:\"Bz_BE_ÇA_Çə_CA_Cü_Şə\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[sabah saat] LT\",nextWeek:\"[gələn həftə] dddd [saat] LT\",lastDay:\"[dünən] LT\",lastWeek:\"[keçən həftə] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s əvvəl\",s:\"birneçə saniyyə\",m:\"bir dəqiqə\",mm:\"%d dəqiqə\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir il\",yy:\"%d il\"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(a){return/^(gündüz|axşam)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"gecə\":12\u003ea?\"səhər\":17\u003ea?\"gündüz\":\"axşam\"},ordinalParse:/\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(a){if(0===a)// special case for zero","doy:7}}),a.defineLocale(\"be\",months:{format:\"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня\".split(\"_\"),standalone:\"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань\".split(\"_\")},monthsShort:\"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж\".split(\"_\"),weekdays:{format:\"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу\".split(\"_\"),standalone:\"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/},weekdaysShort:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сёння ў] LT\",nextDay:\"[Заўтра ў] LT\",lastDay:\"[Учора ў] LT\",nextWeek:function(){return\"[У] dddd [ў] LT\"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return\"[У мінулую] dddd [ў] LT\";case 1:case 2:case 4:return\"[У мінулы] dddd [ў] LT\"}},sameElse:\"L\"},relativeTime:{future:\"праз %s\",past:\"%s таму\",s:\"некалькі секунд\",m:c,mm:c,h:c,hh:c,d:\"дзень\",dd:c,M:\"месяц\",MM:c,y:\"год\",yy:c},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(a){return/^(дня|вечара)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночы\":12\u003ea?\"раніцы\":17\u003ea?\"дня\":\"вечара\"},ordinalParse:/\\d{1,2}-(і|ы|га)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a%10!==2\u0026\u0026a%10!==3||a%100===12||a%100===13?a+\"-ы\":a+\"-і\";case\"D\":return a+\"-га\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"bg\",months:\"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Днес в] LT\",nextDay:\"[Утре в] LT\",nextWeek:\"dddd [в] LT\",lastDay:\"[Вчера в] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[В изминалата] dddd [в] LT\";case 1:case 2:case 4:case 5:return\"[В изминалия] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"след %s\",past:\"преди %s\",s:\"няколко секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дни\",M:\"месец\",MM:\"%d месеца\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"১\",2:\"২\",3:\"৩\",4:\"৪\",5:\"৫\",6:\"৬\",7:\"৭\",8:\"৮\",9:\"৯\",0:\"০\"}),ja={\"১\":\"1\",\"২\":\"2\",\"৩\":\"3\",\"৪\":\"4\",\"৫\":\"5\",\"৬\":\"6\",\"৭\":\"7\",\"৮\":\"8\",\"৯\":\"9\",\"০\":\"0\"},ka=(a.defineLocale(\"bn\",{months:\"জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর\".split(\"_\"),monthsShort:\"জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্\".split(\"_\"),weekdays:\"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার\".split(\"_\"),weekdaysShort:\"রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি\".split(\"_\"),weekdaysMin:\"রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি\".split(\"_\"),longDateFormat:{LT:\"A h:mm সময়\",LTS:\"A h:mm:ss সময়\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm সময়\",LLLL:\"dddd, D MMMM YYYY, A h:mm সময়\"},calendar:{sameDay:\"[আজ] LT\",nextDay:\"[আগামীকাল] LT\",nextWeek:\"dddd, LT\",lastDay:\"[গতকাল] LT\",lastWeek:\"[গত] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s পরে\",past:\"%s আগে\",s:\"কয়েক সেকেন্ড\",m:\"এক মিনিট\",mm:\"%d মিনিট\",h:\"এক ঘন্টা\",hh:\"%d ঘন্টা\",d:\"এক দিন\",dd:\"%d দিন\",M:\"এক মাস\",MM:\"%d মাস\",y:\"এক বছর\",yy:\"%d বছর\"},preparse:function(a){return a.replace(/[১২৩৪৫৬৭৮৯০]/g,function(a){return ja[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ia[a]})},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"রাত\"===b\u0026\u0026a\u003e=4||\"দুপুর\"===b\u0026\u00265\u003ea||\"বিকাল\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"রাত\":10\u003ea?\"সকাল\":17\u003ea?\"দুপুর\":20\u003ea?\"বিকাল\":\"রাত\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),1:\"༡\",2:\"༢\",3:\"༣\",4:\"༤\",5:\"༥\",6:\"༦\",7:\"༧\",8:\"༨\",9:\"༩\",0:\"༠\"}),la={\"༡\":\"1\",\"༢\":\"2\",\"༣\":\"3\",\"༤\":\"4\",\"༥\":\"5\",\"༦\":\"6\",\"༧\":\"7\",\"༨\":\"8\",\"༩\":\"9\",\"༠\":\"0\"},ma=(a.defineLocale(\"bo\",{months:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),monthsShort:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),weekdays:\"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་\".split(\"_\"),weekdaysShort:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),weekdaysMin:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[དི་རིང] LT\",nextDay:\"[སང་ཉིན] LT\",nextWeek:\"[བདུན་ཕྲག་རྗེས་མ], LT\",lastDay:\"[ཁ་སང] LT\",lastWeek:\"[བདུན་ཕྲག་མཐའ་མ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ལ་\",past:\"%s སྔན་ལ\",s:\"ལམ་སང\",m:\"སྐར་མ་གཅིག\",mm:\"%d སྐར་མ\",h:\"ཆུ་ཚོད་གཅིག\",hh:\"%d ཆུ་ཚོད\",d:\"ཉིན་གཅིག\",dd:\"%d ཉིན་\",M:\"ཟླ་བ་གཅིག\",MM:\"%d ཟླ་བ\",y:\"ལོ་གཅིག\",yy:\"%d ལོ\"},preparse:function(a){return a.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,function(a){return la[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ka[a]})},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"མཚན་མོ\"===b\u0026\u0026a\u003e=4||\"ཉིན་གུང\"===b\u0026\u00265\u003ea||\"དགོང་དག\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"མཚན་མོ\":10\u003ea?\"ཞོགས་ཀས\":17\u003ea?\"ཉིན་གུང\":20\u003ea?\"དགོང་དག\":\"མཚན་མོ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"br\",months:\"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu\".split(\"_\"),monthsShort:\"Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker\".split(\"_\"),weekdays:\"Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn\".split(\"_\"),weekdaysShort:\"Sul_Lun_Meu_Mer_Yao_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Lu_Me_Mer_Ya_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h[e]mm A\",LTS:\"h[e]mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [a viz] MMMM YYYY\",LLL:\"D [a viz] MMMM YYYY h[e]mm A\",LLLL:\"dddd, D [a viz] MMMM YYYY h[e]mm A\"},calendar:{sameDay:\"[Hiziv da] LT\",nextDay:\"[Warc'hoazh da] LT\",nextWeek:\"dddd [da] LT\",lastDay:\"[Dec'h da] LT\",lastWeek:\"dddd [paset da] LT\",sameElse:\"L\"},relativeTime:{future:\"a-benn %s\",past:\"%s 'zo\",s:\"un nebeud segondennoù\",m:\"ur vunutenn\",mm:d,h:\"un eur\",hh:\"%d eur\",d:\"un devezh\",dd:d,M:\"ur miz\",MM:d,y:\"ur bloaz\",yy:e},ordinalParse:/\\d{1,2}(añ|vet)/,ordinal:function(a){var b=1===a?\"añ\":\"vet\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"bs\",months:\"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:i,mm:i,h:i,hh:i,d:\"dan\",dd:i,M:\"mjesec\",MM:i,y:\"godinu\",yy:i},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ca\",months:\"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre\".split(\"_\"),monthsShort:\"gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte\".split(\"_\"),weekdaysShort:\"dg._dl._dt._dc._dj._dv._ds.\".split(\"_\"),weekdaysMin:\"Dg_Dl_Dt_Dc_Dj_Dv_Ds\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[avui a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextDay:function(){return\"[demà a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextWeek:function(){return\"dddd [a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastDay:function(){return\"[ahir a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [passat a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"fa %s\",s:\"uns segons\",m:\"un minut\",mm:\"%d minuts\",h:\"una hora\",hh:\"%d hores\",d:\"un dia\",dd:\"%d dies\",M:\"un mes\",MM:\"%d mesos\",y:\"un any\",yy:\"%d anys\"},ordinalParse:/\\d{1,2}(r|n|t|è|a)/,ordinal:function(a,b){var c=1===a?\"r\":2===a?\"n\":3===a?\"r\":4===a?\"t\":\"è\";return\"w\"!==b\u0026\u0026\"W\"!==b||(c=\"a\"),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\")),na=\"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\"),oa=(a.defineLocale(\"cs\",months:ma,monthsShort:na,monthsParse:function(a,b){var c,d=[];for(c=0;12\u003ec;c++)","d[c]=new RegExp(\"^\"+a[c]+\"$|^\"+b[c]+\"$\",\"i\");return d}(ma,na),shortMonthsParse:function(a)var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(na),longMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(ma),weekdays:\"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),weekdaysShort:\"ne_po_út_st_čt_pá_so\".split(\"_\"),weekdaysMin:\"ne_po_út_st_čt_pá_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},calendar:{sameDay:\"[dnes v] LT\",nextDay:\"[zítra v] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v neděli v] LT\";case 1:case 2:return\"[v] dddd [v] LT\";case 3:return\"[ve středu v] LT\";case 4:return\"[ve čtvrtek v] LT\";case 5:return\"[v pátek v] LT\";case 6:return\"[v sobotu v] LT\"}},lastDay:\"[včera v] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulou neděli v] LT\";case 1:case 2:return\"[minulé] dddd [v] LT\";case 3:return\"[minulou středu v] LT\";case 4:case 5:return\"[minulý] dddd [v] LT\";case 6:return\"[minulou sobotu v] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"před %s\",s:k,m:k,mm:k,h:k,hh:k,d:k,dd:k,M:k,MM:k,y:k,yy:k},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"cv\",months:\"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав\".split(\"_\"),monthsShort:\"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш\".split(\"_\"),weekdays:\"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун\".split(\"_\"),weekdaysShort:\"выр_тун_ытл_юн_кӗҫ_эрн_шӑм\".split(\"_\"),weekdaysMin:\"вр_тн_ыт_юн_кҫ_эр_шм\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]\",LLL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\",LLLL:\"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\"},calendar:{sameDay:\"[Паян] LT [сехетре]\",nextDay:\"[Ыран] LT [сехетре]\",lastDay:\"[Ӗнер] LT [сехетре]\",nextWeek:\"[Ҫитес] dddd LT [сехетре]\",lastWeek:\"[Иртнӗ] dddd LT [сехетре]\",sameElse:\"L\"},relativeTime:{future:function(a){var b=/сехет$/i.exec(a)?\"рен\":/ҫул$/i.exec(a)?\"тан\":\"ран\";return a+b},past:\"%s каялла\",s:\"пӗр-ик ҫеккунт\",m:\"пӗр минут\",mm:\"%d минут\",h:\"пӗр сехет\",hh:\"%d сехет\",d:\"пӗр кун\",dd:\"%d кун\",M:\"пӗр уйӑх\",MM:\"%d уйӑх\",y:\"пӗр ҫул\",yy:\"%d ҫул\"},ordinalParse:/\\d{1,2}-мӗш/,ordinal:\"%d-мӗш\",week:{dow:1,// Monday is the first day of the week.","ordinal:function(a)var b=a,c=\"\",d=[\"\",\"af\",\"il\",\"ydd\",\"ydd\",\"ed\",\"ed\",\"ed\",\"fed\",\"fed\",\"fed\",// 1af to 10fed","doy:4}}),[\"ޖެނުއަރީ\",\"ފެބްރުއަރީ\",\"މާރިޗު\",\"އޭޕްރީލު\",\"މޭ\",\"ޖޫން\",\"ޖުލައި\",\"އޯގަސްޓު\",\"ސެޕްޓެމްބަރު\",\"އޮކްޓޯބަރު\",\"ނޮވެމްބަރު\",\"ޑިސެމްބަރު\"]),pa=[\"އާދިއްތަ\",\"ހޯމަ\",\"އަންގާރަ\",\"ބުދަ\",\"ބުރާސްފަތި\",\"ހުކުރު\",\"ހޮނިހިރު\"],qa=(a.defineLocale(\"dv\",months:oa,monthsShort:oa,weekdays:pa,weekdaysShort:pa,weekdaysMin:\"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/M/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/މކ|މފ/,isPM:function(a){return\"މފ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"މކ\":\"މފ\"},calendar:{sameDay:\"[މިއަދު] LT\",nextDay:\"[މާދަމާ] LT\",nextWeek:\"dddd LT\",lastDay:\"[އިއްޔެ] LT\",lastWeek:\"[ފާއިތުވި] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"ތެރޭގައި %s\",past:\"ކުރިން %s\",s:\"ސިކުންތުކޮޅެއް\",m:\"މިނިޓެއް\",mm:\"މިނިޓު %d\",h:\"ގަޑިއިރެއް\",hh:\"ގަޑިއިރު %d\",d:\"ދުވަހެއް\",dd:\"ދުވަސް %d\",M:\"މަހެއް\",MM:\"މަސް %d\",y:\"އަހަރެއް\",yy:\"އަހަރު %d\"},preparse:function(a){return a.replace(/،/g,\",\")},postformat:function(a){return a.replace(/,/g,\"،\")},week:{dow:7,// Sunday is the first day of the week.","doy:12}}),a.defineLocale(\"el\",monthsNominativeEl:\"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),monthsGenitiveEl:\"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου\".split(\"_\"),months:function(a,b){return/D/.test(b.substring(0,b.indexOf(\"MMMM\")))?this._monthsGenitiveEl[a.month()]:this._monthsNominativeEl[a.month()]},monthsShort:\"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ\".split(\"_\"),weekdays:\"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),weekdaysShort:\"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),weekdaysMin:\"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),meridiem:function(a,b,c){return a\u003e11?c?\"μμ\":\"ΜΜ\":c?\"πμ\":\"ΠΜ\"},isPM:function(a){return\"μ\"===(a+\"\").toLowerCase()[0]},meridiemParse:/[ΠΜ]\\.?Μ?\\.?/i,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendarEl:{sameDay:\"[Σήμερα {}] LT\",nextDay:\"[Αύριο {}] LT\",nextWeek:\"dddd [{}] LT\",lastDay:\"[Χθες {}] LT\",lastWeek:function(){switch(this.day()){case 6:return\"[το προηγούμενο] dddd [{}] LT\";default:return\"[την προηγούμενη] dddd [{}] LT\"}},sameElse:\"L\"},calendar:function(a,b){var c=this._calendarEl[a],d=b\u0026\u0026b.hours();return n(c)\u0026\u0026(c=c.apply(b)),c.replace(\"{}\",d%12===1?\"στη\":\"στις\")},relativeTime:{future:\"σε %s\",past:\"%s πριν\",s:\"λίγα δευτερόλεπτα\",m:\"ένα λεπτό\",mm:\"%d λεπτά\",h:\"μία ώρα\",hh:\"%d ώρες\",d:\"μία μέρα\",dd:\"%d μέρες\",M:\"ένας μήνας\",MM:\"%d μήνες\",y:\"ένας χρόνος\",yy:\"%d χρόνια\"},ordinalParse:/\\d{1,2}η/,ordinal:\"%dη\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-au\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-ca\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"YYYY-MM-DD\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),a.defineLocale(\"en-gb\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-ie\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"en-nz\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"eo\",months:\"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec\".split(\"_\"),weekdays:\"Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato\".split(\"_\"),weekdaysShort:\"Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Ĵa_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D[-an de] MMMM, YYYY\",LLL:\"D[-an de] MMMM, YYYY HH:mm\",LLLL:\"dddd, [la] D[-an de] MMMM, YYYY HH:mm\"},meridiemParse:/[ap]\\.t\\.m/i,isPM:function(a){return\"p\"===a.charAt(0).toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"p.t.m.\":\"P.T.M.\":c?\"a.t.m.\":\"A.T.M.\"},calendar:{sameDay:\"[Hodiaŭ je] LT\",nextDay:\"[Morgaŭ je] LT\",nextWeek:\"dddd [je] LT\",lastDay:\"[Hieraŭ je] LT\",lastWeek:\"[pasinta] dddd [je] LT\",sameElse:\"L\"},relativeTime:{future:\"je %s\",past:\"antaŭ %s\",s:\"sekundoj\",m:\"minuto\",mm:\"%d minutoj\",h:\"horo\",hh:\"%d horoj\",d:\"tago\",//ne 'diurno', ĉar estas uzita por proksimumo","doy:7}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),ra=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),sa=(a.defineLocale(\"es-do\",months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?ra[a.month()]:qa[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),ta=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),ua=(a.defineLocale(\"es\",months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?ta[a.month()]:sa[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"۱\",2:\"۲\",3:\"۳\",4:\"۴\",5:\"۵\",6:\"۶\",7:\"۷\",8:\"۸\",9:\"۹\",0:\"۰\"}),va={\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"۰\":\"0\"},wa=(a.defineLocale(\"fa\",{months:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),monthsShort:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),weekdays:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysShort:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysMin:\"ی_د_س_چ_پ_ج_ش\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(a){return/بعد از ظهر/.test(a)},meridiem:function(a,b,c){return 12\u003ea?\"قبل از ظهر\":\"بعد از ظهر\"},calendar:{sameDay:\"[امروز ساعت] LT\",nextDay:\"[فردا ساعت] LT\",nextWeek:\"dddd [ساعت] LT\",lastDay:\"[دیروز ساعت] LT\",lastWeek:\"dddd [پیش] [ساعت] LT\",sameElse:\"L\"},relativeTime:{future:\"در %s\",past:\"%s پیش\",s:\"چندین ثانیه\",m:\"یک دقیقه\",mm:\"%d دقیقه\",h:\"یک ساعت\",hh:\"%d ساعت\",d:\"یک روز\",dd:\"%d روز\",M:\"یک ماه\",MM:\"%d ماه\",y:\"یک سال\",yy:\"%d سال\"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return va[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ua[a]}).replace(/,/g,\"،\")},ordinalParse:/\\d{1,2}م/,ordinal:\"%dم\",week:{dow:6,// Saturday is the first day of the week.","doy:4}}),a.defineLocale(\"fr-ca\",months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")}}),a.defineLocale(\"fr-ch\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"fr\",months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|)/,ordinal:function(a){return a+(1===a?\"er\":\"\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.\".split(\"_\")),za=\"jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),Aa=(a.defineLocale(\"fy\",months:\"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?za[a.month()]:ya[a.month()]},monthsParseExact:!0,weekdays:\"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon\".split(\"_\"),weekdaysShort:\"si._mo._ti._wo._to._fr._so.\".split(\"_\"),weekdaysMin:\"Si_Mo_Ti_Wo_To_Fr_So\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[hjoed om] LT\",nextDay:\"[moarn om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[juster om] LT\",lastWeek:\"[ôfrûne] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oer %s\",past:\"%s lyn\",s:\"in pear sekonden\",m:\"ien minút\",mm:\"%d minuten\",h:\"ien oere\",hh:\"%d oeren\",d:\"ien dei\",dd:\"%d dagen\",M:\"ien moanne\",MM:\"%d moannen\",y:\"ien jier\",yy:\"%d jierren\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"Am Faoilleach\",\"An Gearran\",\"Am Màrt\",\"An Giblean\",\"An Cèitean\",\"An t-Ògmhios\",\"An t-Iuchar\",\"An Lùnastal\",\"An t-Sultain\",\"An Dàmhair\",\"An t-Samhain\",\"An Dùbhlachd\"]),Ba=[\"Faoi\",\"Gear\",\"Màrt\",\"Gibl\",\"Cèit\",\"Ògmh\",\"Iuch\",\"Lùn\",\"Sult\",\"Dàmh\",\"Samh\",\"Dùbh\"],Ca=[\"Didòmhnaich\",\"Diluain\",\"Dimàirt\",\"Diciadain\",\"Diardaoin\",\"Dihaoine\",\"Disathairne\"],Da=[\"Did\",\"Dil\",\"Dim\",\"Dic\",\"Dia\",\"Dih\",\"Dis\"],Ea=[\"Dò\",\"Lu\",\"Mà\",\"Ci\",\"Ar\",\"Ha\",\"Sa\"],Fa=(a.defineLocale(\"gd\",months:Aa,monthsShort:Ba,monthsParseExact:!0,weekdays:Ca,weekdaysShort:Da,weekdaysMin:Ea,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[An-diugh aig] LT\",nextDay:\"[A-màireach aig] LT\",nextWeek:\"dddd [aig] LT\",lastDay:\"[An-dè aig] LT\",lastWeek:\"dddd [seo chaidh] [aig] LT\",sameElse:\"L\"},relativeTime:{future:\"ann an %s\",past:\"bho chionn %s\",s:\"beagan diogan\",m:\"mionaid\",mm:\"%d mionaidean\",h:\"uair\",hh:\"%d uairean\",d:\"latha\",dd:\"%d latha\",M:\"mìos\",MM:\"%d mìosan\",y:\"bliadhna\",yy:\"%d bliadhna\"},ordinalParse:/\\d{1,2}(d|na|mh)/,ordinal:function(a){var b=1===a?\"d\":a%10===2?\"na\":\"mh\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"gl\",months:\"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro\".split(\"_\"),monthsShort:\"Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado\".split(\"_\"),weekdaysShort:\"Dom._Lun._Mar._Mér._Xov._Ven._Sáb.\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Mé_Xo_Ve_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoxe \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextDay:function(){return\"[mañá \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextWeek:function(){return\"dddd [\"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},lastDay:function(){return\"[onte \"+(1!==this.hours()?\"á\":\"a\")+\"] LT\"},lastWeek:function(){return\"[o] dddd [pasado \"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:function(a){return\"uns segundos\"===a?\"nuns segundos\":\"en \"+a},past:\"hai %s\",s:\"uns segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"unha hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"he\",months:\"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),monthsShort:\"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳\".split(\"_\"),weekdays:\"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),weekdaysShort:\"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),weekdaysMin:\"א_ב_ג_ד_ה_ו_ש\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[היום ב־]LT\",nextDay:\"[מחר ב־]LT\",nextWeek:\"dddd [בשעה] LT\",lastDay:\"[אתמול ב־]LT\",lastWeek:\"[ביום] dddd [האחרון בשעה] LT\",sameElse:\"L\"},relativeTime:{future:\"בעוד %s\",past:\"לפני %s\",s:\"מספר שניות\",m:\"דקה\",mm:\"%d דקות\",h:\"שעה\",hh:function(a){return 2===a?\"שעתיים\":a+\" שעות\"},d:\"יום\",dd:function(a){return 2===a?\"יומיים\":a+\" ימים\"},M:\"חודש\",MM:function(a){return 2===a?\"חודשיים\":a+\" חודשים\"},y:\"שנה\",yy:function(a){return 2===a?\"שנתיים\":a%10===0\u0026\u002610!==a?a+\" שנה\":a+\" שנים\"}},meridiemParse:/אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(a){return/^(אחה\"צ|אחרי הצהריים|בערב)$/.test(a)},meridiem:function(a,b,c){return 5\u003ea?\"לפנות בוקר\":10\u003ea?\"בבוקר\":12\u003ea?c?'לפנה\"צ':\"לפני הצהריים\":18\u003ea?c?'אחה\"צ':\"אחרי הצהריים\":\"בערב\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Ga={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Ha=(a.defineLocale(\"hi\",{months:\"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर\".split(\"_\"),monthsShort:\"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm बजे\",LTS:\"A h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, A h:mm बजे\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[कल] LT\",nextWeek:\"dddd, LT\",lastDay:\"[कल] LT\",lastWeek:\"[पिछले] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s में\",past:\"%s पहले\",s:\"कुछ ही क्षण\",m:\"एक मिनट\",mm:\"%d मिनट\",h:\"एक घंटा\",hh:\"%d घंटे\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महीने\",MM:\"%d महीने\",y:\"एक वर्ष\",yy:\"%d वर्ष\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Ga[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Fa[a]})},","meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(a,b)return 12===a\u0026\u0026(a=0),\"रात\"===b?4\u003ea?a:a+12:\"सुबह\"===b?a:\"दोपहर\"===b?a\u003e=10?a:a+12:\"शाम\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात\":10\u003ea?\"सुबह\":17\u003ea?\"दोपहर\":20\u003ea?\"शाम\":\"रात\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"hr\",months:{format:\"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca\".split(\"_\"),standalone:\"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\")},monthsShort:\"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:r,mm:r,h:r,hh:r,d:\"dan\",dd:r,M:\"mjesec\",MM:r,y:\"godinu\",yy:r},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton\".split(\" \")),Ia=(a.defineLocale(\"hu\",months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"},meridiemParse:/de|du/i,isPM:function(a){return\"u\"===a.charAt(1).toLowerCase()},meridiem:function(a,b,c){return 12\u003ea?c===!0?\"de\":\"DE\":c===!0?\"du\":\"DU\"},calendar:{sameDay:\"[ma] LT[-kor]\",nextDay:\"[holnap] LT[-kor]\",nextWeek:function(){return t.call(this,!0)},lastDay:\"[tegnap] LT[-kor]\",lastWeek:function(){return t.call(this,!1)},sameElse:\"L\"},relativeTime:{future:\"%s múlva\",past:\"%s\",s:s,m:s,mm:s,h:s,hh:s,d:s,dd:s,M:s,MM:s,y:s,yy:s},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"hy-am\",months:{format:\"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի\".split(\"_\"),standalone:\"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր\".split(\"_\")},monthsShort:\"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ\".split(\"_\"),weekdays:\"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ\".split(\"_\"),weekdaysShort:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),weekdaysMin:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY թ.\",LLL:\"D MMMM YYYY թ., HH:mm\",LLLL:\"dddd, D MMMM YYYY թ., HH:mm\"},calendar:{sameDay:\"[այսօր] LT\",nextDay:\"[վաղը] LT\",lastDay:\"[երեկ] LT\",nextWeek:function(){return\"dddd [օրը ժամը] LT\"},lastWeek:function(){return\"[անցած] dddd [օրը ժամը] LT\"},sameElse:\"L\"},relativeTime:{future:\"%s հետո\",past:\"%s առաջ\",s:\"մի քանի վայրկյան\",m:\"րոպե\",mm:\"%d րոպե\",h:\"ժամ\",hh:\"%d ժամ\",d:\"օր\",dd:\"%d օր\",M:\"ամիս\",MM:\"%d ամիս\",y:\"տարի\",yy:\"%d տարի\"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(a){return/^(ցերեկվա|երեկոյան)$/.test(a)},meridiem:function(a){return 4\u003ea?\"գիշերվա\":12\u003ea?\"առավոտվա\":17\u003ea?\"ցերեկվա\":\"երեկոյան\"},ordinalParse:/\\d{1,2}|\\d{1,2}-(ին|րդ)/,ordinal:function(a,b){switch(b){case\"DDD\":case\"w\":case\"W\":case\"DDDo\":return 1===a?a+\"-ին\":a+\"-րդ\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"id\",months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"siang\"===b?a\u003e=11?a:a+12:\"sore\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"siang\":19\u003ea?\"sore\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Besok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kemarin pukul] LT\",lastWeek:\"dddd [lalu pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lalu\",s:\"beberapa detik\",m:\"semenit\",mm:\"%d menit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"it\",months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),weekdays:\"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato\".split(\"_\"),weekdaysShort:\"Dom_Lun_Mar_Mer_Gio_Ven_Sab\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Me_Gi_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Oggi alle] LT\",nextDay:\"[Domani alle] LT\",nextWeek:\"dddd [alle] LT\",lastDay:\"[Ieri alle] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[la scorsa] dddd [alle] LT\";default:return\"[lo scorso] dddd [alle] LT\"}},sameElse:\"L\"},relativeTime:{future:function(a){return(/^[0-9].+$/.test(a)?\"tra\":\"in\")+\" \"+a},past:\"%s fa\",s:\"alcuni secondi\",m:\"un minuto\",mm:\"%d minuti\",h:\"un'ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"ja\",months:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),weekdaysShort:\"日_月_火_水_木_金_土\".split(\"_\"),weekdaysMin:\"日_月_火_水_木_金_土\".split(\"_\"),longDateFormat:{LT:\"Ah時m分\",LTS:\"Ah時m分s秒\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah時m分\",LLLL:\"YYYY年M月D日Ah時m分 dddd\"},meridiemParse:/午前|午後/i,isPM:function(a){return\"午後\"===a},meridiem:function(a,b,c){return 12\u003ea?\"午前\":\"午後\"},calendar:{sameDay:\"[今日] LT\",nextDay:\"[明日] LT\",nextWeek:\"[来週]dddd LT\",lastDay:\"[昨日] LT\",lastWeek:\"[前週]dddd LT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}日/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";default:return a}},relativeTime:{future:\"%s後\",past:\"%s前\",s:\"数秒\",m:\"1分\",mm:\"%d分\",h:\"1時間\",hh:\"%d時間\",d:\"1日\",dd:\"%d日\",M:\"1ヶ月\",MM:\"%dヶ月\",y:\"1年\",yy:\"%d年\"}}),a.defineLocale(\"jv\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des\".split(\"_\"),weekdays:\"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Reb_Kem_Jem_Sep\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sp\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"enjing\"===b?a:\"siyang\"===b?a\u003e=11?a:a+12:\"sonten\"===b||\"ndalu\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"enjing\":15\u003ea?\"siyang\":19\u003ea?\"sonten\":\"ndalu\"},calendar:{sameDay:\"[Dinten puniko pukul] LT\",nextDay:\"[Mbenjang pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kala wingi pukul] LT\",lastWeek:\"dddd [kepengker pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"wonten ing %s\",past:\"%s ingkang kepengker\",s:\"sawetawis detik\",m:\"setunggal menit\",mm:\"%d menit\",h:\"setunggal jam\",hh:\"%d jam\",d:\"sedinten\",dd:\"%d dinten\",M:\"sewulan\",MM:\"%d wulan\",y:\"setaun\",yy:\"%d taun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ka\",months:{standalone:\"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი\".split(\"_\"),format:\"იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს\".split(\"_\")},monthsShort:\"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),weekdays:{standalone:\"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი\".split(\"_\"),format:\"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს\".split(\"_\"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:\"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),weekdaysMin:\"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[დღეს] LT[-ზე]\",nextDay:\"[ხვალ] LT[-ზე]\",lastDay:\"[გუშინ] LT[-ზე]\",nextWeek:\"[შემდეგ] dddd LT[-ზე]\",lastWeek:\"[წინა] dddd LT-ზე\",sameElse:\"L\"},relativeTime:{future:function(a){return/(წამი|წუთი|საათი|წელი)/.test(a)?a.replace(/ი$/,\"ში\"):a+\"ში\"},past:function(a){return/(წამი|წუთი|საათი|დღე|თვე)/.test(a)?a.replace(/(ი|ე)$/,\"ის წინ\"):/წელი/.test(a)?a.replace(/წელი$/,\"წლის წინ\"):void 0},s:\"რამდენიმე წამი\",m:\"წუთი\",mm:\"%d წუთი\",h:\"საათი\",hh:\"%d საათი\",d:\"დღე\",dd:\"%d დღე\",M:\"თვე\",MM:\"%d თვე\",y:\"წელი\",yy:\"%d წელი\"},ordinalParse:/0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,ordinal:function(a){return 0===a?a:1===a?a+\"-ლი\":20\u003ea||100\u003e=a\u0026\u0026a%20===0||a%100===0?\"მე-\"+a:a+\"-ე\"},week:{dow:1,doy:7}}),{0:\"-ші\",1:\"-ші\",2:\"-ші\",3:\"-ші\",4:\"-ші\",5:\"-ші\",6:\"-шы\",7:\"-ші\",8:\"-ші\",9:\"-шы\",10:\"-шы\",20:\"-шы\",30:\"-шы\",40:\"-шы\",50:\"-ші\",60:\"-шы\",70:\"-ші\",80:\"-ші\",90:\"-шы\",100:\"-ші\"}),Ja=(a.defineLocale(\"kk\",{months:\"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан\".split(\"_\"),monthsShort:\"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел\".split(\"_\"),weekdays:\"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі\".split(\"_\"),weekdaysShort:\"жек_дүй_сей_сәр_бей_жұм_сен\".split(\"_\"),weekdaysMin:\"жк_дй_сй_ср_бй_жм_сн\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгін сағат] LT\",nextDay:\"[Ертең сағат] LT\",nextWeek:\"dddd [сағат] LT\",lastDay:\"[Кеше сағат] LT\",lastWeek:\"[Өткен аптаның] dddd [сағат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ішінде\",past:\"%s бұрын\",s:\"бірнеше секунд\",m:\"бір минут\",mm:\"%d минут\",h:\"бір сағат\",hh:\"%d сағат\",d:\"бір күн\",dd:\"%d күн\",M:\"бір ай\",MM:\"%d ай\",y:\"бір жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(ші|шы)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ia[a]||Ia[b]||Ia[c])},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"ko\",months:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),monthsShort:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),weekdays:\"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),weekdaysShort:\"일_월_화_수_목_금_토\".split(\"_\"),weekdaysMin:\"일_월_화_수_목_금_토\".split(\"_\"),longDateFormat:{LT:\"A h시 m분\",LTS:\"A h시 m분 s초\",L:\"YYYY.MM.DD\",LL:\"YYYY년 MMMM D일\",LLL:\"YYYY년 MMMM D일 A h시 m분\",LLLL:\"YYYY년 MMMM D일 dddd A h시 m분\"},calendar:{sameDay:\"오늘 LT\",nextDay:\"내일 LT\",nextWeek:\"dddd LT\",lastDay:\"어제 LT\",lastWeek:\"지난주 dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s 후\",past:\"%s 전\",s:\"몇 초\",ss:\"%d초\",m:\"일분\",mm:\"%d분\",h:\"한 시간\",hh:\"%d시간\",d:\"하루\",dd:\"%d일\",M:\"한 달\",MM:\"%d달\",y:\"일 년\",yy:\"%d년\"},ordinalParse:/\\d{1,2}일/,ordinal:\"%d일\",meridiemParse:/오전|오후/,isPM:function(a){return\"오후\"===a},meridiem:function(a,b,c){return 12\u003ea?\"오전\":\"오후\"}}),{0:\"-чү\",1:\"-чи\",2:\"-чи\",3:\"-чү\",4:\"-чү\",5:\"-чи\",6:\"-чы\",7:\"-чи\",8:\"-чи\",9:\"-чу\",10:\"-чу\",20:\"-чы\",30:\"-чу\",40:\"-чы\",50:\"-чү\",60:\"-чы\",70:\"-чи\",80:\"-чи\",90:\"-чу\",100:\"-чү\"}),Ka=(a.defineLocale(\"ky\",{months:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),monthsShort:\"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби\".split(\"_\"),weekdaysShort:\"Жек_Дүй_Шей_Шар_Бей_Жум_Ише\".split(\"_\"),weekdaysMin:\"Жк_Дй_Шй_Шр_Бй_Жм_Иш\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгүн саат] LT\",nextDay:\"[Эртең саат] LT\",nextWeek:\"dddd [саат] LT\",lastDay:\"[Кече саат] LT\",lastWeek:\"[Өткен аптанын] dddd [күнү] [саат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ичинде\",past:\"%s мурун\",s:\"бирнече секунд\",m:\"бир мүнөт\",mm:\"%d мүнөт\",h:\"бир саат\",hh:\"%d саат\",d:\"бир күн\",dd:\"%d күн\",M:\"бир ай\",MM:\"%d ай\",y:\"бир жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ja[a]||Ja[b]||Ja[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"lb\",months:\"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),weekdaysShort:\"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm [Auer]\",LTS:\"H:mm:ss [Auer]\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm [Auer]\",LLLL:\"dddd, D. MMMM YYYY H:mm [Auer]\"},calendar:{sameDay:\"[Haut um] LT\",sameElse:\"L\",nextDay:\"[Muer um] LT\",nextWeek:\"dddd [um] LT\",lastDay:\"[Gëschter um] LT\",lastWeek:function(){","doy:4}}),a.defineLocale(\"lo\",months:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),monthsShort:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),weekdays:\"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysShort:\"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysMin:\"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"ວັນdddd D MMMM YYYY HH:mm\"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(a){return\"ຕອນແລງ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ຕອນເຊົ້າ\":\"ຕອນແລງ\"},calendar:{sameDay:\"[ມື້ນີ້ເວລາ] LT\",nextDay:\"[ມື້ອື່ນເວລາ] LT\",nextWeek:\"[ວັນ]dddd[ໜ້າເວລາ] LT\",lastDay:\"[ມື້ວານນີ້ເວລາ] LT\",lastWeek:\"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT\",sameElse:\"L\"},relativeTime:{future:\"ອີກ %s\",past:\"%sຜ່ານມາ\",s:\"ບໍ່ເທົ່າໃດວິນາທີ\",m:\"1 ນາທີ\",mm:\"%d ນາທີ\",h:\"1 ຊົ່ວໂມງ\",hh:\"%d ຊົ່ວໂມງ\",d:\"1 ມື້\",dd:\"%d ມື້\",M:\"1 ເດືອນ\",MM:\"%d ເດືອນ\",y:\"1 ປີ\",yy:\"%d ປີ\"},ordinalParse:/(ທີ່)\\d{1,2}/,ordinal:function(a){return\"ທີ່\"+a}}),{m:\"minutė_minutės_minutę\",mm:\"minutės_minučių_minutes\",h:\"valanda_valandos_valandą\",hh:\"valandos_valandų_valandas\",d:\"diena_dienos_dieną\",dd:\"dienos_dienų_dienas\",M:\"mėnuo_mėnesio_mėnesį\",MM:\"mėnesiai_mėnesių_mėnesius\",y:\"metai_metų_metus\",yy:\"metai_metų_metus\"}),La=(a.defineLocale(\"lt\",{months:{format:\"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),standalone:\"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis\".split(\"_\"),isFormat:/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?/},monthsShort:\"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),weekdays:{format:\"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį\".split(\"_\"),standalone:\"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis\".split(\"_\"),isFormat:/dddd HH:mm/},weekdaysShort:\"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),weekdaysMin:\"S_P_A_T_K_Pn_Š\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY [m.] MMMM D [d.]\",LLL:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",LLLL:\"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]\",l:\"YYYY-MM-DD\",ll:\"YYYY [m.] MMMM D [d.]\",lll:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",llll:\"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]\"},calendar:{sameDay:\"[Šiandien] LT\",nextDay:\"[Rytoj] LT\",nextWeek:\"dddd LT\",lastDay:\"[Vakar] LT\",lastWeek:\"[Praėjusį] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"po %s\",past:\"prieš %s\",s:A,m:B,mm:E,h:B,hh:E,d:B,dd:E,M:B,MM:E,y:B,yy:E},ordinalParse:/\\d{1,2}-oji/,ordinal:function(a){return a+\"-oji\"},week:{dow:1,// Monday is the first day of the week.","m:[\"jedan minut\",\"jednog minuta\"],mm:[\"minut\",\"minuta\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mjesec\",\"mjeseca\",\"mjeseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=Ma.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+Ma.correctGrammaticalCase(a,d)}}),Na=(a.defineLocale(\"me\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sjutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedjelje] [u] LT\",\"[prošlog] [ponedjeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srijede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"nekoliko sekundi\",m:Ma.translate,mm:Ma.translate,h:Ma.translate,hh:Ma.translate,d:\"dan\",dd:Ma.translate,M:\"mjesec\",MM:Ma.translate,y:\"godinu\",yy:Ma.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"mk\",months:\"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"недела_понеделник_вторник_среда_четврток_петок_сабота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сре_чет_пет_саб\".split(\"_\"),weekdaysMin:\"нe_пo_вт_ср_че_пе_сa\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Денес во] LT\",nextDay:\"[Утре во] LT\",nextWeek:\"[Во] dddd [во] LT\",lastDay:\"[Вчера во] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[Изминатата] dddd [во] LT\";case 1:case 2:case 4:case 5:return\"[Изминатиот] dddd [во] LT\"}},sameElse:\"L\"},relativeTime:{future:\"после %s\",past:\"пред %s\",s:\"неколку секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дена\",M:\"месец\",MM:\"%d месеци\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ml\",months:\"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ\".split(\"_\"),monthsShort:\"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച\".split(\"_\"),weekdaysShort:\"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി\".split(\"_\"),weekdaysMin:\"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ\".split(\"_\"),longDateFormat:{LT:\"A h:mm -നു\",LTS:\"A h:mm:ss -നു\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm -നു\",LLLL:\"dddd, D MMMM YYYY, A h:mm -നു\"},calendar:{sameDay:\"[ഇന്ന്] LT\",nextDay:\"[നാളെ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ഇന്നലെ] LT\",lastWeek:\"[കഴിഞ്ഞ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s കഴിഞ്ഞ്\",past:\"%s മുൻപ്\",s:\"അൽപ നിമിഷങ്ങൾ\",m:\"ഒരു മിനിറ്റ്\",mm:\"%d മിനിറ്റ്\",h:\"ഒരു മണിക്കൂർ\",hh:\"%d മണിക്കൂർ\",d:\"ഒരു ദിവസം\",dd:\"%d ദിവസം\",M:\"ഒരു മാസം\",MM:\"%d മാസം\",y:\"ഒരു വർഷം\",yy:\"%d വർഷം\"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"രാത്രി\"===b\u0026\u0026a\u003e=4||\"ഉച്ച കഴിഞ്ഞ്\"===b||\"വൈകുന്നേരം\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"രാത്രി\":12\u003ea?\"രാവിലെ\":17\u003ea?\"ഉച്ച കഴിഞ്ഞ്\":20\u003ea?\"വൈകുന്നേരം\":\"രാത്രി\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Oa={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Pa=(a.defineLocale(\"mr\",{months:\"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर\".split(\"_\"),monthsShort:\"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm वाजता\",LTS:\"A h:mm:ss वाजता\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm वाजता\",LLLL:\"dddd, D MMMM YYYY, A h:mm वाजता\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[उद्या] LT\",nextWeek:\"dddd, LT\",lastDay:\"[काल] LT\",lastWeek:\"[मागील] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%sमध्ये\",past:\"%sपूर्वी\",s:J,m:J,mm:J,h:J,hh:J,d:J,dd:J,M:J,MM:J,y:J,yy:J},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Oa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Na[a]})},meridiemParse:/रात्री|सकाळी|दुपारी|सायंकाळी/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात्री\"===b?4\u003ea?a:a+12:\"सकाळी\"===b?a:\"दुपारी\"===b?a\u003e=10?a:a+12:\"सायंकाळी\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात्री\":10\u003ea?\"सकाळी\":17\u003ea?\"दुपारी\":20\u003ea?\"सायंकाळी\":\"रात्री\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"ms-my\",months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ms\",months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"၁\",2:\"၂\",3:\"၃\",4:\"၄\",5:\"၅\",6:\"၆\",7:\"၇\",8:\"၈\",9:\"၉\",0:\"၀\"}),Qa={\"၁\":\"1\",\"၂\":\"2\",\"၃\":\"3\",\"၄\":\"4\",\"၅\":\"5\",\"၆\":\"6\",\"၇\":\"7\",\"၈\":\"8\",\"၉\":\"9\",\"၀\":\"0\"},Ra=(a.defineLocale(\"my\",{months:\"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ\".split(\"_\"),monthsShort:\"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ\".split(\"_\"),weekdays:\"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ\".split(\"_\"),weekdaysShort:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),weekdaysMin:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ယနေ.] LT [မှာ]\",nextDay:\"[မနက်ဖြန်] LT [မှာ]\",nextWeek:\"dddd LT [မှာ]\",lastDay:\"[မနေ.က] LT [မှာ]\",lastWeek:\"[ပြီးခဲ့သော] dddd LT [မှာ]\",sameElse:\"L\"},relativeTime:{future:\"လာမည့် %s မှာ\",past:\"လွန်ခဲ့သော %s က\",s:\"စက္ကန်.အနည်းငယ်\",m:\"တစ်မိနစ်\",mm:\"%d မိနစ်\",h:\"တစ်နာရီ\",hh:\"%d နာရီ\",d:\"တစ်ရက်\",dd:\"%d ရက်\",M:\"တစ်လ\",MM:\"%d လ\",y:\"တစ်နှစ်\",yy:\"%d နှစ်\"},preparse:function(a){return a.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,function(a){return Qa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Pa[a]})},week:{dow:1,// Monday is the first day of the week.","doy:4}}),1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Sa={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Ta=(a.defineLocale(\"ne\",{months:\"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर\".split(\"_\"),monthsShort:\"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.\".split(\"_\"),monthsParseExact:!0,weekdays:\"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार\".split(\"_\"),weekdaysShort:\"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.\".split(\"_\"),weekdaysMin:\"आ._सो._मं._बु._बि._शु._श.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"Aको h:mm बजे\",LTS:\"Aको h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, Aको h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, Aको h:mm बजे\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Sa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Ra[a]})},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"राति\"===b?4\u003ea?a:a+12:\"बिहान\"===b?a:\"दिउँसो\"===b?a\u003e=10?a:a+12:\"साँझ\"===b?a+12:void 0},meridiem:function(a,b,c){return 3\u003ea?\"राति\":12\u003ea?\"बिहान\":16\u003ea?\"दिउँसो\":20\u003ea?\"साँझ\":\"राति\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[भोलि] LT\",nextWeek:\"[आउँदो] dddd[,] LT\",lastDay:\"[हिजो] LT\",lastWeek:\"[गएको] dddd[,] LT\",sameElse:\"L\"},relativeTime:{future:\"%sमा\",past:\"%s अगाडि\",s:\"केही क्षण\",m:\"एक मिनेट\",mm:\"%d मिनेट\",h:\"एक घण्टा\",hh:\"%d घण्टा\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महिना\",MM:\"%d महिना\",y:\"एक बर्ष\",yy:\"%d बर्ष\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\")),Ua=\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),Va=(a.defineLocale(\"nl\",months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Ua[a.month()]:Ta[a.month()]},monthsParseExact:!0,weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[vandaag om] LT\",nextDay:\"[morgen om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[gisteren om] LT\",lastWeek:\"[afgelopen] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","months:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),monthsShort:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdays:\"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ\".split(\"_\"),weekdaysShort:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),weekdaysMin:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),longDateFormat:LT:\"A h:mm ਵਜੇ\",LTS:\"A h:mm:ss ਵਜੇ\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm ਵਜੇ\",LLLL:\"dddd, D MMMM YYYY, A h:mm ਵਜੇ\"},calendar:{sameDay:\"[ਅਜ] LT\",nextDay:\"[ਕਲ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ਕਲ] LT\",lastWeek:\"[ਪਿਛਲੇ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ਵਿੱਚ\",past:\"%s ਪਿਛਲੇ\",s:\"ਕੁਝ ਸਕਿੰਟ\",m:\"ਇਕ ਮਿੰਟ\",mm:\"%d ਮਿੰਟ\",h:\"ਇੱਕ ਘੰਟਾ\",hh:\"%d ਘੰਟੇ\",d:\"ਇੱਕ ਦਿਨ\",dd:\"%d ਦਿਨ\",M:\"ਇੱਕ ਮਹੀਨਾ\",MM:\"%d ਮਹੀਨੇ\",y:\"ਇੱਕ ਸਾਲ\",yy:\"%d ਸਾਲ\"},preparse:function(a){return a.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,function(a){return Wa[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Va[a]})},","meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(a,b)return 12===a\u0026\u0026(a=0),\"ਰਾਤ\"===b?4\u003ea?a:a+12:\"ਸਵੇਰ\"===b?a:\"ਦੁਪਹਿਰ\"===b?a\u003e=10?a:a+12:\"ਸ਼ਾਮ\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"ਰਾਤ\":10\u003ea?\"ਸਵੇਰ\":17\u003ea?\"ਦੁਪਹਿਰ\":20\u003ea?\"ਸ਼ਾਮ\":\"ਰਾਤ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\")),Ya=\"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\"),Za=(a.defineLocale(\"pl\",months:function(a,b){return\"\"===b?\"(\"+Ya[a.month()]+\"|\"+Xa[a.month()]+\")\":/D MMMM/.test(b)?Ya[a.month()]:Xa[a.month()]},monthsShort:\"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),weekdays:\"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),weekdaysShort:\"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),weekdaysMin:\"Nd_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Dziś o] LT\",nextDay:\"[Jutro o] LT\",nextWeek:\"[W] dddd [o] LT\",lastDay:\"[Wczoraj o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[W zeszłą niedzielę o] LT\";case 3:return\"[W zeszłą środę o] LT\";case 6:return\"[W zeszłą sobotę o] LT\";default:return\"[W zeszły] dddd [o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"%s temu\",s:\"kilka sekund\",m:L,mm:L,h:L,hh:L,d:\"1 dzień\",dd:\"%d dni\",M:\"miesiąc\",MM:L,y:\"rok\",yy:L},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"pt-br\",months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:future:\"em %s\",past:\"%s atrás\",s:\"poucos segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\"}),a.defineLocale(\"pt\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","monthsShortStrictRegex:/^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,longDateFormat:LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сегодня в] LT\",nextDay:\"[Завтра в] LT\",lastDay:\"[Вчера в] LT\",nextWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В следующее] dddd [в] LT\";case 1:case 2:case 4:return\"[В следующий] dddd [в] LT\";case 3:case 5:case 6:return\"[В следующую] dddd [в] LT\"}},lastWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В прошлое] dddd [в] LT\";case 1:case 2:case 4:return\"[В прошлый] dddd [в] LT\";case 3:case 5:case 6:return\"[В прошлую] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"через %s\",past:\"%s назад\",s:\"несколько секунд\",m:O,mm:O,h:\"час\",hh:O,d:\"день\",dd:O,M:\"месяц\",MM:O,y:\"год\",yy:O},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(a){return/^(дня|вечера)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночи\":12\u003ea?\"утра\":17\u003ea?\"дня\":\"вечера\"},ordinalParse:/\\d{1,2}-(й|го|я)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":return a+\"-й\";case\"D\":return a+\"-го\";case\"w\":case\"W\":return a+\"-я\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"si\",months:\"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්\".split(\"_\"),monthsShort:\"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ\".split(\"_\"),weekdays:\"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා\".split(\"_\"),weekdaysShort:\"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන\".split(\"_\"),weekdaysMin:\"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"a h:mm\",LTS:\"a h:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY MMMM D\",LLL:\"YYYY MMMM D, a h:mm\",LLLL:\"YYYY MMMM D [වැනි] dddd, a h:mm:ss\"},calendar:{sameDay:\"[අද] LT[ට]\",nextDay:\"[හෙට] LT[ට]\",nextWeek:\"dddd LT[ට]\",lastDay:\"[ඊයේ] LT[ට]\",lastWeek:\"[පසුගිය] dddd LT[ට]\",sameElse:\"L\"},relativeTime:{future:\"%sකින්\",past:\"%sකට පෙර\",s:\"තත්පර කිහිපය\",m:\"මිනිත්තුව\",mm:\"මිනිත්තු %d\",h:\"පැය\",hh:\"පැය %d\",d:\"දිනය\",dd:\"දින %d\",M:\"මාසය\",MM:\"මාස %d\",y:\"වසර\",yy:\"වසර %d\"},ordinalParse:/\\d{1,2} වැනි/,ordinal:function(a){return a+\" වැනි\"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(a){return\"ප.ව.\"===a||\"පස් වරු\"===a},meridiem:function(a,b,c){return a\u003e11?c?\"ප.ව.\":\"පස් වරු\":c?\"පෙ.ව.\":\"පෙර වරු\"}}),\"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\")),_a=\"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\"),ab=(a.defineLocale(\"sk\",{months:$a,monthsShort:_a,weekdays:\"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),weekdaysShort:\"ne_po_ut_st_št_pi_so\".split(\"_\"),weekdaysMin:\"ne_po_ut_st_št_pi_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[dnes o] LT\",nextDay:\"[zajtra o] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v nedeľu o] LT\";case 1:case 2:return\"[v] dddd [o] LT\";case 3:return\"[v stredu o] LT\";case 4:return\"[vo štvrtok o] LT\";case 5:return\"[v piatok o] LT\";case 6:return\"[v sobotu o] LT\"}},lastDay:\"[včera o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulú nedeľu o] LT\";case 1:case 2:return\"[minulý] dddd [o] LT\";case 3:return\"[minulú stredu o] LT\";case 4:case 5:return\"[minulý] dddd [o] LT\";case 6:return\"[minulú sobotu o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pred %s\",s:Q,m:Q,mm:Q,h:Q,hh:Q,d:Q,dd:Q,M:Q,MM:Q,y:Q,yy:Q},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"sl\",months:\"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),weekdaysShort:\"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),weekdaysMin:\"ne_po_to_sr_če_pe_so\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danes ob] LT\",nextDay:\"[jutri ob] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v] [nedeljo] [ob] LT\";case 3:return\"[v] [sredo] [ob] LT\";case 6:return\"[v] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[v] dddd [ob] LT\"}},lastDay:\"[včeraj ob] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[prejšnjo] [nedeljo] [ob] LT\";case 3:return\"[prejšnjo] [sredo] [ob] LT\";case 6:return\"[prejšnjo] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[prejšnji] dddd [ob] LT\"}},sameElse:\"L\"},relativeTime:{future:\"čez %s\",past:\"pred %s\",s:R,m:R,mm:R,h:R,hh:R,d:R,dd:R,M:R,MM:R,y:R,yy:R},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"sq\",months:\"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor\".split(\"_\"),monthsShort:\"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj\".split(\"_\"),weekdays:\"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë\".split(\"_\"),weekdaysShort:\"Die_Hën_Mar_Mër_Enj_Pre_Sht\".split(\"_\"),weekdaysMin:\"D_H_Ma_Më_E_P_Sh\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(a){return\"M\"===a.charAt(0)},meridiem:function(a,b,c){return 12\u003ea?\"PD\":\"MD\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Sot në] LT\",nextDay:\"[Nesër në] LT\",nextWeek:\"dddd [në] LT\",lastDay:\"[Dje në] LT\",lastWeek:\"dddd [e kaluar në] LT\",sameElse:\"L\"},relativeTime:{future:\"në %s\",past:\"%s më parë\",s:\"disa sekonda\",m:\"një minutë\",mm:\"%d minuta\",h:\"një orë\",hh:\"%d orë\",d:\"një ditë\",dd:\"%d ditë\",M:\"një muaj\",MM:\"%d muaj\",y:\"një vit\",yy:\"%d vite\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","m:[\"један минут\",\"једне минуте\"],mm:[\"минут\",\"минуте\",\"минута\"],h:[\"један сат\",\"једног сата\"],hh:[\"сат\",\"сата\",\"сати\"],dd:[\"дан\",\"дана\",\"дана\"],MM:[\"месец\",\"месеца\",\"месеци\"],yy:[\"година\",\"године\",\"година\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=ab.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+ab.correctGrammaticalCase(a,d)}}),bb=(a.defineLocale(\"sr-cyrl\",{months:\"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар\".split(\"_\"),monthsShort:\"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.\".split(\"_\"),monthsParseExact:!0,weekdays:\"недеља_понедељак_уторак_среда_четвртак_петак_субота\".split(\"_\"),weekdaysShort:\"нед._пон._уто._сре._чет._пет._суб.\".split(\"_\"),weekdaysMin:\"не_по_ут_ср_че_пе_су\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[данас у] LT\",nextDay:\"[сутра у] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[у] [недељу] [у] LT\";case 3:return\"[у] [среду] [у] LT\";case 6:return\"[у] [суботу] [у] LT\";case 1:case 2:case 4:case 5:return\"[у] dddd [у] LT\"}},lastDay:\"[јуче у] LT\",lastWeek:function(){var a=[\"[прошле] [недеље] [у] LT\",\"[прошлог] [понедељка] [у] LT\",\"[прошлог] [уторка] [у] LT\",\"[прошле] [среде] [у] LT\",\"[прошлог] [четвртка] [у] LT\",\"[прошлог] [петка] [у] LT\",\"[прошле] [суботе] [у] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"пре %s\",s:\"неколико секунди\",m:ab.translate,mm:ab.translate,h:ab.translate,hh:ab.translate,d:\"дан\",dd:ab.translate,M:\"месец\",MM:ab.translate,y:\"годину\",yy:ab.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","m:[\"jedan minut\",\"jedne minute\"],mm:[\"minut\",\"minute\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mesec\",\"meseca\",\"meseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=bb.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+bb.correctGrammaticalCase(a,d)}}),cb=(a.defineLocale(\"sr\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sre._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedelju] [u] LT\";case 3:return\"[u] [sredu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedelje] [u] LT\",\"[prošlog] [ponedeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pre %s\",s:\"nekoliko sekundi\",m:bb.translate,mm:bb.translate,h:bb.translate,hh:bb.translate,d:\"dan\",dd:bb.translate,M:\"mesec\",MM:bb.translate,y:\"godinu\",yy:bb.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"ss\",months:\"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\"_\"),monthsShort:\"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo\".split(\"_\"),weekdays:\"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo\".split(\"_\"),weekdaysShort:\"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg\".split(\"_\"),weekdaysMin:\"Li_Us_Lb_Lt_Ls_Lh_Ug\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Namuhla nga] LT\",nextDay:\"[Kusasa nga] LT\",nextWeek:\"dddd [nga] LT\",lastDay:\"[Itolo nga] LT\",lastWeek:\"dddd [leliphelile] [nga] LT\",sameElse:\"L\"},relativeTime:{future:\"nga %s\",past:\"wenteka nga %s\",s:\"emizuzwana lomcane\",m:\"umzuzu\",mm:\"%d emizuzu\",h:\"lihora\",hh:\"%d emahora\",d:\"lilanga\",dd:\"%d emalanga\",M:\"inyanga\",MM:\"%d tinyanga\",y:\"umnyaka\",yy:\"%d iminyaka\"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(a,b,c){return 11\u003ea?\"ekuseni\":15\u003ea?\"emini\":19\u003ea?\"entsambama\":\"ebusuku\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ekuseni\"===b?a:\"emini\"===b?a\u003e=11?a:a+12:\"entsambama\"===b||\"ebusuku\"===b?0===a?0:a+12:void 0},ordinalParse:/\\d{1,2}/,ordinal:\"%d\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"sv\",months:\"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),weekdaysShort:\"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),weekdaysMin:\"sö_må_ti_on_to_fr_lö\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D MMMM YYYY [kl.] HH:mm\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Idag] LT\",nextDay:\"[Imorgon] LT\",lastDay:\"[Igår] LT\",nextWeek:\"[På] dddd LT\",lastWeek:\"[I] dddd[s] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"för %s sedan\",s:\"några sekunder\",m:\"en minut\",mm:\"%d minuter\",h:\"en timme\",hh:\"%d timmar\",d:\"en dag\",dd:\"%d dagar\",M:\"en månad\",MM:\"%d månader\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}(e|a)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"e\":1===b?\"a\":2===b?\"a\":\"e\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"௧\",2:\"௨\",3:\"௩\",4:\"௪\",5:\"௫\",6:\"௬\",7:\"௭\",8:\"௮\",9:\"௯\",0:\"௦\"}),db={\"௧\":\"1\",\"௨\":\"2\",\"௩\":\"3\",\"௪\":\"4\",\"௫\":\"5\",\"௬\":\"6\",\"௭\":\"7\",\"௮\":\"8\",\"௯\":\"9\",\"௦\":\"0\"},eb=(a.defineLocale(\"ta\",{months:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),monthsShort:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),weekdays:\"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை\".split(\"_\"),weekdaysShort:\"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி\".split(\"_\"),weekdaysMin:\"ஞா_தி_செ_பு_வி_வெ_ச\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, HH:mm\",LLLL:\"dddd, D MMMM YYYY, HH:mm\"},calendar:{sameDay:\"[இன்று] LT\",nextDay:\"[நாளை] LT\",nextWeek:\"dddd, LT\",lastDay:\"[நேற்று] LT\",lastWeek:\"[கடந்த வாரம்] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s இல்\",past:\"%s முன்\",s:\"ஒரு சில விநாடிகள்\",m:\"ஒரு நிமிடம்\",mm:\"%d நிமிடங்கள்\",h:\"ஒரு மணி நேரம்\",hh:\"%d மணி நேரம்\",d:\"ஒரு நாள்\",dd:\"%d நாட்கள்\",M:\"ஒரு மாதம்\",MM:\"%d மாதங்கள்\",y:\"ஒரு வருடம்\",yy:\"%d ஆண்டுகள்\"},ordinalParse:/\\d{1,2}வது/,ordinal:function(a){return a+\"வது\"},preparse:function(a){return a.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,function(a){return db[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return cb[a]})},","meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(a,b,c)return 2\u003ea?\" யாமம்\":6\u003ea?\" வைகறை\":10\u003ea?\" காலை\":14\u003ea?\" நண்பகல்\":18\u003ea?\" எற்பாடு\":22\u003ea?\" மாலை\":\" யாமம்\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"யாமம்\"===b?2\u003ea?a:a+12:\"வைகறை\"===b||\"காலை\"===b?a:\"நண்பகல்\"===b\u0026\u0026a\u003e=10?a:a+12},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),a.defineLocale(\"te\",months:\"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్\".split(\"_\"),monthsShort:\"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం\".split(\"_\"),weekdaysShort:\"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని\".split(\"_\"),weekdaysMin:\"ఆ_సో_మం_బు_గు_శు_శ\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[నేడు] LT\",nextDay:\"[రేపు] LT\",nextWeek:\"dddd, LT\",lastDay:\"[నిన్న] LT\",lastWeek:\"[గత] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s లో\",past:\"%s క్రితం\",s:\"కొన్ని క్షణాలు\",m:\"ఒక నిమిషం\",mm:\"%d నిమిషాలు\",h:\"ఒక గంట\",hh:\"%d గంటలు\",d:\"ఒక రోజు\",dd:\"%d రోజులు\",M:\"ఒక నెల\",MM:\"%d నెలలు\",y:\"ఒక సంవత్సరం\",yy:\"%d సంవత్సరాలు\"},ordinalParse:/\\d{1,2}వ/,ordinal:\"%dవ\",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"రాత్రి\"===b?4\u003ea?a:a+12:\"ఉదయం\"===b?a:\"మధ్యాహ్నం\"===b?a\u003e=10?a:a+12:\"సాయంత్రం\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"రాత్రి\":10\u003ea?\"ఉదయం\":17\u003ea?\"మధ్యాహ్నం\":20\u003ea?\"సాయంత్రం\":\"రాత్రి\"},week:{dow:0,// Sunday is the first day of the week.","weekdaysMin:\"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:LT:\"H นาฬิกา m นาที\",LTS:\"H นาฬิกา m นาที s วินาที\",L:\"YYYY/MM/DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY เวลา H นาฬิกา m นาที\",LLLL:\"วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที\"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(a){return\"หลังเที่ยง\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ก่อนเที่ยง\":\"หลังเที่ยง\"},calendar:{sameDay:\"[วันนี้ เวลา] LT\",nextDay:\"[พรุ่งนี้ เวลา] LT\",nextWeek:\"dddd[หน้า เวลา] LT\",lastDay:\"[เมื่อวานนี้ เวลา] LT\",lastWeek:\"[วัน]dddd[ที่แล้ว เวลา] LT\",sameElse:\"L\"},relativeTime:{future:\"อีก %s\",past:\"%sที่แล้ว\",s:\"ไม่กี่วินาที\",m:\"1 นาที\",mm:\"%d นาที\",h:\"1 ชั่วโมง\",hh:\"%d ชั่วโมง\",d:\"1 วัน\",dd:\"%d วัน\",M:\"1 เดือน\",MM:\"%d เดือน\",y:\"1 ปี\",yy:\"%d ปี\"}}),a.defineLocale(\"tl-ph\",{months:\"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre\".split(\"_\"),monthsShort:\"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis\".split(\"_\"),weekdays:\"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado\".split(\"_\"),weekdaysShort:\"Lin_Lun_Mar_Miy_Huw_Biy_Sab\".split(\"_\"),weekdaysMin:\"Li_Lu_Ma_Mi_Hu_Bi_Sab\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"MM/D/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY HH:mm\",LLLL:\"dddd, MMMM DD, YYYY HH:mm\"},calendar:{sameDay:\"[Ngayon sa] LT\",nextDay:\"[Bukas sa] LT\",nextWeek:\"dddd [sa] LT\",lastDay:\"[Kahapon sa] LT\",lastWeek:\"dddd [huling linggo] LT\",sameElse:\"L\"},relativeTime:{future:\"sa loob ng %s\",past:\"%s ang nakalipas\",s:\"ilang segundo\",m:\"isang minuto\",mm:\"%d minuto\",h:\"isang oras\",hh:\"%d oras\",d:\"isang araw\",dd:\"%d araw\",M:\"isang buwan\",MM:\"%d buwan\",y:\"isang taon\",yy:\"%d taon\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),1:\"'inci\",5:\"'inci\",8:\"'inci\",70:\"'inci\",80:\"'inci\",2:\"'nci\",7:\"'nci\",20:\"'nci\",50:\"'nci\",3:\"'üncü\",4:\"'üncü\",100:\"'üncü\",6:\"'ncı\",9:\"'uncu\",10:\"'uncu\",30:\"'uncu\",60:\"'ıncı\",90:\"'ıncı\"});a.defineLocale(\"tr\",{months:\"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),monthsShort:\"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),weekdays:\"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),weekdaysShort:\"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),weekdaysMin:\"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[yarın saat] LT\",nextWeek:\"[haftaya] dddd [saat] LT\",lastDay:\"[dün] LT\",lastWeek:\"[geçen hafta] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s önce\",s:\"birkaç saniye\",m:\"bir dakika\",mm:\"%d dakika\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir yıl\",yy:\"%d yıl\"},ordinalParse:/\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,ordinal:function(a){if(0===a)// special case for zero","doy:7}}),a.defineLocale(\"tzl\",months:\"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec\".split(\"_\"),weekdays:\"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi\".split(\"_\"),weekdaysShort:\"Súl_Lún_Mai_Már_Xhú_Vié_Sát\".split(\"_\"),weekdaysMin:\"Sú_Lú_Ma_Má_Xh_Vi_Sá\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM [dallas] YYYY\",LLL:\"D. MMMM [dallas] YYYY HH.mm\",LLLL:\"dddd, [li] D. MMMM [dallas] YYYY HH.mm\"},meridiemParse:/d\\'o|d\\'a/i,isPM:function(a){return\"d'o\"===a.toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"d'o\":\"D'O\":c?\"d'a\":\"D'A\"},calendar:{sameDay:\"[oxhi à] LT\",nextDay:\"[demà à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[ieiri à] LT\",lastWeek:\"[sür el] dddd [lasteu à] LT\",sameElse:\"L\"},relativeTime:{future:\"osprei %s\",past:\"ja%s\",s:W,m:W,mm:W,h:W,hh:W,d:W,dd:W,M:W,MM:W,y:W,yy:W},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:12}}),a.defineLocale(\"uk\",months:{format:\"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня\".split(\"_\"),standalone:\"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень\".split(\"_\")},monthsShort:\"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),weekdays:Z,weekdaysShort:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY р.\",LLL:\"D MMMM YYYY р., HH:mm\",LLLL:\"dddd, D MMMM YYYY р., HH:mm\"},calendar:{sameDay:$(\"[Сьогодні \"),nextDay:$(\"[Завтра \"),lastDay:$(\"[Вчора \"),nextWeek:$(\"[У] dddd [\"),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return $(\"[Минулої] dddd [\").call(this);case 1:case 2:case 4:return $(\"[Минулого] dddd [\").call(this)}},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"%s тому\",s:\"декілька секунд\",m:Y,mm:Y,h:\"годину\",hh:Y,d:\"день\",dd:Y,M:\"місяць\",MM:Y,y:\"рік\",yy:Y},","meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(a)return/^(дня|вечора)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночі\":12\u003ea?\"ранку\":17\u003ea?\"дня\":\"вечора\"},ordinalParse:/\\d{1,2}-(й|го)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a+\"-й\";case\"D\":return a+\"-го\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),a.defineLocale(\"vi\",months:\"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12\".split(\"_\"),monthsShort:\"Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12\".split(\"_\"),monthsParseExact:!0,weekdays:\"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy\".split(\"_\"),weekdaysShort:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysMin:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(a){return/^ch$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"sa\":\"SA\":c?\"ch\":\"CH\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM [năm] YYYY\",LLL:\"D MMMM [năm] YYYY HH:mm\",LLLL:\"dddd, D MMMM [năm] YYYY HH:mm\",l:\"DD/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Hôm nay lúc] LT\",nextDay:\"[Ngày mai lúc] LT\",nextWeek:\"dddd [tuần tới lúc] LT\",lastDay:\"[Hôm qua lúc] LT\",lastWeek:\"dddd [tuần rồi lúc] LT\",sameElse:\"L\"},relativeTime:{future:\"%s tới\",past:\"%s trước\",s:\"vài giây\",m:\"một phút\",mm:\"%d phút\",h:\"một giờ\",hh:\"%d giờ\",d:\"một ngày\",dd:\"%d ngày\",M:\"một tháng\",MM:\"%d tháng\",y:\"một năm\",yy:\"%d năm\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"x-pseudo\",months:\"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér\".split(\"_\"),monthsShort:\"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc\".split(\"_\"),monthsParseExact:!0,weekdays:\"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý\".split(\"_\"),weekdaysShort:\"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát\".split(\"_\"),weekdaysMin:\"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[T~ódá~ý át] LT\",nextDay:\"[T~ómó~rró~w át] LT\",nextWeek:\"dddd [át] LT\",lastDay:\"[Ý~ést~érdá~ý át] LT\",lastWeek:\"[L~ást] dddd [át] LT\",sameElse:\"L\"},relativeTime:{future:\"í~ñ %s\",past:\"%s á~gó\",s:\"á ~féw ~sécó~ñds\",m:\"á ~míñ~úté\",mm:\"%d m~íñú~tés\",h:\"á~ñ hó~úr\",hh:\"%d h~óúrs\",d:\"á ~dáý\",dd:\"%d d~áýs\",M:\"á ~móñ~th\",MM:\"%d m~óñt~hs\",y:\"á ~ýéár\",yy:\"%d ý~éárs\"},ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),a.defineLocale(\"zh-cn\",months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah点mm分\",LTS:\"Ah点m分s秒\",L:\"YYYY-MM-DD\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah点mm分\",LLLL:\"YYYY年MMMD日ddddAh点mm分\",l:\"YYYY-MM-DD\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah点mm分\",llll:\"YYYY年MMMD日ddddAh点mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"下午\"===b||\"晚上\"===b?a+12:a\u003e=11?a:a+12},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:function(){return 0===this.minutes()?\"[今天]Ah[点整]\":\"[今天]LT\"},nextDay:function(){return 0===this.minutes()?\"[明天]Ah[点整]\":\"[明天]LT\"},lastDay:function(){return 0===this.minutes()?\"[昨天]Ah[点整]\":\"[昨天]LT\"},nextWeek:function(){var b,c;return b=a().startOf(\"week\"),c=this.diff(b,\"days\")\u003e=7?\"[下]\":\"[本]\",0===this.minutes()?c+\"dddAh点整\":c+\"dddAh点mm\"},lastWeek:function(){var b,c;return b=a().startOf(\"week\"),c=this.unix()\u003cb.unix()?\"[上]\":\"[本]\",0===this.minutes()?c+\"dddAh点整\":c+\"dddAh点mm\"},sameElse:\"LL\"},ordinalParse:/\\d{1,2}(日|月|周)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"周\";default:return a}},relativeTime:{future:\"%s内\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},week:{","doy:4}}),a.defineLocale(\"zh-tw\",months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"週日_週一_週二_週三_週四_週五_週六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah點mm分\",LTS:\"Ah點m分s秒\",L:\"YYYY年MMMD日\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah點mm分\",LLLL:\"YYYY年MMMD日ddddAh點mm分\",l:\"YYYY年MMMD日\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah點mm分\",llll:\"YYYY年MMMD日ddddAh點mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"中午\"===b?a\u003e=11?a:a+12:\"下午\"===b||\"晚上\"===b?a+12:void 0},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:\"[今天]LT\",nextDay:\"[明天]LT\",nextWeek:\"[下]ddddLT\",lastDay:\"[昨天]LT\",lastWeek:\"[上]ddddLT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}(日|月|週)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"週\";default:return a}},relativeTime:{future:\"%s內\",past:\"%s前\",s:\"幾秒\",m:\"1 分鐘\",mm:\"%d 分鐘\",h:\"1 小時\",hh:\"%d 小時\",d:\"1 天\",dd:\"%d 天\",M:\"1 個月\",MM:\"%d 個月\",y:\"1 年\",yy:\"%d 年\"}});a.locale(\"en\")});"],"Dependencies":null},{"FileName":"node_modules\\moment\\min\\moment-with-locales.js","LineCount":11954,"CharCount":430059,"Comments":["//! moment.js","//! version : 2.14.1","//! authors : Tim Wood, Iskren Chernev, Moment.js contributors","//! license : MIT","//! momentjs.com","",";(function (global, factory) {","    // This is done to register the method called with moment()","    // without creating circular dependencies.","    function setHookCallback (callback) {","            // even if its not own property I'd still call it non-empty","            return false;","        // We need to deep clone this object.","        return {","    // Plugins that add properties should also add the key here (null value),","    // so we can properly clone ourselves.","    var momentProperties = utils_hooks__hooks.momentProperties = [];","    // Moment prototype object","    function Moment(config) {","        // Prevent infinite loop in case updateOffset creates new moment","        // objects.","        if (updateInProgress === false) {","            // -0 -\u003e 0","            return Math.ceil(number) || 0;","    // compare two arrays, return the number of differences","    function compareArrays(array1, array2, dontConvert) {","        // Lenient ordinal parsing accepts just a number in addition to","        // number + (possibly) stuff coming from _ordinalParseLenient.","        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);","                // make sure changes to properties don't modify parent config","                res[prop] = extend({}, res[prop]);","    // MOMENTS","","    function stringGet (units) {","    // token:    'M'","    // padded:   ['MM', 2]","    // ordinal:  'Mo'","    // callback: function () { this.month() + 1 }","    function addFormatToken (token, padded, ordinal, callback) {","    // format date using native date object","    function formatMoment(m, format) {","    var match1         = /\\d/;            //       0 - 9","    var match2         = /\\d\\d/;          //      00 - 99","    var match3         = /\\d{3}/;         //     000 - 999","    var match4         = /\\d{4}/;         //    0000 - 9999","    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999","    var match1to2      = /\\d\\d?/;         //       0 - 99","    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999","    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999","    var match1to3      = /\\d{1,3}/;       //       0 - 999","    var match1to4      = /\\d{1,4}/;       //       0 - 9999","    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999","","    var matchUnsigned  = /\\d+/;           //       0 - inf","    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf","","    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z","    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z","","    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123","","    // any word (or two) characters or numbers including two/three word month in arabic.","    // includes scottish gaelic two word and hyphenated months","    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;","    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","    function unescapeFormat(s) {","            // I know","            var i;","    // FORMATTING","","    addFormatToken('M', ['MM', 2], 'Mo', function () {","    // ALIASES","","    addUnitAlias('month', 'M');","    // PRIORITY","","    addUnitPriority('month', 8);","    // PARSING","","    addRegexToken('M',    match1to2);","        // if we didn't find a month name, mark the date as invalid.","        if (month != null) {","    // LOCALES","","    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;","            // this is not used","            this._monthsParse = [];","        // TODO: add sorting","        // Sorting makes sure if one month (or abbr) is a prefix of another","        // see sorting in computeMonthsParse","        for (i = 0; i \u003c 12; i++) {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, i]);","            // test the regex","            if (strict \u0026\u0026 format === 'MMMM' \u0026\u0026 this._longMonthsParse[i].test(monthName)) {","    // MOMENTS","","    function setMonth (mom, value) {","            // No op","            return mom;","                // TODO: Another silent failure?","                if (typeof value !== 'number') {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, i]);","        // Sorting makes sure if one month (or abbr) is a prefix of another it","        // will match the longer piece.","        shortPieces.sort(cmpLenRev);","    // FORMATTING","","    addFormatToken('Y', 0, 0, function () {","    // ALIASES","","    addUnitAlias('year', 'y');","    // PRIORITIES","","    addUnitPriority('year', 1);","    // PARSING","","    addRegexToken('Y',      matchSigned);","    // HELPERS","","    function daysInYear(year) {","    // HOOKS","","    utils_hooks__hooks.parseTwoDigitYear = function (input) {","    // MOMENTS","","    var getSetYear = makeGetSet('FullYear', true);","        //can't just apply() to create a date:","        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply","        var date = new Date(y, m, d, h, M, s, ms);","        //the date constructor remaps years 0-99 to 1900-1999","        if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getFullYear())) {","        //the Date.UTC function remaps years 0-99 to 1900-1999","        if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getUTCFullYear())) {","    // start-of-first-week - start-of-year","    function firstWeekOffset(year, dow, doy) {","        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)","            fwd = 7 + dow - doy,","            // first-week day local weekday -- which local weekday is fwd","            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;","    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday","    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {","    // FORMATTING","","    addFormatToken('w', ['ww', 2], 'wo', 'week');","    // ALIASES","","    addUnitAlias('week', 'w');","    // PRIORITIES","","    addUnitPriority('week', 5);","    // PARSING","","    addRegexToken('w',  match1to2);","    // HELPERS","","    // LOCALES","","    function localeWeek (mom) {","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    };","    // MOMENTS","","    function getSetWeek (input) {","    // FORMATTING","","    addFormatToken('d', 0, 'do', 'day');","    // ALIASES","","    addUnitAlias('day', 'd');","    // PRIORITY","    addUnitPriority('day', 11);","    // PARSING","","    addRegexToken('d',    match1to2);","        // if we didn't get a weekday name, mark the date as invalid","        if (weekday != null) {","    // HELPERS","","    function parseWeekday(input, locale) {","    // LOCALES","","    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');","            // make the regex if we don't have it already","","            mom = create_utc__createUTC([2000, 1]).day(i);","            // test the regex","            if (strict \u0026\u0026 format === 'dddd' \u0026\u0026 this._fullWeekdaysParse[i].test(weekdayName)) {","    // MOMENTS","","    function getSetDayOfWeek (input) {","        // behaves the same as moment#day except","        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)","        // as a setter, sunday should belong to the previous week.","","        if (input != null) {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, 1]).day(i);","        // Sorting makes sure if one weekday (or abbr) is a prefix of another it","        // will match the longer piece.","        minPieces.sort(cmpLenRev);","    // FORMATTING","","    function hFormat() {","    // ALIASES","","    addUnitAlias('hour', 'h');","    // PRIORITY","    addUnitPriority('hour', 13);","    // PARSING","","    function matchMeridiem (isStrict, locale) {","    // LOCALES","","    function localeIsPM (input) {","        // IE8 Quirks Mode \u0026 IE7 Standards Mode do not allow accessing strings like arrays","        // Using charAt should be more compatible.","        return ((input + '').toLowerCase().charAt(0) === 'p');","    // MOMENTS","","    // Setting the hour should keep the time, because the user explicitly","    // specified which hour he wants. So trying to maintain the same hour (in","    // a new timezone) makes sense. Adding/subtracting hours does not follow","    // this rule.","    var getSetHour = makeGetSet('Hours', true);","    // internal storage for locale config files","    var locales = {};","    // pick the locale from the array","    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each","    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root","    function chooseLocale(names) {","                    //the next array item is better than a shallower substring of this one","                    break;","        // TODO: Find a better way to register and load all the locales in Node","        if (!locales[name] \u0026\u0026 (typeof module !== 'undefined') \u0026\u0026","                // because defineLocale currently also sets the global locale, we","                // want to undo that for lazy loaded locales","                locale_locales__getSetGlobalLocale(oldLocale);","    // This function will load locale and then set the global locale.  If","    // no arguments are passed in, it will simply return the current global","    // locale key.","    function locale_locales__getSetGlobalLocale (key, values) {","                // moment.duration._locale = moment._locale = data;","                globalLocale = data;","                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');","                parentConfig = locales[name]._config;","                    // treat as if there is no base config","                    deprecateSimple('parentLocaleUndefined',","                            'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');","                }","            // backwards compat for now: also set the locale","            locale_locales__getSetGlobalLocale(name);","            // useful for testing","            delete locales[name];","            // MERGE","            if (locales[name] != null) {","            // backwards compat for now: also set the locale","            locale_locales__getSetGlobalLocale(name);","            // pass null for config to unupdate, useful for tests","            if (locales[name] != null) {","    // returns locale data","    function locale_locales__getLocale (key) {","            //short-circuit everything else","            locale = loadLocale(key);","    // iso 8601 regex","    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)","    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;","        // YYYYMM is NOT allowed by the standard","        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],","    // iso time formats and regexes","    var isoTimes = [","    // date from iso format","    function configFromISO(config) {","                        // match[2] should be 'T' or space","                        timeFormat = (match[2] || ' ') + isoTimes[i][0];","    // date from iso format or fallback","    function configFromString(config) {","        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',","        function (config) {","    // Pick the first defined of two or three arguments.","    function defaults(a, b, c) {","        // hooks is actually the exported moment object","        var nowValue = new Date(utils_hooks__hooks.now());","    // convert an array to a date.","    // the array should mirror the parameters below","    // note: all values past the year are optional and will default to the lowest possible value.","    // [year, month, day , hour, minute, second, millisecond]","    function configFromArray (config) {","        //compute day of the year from weeks and weekdays","        if (config._w \u0026\u0026 config._a[DATE] == null \u0026\u0026 config._a[MONTH] == null) {","        //if the day of the year is set, figure out what it is","        if (config._dayOfYear) {","        // Default to current date.","        // * if no year, month, day of month are given, default to today","        // * if day of month is given, default month and year","        // * if month is given, default only year","        // * if year is given, don't default anything","        for (i = 0; i \u003c 3 \u0026\u0026 config._a[i] == null; ++i) {","        // Zero out whatever was not defaulted, including time","        for (; i \u003c 7; i++) {","        // Check for 24:00:00.000","        if (config._a[HOUR] === 24 \u0026\u0026","        // Apply timezone offset from input. The actual utcOffset can be changed","        // with parseZone.","        if (config._tzm != null) {","            // TODO: We need to take the current isoWeekYear, but that depends on","            // how we interpret now (local, utc, fixed offset). So create","            // a now version of current config (take local/utc/offset flags, and","            // create now).","            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);","                // weekday -- low day numbers are considered next week","                weekday = w.d;","                // local weekday -- counting starts from begining of week","                weekday = w.e + dow;","                // default to begining of week","                weekday = dow;","    // constant that refers to the ISO standard","    utils_hooks__hooks.ISO_8601 = function () {};","    // date from string and format string","    function configFromStringAndFormat(config) {","        // TODO: Move this to another part of the creation flow to prevent circular deps","        if (config._f === utils_hooks__hooks.ISO_8601) {","        // This array is used to make a Date, either with `new Date` or `Date.UTC`","        var string = '' + config._i,","            // console.log('token', token, 'parsedInput', parsedInput,","            //         'regex', getParseRegexForToken(token, config));","            if (parsedInput) {","            // don't parse if it's not a known token","            if (formatTokenFunctions[token]) {","        // add remaining unparsed input length to the string","        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;","        // clear _12h flag if hour is \u003c= 12","        if (config._a[HOUR] \u003c= 12 \u0026\u0026","        // handle meridiem","        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);","            // nothing to do","            return hour;","            // Fallback","            isPm = locale.isPM(meridiem);","            // this is not supposed to happen","            return hour;","    // date from string and array of format strings","    function configFromStringAndArray(config) {","            // if there is any input that was not parsed add a penalty for that format","            currentScore += getParsingFlags(tempConfig).charsLeftOver;","            //or tokens","            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;","            // Adding is smart enough around DST","            res.add(1, 'd');","            // from milliseconds","            config._d = new Date(input);","        // object construction must be done this way.","        // https://github.com/moment/moment/issues/1423","        c._isAMomentObject = true;","        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',","        function () {","        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',","        function () {","    // Pick a moment m from moments so that m[fn](other) is true for all","    // other. This relies on the function fn to be transitive.","    //","    // moments should either be an array of moment objects or an array, whose","    // first element is an array of moment objects.","    function pickBy(fn, moments) {","    // TODO: Use [].sort instead?","    function min () {","        // representation for dateAddRemove","        this._milliseconds = +milliseconds +","            seconds * 1e3 + // 1000","            minutes * 6e4 + // 1000 * 60","            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978","        // Because of dateAddRemove treats 24 hours as different from a","        // day when working around DST, we need to store them separately","        this._days = +days +","        // It is impossible translate months into days without knowing","        // which months you are are talking about, so we have to store","        // it separately.","        this._months = +months +","    // FORMATTING","","    function offset (token, separator) {","    // PARSING","","    addRegexToken('Z',  matchShortOffset);","    // HELPERS","","    // timezone chunker","    // '+10:00' \u003e ['10',  '00']","    // '-1530'  \u003e ['-15', '30']","    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;","    // Return a moment from input, that is local/utc/zone equivalent to model.","    function cloneWithOffset(input, model) {","            // Use low-level api, because this fn is low-level api.","            res._d.setTime(res._d.valueOf() + diff);","        // On Firefox.24 Date#getTimezoneOffset returns a floating point.","        // https://github.com/moment/moment/pull/1871","        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;","    // HOOKS","","    // This function will be called whenever a moment is mutated.","    // It is intended to keep the offset in sync with the timezone.","    utils_hooks__hooks.updateOffset = function () {};","    // MOMENTS","","    // keepLocalTime = true means only change the timezone, without","    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--\u003e","    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset","    // +0200, so we adjust the time as needed, to be valid.","    //","    // Keeping the time actually adds/subtracts (one hour)","    // from the actual represented time. That is why we call updateOffset","    // a second time. In case it wants us to change the offset again","    // _changeInProgress == true case, then we have to adjust, because","    // there is no such time in the given timezone.","    function getSetOffset (input, keepLocalTime) {","    // ASP.NET json date format regex","    var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;","    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html","    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere","    // and further modified to allow for strings containing both week and day","    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;","            // matching against regexp is expensive, do it on demand","            match = null,","        } else if (duration == null) {// checks for null or undefined","            duration = {};","        // We'd normally use ~~inp for this, but unfortunately it also","        // converts floats to ints.","        // inp may be undefined, so careful calling replace on it.","        var res = inp \u0026\u0026 parseFloat(inp.replace(',', '.'));","        // apply sign while we're at it","        return (isNaN(res) ? 0 : res) * sign;","    // TODO: remove 'name' arg after deprecation is removed","    function createAdder(direction, name) {","            //invert the arguments, but complain about it","            if (period !== null \u0026\u0026 !isNaN(+period)) {","                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');","                tmp = val; val = period; period = tmp;","            // No op","            return;","        // We want to compare the start of today, vs this.","        // Getting start-of-today depends on whether we're local/utc/offset or not.","        var now = time || local__createLocal(),","            output = units === 'second' ? delta / 1e3 : // 1000","                units === 'minute' ? delta / 6e4 : // 1000 * 60","                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60","                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst","                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst","                delta;","        // difference in months","        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),","            // b is in (anchor - 1 month, anchor + 1 month)","            anchor = a.clone().add(wholeMonthDiff, 'months'),","            // linear across the month","            adjust = (b - anchor) / (anchor - anchor2);","            // linear across the month","            adjust = (b - anchor) / (anchor2 - anchor);","        //check for negative zero, return zero if negative zero","        return -(wholeMonthDiff + adjust) || 0;","                // native implementation is ~50x faster, use it when we can","                return this.toDate().toISOString();","    // If passed a locale key, it will set the locale for this","    // instance.  Otherwise, it will return the locale configuration","    // variables for this instance.","    function locale (key) {","        // the following switch intentionally omits break keywords","        // to utilize falling through the cases.","        switch (units) {","                /* falls through */","            case 'quarter':","                /* falls through */","            case 'week':","                /* falls through */","            case 'hour':","                /* falls through */","            case 'minute':","                /* falls through */","            case 'second':","        // weeks are a special case","        if (units === 'week') {","        // quarters are also special","        if (units === 'quarter') {","        // 'date' is an alias for 'day', so it should be considered as such.","        if (units === 'date') {","        // new Date(NaN).toJSON() === null","        return this.isValid() ? this.toISOString() : null;","    // FORMATTING","","    addFormatToken(0, ['gg', 2], 0, function () {","    // ALIASES","","    addUnitAlias('weekYear', 'gg');","    // PRIORITY","","    addUnitPriority('weekYear', 1);","    // PARSING","","    addRegexToken('G',      matchSigned);","    // MOMENTS","","    function getSetWeekYear (input) {","    // FORMATTING","","    addFormatToken('Q', 0, 'Qo', 'quarter');","    // ALIASES","","    addUnitAlias('quarter', 'Q');","    // PRIORITY","","    addUnitPriority('quarter', 7);","    // PARSING","","    addRegexToken('Q', match1);","    // MOMENTS","","    function getSetQuarter (input) {","    // FORMATTING","","    addFormatToken('D', ['DD', 2], 'Do', 'date');","    // ALIASES","","    addUnitAlias('date', 'D');","    // PRIOROITY","    addUnitPriority('date', 9);","    // PARSING","","    addRegexToken('D',  match1to2);","    // MOMENTS","","    var getSetDayOfMonth = makeGetSet('Date', true);","    // FORMATTING","","    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');","    // ALIASES","","    addUnitAlias('dayOfYear', 'DDD');","    // PRIORITY","    addUnitPriority('dayOfYear', 4);","    // PARSING","","    addRegexToken('DDD',  match1to3);","    // HELPERS","","    // MOMENTS","","    function getSetDayOfYear (input) {","    // FORMATTING","","    addFormatToken('m', ['mm', 2], 0, 'minute');","    // ALIASES","","    addUnitAlias('minute', 'm');","    // PRIORITY","","    addUnitPriority('minute', 14);","    // PARSING","","    addRegexToken('m',  match1to2);","    // MOMENTS","","    var getSetMinute = makeGetSet('Minutes', false);","    // FORMATTING","","    addFormatToken('s', ['ss', 2], 0, 'second');","    // ALIASES","","    addUnitAlias('second', 's');","    // PRIORITY","","    addUnitPriority('second', 15);","    // PARSING","","    addRegexToken('s',  match1to2);","    // MOMENTS","","    var getSetSecond = makeGetSet('Seconds', false);","    // FORMATTING","","    addFormatToken('S', 0, 0, function () {","    // ALIASES","","    addUnitAlias('millisecond', 'ms');","    // PRIORITY","","    addUnitPriority('millisecond', 16);","    // PARSING","","    addRegexToken('S',    match1to3, match1);","    // MOMENTS","","    var getSetMillisecond = makeGetSet('Milliseconds', false);","    // FORMATTING","","    addFormatToken('z',  0, 0, 'zoneAbbr');","    // MOMENTS","","    function getZoneAbbr () {","    // Year","    momentPrototype__proto.year       = getSetYear;","    // Week Year","    momentPrototype__proto.weekYear    = getSetWeekYear;","    // Quarter","    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;","    // Month","    momentPrototype__proto.month       = getSetMonth;","    // Week","    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;","    // Day","    momentPrototype__proto.date       = getSetDayOfMonth;","    // Hour","    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;","    // Minute","    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;","    // Second","    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;","    // Millisecond","    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;","    // Offset","    momentPrototype__proto.utcOffset            = getSetOffset;","    // Timezone","    momentPrototype__proto.zoneAbbr = getZoneAbbr;","    // Deprecations","    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);","    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);","    momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);","","    var momentPrototype = momentPrototype__proto;","    // Month","    prototype__proto.months            =        localeMonths;","    // Week","    prototype__proto.week = localeWeek;","    // Day of Week","    prototype__proto.weekdays       =        localeWeekdays;","    // Hours","    prototype__proto.isPM = localeIsPM;","    // ()","    // (5)","    // (fmt, 5)","    // (fmt)","    // (true)","    // (true, 5)","    // (true, fmt, 5)","    // (true, fmt)","    function listWeekdaysImpl (localeSorted, format, index, field) {","    // Side effect imports","    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);","    // supports only 2.0-style add(1, 's') or add(duration)","    function duration_add_subtract__add (input, value) {","    // supports only 2.0-style subtract(1, 's') or subtract(duration)","    function duration_add_subtract__subtract (input, value) {","        // if we have a mix of positive and negative values, bubble down first","        // check: https://github.com/moment/moment/issues/2166","        if (!((milliseconds \u003e= 0 \u0026\u0026 days \u003e= 0 \u0026\u0026 months \u003e= 0) ||","        // The following code bubbles up values, see the tests for","        // examples of what that means.","        data.milliseconds = milliseconds % 1000;","        // convert days to months","        monthsFromDays = absFloor(daysToMonths(days));","        // 12 months -\u003e 1 year","        years = absFloor(months / 12);","        // 400 years have 146097 days (taking into account leap year rules)","        // 400 years have 12 months === 4800","        return days * 4800 / 146097;","        // the reverse of daysToMonths","        return months * 146097 / 4800;","            // handle milliseconds separately because of floating point math errors (issue #1867)","            days = this._days + Math.round(monthsToDays(this._months));","                // Math.floor prevents floating point math errors here","                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;","    // TODO: Use this.as('ms')?","    function duration_as__valueOf () {","        s: 45,  // seconds to minute","        m: 45,  // minutes to hour","        h: 22,  // hours to day","        d: 26,  // days to month","        M: 11   // months to year","    };","    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {","    // This function allows you to set the rounding function for relative time strings","    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {","    // This function allows you to set a threshold for relative time strings","    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {","        // for ISO strings we do not use the normal bubbling rules:","        //  * milliseconds bubble up until they become hours","        //  * days do not bubble at all","        //  * months bubble up until they become years","        // This is because there is no context-free conversion between hours and days","        // (think of clock changes)","        // and also not between days and months (28-31 days per month)","        var seconds = iso_string__abs(this._milliseconds) / 1000;","        // 3600 seconds -\u003e 60 minutes -\u003e 1 hour","        minutes           = absFloor(seconds / 60);","        // 12 months -\u003e 1 year","        years  = absFloor(months / 12);","        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js","        var Y = years;","            // this is the same as C#'s (Noda) and python (isodate)...","            // but not other JS (goog.date)","            return 'P0D';","    // Deprecations","    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);","    // Side effect imports","","    // FORMATTING","","    addFormatToken('X', 0, 0, 'unix');","    // PARSING","","    addRegexToken('x', matchSigned);","    // Side effect imports","","    ;","            return number + ((number === 1 || number === 8 || number \u003e= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter","        },","            dow : 1, // Maandag is die eerste dag van die week.","            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","            if (number === 0) {  // special case for zero","                return number + '-ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'den' : 'dnem';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","                // use custom parser to solve problem with July (červenec)","                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","        // time formats are the same as en-gb","        longDateFormat: {","        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","        ordinal: function (number) {","                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed","                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed","                ];","                    output = 'fed'; // not 30ain, 70ain or 90ain","                } else {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 7,  // Sunday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'","                return this._monthsGenitiveEl[momentToFormat.month()];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo","            dd : '%d tagoj',","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12 // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","        // Hindi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","        meridiemParse: /रात|सुबह|दोपहर|शाम/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    /**","     * Returns true if the word before the given number loses the '-n' ending.","     * e.g. 'an 10 Deeg' but 'a 5 Deeg'","     *","     * @param number {integer}","     * @returns {boolean}","     */","    function eifelerRegelAppliesToNumber(number) {","            // Negative Number --\u003e always true","            return true;","            // Only 1 digit","            if (4 \u003c= number \u0026\u0026 number \u003c= 7) {","            // 2 digits","            var lastDigit = number % 10, firstDigit = number / 10;","            // 3 or 4 digits --\u003e recursively check first digit","            while (number \u003e= 10) {","            // Anything larger than 4 digits: recursively check first n-3 digits","            number = number / 1000;","                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","                switch (this.day()) {","            dow: 1, // Monday is the first day of the week.","            doy: 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    /**","     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.","     */","    function lv__format(forms, number, withoutSuffix) {","            // E.g. \"21 minūte\", \"3 minūtes\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[2] : forms[3];","            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".","            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".","            return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[0] : forms[1];","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","        words: { //Different grammatical cases","            m: ['jedan minut', 'jednog minuta'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow: 1, // Monday is the first day of the week.","            doy: 4 // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),","        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists","        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","                // Hack: if format empty we know this is used to generate","                // RegExp by moment. Give then back both valid forms of months","                // in RegExp ready format.","                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },","                    '[Último] dddd [às] LT' : // Saturday + Sunday","                    '[Última] dddd [às] LT'; // Monday - Friday","            },","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    // http://new.gramota.ru/spravka/rules/139-prop : § 103","    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637","    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753","    var ru = moment__default.defineLocale('ru', {","            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),","        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // копия предыдущего","        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","        // полные названия с падежами","        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","        // Выражение, которое соотвествует только сокращённым формам","        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","    /*jshint -W100*/","    var si = moment__default.defineLocale('si', {","            case 's':  // a few seconds / in a few seconds / a few seconds ago","                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';","            case 'm':  // a minute / in a minute / a minute ago","                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');","            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","                if (withoutSuffix || isFuture) {","            case 'h':  // an hour / in an hour / an hour ago","                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","            case 'hh': // 9 hours / in 9 hours / 9 hours ago","                if (withoutSuffix || isFuture) {","            case 'd':  // a day / in a day / a day ago","                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';","            case 'dd': // 9 days / in 9 days / 9 days ago","                if (withoutSuffix || isFuture) {","            case 'M':  // a month / in a month / a month ago","                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';","            case 'MM': // 9 months / in 9 months / 9 months ago","                if (withoutSuffix || isFuture) {","            case 'y':  // a year / in a year / a year ago","                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';","            case 'yy': // 9 years / in 9 years / 9 years ago","                if (withoutSuffix || isFuture) {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","        words: { //Different grammatical cases","            m: ['један минут', 'једне минуте'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","        words: { //Different grammatical cases","            m: ['jedan minut', 'jedne minute'],","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","        // refer http://ta.wikipedia.org/s/1er1","        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,","                return ' வைகறை';  // வைகறை","            } else if (hour \u003c 10) {","                return ' காலை'; // காலை","            } else if (hour \u003c 14) {","                return ' நண்பகல்'; // நண்பகல்","            } else if (hour \u003c 18) {","                return ' எற்பாடு'; // எற்பாடு","            } else if (hour \u003c 22) {","                return ' மாலை'; // மாலை","            } else {","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 0, // Sunday is the first day of the week.","            doy : 6  // The week that contains Jan 1st is the first week of the year.","        }","        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference","        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            if (number === 0) {  // special case for zero","                return number + '\\'ıncı';","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.","    // This is currently too difficult (maybe even impossible) to add.","    var tzl = moment__default.defineLocale('tzl', {","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 6, // Saturday is the first day of the week.","            doy : 12  // The week that contains Jan 1st is the first week of the year.","        }","        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","        meridiemParse: /ночі|ранку|дня|вечора/,","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 1st is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 7  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }","                // '中午'","                return hour \u003e= 11 ? hour : hour + 12;","            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","            dow : 1, // Monday is the first day of the week.","            doy : 4  // The week that contains Jan 4th is the first week of the year.","        }"],"Functions":[";(function (global, factory) ","    typeof define === 'function' \u0026\u0026 define.amd ? define(factory) :","}(this, function ()  'use strict';","    function utils_hooks__hooks () ","    function setHookCallback (callback) ","    function isArray(input) ","    function isObject(input) ","    function isObjectEmpty(obj) ","    function isDate(input) ","    function map(arr, fn) ","    function hasOwnProp(a, b) ","    function extend(a, b) ","    function create_utc__createUTC (input, format, locale, strict) ","    function defaultParsingFlags() ","    function getParsingFlags(m) ","        some = function (fun) ","    function valid__isValid(m) ","            var parsedParts = some.call(flags.parsedDateParts, function (i) ","    function valid__createInvalid (flags) ","    function isUndefined(input) ","    function copyConfig(to, from) ","    function Moment(config) ","    function isMoment (obj) ","    function absFloor (number) ","    function toInt(argumentForCoercion) ","    function compareArrays(array1, array2, dontConvert) ","    function warn(msg) ","    function deprecate(msg, fn) ","        return extend(function () ","    function deprecateSimple(name, msg) ","    function isFunction(input) ","    function locale_set__set (config) ","    function mergeConfigs(parentConfig, childConfig) ","    function Locale(config) ","        keys = function (obj) ","    function locale_calendar__calendar (key, mom, now) ","    function longDateFormat (key) ","        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) ","    function invalidDate () ","    function ordinal (number) ","    function relative__relativeTime (number, withoutSuffix, string, isFuture) ","    function pastFuture (diff, output) ","    function addUnitAlias (unit, shorthand) ","    function normalizeUnits(units) ","    function normalizeObjectUnits(inputObject) ","    function addUnitPriority(unit, priority) ","    function getPrioritizedUnits(unitsObj) ","        units.sort(function (a, b) ","    function makeGetSet (unit, keepTime) ","        return function (value) ","    function get_set__get (mom, unit) ","    function get_set__set (mom, unit, value) ","    function stringGet (units) ","    function stringSet (units, value) ","    function zeroFill(number, targetLength, forceSign) ","    // callback: function ()  this.month() + 1 }","    function addFormatToken (token, padded, ordinal, callback) ","            func = function () ","            formatTokenFunctions[padded[0]] = function () ","            formatTokenFunctions[ordinal] = function () ","    function removeFormattingTokens(input) ","    function makeFormatFunction(format) ","        return function (mom) ","    function formatMoment(m, format) ","    function expandFormat(format, locale) ","        function replaceLongDateFormatTokens(input) ","    function addRegexToken (token, regex, strictRegex) ","        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) ","    function getParseRegexForToken (token, config) ","    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","    function unescapeFormat(s) ","        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) ","    function regexEscape(s) ","    function addParseToken (token, callback) ","            func = function (input, array) ","    function addWeekParseToken (token, callback) ","        addParseToken(token, function (input, array, config, token) ","    function addTimeToArrayFromToken(token, input, config) ","        indexOf = function (o) ","    function daysInMonth(year, month) ","    addFormatToken('M', ['MM', 2], 'Mo', function () ","    addFormatToken('MMM', 0, 0, function (format) ","    addFormatToken('MMMM', 0, 0, function (format) ","    addRegexToken('MMM',  function (isStrict, locale) ","    addRegexToken('MMMM', function (isStrict, locale) ","    addParseToken(['M', 'MM'], function (input, array) ","    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) ","    function localeMonths (m, format) ","    function localeMonthsShort (m, format) ","    function units_month__handleStrictParse(monthName, format, strict) ","    function localeMonthsParse (monthName, format, strict) ","    function setMonth (mom, value) ","    function getSetMonth (value) ","    function getDaysInMonth () ","    function monthsShortRegex (isStrict) ","    function monthsRegex (isStrict) ","    function computeMonthsParse () ","        function cmpLenRev(a, b) ","    addFormatToken('Y', 0, 0, function () ","    addFormatToken(0, ['YY', 2], 0, function () ","    addParseToken('YYYY', function (input, array) ","    addParseToken('YY', function (input, array) ","    addParseToken('Y', function (input, array) ","    function daysInYear(year) ","    function isLeapYear(year) ","    utils_hooks__hooks.parseTwoDigitYear = function (input) ","    function getIsLeapYear () ","    function createDate (y, m, d, h, M, s, ms) ","    function createUTCDate (y) ","        //the Date.UTC function remaps years 0-99 to 1900-1999","    function firstWeekOffset(year, dow, doy) ","    function dayOfYearFromWeeks(year, week, weekday, dow, doy) ","    function weekOfYear(mom, dow, doy) ","    function weeksInYear(year, dow, doy) ","    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) ","    function localeWeek (mom) ","    function localeFirstDayOfWeek () ","    function localeFirstDayOfYear () ","    function getSetWeek (input) ","    function getSetISOWeek (input) ","    addFormatToken('dd', 0, 0, function (format) ","    addFormatToken('ddd', 0, 0, function (format) ","    addFormatToken('dddd', 0, 0, function (format) ","    addRegexToken('dd',   function (isStrict, locale) ","    addRegexToken('ddd',   function (isStrict, locale) ","    addRegexToken('dddd',   function (isStrict, locale) ","    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) ","    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) ","    function parseWeekday(input, locale) ","    function parseIsoWeekday(input, locale) ","    function localeWeekdays (m, format) ","    function localeWeekdaysShort (m) ","    function localeWeekdaysMin (m) ","    function day_of_week__handleStrictParse(weekdayName, format, strict) ","    function localeWeekdaysParse (weekdayName, format, strict) ","    function getSetDayOfWeek (input) ","    function getSetLocaleDayOfWeek (input) ","    function getSetISODayOfWeek (input) ","    function weekdaysRegex (isStrict) ","    function weekdaysShortRegex (isStrict) ","    function weekdaysMinRegex (isStrict) ","    function computeWeekdaysParse () ","        function cmpLenRev(a, b) ","    function hFormat() ","    function kFormat() ","    addFormatToken('hmm', 0, 0, function () ","    addFormatToken('hmmss', 0, 0, function () ","    addFormatToken('Hmm', 0, 0, function () ","    addFormatToken('Hmmss', 0, 0, function () ","    function meridiem (token, lowercase) ","        addFormatToken(token, 0, 0, function () ","    function matchMeridiem (isStrict, locale) ","    addParseToken(['a', 'A'], function (input, array, config) ","    addParseToken(['h', 'hh'], function (input, array, config) ","    addParseToken('hmm', function (input, array, config) ","    addParseToken('hmmss', function (input, array, config) ","    addParseToken('Hmm', function (input, array, config) ","    addParseToken('Hmmss', function (input, array, config) ","    function localeIsPM (input) ","    function localeMeridiem (hours, minutes, isLower) ","    function normalizeLocale(key) ","    function chooseLocale(names) ","    function loadLocale(name) ","    // This function will load locale and then set the global locale.  If","    function locale_locales__getSetGlobalLocale (key, values) ","    function defineLocale (name, config) ","    function updateLocale(name, config) ","    function locale_locales__getLocale (key) ","    function locale_locales__listLocales() ","    function checkOverflow (m) ","    function configFromISO(config) ","    function configFromString(config) ","        function (config) ","    function defaults(a, b, c) ","    function currentDateArray(config) ","    function configFromArray (config) ","    function dayOfYearFromWeekInfo(config) ","    utils_hooks__hooks.ISO_8601 = function () };","    function configFromStringAndFormat(config) ","    function meridiemFixWrap (locale, hour, meridiem) ","    function configFromStringAndArray(config) ","    function configFromObject(config) ","        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) ","    function createFromConfig (config) ","    function prepareConfig (config) ","    function configFromInput(config) ","            config._a = map(input.slice(0), function (obj) ","    function createLocalOrUTC (input, format, locale, strict, isUTC) ","    function local__createLocal (input, format, locale, strict) ","        function () ","        function () ","    // other. This relies on the function fn to be transitive.","    function pickBy(fn, moments) ","    function min () ","    function max () ","    var now = function () ","    function Duration (duration) ","    function isDuration (obj) ","    function offset (token, separator) ","        addFormatToken(token, 0, 0, function () ","    addParseToken(['Z', 'ZZ'], function (input, array, config) ","    function offsetFromString(matcher, string) ","    function cloneWithOffset(input, model) ","    function getDateOffset (m) ","    // This function will be called whenever a moment is mutated.","    utils_hooks__hooks.updateOffset = function () };","    function getSetOffset (input, keepLocalTime) ","    function getSetZone (input, keepLocalTime) ","    function setOffsetToUTC (keepLocalTime) ","    function setOffsetToLocal (keepLocalTime) ","    function setOffsetToParsedOffset () ","    function hasAlignedHourOffset (input) ","    function isDaylightSavingTime () ","    function isDaylightSavingTimeShifted () ","    function isLocal () ","    function isUtcOffset () ","    function isUtc () ","    function create__createDuration (input, key) ","    function parseIso (inp, sign) ","    function positiveMomentsDifference(base, other) ","    function momentsDifference(base, other) ","    function absRound (number) ","    function createAdder(direction, name) ","        return function (val, period) ","    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) ","    function getCalendarFormat(myMoment, now) ","    function moment_calendar__calendar (time, formats) ","    function clone () ","    function isAfter (input, units) ","    function isBefore (input, units) ","    function isBetween (from, to, units, inclusivity) ","    function isSame (input, units) ","    function isSameOrAfter (input, units) ","    function isSameOrBefore (input, units) ","    function diff (input, units, asFloat) ","    function monthDiff (a, b) ","    function toString () ","    function moment_format__toISOString () ","    function moment_format__format (inputString) ","    function from (time, withoutSuffix) ","    function fromNow (withoutSuffix) ","    function to (time, withoutSuffix) ","    function toNow (withoutSuffix) ","    function locale (key) ","        function (key) ","    function localeData () ","    function startOf (units) ","    function endOf (units) ","    function to_type__valueOf () ","    function unix () ","    function toDate () ","    function toArray () ","    function toObject () ","    function toJSON () ","    function moment_valid__isValid () ","    function parsingFlags () ","    function invalidAt () ","    function creationData() ","    addFormatToken(0, ['gg', 2], 0, function () ","    addFormatToken(0, ['GG', 2], 0, function () ","    function addWeekYearFormatToken (token, getter) ","    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) ","    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) ","    function getSetWeekYear (input) ","    function getSetISOWeekYear (input) ","    function getISOWeeksInYear () ","    function getWeeksInYear () ","    function getSetWeekYearHelper(input, week, weekday, dow, doy) ","    function setWeekAll(weekYear, week, weekday, dow, doy) ","    addParseToken('Q', function (input, array) ","    function getSetQuarter (input) ","    addRegexToken('Do', function (isStrict, locale) ","    addParseToken('Do', function (input, array) ","    addParseToken(['DDD', 'DDDD'], function (input, array, config) ","    function getSetDayOfYear (input) ","    addFormatToken('S', 0, 0, function () ","    addFormatToken(0, ['SS', 2], 0, function () ","    addFormatToken(0, ['SSSS', 4], 0, function () ","    addFormatToken(0, ['SSSSS', 5], 0, function () ","    addFormatToken(0, ['SSSSSS', 6], 0, function () ","    addFormatToken(0, ['SSSSSSS', 7], 0, function () ","    addFormatToken(0, ['SSSSSSSS', 8], 0, function () ","    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () ","    function parseMs(input, array) ","    function getZoneAbbr () ","    function getZoneName () ","    function moment_moment__createUnix (input) ","    function moment_moment__createInZone () ","    function preParsePostFormat (string) ","    function lists__get (format, index, field, setter) ","    function listMonthsImpl (format, index, field) ","    function listWeekdaysImpl (localeSorted, format, index, field) ","    function lists__listMonths (format, index) ","    function lists__listMonthsShort (format, index) ","    function lists__listWeekdays (localeSorted, format, index) ","    function lists__listWeekdaysShort (localeSorted, format, index) ","    function lists__listWeekdaysMin (localeSorted, format, index) ","        ordinal : function (number) ","    function duration_abs__abs () ","    function duration_add_subtract__addSubtract (duration, input, value, direction) ","    function duration_add_subtract__add (input, value) ","    function duration_add_subtract__subtract (input, value) ","    function absCeil (number) ","    function bubble () ","    function daysToMonths (days) ","    function monthsToDays (months) ","    function as (units) ","    function duration_as__valueOf () ","    function makeAs (alias) ","        return function () ","    function duration_get__get (units) ","    function makeGetter(name) ","        return function () ","    function weeks () ","    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) ","    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) ","    // This function allows you to set the rounding function for relative time strings","    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) ","        if (typeof(roundingFunction) === 'function') ","    // This function allows you to set a threshold for relative time strings","    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) ","    function humanize (withSuffix) ","    function iso_string__toISOString() ","    addParseToken('X', function (input, array, config) ","    addParseToken('x', function (input, array, config) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","    }, pluralForm = function (n) ","    }, pluralize = function (u) ","        return function (number, withoutSuffix, string, isFuture) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/\\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function be__plural(word, num) ","    function be__relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek: function () ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","            lastWeek : function () ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function relativeTimeWithMutation(number, withoutSuffix, key) ","    function specialMutationForYears(number) ","    function lastNumber(number) ","    function mutation(text, number) ","    function softMutation(text) ","        ordinal : function (number) ","    function bs__translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","        ordinal : function (number, period) ","    function cs__plural(n) ","    function cs__translate(number, withoutSuffix, key, isFuture) ","        monthsParse : (function (months, monthsShort) ","        shortMonthsParse : (function (monthsShort) ","        longMonthsParse : (function (months) ","            nextWeek: function () ","            lastWeek: function () ","            future : function (output) ","        ordinal: function (number) ","    function de_at__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function de__processRelativeTime(number, withoutSuffix, key, isFuture) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","        postformat: function (string) ","        months : function (momentToFormat, format) ","        meridiem : function (hours, minutes, isLower) ","        isPM : function (input) ","            lastWeek : function () ","        calendar : function (key, mom) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","        monthsShort : function (m, format) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","    function et__processRelativeTime(number, withoutSuffix, key, isFuture) ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[۰-۹]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","    function fi__translate(number, withoutSuffix, key, isFuture) ","    function verbalNumber(number, isFuture) ","        ordinal : function (number) ","        ordinal : function (number) ","        ordinal : function (number) ","        monthsShort : function (m, format) ","        ordinal : function (number) ","        ordinal : function (number) ","            sameDay : function () ","            nextDay : function () ","            nextWeek : function () ","            lastDay : function () ","            lastWeek : function () ","            future : function (str) ","            hh : function (number) ","            dd : function (number) ","            MM : function (number) ","            yy : function (number) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function hr__translate(number, withoutSuffix, key) ","            nextWeek : function () ","            lastWeek : function () ","    function hu__translate(number, withoutSuffix, key, isFuture) ","    function week(isFuture) ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","            nextWeek : function () ","            lastWeek : function () ","            nextWeek: function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour) ","        ordinal: function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","    function is__plural(n) ","    function is__translate(number, withoutSuffix, key, isFuture) ","            lastWeek: function () ","            future : function (s) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","            future : function (s) ","            past : function (s) ","        ordinal : function (number) ","        ordinal : function (number) ","        isPM : function (token) ","        meridiem : function (hour, minute, isUpper) ","        ordinal : function (number) ","    function lb__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function processFutureTime(string) ","    function processPastTime(string) ","    function eifelerRegelAppliesToNumber(number) ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function translateSeconds(number, withoutSuffix, key, isFuture) ","    function translateSingular(number, withoutSuffix, key, isFuture) ","    function special(number) ","    function forms(key) ","    function lt__translate(number, withoutSuffix, key, isFuture) ","        ordinal : function (number) ","    function lv__format(forms, number, withoutSuffix) ","    function lv__relativeTimeWithPlural(number, withoutSuffix, key) ","    function relativeTimeWithSingular(number, withoutSuffix, key) ","    function relativeSeconds(number, withoutSuffix) ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","            lastWeek : function () ","        ordinal : function (number) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function relativeTimeMr(number, withoutSuffix, string, isFuture)","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem: function (hour, minute, isLower) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hours, minutes, isLower) ","        preparse: function (string) ","            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        preparse: function (string) ","            return string.replace(/[१२३४५६७८९०]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        monthsShort : function (m, format) ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","    function pl__plural(n) ","    function pl__translate(number, withoutSuffix, key) ","        months : function (momentToFormat, format) ","            lastWeek: function () ","            lastWeek: function () ","            lastWeek: function () ","    function ro__relativeTimeWithPlural(number, withoutSuffix, key) ","    function ru__plural(word, num) ","    function ru__relativeTimeWithPlural(number, withoutSuffix, key) ","            nextWeek: function (now) ","            lastWeek: function (now) ","        isPM : function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","    function sk__plural(n) ","    function sk__translate(number, withoutSuffix, key, isFuture) ","            nextWeek: function () ","            lastWeek: function () ","    function sl__processRelativeTime(number, withoutSuffix, key, isFuture) ","            nextWeek : function () ","            lastWeek : function () ","        isPM: function (input) ","        meridiem : function (hours, minutes, isLower) ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","        correctGrammaticalCase: function (number, wordKey) ","        translate: function (number, withoutSuffix, key) ","            nextWeek: function () ","            lastWeek : function () ","        meridiem : function (hours, minutes, isLower) ","        meridiemHour : function (hour, meridiem) ","        ordinal : function (number) ","        ordinal : function (number) ","        preparse: function (string) ","            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) ","        postformat: function (string) ","            return string.replace(/\\d/g, function (match) ","        meridiem : function (hour, minute, isLower) ","        meridiemHour : function (hour, meridiem) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number) ","    function translateFuture(output) ","    function translatePast(output) ","    function tlh__translate(number, withoutSuffix, string, isFuture) ","    function numberAsNoun(number) ","        ordinal : function (number) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","    function tzl__processRelativeTime(number, withoutSuffix, key, isFuture) ","    function uk__plural(word, num) ","    function uk__relativeTimeWithPlural(number, withoutSuffix, key) ","    function weekdaysCaseReplace(m, format) ","    function processHoursFunction(str) ","        return function () ","            lastWeek: function () ","        isPM: function (input) ","        meridiem : function (hour, minute, isLower) ","        ordinal: function (number, period) ","        isPM : function (input) ","        meridiem : function (hours, minutes, isLower) ","        ordinal : function (number) ","        ordinal : function (number) ","        meridiemHour: function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","            sameDay : function () ","            nextDay : function () ","            lastDay : function () ","            nextWeek : function () ","            lastWeek : function () ","        ordinal : function (number, period) ","        meridiemHour : function (hour, meridiem) ","        meridiem : function (hour, minute, isLower) ","        ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\min\\moment-with-locales.min.js","LineCount":673,"CharCount":224560,"Comments":["//! moment.js","//! version : 2.14.1","//! authors : Tim Wood, Iskren Chernev, Moment.js contributors","//! license : MIT","//! momentjs.com","!function(a,b){\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module?module.exports=b():\"function\"==typeof define\u0026\u0026define.amd?define(b):a.moment=b()}(this,function(){\"use strict\";function a(){return je.apply(null,arguments)}","// This is done to register the method called with moment()","// without creating circular dependencies.","function b(a){je=a}function c(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return\"[object Object]\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)","// even if its not own property I'd still call it non-empty","return!1;return!0}function f(a){return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c\u003ca.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)\u0026\u0026(a[c]=b[c]);return h(b,\"toString\")\u0026\u0026(a.toString=b.toString),h(b,\"valueOf\")\u0026\u0026(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){","// We need to deep clone this object.","return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf\u0026\u0026(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=ke.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())\u0026\u0026b.overflow\u003c0\u0026\u0026!b.empty\u0026\u0026!b.invalidMonth\u0026\u0026!b.invalidWeekday\u0026\u0026!b.nullInput\u0026\u0026!b.invalidFormat\u0026\u0026!b.userInvalidated\u0026\u0026(!b.meridiem||b.meridiem\u0026\u0026c),a._strict\u0026\u0026(a._isValid=a._isValid\u0026\u00260===b.charsLeftOver\u0026\u00260===b.unusedTokens.length\u0026\u0026void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),le.length\u003e0)for(c in le)d=le[c],e=b[d],o(e)||(a[d]=e);return a}","// Moment prototype object","function q(b){p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),me===!1\u0026\u0026(me=!0,a.updateOffset(this),me=!1)}function r(a){return a instanceof q||null!=a\u0026\u0026null!=a._isAMomentObject}function s(a){return 0\u003ea?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b\u0026\u0026isFinite(b)\u0026\u0026(c=s(b)),c}","// compare two arrays, return the number of differences","function u(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e\u003ed;d++)(c\u0026\u0026a[d]!==b[d]||!c\u0026\u0026t(a[d])!==t(b[d]))\u0026\u0026g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1\u0026\u0026\"undefined\"!=typeof console\u0026\u0026console.warn\u0026\u0026console.warn(\"Deprecation warning: \"+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(null,b),d\u0026\u0026(v(b+\"\\nArguments: \"+Array.prototype.slice.call(arguments).join(\", \")+\"\\n\"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(b,c),ne[b]||(v(c),ne[b]=!0)}function y(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this[\"_\"+c]=b;this._config=a,","// Lenient ordinal parsing accepts just a number in addition to","// number + (possibly) stuff coming from _ordinalParseLenient.","this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\d{1,2}/.source)}function A(a,b){var c,e=i({},a);for(c in b)h(b,c)\u0026\u0026(d(a[c])\u0026\u0026d(b[c])?(e[c]={},i(e[c],a[c]),i(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)h(a,c)\u0026\u0026!h(b,c)\u0026\u0026d(a[c])\u0026\u0026(","// make sure changes to properties don't modify parent config","e[c]=i({},e[c]));return e}function B(a){null!=a\u0026\u0026this.set(a)}function C(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return y(d)?d.call(b,c):d}function D(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function E(){return this._invalidDate}function F(a){return this._ordinal.replace(\"%d\",a)}function G(a,b,c,d){var e=this._relativeTime[c];return y(e)?e(a,b,c,d):e.replace(/%d/i,a)}function H(a,b){var c=this._relativeTime[a\u003e0?\"future\":\"past\"];return y(c)?c(b):c.replace(/%s/i,b)}function I(a,b){var c=a.toLowerCase();we[c]=we[c+\"s\"]=we[b]=a}function J(a){return\"string\"==typeof a?we[a]||we[a.toLowerCase()]:void 0}function K(a){var b,c,d={};for(c in a)h(a,c)\u0026\u0026(b=J(c),b\u0026\u0026(d[b]=a[c]));return d}function L(a,b){xe[a]=b}function M(a){var b=[];for(var c in a)b.push({unit:c,priority:xe[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function N(b,c){return function(d){return null!=d?(P(this,b,d),a.updateOffset(this,c),this):O(this,b)}}function O(a,b){return a.isValid()?a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+b]():NaN}function P(a,b,c){a.isValid()\u0026\u0026a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+b](c)}","// MOMENTS","function Q(a){return a=J(a),y(this[a])?this[a]():this}function R(a,b){if(\"object\"==typeof a){a=K(a);for(var c=M(a),d=0;d\u003cc.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=J(a),y(this[a]))return this[a](b);return this}function S(a,b,c){var d=\"\"+Math.abs(a),e=b-d.length,f=a\u003e=0;return(f?c?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}","// token:    'M'","// padded:   ['MM', 2]","// ordinal:  'Mo'","// callback: function () { this.month() + 1 }","function T(a,b,c,d){var e=d;\"string\"==typeof d\u0026\u0026(e=function(){return this[d]()}),a\u0026\u0026(Be[a]=e),b\u0026\u0026(Be[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c\u0026\u0026(Be[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function V(a){var b,c,d=a.match(ye);for(b=0,c=d.length;c\u003eb;b++)Be[d[b]]?d[b]=Be[d[b]]:d[b]=U(d[b]);return function(b){var e,f=\"\";for(e=0;c\u003ee;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}","// format date using native date object","function W(a,b){return a.isValid()?(b=X(b,a.localeData()),Ae[b]=Ae[b]||V(b),Ae[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(ze.lastIndex=0;d\u003e=0\u0026\u0026ze.test(a);)a=a.replace(ze,c),ze.lastIndex=0,d-=1;return a}function Y(a,b,c){Te[a]=y(b)?b:function(a,d){return a\u0026\u0026c?c:b}}function Z(a,b){return h(Te,a)?Te[a](b._strict,b._locale):new RegExp($(a))}","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function $(a){return _(a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function _(a){return a.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$\u0026\")}function aa(a,b){var c,d=b;for(\"string\"==typeof a\u0026\u0026(a=[a]),\"number\"==typeof b\u0026\u0026(d=function(a,c){c[b]=t(a)}),c=0;c\u003ca.length;c++)Ue[a[c]]=d}function ba(a,b){aa(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function ca(a,b,c){null!=b\u0026\u0026h(Ue,a)\u0026\u0026Ue[a](b,c._a,c,a)}function da(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function ea(a,b){return c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||cf).test(b)?\"format\":\"standalone\"][a.month()]}function fa(a,b){return c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[cf.test(b)?\"format\":\"standalone\"][a.month()]}function ga(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(","// this is not used","this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;12\u003ed;++d)f=j([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\"\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\"\").toLocaleLowerCase();return c?\"MMM\"===b?(e=pe.call(this._shortMonthsParse,g),-1!==e?e:null):(e=pe.call(this._longMonthsParse,g),-1!==e?e:null):\"MMM\"===b?(e=pe.call(this._shortMonthsParse,g),-1!==e?e:(e=pe.call(this._longMonthsParse,g),-1!==e?e:null)):(e=pe.call(this._longMonthsParse,g),-1!==e?e:(e=pe.call(this._shortMonthsParse,g),-1!==e?e:null))}function ha(a,b,c){var d,e,f;if(this._monthsParseExact)return ga.call(this,a,b,c);","// TODO: add sorting","// Sorting makes sure if one month (or abbr) is a prefix of another","// see sorting in computeMonthsParse","for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12\u003ed;d++){","// test the regex","if(e=j([2e3,d]),c\u0026\u0026!this._longMonthsParse[d]\u0026\u0026(this._longMonthsParse[d]=new RegExp(\"^\"+this.months(e,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[d]=new RegExp(\"^\"+this.monthsShort(e,\"\").replace(\".\",\"\")+\"$\",\"i\")),c||this._monthsParse[d]||(f=\"^\"+this.months(e,\"\")+\"|^\"+this.monthsShort(e,\"\"),this._monthsParse[d]=new RegExp(f.replace(\".\",\"\"),\"i\")),c\u0026\u0026\"MMMM\"===b\u0026\u0026this._longMonthsParse[d].test(a))return d;if(c\u0026\u0026\"MMM\"===b\u0026\u0026this._shortMonthsParse[d].test(a))return d;if(!c\u0026\u0026this._monthsParse[d].test(a))return d}}","// MOMENTS","function ia(a,b){var c;if(!a.isValid())","// No op","return a;if(\"string\"==typeof b)if(/^\\d+$/.test(b))b=t(b);else","// TODO: Another silent failure?","if(b=a.localeData().monthsParse(b),\"number\"!=typeof b)return a;return c=Math.min(a.date(),da(a.year(),b)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](b,c),a}function ja(b){return null!=b?(ia(this,b),a.updateOffset(this,!0),this):O(this,\"Month\")}function ka(){return da(this.year(),this.month())}function la(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(h(this,\"_monthsShortRegex\")||(this._monthsShortRegex=ff),this._monthsShortStrictRegex\u0026\u0026a?this._monthsShortStrictRegex:this._monthsShortRegex)}function ma(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsStrictRegex:this._monthsRegex):(h(this,\"_monthsRegex\")||(this._monthsRegex=gf),this._monthsStrictRegex\u0026\u0026a?this._monthsStrictRegex:this._monthsRegex)}function na(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;12\u003eb;b++)c=j([2e3,b]),d.push(this.monthsShort(c,\"\")),e.push(this.months(c,\"\")),f.push(this.months(c,\"\")),f.push(this.monthsShort(c,\"\"));for(","// Sorting makes sure if one month (or abbr) is a prefix of another it","// will match the longer piece.","d.sort(a),e.sort(a),f.sort(a),b=0;12\u003eb;b++)d[b]=_(d[b]),e[b]=_(e[b]);for(b=0;24\u003eb;b++)f[b]=_(f[b]);this._monthsRegex=new RegExp(\"^(\"+f.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+e.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+d.join(\"|\")+\")\",\"i\")}","// HELPERS","function oa(a){return pa(a)?366:365}function pa(a){return a%4===0\u0026\u0026a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){","//can't just apply() to create a date:","//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply","var h=new Date(a,b,c,d,e,f,g);","//the date constructor remaps years 0-99 to 1900-1999","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(h.getFullYear())\u0026\u0026h.setFullYear(a),h}function sa(a){var b=new Date(Date.UTC.apply(null,arguments));","//the Date.UTC function remaps years 0-99 to 1900-1999","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(b.getUTCFullYear())\u0026\u0026b.setUTCFullYear(a),b}","// start-of-first-week - start-of-year","function ta(a,b,c){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)","d=7+b-c,","// first-week day local weekday -- which local weekday is fwd","e=(7+sa(a,0,d).getUTCDay()-b)%7;return-e+d-1}","//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday","function ua(a,b,c,d,e){var f,g,h=(7+c-d)%7,i=ta(a,d,e),j=1+7*(b-1)+h+i;return 0\u003e=j?(f=a-1,g=oa(f)+j):j\u003eoa(a)?(f=a+1,g=j-oa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function va(a,b,c){var d,e,f=ta(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return 1\u003eg?(e=a.year()-1,d=g+wa(e,b,c)):g\u003ewa(a.year(),b,c)?(d=g-wa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function wa(a,b,c){var d=ta(a,b,c),e=ta(a+1,b,c);return(oa(a)-d+e)/7}","// HELPERS","// LOCALES","function xa(a){return va(a,this._week.dow,this._week.doy).week}function ya(){return this._week.dow}function za(){return this._week.doy}","// MOMENTS","function Aa(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\"d\")}function Ba(a){var b=va(this,1,4).week;return null==a?b:this.add(7*(a-b),\"d\")}","// HELPERS","function Ca(a,b){return\"string\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\"number\"==typeof a?a:null):parseInt(a,10)}function Da(a,b){return\"string\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Ea(a,b){return c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\"format\":\"standalone\"][a.day()]}function Fa(a){return this._weekdaysShort[a.day()]}function Ga(a){return this._weekdaysMin[a.day()]}function Ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;7\u003ed;++d)f=j([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\"\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\"\").toLocaleLowerCase();return c?\"dddd\"===b?(e=pe.call(this._weekdaysParse,g),-1!==e?e:null):\"ddd\"===b?(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:null):(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null):\"dddd\"===b?(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null))):\"ddd\"===b?(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null))):(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:null)))}function Ia(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ha.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;7\u003ed;d++){","// test the regex","if(e=j([2e3,1]).day(d),c\u0026\u0026!this._fullWeekdaysParse[d]\u0026\u0026(this._fullWeekdaysParse[d]=new RegExp(\"^\"+this.weekdays(e,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._shortWeekdaysParse[d]=new RegExp(\"^\"+this.weekdaysShort(e,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._minWeekdaysParse[d]=new RegExp(\"^\"+this.weekdaysMin(e,\"\").replace(\".\",\".?\")+\"$\",\"i\")),this._weekdaysParse[d]||(f=\"^\"+this.weekdays(e,\"\")+\"|^\"+this.weekdaysShort(e,\"\")+\"|^\"+this.weekdaysMin(e,\"\"),this._weekdaysParse[d]=new RegExp(f.replace(\".\",\"\"),\"i\")),c\u0026\u0026\"dddd\"===b\u0026\u0026this._fullWeekdaysParse[d].test(a))return d;if(c\u0026\u0026\"ddd\"===b\u0026\u0026this._shortWeekdaysParse[d].test(a))return d;if(c\u0026\u0026\"dd\"===b\u0026\u0026this._minWeekdaysParse[d].test(a))return d;if(!c\u0026\u0026this._weekdaysParse[d].test(a))return d}}","// MOMENTS","function Ja(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,\"d\")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function La(a){if(!this.isValid())return null!=a?this:NaN;","// behaves the same as moment#day except","// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)","// as a setter, sunday should belong to the previous week.","if(null!=a){var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,\"_weekdaysRegex\")||(this._weekdaysRegex=nf),this._weekdaysStrictRegex\u0026\u0026a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=of),this._weekdaysShortStrictRegex\u0026\u0026a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=pf),this._weekdaysMinStrictRegex\u0026\u0026a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7\u003eb;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,\"\"),e=this.weekdaysShort(c,\"\"),f=this.weekdays(c,\"\"),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(","// Sorting makes sure if one weekday (or abbr) is a prefix of another it","// will match the longer piece.","g.sort(a),h.sort(a),i.sort(a),k.sort(a),b=0;7\u003eb;b++)h[b]=_(h[b]),i[b]=_(i[b]),k[b]=_(k[b]);this._weekdaysRegex=new RegExp(\"^(\"+k.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+h.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+g.join(\"|\")+\")\",\"i\")}","// FORMATTING","function Qa(){return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}","// PARSING","function Ta(a,b){return b._meridiemParse}","// LOCALES","function Ua(a){","// IE8 Quirks Mode \u0026 IE7 Standards Mode do not allow accessing strings like arrays","// Using charAt should be more compatible.","return\"p\"===(a+\"\").toLowerCase().charAt(0)}function Va(a,b,c){return a\u003e11?c?\"pm\":\"PM\":c?\"am\":\"AM\"}function Wa(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}","// pick the locale from the array","// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each","// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root","function Xa(a){for(var b,c,d,e,f=0;f\u003ca.length;){for(e=Wa(a[f]).split(\"-\"),b=e.length,c=Wa(a[f+1]),c=c?c.split(\"-\"):null;b\u003e0;){if(d=Ya(e.slice(0,b).join(\"-\")))return d;if(c\u0026\u0026c.length\u003e=b\u0026\u0026u(e,c,!0)\u003e=b-1)","//the next array item is better than a shallower substring of this one","break;b--}f++}return null}function Ya(a){var b=null;","// TODO: Find a better way to register and load all the locales in Node","if(!uf[a]\u0026\u0026\"undefined\"!=typeof module\u0026\u0026module\u0026\u0026module.exports)try{b=qf._abbr,require(\"./locale/\"+a),","// because defineLocale currently also sets the global locale, we","// want to undo that for lazy loaded locales","Za(b)}catch(c){}return uf[a]}","// This function will load locale and then set the global locale.  If","// no arguments are passed in, it will simply return the current global","// locale key.","function Za(a,b){var c;","// moment.duration._locale = moment._locale = data;","return a\u0026\u0026(c=o(b)?ab(a):$a(a,b),c\u0026\u0026(qf=c)),qf._abbr}function $a(a,b){if(null!==b){var c=tf;","// treat as if there is no base config","// backwards compat for now: also set the locale","return b.abbr=a,null!=uf[a]?(x(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),c=uf[a]._config):null!=b.parentLocale\u0026\u0026(null!=uf[b.parentLocale]?c=uf[b.parentLocale]._config:x(\"parentLocaleUndefined\",\"specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/\")),uf[a]=new B(A(c,b)),Za(a),uf[a]}","// useful for testing","return delete uf[a],null}function _a(a,b){if(null!=b){var c,d=tf;","// MERGE","null!=uf[a]\u0026\u0026(d=uf[a]._config),b=A(d,b),c=new B(b),c.parentLocale=uf[a],uf[a]=c,","// backwards compat for now: also set the locale","Za(a)}else","// pass null for config to unupdate, useful for tests","null!=uf[a]\u0026\u0026(null!=uf[a].parentLocale?uf[a]=uf[a].parentLocale:null!=uf[a]\u0026\u0026delete uf[a]);return uf[a]}","// returns locale data","function ab(a){var b;if(a\u0026\u0026a._locale\u0026\u0026a._locale._abbr\u0026\u0026(a=a._locale._abbr),!a)return qf;if(!c(a)){if(b=Ya(a))return b;a=[a]}return Xa(a)}function bb(){return oe(uf)}function cb(a){var b,c=a._a;return c\u0026\u0026-2===l(a).overflow\u0026\u0026(b=c[We]\u003c0||c[We]\u003e11?We:c[Xe]\u003c1||c[Xe]\u003eda(c[Ve],c[We])?Xe:c[Ye]\u003c0||c[Ye]\u003e24||24===c[Ye]\u0026\u0026(0!==c[Ze]||0!==c[$e]||0!==c[_e])?Ye:c[Ze]\u003c0||c[Ze]\u003e59?Ze:c[$e]\u003c0||c[$e]\u003e59?$e:c[_e]\u003c0||c[_e]\u003e999?_e:-1,l(a)._overflowDayOfYear\u0026\u0026(Ve\u003eb||b\u003eXe)\u0026\u0026(b=Xe),l(a)._overflowWeeks\u0026\u0026-1===b\u0026\u0026(b=af),l(a)._overflowWeekday\u0026\u0026-1===b\u0026\u0026(b=bf),l(a).overflow=b),a}","// date from iso format","function db(a){var b,c,d,e,f,g,h=a._i,i=vf.exec(h)||wf.exec(h);if(i){for(l(a).iso=!0,b=0,c=yf.length;c\u003eb;b++)if(yf[b][1].exec(i[1])){e=yf[b][0],d=yf[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=zf.length;c\u003eb;b++)if(zf[b][1].exec(i[3])){","// match[2] should be 'T' or space","f=(i[2]||\" \")+zf[b][0];break}if(null==f)return void(a._isValid=!1)}if(!d\u0026\u0026null!=f)return void(a._isValid=!1);if(i[4]){if(!xf.exec(i[4]))return void(a._isValid=!1);g=\"Z\"}a._f=e+(f||\"\")+(g||\"\"),jb(a)}else a._isValid=!1}","// date from iso format or fallback","function eb(b){var c=Af.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(db(b),void(b._isValid===!1\u0026\u0026(delete b._isValid,a.createFromInputFallback(b))))}","// Pick the first defined of two or three arguments.","function fb(a,b,c){return null!=a?a:null!=b?b:c}function gb(b){","// hooks is actually the exported moment object","var c=new Date(a.now());return b._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()]}","// convert an array to a date.","// the array should mirror the parameters below","// note: all values past the year are optional and will default to the lowest possible value.","// [year, month, day , hour, minute, second, millisecond]","function hb(a){var b,c,d,e,f=[];if(!a._d){","// Default to current date.","// * if no year, month, day of month are given, default to today","// * if day of month is given, default month and year","// * if month is given, default only year","// * if year is given, don't default anything","for(d=gb(a),a._w\u0026\u0026null==a._a[Xe]\u0026\u0026null==a._a[We]\u0026\u0026ib(a),a._dayOfYear\u0026\u0026(e=fb(a._a[Ve],d[Ve]),a._dayOfYear\u003eoa(e)\u0026\u0026(l(a)._overflowDayOfYear=!0),c=sa(e,0,a._dayOfYear),a._a[We]=c.getUTCMonth(),a._a[Xe]=c.getUTCDate()),b=0;3\u003eb\u0026\u0026null==a._a[b];++b)a._a[b]=f[b]=d[b];","// Zero out whatever was not defaulted, including time","for(;7\u003eb;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];","// Check for 24:00:00.000","24===a._a[Ye]\u0026\u00260===a._a[Ze]\u0026\u00260===a._a[$e]\u0026\u00260===a._a[_e]\u0026\u0026(a._nextDay=!0,a._a[Ye]=0),a._d=(a._useUTC?sa:ra).apply(null,f),","// Apply timezone offset from input. The actual utcOffset can be changed","// with parseZone.","null!=a._tzm\u0026\u0026a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay\u0026\u0026(a._a[Ye]=24)}}function ib(a){var b,c,d,e,f,g,h,i;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=fb(b.GG,a._a[Ve],va(rb(),1,4).year),d=fb(b.W,1),e=fb(b.E,1),(1\u003ee||e\u003e7)\u0026\u0026(i=!0)):(f=a._locale._week.dow,g=a._locale._week.doy,c=fb(b.gg,a._a[Ve],va(rb(),f,g).year),d=fb(b.w,1),null!=b.d?(e=b.d,(0\u003ee||e\u003e6)\u0026\u0026(i=!0)):null!=b.e?(e=b.e+f,(b.e\u003c0||b.e\u003e6)\u0026\u0026(i=!0)):e=f),1\u003ed||d\u003ewa(c,f,g)?l(a)._overflowWeeks=!0:null!=i?l(a)._overflowWeekday=!0:(h=ua(c,d,e,f,g),a._a[Ve]=h.year,a._dayOfYear=h.dayOfYear)}","// date from string and format string","function jb(b){","// TODO: Move this to another part of the creation flow to prevent circular deps","if(b._f===a.ISO_8601)return void db(b);b._a=[],l(b).empty=!0;","// This array is used to make a Date, either with `new Date` or `Date.UTC`","var c,d,e,f,g,h=\"\"+b._i,i=h.length,j=0;for(e=X(b._f,b._locale).match(ye)||[],c=0;c\u003ce.length;c++)f=e[c],d=(h.match(Z(f,b))||[])[0],d\u0026\u0026(g=h.substr(0,h.indexOf(d)),g.length\u003e0\u0026\u0026l(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),Be[f]?(d?l(b).empty=!1:l(b).unusedTokens.push(f),ca(f,d,b)):b._strict\u0026\u0026!d\u0026\u0026l(b).unusedTokens.push(f);","// add remaining unparsed input length to the string","l(b).charsLeftOver=i-j,h.length\u003e0\u0026\u0026l(b).unusedInput.push(h),","// clear _12h flag if hour is \u003c= 12","b._a[Ye]\u003c=12\u0026\u0026l(b).bigHour===!0\u0026\u0026b._a[Ye]\u003e0\u0026\u0026(l(b).bigHour=void 0),l(b).parsedDateParts=b._a.slice(0),l(b).meridiem=b._meridiem,","// handle meridiem","b._a[Ye]=kb(b._locale,b._a[Ye],b._meridiem),hb(b),cb(b)}function kb(a,b,c){var d;","// Fallback","return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d\u0026\u002612\u003eb\u0026\u0026(b+=12),d||12!==b||(b=0),b):b}","// date from string and array of format strings","function lb(a){var b,c,d,e,f;if(0===a._f.length)return l(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e\u003ca._f.length;e++)f=0,b=p({},a),null!=a._useUTC\u0026\u0026(b._useUTC=a._useUTC),b._f=a._f[e],jb(b),m(b)\u0026\u0026(f+=l(b).charsLeftOver,f+=10*l(b).unusedTokens.length,l(b).score=f,(null==d||d\u003ef)\u0026\u0026(d=f,c=b));i(a,c||b)}function mb(a){if(!a._d){var b=K(a._i);a._a=g([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a\u0026\u0026parseInt(a,10)}),hb(a)}}function nb(a){var b=new q(cb(ob(a)));","// Adding is smart enough around DST","return b._nextDay\u0026\u0026(b.add(1,\"d\"),b._nextDay=void 0),b}function ob(a){var b=a._i,d=a._f;return a._locale=a._locale||ab(a._l),null===b||void 0===d\u0026\u0026\"\"===b?n({nullInput:!0}):(\"string\"==typeof b\u0026\u0026(a._i=b=a._locale.preparse(b)),r(b)?new q(cb(b)):(c(d)?lb(a):f(b)?a._d=b:d?jb(a):pb(a),m(a)||(a._d=null),a))}function pb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):f(d)?b._d=new Date(d.valueOf()):\"string\"==typeof d?eb(b):c(d)?(b._a=g(d.slice(0),function(a){return parseInt(a,10)}),hb(b)):\"object\"==typeof d?mb(b):\"number\"==typeof d?","// from milliseconds","b._d=new Date(d):a.createFromInputFallback(b)}function qb(a,b,f,g,h){var i={};","// object construction must be done this way.","// https://github.com/moment/moment/issues/1423","return\"boolean\"==typeof f\u0026\u0026(g=f,f=void 0),(d(a)\u0026\u0026e(a)||c(a)\u0026\u00260===a.length)\u0026\u0026(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,nb(i)}function rb(a,b,c,d){return qb(a,b,c,d,!1)}","// Pick a moment m from moments so that m[fn](other) is true for all","// other. This relies on the function fn to be transitive.","//","// moments should either be an array of moment objects or an array, whose","// first element is an array of moment objects.","function sb(a,b){var d,e;if(1===b.length\u0026\u0026c(b[0])\u0026\u0026(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e\u003cb.length;++e)b[e].isValid()\u0026\u0026!b[e][a](d)||(d=b[e]);return d}","// TODO: Use [].sort instead?","function tb(){var a=[].slice.call(arguments,0);return sb(\"isBefore\",a)}function ub(){var a=[].slice.call(arguments,0);return sb(\"isAfter\",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;","// representation for dateAddRemove","this._milliseconds=+k+1e3*j+// 1000","6e4*i+// 1000 * 60","1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978","// Because of dateAddRemove treats 24 hours as different from a","// day when working around DST, we need to store them separately","this._days=+g+7*f,","// It is impossible translate months into days without knowing","// which months you are are talking about, so we have to store","// it separately.","this._months=+e+3*d+12*c,this._data={},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}","// FORMATTING","function xb(a,b){T(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0\u003ea\u0026\u0026(a=-a,c=\"-\"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||\"\").match(a)||[],d=c[c.length-1]||[],e=(d+\"\").match(Ef)||[\"-\",0,0],f=+(60*e[1])+t(e[2]);return\"+\"===e[0]?f:-f}","// Return a moment from input, that is local/utc/zone equivalent to model.","function zb(b,c){var d,e;","// Use low-level api, because this fn is low-level api.","return c._isUTC?(d=c.clone(),e=(r(b)||f(b)?b.valueOf():rb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):rb(b).local()}function Ab(a){","// On Firefox.24 Date#getTimezoneOffset returns a floating point.","// https://github.com/moment/moment/pull/1871","return 15*-Math.round(a._d.getTimezoneOffset()/15)}","// MOMENTS","// keepLocalTime = true means only change the timezone, without","// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--\u003e","// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset","// +0200, so we adjust the time as needed, to be valid.","//","// Keeping the time actually adds/subtracts (one hour)","// from the actual represented time. That is why we call updateOffset","// a second time. In case it wants us to change the offset again","// _changeInProgress == true case, then we have to adjust, because","// there is no such time in the given timezone.","function Bb(b,c){var d,e=this._offset||0;return this.isValid()?null!=b?(\"string\"==typeof b?b=yb(Qe,b):Math.abs(b)\u003c16\u0026\u0026(b=60*b),!this._isUTC\u0026\u0026c\u0026\u0026(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d\u0026\u0026this.add(d,\"m\"),e!==b\u0026\u0026(!c||this._changeInProgress?Sb(this,Mb(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?(\"string\"!=typeof a\u0026\u0026(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC\u0026\u0026(this.utcOffset(0,a),this._isUTC=!1,a\u0026\u0026this.subtract(Ab(this),\"m\")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i\u0026\u0026this.utcOffset(yb(Pe,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()\u003ethis.clone().month(0).utcOffset()||this.utcOffset()\u003ethis.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()\u0026\u0026u(a._a,b.toArray())\u003e0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC\u0026\u00260===this._offset:!1}function Mb(a,b){var c,d,e,f=a,","// matching against regexp is expensive, do it on demand","g=null;// checks for null or undefined","return wb(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Ff.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:0,d:t(g[Xe])*c,h:t(g[Ye])*c,m:t(g[Ze])*c,s:t(g[$e])*c,ms:t(g[_e])*c}):(g=Gf.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:\"object\"==typeof f\u0026\u0026(\"from\"in f||\"to\"in f)\u0026\u0026(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)\u0026\u0026h(a,\"_locale\")\u0026\u0026(d._locale=a._locale),d}function Nb(a,b){","// We'd normally use ~~inp for this, but unfortunately it also","// converts floats to ints.","// inp may be undefined, so careful calling replace on it.","var c=a\u0026\u0026parseFloat(a.replace(\",\",\".\"));","// apply sign while we're at it","return(isNaN(c)?0:c)*b}function Ob(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\"M\").isAfter(b)\u0026\u0026--c.months,c.milliseconds=+b-+a.clone().add(c.months,\"M\"),c}function Pb(a,b){var c;return a.isValid()\u0026\u0026b.isValid()?(b=zb(b,a),a.isBefore(b)?c=Ob(a,b):(c=Ob(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}function Qb(a){return 0\u003ea?-1*Math.round(-1*a):Math.round(a)}","// TODO: remove 'name' arg after deprecation is removed","function Rb(a,b){return function(c,d){var e,f;","//invert the arguments, but complain about it","return null===d||isNaN(+d)||(x(b,\"moment().\"+b+\"(period, number) is deprecated. Please use moment().\"+b+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),f=c,c=d,d=f),c=\"string\"==typeof c?+c:c,e=Mb(c,d),Sb(this,e,a),this}}function Sb(b,c,d,e){var f=c._milliseconds,g=Qb(c._days),h=Qb(c._months);b.isValid()\u0026\u0026(e=null==e?!0:e,f\u0026\u0026b._d.setTime(b._d.valueOf()+f*d),g\u0026\u0026P(b,\"Date\",O(b,\"Date\")+g*d),h\u0026\u0026ia(b,O(b,\"Month\")+h*d),e\u0026\u0026a.updateOffset(b,g||h))}function Tb(a,b){var c=a.diff(b,\"days\",!0);return-6\u003ec?\"sameElse\":-1\u003ec?\"lastWeek\":0\u003ec?\"lastDay\":1\u003ec?\"sameDay\":2\u003ec?\"nextDay\":7\u003ec?\"nextWeek\":\"sameElse\"}function Ub(b,c){","// We want to compare the start of today, vs this.","// Getting start-of-today depends on whether we're local/utc/offset or not.","var d=b||rb(),e=zb(d,this).startOf(\"day\"),f=a.calendarFormat(this,e)||\"sameElse\",g=c\u0026\u0026(y(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,rb(d)))}function Vb(){return new q(this)}function Wb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003ec.valueOf():c.valueOf()\u003cthis.clone().startOf(b).valueOf()):!1}function Xb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003cc.valueOf():this.clone().endOf(b).valueOf()\u003cc.valueOf()):!1}function Yb(a,b,c,d){return d=d||\"()\",(\"(\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))\u0026\u0026(\")\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function Zb(a,b){var c,d=r(a)?a:rb(a);return this.isValid()\u0026\u0026d.isValid()?(b=J(b||\"millisecond\"),\"millisecond\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()\u003c=c\u0026\u0026c\u003c=this.clone().endOf(b).valueOf())):!1}function $b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function _b(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function ac(a,b,c){var d,e,f,g;// 1000","// 1000 * 60","// 1000 * 60 * 60","// 1000 * 60 * 60 * 24, negate dst","// 1000 * 60 * 60 * 24 * 7, negate dst","return this.isValid()?(d=zb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=J(b),\"year\"===b||\"month\"===b||\"quarter\"===b?(g=bc(this,d),\"quarter\"===b?g/=3:\"year\"===b\u0026\u0026(g/=12)):(f=this-d,g=\"second\"===b?f/1e3:\"minute\"===b?f/6e4:\"hour\"===b?f/36e5:\"day\"===b?(f-e)/864e5:\"week\"===b?(f-e)/6048e5:f),c?g:s(g)):NaN):NaN}function bc(a,b){","// difference in months","var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),","// b is in (anchor - 1 month, anchor + 1 month)","f=a.clone().add(e,\"months\");","//check for negative zero, return zero if negative zero","// linear across the month","// linear across the month","return 0\u003eb-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)||0}function cc(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function dc(){var a=this.clone().utc();return 0\u003ca.year()\u0026\u0026a.year()\u003c=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):W(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}","// If passed a locale key, it will set the locale for this","// instance.  Otherwise, it will return the locale configuration","// variables for this instance.","function jc(a){var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b\u0026\u0026(this._locale=b),this)}function kc(){return this._locale}function lc(a){","// the following switch intentionally omits break keywords","// to utilize falling through the cases.","switch(a=J(a)){case\"year\":this.month(0);/* falls through */","switch(a=J(a)){case\"year\":this.month(0);/* falls through */","case\"quarter\":case\"month\":this.date(1);/* falls through */","case\"week\":case\"isoWeek\":case\"day\":case\"date\":this.hours(0);/* falls through */","case\"hour\":this.minutes(0);/* falls through */","case\"minute\":this.seconds(0);/* falls through */","case\"second\":this.milliseconds(0)}","// weeks are a special case","// quarters are also special","return\"week\"===a\u0026\u0026this.weekday(0),\"isoWeek\"===a\u0026\u0026this.isoWeekday(1),\"quarter\"===a\u0026\u0026this.month(3*Math.floor(this.month()/3)),this}function mc(a){","// 'date' is an alias for 'day', so it should be considered as such.","return a=J(a),void 0===a||\"millisecond\"===a?this:(\"date\"===a\u0026\u0026(a=\"day\"),this.startOf(a).add(1,\"isoWeek\"===a?\"week\":a).subtract(1,\"ms\"))}function nc(){return this._d.valueOf()-6e4*(this._offset||0)}function oc(){return Math.floor(this.valueOf()/1e3)}function pc(){return new Date(this.valueOf())}function qc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function rc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function sc(){","// new Date(NaN).toJSON() === null","return this.isValid()?this.toISOString():null}function tc(){return m(this)}function uc(){return i({},l(this))}function vc(){return l(this).overflow}function wc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function xc(a,b){T(0,[a,a.length],0,b)}","// MOMENTS","function yc(a){return Cc.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zc(a){return Cc.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Ac(){return wa(this.year(),1,4)}function Bc(){var a=this.localeData()._week;return wa(this.year(),a.dow,a.doy)}function Cc(a,b,c,d,e){var f;return null==a?va(this,d,e).year:(f=wa(a,d,e),b\u003ef\u0026\u0026(b=f),Dc.call(this,a,b,c,d,e))}function Dc(a,b,c,d,e){var f=ua(a,b,c,d,e),g=sa(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}","// MOMENTS","function Ec(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}","// HELPERS","// MOMENTS","function Fc(a){var b=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?b:this.add(a-b,\"d\")}function Gc(a,b){b[_e]=t(1e3*(\"0.\"+a))}","// MOMENTS","function Hc(){return this._isUTC?\"UTC\":\"\"}function Ic(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Jc(a){return rb(1e3*a)}function Kc(){return rb.apply(null,arguments).parseZone()}function Lc(a){return a}function Mc(a,b,c,d){var e=ab(),f=j().set(d,b);return e[c](f,a)}function Nc(a,b,c){if(\"number\"==typeof a\u0026\u0026(b=a,a=void 0),a=a||\"\",null!=b)return Mc(a,b,c,\"month\");var d,e=[];for(d=0;12\u003ed;d++)e[d]=Mc(a,d,c,\"month\");return e}","// ()","// (5)","// (fmt, 5)","// (fmt)","// (true)","// (true, 5)","// (true, fmt, 5)","// (true, fmt)","function Oc(a,b,c,d){\"boolean\"==typeof a?(\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\"):(b=a,c=b,a=!1,\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\");var e=ab(),f=a?e._week.dow:0;if(null!=c)return Mc(b,(c+f)%7,d,\"day\");var g,h=[];for(g=0;7\u003eg;g++)h[g]=Mc(b,(g+f)%7,d,\"day\");return h}function Pc(a,b){return Nc(a,b,\"months\")}function Qc(a,b){return Nc(a,b,\"monthsShort\")}function Rc(a,b,c){return Oc(a,b,c,\"weekdays\")}function Sc(a,b,c){return Oc(a,b,c,\"weekdaysShort\")}function Tc(a,b,c){return Oc(a,b,c,\"weekdaysMin\")}function Uc(){var a=this._data;return this._milliseconds=Sf(this._milliseconds),this._days=Sf(this._days),this._months=Sf(this._months),a.milliseconds=Sf(a.milliseconds),a.seconds=Sf(a.seconds),a.minutes=Sf(a.minutes),a.hours=Sf(a.hours),a.months=Sf(a.months),a.years=Sf(a.years),this}function Vc(a,b,c,d){var e=Mb(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}","// supports only 2.0-style add(1, 's') or add(duration)","function Wc(a,b){return Vc(this,a,b,1)}","// supports only 2.0-style subtract(1, 's') or subtract(duration)","function Xc(a,b){return Vc(this,a,b,-1)}function Yc(a){return 0\u003ea?Math.floor(a):Math.ceil(a)}function Zc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;","// if we have a mix of positive and negative values, bubble down first","// check: https://github.com/moment/moment/issues/2166","// The following code bubbles up values, see the tests for","// examples of what that means.","// convert days to months","// 12 months -\u003e 1 year","return f\u003e=0\u0026\u0026g\u003e=0\u0026\u0026h\u003e=0||0\u003e=f\u0026\u00260\u003e=g\u0026\u00260\u003e=h||(f+=864e5*Yc(_c(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=s(f/1e3),i.seconds=a%60,b=s(a/60),i.minutes=b%60,c=s(b/60),i.hours=c%24,g+=s(c/24),e=s($c(g)),h+=e,g-=Yc(_c(e)),d=s(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function $c(a){","// 400 years have 146097 days (taking into account leap year rules)","// 400 years have 12 months === 4800","return 4800*a/146097}function _c(a){","// the reverse of daysToMonths","return 146097*a/4800}function ad(a){var b,c,d=this._milliseconds;if(a=J(a),\"month\"===a||\"year\"===a)return b=this._days+d/864e5,c=this._months+$c(b),\"month\"===a?c:c/12;switch(b=this._days+Math.round(_c(this._months)),a){case\"week\":return b/7+d/6048e5;case\"day\":return b+d/864e5;case\"hour\":return 24*b+d/36e5;case\"minute\":return 1440*b+d/6e4;case\"second\":return 86400*b+d/1e3;","// Math.floor prevents floating point math errors here","case\"millisecond\":return Math.floor(864e5*b)+d;default:throw new Error(\"Unknown unit \"+a)}}","// TODO: Use this.as('ms')?","function bd(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)}function cd(a){return function(){return this.as(a)}}function dd(a){return a=J(a),this[a+\"s\"]()}function ed(a){return function(){return this._data[a]}}function fd(){return s(this.days()/7)}","// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function gd(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function hd(a,b,c){var d=Mb(a).abs(),e=gg(d.as(\"s\")),f=gg(d.as(\"m\")),g=gg(d.as(\"h\")),h=gg(d.as(\"d\")),i=gg(d.as(\"M\")),j=gg(d.as(\"y\")),k=e\u003chg.s\u0026\u0026[\"s\",e]||1\u003e=f\u0026\u0026[\"m\"]||f\u003chg.m\u0026\u0026[\"mm\",f]||1\u003e=g\u0026\u0026[\"h\"]||g\u003chg.h\u0026\u0026[\"hh\",g]||1\u003e=h\u0026\u0026[\"d\"]||h\u003chg.d\u0026\u0026[\"dd\",h]||1\u003e=i\u0026\u0026[\"M\"]||i\u003chg.M\u0026\u0026[\"MM\",i]||1\u003e=j\u0026\u0026[\"y\"]||[\"yy\",j];return k[2]=b,k[3]=+a\u003e0,k[4]=c,gd.apply(null,k)}","// This function allows you to set the rounding function for relative time strings","function id(a){return void 0===a?gg:\"function\"==typeof a?(gg=a,!0):!1}","// This function allows you to set a threshold for relative time strings","function jd(a,b){return void 0===hg[a]?!1:void 0===b?hg[a]:(hg[a]=b,!0)}function kd(a){var b=this.localeData(),c=hd(this,!a,b);return a\u0026\u0026(c=b.pastFuture(+this,c)),b.postformat(c)}function ld(){","// for ISO strings we do not use the normal bubbling rules:","//  * milliseconds bubble up until they become hours","//  * days do not bubble at all","//  * months bubble up until they become years","// This is because there is no context-free conversion between hours and days","// (think of clock changes)","// and also not between days and months (28-31 days per month)","var a,b,c,d=ig(this._milliseconds)/1e3,e=ig(this._days),f=ig(this._months);a=s(d/60),b=s(a/60),d%=60,a%=60,c=s(f/12),f%=12;","// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js","var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0\u003em?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}function md(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function nd(a,b,c){var d={mm:b?\"хвіліна_хвіліны_хвілін\":\"хвіліну_хвіліны_хвілін\",hh:b?\"гадзіна_гадзіны_гадзін\":\"гадзіну_гадзіны_гадзін\",dd:\"дзень_дні_дзён\",MM:\"месяц_месяцы_месяцаў\",yy:\"год_гады_гадоў\"};return\"m\"===c?b?\"хвіліна\":\"хвіліну\":\"h\"===c?b?\"гадзіна\":\"гадзіну\":a+\" \"+md(d[c],+a)}function od(a,b,c){var d={mm:\"munutenn\",MM:\"miz\",dd:\"devezh\"};return a+\" \"+rd(d[c],a)}function pd(a){switch(qd(a)){case 1:case 3:case 4:case 5:case 9:return a+\" bloaz\";default:return a+\" vloaz\"}}function qd(a){return a\u003e9?qd(a%10):a}function rd(a,b){return 2===b?sd(a):a}function sd(a){var b={m:\"v\",b:\"v\",d:\"z\"};return void 0===b[a.charAt(0)]?a:b[a.charAt(0)]+a.substring(1)}function td(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function ud(a){return a\u003e1\u0026\u00265\u003ea\u0026\u00261!==~~(a/10)}function vd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?\"pár sekund\":\"pár sekundami\";case\"m\":// a minute / in a minute / a minute ago","return b?\"minuta\":d?\"minutu\":\"minutou\";case\"mm\":// 9 minutes / in 9 minutes / 9 minutes ago","// 9 minutes / in 9 minutes / 9 minutes ago","return b||d?e+(ud(a)?\"minuty\":\"minut\"):e+\"minutami\";break;case\"h\":// an hour / in an hour / an hour ago","return b?\"hodina\":d?\"hodinu\":\"hodinou\";case\"hh\":// 9 hours / in 9 hours / 9 hours ago","// 9 hours / in 9 hours / 9 hours ago","return b||d?e+(ud(a)?\"hodiny\":\"hodin\"):e+\"hodinami\";break;case\"d\":// a day / in a day / a day ago","return b||d?\"den\":\"dnem\";case\"dd\":// 9 days / in 9 days / 9 days ago","// 9 days / in 9 days / 9 days ago","return b||d?e+(ud(a)?\"dny\":\"dní\"):e+\"dny\";break;case\"M\":// a month / in a month / a month ago","return b||d?\"měsíc\":\"měsícem\";case\"MM\":// 9 months / in 9 months / 9 months ago","// 9 months / in 9 months / 9 months ago","return b||d?e+(ud(a)?\"měsíce\":\"měsíců\"):e+\"měsíci\";break;case\"y\":// a year / in a year / a year ago","return b||d?\"rok\":\"rokem\";case\"yy\":// 9 years / in 9 years / 9 years ago","// 9 years / in 9 years / 9 years ago","return b||d?e+(ud(a)?\"roky\":\"let\"):e+\"lety\"}}function wd(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function xd(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function yd(a,b,c,d){var e={s:[\"mõne sekundi\",\"mõni sekund\",\"paar sekundit\"],m:[\"ühe minuti\",\"üks minut\"],mm:[a+\" minuti\",a+\" minutit\"],h:[\"ühe tunni\",\"tund aega\",\"üks tund\"],hh:[a+\" tunni\",a+\" tundi\"],d:[\"ühe päeva\",\"üks päev\"],M:[\"kuu aja\",\"kuu aega\",\"üks kuu\"],MM:[a+\" kuu\",a+\" kuud\"],y:[\"ühe aasta\",\"aasta\",\"üks aasta\"],yy:[a+\" aasta\",a+\" aastat\"]};return b?e[c][2]?e[c][2]:e[c][1]:d?e[c][0]:e[c][1]}function zd(a,b,c,d){var e=\"\";switch(c){case\"s\":return d?\"muutaman sekunnin\":\"muutama sekunti\";case\"m\":return d?\"minuutin\":\"minuutti\";case\"mm\":e=d?\"minuutin\":\"minuuttia\";break;case\"h\":return d?\"tunnin\":\"tunti\";case\"hh\":e=d?\"tunnin\":\"tuntia\";break;case\"d\":return d?\"päivän\":\"päivä\";case\"dd\":e=d?\"päivän\":\"päivää\";break;case\"M\":return d?\"kuukauden\":\"kuukausi\";case\"MM\":e=d?\"kuukauden\":\"kuukautta\";break;case\"y\":return d?\"vuoden\":\"vuosi\";case\"yy\":e=d?\"vuoden\":\"vuotta\"}return e=Ad(a,d)+\" \"+e}function Ad(a,b){return 10\u003ea?b?Jg[a]:Ig[a]:a}function Bd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function Cd(a,b,c,d){var e=a;switch(c){case\"s\":return d||b?\"néhány másodperc\":\"néhány másodperce\";case\"m\":return\"egy\"+(d||b?\" perc\":\" perce\");case\"mm\":return e+(d||b?\" perc\":\" perce\");case\"h\":return\"egy\"+(d||b?\" óra\":\" órája\");case\"hh\":return e+(d||b?\" óra\":\" órája\");case\"d\":return\"egy\"+(d||b?\" nap\":\" napja\");case\"dd\":return e+(d||b?\" nap\":\" napja\");case\"M\":return\"egy\"+(d||b?\" hónap\":\" hónapja\");case\"MM\":return e+(d||b?\" hónap\":\" hónapja\");case\"y\":return\"egy\"+(d||b?\" év\":\" éve\");case\"yy\":return e+(d||b?\" év\":\" éve\")}return\"\"}function Dd(a){return(a?\"\":\"[múlt] \")+\"[\"+Tg[this.day()]+\"] LT[-kor]\"}function Ed(a){return a%100===11?!0:a%10!==1}function Fd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nokkrar sekúndur\":\"nokkrum sekúndum\";case\"m\":return b?\"mínúta\":\"mínútu\";case\"mm\":return Ed(a)?e+(b||d?\"mínútur\":\"mínútum\"):b?e+\"mínúta\":e+\"mínútu\";case\"hh\":return Ed(a)?e+(b||d?\"klukkustundir\":\"klukkustundum\"):e+\"klukkustund\";case\"d\":return b?\"dagur\":d?\"dag\":\"degi\";case\"dd\":return Ed(a)?b?e+\"dagar\":e+(d?\"daga\":\"dögum\"):b?e+\"dagur\":e+(d?\"dag\":\"degi\");case\"M\":return b?\"mánuður\":d?\"mánuð\":\"mánuði\";case\"MM\":return Ed(a)?b?e+\"mánuðir\":e+(d?\"mánuði\":\"mánuðum\"):b?e+\"mánuður\":e+(d?\"mánuð\":\"mánuði\");case\"y\":return b||d?\"ár\":\"ári\";case\"yy\":return Ed(a)?e+(b||d?\"ár\":\"árum\"):e+(b||d?\"ár\":\"ári\")}}function Gd(a,b,c,d){var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function Hd(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"a \"+a:\"an \"+a}function Id(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"viru \"+a:\"virun \"+a}/**","return b||d?e+(ud(a)?\"roky\":\"let\"):e+\"lety\"}}function wd(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function xd(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function yd(a,b,c,d){var e={s:[\"mõne sekundi\",\"mõni sekund\",\"paar sekundit\"],m:[\"ühe minuti\",\"üks minut\"],mm:[a+\" minuti\",a+\" minutit\"],h:[\"ühe tunni\",\"tund aega\",\"üks tund\"],hh:[a+\" tunni\",a+\" tundi\"],d:[\"ühe päeva\",\"üks päev\"],M:[\"kuu aja\",\"kuu aega\",\"üks kuu\"],MM:[a+\" kuu\",a+\" kuud\"],y:[\"ühe aasta\",\"aasta\",\"üks aasta\"],yy:[a+\" aasta\",a+\" aastat\"]};return b?e[c][2]?e[c][2]:e[c][1]:d?e[c][0]:e[c][1]}function zd(a,b,c,d){var e=\"\";switch(c){case\"s\":return d?\"muutaman sekunnin\":\"muutama sekunti\";case\"m\":return d?\"minuutin\":\"minuutti\";case\"mm\":e=d?\"minuutin\":\"minuuttia\";break;case\"h\":return d?\"tunnin\":\"tunti\";case\"hh\":e=d?\"tunnin\":\"tuntia\";break;case\"d\":return d?\"päivän\":\"päivä\";case\"dd\":e=d?\"päivän\":\"päivää\";break;case\"M\":return d?\"kuukauden\":\"kuukausi\";case\"MM\":e=d?\"kuukauden\":\"kuukautta\";break;case\"y\":return d?\"vuoden\":\"vuosi\";case\"yy\":e=d?\"vuoden\":\"vuotta\"}return e=Ad(a,d)+\" \"+e}function Ad(a,b){return 10\u003ea?b?Jg[a]:Ig[a]:a}function Bd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function Cd(a,b,c,d){var e=a;switch(c){case\"s\":return d||b?\"néhány másodperc\":\"néhány másodperce\";case\"m\":return\"egy\"+(d||b?\" perc\":\" perce\");case\"mm\":return e+(d||b?\" perc\":\" perce\");case\"h\":return\"egy\"+(d||b?\" óra\":\" órája\");case\"hh\":return e+(d||b?\" óra\":\" órája\");case\"d\":return\"egy\"+(d||b?\" nap\":\" napja\");case\"dd\":return e+(d||b?\" nap\":\" napja\");case\"M\":return\"egy\"+(d||b?\" hónap\":\" hónapja\");case\"MM\":return e+(d||b?\" hónap\":\" hónapja\");case\"y\":return\"egy\"+(d||b?\" év\":\" éve\");case\"yy\":return e+(d||b?\" év\":\" éve\")}return\"\"}function Dd(a){return(a?\"\":\"[múlt] \")+\"[\"+Tg[this.day()]+\"] LT[-kor]\"}function Ed(a){return a%100===11?!0:a%10!==1}function Fd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nokkrar sekúndur\":\"nokkrum sekúndum\";case\"m\":return b?\"mínúta\":\"mínútu\";case\"mm\":return Ed(a)?e+(b||d?\"mínútur\":\"mínútum\"):b?e+\"mínúta\":e+\"mínútu\";case\"hh\":return Ed(a)?e+(b||d?\"klukkustundir\":\"klukkustundum\"):e+\"klukkustund\";case\"d\":return b?\"dagur\":d?\"dag\":\"degi\";case\"dd\":return Ed(a)?b?e+\"dagar\":e+(d?\"daga\":\"dögum\"):b?e+\"dagur\":e+(d?\"dag\":\"degi\");case\"M\":return b?\"mánuður\":d?\"mánuð\":\"mánuði\";case\"MM\":return Ed(a)?b?e+\"mánuðir\":e+(d?\"mánuði\":\"mánuðum\"):b?e+\"mánuður\":e+(d?\"mánuð\":\"mánuði\");case\"y\":return b||d?\"ár\":\"ári\";case\"yy\":return Ed(a)?e+(b||d?\"ár\":\"árum\"):e+(b||d?\"ár\":\"ári\")}}function Gd(a,b,c,d){var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function Hd(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"a \"+a:\"an \"+a}function Id(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"viru \"+a:\"virun \"+a}/**","     * Returns true if the word before the given number loses the '-n' ending.","     * e.g. 'an 10 Deeg' but 'a 5 Deeg'","     *","     * @param number {integer}","     * @returns {boolean}","     */","function Jd(a){if(a=parseInt(a,10),isNaN(a))return!1;if(0\u003ea)","// Negative Number --\u003e always true","return!0;if(10\u003ea)","// Only 1 digit","return a\u003e=4\u0026\u00267\u003e=a;if(100\u003ea){","// 2 digits","var b=a%10,c=a/10;return Jd(0===b?c:b)}if(1e4\u003ea){","// 3 or 4 digits --\u003e recursively check first digit","for(;a\u003e=10;)a/=10;return Jd(a)}","// Anything larger than 4 digits: recursively check first n-3 digits","return a/=1e3,Jd(a)}function Kd(a,b,c,d){return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function Ld(a,b,c,d){return b?Nd(c)[0]:d?Nd(c)[1]:Nd(c)[2]}function Md(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function Nd(a){return Wg[a].split(\"_\")}function Od(a,b,c,d){var e=a+\" \";return 1===a?e+Ld(a,b,c[0],d):b?e+(Md(a)?Nd(c)[1]:Nd(c)[0]):d?e+Nd(c)[1]:e+(Md(a)?Nd(c)[1]:Nd(c)[2])}/**","return a/=1e3,Jd(a)}function Kd(a,b,c,d){return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function Ld(a,b,c,d){return b?Nd(c)[0]:d?Nd(c)[1]:Nd(c)[2]}function Md(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function Nd(a){return Wg[a].split(\"_\")}function Od(a,b,c,d){var e=a+\" \";return 1===a?e+Ld(a,b,c[0],d):b?e+(Md(a)?Nd(c)[1]:Nd(c)[0]):d?e+Nd(c)[1]:e+(Md(a)?Nd(c)[1]:Nd(c)[2])}/**","     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.","     */","function Pd(a,b,c){return c?b%10===1\u0026\u0026b%100!==11?a[2]:a[3]:b%10===1\u0026\u0026b%100!==11?a[0]:a[1]}function Qd(a,b,c){return a+\" \"+Pd(Xg[c],a,b)}function Rd(a,b,c){return Pd(Xg[c],a,b)}function Sd(a,b){return b?\"dažas sekundes\":\"dažām sekundēm\"}function Td(a,b,c,d){var e=\"\";if(b)switch(c){case\"s\":e=\"काही सेकंद\";break;case\"m\":e=\"एक मिनिट\";break;case\"mm\":e=\"%d मिनिटे\";break;case\"h\":e=\"एक तास\";break;case\"hh\":e=\"%d तास\";break;case\"d\":e=\"एक दिवस\";break;case\"dd\":e=\"%d दिवस\";break;case\"M\":e=\"एक महिना\";break;case\"MM\":e=\"%d महिने\";break;case\"y\":e=\"एक वर्ष\";break;case\"yy\":e=\"%d वर्षे\"}else switch(c){case\"s\":e=\"काही सेकंदां\";break;case\"m\":e=\"एका मिनिटा\";break;case\"mm\":e=\"%d मिनिटां\";break;case\"h\":e=\"एका तासा\";break;case\"hh\":e=\"%d तासां\";break;case\"d\":e=\"एका दिवसा\";break;case\"dd\":e=\"%d दिवसां\";break;case\"M\":e=\"एका महिन्या\";break;case\"MM\":e=\"%d महिन्यां\";break;case\"y\":e=\"एका वर्षा\";break;case\"yy\":e=\"%d वर्षां\"}return e.replace(/%d/i,a)}function Ud(a){return 5\u003ea%10\u0026\u0026a%10\u003e1\u0026\u0026~~(a/10)%10!==1}function Vd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"minuta\":\"minutę\";case\"mm\":return d+(Ud(a)?\"minuty\":\"minut\");case\"h\":return b?\"godzina\":\"godzinę\";case\"hh\":return d+(Ud(a)?\"godziny\":\"godzin\");case\"MM\":return d+(Ud(a)?\"miesiące\":\"miesięcy\");case\"yy\":return d+(Ud(a)?\"lata\":\"lat\")}}function Wd(a,b,c){var d={mm:\"minute\",hh:\"ore\",dd:\"zile\",MM:\"luni\",yy:\"ani\"},e=\" \";return(a%100\u003e=20||a\u003e=100\u0026\u0026a%100===0)\u0026\u0026(e=\" de \"),a+e+d[c]}function Xd(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function Yd(a,b,c){var d={mm:b?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"};return\"m\"===c?b?\"минута\":\"минуту\":a+\" \"+Xd(d[c],+a)}function Zd(a){return a\u003e1\u0026\u00265\u003ea}function $d(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","function Pd(a,b,c){return c?b%10===1\u0026\u0026b%100!==11?a[2]:a[3]:b%10===1\u0026\u0026b%100!==11?a[0]:a[1]}function Qd(a,b,c){return a+\" \"+Pd(Xg[c],a,b)}function Rd(a,b,c){return Pd(Xg[c],a,b)}function Sd(a,b){return b?\"dažas sekundes\":\"dažām sekundēm\"}function Td(a,b,c,d){var e=\"\";if(b)switch(c){case\"s\":e=\"काही सेकंद\";break;case\"m\":e=\"एक मिनिट\";break;case\"mm\":e=\"%d मिनिटे\";break;case\"h\":e=\"एक तास\";break;case\"hh\":e=\"%d तास\";break;case\"d\":e=\"एक दिवस\";break;case\"dd\":e=\"%d दिवस\";break;case\"M\":e=\"एक महिना\";break;case\"MM\":e=\"%d महिने\";break;case\"y\":e=\"एक वर्ष\";break;case\"yy\":e=\"%d वर्षे\"}else switch(c){case\"s\":e=\"काही सेकंदां\";break;case\"m\":e=\"एका मिनिटा\";break;case\"mm\":e=\"%d मिनिटां\";break;case\"h\":e=\"एका तासा\";break;case\"hh\":e=\"%d तासां\";break;case\"d\":e=\"एका दिवसा\";break;case\"dd\":e=\"%d दिवसां\";break;case\"M\":e=\"एका महिन्या\";break;case\"MM\":e=\"%d महिन्यां\";break;case\"y\":e=\"एका वर्षा\";break;case\"yy\":e=\"%d वर्षां\"}return e.replace(/%d/i,a)}function Ud(a){return 5\u003ea%10\u0026\u0026a%10\u003e1\u0026\u0026~~(a/10)%10!==1}function Vd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"minuta\":\"minutę\";case\"mm\":return d+(Ud(a)?\"minuty\":\"minut\");case\"h\":return b?\"godzina\":\"godzinę\";case\"hh\":return d+(Ud(a)?\"godziny\":\"godzin\");case\"MM\":return d+(Ud(a)?\"miesiące\":\"miesięcy\");case\"yy\":return d+(Ud(a)?\"lata\":\"lat\")}}function Wd(a,b,c){var d={mm:\"minute\",hh:\"ore\",dd:\"zile\",MM:\"luni\",yy:\"ani\"},e=\" \";return(a%100\u003e=20||a\u003e=100\u0026\u0026a%100===0)\u0026\u0026(e=\" de \"),a+e+d[c]}function Xd(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function Yd(a,b,c){var d={mm:b?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"};return\"m\"===c?b?\"минута\":\"минуту\":a+\" \"+Xd(d[c],+a)}function Zd(a){return a\u003e1\u0026\u00265\u003ea}function $d(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?\"pár sekúnd\":\"pár sekundami\";case\"m\":// a minute / in a minute / a minute ago","return b?\"minúta\":d?\"minútu\":\"minútou\";case\"mm\":// 9 minutes / in 9 minutes / 9 minutes ago","// 9 minutes / in 9 minutes / 9 minutes ago","return b||d?e+(Zd(a)?\"minúty\":\"minút\"):e+\"minútami\";break;case\"h\":// an hour / in an hour / an hour ago","return b?\"hodina\":d?\"hodinu\":\"hodinou\";case\"hh\":// 9 hours / in 9 hours / 9 hours ago","// 9 hours / in 9 hours / 9 hours ago","return b||d?e+(Zd(a)?\"hodiny\":\"hodín\"):e+\"hodinami\";break;case\"d\":// a day / in a day / a day ago","return b||d?\"deň\":\"dňom\";case\"dd\":// 9 days / in 9 days / 9 days ago","// 9 days / in 9 days / 9 days ago","return b||d?e+(Zd(a)?\"dni\":\"dní\"):e+\"dňami\";break;case\"M\":// a month / in a month / a month ago","return b||d?\"mesiac\":\"mesiacom\";case\"MM\":// 9 months / in 9 months / 9 months ago","// 9 months / in 9 months / 9 months ago","return b||d?e+(Zd(a)?\"mesiace\":\"mesiacov\"):e+\"mesiacmi\";break;case\"y\":// a year / in a year / a year ago","return b||d?\"rok\":\"rokom\";case\"yy\":// 9 years / in 9 years / 9 years ago","// 9 years / in 9 years / 9 years ago","return b||d?e+(Zd(a)?\"roky\":\"rokov\"):e+\"rokmi\"}}function _d(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nekaj sekund\":\"nekaj sekundami\";case\"m\":return b?\"ena minuta\":\"eno minuto\";case\"mm\":return e+=1===a?b?\"minuta\":\"minuto\":2===a?b||d?\"minuti\":\"minutama\":5\u003ea?b||d?\"minute\":\"minutami\":b||d?\"minut\":\"minutami\";case\"h\":return b?\"ena ura\":\"eno uro\";case\"hh\":return e+=1===a?b?\"ura\":\"uro\":2===a?b||d?\"uri\":\"urama\":5\u003ea?b||d?\"ure\":\"urami\":b||d?\"ur\":\"urami\";case\"d\":return b||d?\"en dan\":\"enim dnem\";case\"dd\":return e+=1===a?b||d?\"dan\":\"dnem\":2===a?b||d?\"dni\":\"dnevoma\":b||d?\"dni\":\"dnevi\";case\"M\":return b||d?\"en mesec\":\"enim mesecem\";case\"MM\":return e+=1===a?b||d?\"mesec\":\"mesecem\":2===a?b||d?\"meseca\":\"mesecema\":5\u003ea?b||d?\"mesece\":\"meseci\":b||d?\"mesecev\":\"meseci\";case\"y\":return b||d?\"eno leto\":\"enim letom\";case\"yy\":return e+=1===a?b||d?\"leto\":\"letom\":2===a?b||d?\"leti\":\"letoma\":5\u003ea?b||d?\"leta\":\"leti\":b||d?\"let\":\"leti\"}}function ae(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"leS\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"waQ\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"nem\":b+\" pIq\"}function be(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"Hu’\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"wen\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"ben\":b+\" ret\"}function ce(a,b,c,d){var e=de(a);switch(c){case\"mm\":return e+\" tup\";case\"hh\":return e+\" rep\";case\"dd\":return e+\" jaj\";case\"MM\":return e+\" jar\";case\"yy\":return e+\" DIS\"}}function de(a){var b=Math.floor(a%1e3/100),c=Math.floor(a%100/10),d=a%10,e=\"\";return b\u003e0\u0026\u0026(e+=qh[b]+\"vatlh\"),c\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+qh[c]+\"maH\"),d\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+qh[d]),\"\"===e?\"pagh\":e}function ee(a,b,c,d){var e={s:[\"viensas secunds\",\"'iensas secunds\"],m:[\"'n míut\",\"'iens míut\"],mm:[a+\" míuts\",\"\"+a+\" míuts\"],h:[\"'n þora\",\"'iensa þora\"],hh:[a+\" þoras\",\"\"+a+\" þoras\"],d:[\"'n ziua\",\"'iensa ziua\"],dd:[a+\" ziuas\",\"\"+a+\" ziuas\"],M:[\"'n mes\",\"'iens mes\"],MM:[a+\" mesen\",\"\"+a+\" mesen\"],y:[\"'n ar\",\"'iens ar\"],yy:[a+\" ars\",\"\"+a+\" ars\"]};return d?e[c][0]:b?e[c][0]:e[c][1]}function fe(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function ge(a,b,c){var d={mm:b?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:b?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"};return\"m\"===c?b?\"хвилина\":\"хвилину\":\"h\"===c?b?\"година\":\"годину\":a+\" \"+fe(d[c],+a)}function he(a,b){var c={nominative:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),accusative:\"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу\".split(\"_\"),genitive:\"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи\".split(\"_\")},d=/(\\[[ВвУу]\\]) ?dddd/.test(b)?\"accusative\":/\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(b)?\"genitive\":\"nominative\";return c[d][a.day()]}function ie(a){return function(){return a+\"о\"+(11===this.hours()?\"б\":\"\")+\"] LT\"}}var je,ke;ke=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length\u003e\u003e\u003e0,d=0;c\u003ed;d++)if(d in b\u0026\u0026a.call(this,b[d],d,b))return!0;return!1};","// Plugins that add properties should also add the key here (null value),","// so we can properly clone ourselves.","var le=a.momentProperties=[],me=!1,ne={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var oe;oe=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)\u0026\u0026c.push(b);return c};var pe,qe={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},re={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},se=\"Invalid date\",te=\"%d\",ue=/\\d{1,2}/,ve={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},we={},xe={},ye=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,ze=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Ae={},Be={},Ce=/\\d/,De=/\\d\\d/,Ee=/\\d{3}/,Fe=/\\d{4}/,Ge=/[+-]?\\d{6}/,He=/\\d\\d?/,Ie=/\\d\\d\\d\\d?/,Je=/\\d\\d\\d\\d\\d\\d?/,Ke=/\\d{1,3}/,Le=/\\d{1,4}/,Me=/[+-]?\\d{1,6}/,Ne=/\\d+/,Oe=/[+-]?\\d+/,Pe=/Z|[+-]\\d\\d:?\\d\\d/gi,Qe=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Re=/[+-]?\\d+(\\.\\d{1,3})?/,Se=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,Te={},Ue={},Ve=0,We=1,Xe=2,Ye=3,Ze=4,$e=5,_e=6,af=7,bf=8;pe=Array.prototype.indexOf?Array.prototype.indexOf:function(a){","// I know","var b;for(b=0;b\u003cthis.length;++b)if(this[b]===a)return b;return-1},T(\"M\",[\"MM\",2],\"Mo\",function(){return this.month()+1}),T(\"MMM\",0,0,function(a){return this.localeData().monthsShort(this,a)}),T(\"MMMM\",0,0,function(a){return this.localeData().months(this,a)}),I(\"month\",\"M\"),L(\"month\",8),Y(\"M\",He),Y(\"MM\",He,De),Y(\"MMM\",function(a,b){return b.monthsShortRegex(a)}),Y(\"MMMM\",function(a,b){return b.monthsRegex(a)}),aa([\"M\",\"MM\"],function(a,b){b[We]=t(a)-1}),aa([\"MMM\",\"MMMM\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[We]=e:l(c).invalidMonth=a});","// LOCALES","var cf=/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/,df=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ef=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),ff=Se,gf=Se;","// FORMATTING","T(\"Y\",0,0,function(){var a=this.year();return 9999\u003e=a?\"\"+a:\"+\"+a}),T(0,[\"YY\",2],0,function(){return this.year()%100}),T(0,[\"YYYY\",4],0,\"year\"),T(0,[\"YYYYY\",5],0,\"year\"),T(0,[\"YYYYYY\",6,!0],0,\"year\"),","// ALIASES","I(\"year\",\"y\"),","// PRIORITIES","L(\"year\",1),","// PARSING","Y(\"Y\",Oe),Y(\"YY\",He,De),Y(\"YYYY\",Le,Fe),Y(\"YYYYY\",Me,Ge),Y(\"YYYYYY\",Me,Ge),aa([\"YYYYY\",\"YYYYYY\"],Ve),aa(\"YYYY\",function(b,c){c[Ve]=2===b.length?a.parseTwoDigitYear(b):t(b)}),aa(\"YY\",function(b,c){c[Ve]=a.parseTwoDigitYear(b)}),aa(\"Y\",function(a,b){b[Ve]=parseInt(a,10)}),","// HOOKS","a.parseTwoDigitYear=function(a){return t(a)+(t(a)\u003e68?1900:2e3)};","// MOMENTS","var hf=N(\"FullYear\",!0);","// FORMATTING","T(\"w\",[\"ww\",2],\"wo\",\"week\"),T(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),","// ALIASES","I(\"week\",\"w\"),I(\"isoWeek\",\"W\"),","// PRIORITIES","L(\"week\",5),L(\"isoWeek\",5),","// PARSING","Y(\"w\",He),Y(\"ww\",He,De),Y(\"W\",He),Y(\"WW\",He,De),ba([\"w\",\"ww\",\"W\",\"WW\"],function(a,b,c,d){b[d.substr(0,1)]=t(a)});var jf={dow:0,// Sunday is the first day of the week.","doy:6};","// FORMATTING","T(\"d\",0,\"do\",\"day\"),T(\"dd\",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),T(\"ddd\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),T(\"dddd\",0,0,function(a){return this.localeData().weekdays(this,a)}),T(\"e\",0,0,\"weekday\"),T(\"E\",0,0,\"isoWeekday\"),","// ALIASES","I(\"day\",\"d\"),I(\"weekday\",\"e\"),I(\"isoWeekday\",\"E\"),","// PRIORITY","L(\"day\",11),L(\"weekday\",11),L(\"isoWeekday\",11),","// PARSING","Y(\"d\",He),Y(\"e\",He),Y(\"E\",He),Y(\"dd\",function(a,b){return b.weekdaysMinRegex(a)}),Y(\"ddd\",function(a,b){return b.weekdaysShortRegex(a)}),Y(\"dddd\",function(a,b){return b.weekdaysRegex(a)}),ba([\"dd\",\"ddd\",\"dddd\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);","// if we didn't get a weekday name, mark the date as invalid","null!=e?b.d=e:l(c).invalidWeekday=a}),ba([\"d\",\"e\",\"E\"],function(a,b,c,d){b[d]=t(a)});","// LOCALES","var kf=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),lf=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),mf=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),nf=Se,of=Se,pf=Se;T(\"H\",[\"HH\",2],0,\"hour\"),T(\"h\",[\"hh\",2],0,Qa),T(\"k\",[\"kk\",2],0,Ra),T(\"hmm\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)}),T(\"hmmss\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)+S(this.seconds(),2)}),T(\"Hmm\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)}),T(\"Hmmss\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)+S(this.seconds(),2)}),Sa(\"a\",!0),Sa(\"A\",!1),","// ALIASES","I(\"hour\",\"h\"),","// PRIORITY","L(\"hour\",13),Y(\"a\",Ta),Y(\"A\",Ta),Y(\"H\",He),Y(\"h\",He),Y(\"HH\",He,De),Y(\"hh\",He,De),Y(\"hmm\",Ie),Y(\"hmmss\",Je),Y(\"Hmm\",Ie),Y(\"Hmmss\",Je),aa([\"H\",\"HH\"],Ye),aa([\"a\",\"A\"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),aa([\"h\",\"hh\"],function(a,b,c){b[Ye]=t(a),l(c).bigHour=!0}),aa(\"hmm\",function(a,b,c){var d=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d)),l(c).bigHour=!0}),aa(\"hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d,2)),b[$e]=t(a.substr(e)),l(c).bigHour=!0}),aa(\"Hmm\",function(a,b,c){var d=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d))}),aa(\"Hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d,2)),b[$e]=t(a.substr(e))});var qf,rf=/[ap]\\.?m?\\.?/i,sf=N(\"Hours\",!0),tf={calendar:qe,longDateFormat:re,invalidDate:se,ordinal:te,ordinalParse:ue,relativeTime:ve,months:df,monthsShort:ef,week:jf,weekdays:kf,weekdaysMin:mf,weekdaysShort:lf,meridiemParse:rf},uf={},vf=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,wf=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,xf=/Z|[+-]\\d\\d(?::?\\d\\d)?/,yf=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],","// YYYYMM is NOT allowed by the standard","[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],zf=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Af=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=w(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),","// constant that refers to the ISO standard","a.ISO_8601=function(){};var Bf=w(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?this\u003ea?this:a:n()}),Cf=w(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?a\u003ethis?this:a:n()}),Df=function(){return Date.now?Date.now():+new Date};xb(\"Z\",\":\"),xb(\"ZZ\",\"\"),","// PARSING","Y(\"Z\",Qe),Y(\"ZZ\",Qe),aa([\"Z\",\"ZZ\"],function(a,b,c){c._useUTC=!0,c._tzm=yb(Qe,a)});","// HELPERS","// timezone chunker","// '+10:00' \u003e ['10',  '00']","// '-1530'  \u003e ['-15', '30']","var Ef=/([\\+\\-]|\\d\\d)/gi;","// HOOKS","// This function will be called whenever a moment is mutated.","// It is intended to keep the offset in sync with the timezone.","a.updateOffset=function(){};","// ASP.NET json date format regex","var Ff=/^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/,Gf=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Hf=Rb(1,\"add\"),If=Rb(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",a.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Jf=w(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});","// FORMATTING","T(0,[\"gg\",2],0,function(){return this.weekYear()%100}),T(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),xc(\"gggg\",\"weekYear\"),xc(\"ggggg\",\"weekYear\"),xc(\"GGGG\",\"isoWeekYear\"),xc(\"GGGGG\",\"isoWeekYear\"),","// ALIASES","I(\"weekYear\",\"gg\"),I(\"isoWeekYear\",\"GG\"),","// PRIORITY","L(\"weekYear\",1),L(\"isoWeekYear\",1),","// PARSING","Y(\"G\",Oe),Y(\"g\",Oe),Y(\"GG\",He,De),Y(\"gg\",He,De),Y(\"GGGG\",Le,Fe),Y(\"gggg\",Le,Fe),Y(\"GGGGG\",Me,Ge),Y(\"ggggg\",Me,Ge),ba([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(a,b,c,d){b[d.substr(0,2)]=t(a)}),ba([\"gg\",\"GG\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),","// FORMATTING","T(\"Q\",0,\"Qo\",\"quarter\"),","// ALIASES","I(\"quarter\",\"Q\"),","// PRIORITY","L(\"quarter\",7),","// PARSING","Y(\"Q\",Ce),aa(\"Q\",function(a,b){b[We]=3*(t(a)-1)}),","// FORMATTING","T(\"D\",[\"DD\",2],\"Do\",\"date\"),","// ALIASES","I(\"date\",\"D\"),","// PRIOROITY","L(\"date\",9),","// PARSING","Y(\"D\",He),Y(\"DD\",He,De),Y(\"Do\",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),aa([\"D\",\"DD\"],Xe),aa(\"Do\",function(a,b){b[Xe]=t(a.match(He)[0],10)});","// MOMENTS","var Kf=N(\"Date\",!0);","// FORMATTING","T(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),","// ALIASES","I(\"dayOfYear\",\"DDD\"),","// PRIORITY","L(\"dayOfYear\",4),","// PARSING","Y(\"DDD\",Ke),Y(\"DDDD\",Ee),aa([\"DDD\",\"DDDD\"],function(a,b,c){c._dayOfYear=t(a)}),","// FORMATTING","T(\"m\",[\"mm\",2],0,\"minute\"),","// ALIASES","I(\"minute\",\"m\"),","// PRIORITY","L(\"minute\",14),","// PARSING","Y(\"m\",He),Y(\"mm\",He,De),aa([\"m\",\"mm\"],Ze);","// MOMENTS","var Lf=N(\"Minutes\",!1);","// FORMATTING","T(\"s\",[\"ss\",2],0,\"second\"),","// ALIASES","I(\"second\",\"s\"),","// PRIORITY","L(\"second\",15),","// PARSING","Y(\"s\",He),Y(\"ss\",He,De),aa([\"s\",\"ss\"],$e);","// MOMENTS","var Mf=N(\"Seconds\",!1);","// FORMATTING","T(\"S\",0,0,function(){return~~(this.millisecond()/100)}),T(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),T(0,[\"SSS\",3],0,\"millisecond\"),T(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),T(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),T(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),T(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),T(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),T(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),","// ALIASES","I(\"millisecond\",\"ms\"),","// PRIORITY","L(\"millisecond\",16),","// PARSING","Y(\"S\",Ke,Ce),Y(\"SS\",Ke,De),Y(\"SSS\",Ke,Ee);var Nf;for(Nf=\"SSSS\";Nf.length\u003c=9;Nf+=\"S\")Y(Nf,Ne);for(Nf=\"S\";Nf.length\u003c=9;Nf+=\"S\")aa(Nf,Gc);","// MOMENTS","var Of=N(\"Milliseconds\",!1);","// FORMATTING","T(\"z\",0,0,\"zoneAbbr\"),T(\"zz\",0,0,\"zoneName\");var Pf=q.prototype;Pf.add=Hf,Pf.calendar=Ub,Pf.clone=Vb,Pf.diff=ac,Pf.endOf=mc,Pf.format=ec,Pf.from=fc,Pf.fromNow=gc,Pf.to=hc,Pf.toNow=ic,Pf.get=Q,Pf.invalidAt=vc,Pf.isAfter=Wb,Pf.isBefore=Xb,Pf.isBetween=Yb,Pf.isSame=Zb,Pf.isSameOrAfter=$b,Pf.isSameOrBefore=_b,Pf.isValid=tc,Pf.lang=Jf,Pf.locale=jc,Pf.localeData=kc,Pf.max=Cf,Pf.min=Bf,Pf.parsingFlags=uc,Pf.set=R,Pf.startOf=lc,Pf.subtract=If,Pf.toArray=qc,Pf.toObject=rc,Pf.toDate=pc,Pf.toISOString=dc,Pf.toJSON=sc,Pf.toString=cc,Pf.unix=oc,Pf.valueOf=nc,Pf.creationData=wc,","// Year","Pf.year=hf,Pf.isLeapYear=qa,","// Week Year","Pf.weekYear=yc,Pf.isoWeekYear=zc,","// Quarter","Pf.quarter=Pf.quarters=Ec,","// Month","Pf.month=ja,Pf.daysInMonth=ka,","// Week","Pf.week=Pf.weeks=Aa,Pf.isoWeek=Pf.isoWeeks=Ba,Pf.weeksInYear=Bc,Pf.isoWeeksInYear=Ac,","// Day","Pf.date=Kf,Pf.day=Pf.days=Ja,Pf.weekday=Ka,Pf.isoWeekday=La,Pf.dayOfYear=Fc,","// Hour","Pf.hour=Pf.hours=sf,","// Minute","Pf.minute=Pf.minutes=Lf,","// Second","Pf.second=Pf.seconds=Mf,","// Millisecond","Pf.millisecond=Pf.milliseconds=Of,","// Offset","Pf.utcOffset=Bb,Pf.utc=Db,Pf.local=Eb,Pf.parseZone=Fb,Pf.hasAlignedHourOffset=Gb,Pf.isDST=Hb,Pf.isLocal=Jb,Pf.isUtcOffset=Kb,Pf.isUtc=Lb,Pf.isUTC=Lb,","// Timezone","Pf.zoneAbbr=Hc,Pf.zoneName=Ic,","// Deprecations","Pf.dates=w(\"dates accessor is deprecated. Use date instead.\",Kf),Pf.months=w(\"months accessor is deprecated. Use month instead\",ja),Pf.years=w(\"years accessor is deprecated. Use year instead\",hf),Pf.zone=w(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",Cb),Pf.isDSTShifted=w(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",Ib);var Qf=Pf,Rf=B.prototype;Rf.calendar=C,Rf.longDateFormat=D,Rf.invalidDate=E,Rf.ordinal=F,Rf.preparse=Lc,Rf.postformat=Lc,Rf.relativeTime=G,Rf.pastFuture=H,Rf.set=z,","// Month","Rf.months=ea,Rf.monthsShort=fa,Rf.monthsParse=ha,Rf.monthsRegex=ma,Rf.monthsShortRegex=la,","// Week","Rf.week=xa,Rf.firstDayOfYear=za,Rf.firstDayOfWeek=ya,","// Day of Week","Rf.weekdays=Ea,Rf.weekdaysMin=Ga,Rf.weekdaysShort=Fa,Rf.weekdaysParse=Ia,Rf.weekdaysRegex=Ma,Rf.weekdaysShortRegex=Na,Rf.weekdaysMinRegex=Oa,","// Hours","Rf.isPM=Ua,Rf.meridiem=Va,Za(\"en\",{ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),","// Side effect imports","a.lang=w(\"moment.lang is deprecated. Use moment.locale instead.\",Za),a.langData=w(\"moment.langData is deprecated. Use moment.localeData instead.\",ab);var Sf=Math.abs,Tf=cd(\"ms\"),Uf=cd(\"s\"),Vf=cd(\"m\"),Wf=cd(\"h\"),Xf=cd(\"d\"),Yf=cd(\"w\"),Zf=cd(\"M\"),$f=cd(\"y\"),_f=ed(\"milliseconds\"),ag=ed(\"seconds\"),bg=ed(\"minutes\"),cg=ed(\"hours\"),dg=ed(\"days\"),eg=ed(\"months\"),fg=ed(\"years\"),gg=Math.round,hg={s:45,// seconds to minute","m:45,// minutes to hour","h:22,// hours to day","d:26,// days to month","M:11},ig=Math.abs,jg=vb.prototype;jg.abs=Uc,jg.add=Wc,jg.subtract=Xc,jg.as=ad,jg.asMilliseconds=Tf,jg.asSeconds=Uf,jg.asMinutes=Vf,jg.asHours=Wf,jg.asDays=Xf,jg.asWeeks=Yf,jg.asMonths=Zf,jg.asYears=$f,jg.valueOf=bd,jg._bubble=Zc,jg.get=dd,jg.milliseconds=_f,jg.seconds=ag,jg.minutes=bg,jg.hours=cg,jg.days=dg,jg.weeks=fd,jg.months=eg,jg.years=fg,jg.humanize=kd,jg.toISOString=ld,jg.toString=ld,jg.toJSON=ld,jg.locale=jc,jg.localeData=kc,","// Deprecations","jg.toIsoString=w(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",ld),jg.lang=Jf,","// Side effect imports","// FORMATTING","T(\"X\",0,0,\"unix\"),T(\"x\",0,0,\"valueOf\"),","// PARSING","Y(\"x\",Oe),Y(\"X\",Re),aa(\"X\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),aa(\"x\",function(a,b,c){c._d=new Date(t(a))}),a.version=\"2.14.1\",b(rb),a.fn=Qf,a.min=tb,a.max=ub,a.now=Df,a.utc=j,a.unix=Jc,a.months=Pc,a.isDate=f,a.locale=Za,a.invalid=n,a.duration=Mb,a.isMoment=r,a.weekdays=Rc,a.parseZone=Kc,a.localeData=ab,a.isDuration=wb,a.monthsShort=Qc,a.weekdaysMin=Tc,a.defineLocale=$a,a.updateLocale=_a,a.locales=bb,a.weekdaysShort=Sc,a.normalizeUnits=J,a.relativeTimeRounding=id,a.relativeTimeThreshold=jd,a.calendarFormat=Tb,a.prototype=Qf;var kg=a,lg=(kg.defineLocale(\"af\",{months:\"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),weekdaysShort:\"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),weekdaysMin:\"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),meridiemParse:/vm|nm/i,isPM:function(a){return/^nm$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"vm\":\"VM\":c?\"nm\":\"NM\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Vandag om] LT\",nextDay:\"[Môre om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[Gister om] LT\",lastWeek:\"[Laas] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oor %s\",past:\"%s gelede\",s:\"'n paar sekondes\",m:\"'n minuut\",mm:\"%d minute\",h:\"'n uur\",hh:\"%d ure\",d:\"'n dag\",dd:\"%d dae\",M:\"'n maand\",MM:\"%d maande\",y:\"'n jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Maandag is die eerste dag van die week.","doy:4}}),kg.defineLocale(\"ar-ma\",{months:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),weekdays:\"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),{1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),mg={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},ng=(kg.defineLocale(\"ar-sa\",{months:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},preparse:function(a){return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return mg[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return lg[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),kg.defineLocale(\"ar-tn\",{months:\"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),og={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},pg=function(a){return 0===a?0:1===a?1:2===a?2:a%100\u003e=3\u0026\u002610\u003e=a%100?3:a%100\u003e=11?4:5},qg={s:[\"أقل من ثانية\",\"ثانية واحدة\",[\"ثانيتان\",\"ثانيتين\"],\"%d ثوان\",\"%d ثانية\",\"%d ثانية\"],m:[\"أقل من دقيقة\",\"دقيقة واحدة\",[\"دقيقتان\",\"دقيقتين\"],\"%d دقائق\",\"%d دقيقة\",\"%d دقيقة\"],h:[\"أقل من ساعة\",\"ساعة واحدة\",[\"ساعتان\",\"ساعتين\"],\"%d ساعات\",\"%d ساعة\",\"%d ساعة\"],d:[\"أقل من يوم\",\"يوم واحد\",[\"يومان\",\"يومين\"],\"%d أيام\",\"%d يومًا\",\"%d يوم\"],M:[\"أقل من شهر\",\"شهر واحد\",[\"شهران\",\"شهرين\"],\"%d أشهر\",\"%d شهرا\",\"%d شهر\"],y:[\"أقل من عام\",\"عام واحد\",[\"عامان\",\"عامين\"],\"%d أعوام\",\"%d عامًا\",\"%d عام\"]},rg=function(a){return function(b,c,d,e){var f=pg(b),g=qg[a][pg(b)];return 2===f\u0026\u0026(g=g[c?0:1]),g.replace(/%d/i,b)}},sg=[\"كانون الثاني يناير\",\"شباط فبراير\",\"آذار مارس\",\"نيسان أبريل\",\"أيار مايو\",\"حزيران يونيو\",\"تموز يوليو\",\"آب أغسطس\",\"أيلول سبتمبر\",\"تشرين الأول أكتوبر\",\"تشرين الثاني نوفمبر\",\"كانون الأول ديسمبر\"],tg=(kg.defineLocale(\"ar\",{months:sg,monthsShort:sg,weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/‏M/‏YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم عند الساعة] LT\",nextDay:\"[غدًا عند الساعة] LT\",nextWeek:\"dddd [عند الساعة] LT\",lastDay:\"[أمس عند الساعة] LT\",lastWeek:\"dddd [عند الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"بعد %s\",past:\"منذ %s\",s:rg(\"s\"),m:rg(\"m\"),mm:rg(\"m\"),h:rg(\"h\"),hh:rg(\"h\"),d:rg(\"d\"),dd:rg(\"d\"),M:rg(\"M\"),MM:rg(\"M\"),y:rg(\"y\"),yy:rg(\"y\")},preparse:function(a){return a.replace(/\\u200f/g,\"\").replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return og[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ng[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),{1:\"-inci\",5:\"-inci\",8:\"-inci\",70:\"-inci\",80:\"-inci\",2:\"-nci\",7:\"-nci\",20:\"-nci\",50:\"-nci\",3:\"-üncü\",4:\"-üncü\",100:\"-üncü\",6:\"-ncı\",9:\"-uncu\",10:\"-uncu\",30:\"-uncu\",60:\"-ıncı\",90:\"-ıncı\"}),ug=(kg.defineLocale(\"az\",{months:\"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr\".split(\"_\"),monthsShort:\"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek\".split(\"_\"),weekdays:\"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə\".split(\"_\"),weekdaysShort:\"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən\".split(\"_\"),weekdaysMin:\"Bz_BE_ÇA_Çə_CA_Cü_Şə\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[sabah saat] LT\",nextWeek:\"[gələn həftə] dddd [saat] LT\",lastDay:\"[dünən] LT\",lastWeek:\"[keçən həftə] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s əvvəl\",s:\"birneçə saniyyə\",m:\"bir dəqiqə\",mm:\"%d dəqiqə\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir il\",yy:\"%d il\"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(a){return/^(gündüz|axşam)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"gecə\":12\u003ea?\"səhər\":17\u003ea?\"gündüz\":\"axşam\"},ordinalParse:/\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(a){if(0===a)// special case for zero","return a+\"-ıncı\";var b=a%10,c=a%100-b,d=a\u003e=100?100:null;return a+(tg[b]||tg[c]||tg[d])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"be\",{months:{format:\"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня\".split(\"_\"),standalone:\"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань\".split(\"_\")},monthsShort:\"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж\".split(\"_\"),weekdays:{format:\"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу\".split(\"_\"),standalone:\"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/},weekdaysShort:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сёння ў] LT\",nextDay:\"[Заўтра ў] LT\",lastDay:\"[Учора ў] LT\",nextWeek:function(){return\"[У] dddd [ў] LT\"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return\"[У мінулую] dddd [ў] LT\";case 1:case 2:case 4:return\"[У мінулы] dddd [ў] LT\"}},sameElse:\"L\"},relativeTime:{future:\"праз %s\",past:\"%s таму\",s:\"некалькі секунд\",m:nd,mm:nd,h:nd,hh:nd,d:\"дзень\",dd:nd,M:\"месяц\",MM:nd,y:\"год\",yy:nd},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(a){return/^(дня|вечара)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночы\":12\u003ea?\"раніцы\":17\u003ea?\"дня\":\"вечара\"},ordinalParse:/\\d{1,2}-(і|ы|га)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a%10!==2\u0026\u0026a%10!==3||a%100===12||a%100===13?a+\"-ы\":a+\"-і\";case\"D\":return a+\"-га\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"bg\",{months:\"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Днес в] LT\",nextDay:\"[Утре в] LT\",nextWeek:\"dddd [в] LT\",lastDay:\"[Вчера в] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[В изминалата] dddd [в] LT\";case 1:case 2:case 4:case 5:return\"[В изминалия] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"след %s\",past:\"преди %s\",s:\"няколко секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дни\",M:\"месец\",MM:\"%d месеца\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"১\",2:\"২\",3:\"৩\",4:\"৪\",5:\"৫\",6:\"৬\",7:\"৭\",8:\"৮\",9:\"৯\",0:\"০\"}),vg={\"১\":\"1\",\"২\":\"2\",\"৩\":\"3\",\"৪\":\"4\",\"৫\":\"5\",\"৬\":\"6\",\"৭\":\"7\",\"৮\":\"8\",\"৯\":\"9\",\"০\":\"0\"},wg=(kg.defineLocale(\"bn\",{months:\"জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর\".split(\"_\"),monthsShort:\"জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্\".split(\"_\"),weekdays:\"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার\".split(\"_\"),weekdaysShort:\"রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি\".split(\"_\"),weekdaysMin:\"রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি\".split(\"_\"),longDateFormat:{LT:\"A h:mm সময়\",LTS:\"A h:mm:ss সময়\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm সময়\",LLLL:\"dddd, D MMMM YYYY, A h:mm সময়\"},calendar:{sameDay:\"[আজ] LT\",nextDay:\"[আগামীকাল] LT\",nextWeek:\"dddd, LT\",lastDay:\"[গতকাল] LT\",lastWeek:\"[গত] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s পরে\",past:\"%s আগে\",s:\"কয়েক সেকেন্ড\",m:\"এক মিনিট\",mm:\"%d মিনিট\",h:\"এক ঘন্টা\",hh:\"%d ঘন্টা\",d:\"এক দিন\",dd:\"%d দিন\",M:\"এক মাস\",MM:\"%d মাস\",y:\"এক বছর\",yy:\"%d বছর\"},preparse:function(a){return a.replace(/[১২৩৪৫৬৭৮৯০]/g,function(a){return vg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ug[a]})},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"রাত\"===b\u0026\u0026a\u003e=4||\"দুপুর\"===b\u0026\u00265\u003ea||\"বিকাল\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"রাত\":10\u003ea?\"সকাল\":17\u003ea?\"দুপুর\":20\u003ea?\"বিকাল\":\"রাত\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),{1:\"༡\",2:\"༢\",3:\"༣\",4:\"༤\",5:\"༥\",6:\"༦\",7:\"༧\",8:\"༨\",9:\"༩\",0:\"༠\"}),xg={\"༡\":\"1\",\"༢\":\"2\",\"༣\":\"3\",\"༤\":\"4\",\"༥\":\"5\",\"༦\":\"6\",\"༧\":\"7\",\"༨\":\"8\",\"༩\":\"9\",\"༠\":\"0\"},yg=(kg.defineLocale(\"bo\",{months:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),monthsShort:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),weekdays:\"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་\".split(\"_\"),weekdaysShort:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),weekdaysMin:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[དི་རིང] LT\",nextDay:\"[སང་ཉིན] LT\",nextWeek:\"[བདུན་ཕྲག་རྗེས་མ], LT\",lastDay:\"[ཁ་སང] LT\",lastWeek:\"[བདུན་ཕྲག་མཐའ་མ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ལ་\",past:\"%s སྔན་ལ\",s:\"ལམ་སང\",m:\"སྐར་མ་གཅིག\",mm:\"%d སྐར་མ\",h:\"ཆུ་ཚོད་གཅིག\",hh:\"%d ཆུ་ཚོད\",d:\"ཉིན་གཅིག\",dd:\"%d ཉིན་\",M:\"ཟླ་བ་གཅིག\",MM:\"%d ཟླ་བ\",y:\"ལོ་གཅིག\",yy:\"%d ལོ\"},preparse:function(a){return a.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,function(a){return xg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return wg[a]})},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"མཚན་མོ\"===b\u0026\u0026a\u003e=4||\"ཉིན་གུང\"===b\u0026\u00265\u003ea||\"དགོང་དག\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"མཚན་མོ\":10\u003ea?\"ཞོགས་ཀས\":17\u003ea?\"ཉིན་གུང\":20\u003ea?\"དགོང་དག\":\"མཚན་མོ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"br\",{months:\"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu\".split(\"_\"),monthsShort:\"Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker\".split(\"_\"),weekdays:\"Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn\".split(\"_\"),weekdaysShort:\"Sul_Lun_Meu_Mer_Yao_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Lu_Me_Mer_Ya_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h[e]mm A\",LTS:\"h[e]mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [a viz] MMMM YYYY\",LLL:\"D [a viz] MMMM YYYY h[e]mm A\",LLLL:\"dddd, D [a viz] MMMM YYYY h[e]mm A\"},calendar:{sameDay:\"[Hiziv da] LT\",nextDay:\"[Warc'hoazh da] LT\",nextWeek:\"dddd [da] LT\",lastDay:\"[Dec'h da] LT\",lastWeek:\"dddd [paset da] LT\",sameElse:\"L\"},relativeTime:{future:\"a-benn %s\",past:\"%s 'zo\",s:\"un nebeud segondennoù\",m:\"ur vunutenn\",mm:od,h:\"un eur\",hh:\"%d eur\",d:\"un devezh\",dd:od,M:\"ur miz\",MM:od,y:\"ur bloaz\",yy:pd},ordinalParse:/\\d{1,2}(añ|vet)/,ordinal:function(a){var b=1===a?\"añ\":\"vet\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"bs\",{months:\"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:td,mm:td,h:td,hh:td,d:\"dan\",dd:td,M:\"mjesec\",MM:td,y:\"godinu\",yy:td},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ca\",{months:\"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre\".split(\"_\"),monthsShort:\"gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte\".split(\"_\"),weekdaysShort:\"dg._dl._dt._dc._dj._dv._ds.\".split(\"_\"),weekdaysMin:\"Dg_Dl_Dt_Dc_Dj_Dv_Ds\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[avui a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextDay:function(){return\"[demà a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextWeek:function(){return\"dddd [a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastDay:function(){return\"[ahir a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [passat a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"fa %s\",s:\"uns segons\",m:\"un minut\",mm:\"%d minuts\",h:\"una hora\",hh:\"%d hores\",d:\"un dia\",dd:\"%d dies\",M:\"un mes\",MM:\"%d mesos\",y:\"un any\",yy:\"%d anys\"},ordinalParse:/\\d{1,2}(r|n|t|è|a)/,ordinal:function(a,b){var c=1===a?\"r\":2===a?\"n\":3===a?\"r\":4===a?\"t\":\"è\";return\"w\"!==b\u0026\u0026\"W\"!==b||(c=\"a\"),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\")),zg=\"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\"),Ag=(kg.defineLocale(\"cs\",{months:yg,monthsShort:zg,monthsParse:function(a,b){var c,d=[];for(c=0;12\u003ec;c++)","// use custom parser to solve problem with July (červenec)","d[c]=new RegExp(\"^\"+a[c]+\"$|^\"+b[c]+\"$\",\"i\");return d}(yg,zg),shortMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(zg),longMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(yg),weekdays:\"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),weekdaysShort:\"ne_po_út_st_čt_pá_so\".split(\"_\"),weekdaysMin:\"ne_po_út_st_čt_pá_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},calendar:{sameDay:\"[dnes v] LT\",nextDay:\"[zítra v] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v neděli v] LT\";case 1:case 2:return\"[v] dddd [v] LT\";case 3:return\"[ve středu v] LT\";case 4:return\"[ve čtvrtek v] LT\";case 5:return\"[v pátek v] LT\";case 6:return\"[v sobotu v] LT\"}},lastDay:\"[včera v] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulou neděli v] LT\";case 1:case 2:return\"[minulé] dddd [v] LT\";case 3:return\"[minulou středu v] LT\";case 4:case 5:return\"[minulý] dddd [v] LT\";case 6:return\"[minulou sobotu v] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"před %s\",s:vd,m:vd,mm:vd,h:vd,hh:vd,d:vd,dd:vd,M:vd,MM:vd,y:vd,yy:vd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"cv\",{months:\"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав\".split(\"_\"),monthsShort:\"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш\".split(\"_\"),weekdays:\"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун\".split(\"_\"),weekdaysShort:\"выр_тун_ытл_юн_кӗҫ_эрн_шӑм\".split(\"_\"),weekdaysMin:\"вр_тн_ыт_юн_кҫ_эр_шм\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]\",LLL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\",LLLL:\"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\"},calendar:{sameDay:\"[Паян] LT [сехетре]\",nextDay:\"[Ыран] LT [сехетре]\",lastDay:\"[Ӗнер] LT [сехетре]\",nextWeek:\"[Ҫитес] dddd LT [сехетре]\",lastWeek:\"[Иртнӗ] dddd LT [сехетре]\",sameElse:\"L\"},relativeTime:{future:function(a){var b=/сехет$/i.exec(a)?\"рен\":/ҫул$/i.exec(a)?\"тан\":\"ран\";return a+b},past:\"%s каялла\",s:\"пӗр-ик ҫеккунт\",m:\"пӗр минут\",mm:\"%d минут\",h:\"пӗр сехет\",hh:\"%d сехет\",d:\"пӗр кун\",dd:\"%d кун\",M:\"пӗр уйӑх\",MM:\"%d уйӑх\",y:\"пӗр ҫул\",yy:\"%d ҫул\"},ordinalParse:/\\d{1,2}-мӗш/,ordinal:\"%d-мӗш\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"cy\",{months:\"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr\".split(\"_\"),monthsShort:\"Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag\".split(\"_\"),weekdays:\"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn\".split(\"_\"),weekdaysShort:\"Sul_Llun_Maw_Mer_Iau_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Ll_Ma_Me_Ia_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,","// time formats are the same as en-gb","longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Heddiw am] LT\",nextDay:\"[Yfory am] LT\",nextWeek:\"dddd [am] LT\",lastDay:\"[Ddoe am] LT\",lastWeek:\"dddd [diwethaf am] LT\",sameElse:\"L\"},relativeTime:{future:\"mewn %s\",past:\"%s yn ôl\",s:\"ychydig eiliadau\",m:\"munud\",mm:\"%d munud\",h:\"awr\",hh:\"%d awr\",d:\"diwrnod\",dd:\"%d diwrnod\",M:\"mis\",MM:\"%d mis\",y:\"blwyddyn\",yy:\"%d flynedd\"},ordinalParse:/\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,","// traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","ordinal:function(a){var b=a,c=\"\",d=[\"\",\"af\",\"il\",\"ydd\",\"ydd\",\"ed\",\"ed\",\"ed\",\"fed\",\"fed\",\"fed\",// 1af to 10fed","\"eg\",\"fed\",\"eg\",\"eg\",\"fed\",\"eg\",\"eg\",\"fed\",\"eg\",\"fed\"];return b\u003e20?c=40===b||50===b||60===b||80===b||100===b?\"fed\":\"ain\":b\u003e0\u0026\u0026(c=d[b]),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"da\",{months:\"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"søn_man_tir_ons_tor_fre_lør\".split(\"_\"),weekdaysMin:\"sø_ma_ti_on_to_fr_lø\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd [d.] D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[I dag kl.] LT\",nextDay:\"[I morgen kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[I går kl.] LT\",lastWeek:\"[sidste] dddd [kl] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"få sekunder\",m:\"et minut\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dage\",M:\"en måned\",MM:\"%d måneder\",y:\"et år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"de-at\",{months:\"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[heute um] LT [Uhr]\",sameElse:\"L\",nextDay:\"[morgen um] LT [Uhr]\",nextWeek:\"dddd [um] LT [Uhr]\",lastDay:\"[gestern um] LT [Uhr]\",lastWeek:\"[letzten] dddd [um] LT [Uhr]\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:\"ein paar Sekunden\",m:wd,mm:\"%d Minuten\",h:wd,hh:\"%d Stunden\",d:wd,dd:wd,M:wd,MM:wd,y:wd,yy:wd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"de\",{months:\"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},calendar:{sameDay:\"[heute um] LT [Uhr]\",sameElse:\"L\",nextDay:\"[morgen um] LT [Uhr]\",nextWeek:\"dddd [um] LT [Uhr]\",lastDay:\"[gestern um] LT [Uhr]\",lastWeek:\"[letzten] dddd [um] LT [Uhr]\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:\"ein paar Sekunden\",m:xd,mm:\"%d Minuten\",h:xd,hh:\"%d Stunden\",d:xd,dd:xd,M:xd,MM:xd,y:xd,yy:xd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"ޖެނުއަރީ\",\"ފެބްރުއަރީ\",\"މާރިޗު\",\"އޭޕްރީލު\",\"މޭ\",\"ޖޫން\",\"ޖުލައި\",\"އޯގަސްޓު\",\"ސެޕްޓެމްބަރު\",\"އޮކްޓޯބަރު\",\"ނޮވެމްބަރު\",\"ޑިސެމްބަރު\"]),Bg=[\"އާދިއްތަ\",\"ހޯމަ\",\"އަންގާރަ\",\"ބުދަ\",\"ބުރާސްފަތި\",\"ހުކުރު\",\"ހޮނިހިރު\"],Cg=(kg.defineLocale(\"dv\",{months:Ag,monthsShort:Ag,weekdays:Bg,weekdaysShort:Bg,weekdaysMin:\"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/M/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/މކ|މފ/,isPM:function(a){return\"މފ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"މކ\":\"މފ\"},calendar:{sameDay:\"[މިއަދު] LT\",nextDay:\"[މާދަމާ] LT\",nextWeek:\"dddd LT\",lastDay:\"[އިއްޔެ] LT\",lastWeek:\"[ފާއިތުވި] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"ތެރޭގައި %s\",past:\"ކުރިން %s\",s:\"ސިކުންތުކޮޅެއް\",m:\"މިނިޓެއް\",mm:\"މިނިޓު %d\",h:\"ގަޑިއިރެއް\",hh:\"ގަޑިއިރު %d\",d:\"ދުވަހެއް\",dd:\"ދުވަސް %d\",M:\"މަހެއް\",MM:\"މަސް %d\",y:\"އަހަރެއް\",yy:\"އަހަރު %d\"},preparse:function(a){return a.replace(/،/g,\",\")},postformat:function(a){return a.replace(/,/g,\"،\")},week:{dow:7,// Sunday is the first day of the week.","doy:12}}),kg.defineLocale(\"el\",{monthsNominativeEl:\"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),monthsGenitiveEl:\"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου\".split(\"_\"),months:function(a,b){return/D/.test(b.substring(0,b.indexOf(\"MMMM\")))?this._monthsGenitiveEl[a.month()]:this._monthsNominativeEl[a.month()]},monthsShort:\"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ\".split(\"_\"),weekdays:\"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),weekdaysShort:\"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),weekdaysMin:\"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),meridiem:function(a,b,c){return a\u003e11?c?\"μμ\":\"ΜΜ\":c?\"πμ\":\"ΠΜ\"},isPM:function(a){return\"μ\"===(a+\"\").toLowerCase()[0]},meridiemParse:/[ΠΜ]\\.?Μ?\\.?/i,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendarEl:{sameDay:\"[Σήμερα {}] LT\",nextDay:\"[Αύριο {}] LT\",nextWeek:\"dddd [{}] LT\",lastDay:\"[Χθες {}] LT\",lastWeek:function(){switch(this.day()){case 6:return\"[το προηγούμενο] dddd [{}] LT\";default:return\"[την προηγούμενη] dddd [{}] LT\"}},sameElse:\"L\"},calendar:function(a,b){var c=this._calendarEl[a],d=b\u0026\u0026b.hours();return y(c)\u0026\u0026(c=c.apply(b)),c.replace(\"{}\",d%12===1?\"στη\":\"στις\")},relativeTime:{future:\"σε %s\",past:\"%s πριν\",s:\"λίγα δευτερόλεπτα\",m:\"ένα λεπτό\",mm:\"%d λεπτά\",h:\"μία ώρα\",hh:\"%d ώρες\",d:\"μία μέρα\",dd:\"%d μέρες\",M:\"ένας μήνας\",MM:\"%d μήνες\",y:\"ένας χρόνος\",yy:\"%d χρόνια\"},ordinalParse:/\\d{1,2}η/,ordinal:\"%dη\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-au\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-ca\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"YYYY-MM-DD\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),kg.defineLocale(\"en-gb\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-ie\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-nz\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"eo\",{months:\"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec\".split(\"_\"),weekdays:\"Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato\".split(\"_\"),weekdaysShort:\"Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Ĵa_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D[-an de] MMMM, YYYY\",LLL:\"D[-an de] MMMM, YYYY HH:mm\",LLLL:\"dddd, [la] D[-an de] MMMM, YYYY HH:mm\"},meridiemParse:/[ap]\\.t\\.m/i,isPM:function(a){return\"p\"===a.charAt(0).toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"p.t.m.\":\"P.T.M.\":c?\"a.t.m.\":\"A.T.M.\"},calendar:{sameDay:\"[Hodiaŭ je] LT\",nextDay:\"[Morgaŭ je] LT\",nextWeek:\"dddd [je] LT\",lastDay:\"[Hieraŭ je] LT\",lastWeek:\"[pasinta] dddd [je] LT\",sameElse:\"L\"},relativeTime:{future:\"je %s\",past:\"antaŭ %s\",s:\"sekundoj\",m:\"minuto\",mm:\"%d minutoj\",h:\"horo\",hh:\"%d horoj\",d:\"tago\",//ne 'diurno', ĉar estas uzita por proksimumo","dd:\"%d tagoj\",M:\"monato\",MM:\"%d monatoj\",y:\"jaro\",yy:\"%d jaroj\"},ordinalParse:/\\d{1,2}a/,ordinal:\"%da\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),Dg=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),Eg=(kg.defineLocale(\"es-do\",{months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Dg[a.month()]:Cg[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),Fg=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),Gg=(kg.defineLocale(\"es\",{months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Fg[a.month()]:Eg[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"et\",{months:\"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember\".split(\"_\"),monthsShort:\"jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets\".split(\"_\"),weekdays:\"pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev\".split(\"_\"),weekdaysShort:\"P_E_T_K_N_R_L\".split(\"_\"),weekdaysMin:\"P_E_T_K_N_R_L\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[Täna,] LT\",nextDay:\"[Homme,] LT\",nextWeek:\"[Järgmine] dddd LT\",lastDay:\"[Eile,] LT\",lastWeek:\"[Eelmine] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s pärast\",past:\"%s tagasi\",s:yd,m:yd,mm:yd,h:yd,hh:yd,d:yd,dd:\"%d päeva\",M:yd,MM:yd,y:yd,yy:yd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"eu\",{months:\"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua\".split(\"_\"),monthsShort:\"urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.\".split(\"_\"),monthsParseExact:!0,weekdays:\"igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata\".split(\"_\"),weekdaysShort:\"ig._al._ar._az._og._ol._lr.\".split(\"_\"),weekdaysMin:\"ig_al_ar_az_og_ol_lr\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY[ko] MMMM[ren] D[a]\",LLL:\"YYYY[ko] MMMM[ren] D[a] HH:mm\",LLLL:\"dddd, YYYY[ko] MMMM[ren] D[a] HH:mm\",l:\"YYYY-M-D\",ll:\"YYYY[ko] MMM D[a]\",lll:\"YYYY[ko] MMM D[a] HH:mm\",llll:\"ddd, YYYY[ko] MMM D[a] HH:mm\"},calendar:{sameDay:\"[gaur] LT[etan]\",nextDay:\"[bihar] LT[etan]\",nextWeek:\"dddd LT[etan]\",lastDay:\"[atzo] LT[etan]\",lastWeek:\"[aurreko] dddd LT[etan]\",sameElse:\"L\"},relativeTime:{future:\"%s barru\",past:\"duela %s\",s:\"segundo batzuk\",m:\"minutu bat\",mm:\"%d minutu\",h:\"ordu bat\",hh:\"%d ordu\",d:\"egun bat\",dd:\"%d egun\",M:\"hilabete bat\",MM:\"%d hilabete\",y:\"urte bat\",yy:\"%d urte\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"۱\",2:\"۲\",3:\"۳\",4:\"۴\",5:\"۵\",6:\"۶\",7:\"۷\",8:\"۸\",9:\"۹\",0:\"۰\"}),Hg={\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"۰\":\"0\"},Ig=(kg.defineLocale(\"fa\",{months:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),monthsShort:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),weekdays:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysShort:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysMin:\"ی_د_س_چ_پ_ج_ش\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(a){return/بعد از ظهر/.test(a)},meridiem:function(a,b,c){return 12\u003ea?\"قبل از ظهر\":\"بعد از ظهر\"},calendar:{sameDay:\"[امروز ساعت] LT\",nextDay:\"[فردا ساعت] LT\",nextWeek:\"dddd [ساعت] LT\",lastDay:\"[دیروز ساعت] LT\",lastWeek:\"dddd [پیش] [ساعت] LT\",sameElse:\"L\"},relativeTime:{future:\"در %s\",past:\"%s پیش\",s:\"چندین ثانیه\",m:\"یک دقیقه\",mm:\"%d دقیقه\",h:\"یک ساعت\",hh:\"%d ساعت\",d:\"یک روز\",dd:\"%d روز\",M:\"یک ماه\",MM:\"%d ماه\",y:\"یک سال\",yy:\"%d سال\"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return Hg[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return Gg[a]}).replace(/,/g,\"،\")},ordinalParse:/\\d{1,2}م/,ordinal:\"%dم\",week:{dow:6,// Saturday is the first day of the week.","doy:12}}),\"nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän\".split(\" \")),Jg=[\"nolla\",\"yhden\",\"kahden\",\"kolmen\",\"neljän\",\"viiden\",\"kuuden\",Ig[7],Ig[8],Ig[9]],Kg=(kg.defineLocale(\"fi\",{months:\"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu\".split(\"_\"),monthsShort:\"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu\".split(\"_\"),weekdays:\"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai\".split(\"_\"),weekdaysShort:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),weekdaysMin:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"Do MMMM[ta] YYYY\",LLL:\"Do MMMM[ta] YYYY, [klo] HH.mm\",LLLL:\"dddd, Do MMMM[ta] YYYY, [klo] HH.mm\",l:\"D.M.YYYY\",ll:\"Do MMM YYYY\",lll:\"Do MMM YYYY, [klo] HH.mm\",llll:\"ddd, Do MMM YYYY, [klo] HH.mm\"},calendar:{sameDay:\"[tänään] [klo] LT\",nextDay:\"[huomenna] [klo] LT\",nextWeek:\"dddd [klo] LT\",lastDay:\"[eilen] [klo] LT\",lastWeek:\"[viime] dddd[na] [klo] LT\",sameElse:\"L\"},relativeTime:{future:\"%s päästä\",past:\"%s sitten\",s:zd,m:zd,mm:zd,h:zd,hh:zd,d:zd,dd:zd,M:zd,MM:zd,y:zd,yy:zd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"fo\",{months:\"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),weekdays:\"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur\".split(\"_\"),weekdaysShort:\"sun_mán_týs_mik_hós_frí_ley\".split(\"_\"),weekdaysMin:\"su_má_tý_mi_hó_fr_le\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D. MMMM, YYYY HH:mm\"},calendar:{sameDay:\"[Í dag kl.] LT\",nextDay:\"[Í morgin kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[Í gjár kl.] LT\",lastWeek:\"[síðstu] dddd [kl] LT\",sameElse:\"L\"},relativeTime:{future:\"um %s\",past:\"%s síðani\",s:\"fá sekund\",m:\"ein minutt\",mm:\"%d minuttir\",h:\"ein tími\",hh:\"%d tímar\",d:\"ein dagur\",dd:\"%d dagar\",M:\"ein mánaði\",MM:\"%d mánaðir\",y:\"eitt ár\",yy:\"%d ár\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"fr-ca\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")}}),kg.defineLocale(\"fr-ch\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"fr\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|)/,ordinal:function(a){return a+(1===a?\"er\":\"\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.\".split(\"_\")),Lg=\"jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),Mg=(kg.defineLocale(\"fy\",{months:\"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Lg[a.month()]:Kg[a.month()]},monthsParseExact:!0,weekdays:\"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon\".split(\"_\"),weekdaysShort:\"si._mo._ti._wo._to._fr._so.\".split(\"_\"),weekdaysMin:\"Si_Mo_Ti_Wo_To_Fr_So\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[hjoed om] LT\",nextDay:\"[moarn om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[juster om] LT\",lastWeek:\"[ôfrûne] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oer %s\",past:\"%s lyn\",s:\"in pear sekonden\",m:\"ien minút\",mm:\"%d minuten\",h:\"ien oere\",hh:\"%d oeren\",d:\"ien dei\",dd:\"%d dagen\",M:\"ien moanne\",MM:\"%d moannen\",y:\"ien jier\",yy:\"%d jierren\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"Am Faoilleach\",\"An Gearran\",\"Am Màrt\",\"An Giblean\",\"An Cèitean\",\"An t-Ògmhios\",\"An t-Iuchar\",\"An Lùnastal\",\"An t-Sultain\",\"An Dàmhair\",\"An t-Samhain\",\"An Dùbhlachd\"]),Ng=[\"Faoi\",\"Gear\",\"Màrt\",\"Gibl\",\"Cèit\",\"Ògmh\",\"Iuch\",\"Lùn\",\"Sult\",\"Dàmh\",\"Samh\",\"Dùbh\"],Og=[\"Didòmhnaich\",\"Diluain\",\"Dimàirt\",\"Diciadain\",\"Diardaoin\",\"Dihaoine\",\"Disathairne\"],Pg=[\"Did\",\"Dil\",\"Dim\",\"Dic\",\"Dia\",\"Dih\",\"Dis\"],Qg=[\"Dò\",\"Lu\",\"Mà\",\"Ci\",\"Ar\",\"Ha\",\"Sa\"],Rg=(kg.defineLocale(\"gd\",{months:Mg,monthsShort:Ng,monthsParseExact:!0,weekdays:Og,weekdaysShort:Pg,weekdaysMin:Qg,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[An-diugh aig] LT\",nextDay:\"[A-màireach aig] LT\",nextWeek:\"dddd [aig] LT\",lastDay:\"[An-dè aig] LT\",lastWeek:\"dddd [seo chaidh] [aig] LT\",sameElse:\"L\"},relativeTime:{future:\"ann an %s\",past:\"bho chionn %s\",s:\"beagan diogan\",m:\"mionaid\",mm:\"%d mionaidean\",h:\"uair\",hh:\"%d uairean\",d:\"latha\",dd:\"%d latha\",M:\"mìos\",MM:\"%d mìosan\",y:\"bliadhna\",yy:\"%d bliadhna\"},ordinalParse:/\\d{1,2}(d|na|mh)/,ordinal:function(a){var b=1===a?\"d\":a%10===2?\"na\":\"mh\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"gl\",{months:\"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro\".split(\"_\"),monthsShort:\"Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado\".split(\"_\"),weekdaysShort:\"Dom._Lun._Mar._Mér._Xov._Ven._Sáb.\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Mé_Xo_Ve_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoxe \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextDay:function(){return\"[mañá \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextWeek:function(){return\"dddd [\"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},lastDay:function(){return\"[onte \"+(1!==this.hours()?\"á\":\"a\")+\"] LT\"},lastWeek:function(){return\"[o] dddd [pasado \"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:function(a){return\"uns segundos\"===a?\"nuns segundos\":\"en \"+a},past:\"hai %s\",s:\"uns segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"unha hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"he\",{months:\"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),monthsShort:\"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳\".split(\"_\"),weekdays:\"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),weekdaysShort:\"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),weekdaysMin:\"א_ב_ג_ד_ה_ו_ש\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[היום ב־]LT\",nextDay:\"[מחר ב־]LT\",nextWeek:\"dddd [בשעה] LT\",lastDay:\"[אתמול ב־]LT\",lastWeek:\"[ביום] dddd [האחרון בשעה] LT\",sameElse:\"L\"},relativeTime:{future:\"בעוד %s\",past:\"לפני %s\",s:\"מספר שניות\",m:\"דקה\",mm:\"%d דקות\",h:\"שעה\",hh:function(a){return 2===a?\"שעתיים\":a+\" שעות\"},d:\"יום\",dd:function(a){return 2===a?\"יומיים\":a+\" ימים\"},M:\"חודש\",MM:function(a){return 2===a?\"חודשיים\":a+\" חודשים\"},y:\"שנה\",yy:function(a){return 2===a?\"שנתיים\":a%10===0\u0026\u002610!==a?a+\" שנה\":a+\" שנים\"}},meridiemParse:/אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(a){return/^(אחה\"צ|אחרי הצהריים|בערב)$/.test(a)},meridiem:function(a,b,c){return 5\u003ea?\"לפנות בוקר\":10\u003ea?\"בבוקר\":12\u003ea?c?'לפנה\"צ':\"לפני הצהריים\":18\u003ea?c?'אחה\"צ':\"אחרי הצהריים\":\"בערב\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Sg={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Tg=(kg.defineLocale(\"hi\",{months:\"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर\".split(\"_\"),monthsShort:\"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm बजे\",LTS:\"A h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, A h:mm बजे\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[कल] LT\",nextWeek:\"dddd, LT\",lastDay:\"[कल] LT\",lastWeek:\"[पिछले] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s में\",past:\"%s पहले\",s:\"कुछ ही क्षण\",m:\"एक मिनट\",mm:\"%d मिनट\",h:\"एक घंटा\",hh:\"%d घंटे\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महीने\",MM:\"%d महीने\",y:\"एक वर्ष\",yy:\"%d वर्ष\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Sg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Rg[a]})},","// Hindi notation for meridiems are quite fuzzy in practice. While there exists","// a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात\"===b?4\u003ea?a:a+12:\"सुबह\"===b?a:\"दोपहर\"===b?a\u003e=10?a:a+12:\"शाम\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात\":10\u003ea?\"सुबह\":17\u003ea?\"दोपहर\":20\u003ea?\"शाम\":\"रात\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"hr\",{months:{format:\"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca\".split(\"_\"),standalone:\"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\")},monthsShort:\"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:Bd,mm:Bd,h:Bd,hh:Bd,d:\"dan\",dd:Bd,M:\"mjesec\",MM:Bd,y:\"godinu\",yy:Bd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton\".split(\" \")),Ug=(kg.defineLocale(\"hu\",{months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"},meridiemParse:/de|du/i,isPM:function(a){return\"u\"===a.charAt(1).toLowerCase()},meridiem:function(a,b,c){return 12\u003ea?c===!0?\"de\":\"DE\":c===!0?\"du\":\"DU\"},calendar:{sameDay:\"[ma] LT[-kor]\",nextDay:\"[holnap] LT[-kor]\",nextWeek:function(){return Dd.call(this,!0)},lastDay:\"[tegnap] LT[-kor]\",lastWeek:function(){return Dd.call(this,!1)},sameElse:\"L\"},relativeTime:{future:\"%s múlva\",past:\"%s\",s:Cd,m:Cd,mm:Cd,h:Cd,hh:Cd,d:Cd,dd:Cd,M:Cd,MM:Cd,y:Cd,yy:Cd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"hy-am\",{months:{format:\"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի\".split(\"_\"),standalone:\"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր\".split(\"_\")},monthsShort:\"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ\".split(\"_\"),weekdays:\"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ\".split(\"_\"),weekdaysShort:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),weekdaysMin:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY թ.\",LLL:\"D MMMM YYYY թ., HH:mm\",LLLL:\"dddd, D MMMM YYYY թ., HH:mm\"},calendar:{sameDay:\"[այսօր] LT\",nextDay:\"[վաղը] LT\",lastDay:\"[երեկ] LT\",nextWeek:function(){return\"dddd [օրը ժամը] LT\"},lastWeek:function(){return\"[անցած] dddd [օրը ժամը] LT\"},sameElse:\"L\"},relativeTime:{future:\"%s հետո\",past:\"%s առաջ\",s:\"մի քանի վայրկյան\",m:\"րոպե\",mm:\"%d րոպե\",h:\"ժամ\",hh:\"%d ժամ\",d:\"օր\",dd:\"%d օր\",M:\"ամիս\",MM:\"%d ամիս\",y:\"տարի\",yy:\"%d տարի\"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(a){return/^(ցերեկվա|երեկոյան)$/.test(a)},meridiem:function(a){return 4\u003ea?\"գիշերվա\":12\u003ea?\"առավոտվա\":17\u003ea?\"ցերեկվա\":\"երեկոյան\"},ordinalParse:/\\d{1,2}|\\d{1,2}-(ին|րդ)/,ordinal:function(a,b){switch(b){case\"DDD\":case\"w\":case\"W\":case\"DDDo\":return 1===a?a+\"-ին\":a+\"-րդ\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"id\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"siang\"===b?a\u003e=11?a:a+12:\"sore\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"siang\":19\u003ea?\"sore\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Besok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kemarin pukul] LT\",lastWeek:\"dddd [lalu pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lalu\",s:\"beberapa detik\",m:\"semenit\",mm:\"%d menit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"is\",{months:\"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des\".split(\"_\"),weekdays:\"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur\".split(\"_\"),weekdaysShort:\"sun_mán_þri_mið_fim_fös_lau\".split(\"_\"),weekdaysMin:\"Su_Má_Þr_Mi_Fi_Fö_La\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] H:mm\",LLLL:\"dddd, D. MMMM YYYY [kl.] H:mm\"},calendar:{sameDay:\"[í dag kl.] LT\",nextDay:\"[á morgun kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[í gær kl.] LT\",lastWeek:\"[síðasta] dddd [kl.] LT\",sameElse:\"L\"},relativeTime:{future:\"eftir %s\",past:\"fyrir %s síðan\",s:Fd,m:Fd,mm:Fd,h:\"klukkustund\",hh:Fd,d:Fd,dd:Fd,M:Fd,MM:Fd,y:Fd,yy:Fd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"it\",{months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),weekdays:\"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato\".split(\"_\"),weekdaysShort:\"Dom_Lun_Mar_Mer_Gio_Ven_Sab\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Me_Gi_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Oggi alle] LT\",nextDay:\"[Domani alle] LT\",nextWeek:\"dddd [alle] LT\",lastDay:\"[Ieri alle] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[la scorsa] dddd [alle] LT\";default:return\"[lo scorso] dddd [alle] LT\"}},sameElse:\"L\"},relativeTime:{future:function(a){return(/^[0-9].+$/.test(a)?\"tra\":\"in\")+\" \"+a},past:\"%s fa\",s:\"alcuni secondi\",m:\"un minuto\",mm:\"%d minuti\",h:\"un'ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"ja\",{months:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),weekdaysShort:\"日_月_火_水_木_金_土\".split(\"_\"),weekdaysMin:\"日_月_火_水_木_金_土\".split(\"_\"),longDateFormat:{LT:\"Ah時m分\",LTS:\"Ah時m分s秒\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah時m分\",LLLL:\"YYYY年M月D日Ah時m分 dddd\"},meridiemParse:/午前|午後/i,isPM:function(a){return\"午後\"===a},meridiem:function(a,b,c){return 12\u003ea?\"午前\":\"午後\"},calendar:{sameDay:\"[今日] LT\",nextDay:\"[明日] LT\",nextWeek:\"[来週]dddd LT\",lastDay:\"[昨日] LT\",lastWeek:\"[前週]dddd LT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}日/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";default:return a}},relativeTime:{future:\"%s後\",past:\"%s前\",s:\"数秒\",m:\"1分\",mm:\"%d分\",h:\"1時間\",hh:\"%d時間\",d:\"1日\",dd:\"%d日\",M:\"1ヶ月\",MM:\"%dヶ月\",y:\"1年\",yy:\"%d年\"}}),kg.defineLocale(\"jv\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des\".split(\"_\"),weekdays:\"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Reb_Kem_Jem_Sep\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sp\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"enjing\"===b?a:\"siyang\"===b?a\u003e=11?a:a+12:\"sonten\"===b||\"ndalu\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"enjing\":15\u003ea?\"siyang\":19\u003ea?\"sonten\":\"ndalu\"},calendar:{sameDay:\"[Dinten puniko pukul] LT\",nextDay:\"[Mbenjang pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kala wingi pukul] LT\",lastWeek:\"dddd [kepengker pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"wonten ing %s\",past:\"%s ingkang kepengker\",s:\"sawetawis detik\",m:\"setunggal menit\",mm:\"%d menit\",h:\"setunggal jam\",hh:\"%d jam\",d:\"sedinten\",dd:\"%d dinten\",M:\"sewulan\",MM:\"%d wulan\",y:\"setaun\",yy:\"%d taun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ka\",{months:{standalone:\"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი\".split(\"_\"),format:\"იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს\".split(\"_\")},monthsShort:\"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),weekdays:{standalone:\"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი\".split(\"_\"),format:\"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს\".split(\"_\"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:\"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),weekdaysMin:\"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[დღეს] LT[-ზე]\",nextDay:\"[ხვალ] LT[-ზე]\",lastDay:\"[გუშინ] LT[-ზე]\",nextWeek:\"[შემდეგ] dddd LT[-ზე]\",lastWeek:\"[წინა] dddd LT-ზე\",sameElse:\"L\"},relativeTime:{future:function(a){return/(წამი|წუთი|საათი|წელი)/.test(a)?a.replace(/ი$/,\"ში\"):a+\"ში\"},past:function(a){return/(წამი|წუთი|საათი|დღე|თვე)/.test(a)?a.replace(/(ი|ე)$/,\"ის წინ\"):/წელი/.test(a)?a.replace(/წელი$/,\"წლის წინ\"):void 0},s:\"რამდენიმე წამი\",m:\"წუთი\",mm:\"%d წუთი\",h:\"საათი\",hh:\"%d საათი\",d:\"დღე\",dd:\"%d დღე\",M:\"თვე\",MM:\"%d თვე\",y:\"წელი\",yy:\"%d წელი\"},ordinalParse:/0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,ordinal:function(a){return 0===a?a:1===a?a+\"-ლი\":20\u003ea||100\u003e=a\u0026\u0026a%20===0||a%100===0?\"მე-\"+a:a+\"-ე\"},week:{dow:1,doy:7}}),{0:\"-ші\",1:\"-ші\",2:\"-ші\",3:\"-ші\",4:\"-ші\",5:\"-ші\",6:\"-шы\",7:\"-ші\",8:\"-ші\",9:\"-шы\",10:\"-шы\",20:\"-шы\",30:\"-шы\",40:\"-шы\",50:\"-ші\",60:\"-шы\",70:\"-ші\",80:\"-ші\",90:\"-шы\",100:\"-ші\"}),Vg=(kg.defineLocale(\"kk\",{months:\"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан\".split(\"_\"),monthsShort:\"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел\".split(\"_\"),weekdays:\"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі\".split(\"_\"),weekdaysShort:\"жек_дүй_сей_сәр_бей_жұм_сен\".split(\"_\"),weekdaysMin:\"жк_дй_сй_ср_бй_жм_сн\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгін сағат] LT\",nextDay:\"[Ертең сағат] LT\",nextWeek:\"dddd [сағат] LT\",lastDay:\"[Кеше сағат] LT\",lastWeek:\"[Өткен аптаның] dddd [сағат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ішінде\",past:\"%s бұрын\",s:\"бірнеше секунд\",m:\"бір минут\",mm:\"%d минут\",h:\"бір сағат\",hh:\"%d сағат\",d:\"бір күн\",dd:\"%d күн\",M:\"бір ай\",MM:\"%d ай\",y:\"бір жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(ші|шы)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ug[a]||Ug[b]||Ug[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"km\",{months:\"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),monthsShort:\"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),weekdays:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),weekdaysShort:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),weekdaysMin:\"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ថ្ងៃនេះ ម៉ោង] LT\",nextDay:\"[ស្អែក ម៉ោង] LT\",nextWeek:\"dddd [ម៉ោង] LT\",lastDay:\"[ម្សិលមិញ ម៉ោង] LT\",lastWeek:\"dddd [សប្តាហ៍មុន] [ម៉ោង] LT\",sameElse:\"L\"},relativeTime:{future:\"%sទៀត\",past:\"%sមុន\",s:\"ប៉ុន្មានវិនាទី\",m:\"មួយនាទី\",mm:\"%d នាទី\",h:\"មួយម៉ោង\",hh:\"%d ម៉ោង\",d:\"មួយថ្ងៃ\",dd:\"%d ថ្ងៃ\",M:\"មួយខែ\",MM:\"%d ខែ\",y:\"មួយឆ្នាំ\",yy:\"%d ឆ្នាំ\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"ko\",{months:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),monthsShort:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),weekdays:\"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),weekdaysShort:\"일_월_화_수_목_금_토\".split(\"_\"),weekdaysMin:\"일_월_화_수_목_금_토\".split(\"_\"),longDateFormat:{LT:\"A h시 m분\",LTS:\"A h시 m분 s초\",L:\"YYYY.MM.DD\",LL:\"YYYY년 MMMM D일\",LLL:\"YYYY년 MMMM D일 A h시 m분\",LLLL:\"YYYY년 MMMM D일 dddd A h시 m분\"},calendar:{sameDay:\"오늘 LT\",nextDay:\"내일 LT\",nextWeek:\"dddd LT\",lastDay:\"어제 LT\",lastWeek:\"지난주 dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s 후\",past:\"%s 전\",s:\"몇 초\",ss:\"%d초\",m:\"일분\",mm:\"%d분\",h:\"한 시간\",hh:\"%d시간\",d:\"하루\",dd:\"%d일\",M:\"한 달\",MM:\"%d달\",y:\"일 년\",yy:\"%d년\"},ordinalParse:/\\d{1,2}일/,ordinal:\"%d일\",meridiemParse:/오전|오후/,isPM:function(a){return\"오후\"===a},meridiem:function(a,b,c){return 12\u003ea?\"오전\":\"오후\"}}),{0:\"-чү\",1:\"-чи\",2:\"-чи\",3:\"-чү\",4:\"-чү\",5:\"-чи\",6:\"-чы\",7:\"-чи\",8:\"-чи\",9:\"-чу\",10:\"-чу\",20:\"-чы\",30:\"-чу\",40:\"-чы\",50:\"-чү\",60:\"-чы\",70:\"-чи\",80:\"-чи\",90:\"-чу\",100:\"-чү\"}),Wg=(kg.defineLocale(\"ky\",{months:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),monthsShort:\"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби\".split(\"_\"),weekdaysShort:\"Жек_Дүй_Шей_Шар_Бей_Жум_Ише\".split(\"_\"),weekdaysMin:\"Жк_Дй_Шй_Шр_Бй_Жм_Иш\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгүн саат] LT\",nextDay:\"[Эртең саат] LT\",nextWeek:\"dddd [саат] LT\",lastDay:\"[Кече саат] LT\",lastWeek:\"[Өткен аптанын] dddd [күнү] [саат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ичинде\",past:\"%s мурун\",s:\"бирнече секунд\",m:\"бир мүнөт\",mm:\"%d мүнөт\",h:\"бир саат\",hh:\"%d саат\",d:\"бир күн\",dd:\"%d күн\",M:\"бир ай\",MM:\"%d ай\",y:\"бир жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Vg[a]||Vg[b]||Vg[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"lb\",{months:\"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),weekdaysShort:\"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm [Auer]\",LTS:\"H:mm:ss [Auer]\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm [Auer]\",LLLL:\"dddd, D. MMMM YYYY H:mm [Auer]\"},calendar:{sameDay:\"[Haut um] LT\",sameElse:\"L\",nextDay:\"[Muer um] LT\",nextWeek:\"dddd [um] LT\",lastDay:\"[Gëschter um] LT\",lastWeek:function(){","// Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","switch(this.day()){case 2:case 4:return\"[Leschten] dddd [um] LT\";default:return\"[Leschte] dddd [um] LT\"}}},relativeTime:{future:Hd,past:Id,s:\"e puer Sekonnen\",m:Gd,mm:\"%d Minutten\",h:Gd,hh:\"%d Stonnen\",d:Gd,dd:\"%d Deeg\",M:Gd,MM:\"%d Méint\",y:Gd,yy:\"%d Joer\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"lo\",{months:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),monthsShort:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),weekdays:\"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysShort:\"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysMin:\"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"ວັນdddd D MMMM YYYY HH:mm\"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(a){return\"ຕອນແລງ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ຕອນເຊົ້າ\":\"ຕອນແລງ\"},calendar:{sameDay:\"[ມື້ນີ້ເວລາ] LT\",nextDay:\"[ມື້ອື່ນເວລາ] LT\",nextWeek:\"[ວັນ]dddd[ໜ້າເວລາ] LT\",lastDay:\"[ມື້ວານນີ້ເວລາ] LT\",lastWeek:\"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT\",sameElse:\"L\"},relativeTime:{future:\"ອີກ %s\",past:\"%sຜ່ານມາ\",s:\"ບໍ່ເທົ່າໃດວິນາທີ\",m:\"1 ນາທີ\",mm:\"%d ນາທີ\",h:\"1 ຊົ່ວໂມງ\",hh:\"%d ຊົ່ວໂມງ\",d:\"1 ມື້\",dd:\"%d ມື້\",M:\"1 ເດືອນ\",MM:\"%d ເດືອນ\",y:\"1 ປີ\",yy:\"%d ປີ\"},ordinalParse:/(ທີ່)\\d{1,2}/,ordinal:function(a){return\"ທີ່\"+a}}),{m:\"minutė_minutės_minutę\",mm:\"minutės_minučių_minutes\",h:\"valanda_valandos_valandą\",hh:\"valandos_valandų_valandas\",d:\"diena_dienos_dieną\",dd:\"dienos_dienų_dienas\",M:\"mėnuo_mėnesio_mėnesį\",MM:\"mėnesiai_mėnesių_mėnesius\",y:\"metai_metų_metus\",yy:\"metai_metų_metus\"}),Xg=(kg.defineLocale(\"lt\",{months:{format:\"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),standalone:\"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis\".split(\"_\"),isFormat:/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?/},monthsShort:\"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),weekdays:{format:\"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį\".split(\"_\"),standalone:\"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis\".split(\"_\"),isFormat:/dddd HH:mm/},weekdaysShort:\"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),weekdaysMin:\"S_P_A_T_K_Pn_Š\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY [m.] MMMM D [d.]\",LLL:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",LLLL:\"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]\",l:\"YYYY-MM-DD\",ll:\"YYYY [m.] MMMM D [d.]\",lll:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",llll:\"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]\"},calendar:{sameDay:\"[Šiandien] LT\",nextDay:\"[Rytoj] LT\",nextWeek:\"dddd LT\",lastDay:\"[Vakar] LT\",lastWeek:\"[Praėjusį] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"po %s\",past:\"prieš %s\",s:Kd,m:Ld,mm:Od,h:Ld,hh:Od,d:Ld,dd:Od,M:Ld,MM:Od,y:Ld,yy:Od},ordinalParse:/\\d{1,2}-oji/,ordinal:function(a){return a+\"-oji\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),{m:\"minūtes_minūtēm_minūte_minūtes\".split(\"_\"),mm:\"minūtes_minūtēm_minūte_minūtes\".split(\"_\"),h:\"stundas_stundām_stunda_stundas\".split(\"_\"),hh:\"stundas_stundām_stunda_stundas\".split(\"_\"),d:\"dienas_dienām_diena_dienas\".split(\"_\"),dd:\"dienas_dienām_diena_dienas\".split(\"_\"),M:\"mēneša_mēnešiem_mēnesis_mēneši\".split(\"_\"),MM:\"mēneša_mēnešiem_mēnesis_mēneši\".split(\"_\"),y:\"gada_gadiem_gads_gadi\".split(\"_\"),yy:\"gada_gadiem_gads_gadi\".split(\"_\")}),Yg=(kg.defineLocale(\"lv\",{months:\"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena\".split(\"_\"),weekdaysShort:\"Sv_P_O_T_C_Pk_S\".split(\"_\"),weekdaysMin:\"Sv_P_O_T_C_Pk_S\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY.\",LL:\"YYYY. [gada] D. MMMM\",LLL:\"YYYY. [gada] D. MMMM, HH:mm\",LLLL:\"YYYY. [gada] D. MMMM, dddd, HH:mm\"},calendar:{sameDay:\"[Šodien pulksten] LT\",nextDay:\"[Rīt pulksten] LT\",nextWeek:\"dddd [pulksten] LT\",lastDay:\"[Vakar pulksten] LT\",lastWeek:\"[Pagājušā] dddd [pulksten] LT\",sameElse:\"L\"},relativeTime:{future:\"pēc %s\",past:\"pirms %s\",s:Sd,m:Rd,mm:Qd,h:Rd,hh:Qd,d:Rd,dd:Qd,M:Rd,MM:Qd,y:Rd,yy:Qd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{words:{//Different grammatical cases","m:[\"jedan minut\",\"jednog minuta\"],mm:[\"minut\",\"minuta\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mjesec\",\"mjeseca\",\"mjeseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=Yg.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+Yg.correctGrammaticalCase(a,d)}}),Zg=(kg.defineLocale(\"me\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sjutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedjelje] [u] LT\",\"[prošlog] [ponedjeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srijede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"nekoliko sekundi\",m:Yg.translate,mm:Yg.translate,h:Yg.translate,hh:Yg.translate,d:\"dan\",dd:Yg.translate,M:\"mjesec\",MM:Yg.translate,y:\"godinu\",yy:Yg.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"mk\",{months:\"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"недела_понеделник_вторник_среда_четврток_петок_сабота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сре_чет_пет_саб\".split(\"_\"),weekdaysMin:\"нe_пo_вт_ср_че_пе_сa\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Денес во] LT\",nextDay:\"[Утре во] LT\",nextWeek:\"[Во] dddd [во] LT\",lastDay:\"[Вчера во] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[Изминатата] dddd [во] LT\";case 1:case 2:case 4:case 5:return\"[Изминатиот] dddd [во] LT\"}},sameElse:\"L\"},relativeTime:{future:\"после %s\",past:\"пред %s\",s:\"неколку секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дена\",M:\"месец\",MM:\"%d месеци\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ml\",{months:\"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ\".split(\"_\"),monthsShort:\"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച\".split(\"_\"),weekdaysShort:\"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി\".split(\"_\"),weekdaysMin:\"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ\".split(\"_\"),longDateFormat:{LT:\"A h:mm -നു\",LTS:\"A h:mm:ss -നു\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm -നു\",LLLL:\"dddd, D MMMM YYYY, A h:mm -നു\"},calendar:{sameDay:\"[ഇന്ന്] LT\",nextDay:\"[നാളെ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ഇന്നലെ] LT\",lastWeek:\"[കഴിഞ്ഞ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s കഴിഞ്ഞ്\",past:\"%s മുൻപ്\",s:\"അൽപ നിമിഷങ്ങൾ\",m:\"ഒരു മിനിറ്റ്\",mm:\"%d മിനിറ്റ്\",h:\"ഒരു മണിക്കൂർ\",hh:\"%d മണിക്കൂർ\",d:\"ഒരു ദിവസം\",dd:\"%d ദിവസം\",M:\"ഒരു മാസം\",MM:\"%d മാസം\",y:\"ഒരു വർഷം\",yy:\"%d വർഷം\"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"രാത്രി\"===b\u0026\u0026a\u003e=4||\"ഉച്ച കഴിഞ്ഞ്\"===b||\"വൈകുന്നേരം\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"രാത്രി\":12\u003ea?\"രാവിലെ\":17\u003ea?\"ഉച്ച കഴിഞ്ഞ്\":20\u003ea?\"വൈകുന്നേരം\":\"രാത്രി\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),$g={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},_g=(kg.defineLocale(\"mr\",{months:\"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर\".split(\"_\"),monthsShort:\"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm वाजता\",LTS:\"A h:mm:ss वाजता\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm वाजता\",LLLL:\"dddd, D MMMM YYYY, A h:mm वाजता\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[उद्या] LT\",nextWeek:\"dddd, LT\",lastDay:\"[काल] LT\",lastWeek:\"[मागील] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%sमध्ये\",past:\"%sपूर्वी\",s:Td,m:Td,mm:Td,h:Td,hh:Td,d:Td,dd:Td,M:Td,MM:Td,y:Td,yy:Td},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return $g[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Zg[a]})},meridiemParse:/रात्री|सकाळी|दुपारी|सायंकाळी/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात्री\"===b?4\u003ea?a:a+12:\"सकाळी\"===b?a:\"दुपारी\"===b?a\u003e=10?a:a+12:\"सायंकाळी\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात्री\":10\u003ea?\"सकाळी\":17\u003ea?\"दुपारी\":20\u003ea?\"सायंकाळी\":\"रात्री\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"ms-my\",{months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ms\",{months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"၁\",2:\"၂\",3:\"၃\",4:\"၄\",5:\"၅\",6:\"၆\",7:\"၇\",8:\"၈\",9:\"၉\",0:\"၀\"}),ah={\"၁\":\"1\",\"၂\":\"2\",\"၃\":\"3\",\"၄\":\"4\",\"၅\":\"5\",\"၆\":\"6\",\"၇\":\"7\",\"၈\":\"8\",\"၉\":\"9\",\"၀\":\"0\"},bh=(kg.defineLocale(\"my\",{months:\"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ\".split(\"_\"),monthsShort:\"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ\".split(\"_\"),weekdays:\"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ\".split(\"_\"),weekdaysShort:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),weekdaysMin:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ယနေ.] LT [မှာ]\",nextDay:\"[မနက်ဖြန်] LT [မှာ]\",nextWeek:\"dddd LT [မှာ]\",lastDay:\"[မနေ.က] LT [မှာ]\",lastWeek:\"[ပြီးခဲ့သော] dddd LT [မှာ]\",sameElse:\"L\"},relativeTime:{future:\"လာမည့် %s မှာ\",past:\"လွန်ခဲ့သော %s က\",s:\"စက္ကန်.အနည်းငယ်\",m:\"တစ်မိနစ်\",mm:\"%d မိနစ်\",h:\"တစ်နာရီ\",hh:\"%d နာရီ\",d:\"တစ်ရက်\",dd:\"%d ရက်\",M:\"တစ်လ\",MM:\"%d လ\",y:\"တစ်နှစ်\",yy:\"%d နှစ်\"},preparse:function(a){return a.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,function(a){return ah[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return _g[a]})},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"nb\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"sø._ma._ti._on._to._fr._lø.\".split(\"_\"),weekdaysMin:\"sø_ma_ti_on_to_fr_lø\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[i dag kl.] LT\",nextDay:\"[i morgen kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[i går kl.] LT\",lastWeek:\"[forrige] dddd [kl.] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"noen sekunder\",m:\"ett minutt\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dager\",M:\"en måned\",MM:\"%d måneder\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),ch={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},dh=(kg.defineLocale(\"ne\",{months:\"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर\".split(\"_\"),monthsShort:\"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.\".split(\"_\"),monthsParseExact:!0,weekdays:\"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार\".split(\"_\"),weekdaysShort:\"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.\".split(\"_\"),weekdaysMin:\"आ._सो._मं._बु._बि._शु._श.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"Aको h:mm बजे\",LTS:\"Aको h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, Aको h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, Aको h:mm बजे\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return ch[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return bh[a]})},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"राति\"===b?4\u003ea?a:a+12:\"बिहान\"===b?a:\"दिउँसो\"===b?a\u003e=10?a:a+12:\"साँझ\"===b?a+12:void 0},meridiem:function(a,b,c){return 3\u003ea?\"राति\":12\u003ea?\"बिहान\":16\u003ea?\"दिउँसो\":20\u003ea?\"साँझ\":\"राति\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[भोलि] LT\",nextWeek:\"[आउँदो] dddd[,] LT\",lastDay:\"[हिजो] LT\",lastWeek:\"[गएको] dddd[,] LT\",sameElse:\"L\"},relativeTime:{future:\"%sमा\",past:\"%s अगाडि\",s:\"केही क्षण\",m:\"एक मिनेट\",mm:\"%d मिनेट\",h:\"एक घण्टा\",hh:\"%d घण्टा\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महिना\",MM:\"%d महिना\",y:\"एक बर्ष\",yy:\"%d बर्ष\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\")),eh=\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),fh=(kg.defineLocale(\"nl\",{months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?eh[a.month()]:dh[a.month()]},monthsParseExact:!0,weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[vandaag om] LT\",nextDay:\"[morgen om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[gisteren om] LT\",lastWeek:\"[afgelopen] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"nn\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),weekdays:\"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag\".split(\"_\"),weekdaysShort:\"sun_mån_tys_ons_tor_fre_lau\".split(\"_\"),weekdaysMin:\"su_må_ty_on_to_fr_lø\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] H:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[I dag klokka] LT\",nextDay:\"[I morgon klokka] LT\",nextWeek:\"dddd [klokka] LT\",lastDay:\"[I går klokka] LT\",lastWeek:\"[Føregåande] dddd [klokka] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s sidan\",s:\"nokre sekund\",m:\"eit minutt\",mm:\"%d minutt\",h:\"ein time\",hh:\"%d timar\",d:\"ein dag\",dd:\"%d dagar\",M:\"ein månad\",MM:\"%d månader\",y:\"eit år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"੧\",2:\"੨\",3:\"੩\",4:\"੪\",5:\"੫\",6:\"੬\",7:\"੭\",8:\"੮\",9:\"੯\",0:\"੦\"}),gh={\"੧\":\"1\",\"੨\":\"2\",\"੩\":\"3\",\"੪\":\"4\",\"੫\":\"5\",\"੬\":\"6\",\"੭\":\"7\",\"੮\":\"8\",\"੯\":\"9\",\"੦\":\"0\"},hh=(kg.defineLocale(\"pa-in\",{","// There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","months:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),monthsShort:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdays:\"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ\".split(\"_\"),weekdaysShort:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),weekdaysMin:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),longDateFormat:{LT:\"A h:mm ਵਜੇ\",LTS:\"A h:mm:ss ਵਜੇ\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm ਵਜੇ\",LLLL:\"dddd, D MMMM YYYY, A h:mm ਵਜੇ\"},calendar:{sameDay:\"[ਅਜ] LT\",nextDay:\"[ਕਲ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ਕਲ] LT\",lastWeek:\"[ਪਿਛਲੇ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ਵਿੱਚ\",past:\"%s ਪਿਛਲੇ\",s:\"ਕੁਝ ਸਕਿੰਟ\",m:\"ਇਕ ਮਿੰਟ\",mm:\"%d ਮਿੰਟ\",h:\"ਇੱਕ ਘੰਟਾ\",hh:\"%d ਘੰਟੇ\",d:\"ਇੱਕ ਦਿਨ\",dd:\"%d ਦਿਨ\",M:\"ਇੱਕ ਮਹੀਨਾ\",MM:\"%d ਮਹੀਨੇ\",y:\"ਇੱਕ ਸਾਲ\",yy:\"%d ਸਾਲ\"},preparse:function(a){return a.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,function(a){return gh[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return fh[a]})},","// Punjabi notation for meridiems are quite fuzzy in practice. While there exists","// a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ਰਾਤ\"===b?4\u003ea?a:a+12:\"ਸਵੇਰ\"===b?a:\"ਦੁਪਹਿਰ\"===b?a\u003e=10?a:a+12:\"ਸ਼ਾਮ\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"ਰਾਤ\":10\u003ea?\"ਸਵੇਰ\":17\u003ea?\"ਦੁਪਹਿਰ\":20\u003ea?\"ਸ਼ਾਮ\":\"ਰਾਤ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\")),ih=\"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\"),jh=(kg.defineLocale(\"pl\",{months:function(a,b){return\"\"===b?\"(\"+ih[a.month()]+\"|\"+hh[a.month()]+\")\":/D MMMM/.test(b)?ih[a.month()]:hh[a.month()]},monthsShort:\"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),weekdays:\"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),weekdaysShort:\"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),weekdaysMin:\"Nd_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Dziś o] LT\",nextDay:\"[Jutro o] LT\",nextWeek:\"[W] dddd [o] LT\",lastDay:\"[Wczoraj o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[W zeszłą niedzielę o] LT\";case 3:return\"[W zeszłą środę o] LT\";case 6:return\"[W zeszłą sobotę o] LT\";default:return\"[W zeszły] dddd [o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"%s temu\",s:\"kilka sekund\",m:Vd,mm:Vd,h:Vd,hh:Vd,d:\"1 dzień\",dd:\"%d dni\",M:\"miesiąc\",MM:Vd,y:\"rok\",yy:Vd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"pt-br\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:{future:\"em %s\",past:\"%s atrás\",s:\"poucos segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\"}),kg.defineLocale(\"pt\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:{future:\"em %s\",past:\"há %s\",s:\"segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"ro\",{months:\"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie\".split(\"_\"),monthsShort:\"ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"duminică_luni_marți_miercuri_joi_vineri_sâmbătă\".split(\"_\"),weekdaysShort:\"Dum_Lun_Mar_Mie_Joi_Vin_Sâm\".split(\"_\"),weekdaysMin:\"Du_Lu_Ma_Mi_Jo_Vi_Sâ\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[azi la] LT\",nextDay:\"[mâine la] LT\",nextWeek:\"dddd [la] LT\",lastDay:\"[ieri la] LT\",lastWeek:\"[fosta] dddd [la] LT\",sameElse:\"L\"},relativeTime:{future:\"peste %s\",past:\"%s în urmă\",s:\"câteva secunde\",m:\"un minut\",mm:Wd,h:\"o oră\",hh:Wd,d:\"o zi\",dd:Wd,M:\"o lună\",MM:Wd,y:\"un an\",yy:Wd},week:{dow:1,// Monday is the first day of the week.","doy:7}}),[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i]),kh=(kg.defineLocale(\"ru\",{months:{format:\"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря\".split(\"_\"),standalone:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\")},monthsShort:{","// по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","format:\"янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.\".split(\"_\"),standalone:\"янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.\".split(\"_\")},weekdays:{standalone:\"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота\".split(\"_\"),format:\"воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/},weekdaysShort:\"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),monthsParse:jh,longMonthsParse:jh,shortMonthsParse:jh,","// полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","monthsRegex:/^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","// копия предыдущего","monthsShortRegex:/^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","// полные названия с падежами","monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","// Выражение, которое соотвествует только сокращённым формам","monthsShortStrictRegex:/^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сегодня в] LT\",nextDay:\"[Завтра в] LT\",lastDay:\"[Вчера в] LT\",nextWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В следующее] dddd [в] LT\";case 1:case 2:case 4:return\"[В следующий] dddd [в] LT\";case 3:case 5:case 6:return\"[В следующую] dddd [в] LT\"}},lastWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В прошлое] dddd [в] LT\";case 1:case 2:case 4:return\"[В прошлый] dddd [в] LT\";case 3:case 5:case 6:return\"[В прошлую] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"через %s\",past:\"%s назад\",s:\"несколько секунд\",m:Yd,mm:Yd,h:\"час\",hh:Yd,d:\"день\",dd:Yd,M:\"месяц\",MM:Yd,y:\"год\",yy:Yd},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(a){return/^(дня|вечера)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночи\":12\u003ea?\"утра\":17\u003ea?\"дня\":\"вечера\"},ordinalParse:/\\d{1,2}-(й|го|я)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":return a+\"-й\";case\"D\":return a+\"-го\";case\"w\":case\"W\":return a+\"-я\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"se\",{months:\"ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu\".split(\"_\"),monthsShort:\"ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov\".split(\"_\"),weekdays:\"sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat\".split(\"_\"),weekdaysShort:\"sotn_vuos_maŋ_gask_duor_bear_láv\".split(\"_\"),weekdaysMin:\"s_v_m_g_d_b_L\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"MMMM D. [b.] YYYY\",LLL:\"MMMM D. [b.] YYYY [ti.] HH:mm\",LLLL:\"dddd, MMMM D. [b.] YYYY [ti.] HH:mm\"},calendar:{sameDay:\"[otne ti] LT\",nextDay:\"[ihttin ti] LT\",nextWeek:\"dddd [ti] LT\",lastDay:\"[ikte ti] LT\",lastWeek:\"[ovddit] dddd [ti] LT\",sameElse:\"L\"},relativeTime:{future:\"%s geažes\",past:\"maŋit %s\",s:\"moadde sekunddat\",m:\"okta minuhta\",mm:\"%d minuhtat\",h:\"okta diimmu\",hh:\"%d diimmut\",d:\"okta beaivi\",dd:\"%d beaivvit\",M:\"okta mánnu\",MM:\"%d mánut\",y:\"okta jahki\",yy:\"%d jagit\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"si\",{months:\"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්\".split(\"_\"),monthsShort:\"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ\".split(\"_\"),weekdays:\"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා\".split(\"_\"),weekdaysShort:\"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන\".split(\"_\"),weekdaysMin:\"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"a h:mm\",LTS:\"a h:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY MMMM D\",LLL:\"YYYY MMMM D, a h:mm\",LLLL:\"YYYY MMMM D [වැනි] dddd, a h:mm:ss\"},calendar:{sameDay:\"[අද] LT[ට]\",nextDay:\"[හෙට] LT[ට]\",nextWeek:\"dddd LT[ට]\",lastDay:\"[ඊයේ] LT[ට]\",lastWeek:\"[පසුගිය] dddd LT[ට]\",sameElse:\"L\"},relativeTime:{future:\"%sකින්\",past:\"%sකට පෙර\",s:\"තත්පර කිහිපය\",m:\"මිනිත්තුව\",mm:\"මිනිත්තු %d\",h:\"පැය\",hh:\"පැය %d\",d:\"දිනය\",dd:\"දින %d\",M:\"මාසය\",MM:\"මාස %d\",y:\"වසර\",yy:\"වසර %d\"},ordinalParse:/\\d{1,2} වැනි/,ordinal:function(a){return a+\" වැනි\"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(a){return\"ප.ව.\"===a||\"පස් වරු\"===a},meridiem:function(a,b,c){return a\u003e11?c?\"ප.ව.\":\"පස් වරු\":c?\"පෙ.ව.\":\"පෙර වරු\"}}),\"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\")),lh=\"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\"),mh=(kg.defineLocale(\"sk\",{months:kh,monthsShort:lh,weekdays:\"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),weekdaysShort:\"ne_po_ut_st_št_pi_so\".split(\"_\"),weekdaysMin:\"ne_po_ut_st_št_pi_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[dnes o] LT\",nextDay:\"[zajtra o] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v nedeľu o] LT\";case 1:case 2:return\"[v] dddd [o] LT\";case 3:return\"[v stredu o] LT\";case 4:return\"[vo štvrtok o] LT\";case 5:return\"[v piatok o] LT\";case 6:return\"[v sobotu o] LT\"}},lastDay:\"[včera o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulú nedeľu o] LT\";case 1:case 2:return\"[minulý] dddd [o] LT\";case 3:return\"[minulú stredu o] LT\";case 4:case 5:return\"[minulý] dddd [o] LT\";case 6:return\"[minulú sobotu o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pred %s\",s:$d,m:$d,mm:$d,h:$d,hh:$d,d:$d,dd:$d,M:$d,MM:$d,y:$d,yy:$d},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"sl\",{months:\"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),weekdaysShort:\"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),weekdaysMin:\"ne_po_to_sr_če_pe_so\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danes ob] LT\",nextDay:\"[jutri ob] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v] [nedeljo] [ob] LT\";case 3:return\"[v] [sredo] [ob] LT\";case 6:return\"[v] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[v] dddd [ob] LT\"}},lastDay:\"[včeraj ob] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[prejšnjo] [nedeljo] [ob] LT\";case 3:return\"[prejšnjo] [sredo] [ob] LT\";case 6:return\"[prejšnjo] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[prejšnji] dddd [ob] LT\"}},sameElse:\"L\"},relativeTime:{future:\"čez %s\",past:\"pred %s\",s:_d,m:_d,mm:_d,h:_d,hh:_d,d:_d,dd:_d,M:_d,MM:_d,y:_d,yy:_d},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"sq\",{months:\"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor\".split(\"_\"),monthsShort:\"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj\".split(\"_\"),weekdays:\"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë\".split(\"_\"),weekdaysShort:\"Die_Hën_Mar_Mër_Enj_Pre_Sht\".split(\"_\"),weekdaysMin:\"D_H_Ma_Më_E_P_Sh\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(a){return\"M\"===a.charAt(0)},meridiem:function(a,b,c){return 12\u003ea?\"PD\":\"MD\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Sot në] LT\",nextDay:\"[Nesër në] LT\",nextWeek:\"dddd [në] LT\",lastDay:\"[Dje në] LT\",lastWeek:\"dddd [e kaluar në] LT\",sameElse:\"L\"},relativeTime:{future:\"në %s\",past:\"%s më parë\",s:\"disa sekonda\",m:\"një minutë\",mm:\"%d minuta\",h:\"një orë\",hh:\"%d orë\",d:\"një ditë\",dd:\"%d ditë\",M:\"një muaj\",MM:\"%d muaj\",y:\"një vit\",yy:\"%d vite\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{words:{//Different grammatical cases","m:[\"један минут\",\"једне минуте\"],mm:[\"минут\",\"минуте\",\"минута\"],h:[\"један сат\",\"једног сата\"],hh:[\"сат\",\"сата\",\"сати\"],dd:[\"дан\",\"дана\",\"дана\"],MM:[\"месец\",\"месеца\",\"месеци\"],yy:[\"година\",\"године\",\"година\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=mh.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+mh.correctGrammaticalCase(a,d)}}),nh=(kg.defineLocale(\"sr-cyrl\",{months:\"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар\".split(\"_\"),monthsShort:\"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.\".split(\"_\"),monthsParseExact:!0,weekdays:\"недеља_понедељак_уторак_среда_четвртак_петак_субота\".split(\"_\"),weekdaysShort:\"нед._пон._уто._сре._чет._пет._суб.\".split(\"_\"),weekdaysMin:\"не_по_ут_ср_че_пе_су\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[данас у] LT\",nextDay:\"[сутра у] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[у] [недељу] [у] LT\";case 3:return\"[у] [среду] [у] LT\";case 6:return\"[у] [суботу] [у] LT\";case 1:case 2:case 4:case 5:return\"[у] dddd [у] LT\"}},lastDay:\"[јуче у] LT\",lastWeek:function(){var a=[\"[прошле] [недеље] [у] LT\",\"[прошлог] [понедељка] [у] LT\",\"[прошлог] [уторка] [у] LT\",\"[прошле] [среде] [у] LT\",\"[прошлог] [четвртка] [у] LT\",\"[прошлог] [петка] [у] LT\",\"[прошле] [суботе] [у] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"пре %s\",s:\"неколико секунди\",m:mh.translate,mm:mh.translate,h:mh.translate,hh:mh.translate,d:\"дан\",dd:mh.translate,M:\"месец\",MM:mh.translate,y:\"годину\",yy:mh.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),{words:{//Different grammatical cases","m:[\"jedan minut\",\"jedne minute\"],mm:[\"minut\",\"minute\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mesec\",\"meseca\",\"meseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b){return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=nh.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+nh.correctGrammaticalCase(a,d)}}),oh=(kg.defineLocale(\"sr\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sre._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedelju] [u] LT\";case 3:return\"[u] [sredu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedelje] [u] LT\",\"[prošlog] [ponedeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pre %s\",s:\"nekoliko sekundi\",m:nh.translate,mm:nh.translate,h:nh.translate,hh:nh.translate,d:\"dan\",dd:nh.translate,M:\"mesec\",MM:nh.translate,y:\"godinu\",yy:nh.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ss\",{months:\"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\"_\"),monthsShort:\"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo\".split(\"_\"),weekdays:\"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo\".split(\"_\"),weekdaysShort:\"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg\".split(\"_\"),weekdaysMin:\"Li_Us_Lb_Lt_Ls_Lh_Ug\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Namuhla nga] LT\",nextDay:\"[Kusasa nga] LT\",nextWeek:\"dddd [nga] LT\",lastDay:\"[Itolo nga] LT\",lastWeek:\"dddd [leliphelile] [nga] LT\",sameElse:\"L\"},relativeTime:{future:\"nga %s\",past:\"wenteka nga %s\",s:\"emizuzwana lomcane\",m:\"umzuzu\",mm:\"%d emizuzu\",h:\"lihora\",hh:\"%d emahora\",d:\"lilanga\",dd:\"%d emalanga\",M:\"inyanga\",MM:\"%d tinyanga\",y:\"umnyaka\",yy:\"%d iminyaka\"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(a,b,c){return 11\u003ea?\"ekuseni\":15\u003ea?\"emini\":19\u003ea?\"entsambama\":\"ebusuku\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ekuseni\"===b?a:\"emini\"===b?a\u003e=11?a:a+12:\"entsambama\"===b||\"ebusuku\"===b?0===a?0:a+12:void 0},ordinalParse:/\\d{1,2}/,ordinal:\"%d\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"sv\",{months:\"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),weekdaysShort:\"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),weekdaysMin:\"sö_må_ti_on_to_fr_lö\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D MMMM YYYY [kl.] HH:mm\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Idag] LT\",nextDay:\"[Imorgon] LT\",lastDay:\"[Igår] LT\",nextWeek:\"[På] dddd LT\",lastWeek:\"[I] dddd[s] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"för %s sedan\",s:\"några sekunder\",m:\"en minut\",mm:\"%d minuter\",h:\"en timme\",hh:\"%d timmar\",d:\"en dag\",dd:\"%d dagar\",M:\"en månad\",MM:\"%d månader\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}(e|a)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"e\":1===b?\"a\":2===b?\"a\":\"e\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"sw\",{months:\"Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi\".split(\"_\"),weekdaysShort:\"Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos\".split(\"_\"),weekdaysMin:\"J2_J3_J4_J5_Al_Ij_J1\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[leo saa] LT\",nextDay:\"[kesho saa] LT\",nextWeek:\"[wiki ijayo] dddd [saat] LT\",lastDay:\"[jana] LT\",lastWeek:\"[wiki iliyopita] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s baadaye\",past:\"tokea %s\",s:\"hivi punde\",m:\"dakika moja\",mm:\"dakika %d\",h:\"saa limoja\",hh:\"masaa %d\",d:\"siku moja\",dd:\"masiku %d\",M:\"mwezi mmoja\",MM:\"miezi %d\",y:\"mwaka mmoja\",yy:\"miaka %d\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),{1:\"௧\",2:\"௨\",3:\"௩\",4:\"௪\",5:\"௫\",6:\"௬\",7:\"௭\",8:\"௮\",9:\"௯\",0:\"௦\"}),ph={\"௧\":\"1\",\"௨\":\"2\",\"௩\":\"3\",\"௪\":\"4\",\"௫\":\"5\",\"௬\":\"6\",\"௭\":\"7\",\"௮\":\"8\",\"௯\":\"9\",\"௦\":\"0\"},qh=(kg.defineLocale(\"ta\",{months:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),monthsShort:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),weekdays:\"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை\".split(\"_\"),weekdaysShort:\"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி\".split(\"_\"),weekdaysMin:\"ஞா_தி_செ_பு_வி_வெ_ச\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, HH:mm\",LLLL:\"dddd, D MMMM YYYY, HH:mm\"},calendar:{sameDay:\"[இன்று] LT\",nextDay:\"[நாளை] LT\",nextWeek:\"dddd, LT\",lastDay:\"[நேற்று] LT\",lastWeek:\"[கடந்த வாரம்] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s இல்\",past:\"%s முன்\",s:\"ஒரு சில விநாடிகள்\",m:\"ஒரு நிமிடம்\",mm:\"%d நிமிடங்கள்\",h:\"ஒரு மணி நேரம்\",hh:\"%d மணி நேரம்\",d:\"ஒரு நாள்\",dd:\"%d நாட்கள்\",M:\"ஒரு மாதம்\",MM:\"%d மாதங்கள்\",y:\"ஒரு வருடம்\",yy:\"%d ஆண்டுகள்\"},ordinalParse:/\\d{1,2}வது/,ordinal:function(a){return a+\"வது\"},preparse:function(a){return a.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,function(a){return ph[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return oh[a]})},","// refer http://ta.wikipedia.org/s/1er1","meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(a,b,c){return 2\u003ea?\" யாமம்\":6\u003ea?\" வைகறை\":10\u003ea?\" காலை\":14\u003ea?\" நண்பகல்\":18\u003ea?\" எற்பாடு\":22\u003ea?\" மாலை\":\" யாமம்\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"யாமம்\"===b?2\u003ea?a:a+12:\"வைகறை\"===b||\"காலை\"===b?a:\"நண்பகல்\"===b\u0026\u0026a\u003e=10?a:a+12},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"te\",{months:\"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్\".split(\"_\"),monthsShort:\"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం\".split(\"_\"),weekdaysShort:\"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని\".split(\"_\"),weekdaysMin:\"ఆ_సో_మం_బు_గు_శు_శ\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[నేడు] LT\",nextDay:\"[రేపు] LT\",nextWeek:\"dddd, LT\",lastDay:\"[నిన్న] LT\",lastWeek:\"[గత] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s లో\",past:\"%s క్రితం\",s:\"కొన్ని క్షణాలు\",m:\"ఒక నిమిషం\",mm:\"%d నిమిషాలు\",h:\"ఒక గంట\",hh:\"%d గంటలు\",d:\"ఒక రోజు\",dd:\"%d రోజులు\",M:\"ఒక నెల\",MM:\"%d నెలలు\",y:\"ఒక సంవత్సరం\",yy:\"%d సంవత్సరాలు\"},ordinalParse:/\\d{1,2}వ/,ordinal:\"%dవ\",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"రాత్రి\"===b?4\u003ea?a:a+12:\"ఉదయం\"===b?a:\"మధ్యాహ్నం\"===b?a\u003e=10?a:a+12:\"సాయంత్రం\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"రాత్రి\":10\u003ea?\"ఉదయం\":17\u003ea?\"మధ్యాహ్నం\":20\u003ea?\"సాయంత్రం\":\"రాత్రి\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"th\",{months:\"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม\".split(\"_\"),monthsShort:\"ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.\".split(\"_\"),monthsParseExact:!0,weekdays:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์\".split(\"_\"),weekdaysShort:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์\".split(\"_\"),// yes, three characters difference","weekdaysMin:\"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H นาฬิกา m นาที\",LTS:\"H นาฬิกา m นาที s วินาที\",L:\"YYYY/MM/DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY เวลา H นาฬิกา m นาที\",LLLL:\"วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที\"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(a){return\"หลังเที่ยง\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ก่อนเที่ยง\":\"หลังเที่ยง\"},calendar:{sameDay:\"[วันนี้ เวลา] LT\",nextDay:\"[พรุ่งนี้ เวลา] LT\",nextWeek:\"dddd[หน้า เวลา] LT\",lastDay:\"[เมื่อวานนี้ เวลา] LT\",lastWeek:\"[วัน]dddd[ที่แล้ว เวลา] LT\",sameElse:\"L\"},relativeTime:{future:\"อีก %s\",past:\"%sที่แล้ว\",s:\"ไม่กี่วินาที\",m:\"1 นาที\",mm:\"%d นาที\",h:\"1 ชั่วโมง\",hh:\"%d ชั่วโมง\",d:\"1 วัน\",dd:\"%d วัน\",M:\"1 เดือน\",MM:\"%d เดือน\",y:\"1 ปี\",yy:\"%d ปี\"}}),kg.defineLocale(\"tl-ph\",{months:\"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre\".split(\"_\"),monthsShort:\"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis\".split(\"_\"),weekdays:\"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado\".split(\"_\"),weekdaysShort:\"Lin_Lun_Mar_Miy_Huw_Biy_Sab\".split(\"_\"),weekdaysMin:\"Li_Lu_Ma_Mi_Hu_Bi_Sab\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"MM/D/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY HH:mm\",LLLL:\"dddd, MMMM DD, YYYY HH:mm\"},calendar:{sameDay:\"[Ngayon sa] LT\",nextDay:\"[Bukas sa] LT\",nextWeek:\"dddd [sa] LT\",lastDay:\"[Kahapon sa] LT\",lastWeek:\"dddd [huling linggo] LT\",sameElse:\"L\"},relativeTime:{future:\"sa loob ng %s\",past:\"%s ang nakalipas\",s:\"ilang segundo\",m:\"isang minuto\",mm:\"%d minuto\",h:\"isang oras\",hh:\"%d oras\",d:\"isang araw\",dd:\"%d araw\",M:\"isang buwan\",MM:\"%d buwan\",y:\"isang taon\",yy:\"%d taon\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut\".split(\"_\")),rh=(kg.defineLocale(\"tlh\",{months:\"tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’\".split(\"_\"),monthsShort:\"jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’\".split(\"_\"),monthsParseExact:!0,weekdays:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),weekdaysShort:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),weekdaysMin:\"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[DaHjaj] LT\",nextDay:\"[wa’leS] LT\",nextWeek:\"LLL\",lastDay:\"[wa’Hu’] LT\",lastWeek:\"LLL\",sameElse:\"L\"},relativeTime:{future:ae,past:be,s:\"puS lup\",m:\"wa’ tup\",mm:ce,h:\"wa’ rep\",hh:ce,d:\"wa’ jaj\",dd:ce,M:\"wa’ jar\",MM:ce,y:\"wa’ DIS\",yy:ce},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),{1:\"'inci\",5:\"'inci\",8:\"'inci\",70:\"'inci\",80:\"'inci\",2:\"'nci\",7:\"'nci\",20:\"'nci\",50:\"'nci\",3:\"'üncü\",4:\"'üncü\",100:\"'üncü\",6:\"'ncı\",9:\"'uncu\",10:\"'uncu\",30:\"'uncu\",60:\"'ıncı\",90:\"'ıncı\"}),sh=(kg.defineLocale(\"tr\",{months:\"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),monthsShort:\"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),weekdays:\"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),weekdaysShort:\"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),weekdaysMin:\"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[yarın saat] LT\",nextWeek:\"[haftaya] dddd [saat] LT\",lastDay:\"[dün] LT\",lastWeek:\"[geçen hafta] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s önce\",s:\"birkaç saniye\",m:\"bir dakika\",mm:\"%d dakika\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir yıl\",yy:\"%d yıl\"},ordinalParse:/\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,ordinal:function(a){if(0===a)// special case for zero","return a+\"'ıncı\";var b=a%10,c=a%100-b,d=a\u003e=100?100:null;return a+(rh[b]||rh[c]||rh[d])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"tzl\",{months:\"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec\".split(\"_\"),weekdays:\"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi\".split(\"_\"),weekdaysShort:\"Súl_Lún_Mai_Már_Xhú_Vié_Sát\".split(\"_\"),weekdaysMin:\"Sú_Lú_Ma_Má_Xh_Vi_Sá\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM [dallas] YYYY\",LLL:\"D. MMMM [dallas] YYYY HH.mm\",LLLL:\"dddd, [li] D. MMMM [dallas] YYYY HH.mm\"},meridiemParse:/d\\'o|d\\'a/i,isPM:function(a){return\"d'o\"===a.toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"d'o\":\"D'O\":c?\"d'a\":\"D'A\"},calendar:{sameDay:\"[oxhi à] LT\",nextDay:\"[demà à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[ieiri à] LT\",lastWeek:\"[sür el] dddd [lasteu à] LT\",sameElse:\"L\"},relativeTime:{future:\"osprei %s\",past:\"ja%s\",s:ee,m:ee,mm:ee,h:ee,hh:ee,d:ee,dd:ee,M:ee,MM:ee,y:ee,yy:ee},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"tzm-latn\",{months:\"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),monthsShort:\"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),weekdays:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),weekdaysShort:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),weekdaysMin:\"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[asdkh g] LT\",nextDay:\"[aska g] LT\",nextWeek:\"dddd [g] LT\",lastDay:\"[assant g] LT\",lastWeek:\"dddd [g] LT\",sameElse:\"L\"},relativeTime:{future:\"dadkh s yan %s\",past:\"yan %s\",s:\"imik\",m:\"minuḍ\",mm:\"%d minuḍ\",h:\"saɛa\",hh:\"%d tassaɛin\",d:\"ass\",dd:\"%d ossan\",M:\"ayowr\",MM:\"%d iyyirn\",y:\"asgas\",yy:\"%d isgasn\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),kg.defineLocale(\"tzm\",{months:\"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),monthsShort:\"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),weekdays:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),weekdaysShort:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),weekdaysMin:\"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ⴰⵙⴷⵅ ⴴ] LT\",nextDay:\"[ⴰⵙⴽⴰ ⴴ] LT\",nextWeek:\"dddd [ⴴ] LT\",lastDay:\"[ⴰⵚⴰⵏⵜ ⴴ] LT\",lastWeek:\"dddd [ⴴ] LT\",sameElse:\"L\"},relativeTime:{future:\"ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s\",past:\"ⵢⴰⵏ %s\",s:\"ⵉⵎⵉⴽ\",m:\"ⵎⵉⵏⵓⴺ\",mm:\"%d ⵎⵉⵏⵓⴺ\",h:\"ⵙⴰⵄⴰ\",hh:\"%d ⵜⴰⵙⵙⴰⵄⵉⵏ\",d:\"ⴰⵙⵙ\",dd:\"%d oⵙⵙⴰⵏ\",M:\"ⴰⵢoⵓⵔ\",MM:\"%d ⵉⵢⵢⵉⵔⵏ\",y:\"ⴰⵙⴳⴰⵙ\",yy:\"%d ⵉⵙⴳⴰⵙⵏ\"},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),kg.defineLocale(\"uk\",{months:{format:\"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня\".split(\"_\"),standalone:\"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень\".split(\"_\")},monthsShort:\"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),weekdays:he,weekdaysShort:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY р.\",LLL:\"D MMMM YYYY р., HH:mm\",LLLL:\"dddd, D MMMM YYYY р., HH:mm\"},calendar:{sameDay:ie(\"[Сьогодні \"),nextDay:ie(\"[Завтра \"),lastDay:ie(\"[Вчора \"),nextWeek:ie(\"[У] dddd [\"),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return ie(\"[Минулої] dddd [\").call(this);case 1:case 2:case 4:return ie(\"[Минулого] dddd [\").call(this)}},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"%s тому\",s:\"декілька секунд\",m:ge,mm:ge,h:\"годину\",hh:ge,d:\"день\",dd:ge,M:\"місяць\",MM:ge,y:\"рік\",yy:ge},","// M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(a){return/^(дня|вечора)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночі\":12\u003ea?\"ранку\":17\u003ea?\"дня\":\"вечора\"},ordinalParse:/\\d{1,2}-(й|го)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a+\"-й\";case\"D\":return a+\"-го\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"uz\",{months:\"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр\".split(\"_\"),monthsShort:\"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба\".split(\"_\"),weekdaysShort:\"Якш_Душ_Сеш_Чор_Пай_Жум_Шан\".split(\"_\"),weekdaysMin:\"Як_Ду_Се_Чо_Па_Жу_Ша\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"D MMMM YYYY, dddd HH:mm\"},calendar:{sameDay:\"[Бугун соат] LT [да]\",nextDay:\"[Эртага] LT [да]\",nextWeek:\"dddd [куни соат] LT [да]\",lastDay:\"[Кеча соат] LT [да]\",lastWeek:\"[Утган] dddd [куни соат] LT [да]\",sameElse:\"L\"},relativeTime:{future:\"Якин %s ичида\",past:\"Бир неча %s олдин\",s:\"фурсат\",m:\"бир дакика\",mm:\"%d дакика\",h:\"бир соат\",hh:\"%d соат\",d:\"бир кун\",dd:\"%d кун\",M:\"бир ой\",MM:\"%d ой\",y:\"бир йил\",yy:\"%d йил\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"vi\",{months:\"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12\".split(\"_\"),monthsShort:\"Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12\".split(\"_\"),monthsParseExact:!0,weekdays:\"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy\".split(\"_\"),weekdaysShort:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysMin:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(a){return/^ch$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"sa\":\"SA\":c?\"ch\":\"CH\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM [năm] YYYY\",LLL:\"D MMMM [năm] YYYY HH:mm\",LLLL:\"dddd, D MMMM [năm] YYYY HH:mm\",l:\"DD/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Hôm nay lúc] LT\",nextDay:\"[Ngày mai lúc] LT\",nextWeek:\"dddd [tuần tới lúc] LT\",lastDay:\"[Hôm qua lúc] LT\",lastWeek:\"dddd [tuần rồi lúc] LT\",sameElse:\"L\"},relativeTime:{future:\"%s tới\",past:\"%s trước\",s:\"vài giây\",m:\"một phút\",mm:\"%d phút\",h:\"một giờ\",hh:\"%d giờ\",d:\"một ngày\",dd:\"%d ngày\",M:\"một tháng\",MM:\"%d tháng\",y:\"một năm\",yy:\"%d năm\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"x-pseudo\",{months:\"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér\".split(\"_\"),monthsShort:\"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc\".split(\"_\"),monthsParseExact:!0,weekdays:\"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý\".split(\"_\"),weekdaysShort:\"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát\".split(\"_\"),weekdaysMin:\"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[T~ódá~ý át] LT\",nextDay:\"[T~ómó~rró~w át] LT\",nextWeek:\"dddd [át] LT\",lastDay:\"[Ý~ést~érdá~ý át] LT\",lastWeek:\"[L~ást] dddd [át] LT\",sameElse:\"L\"},relativeTime:{future:\"í~ñ %s\",past:\"%s á~gó\",s:\"á ~féw ~sécó~ñds\",m:\"á ~míñ~úté\",mm:\"%d m~íñú~tés\",h:\"á~ñ hó~úr\",hh:\"%d h~óúrs\",d:\"á ~dáý\",dd:\"%d d~áýs\",M:\"á ~móñ~th\",MM:\"%d m~óñt~hs\",y:\"á ~ýéár\",yy:\"%d ý~éárs\"},ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"zh-cn\",{months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah点mm分\",LTS:\"Ah点m分s秒\",L:\"YYYY-MM-DD\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah点mm分\",LLLL:\"YYYY年MMMD日ddddAh点mm分\",l:\"YYYY-MM-DD\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah点mm分\",llll:\"YYYY年MMMD日ddddAh点mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"下午\"===b||\"晚上\"===b?a+12:a\u003e=11?a:a+12},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:function(){return 0===this.minutes()?\"[今天]Ah[点整]\":\"[今天]LT\"},nextDay:function(){return 0===this.minutes()?\"[明天]Ah[点整]\":\"[明天]LT\"},lastDay:function(){return 0===this.minutes()?\"[昨天]Ah[点整]\":\"[昨天]LT\"},nextWeek:function(){var a,b;return a=kg().startOf(\"week\"),b=this.diff(a,\"days\")\u003e=7?\"[下]\":\"[本]\",0===this.minutes()?b+\"dddAh点整\":b+\"dddAh点mm\"},lastWeek:function(){var a,b;return a=kg().startOf(\"week\"),b=this.unix()\u003ca.unix()?\"[上]\":\"[本]\",0===this.minutes()?b+\"dddAh点整\":b+\"dddAh点mm\"},sameElse:\"LL\"},ordinalParse:/\\d{1,2}(日|月|周)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"周\";default:return a}},relativeTime:{future:\"%s内\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},week:{","// GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"zh-tw\",{months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"週日_週一_週二_週三_週四_週五_週六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah點mm分\",LTS:\"Ah點m分s秒\",L:\"YYYY年MMMD日\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah點mm分\",LLLL:\"YYYY年MMMD日ddddAh點mm分\",l:\"YYYY年MMMD日\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah點mm分\",llll:\"YYYY年MMMD日ddddAh點mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"中午\"===b?a\u003e=11?a:a+12:\"下午\"===b||\"晚上\"===b?a+12:void 0},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:\"[今天]LT\",nextDay:\"[明天]LT\",nextWeek:\"[下]ddddLT\",lastDay:\"[昨天]LT\",lastWeek:\"[上]ddddLT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}(日|月|週)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"週\";default:return a}},relativeTime:{future:\"%s內\",past:\"%s前\",s:\"幾秒\",m:\"1 分鐘\",mm:\"%d 分鐘\",h:\"1 小時\",hh:\"%d 小時\",d:\"1 天\",dd:\"%d 天\",M:\"1 個月\",MM:\"%d 個月\",y:\"1 年\",yy:\"%d 年\"}}),kg);return sh.locale(\"en\"),sh});"],"Functions":["!function(a,b)\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module?module.exports=b():\"function\"==typeof define\u0026\u0026define.amd?define(b):a.moment=b()}(this,function(){\"use strict\";function a(){return je.apply(null,arguments)}","function b(a)je=a}function c(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return\"[object Object]\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)","return!1;return!0}function f(a)return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c\u003ca.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)\u0026\u0026(a[c]=b[c]);return h(b,\"toString\")\u0026\u0026(a.toString=b.toString),h(b,\"valueOf\")\u0026\u0026(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){","returnempty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf\u0026\u0026(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=ke.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())\u0026\u0026b.overflow\u003c0\u0026\u0026!b.empty\u0026\u0026!b.invalidMonth\u0026\u0026!b.invalidWeekday\u0026\u0026!b.nullInput\u0026\u0026!b.invalidFormat\u0026\u0026!b.userInvalidated\u0026\u0026(!b.meridiem||b.meridiem\u0026\u0026c),a._strict\u0026\u0026(a._isValid=a._isValid\u0026\u00260===b.charsLeftOver\u0026\u00260===b.unusedTokens.length\u0026\u0026void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),le.length\u003e0)for(c in le)d=le[c],e=b[d],o(e)||(a[d]=e);return a}","function q(b)p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),me===!1\u0026\u0026(me=!0,a.updateOffset(this),me=!1)}function r(a){return a instanceof q||null!=a\u0026\u0026null!=a._isAMomentObject}function s(a){return 0\u003ea?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b\u0026\u0026isFinite(b)\u0026\u0026(c=s(b)),c}","function u(a,b,c)var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e\u003ed;d++)(c\u0026\u0026a[d]!==b[d]||!c\u0026\u0026t(a[d])!==t(b[d]))\u0026\u0026g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1\u0026\u0026\"undefined\"!=typeof console\u0026\u0026console.warn\u0026\u0026console.warn(\"Deprecation warning: \"+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(null,b),d\u0026\u0026(v(b+\"\\nArguments: \"+Array.prototype.slice.call(arguments).join(\", \")+\"\\n\"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(b,c),ne[b]||(v(c),ne[b]=!0)}function y(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this[\"_\"+c]=b;this._config=a,","this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\d1,2}/.source)}function A(a,b){var c,e=i({},a);for(c in b)h(b,c)\u0026\u0026(d(a[c])\u0026\u0026d(b[c])?(e[c]={},i(e[c],a[c]),i(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)h(a,c)\u0026\u0026!h(b,c)\u0026\u0026d(a[c])\u0026\u0026(","e[c]=i(},e[c]));return e}function B(a){null!=a\u0026\u0026this.set(a)}function C(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return y(d)?d.call(b,c):d}function D(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function E(){return this._invalidDate}function F(a){return this._ordinal.replace(\"%d\",a)}function G(a,b,c,d){var e=this._relativeTime[c];return y(e)?e(a,b,c,d):e.replace(/%d/i,a)}function H(a,b){var c=this._relativeTime[a\u003e0?\"future\":\"past\"];return y(c)?c(b):c.replace(/%s/i,b)}function I(a,b){var c=a.toLowerCase();we[c]=we[c+\"s\"]=we[b]=a}function J(a){return\"string\"==typeof a?we[a]||we[a.toLowerCase()]:void 0}function K(a){var b,c,d={};for(c in a)h(a,c)\u0026\u0026(b=J(c),b\u0026\u0026(d[b]=a[c]));return d}function L(a,b){xe[a]=b}function M(a){var b=[];for(var c in a)b.push({unit:c,priority:xe[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function N(b,c){return function(d){return null!=d?(P(this,b,d),a.updateOffset(this,c),this):O(this,b)}}function O(a,b){return a.isValid()?a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+b]():NaN}function P(a,b,c){a.isValid()\u0026\u0026a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+b](c)}","function Q(a)return a=J(a),y(this[a])?this[a]():this}function R(a,b){if(\"object\"==typeof a){a=K(a);for(var c=M(a),d=0;d\u003cc.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=J(a),y(this[a]))return this[a](b);return this}function S(a,b,c){var d=\"\"+Math.abs(a),e=b-d.length,f=a\u003e=0;return(f?c?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}","// callback: function ()  this.month() + 1 }","function T(a,b,c,d)var e=d;\"string\"==typeof d\u0026\u0026(e=function(){return this[d]()}),a\u0026\u0026(Be[a]=e),b\u0026\u0026(Be[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c\u0026\u0026(Be[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function V(a){var b,c,d=a.match(ye);for(b=0,c=d.length;c\u003eb;b++)Be[d[b]]?d[b]=Be[d[b]]:d[b]=U(d[b]);return function(b){var e,f=\"\";for(e=0;c\u003ee;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}","function W(a,b)return a.isValid()?(b=X(b,a.localeData()),Ae[b]=Ae[b]||V(b),Ae[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(ze.lastIndex=0;d\u003e=0\u0026\u0026ze.test(a);)a=a.replace(ze,c),ze.lastIndex=0,d-=1;return a}function Y(a,b,c){Te[a]=y(b)?b:function(a,d){return a\u0026\u0026c?c:b}}function Z(a,b){return h(Te,a)?Te[a](b._strict,b._locale):new RegExp($(a))}","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function $(a)return _(a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function _(a){return a.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$\u0026\")}function aa(a,b){var c,d=b;for(\"string\"==typeof a\u0026\u0026(a=[a]),\"number\"==typeof b\u0026\u0026(d=function(a,c){c[b]=t(a)}),c=0;c\u003ca.length;c++)Ue[a[c]]=d}function ba(a,b){aa(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function ca(a,b,c){null!=b\u0026\u0026h(Ue,a)\u0026\u0026Ue[a](b,c._a,c,a)}function da(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function ea(a,b){return c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||cf).test(b)?\"format\":\"standalone\"][a.month()]}function fa(a,b){return c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[cf.test(b)?\"format\":\"standalone\"][a.month()]}function ga(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(","this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;12\u003ed;++d)f=j([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\"\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\"\").toLocaleLowerCase();return c?\"MMM\"===b?(e=pe.call(this._shortMonthsParse,g),-1!==e?e:null):(e=pe.call(this._longMonthsParse,g),-1!==e?e:null):\"MMM\"===b?(e=pe.call(this._shortMonthsParse,g),-1!==e?e:(e=pe.call(this._longMonthsParse,g),-1!==e?e:null)):(e=pe.call(this._longMonthsParse,g),-1!==e?e:(e=pe.call(this._shortMonthsParse,g),-1!==e?e:null))}function ha(a,b,c)var d,e,f;if(this._monthsParseExact)return ga.call(this,a,b,c);","function ia(a,b)var c;if(!a.isValid())","if(b=a.localeData().monthsParse(b),\"number\"!=typeof b)return a;return c=Math.min(a.date(),da(a.year(),b)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](b,c),a}function ja(b)return null!=b?(ia(this,b),a.updateOffset(this,!0),this):O(this,\"Month\")}function ka(){return da(this.year(),this.month())}function la(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(h(this,\"_monthsShortRegex\")||(this._monthsShortRegex=ff),this._monthsShortStrictRegex\u0026\u0026a?this._monthsShortStrictRegex:this._monthsShortRegex)}function ma(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsStrictRegex:this._monthsRegex):(h(this,\"_monthsRegex\")||(this._monthsRegex=gf),this._monthsStrictRegex\u0026\u0026a?this._monthsStrictRegex:this._monthsRegex)}function na(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;12\u003eb;b++)c=j([2e3,b]),d.push(this.monthsShort(c,\"\")),e.push(this.months(c,\"\")),f.push(this.months(c,\"\")),f.push(this.monthsShort(c,\"\"));for(","function oa(a)return pa(a)?366:365}function pa(a){return a%4===0\u0026\u0026a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(h.getFullYear())\u0026\u0026h.setFullYear(a),h}function sa(a)var b=new Date(Date.UTC.apply(null,arguments));","//the Date.UTC function remaps years 0-99 to 1900-1999","function ta(a,b,c)var// first-week day -- which january is always in the first week (4 for iso, 1 for other)","function ua(a,b,c,d,e)var f,g,h=(7+c-d)%7,i=ta(a,d,e),j=1+7*(b-1)+h+i;return 0\u003e=j?(f=a-1,g=oa(f)+j):j\u003eoa(a)?(f=a+1,g=j-oa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function va(a,b,c){var d,e,f=ta(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return 1\u003eg?(e=a.year()-1,d=g+wa(e,b,c)):g\u003ewa(a.year(),b,c)?(d=g-wa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function wa(a,b,c){var d=ta(a,b,c),e=ta(a+1,b,c);return(oa(a)-d+e)/7}","function xa(a)return va(a,this._week.dow,this._week.doy).week}function ya(){return this._week.dow}function za(){return this._week.doy}","function Aa(a)var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\"d\")}function Ba(a){var b=va(this,1,4).week;return null==a?b:this.add(7*(a-b),\"d\")}","function Ca(a,b)return\"string\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\"number\"==typeof a?a:null):parseInt(a,10)}function Da(a,b){return\"string\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Ea(a,b){return c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\"format\":\"standalone\"][a.day()]}function Fa(a){return this._weekdaysShort[a.day()]}function Ga(a){return this._weekdaysMin[a.day()]}function Ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;7\u003ed;++d)f=j([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\"\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\"\").toLocaleLowerCase();return c?\"dddd\"===b?(e=pe.call(this._weekdaysParse,g),-1!==e?e:null):\"ddd\"===b?(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:null):(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null):\"dddd\"===b?(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null))):\"ddd\"===b?(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:null))):(e=pe.call(this._minWeekdaysParse,g),-1!==e?e:(e=pe.call(this._weekdaysParse,g),-1!==e?e:(e=pe.call(this._shortWeekdaysParse,g),-1!==e?e:null)))}function Ia(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ha.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;7\u003ed;d++){","function Ja(a)if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,\"d\")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function La(a){if(!this.isValid())return null!=a?this:NaN;","if(null!=a)var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,\"_weekdaysRegex\")||(this._weekdaysRegex=nf),this._weekdaysStrictRegex\u0026\u0026a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=of),this._weekdaysShortStrictRegex\u0026\u0026a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=pf),this._weekdaysMinStrictRegex\u0026\u0026a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7\u003eb;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,\"\"),e=this.weekdaysShort(c,\"\"),f=this.weekdays(c,\"\"),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(","function Qa()return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}","function Ta(a,b)return b._meridiemParse}","function Ua(a)","return\"p\"===(a+\"\").toLowerCase().charAt(0)}function Va(a,b,c)return a\u003e11?c?\"pm\":\"PM\":c?\"am\":\"AM\"}function Wa(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}","function Xa(a)for(var b,c,d,e,f=0;f\u003ca.length;){for(e=Wa(a[f]).split(\"-\"),b=e.length,c=Wa(a[f+1]),c=c?c.split(\"-\"):null;b\u003e0;){if(d=Ya(e.slice(0,b).join(\"-\")))return d;if(c\u0026\u0026c.length\u003e=b\u0026\u0026u(e,c,!0)\u003e=b-1)","break;b--}f++}return null}function Ya(a)var b=null;","// This function will load locale and then set the global locale.  If","function Za(a,b)var c;","return a\u0026\u0026(c=o(b)?ab(a):$a(a,b),c\u0026\u0026(qf=c)),qf._abbr}function $a(a,b)if(null!==b){var c=tf;","return delete uf[a],null}function _a(a,b)if(null!=b){var c,d=tf;","function ab(a)var b;if(a\u0026\u0026a._locale\u0026\u0026a._locale._abbr\u0026\u0026(a=a._locale._abbr),!a)return qf;if(!c(a)){if(b=Ya(a))return b;a=[a]}return Xa(a)}function bb(){return oe(uf)}function cb(a){var b,c=a._a;return c\u0026\u0026-2===l(a).overflow\u0026\u0026(b=c[We]\u003c0||c[We]\u003e11?We:c[Xe]\u003c1||c[Xe]\u003eda(c[Ve],c[We])?Xe:c[Ye]\u003c0||c[Ye]\u003e24||24===c[Ye]\u0026\u0026(0!==c[Ze]||0!==c[$e]||0!==c[_e])?Ye:c[Ze]\u003c0||c[Ze]\u003e59?Ze:c[$e]\u003c0||c[$e]\u003e59?$e:c[_e]\u003c0||c[_e]\u003e999?_e:-1,l(a)._overflowDayOfYear\u0026\u0026(Ve\u003eb||b\u003eXe)\u0026\u0026(b=Xe),l(a)._overflowWeeks\u0026\u0026-1===b\u0026\u0026(b=af),l(a)._overflowWeekday\u0026\u0026-1===b\u0026\u0026(b=bf),l(a).overflow=b),a}","function db(a)var b,c,d,e,f,g,h=a._i,i=vf.exec(h)||wf.exec(h);if(i){for(l(a).iso=!0,b=0,c=yf.length;c\u003eb;b++)if(yf[b][1].exec(i[1])){e=yf[b][0],d=yf[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=zf.length;c\u003eb;b++)if(zf[b][1].exec(i[3])){","function eb(b)var c=Af.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(db(b),void(b._isValid===!1\u0026\u0026(delete b._isValid,a.createFromInputFallback(b))))}","function fb(a,b,c)return null!=a?a:null!=b?b:c}function gb(b){","function hb(a)var b,c,d,e,f=[];if(!a._d){","null!=a._tzm\u0026\u0026a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay\u0026\u0026(a._a[Ye]=24)}}function ib(a)var b,c,d,e,f,g,h,i;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=fb(b.GG,a._a[Ve],va(rb(),1,4).year),d=fb(b.W,1),e=fb(b.E,1),(1\u003ee||e\u003e7)\u0026\u0026(i=!0)):(f=a._locale._week.dow,g=a._locale._week.doy,c=fb(b.gg,a._a[Ve],va(rb(),f,g).year),d=fb(b.w,1),null!=b.d?(e=b.d,(0\u003ee||e\u003e6)\u0026\u0026(i=!0)):null!=b.e?(e=b.e+f,(b.e\u003c0||b.e\u003e6)\u0026\u0026(i=!0)):e=f),1\u003ed||d\u003ewa(c,f,g)?l(a)._overflowWeeks=!0:null!=i?l(a)._overflowWeekday=!0:(h=ua(c,d,e,f,g),a._a[Ve]=h.year,a._dayOfYear=h.dayOfYear)}","function jb(b)","b._a[Ye]=kb(b._locale,b._a[Ye],b._meridiem),hb(b),cb(b)}function kb(a,b,c)var d;","function lb(a)var b,c,d,e,f;if(0===a._f.length)return l(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e\u003ca._f.length;e++)f=0,b=p({},a),null!=a._useUTC\u0026\u0026(b._useUTC=a._useUTC),b._f=a._f[e],jb(b),m(b)\u0026\u0026(f+=l(b).charsLeftOver,f+=10*l(b).unusedTokens.length,l(b).score=f,(null==d||d\u003ef)\u0026\u0026(d=f,c=b));i(a,c||b)}function mb(a){if(!a._d){var b=K(a._i);a._a=g([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a\u0026\u0026parseInt(a,10)}),hb(a)}}function nb(a){var b=new q(cb(ob(a)));","return b._nextDay\u0026\u0026(b.add(1,\"d\"),b._nextDay=void 0),b}function ob(a)var b=a._i,d=a._f;return a._locale=a._locale||ab(a._l),null===b||void 0===d\u0026\u0026\"\"===b?n({nullInput:!0}):(\"string\"==typeof b\u0026\u0026(a._i=b=a._locale.preparse(b)),r(b)?new q(cb(b)):(c(d)?lb(a):f(b)?a._d=b:d?jb(a):pb(a),m(a)||(a._d=null),a))}function pb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):f(d)?b._d=new Date(d.valueOf()):\"string\"==typeof d?eb(b):c(d)?(b._a=g(d.slice(0),function(a){return parseInt(a,10)}),hb(b)):\"object\"==typeof d?mb(b):\"number\"==typeof d?","b._d=new Date(d):a.createFromInputFallback(b)}function qb(a,b,f,g,h)var i={};","return\"boolean\"==typeof f\u0026\u0026(g=f,f=void 0),(d(a)\u0026\u0026e(a)||c(a)\u0026\u00260===a.length)\u0026\u0026(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,nb(i)}function rb(a,b,c,d)return qb(a,b,c,d,!1)}","// other. This relies on the function fn to be transitive.","function sb(a,b)var d,e;if(1===b.length\u0026\u0026c(b[0])\u0026\u0026(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e\u003cb.length;++e)b[e].isValid()\u0026\u0026!b[e][a](d)||(d=b[e]);return d}","function tb()var a=[].slice.call(arguments,0);return sb(\"isBefore\",a)}function ub(){var a=[].slice.call(arguments,0);return sb(\"isAfter\",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;","this._months=+e+3*d+12*c,this._data=},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}","function xb(a,b)T(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0\u003ea\u0026\u0026(a=-a,c=\"-\"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||\"\").match(a)||[],d=c[c.length-1]||[],e=(d+\"\").match(Ef)||[\"-\",0,0],f=+(60*e[1])+t(e[2]);return\"+\"===e[0]?f:-f}","function zb(b,c)var d,e;","return c._isUTC?(d=c.clone(),e=(r(b)||f(b)?b.valueOf():rb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):rb(b).local()}function Ab(a)","function Bb(b,c)var d,e=this._offset||0;return this.isValid()?null!=b?(\"string\"==typeof b?b=yb(Qe,b):Math.abs(b)\u003c16\u0026\u0026(b=60*b),!this._isUTC\u0026\u0026c\u0026\u0026(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d\u0026\u0026this.add(d,\"m\"),e!==b\u0026\u0026(!c||this._changeInProgress?Sb(this,Mb(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?(\"string\"!=typeof a\u0026\u0026(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC\u0026\u0026(this.utcOffset(0,a),this._isUTC=!1,a\u0026\u0026this.subtract(Ab(this),\"m\")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i\u0026\u0026this.utcOffset(yb(Pe,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()\u003ethis.clone().month(0).utcOffset()||this.utcOffset()\u003ethis.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()\u0026\u0026u(a._a,b.toArray())\u003e0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC\u0026\u00260===this._offset:!1}function Mb(a,b){var c,d,e,f=a,","return wb(a)?f=ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Ff.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:0,d:t(g[Xe])*c,h:t(g[Ye])*c,m:t(g[Ze])*c,s:t(g[$e])*c,ms:t(g[_e])*c}):(g=Gf.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:\"object\"==typeof f\u0026\u0026(\"from\"in f||\"to\"in f)\u0026\u0026(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)\u0026\u0026h(a,\"_locale\")\u0026\u0026(d._locale=a._locale),d}function Nb(a,b){","return(isNaN(c)?0:c)*b}function Ob(a,b)var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\"M\").isAfter(b)\u0026\u0026--c.months,c.milliseconds=+b-+a.clone().add(c.months,\"M\"),c}function Pb(a,b){var c;return a.isValid()\u0026\u0026b.isValid()?(b=zb(b,a),a.isBefore(b)?c=Ob(a,b):(c=Ob(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}function Qb(a){return 0\u003ea?-1*Math.round(-1*a):Math.round(a)}","function Rb(a,b)return function(c,d){var e,f;","return null===d||isNaN(+d)||(x(b,\"moment().\"+b+\"(period, number) is deprecated. Please use moment().\"+b+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),f=c,c=d,d=f),c=\"string\"==typeof c?+c:c,e=Mb(c,d),Sb(this,e,a),this}}function Sb(b,c,d,e)var f=c._milliseconds,g=Qb(c._days),h=Qb(c._months);b.isValid()\u0026\u0026(e=null==e?!0:e,f\u0026\u0026b._d.setTime(b._d.valueOf()+f*d),g\u0026\u0026P(b,\"Date\",O(b,\"Date\")+g*d),h\u0026\u0026ia(b,O(b,\"Month\")+h*d),e\u0026\u0026a.updateOffset(b,g||h))}function Tb(a,b){var c=a.diff(b,\"days\",!0);return-6\u003ec?\"sameElse\":-1\u003ec?\"lastWeek\":0\u003ec?\"lastDay\":1\u003ec?\"sameDay\":2\u003ec?\"nextDay\":7\u003ec?\"nextWeek\":\"sameElse\"}function Ub(b,c){","var d=b||rb(),e=zb(d,this).startOf(\"day\"),f=a.calendarFormat(this,e)||\"sameElse\",g=c\u0026\u0026(y(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,rb(d)))}function Vb()return new q(this)}function Wb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003ec.valueOf():c.valueOf()\u003cthis.clone().startOf(b).valueOf()):!1}function Xb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003cc.valueOf():this.clone().endOf(b).valueOf()\u003cc.valueOf()):!1}function Yb(a,b,c,d){return d=d||\"()\",(\"(\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))\u0026\u0026(\")\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function Zb(a,b){var c,d=r(a)?a:rb(a);return this.isValid()\u0026\u0026d.isValid()?(b=J(b||\"millisecond\"),\"millisecond\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()\u003c=c\u0026\u0026c\u003c=this.clone().endOf(b).valueOf())):!1}function $b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function _b(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function ac(a,b,c){var d,e,f,g;// 1000","return this.isValid()?(d=zb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=J(b),\"year\"===b||\"month\"===b||\"quarter\"===b?(g=bc(this,d),\"quarter\"===b?g/=3:\"year\"===b\u0026\u0026(g/=12)):(f=this-d,g=\"second\"===b?f/1e3:\"minute\"===b?f/6e4:\"hour\"===b?f/36e5:\"day\"===b?(f-e)/864e5:\"week\"===b?(f-e)/6048e5:f),c?g:s(g)):NaN):NaN}function bc(a,b)","return 0\u003eb-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)||0}function cc()return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function dc(){var a=this.clone().utc();return 0\u003ca.year()\u0026\u0026a.year()\u003c=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):W(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}","function jc(a)var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b\u0026\u0026(this._locale=b),this)}function kc(){return this._locale}function lc(a){","return\"week\"===a\u0026\u0026this.weekday(0),\"isoWeek\"===a\u0026\u0026this.isoWeekday(1),\"quarter\"===a\u0026\u0026this.month(3*Math.floor(this.month()/3)),this}function mc(a)","return a=J(a),void 0===a||\"millisecond\"===a?this:(\"date\"===a\u0026\u0026(a=\"day\"),this.startOf(a).add(1,\"isoWeek\"===a?\"week\":a).subtract(1,\"ms\"))}function nc()return this._d.valueOf()-6e4*(this._offset||0)}function oc(){return Math.floor(this.valueOf()/1e3)}function pc(){return new Date(this.valueOf())}function qc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function rc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function sc(){","return this.isValid()?this.toISOString():null}function tc()return m(this)}function uc(){return i({},l(this))}function vc(){return l(this).overflow}function wc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function xc(a,b){T(0,[a,a.length],0,b)}","function yc(a)return Cc.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zc(a){return Cc.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Ac(){return wa(this.year(),1,4)}function Bc(){var a=this.localeData()._week;return wa(this.year(),a.dow,a.doy)}function Cc(a,b,c,d,e){var f;return null==a?va(this,d,e).year:(f=wa(a,d,e),b\u003ef\u0026\u0026(b=f),Dc.call(this,a,b,c,d,e))}function Dc(a,b,c,d,e){var f=ua(a,b,c,d,e),g=sa(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}","function Ec(a)return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}","function Fc(a)var b=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?b:this.add(a-b,\"d\")}function Gc(a,b){b[_e]=t(1e3*(\"0.\"+a))}","function Hc()return this._isUTC?\"UTC\":\"\"}function Ic(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Jc(a){return rb(1e3*a)}function Kc(){return rb.apply(null,arguments).parseZone()}function Lc(a){return a}function Mc(a,b,c,d){var e=ab(),f=j().set(d,b);return e[c](f,a)}function Nc(a,b,c){if(\"number\"==typeof a\u0026\u0026(b=a,a=void 0),a=a||\"\",null!=b)return Mc(a,b,c,\"month\");var d,e=[];for(d=0;12\u003ed;d++)e[d]=Mc(a,d,c,\"month\");return e}","function Oc(a,b,c,d)\"boolean\"==typeof a?(\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\"):(b=a,c=b,a=!1,\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\");var e=ab(),f=a?e._week.dow:0;if(null!=c)return Mc(b,(c+f)%7,d,\"day\");var g,h=[];for(g=0;7\u003eg;g++)h[g]=Mc(b,(g+f)%7,d,\"day\");return h}function Pc(a,b){return Nc(a,b,\"months\")}function Qc(a,b){return Nc(a,b,\"monthsShort\")}function Rc(a,b,c){return Oc(a,b,c,\"weekdays\")}function Sc(a,b,c){return Oc(a,b,c,\"weekdaysShort\")}function Tc(a,b,c){return Oc(a,b,c,\"weekdaysMin\")}function Uc(){var a=this._data;return this._milliseconds=Sf(this._milliseconds),this._days=Sf(this._days),this._months=Sf(this._months),a.milliseconds=Sf(a.milliseconds),a.seconds=Sf(a.seconds),a.minutes=Sf(a.minutes),a.hours=Sf(a.hours),a.months=Sf(a.months),a.years=Sf(a.years),this}function Vc(a,b,c,d){var e=Mb(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}","function Wc(a,b)return Vc(this,a,b,1)}","function Xc(a,b)return Vc(this,a,b,-1)}function Yc(a){return 0\u003ea?Math.floor(a):Math.ceil(a)}function Zc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;","return f\u003e=0\u0026\u0026g\u003e=0\u0026\u0026h\u003e=0||0\u003e=f\u0026\u00260\u003e=g\u0026\u00260\u003e=h||(f+=864e5*Yc(_c(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=s(f/1e3),i.seconds=a%60,b=s(a/60),i.minutes=b%60,c=s(b/60),i.hours=c%24,g+=s(c/24),e=s($c(g)),h+=e,g-=Yc(_c(e)),d=s(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function $c(a)","return 4800*a/146097}function _c(a)","return 146097*a/4800}function ad(a)var b,c,d=this._milliseconds;if(a=J(a),\"month\"===a||\"year\"===a)return b=this._days+d/864e5,c=this._months+$c(b),\"month\"===a?c:c/12;switch(b=this._days+Math.round(_c(this._months)),a){case\"week\":return b/7+d/6048e5;case\"day\":return b+d/864e5;case\"hour\":return 24*b+d/36e5;case\"minute\":return 1440*b+d/6e4;case\"second\":return 86400*b+d/1e3;","function bd()return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)}function cd(a){return function(){return this.as(a)}}function dd(a){return a=J(a),this[a+\"s\"]()}function ed(a){return function(){return this._data[a]}}function fd(){return s(this.days()/7)}","// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function gd(a,b,c,d,e)return e.relativeTime(b||1,!!c,a,d)}function hd(a,b,c){var d=Mb(a).abs(),e=gg(d.as(\"s\")),f=gg(d.as(\"m\")),g=gg(d.as(\"h\")),h=gg(d.as(\"d\")),i=gg(d.as(\"M\")),j=gg(d.as(\"y\")),k=e\u003chg.s\u0026\u0026[\"s\",e]||1\u003e=f\u0026\u0026[\"m\"]||f\u003chg.m\u0026\u0026[\"mm\",f]||1\u003e=g\u0026\u0026[\"h\"]||g\u003chg.h\u0026\u0026[\"hh\",g]||1\u003e=h\u0026\u0026[\"d\"]||h\u003chg.d\u0026\u0026[\"dd\",h]||1\u003e=i\u0026\u0026[\"M\"]||i\u003chg.M\u0026\u0026[\"MM\",i]||1\u003e=j\u0026\u0026[\"y\"]||[\"yy\",j];return k[2]=b,k[3]=+a\u003e0,k[4]=c,gd.apply(null,k)}","// This function allows you to set the rounding function for relative time strings","function id(a)return void 0===a?gg:\"function\"==typeof a?(gg=a,!0):!1}","// This function allows you to set a threshold for relative time strings","function jd(a,b)return void 0===hg[a]?!1:void 0===b?hg[a]:(hg[a]=b,!0)}function kd(a){var b=this.localeData(),c=hd(this,!a,b);return a\u0026\u0026(c=b.pastFuture(+this,c)),b.postformat(c)}function ld(){","var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0\u003em?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}function md(a,b)var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function nd(a,b,c){var d={mm:b?\"хвіліна_хвіліны_хвілін\":\"хвіліну_хвіліны_хвілін\",hh:b?\"гадзіна_гадзіны_гадзін\":\"гадзіну_гадзіны_гадзін\",dd:\"дзень_дні_дзён\",MM:\"месяц_месяцы_месяцаў\",yy:\"год_гады_гадоў\"};return\"m\"===c?b?\"хвіліна\":\"хвіліну\":\"h\"===c?b?\"гадзіна\":\"гадзіну\":a+\" \"+md(d[c],+a)}function od(a,b,c){var d={mm:\"munutenn\",MM:\"miz\",dd:\"devezh\"};return a+\" \"+rd(d[c],a)}function pd(a){switch(qd(a)){case 1:case 3:case 4:case 5:case 9:return a+\" bloaz\";default:return a+\" vloaz\"}}function qd(a){return a\u003e9?qd(a%10):a}function rd(a,b){return 2===b?sd(a):a}function sd(a){var b={m:\"v\",b:\"v\",d:\"z\"};return void 0===b[a.charAt(0)]?a:b[a.charAt(0)]+a.substring(1)}function td(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function ud(a){return a\u003e1\u0026\u00265\u003ea\u0026\u00261!==~~(a/10)}function vd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?e+(ud(a)?\"roky\":\"let\"):e+\"lety\"}}function wd(a,b,c,d)var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function xd(a,b,c,d){var e={m:[\"eine Minute\",\"einer Minute\"],h:[\"eine Stunde\",\"einer Stunde\"],d:[\"ein Tag\",\"einem Tag\"],dd:[a+\" Tage\",a+\" Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[a+\" Monate\",a+\" Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[a+\" Jahre\",a+\" Jahren\"]};return b?e[c][0]:e[c][1]}function yd(a,b,c,d){var e={s:[\"mõne sekundi\",\"mõni sekund\",\"paar sekundit\"],m:[\"ühe minuti\",\"üks minut\"],mm:[a+\" minuti\",a+\" minutit\"],h:[\"ühe tunni\",\"tund aega\",\"üks tund\"],hh:[a+\" tunni\",a+\" tundi\"],d:[\"ühe päeva\",\"üks päev\"],M:[\"kuu aja\",\"kuu aega\",\"üks kuu\"],MM:[a+\" kuu\",a+\" kuud\"],y:[\"ühe aasta\",\"aasta\",\"üks aasta\"],yy:[a+\" aasta\",a+\" aastat\"]};return b?e[c][2]?e[c][2]:e[c][1]:d?e[c][0]:e[c][1]}function zd(a,b,c,d){var e=\"\";switch(c){case\"s\":return d?\"muutaman sekunnin\":\"muutama sekunti\";case\"m\":return d?\"minuutin\":\"minuutti\";case\"mm\":e=d?\"minuutin\":\"minuuttia\";break;case\"h\":return d?\"tunnin\":\"tunti\";case\"hh\":e=d?\"tunnin\":\"tuntia\";break;case\"d\":return d?\"päivän\":\"päivä\";case\"dd\":e=d?\"päivän\":\"päivää\";break;case\"M\":return d?\"kuukauden\":\"kuukausi\";case\"MM\":e=d?\"kuukauden\":\"kuukautta\";break;case\"y\":return d?\"vuoden\":\"vuosi\";case\"yy\":e=d?\"vuoden\":\"vuotta\"}return e=Ad(a,d)+\" \"+e}function Ad(a,b){return 10\u003ea?b?Jg[a]:Ig[a]:a}function Bd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function Cd(a,b,c,d){var e=a;switch(c){case\"s\":return d||b?\"néhány másodperc\":\"néhány másodperce\";case\"m\":return\"egy\"+(d||b?\" perc\":\" perce\");case\"mm\":return e+(d||b?\" perc\":\" perce\");case\"h\":return\"egy\"+(d||b?\" óra\":\" órája\");case\"hh\":return e+(d||b?\" óra\":\" órája\");case\"d\":return\"egy\"+(d||b?\" nap\":\" napja\");case\"dd\":return e+(d||b?\" nap\":\" napja\");case\"M\":return\"egy\"+(d||b?\" hónap\":\" hónapja\");case\"MM\":return e+(d||b?\" hónap\":\" hónapja\");case\"y\":return\"egy\"+(d||b?\" év\":\" éve\");case\"yy\":return e+(d||b?\" év\":\" éve\")}return\"\"}function Dd(a){return(a?\"\":\"[múlt] \")+\"[\"+Tg[this.day()]+\"] LT[-kor]\"}function Ed(a){return a%100===11?!0:a%10!==1}function Fd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nokkrar sekúndur\":\"nokkrum sekúndum\";case\"m\":return b?\"mínúta\":\"mínútu\";case\"mm\":return Ed(a)?e+(b||d?\"mínútur\":\"mínútum\"):b?e+\"mínúta\":e+\"mínútu\";case\"hh\":return Ed(a)?e+(b||d?\"klukkustundir\":\"klukkustundum\"):e+\"klukkustund\";case\"d\":return b?\"dagur\":d?\"dag\":\"degi\";case\"dd\":return Ed(a)?b?e+\"dagar\":e+(d?\"daga\":\"dögum\"):b?e+\"dagur\":e+(d?\"dag\":\"degi\");case\"M\":return b?\"mánuður\":d?\"mánuð\":\"mánuði\";case\"MM\":return Ed(a)?b?e+\"mánuðir\":e+(d?\"mánuði\":\"mánuðum\"):b?e+\"mánuður\":e+(d?\"mánuð\":\"mánuði\");case\"y\":return b||d?\"ár\":\"ári\";case\"yy\":return Ed(a)?e+(b||d?\"ár\":\"árum\"):e+(b||d?\"ár\":\"ári\")}}function Gd(a,b,c,d){var e={m:[\"eng Minutt\",\"enger Minutt\"],h:[\"eng Stonn\",\"enger Stonn\"],d:[\"een Dag\",\"engem Dag\"],M:[\"ee Mount\",\"engem Mount\"],y:[\"ee Joer\",\"engem Joer\"]};return b?e[c][0]:e[c][1]}function Hd(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"a \"+a:\"an \"+a}function Id(a){var b=a.substr(0,a.indexOf(\" \"));return Jd(b)?\"viru \"+a:\"virun \"+a}/**","function Jd(a)if(a=parseInt(a,10),isNaN(a))return!1;if(0\u003ea)","return a/=1e3,Jd(a)}function Kd(a,b,c,d)return b?\"kelios sekundės\":d?\"kelių sekundžių\":\"kelias sekundes\"}function Ld(a,b,c,d){return b?Nd(c)[0]:d?Nd(c)[1]:Nd(c)[2]}function Md(a){return a%10===0||a\u003e10\u0026\u002620\u003ea}function Nd(a){return Wg[a].split(\"_\")}function Od(a,b,c,d){var e=a+\" \";return 1===a?e+Ld(a,b,c[0],d):b?e+(Md(a)?Nd(c)[1]:Nd(c)[0]):d?e+Nd(c)[1]:e+(Md(a)?Nd(c)[1]:Nd(c)[2])}/**","function Pd(a,b,c)return c?b%10===1\u0026\u0026b%100!==11?a[2]:a[3]:b%10===1\u0026\u0026b%100!==11?a[0]:a[1]}function Qd(a,b,c){return a+\" \"+Pd(Xg[c],a,b)}function Rd(a,b,c){return Pd(Xg[c],a,b)}function Sd(a,b){return b?\"dažas sekundes\":\"dažām sekundēm\"}function Td(a,b,c,d){var e=\"\";if(b)switch(c){case\"s\":e=\"काही सेकंद\";break;case\"m\":e=\"एक मिनिट\";break;case\"mm\":e=\"%d मिनिटे\";break;case\"h\":e=\"एक तास\";break;case\"hh\":e=\"%d तास\";break;case\"d\":e=\"एक दिवस\";break;case\"dd\":e=\"%d दिवस\";break;case\"M\":e=\"एक महिना\";break;case\"MM\":e=\"%d महिने\";break;case\"y\":e=\"एक वर्ष\";break;case\"yy\":e=\"%d वर्षे\"}else switch(c){case\"s\":e=\"काही सेकंदां\";break;case\"m\":e=\"एका मिनिटा\";break;case\"mm\":e=\"%d मिनिटां\";break;case\"h\":e=\"एका तासा\";break;case\"hh\":e=\"%d तासां\";break;case\"d\":e=\"एका दिवसा\";break;case\"dd\":e=\"%d दिवसां\";break;case\"M\":e=\"एका महिन्या\";break;case\"MM\":e=\"%d महिन्यां\";break;case\"y\":e=\"एका वर्षा\";break;case\"yy\":e=\"%d वर्षां\"}return e.replace(/%d/i,a)}function Ud(a){return 5\u003ea%10\u0026\u0026a%10\u003e1\u0026\u0026~~(a/10)%10!==1}function Vd(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"minuta\":\"minutę\";case\"mm\":return d+(Ud(a)?\"minuty\":\"minut\");case\"h\":return b?\"godzina\":\"godzinę\";case\"hh\":return d+(Ud(a)?\"godziny\":\"godzin\");case\"MM\":return d+(Ud(a)?\"miesiące\":\"miesięcy\");case\"yy\":return d+(Ud(a)?\"lata\":\"lat\")}}function Wd(a,b,c){var d={mm:\"minute\",hh:\"ore\",dd:\"zile\",MM:\"luni\",yy:\"ani\"},e=\" \";return(a%100\u003e=20||a\u003e=100\u0026\u0026a%100===0)\u0026\u0026(e=\" de \"),a+e+d[c]}function Xd(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function Yd(a,b,c){var d={mm:b?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"};return\"m\"===c?b?\"минута\":\"минуту\":a+\" \"+Xd(d[c],+a)}function Zd(a){return a\u003e1\u0026\u00265\u003ea}function $d(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago","return b||d?e+(Zd(a)?\"roky\":\"rokov\"):e+\"rokmi\"}}function _d(a,b,c,d)var e=a+\" \";switch(c){case\"s\":return b||d?\"nekaj sekund\":\"nekaj sekundami\";case\"m\":return b?\"ena minuta\":\"eno minuto\";case\"mm\":return e+=1===a?b?\"minuta\":\"minuto\":2===a?b||d?\"minuti\":\"minutama\":5\u003ea?b||d?\"minute\":\"minutami\":b||d?\"minut\":\"minutami\";case\"h\":return b?\"ena ura\":\"eno uro\";case\"hh\":return e+=1===a?b?\"ura\":\"uro\":2===a?b||d?\"uri\":\"urama\":5\u003ea?b||d?\"ure\":\"urami\":b||d?\"ur\":\"urami\";case\"d\":return b||d?\"en dan\":\"enim dnem\";case\"dd\":return e+=1===a?b||d?\"dan\":\"dnem\":2===a?b||d?\"dni\":\"dnevoma\":b||d?\"dni\":\"dnevi\";case\"M\":return b||d?\"en mesec\":\"enim mesecem\";case\"MM\":return e+=1===a?b||d?\"mesec\":\"mesecem\":2===a?b||d?\"meseca\":\"mesecema\":5\u003ea?b||d?\"mesece\":\"meseci\":b||d?\"mesecev\":\"meseci\";case\"y\":return b||d?\"eno leto\":\"enim letom\";case\"yy\":return e+=1===a?b||d?\"leto\":\"letom\":2===a?b||d?\"leti\":\"letoma\":5\u003ea?b||d?\"leta\":\"leti\":b||d?\"let\":\"leti\"}}function ae(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"leS\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"waQ\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"nem\":b+\" pIq\"}function be(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"Hu’\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"wen\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"ben\":b+\" ret\"}function ce(a,b,c,d){var e=de(a);switch(c){case\"mm\":return e+\" tup\";case\"hh\":return e+\" rep\";case\"dd\":return e+\" jaj\";case\"MM\":return e+\" jar\";case\"yy\":return e+\" DIS\"}}function de(a){var b=Math.floor(a%1e3/100),c=Math.floor(a%100/10),d=a%10,e=\"\";return b\u003e0\u0026\u0026(e+=qh[b]+\"vatlh\"),c\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+qh[c]+\"maH\"),d\u003e0\u0026\u0026(e+=(\"\"!==e?\" \":\"\")+qh[d]),\"\"===e?\"pagh\":e}function ee(a,b,c,d){var e={s:[\"viensas secunds\",\"'iensas secunds\"],m:[\"'n míut\",\"'iens míut\"],mm:[a+\" míuts\",\"\"+a+\" míuts\"],h:[\"'n þora\",\"'iensa þora\"],hh:[a+\" þoras\",\"\"+a+\" þoras\"],d:[\"'n ziua\",\"'iensa ziua\"],dd:[a+\" ziuas\",\"\"+a+\" ziuas\"],M:[\"'n mes\",\"'iens mes\"],MM:[a+\" mesen\",\"\"+a+\" mesen\"],y:[\"'n ar\",\"'iens ar\"],yy:[a+\" ars\",\"\"+a+\" ars\"]};return d?e[c][0]:b?e[c][0]:e[c][1]}function fe(a,b){var c=a.split(\"_\");return b%10===1\u0026\u0026b%100!==11?c[0]:b%10\u003e=2\u0026\u00264\u003e=b%10\u0026\u0026(10\u003eb%100||b%100\u003e=20)?c[1]:c[2]}function ge(a,b,c){var d={mm:b?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:b?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"};return\"m\"===c?b?\"хвилина\":\"хвилину\":\"h\"===c?b?\"година\":\"годину\":a+\" \"+fe(d[c],+a)}function he(a,b){var c={nominative:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),accusative:\"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу\".split(\"_\"),genitive:\"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи\".split(\"_\")},d=/(\\[[ВвУу]\\]) ?dddd/.test(b)?\"accusative\":/\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(b)?\"genitive\":\"nominative\";return c[d][a.day()]}function ie(a){return function(){return a+\"о\"+(11===this.hours()?\"б\":\"\")+\"] LT\"}}var je,ke;ke=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length\u003e\u003e\u003e0,d=0;c\u003ed;d++)if(d in b\u0026\u0026a.call(this,b[d],d,b))return!0;return!1};","var le=a.momentProperties=[],me=!1,ne=};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var oe;oe=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)\u0026\u0026c.push(b);return c};var pe,qe={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},re={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},se=\"Invalid date\",te=\"%d\",ue=/\\d{1,2}/,ve={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},we={},xe={},ye=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,ze=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Ae={},Be={},Ce=/\\d/,De=/\\d\\d/,Ee=/\\d{3}/,Fe=/\\d{4}/,Ge=/[+-]?\\d{6}/,He=/\\d\\d?/,Ie=/\\d\\d\\d\\d?/,Je=/\\d\\d\\d\\d\\d\\d?/,Ke=/\\d{1,3}/,Le=/\\d{1,4}/,Me=/[+-]?\\d{1,6}/,Ne=/\\d+/,Oe=/[+-]?\\d+/,Pe=/Z|[+-]\\d\\d:?\\d\\d/gi,Qe=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Re=/[+-]?\\d+(\\.\\d{1,3})?/,Se=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,Te={},Ue={},Ve=0,We=1,Xe=2,Ye=3,Ze=4,$e=5,_e=6,af=7,bf=8;pe=Array.prototype.indexOf?Array.prototype.indexOf:function(a){","var b;for(b=0;b\u003cthis.length;++b)if(this[b]===a)return b;return-1},T(\"M\",[\"MM\",2],\"Mo\",function()return this.month()+1}),T(\"MMM\",0,0,function(a){return this.localeData().monthsShort(this,a)}),T(\"MMMM\",0,0,function(a){return this.localeData().months(this,a)}),I(\"month\",\"M\"),L(\"month\",8),Y(\"M\",He),Y(\"MM\",He,De),Y(\"MMM\",function(a,b){return b.monthsShortRegex(a)}),Y(\"MMMM\",function(a,b){return b.monthsRegex(a)}),aa([\"M\",\"MM\"],function(a,b){b[We]=t(a)-1}),aa([\"MMM\",\"MMMM\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[We]=e:l(c).invalidMonth=a});","T(\"Y\",0,0,function()var a=this.year();return 9999\u003e=a?\"\"+a:\"+\"+a}),T(0,[\"YY\",2],0,function(){return this.year()%100}),T(0,[\"YYYY\",4],0,\"year\"),T(0,[\"YYYYY\",5],0,\"year\"),T(0,[\"YYYYYY\",6,!0],0,\"year\"),","Y(\"Y\",Oe),Y(\"YY\",He,De),Y(\"YYYY\",Le,Fe),Y(\"YYYYY\",Me,Ge),Y(\"YYYYYY\",Me,Ge),aa([\"YYYYY\",\"YYYYYY\"],Ve),aa(\"YYYY\",function(b,c)c[Ve]=2===b.length?a.parseTwoDigitYear(b):t(b)}),aa(\"YY\",function(b,c){c[Ve]=a.parseTwoDigitYear(b)}),aa(\"Y\",function(a,b){b[Ve]=parseInt(a,10)}),","a.parseTwoDigitYear=function(a)return t(a)+(t(a)\u003e68?1900:2e3)};","Y(\"w\",He),Y(\"ww\",He,De),Y(\"W\",He),Y(\"WW\",He,De),ba([\"w\",\"ww\",\"W\",\"WW\"],function(a,b,c,d)b[d.substr(0,1)]=t(a)});var jf={dow:0,// Sunday is the first day of the week.","T(\"d\",0,\"do\",\"day\"),T(\"dd\",0,0,function(a)return this.localeData().weekdaysMin(this,a)}),T(\"ddd\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),T(\"dddd\",0,0,function(a){return this.localeData().weekdays(this,a)}),T(\"e\",0,0,\"weekday\"),T(\"E\",0,0,\"isoWeekday\"),","Y(\"d\",He),Y(\"e\",He),Y(\"E\",He),Y(\"dd\",function(a,b)return b.weekdaysMinRegex(a)}),Y(\"ddd\",function(a,b){return b.weekdaysShortRegex(a)}),Y(\"dddd\",function(a,b){return b.weekdaysRegex(a)}),ba([\"dd\",\"ddd\",\"dddd\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);","null!=e?b.d=e:l(c).invalidWeekday=a}),ba([\"d\",\"e\",\"E\"],function(a,b,c,d)b[d]=t(a)});","var kf=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),lf=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),mf=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),nf=Se,of=Se,pf=Se;T(\"H\",[\"HH\",2],0,\"hour\"),T(\"h\",[\"hh\",2],0,Qa),T(\"k\",[\"kk\",2],0,Ra),T(\"hmm\",0,0,function()return\"\"+Qa.apply(this)+S(this.minutes(),2)}),T(\"hmmss\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)+S(this.seconds(),2)}),T(\"Hmm\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)}),T(\"Hmmss\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)+S(this.seconds(),2)}),Sa(\"a\",!0),Sa(\"A\",!1),","L(\"hour\",13),Y(\"a\",Ta),Y(\"A\",Ta),Y(\"H\",He),Y(\"h\",He),Y(\"HH\",He,De),Y(\"hh\",He,De),Y(\"hmm\",Ie),Y(\"hmmss\",Je),Y(\"Hmm\",Ie),Y(\"Hmmss\",Je),aa([\"H\",\"HH\"],Ye),aa([\"a\",\"A\"],function(a,b,c)c._isPm=c._locale.isPM(a),c._meridiem=a}),aa([\"h\",\"hh\"],function(a,b,c){b[Ye]=t(a),l(c).bigHour=!0}),aa(\"hmm\",function(a,b,c){var d=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d)),l(c).bigHour=!0}),aa(\"hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d,2)),b[$e]=t(a.substr(e)),l(c).bigHour=!0}),aa(\"Hmm\",function(a,b,c){var d=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d))}),aa(\"Hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[Ye]=t(a.substr(0,d)),b[Ze]=t(a.substr(d,2)),b[$e]=t(a.substr(e))});var qf,rf=/[ap]\\.?m?\\.?/i,sf=N(\"Hours\",!0),tf={calendar:qe,longDateFormat:re,invalidDate:se,ordinal:te,ordinalParse:ue,relativeTime:ve,months:df,monthsShort:ef,week:jf,weekdays:kf,weekdaysMin:mf,weekdaysShort:lf,meridiemParse:rf},uf={},vf=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,wf=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,xf=/Z|[+-]\\d\\d(?::?\\d\\d)?/,yf=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],","[\"GGGG[W]WWE\",/\\d4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],zf=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Af=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=w(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),","a.ISO_8601=function()};var Bf=w(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?this\u003ea?this:a:n()}),Cf=w(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?a\u003ethis?this:a:n()}),Df=function(){return Date.now?Date.now():+new Date};xb(\"Z\",\":\"),xb(\"ZZ\",\"\"),","Y(\"Z\",Qe),Y(\"ZZ\",Qe),aa([\"Z\",\"ZZ\"],function(a,b,c)c._useUTC=!0,c._tzm=yb(Qe,a)});","// This function will be called whenever a moment is mutated.","a.updateOffset=function()};","var Ff=/^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d3})?\\d*)?$/,Gf=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Hf=Rb(1,\"add\"),If=Rb(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",a.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Jf=w(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});","T(0,[\"gg\",2],0,function()return this.weekYear()%100}),T(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),xc(\"gggg\",\"weekYear\"),xc(\"ggggg\",\"weekYear\"),xc(\"GGGG\",\"isoWeekYear\"),xc(\"GGGGG\",\"isoWeekYear\"),","Y(\"G\",Oe),Y(\"g\",Oe),Y(\"GG\",He,De),Y(\"gg\",He,De),Y(\"GGGG\",Le,Fe),Y(\"gggg\",Le,Fe),Y(\"GGGGG\",Me,Ge),Y(\"ggggg\",Me,Ge),ba([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(a,b,c,d)b[d.substr(0,2)]=t(a)}),ba([\"gg\",\"GG\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),","Y(\"Q\",Ce),aa(\"Q\",function(a,b)b[We]=3*(t(a)-1)}),","Y(\"D\",He),Y(\"DD\",He,De),Y(\"Do\",function(a,b)return a?b._ordinalParse:b._ordinalParseLenient}),aa([\"D\",\"DD\"],Xe),aa(\"Do\",function(a,b){b[Xe]=t(a.match(He)[0],10)});","Y(\"DDD\",Ke),Y(\"DDDD\",Ee),aa([\"DDD\",\"DDDD\"],function(a,b,c)c._dayOfYear=t(a)}),","T(\"S\",0,0,function()return~~(this.millisecond()/100)}),T(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),T(0,[\"SSS\",3],0,\"millisecond\"),T(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),T(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),T(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),T(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),T(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),T(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),","Rf.isPM=Ua,Rf.meridiem=Va,Za(\"en\",ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),","Y(\"x\",Oe),Y(\"X\",Re),aa(\"X\",function(a,b,c)c._d=new Date(1e3*parseFloat(a,10))}),aa(\"x\",function(a,b,c){c._d=new Date(t(a))}),a.version=\"2.14.1\",b(rb),a.fn=Qf,a.min=tb,a.max=ub,a.now=Df,a.utc=j,a.unix=Jc,a.months=Pc,a.isDate=f,a.locale=Za,a.invalid=n,a.duration=Mb,a.isMoment=r,a.weekdays=Rc,a.parseZone=Kc,a.localeData=ab,a.isDuration=wb,a.monthsShort=Qc,a.weekdaysMin=Tc,a.defineLocale=$a,a.updateLocale=_a,a.locales=bb,a.weekdaysShort=Sc,a.normalizeUnits=J,a.relativeTimeRounding=id,a.relativeTimeThreshold=jd,a.calendarFormat=Tb,a.prototype=Qf;var kg=a,lg=(kg.defineLocale(\"af\",{months:\"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),weekdaysShort:\"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),weekdaysMin:\"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),meridiemParse:/vm|nm/i,isPM:function(a){return/^nm$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"vm\":\"VM\":c?\"nm\":\"NM\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Vandag om] LT\",nextDay:\"[Môre om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[Gister om] LT\",lastWeek:\"[Laas] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oor %s\",past:\"%s gelede\",s:\"'n paar sekondes\",m:\"'n minuut\",mm:\"%d minute\",h:\"'n uur\",hh:\"%d ure\",d:\"'n dag\",dd:\"%d dae\",M:\"'n maand\",MM:\"%d maande\",y:\"'n jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Maandag is die eerste dag van die week.","doy:12}}),1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),mg={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},ng=(kg.defineLocale(\"ar-sa\",{months:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},preparse:function(a){return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return mg[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return lg[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:4}}),1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),og={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},pg=function(a){return 0===a?0:1===a?1:2===a?2:a%100\u003e=3\u0026\u002610\u003e=a%100?3:a%100\u003e=11?4:5},qg={s:[\"أقل من ثانية\",\"ثانية واحدة\",[\"ثانيتان\",\"ثانيتين\"],\"%d ثوان\",\"%d ثانية\",\"%d ثانية\"],m:[\"أقل من دقيقة\",\"دقيقة واحدة\",[\"دقيقتان\",\"دقيقتين\"],\"%d دقائق\",\"%d دقيقة\",\"%d دقيقة\"],h:[\"أقل من ساعة\",\"ساعة واحدة\",[\"ساعتان\",\"ساعتين\"],\"%d ساعات\",\"%d ساعة\",\"%d ساعة\"],d:[\"أقل من يوم\",\"يوم واحد\",[\"يومان\",\"يومين\"],\"%d أيام\",\"%d يومًا\",\"%d يوم\"],M:[\"أقل من شهر\",\"شهر واحد\",[\"شهران\",\"شهرين\"],\"%d أشهر\",\"%d شهرا\",\"%d شهر\"],y:[\"أقل من عام\",\"عام واحد\",[\"عامان\",\"عامين\"],\"%d أعوام\",\"%d عامًا\",\"%d عام\"]},rg=function(a){return function(b,c,d,e){var f=pg(b),g=qg[a][pg(b)];return 2===f\u0026\u0026(g=g[c?0:1]),g.replace(/%d/i,b)}},sg=[\"كانون الثاني يناير\",\"شباط فبراير\",\"آذار مارس\",\"نيسان أبريل\",\"أيار مايو\",\"حزيران يونيو\",\"تموز يوليو\",\"آب أغسطس\",\"أيلول سبتمبر\",\"تشرين الأول أكتوبر\",\"تشرين الثاني نوفمبر\",\"كانون الأول ديسمبر\"],tg=(kg.defineLocale(\"ar\",{months:sg,monthsShort:sg,weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/‏M/‏YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم عند الساعة] LT\",nextDay:\"[غدًا عند الساعة] LT\",nextWeek:\"dddd [عند الساعة] LT\",lastDay:\"[أمس عند الساعة] LT\",lastWeek:\"dddd [عند الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"بعد %s\",past:\"منذ %s\",s:rg(\"s\"),m:rg(\"m\"),mm:rg(\"m\"),h:rg(\"h\"),hh:rg(\"h\"),d:rg(\"d\"),dd:rg(\"d\"),M:rg(\"M\"),MM:rg(\"M\"),y:rg(\"y\"),yy:rg(\"y\")},preparse:function(a){return a.replace(/\\u200f/g,\"\").replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return og[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return ng[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.","doy:12}}),1:\"-inci\",5:\"-inci\",8:\"-inci\",70:\"-inci\",80:\"-inci\",2:\"-nci\",7:\"-nci\",20:\"-nci\",50:\"-nci\",3:\"-üncü\",4:\"-üncü\",100:\"-üncü\",6:\"-ncı\",9:\"-uncu\",10:\"-uncu\",30:\"-uncu\",60:\"-ıncı\",90:\"-ıncı\"}),ug=(kg.defineLocale(\"az\",{months:\"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr\".split(\"_\"),monthsShort:\"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek\".split(\"_\"),weekdays:\"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə\".split(\"_\"),weekdaysShort:\"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən\".split(\"_\"),weekdaysMin:\"Bz_BE_ÇA_Çə_CA_Cü_Şə\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[sabah saat] LT\",nextWeek:\"[gələn həftə] dddd [saat] LT\",lastDay:\"[dünən] LT\",lastWeek:\"[keçən həftə] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s əvvəl\",s:\"birneçə saniyyə\",m:\"bir dəqiqə\",mm:\"%d dəqiqə\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir il\",yy:\"%d il\"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(a){return/^(gündüz|axşam)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"gecə\":12\u003ea?\"səhər\":17\u003ea?\"gündüz\":\"axşam\"},ordinalParse:/\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(a){if(0===a)// special case for zero","doy:7}}),kg.defineLocale(\"be\",months:{format:\"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня\".split(\"_\"),standalone:\"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань\".split(\"_\")},monthsShort:\"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж\".split(\"_\"),weekdays:{format:\"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу\".split(\"_\"),standalone:\"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота\".split(\"_\"),isFormat:/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/},weekdaysShort:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сёння ў] LT\",nextDay:\"[Заўтра ў] LT\",lastDay:\"[Учора ў] LT\",nextWeek:function(){return\"[У] dddd [ў] LT\"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return\"[У мінулую] dddd [ў] LT\";case 1:case 2:case 4:return\"[У мінулы] dddd [ў] LT\"}},sameElse:\"L\"},relativeTime:{future:\"праз %s\",past:\"%s таму\",s:\"некалькі секунд\",m:nd,mm:nd,h:nd,hh:nd,d:\"дзень\",dd:nd,M:\"месяц\",MM:nd,y:\"год\",yy:nd},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(a){return/^(дня|вечара)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночы\":12\u003ea?\"раніцы\":17\u003ea?\"дня\":\"вечара\"},ordinalParse:/\\d{1,2}-(і|ы|га)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a%10!==2\u0026\u0026a%10!==3||a%100===12||a%100===13?a+\"-ы\":a+\"-і\";case\"D\":return a+\"-га\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"bg\",months:\"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Днес в] LT\",nextDay:\"[Утре в] LT\",nextWeek:\"dddd [в] LT\",lastDay:\"[Вчера в] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[В изминалата] dddd [в] LT\";case 1:case 2:case 4:case 5:return\"[В изминалия] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"след %s\",past:\"преди %s\",s:\"няколко секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дни\",M:\"месец\",MM:\"%d месеца\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"১\",2:\"২\",3:\"৩\",4:\"৪\",5:\"৫\",6:\"৬\",7:\"৭\",8:\"৮\",9:\"৯\",0:\"০\"}),vg={\"১\":\"1\",\"২\":\"2\",\"৩\":\"3\",\"৪\":\"4\",\"৫\":\"5\",\"৬\":\"6\",\"৭\":\"7\",\"৮\":\"8\",\"৯\":\"9\",\"০\":\"0\"},wg=(kg.defineLocale(\"bn\",{months:\"জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর\".split(\"_\"),monthsShort:\"জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্\".split(\"_\"),weekdays:\"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার\".split(\"_\"),weekdaysShort:\"রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি\".split(\"_\"),weekdaysMin:\"রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি\".split(\"_\"),longDateFormat:{LT:\"A h:mm সময়\",LTS:\"A h:mm:ss সময়\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm সময়\",LLLL:\"dddd, D MMMM YYYY, A h:mm সময়\"},calendar:{sameDay:\"[আজ] LT\",nextDay:\"[আগামীকাল] LT\",nextWeek:\"dddd, LT\",lastDay:\"[গতকাল] LT\",lastWeek:\"[গত] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s পরে\",past:\"%s আগে\",s:\"কয়েক সেকেন্ড\",m:\"এক মিনিট\",mm:\"%d মিনিট\",h:\"এক ঘন্টা\",hh:\"%d ঘন্টা\",d:\"এক দিন\",dd:\"%d দিন\",M:\"এক মাস\",MM:\"%d মাস\",y:\"এক বছর\",yy:\"%d বছর\"},preparse:function(a){return a.replace(/[১২৩৪৫৬৭৮৯০]/g,function(a){return vg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return ug[a]})},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"রাত\"===b\u0026\u0026a\u003e=4||\"দুপুর\"===b\u0026\u00265\u003ea||\"বিকাল\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"রাত\":10\u003ea?\"সকাল\":17\u003ea?\"দুপুর\":20\u003ea?\"বিকাল\":\"রাত\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),1:\"༡\",2:\"༢\",3:\"༣\",4:\"༤\",5:\"༥\",6:\"༦\",7:\"༧\",8:\"༨\",9:\"༩\",0:\"༠\"}),xg={\"༡\":\"1\",\"༢\":\"2\",\"༣\":\"3\",\"༤\":\"4\",\"༥\":\"5\",\"༦\":\"6\",\"༧\":\"7\",\"༨\":\"8\",\"༩\":\"9\",\"༠\":\"0\"},yg=(kg.defineLocale(\"bo\",{months:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),monthsShort:\"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ\".split(\"_\"),weekdays:\"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་\".split(\"_\"),weekdaysShort:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),weekdaysMin:\"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[དི་རིང] LT\",nextDay:\"[སང་ཉིན] LT\",nextWeek:\"[བདུན་ཕྲག་རྗེས་མ], LT\",lastDay:\"[ཁ་སང] LT\",lastWeek:\"[བདུན་ཕྲག་མཐའ་མ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ལ་\",past:\"%s སྔན་ལ\",s:\"ལམ་སང\",m:\"སྐར་མ་གཅིག\",mm:\"%d སྐར་མ\",h:\"ཆུ་ཚོད་གཅིག\",hh:\"%d ཆུ་ཚོད\",d:\"ཉིན་གཅིག\",dd:\"%d ཉིན་\",M:\"ཟླ་བ་གཅིག\",MM:\"%d ཟླ་བ\",y:\"ལོ་གཅིག\",yy:\"%d ལོ\"},preparse:function(a){return a.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,function(a){return xg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return wg[a]})},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"མཚན་མོ\"===b\u0026\u0026a\u003e=4||\"ཉིན་གུང\"===b\u0026\u00265\u003ea||\"དགོང་དག\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"མཚན་མོ\":10\u003ea?\"ཞོགས་ཀས\":17\u003ea?\"ཉིན་གུང\":20\u003ea?\"དགོང་དག\":\"མཚན་མོ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"br\",months:\"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu\".split(\"_\"),monthsShort:\"Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker\".split(\"_\"),weekdays:\"Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn\".split(\"_\"),weekdaysShort:\"Sul_Lun_Meu_Mer_Yao_Gwe_Sad\".split(\"_\"),weekdaysMin:\"Su_Lu_Me_Mer_Ya_Gw_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h[e]mm A\",LTS:\"h[e]mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [a viz] MMMM YYYY\",LLL:\"D [a viz] MMMM YYYY h[e]mm A\",LLLL:\"dddd, D [a viz] MMMM YYYY h[e]mm A\"},calendar:{sameDay:\"[Hiziv da] LT\",nextDay:\"[Warc'hoazh da] LT\",nextWeek:\"dddd [da] LT\",lastDay:\"[Dec'h da] LT\",lastWeek:\"dddd [paset da] LT\",sameElse:\"L\"},relativeTime:{future:\"a-benn %s\",past:\"%s 'zo\",s:\"un nebeud segondennoù\",m:\"ur vunutenn\",mm:od,h:\"un eur\",hh:\"%d eur\",d:\"un devezh\",dd:od,M:\"ur miz\",MM:od,y:\"ur bloaz\",yy:pd},ordinalParse:/\\d{1,2}(añ|vet)/,ordinal:function(a){var b=1===a?\"añ\":\"vet\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"bs\",months:\"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:td,mm:td,h:td,hh:td,d:\"dan\",dd:td,M:\"mjesec\",MM:td,y:\"godinu\",yy:td},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ca\",months:\"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre\".split(\"_\"),monthsShort:\"gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte\".split(\"_\"),weekdaysShort:\"dg._dl._dt._dc._dj._dv._ds.\".split(\"_\"),weekdaysMin:\"Dg_Dl_Dt_Dc_Dj_Dv_Ds\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[avui a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextDay:function(){return\"[demà a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},nextWeek:function(){return\"dddd [a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastDay:function(){return\"[ahir a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [passat a \"+(1!==this.hours()?\"les\":\"la\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"fa %s\",s:\"uns segons\",m:\"un minut\",mm:\"%d minuts\",h:\"una hora\",hh:\"%d hores\",d:\"un dia\",dd:\"%d dies\",M:\"un mes\",MM:\"%d mesos\",y:\"un any\",yy:\"%d anys\"},ordinalParse:/\\d{1,2}(r|n|t|è|a)/,ordinal:function(a,b){var c=1===a?\"r\":2===a?\"n\":3===a?\"r\":4===a?\"t\":\"è\";return\"w\"!==b\u0026\u0026\"W\"!==b||(c=\"a\"),a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\")),zg=\"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\"),Ag=(kg.defineLocale(\"cs\",months:yg,monthsShort:zg,monthsParse:function(a,b){var c,d=[];for(c=0;12\u003ec;c++)","d[c]=new RegExp(\"^\"+a[c]+\"$|^\"+b[c]+\"$\",\"i\");return d}(yg,zg),shortMonthsParse:function(a)var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(zg),longMonthsParse:function(a){var b,c=[];for(b=0;12\u003eb;b++)c[b]=new RegExp(\"^\"+a[b]+\"$\",\"i\");return c}(yg),weekdays:\"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),weekdaysShort:\"ne_po_út_st_čt_pá_so\".split(\"_\"),weekdaysMin:\"ne_po_út_st_čt_pá_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},calendar:{sameDay:\"[dnes v] LT\",nextDay:\"[zítra v] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v neděli v] LT\";case 1:case 2:return\"[v] dddd [v] LT\";case 3:return\"[ve středu v] LT\";case 4:return\"[ve čtvrtek v] LT\";case 5:return\"[v pátek v] LT\";case 6:return\"[v sobotu v] LT\"}},lastDay:\"[včera v] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulou neděli v] LT\";case 1:case 2:return\"[minulé] dddd [v] LT\";case 3:return\"[minulou středu v] LT\";case 4:case 5:return\"[minulý] dddd [v] LT\";case 6:return\"[minulou sobotu v] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"před %s\",s:vd,m:vd,mm:vd,h:vd,hh:vd,d:vd,dd:vd,M:vd,MM:vd,y:vd,yy:vd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"cv\",months:\"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав\".split(\"_\"),monthsShort:\"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш\".split(\"_\"),weekdays:\"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун\".split(\"_\"),weekdaysShort:\"выр_тун_ытл_юн_кӗҫ_эрн_шӑм\".split(\"_\"),weekdaysMin:\"вр_тн_ыт_юн_кҫ_эр_шм\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]\",LLL:\"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\",LLLL:\"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm\"},calendar:{sameDay:\"[Паян] LT [сехетре]\",nextDay:\"[Ыран] LT [сехетре]\",lastDay:\"[Ӗнер] LT [сехетре]\",nextWeek:\"[Ҫитес] dddd LT [сехетре]\",lastWeek:\"[Иртнӗ] dddd LT [сехетре]\",sameElse:\"L\"},relativeTime:{future:function(a){var b=/сехет$/i.exec(a)?\"рен\":/ҫул$/i.exec(a)?\"тан\":\"ран\";return a+b},past:\"%s каялла\",s:\"пӗр-ик ҫеккунт\",m:\"пӗр минут\",mm:\"%d минут\",h:\"пӗр сехет\",hh:\"%d сехет\",d:\"пӗр кун\",dd:\"%d кун\",M:\"пӗр уйӑх\",MM:\"%d уйӑх\",y:\"пӗр ҫул\",yy:\"%d ҫул\"},ordinalParse:/\\d{1,2}-мӗш/,ordinal:\"%d-мӗш\",week:{dow:1,// Monday is the first day of the week.","ordinal:function(a)var b=a,c=\"\",d=[\"\",\"af\",\"il\",\"ydd\",\"ydd\",\"ed\",\"ed\",\"ed\",\"fed\",\"fed\",\"fed\",// 1af to 10fed","doy:4}}),[\"ޖެނުއަރީ\",\"ފެބްރުއަރީ\",\"މާރިޗު\",\"އޭޕްރީލު\",\"މޭ\",\"ޖޫން\",\"ޖުލައި\",\"އޯގަސްޓު\",\"ސެޕްޓެމްބަރު\",\"އޮކްޓޯބަރު\",\"ނޮވެމްބަރު\",\"ޑިސެމްބަރު\"]),Bg=[\"އާދިއްތަ\",\"ހޯމަ\",\"އަންގާރަ\",\"ބުދަ\",\"ބުރާސްފަތި\",\"ހުކުރު\",\"ހޮނިހިރު\"],Cg=(kg.defineLocale(\"dv\",months:Ag,monthsShort:Ag,weekdays:Bg,weekdaysShort:Bg,weekdaysMin:\"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/M/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/މކ|މފ/,isPM:function(a){return\"މފ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"މކ\":\"މފ\"},calendar:{sameDay:\"[މިއަދު] LT\",nextDay:\"[މާދަމާ] LT\",nextWeek:\"dddd LT\",lastDay:\"[އިއްޔެ] LT\",lastWeek:\"[ފާއިތުވި] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"ތެރޭގައި %s\",past:\"ކުރިން %s\",s:\"ސިކުންތުކޮޅެއް\",m:\"މިނިޓެއް\",mm:\"މިނިޓު %d\",h:\"ގަޑިއިރެއް\",hh:\"ގަޑިއިރު %d\",d:\"ދުވަހެއް\",dd:\"ދުވަސް %d\",M:\"މަހެއް\",MM:\"މަސް %d\",y:\"އަހަރެއް\",yy:\"އަހަރު %d\"},preparse:function(a){return a.replace(/،/g,\",\")},postformat:function(a){return a.replace(/,/g,\"،\")},week:{dow:7,// Sunday is the first day of the week.","doy:12}}),kg.defineLocale(\"el\",monthsNominativeEl:\"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),monthsGenitiveEl:\"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου\".split(\"_\"),months:function(a,b){return/D/.test(b.substring(0,b.indexOf(\"MMMM\")))?this._monthsGenitiveEl[a.month()]:this._monthsNominativeEl[a.month()]},monthsShort:\"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ\".split(\"_\"),weekdays:\"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),weekdaysShort:\"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),weekdaysMin:\"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),meridiem:function(a,b,c){return a\u003e11?c?\"μμ\":\"ΜΜ\":c?\"πμ\":\"ΠΜ\"},isPM:function(a){return\"μ\"===(a+\"\").toLowerCase()[0]},meridiemParse:/[ΠΜ]\\.?Μ?\\.?/i,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendarEl:{sameDay:\"[Σήμερα {}] LT\",nextDay:\"[Αύριο {}] LT\",nextWeek:\"dddd [{}] LT\",lastDay:\"[Χθες {}] LT\",lastWeek:function(){switch(this.day()){case 6:return\"[το προηγούμενο] dddd [{}] LT\";default:return\"[την προηγούμενη] dddd [{}] LT\"}},sameElse:\"L\"},calendar:function(a,b){var c=this._calendarEl[a],d=b\u0026\u0026b.hours();return y(c)\u0026\u0026(c=c.apply(b)),c.replace(\"{}\",d%12===1?\"στη\":\"στις\")},relativeTime:{future:\"σε %s\",past:\"%s πριν\",s:\"λίγα δευτερόλεπτα\",m:\"ένα λεπτό\",mm:\"%d λεπτά\",h:\"μία ώρα\",hh:\"%d ώρες\",d:\"μία μέρα\",dd:\"%d μέρες\",M:\"ένας μήνας\",MM:\"%d μήνες\",y:\"ένας χρόνος\",yy:\"%d χρόνια\"},ordinalParse:/\\d{1,2}η/,ordinal:\"%dη\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-au\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-ca\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"YYYY-MM-DD\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),kg.defineLocale(\"en-gb\",{months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-ie\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"en-nz\",months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},ordinalParse:/\\d{1,2}(st|nd|rd|th)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"eo\",months:\"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec\".split(\"_\"),weekdays:\"Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato\".split(\"_\"),weekdaysShort:\"Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Ĵa_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D[-an de] MMMM, YYYY\",LLL:\"D[-an de] MMMM, YYYY HH:mm\",LLLL:\"dddd, [la] D[-an de] MMMM, YYYY HH:mm\"},meridiemParse:/[ap]\\.t\\.m/i,isPM:function(a){return\"p\"===a.charAt(0).toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"p.t.m.\":\"P.T.M.\":c?\"a.t.m.\":\"A.T.M.\"},calendar:{sameDay:\"[Hodiaŭ je] LT\",nextDay:\"[Morgaŭ je] LT\",nextWeek:\"dddd [je] LT\",lastDay:\"[Hieraŭ je] LT\",lastWeek:\"[pasinta] dddd [je] LT\",sameElse:\"L\"},relativeTime:{future:\"je %s\",past:\"antaŭ %s\",s:\"sekundoj\",m:\"minuto\",mm:\"%d minutoj\",h:\"horo\",hh:\"%d horoj\",d:\"tago\",//ne 'diurno', ĉar estas uzita por proksimumo","doy:7}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),Dg=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),Eg=(kg.defineLocale(\"es-do\",months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Dg[a.month()]:Cg[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\")),Fg=\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),Gg=(kg.defineLocale(\"es\",months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Fg[a.month()]:Eg[a.month()]},monthsParseExact:!0,weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoy a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextDay:function(){return\"[mañana a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},nextWeek:function(){return\"dddd [a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastDay:function(){return\"[ayer a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},lastWeek:function(){return\"[el] dddd [pasado a la\"+(1!==this.hours()?\"s\":\"\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"۱\",2:\"۲\",3:\"۳\",4:\"۴\",5:\"۵\",6:\"۶\",7:\"۷\",8:\"۸\",9:\"۹\",0:\"۰\"}),Hg={\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"۰\":\"0\"},Ig=(kg.defineLocale(\"fa\",{months:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),monthsShort:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),weekdays:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysShort:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysMin:\"ی_د_س_چ_پ_ج_ش\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(a){return/بعد از ظهر/.test(a)},meridiem:function(a,b,c){return 12\u003ea?\"قبل از ظهر\":\"بعد از ظهر\"},calendar:{sameDay:\"[امروز ساعت] LT\",nextDay:\"[فردا ساعت] LT\",nextWeek:\"dddd [ساعت] LT\",lastDay:\"[دیروز ساعت] LT\",lastWeek:\"dddd [پیش] [ساعت] LT\",sameElse:\"L\"},relativeTime:{future:\"در %s\",past:\"%s پیش\",s:\"چندین ثانیه\",m:\"یک دقیقه\",mm:\"%d دقیقه\",h:\"یک ساعت\",hh:\"%d ساعت\",d:\"یک روز\",dd:\"%d روز\",M:\"یک ماه\",MM:\"%d ماه\",y:\"یک سال\",yy:\"%d سال\"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return Hg[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return Gg[a]}).replace(/,/g,\"،\")},ordinalParse:/\\d{1,2}م/,ordinal:\"%dم\",week:{dow:6,// Saturday is the first day of the week.","doy:4}}),kg.defineLocale(\"fr-ca\",months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")}}),kg.defineLocale(\"fr-ch\",{months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|e)/,ordinal:function(a){return a+(1===a?\"er\":\"e\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"fr\",months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),monthsParseExact:!0,weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Aujourd'hui à] LT\",nextDay:\"[Demain à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[Hier à] LT\",lastWeek:\"dddd [dernier à] LT\",sameElse:\"L\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinalParse:/\\d{1,2}(er|)/,ordinal:function(a){return a+(1===a?\"er\":\"\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),\"jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.\".split(\"_\")),Lg=\"jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),Mg=(kg.defineLocale(\"fy\",months:\"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?Lg[a.month()]:Kg[a.month()]},monthsParseExact:!0,weekdays:\"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon\".split(\"_\"),weekdaysShort:\"si._mo._ti._wo._to._fr._so.\".split(\"_\"),weekdaysMin:\"Si_Mo_Ti_Wo_To_Fr_So\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[hjoed om] LT\",nextDay:\"[moarn om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[juster om] LT\",lastWeek:\"[ôfrûne] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oer %s\",past:\"%s lyn\",s:\"in pear sekonden\",m:\"ien minút\",mm:\"%d minuten\",h:\"ien oere\",hh:\"%d oeren\",d:\"ien dei\",dd:\"%d dagen\",M:\"ien moanne\",MM:\"%d moannen\",y:\"ien jier\",yy:\"%d jierren\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","doy:4}}),[\"Am Faoilleach\",\"An Gearran\",\"Am Màrt\",\"An Giblean\",\"An Cèitean\",\"An t-Ògmhios\",\"An t-Iuchar\",\"An Lùnastal\",\"An t-Sultain\",\"An Dàmhair\",\"An t-Samhain\",\"An Dùbhlachd\"]),Ng=[\"Faoi\",\"Gear\",\"Màrt\",\"Gibl\",\"Cèit\",\"Ògmh\",\"Iuch\",\"Lùn\",\"Sult\",\"Dàmh\",\"Samh\",\"Dùbh\"],Og=[\"Didòmhnaich\",\"Diluain\",\"Dimàirt\",\"Diciadain\",\"Diardaoin\",\"Dihaoine\",\"Disathairne\"],Pg=[\"Did\",\"Dil\",\"Dim\",\"Dic\",\"Dia\",\"Dih\",\"Dis\"],Qg=[\"Dò\",\"Lu\",\"Mà\",\"Ci\",\"Ar\",\"Ha\",\"Sa\"],Rg=(kg.defineLocale(\"gd\",months:Mg,monthsShort:Ng,monthsParseExact:!0,weekdays:Og,weekdaysShort:Pg,weekdaysMin:Qg,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[An-diugh aig] LT\",nextDay:\"[A-màireach aig] LT\",nextWeek:\"dddd [aig] LT\",lastDay:\"[An-dè aig] LT\",lastWeek:\"dddd [seo chaidh] [aig] LT\",sameElse:\"L\"},relativeTime:{future:\"ann an %s\",past:\"bho chionn %s\",s:\"beagan diogan\",m:\"mionaid\",mm:\"%d mionaidean\",h:\"uair\",hh:\"%d uairean\",d:\"latha\",dd:\"%d latha\",M:\"mìos\",MM:\"%d mìosan\",y:\"bliadhna\",yy:\"%d bliadhna\"},ordinalParse:/\\d{1,2}(d|na|mh)/,ordinal:function(a){var b=1===a?\"d\":a%10===2?\"na\":\"mh\";return a+b},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"gl\",months:\"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro\".split(\"_\"),monthsShort:\"Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado\".split(\"_\"),weekdaysShort:\"Dom._Lun._Mar._Mér._Xov._Ven._Sáb.\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Mé_Xo_Ve_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd D MMMM YYYY H:mm\"},calendar:{sameDay:function(){return\"[hoxe \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextDay:function(){return\"[mañá \"+(1!==this.hours()?\"ás\":\"á\")+\"] LT\"},nextWeek:function(){return\"dddd [\"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},lastDay:function(){return\"[onte \"+(1!==this.hours()?\"á\":\"a\")+\"] LT\"},lastWeek:function(){return\"[o] dddd [pasado \"+(1!==this.hours()?\"ás\":\"a\")+\"] LT\"},sameElse:\"L\"},relativeTime:{future:function(a){return\"uns segundos\"===a?\"nuns segundos\":\"en \"+a},past:\"hai %s\",s:\"uns segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"unha hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"he\",months:\"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),monthsShort:\"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳\".split(\"_\"),weekdays:\"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),weekdaysShort:\"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),weekdaysMin:\"א_ב_ג_ד_ה_ו_ש\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[היום ב־]LT\",nextDay:\"[מחר ב־]LT\",nextWeek:\"dddd [בשעה] LT\",lastDay:\"[אתמול ב־]LT\",lastWeek:\"[ביום] dddd [האחרון בשעה] LT\",sameElse:\"L\"},relativeTime:{future:\"בעוד %s\",past:\"לפני %s\",s:\"מספר שניות\",m:\"דקה\",mm:\"%d דקות\",h:\"שעה\",hh:function(a){return 2===a?\"שעתיים\":a+\" שעות\"},d:\"יום\",dd:function(a){return 2===a?\"יומיים\":a+\" ימים\"},M:\"חודש\",MM:function(a){return 2===a?\"חודשיים\":a+\" חודשים\"},y:\"שנה\",yy:function(a){return 2===a?\"שנתיים\":a%10===0\u0026\u002610!==a?a+\" שנה\":a+\" שנים\"}},meridiemParse:/אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(a){return/^(אחה\"צ|אחרי הצהריים|בערב)$/.test(a)},meridiem:function(a,b,c){return 5\u003ea?\"לפנות בוקר\":10\u003ea?\"בבוקר\":12\u003ea?c?'לפנה\"צ':\"לפני הצהריים\":18\u003ea?c?'אחה\"צ':\"אחרי הצהריים\":\"בערב\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),Sg={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},Tg=(kg.defineLocale(\"hi\",{months:\"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर\".split(\"_\"),monthsShort:\"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm बजे\",LTS:\"A h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, A h:mm बजे\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[कल] LT\",nextWeek:\"dddd, LT\",lastDay:\"[कल] LT\",lastWeek:\"[पिछले] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s में\",past:\"%s पहले\",s:\"कुछ ही क्षण\",m:\"एक मिनट\",mm:\"%d मिनट\",h:\"एक घंटा\",hh:\"%d घंटे\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महीने\",MM:\"%d महीने\",y:\"एक वर्ष\",yy:\"%d वर्ष\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return Sg[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Rg[a]})},","meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(a,b)return 12===a\u0026\u0026(a=0),\"रात\"===b?4\u003ea?a:a+12:\"सुबह\"===b?a:\"दोपहर\"===b?a\u003e=10?a:a+12:\"शाम\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात\":10\u003ea?\"सुबह\":17\u003ea?\"दोपहर\":20\u003ea?\"शाम\":\"रात\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"hr\",months:{format:\"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca\".split(\"_\"),standalone:\"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\")},monthsShort:\"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[jučer u] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:return\"[prošlu] dddd [u] LT\";case 6:return\"[prošle] [subote] [u] LT\";case 1:case 2:case 4:case 5:return\"[prošli] dddd [u] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"par sekundi\",m:Bd,mm:Bd,h:Bd,hh:Bd,d:\"dan\",dd:Bd,M:\"mjesec\",MM:Bd,y:\"godinu\",yy:Bd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),\"vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton\".split(\" \")),Ug=(kg.defineLocale(\"hu\",months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"},meridiemParse:/de|du/i,isPM:function(a){return\"u\"===a.charAt(1).toLowerCase()},meridiem:function(a,b,c){return 12\u003ea?c===!0?\"de\":\"DE\":c===!0?\"du\":\"DU\"},calendar:{sameDay:\"[ma] LT[-kor]\",nextDay:\"[holnap] LT[-kor]\",nextWeek:function(){return Dd.call(this,!0)},lastDay:\"[tegnap] LT[-kor]\",lastWeek:function(){return Dd.call(this,!1)},sameElse:\"L\"},relativeTime:{future:\"%s múlva\",past:\"%s\",s:Cd,m:Cd,mm:Cd,h:Cd,hh:Cd,d:Cd,dd:Cd,M:Cd,MM:Cd,y:Cd,yy:Cd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"hy-am\",months:{format:\"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի\".split(\"_\"),standalone:\"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր\".split(\"_\")},monthsShort:\"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ\".split(\"_\"),weekdays:\"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ\".split(\"_\"),weekdaysShort:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),weekdaysMin:\"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY թ.\",LLL:\"D MMMM YYYY թ., HH:mm\",LLLL:\"dddd, D MMMM YYYY թ., HH:mm\"},calendar:{sameDay:\"[այսօր] LT\",nextDay:\"[վաղը] LT\",lastDay:\"[երեկ] LT\",nextWeek:function(){return\"dddd [օրը ժամը] LT\"},lastWeek:function(){return\"[անցած] dddd [օրը ժամը] LT\"},sameElse:\"L\"},relativeTime:{future:\"%s հետո\",past:\"%s առաջ\",s:\"մի քանի վայրկյան\",m:\"րոպե\",mm:\"%d րոպե\",h:\"ժամ\",hh:\"%d ժամ\",d:\"օր\",dd:\"%d օր\",M:\"ամիս\",MM:\"%d ամիս\",y:\"տարի\",yy:\"%d տարի\"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(a){return/^(ցերեկվա|երեկոյան)$/.test(a)},meridiem:function(a){return 4\u003ea?\"գիշերվա\":12\u003ea?\"առավոտվա\":17\u003ea?\"ցերեկվա\":\"երեկոյան\"},ordinalParse:/\\d{1,2}|\\d{1,2}-(ին|րդ)/,ordinal:function(a,b){switch(b){case\"DDD\":case\"w\":case\"W\":case\"DDDo\":return 1===a?a+\"-ին\":a+\"-րդ\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"id\",months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"siang\"===b?a\u003e=11?a:a+12:\"sore\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"siang\":19\u003ea?\"sore\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Besok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kemarin pukul] LT\",lastWeek:\"dddd [lalu pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lalu\",s:\"beberapa detik\",m:\"semenit\",mm:\"%d menit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"it\",months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),weekdays:\"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato\".split(\"_\"),weekdaysShort:\"Dom_Lun_Mar_Mer_Gio_Ven_Sab\".split(\"_\"),weekdaysMin:\"Do_Lu_Ma_Me_Gi_Ve_Sa\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Oggi alle] LT\",nextDay:\"[Domani alle] LT\",nextWeek:\"dddd [alle] LT\",lastDay:\"[Ieri alle] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[la scorsa] dddd [alle] LT\";default:return\"[lo scorso] dddd [alle] LT\"}},sameElse:\"L\"},relativeTime:{future:function(a){return(/^[0-9].+$/.test(a)?\"tra\":\"in\")+\" \"+a},past:\"%s fa\",s:\"alcuni secondi\",m:\"un minuto\",mm:\"%d minuti\",h:\"un'ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"ja\",months:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),weekdaysShort:\"日_月_火_水_木_金_土\".split(\"_\"),weekdaysMin:\"日_月_火_水_木_金_土\".split(\"_\"),longDateFormat:{LT:\"Ah時m分\",LTS:\"Ah時m分s秒\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah時m分\",LLLL:\"YYYY年M月D日Ah時m分 dddd\"},meridiemParse:/午前|午後/i,isPM:function(a){return\"午後\"===a},meridiem:function(a,b,c){return 12\u003ea?\"午前\":\"午後\"},calendar:{sameDay:\"[今日] LT\",nextDay:\"[明日] LT\",nextWeek:\"[来週]dddd LT\",lastDay:\"[昨日] LT\",lastWeek:\"[前週]dddd LT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}日/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";default:return a}},relativeTime:{future:\"%s後\",past:\"%s前\",s:\"数秒\",m:\"1分\",mm:\"%d分\",h:\"1時間\",hh:\"%d時間\",d:\"1日\",dd:\"%d日\",M:\"1ヶ月\",MM:\"%dヶ月\",y:\"1年\",yy:\"%d年\"}}),kg.defineLocale(\"jv\",{months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des\".split(\"_\"),weekdays:\"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Reb_Kem_Jem_Sep\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sp\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"enjing\"===b?a:\"siyang\"===b?a\u003e=11?a:a+12:\"sonten\"===b||\"ndalu\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"enjing\":15\u003ea?\"siyang\":19\u003ea?\"sonten\":\"ndalu\"},calendar:{sameDay:\"[Dinten puniko pukul] LT\",nextDay:\"[Mbenjang pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kala wingi pukul] LT\",lastWeek:\"dddd [kepengker pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"wonten ing %s\",past:\"%s ingkang kepengker\",s:\"sawetawis detik\",m:\"setunggal menit\",mm:\"%d menit\",h:\"setunggal jam\",hh:\"%d jam\",d:\"sedinten\",dd:\"%d dinten\",M:\"sewulan\",MM:\"%d wulan\",y:\"setaun\",yy:\"%d taun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ka\",months:{standalone:\"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი\".split(\"_\"),format:\"იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს\".split(\"_\")},monthsShort:\"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),weekdays:{standalone:\"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი\".split(\"_\"),format:\"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს\".split(\"_\"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:\"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),weekdaysMin:\"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[დღეს] LT[-ზე]\",nextDay:\"[ხვალ] LT[-ზე]\",lastDay:\"[გუშინ] LT[-ზე]\",nextWeek:\"[შემდეგ] dddd LT[-ზე]\",lastWeek:\"[წინა] dddd LT-ზე\",sameElse:\"L\"},relativeTime:{future:function(a){return/(წამი|წუთი|საათი|წელი)/.test(a)?a.replace(/ი$/,\"ში\"):a+\"ში\"},past:function(a){return/(წამი|წუთი|საათი|დღე|თვე)/.test(a)?a.replace(/(ი|ე)$/,\"ის წინ\"):/წელი/.test(a)?a.replace(/წელი$/,\"წლის წინ\"):void 0},s:\"რამდენიმე წამი\",m:\"წუთი\",mm:\"%d წუთი\",h:\"საათი\",hh:\"%d საათი\",d:\"დღე\",dd:\"%d დღე\",M:\"თვე\",MM:\"%d თვე\",y:\"წელი\",yy:\"%d წელი\"},ordinalParse:/0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,ordinal:function(a){return 0===a?a:1===a?a+\"-ლი\":20\u003ea||100\u003e=a\u0026\u0026a%20===0||a%100===0?\"მე-\"+a:a+\"-ე\"},week:{dow:1,doy:7}}),{0:\"-ші\",1:\"-ші\",2:\"-ші\",3:\"-ші\",4:\"-ші\",5:\"-ші\",6:\"-шы\",7:\"-ші\",8:\"-ші\",9:\"-шы\",10:\"-шы\",20:\"-шы\",30:\"-шы\",40:\"-шы\",50:\"-ші\",60:\"-шы\",70:\"-ші\",80:\"-ші\",90:\"-шы\",100:\"-ші\"}),Vg=(kg.defineLocale(\"kk\",{months:\"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан\".split(\"_\"),monthsShort:\"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел\".split(\"_\"),weekdays:\"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі\".split(\"_\"),weekdaysShort:\"жек_дүй_сей_сәр_бей_жұм_сен\".split(\"_\"),weekdaysMin:\"жк_дй_сй_ср_бй_жм_сн\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгін сағат] LT\",nextDay:\"[Ертең сағат] LT\",nextWeek:\"dddd [сағат] LT\",lastDay:\"[Кеше сағат] LT\",lastWeek:\"[Өткен аптаның] dddd [сағат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ішінде\",past:\"%s бұрын\",s:\"бірнеше секунд\",m:\"бір минут\",mm:\"%d минут\",h:\"бір сағат\",hh:\"%d сағат\",d:\"бір күн\",dd:\"%d күн\",M:\"бір ай\",MM:\"%d ай\",y:\"бір жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(ші|шы)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Ug[a]||Ug[b]||Ug[c])},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"ko\",months:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),monthsShort:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),weekdays:\"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),weekdaysShort:\"일_월_화_수_목_금_토\".split(\"_\"),weekdaysMin:\"일_월_화_수_목_금_토\".split(\"_\"),longDateFormat:{LT:\"A h시 m분\",LTS:\"A h시 m분 s초\",L:\"YYYY.MM.DD\",LL:\"YYYY년 MMMM D일\",LLL:\"YYYY년 MMMM D일 A h시 m분\",LLLL:\"YYYY년 MMMM D일 dddd A h시 m분\"},calendar:{sameDay:\"오늘 LT\",nextDay:\"내일 LT\",nextWeek:\"dddd LT\",lastDay:\"어제 LT\",lastWeek:\"지난주 dddd LT\",sameElse:\"L\"},relativeTime:{future:\"%s 후\",past:\"%s 전\",s:\"몇 초\",ss:\"%d초\",m:\"일분\",mm:\"%d분\",h:\"한 시간\",hh:\"%d시간\",d:\"하루\",dd:\"%d일\",M:\"한 달\",MM:\"%d달\",y:\"일 년\",yy:\"%d년\"},ordinalParse:/\\d{1,2}일/,ordinal:\"%d일\",meridiemParse:/오전|오후/,isPM:function(a){return\"오후\"===a},meridiem:function(a,b,c){return 12\u003ea?\"오전\":\"오후\"}}),{0:\"-чү\",1:\"-чи\",2:\"-чи\",3:\"-чү\",4:\"-чү\",5:\"-чи\",6:\"-чы\",7:\"-чи\",8:\"-чи\",9:\"-чу\",10:\"-чу\",20:\"-чы\",30:\"-чу\",40:\"-чы\",50:\"-чү\",60:\"-чы\",70:\"-чи\",80:\"-чи\",90:\"-чу\",100:\"-чү\"}),Wg=(kg.defineLocale(\"ky\",{months:\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),monthsShort:\"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек\".split(\"_\"),weekdays:\"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби\".split(\"_\"),weekdaysShort:\"Жек_Дүй_Шей_Шар_Бей_Жум_Ише\".split(\"_\"),weekdaysMin:\"Жк_Дй_Шй_Шр_Бй_Жм_Иш\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Бүгүн саат] LT\",nextDay:\"[Эртең саат] LT\",nextWeek:\"dddd [саат] LT\",lastDay:\"[Кече саат] LT\",lastWeek:\"[Өткен аптанын] dddd [күнү] [саат] LT\",sameElse:\"L\"},relativeTime:{future:\"%s ичинде\",past:\"%s мурун\",s:\"бирнече секунд\",m:\"бир мүнөт\",mm:\"%d мүнөт\",h:\"бир саат\",hh:\"%d саат\",d:\"бир күн\",dd:\"%d күн\",M:\"бир ай\",MM:\"%d ай\",y:\"бир жыл\",yy:\"%d жыл\"},ordinalParse:/\\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(a){var b=a%10,c=a\u003e=100?100:null;return a+(Vg[a]||Vg[b]||Vg[c])},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"lb\",months:\"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),monthsParseExact:!0,weekdays:\"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),weekdaysShort:\"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm [Auer]\",LTS:\"H:mm:ss [Auer]\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm [Auer]\",LLLL:\"dddd, D. MMMM YYYY H:mm [Auer]\"},calendar:{sameDay:\"[Haut um] LT\",sameElse:\"L\",nextDay:\"[Muer um] LT\",nextWeek:\"dddd [um] LT\",lastDay:\"[Gëschter um] LT\",lastWeek:function(){","doy:4}}),kg.defineLocale(\"lo\",months:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),monthsShort:\"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ\".split(\"_\"),weekdays:\"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysShort:\"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ\".split(\"_\"),weekdaysMin:\"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"ວັນdddd D MMMM YYYY HH:mm\"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(a){return\"ຕອນແລງ\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ຕອນເຊົ້າ\":\"ຕອນແລງ\"},calendar:{sameDay:\"[ມື້ນີ້ເວລາ] LT\",nextDay:\"[ມື້ອື່ນເວລາ] LT\",nextWeek:\"[ວັນ]dddd[ໜ້າເວລາ] LT\",lastDay:\"[ມື້ວານນີ້ເວລາ] LT\",lastWeek:\"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT\",sameElse:\"L\"},relativeTime:{future:\"ອີກ %s\",past:\"%sຜ່ານມາ\",s:\"ບໍ່ເທົ່າໃດວິນາທີ\",m:\"1 ນາທີ\",mm:\"%d ນາທີ\",h:\"1 ຊົ່ວໂມງ\",hh:\"%d ຊົ່ວໂມງ\",d:\"1 ມື້\",dd:\"%d ມື້\",M:\"1 ເດືອນ\",MM:\"%d ເດືອນ\",y:\"1 ປີ\",yy:\"%d ປີ\"},ordinalParse:/(ທີ່)\\d{1,2}/,ordinal:function(a){return\"ທີ່\"+a}}),{m:\"minutė_minutės_minutę\",mm:\"minutės_minučių_minutes\",h:\"valanda_valandos_valandą\",hh:\"valandos_valandų_valandas\",d:\"diena_dienos_dieną\",dd:\"dienos_dienų_dienas\",M:\"mėnuo_mėnesio_mėnesį\",MM:\"mėnesiai_mėnesių_mėnesius\",y:\"metai_metų_metus\",yy:\"metai_metų_metus\"}),Xg=(kg.defineLocale(\"lt\",{months:{format:\"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),standalone:\"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis\".split(\"_\"),isFormat:/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?/},monthsShort:\"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),weekdays:{format:\"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį\".split(\"_\"),standalone:\"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis\".split(\"_\"),isFormat:/dddd HH:mm/},weekdaysShort:\"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),weekdaysMin:\"S_P_A_T_K_Pn_Š\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"YYYY [m.] MMMM D [d.]\",LLL:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",LLLL:\"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]\",l:\"YYYY-MM-DD\",ll:\"YYYY [m.] MMMM D [d.]\",lll:\"YYYY [m.] MMMM D [d.], HH:mm [val.]\",llll:\"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]\"},calendar:{sameDay:\"[Šiandien] LT\",nextDay:\"[Rytoj] LT\",nextWeek:\"dddd LT\",lastDay:\"[Vakar] LT\",lastWeek:\"[Praėjusį] dddd LT\",sameElse:\"L\"},relativeTime:{future:\"po %s\",past:\"prieš %s\",s:Kd,m:Ld,mm:Od,h:Ld,hh:Od,d:Ld,dd:Od,M:Ld,MM:Od,y:Ld,yy:Od},ordinalParse:/\\d{1,2}-oji/,ordinal:function(a){return a+\"-oji\"},week:{dow:1,// Monday is the first day of the week.","m:[\"jedan minut\",\"jednog minuta\"],mm:[\"minut\",\"minuta\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mjesec\",\"mjeseca\",\"mjeseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=Yg.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+Yg.correctGrammaticalCase(a,d)}}),Zg=(kg.defineLocale(\"me\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sjutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedjelju] [u] LT\";case 3:return\"[u] [srijedu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedjelje] [u] LT\",\"[prošlog] [ponedjeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srijede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"nekoliko sekundi\",m:Yg.translate,mm:Yg.translate,h:Yg.translate,hh:Yg.translate,d:\"dan\",dd:Yg.translate,M:\"mjesec\",MM:Yg.translate,y:\"godinu\",yy:Yg.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"mk\",months:\"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек\".split(\"_\"),weekdays:\"недела_понеделник_вторник_среда_четврток_петок_сабота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сре_чет_пет_саб\".split(\"_\"),weekdaysMin:\"нe_пo_вт_ср_че_пе_сa\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},calendar:{sameDay:\"[Денес во] LT\",nextDay:\"[Утре во] LT\",nextWeek:\"[Во] dddd [во] LT\",lastDay:\"[Вчера во] LT\",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return\"[Изминатата] dddd [во] LT\";case 1:case 2:case 4:case 5:return\"[Изминатиот] dddd [во] LT\"}},sameElse:\"L\"},relativeTime:{future:\"после %s\",past:\"пред %s\",s:\"неколку секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дена\",M:\"месец\",MM:\"%d месеци\",y:\"година\",yy:\"%d години\"},ordinalParse:/\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(a){var b=a%10,c=a%100;return 0===a?a+\"-ев\":0===c?a+\"-ен\":c\u003e10\u0026\u002620\u003ec?a+\"-ти\":1===b?a+\"-ви\":2===b?a+\"-ри\":7===b||8===b?a+\"-ми\":a+\"-ти\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ml\",months:\"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ\".split(\"_\"),monthsShort:\"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച\".split(\"_\"),weekdaysShort:\"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി\".split(\"_\"),weekdaysMin:\"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ\".split(\"_\"),longDateFormat:{LT:\"A h:mm -നു\",LTS:\"A h:mm:ss -നു\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm -നു\",LLLL:\"dddd, D MMMM YYYY, A h:mm -നു\"},calendar:{sameDay:\"[ഇന്ന്] LT\",nextDay:\"[നാളെ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ഇന്നലെ] LT\",lastWeek:\"[കഴിഞ്ഞ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s കഴിഞ്ഞ്\",past:\"%s മുൻപ്\",s:\"അൽപ നിമിഷങ്ങൾ\",m:\"ഒരു മിനിറ്റ്\",mm:\"%d മിനിറ്റ്\",h:\"ഒരു മണിക്കൂർ\",hh:\"%d മണിക്കൂർ\",d:\"ഒരു ദിവസം\",dd:\"%d ദിവസം\",M:\"ഒരു മാസം\",MM:\"%d മാസം\",y:\"ഒരു വർഷം\",yy:\"%d വർഷം\"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"രാത്രി\"===b\u0026\u0026a\u003e=4||\"ഉച്ച കഴിഞ്ഞ്\"===b||\"വൈകുന്നേരം\"===b?a+12:a},meridiem:function(a,b,c){return 4\u003ea?\"രാത്രി\":12\u003ea?\"രാവിലെ\":17\u003ea?\"ഉച്ച കഴിഞ്ഞ്\":20\u003ea?\"വൈകുന്നേരം\":\"രാത്രി\"}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),$g={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},_g=(kg.defineLocale(\"mr\",{months:\"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर\".split(\"_\"),monthsShort:\"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.\".split(\"_\"),monthsParseExact:!0,weekdays:\"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),longDateFormat:{LT:\"A h:mm वाजता\",LTS:\"A h:mm:ss वाजता\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm वाजता\",LLLL:\"dddd, D MMMM YYYY, A h:mm वाजता\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[उद्या] LT\",nextWeek:\"dddd, LT\",lastDay:\"[काल] LT\",lastWeek:\"[मागील] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%sमध्ये\",past:\"%sपूर्वी\",s:Td,m:Td,mm:Td,h:Td,hh:Td,d:Td,dd:Td,M:Td,MM:Td,y:Td,yy:Td},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return $g[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return Zg[a]})},meridiemParse:/रात्री|सकाळी|दुपारी|सायंकाळी/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"रात्री\"===b?4\u003ea?a:a+12:\"सकाळी\"===b?a:\"दुपारी\"===b?a\u003e=10?a:a+12:\"सायंकाळी\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"रात्री\":10\u003ea?\"सकाळी\":17\u003ea?\"दुपारी\":20\u003ea?\"सायंकाळी\":\"रात्री\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"ms-my\",months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ms\",months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"pagi\"===b?a:\"tengahari\"===b?a\u003e=11?a:a+12:\"petang\"===b||\"malam\"===b?a+12:void 0},meridiem:function(a,b,c){return 11\u003ea?\"pagi\":15\u003ea?\"tengahari\":19\u003ea?\"petang\":\"malam\"},calendar:{sameDay:\"[Hari ini pukul] LT\",nextDay:\"[Esok pukul] LT\",nextWeek:\"dddd [pukul] LT\",lastDay:\"[Kelmarin pukul] LT\",lastWeek:\"dddd [lepas pukul] LT\",sameElse:\"L\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"၁\",2:\"၂\",3:\"၃\",4:\"၄\",5:\"၅\",6:\"၆\",7:\"၇\",8:\"၈\",9:\"၉\",0:\"၀\"}),ah={\"၁\":\"1\",\"၂\":\"2\",\"၃\":\"3\",\"၄\":\"4\",\"၅\":\"5\",\"၆\":\"6\",\"၇\":\"7\",\"၈\":\"8\",\"၉\":\"9\",\"၀\":\"0\"},bh=(kg.defineLocale(\"my\",{months:\"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ\".split(\"_\"),monthsShort:\"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ\".split(\"_\"),weekdays:\"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ\".split(\"_\"),weekdaysShort:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),weekdaysMin:\"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[ယနေ.] LT [မှာ]\",nextDay:\"[မနက်ဖြန်] LT [မှာ]\",nextWeek:\"dddd LT [မှာ]\",lastDay:\"[မနေ.က] LT [မှာ]\",lastWeek:\"[ပြီးခဲ့သော] dddd LT [မှာ]\",sameElse:\"L\"},relativeTime:{future:\"လာမည့် %s မှာ\",past:\"လွန်ခဲ့သော %s က\",s:\"စက္ကန်.အနည်းငယ်\",m:\"တစ်မိနစ်\",mm:\"%d မိနစ်\",h:\"တစ်နာရီ\",hh:\"%d နာရီ\",d:\"တစ်ရက်\",dd:\"%d ရက်\",M:\"တစ်လ\",MM:\"%d လ\",y:\"တစ်နှစ်\",yy:\"%d နှစ်\"},preparse:function(a){return a.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,function(a){return ah[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return _g[a]})},week:{dow:1,// Monday is the first day of the week.","doy:4}}),1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),ch={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},dh=(kg.defineLocale(\"ne\",{months:\"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर\".split(\"_\"),monthsShort:\"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.\".split(\"_\"),monthsParseExact:!0,weekdays:\"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार\".split(\"_\"),weekdaysShort:\"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.\".split(\"_\"),weekdaysMin:\"आ._सो._मं._बु._बि._शु._श.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"Aको h:mm बजे\",LTS:\"Aको h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, Aको h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, Aको h:mm बजे\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return ch[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return bh[a]})},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"राति\"===b?4\u003ea?a:a+12:\"बिहान\"===b?a:\"दिउँसो\"===b?a\u003e=10?a:a+12:\"साँझ\"===b?a+12:void 0},meridiem:function(a,b,c){return 3\u003ea?\"राति\":12\u003ea?\"बिहान\":16\u003ea?\"दिउँसो\":20\u003ea?\"साँझ\":\"राति\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[भोलि] LT\",nextWeek:\"[आउँदो] dddd[,] LT\",lastDay:\"[हिजो] LT\",lastWeek:\"[गएको] dddd[,] LT\",sameElse:\"L\"},relativeTime:{future:\"%sमा\",past:\"%s अगाडि\",s:\"केही क्षण\",m:\"एक मिनेट\",mm:\"%d मिनेट\",h:\"एक घण्टा\",hh:\"%d घण्टा\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महिना\",MM:\"%d महिना\",y:\"एक बर्ष\",yy:\"%d बर्ष\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\")),eh=\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),fh=(kg.defineLocale(\"nl\",months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?eh[a.month()]:dh[a.month()]},monthsParseExact:!0,weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[vandaag om] LT\",nextDay:\"[morgen om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[gisteren om] LT\",lastWeek:\"[afgelopen] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a\u003e=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.","months:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),monthsShort:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdays:\"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ\".split(\"_\"),weekdaysShort:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),weekdaysMin:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),longDateFormat:LT:\"A h:mm ਵਜੇ\",LTS:\"A h:mm:ss ਵਜੇ\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm ਵਜੇ\",LLLL:\"dddd, D MMMM YYYY, A h:mm ਵਜੇ\"},calendar:{sameDay:\"[ਅਜ] LT\",nextDay:\"[ਕਲ] LT\",nextWeek:\"dddd, LT\",lastDay:\"[ਕਲ] LT\",lastWeek:\"[ਪਿਛਲੇ] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s ਵਿੱਚ\",past:\"%s ਪਿਛਲੇ\",s:\"ਕੁਝ ਸਕਿੰਟ\",m:\"ਇਕ ਮਿੰਟ\",mm:\"%d ਮਿੰਟ\",h:\"ਇੱਕ ਘੰਟਾ\",hh:\"%d ਘੰਟੇ\",d:\"ਇੱਕ ਦਿਨ\",dd:\"%d ਦਿਨ\",M:\"ਇੱਕ ਮਹੀਨਾ\",MM:\"%d ਮਹੀਨੇ\",y:\"ਇੱਕ ਸਾਲ\",yy:\"%d ਸਾਲ\"},preparse:function(a){return a.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,function(a){return gh[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return fh[a]})},","meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(a,b)return 12===a\u0026\u0026(a=0),\"ਰਾਤ\"===b?4\u003ea?a:a+12:\"ਸਵੇਰ\"===b?a:\"ਦੁਪਹਿਰ\"===b?a\u003e=10?a:a+12:\"ਸ਼ਾਮ\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"ਰਾਤ\":10\u003ea?\"ਸਵੇਰ\":17\u003ea?\"ਦੁਪਹਿਰ\":20\u003ea?\"ਸ਼ਾਮ\":\"ਰਾਤ\"},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),\"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\")),ih=\"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\"),jh=(kg.defineLocale(\"pl\",months:function(a,b){return\"\"===b?\"(\"+ih[a.month()]+\"|\"+hh[a.month()]+\")\":/D MMMM/.test(b)?ih[a.month()]:hh[a.month()]},monthsShort:\"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),weekdays:\"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),weekdaysShort:\"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),weekdaysMin:\"Nd_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Dziś o] LT\",nextDay:\"[Jutro o] LT\",nextWeek:\"[W] dddd [o] LT\",lastDay:\"[Wczoraj o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[W zeszłą niedzielę o] LT\";case 3:return\"[W zeszłą środę o] LT\";case 6:return\"[W zeszłą sobotę o] LT\";default:return\"[W zeszły] dddd [o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"%s temu\",s:\"kilka sekund\",m:Vd,mm:Vd,h:Vd,hh:Vd,d:\"1 dzień\",dd:\"%d dni\",M:\"miesiąc\",MM:Vd,y:\"rok\",yy:Vd},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"pt-br\",months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","return 0===this.day()||6===this.day()?\"[Último] dddd [às] LT\":\"[Última] dddd [às] LT\"},sameElse:\"L\"},relativeTime:future:\"em %s\",past:\"%s atrás\",s:\"poucos segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"},ordinalParse:/\\d{1,2}º/,ordinal:\"%dº\"}),kg.defineLocale(\"pt\",{months:\"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez\".split(\"_\"),weekdays:\"Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado\".split(\"_\"),weekdaysShort:\"Dom_Seg_Ter_Qua_Qui_Sex_Sáb\".split(\"_\"),weekdaysMin:\"Dom_2ª_3ª_4ª_5ª_6ª_Sáb\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY HH:mm\"},calendar:{sameDay:\"[Hoje às] LT\",nextDay:\"[Amanhã às] LT\",nextWeek:\"dddd [às] LT\",lastDay:\"[Ontem às] LT\",lastWeek:function(){// Saturday + Sunday","monthsShortStrictRegex:/^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,longDateFormat:LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., HH:mm\",LLLL:\"dddd, D MMMM YYYY г., HH:mm\"},calendar:{sameDay:\"[Сегодня в] LT\",nextDay:\"[Завтра в] LT\",lastDay:\"[Вчера в] LT\",nextWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В следующее] dddd [в] LT\";case 1:case 2:case 4:return\"[В следующий] dddd [в] LT\";case 3:case 5:case 6:return\"[В следующую] dddd [в] LT\"}},lastWeek:function(a){if(a.week()===this.week())return 2===this.day()?\"[Во] dddd [в] LT\":\"[В] dddd [в] LT\";switch(this.day()){case 0:return\"[В прошлое] dddd [в] LT\";case 1:case 2:case 4:return\"[В прошлый] dddd [в] LT\";case 3:case 5:case 6:return\"[В прошлую] dddd [в] LT\"}},sameElse:\"L\"},relativeTime:{future:\"через %s\",past:\"%s назад\",s:\"несколько секунд\",m:Yd,mm:Yd,h:\"час\",hh:Yd,d:\"день\",dd:Yd,M:\"месяц\",MM:Yd,y:\"год\",yy:Yd},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(a){return/^(дня|вечера)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночи\":12\u003ea?\"утра\":17\u003ea?\"дня\":\"вечера\"},ordinalParse:/\\d{1,2}-(й|го|я)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":return a+\"-й\";case\"D\":return a+\"-го\";case\"w\":case\"W\":return a+\"-я\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"si\",months:\"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්\".split(\"_\"),monthsShort:\"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ\".split(\"_\"),weekdays:\"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා\".split(\"_\"),weekdaysShort:\"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන\".split(\"_\"),weekdaysMin:\"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"a h:mm\",LTS:\"a h:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY MMMM D\",LLL:\"YYYY MMMM D, a h:mm\",LLLL:\"YYYY MMMM D [වැනි] dddd, a h:mm:ss\"},calendar:{sameDay:\"[අද] LT[ට]\",nextDay:\"[හෙට] LT[ට]\",nextWeek:\"dddd LT[ට]\",lastDay:\"[ඊයේ] LT[ට]\",lastWeek:\"[පසුගිය] dddd LT[ට]\",sameElse:\"L\"},relativeTime:{future:\"%sකින්\",past:\"%sකට පෙර\",s:\"තත්පර කිහිපය\",m:\"මිනිත්තුව\",mm:\"මිනිත්තු %d\",h:\"පැය\",hh:\"පැය %d\",d:\"දිනය\",dd:\"දින %d\",M:\"මාසය\",MM:\"මාස %d\",y:\"වසර\",yy:\"වසර %d\"},ordinalParse:/\\d{1,2} වැනි/,ordinal:function(a){return a+\" වැනි\"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(a){return\"ප.ව.\"===a||\"පස් වරු\"===a},meridiem:function(a,b,c){return a\u003e11?c?\"ප.ව.\":\"පස් වරු\":c?\"පෙ.ව.\":\"පෙර වරු\"}}),\"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\")),lh=\"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\"),mh=(kg.defineLocale(\"sk\",{months:kh,monthsShort:lh,weekdays:\"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),weekdaysShort:\"ne_po_ut_st_št_pi_so\".split(\"_\"),weekdaysMin:\"ne_po_ut_st_št_pi_so\".split(\"_\"),longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[dnes o] LT\",nextDay:\"[zajtra o] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v nedeľu o] LT\";case 1:case 2:return\"[v] dddd [o] LT\";case 3:return\"[v stredu o] LT\";case 4:return\"[vo štvrtok o] LT\";case 5:return\"[v piatok o] LT\";case 6:return\"[v sobotu o] LT\"}},lastDay:\"[včera o] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[minulú nedeľu o] LT\";case 1:case 2:return\"[minulý] dddd [o] LT\";case 3:return\"[minulú stredu o] LT\";case 4:case 5:return\"[minulý] dddd [o] LT\";case 6:return\"[minulú sobotu o] LT\"}},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pred %s\",s:$d,m:$d,mm:$d,h:$d,hh:$d,d:$d,dd:$d,M:$d,MM:$d,y:$d,yy:$d},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"sl\",months:\"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),weekdaysShort:\"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),weekdaysMin:\"ne_po_to_sr_če_pe_so\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danes ob] LT\",nextDay:\"[jutri ob] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[v] [nedeljo] [ob] LT\";case 3:return\"[v] [sredo] [ob] LT\";case 6:return\"[v] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[v] dddd [ob] LT\"}},lastDay:\"[včeraj ob] LT\",lastWeek:function(){switch(this.day()){case 0:return\"[prejšnjo] [nedeljo] [ob] LT\";case 3:return\"[prejšnjo] [sredo] [ob] LT\";case 6:return\"[prejšnjo] [soboto] [ob] LT\";case 1:case 2:case 4:case 5:return\"[prejšnji] dddd [ob] LT\"}},sameElse:\"L\"},relativeTime:{future:\"čez %s\",past:\"pred %s\",s:_d,m:_d,mm:_d,h:_d,hh:_d,d:_d,dd:_d,M:_d,MM:_d,y:_d,yy:_d},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"sq\",months:\"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor\".split(\"_\"),monthsShort:\"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj\".split(\"_\"),weekdays:\"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë\".split(\"_\"),weekdaysShort:\"Die_Hën_Mar_Mër_Enj_Pre_Sht\".split(\"_\"),weekdaysMin:\"D_H_Ma_Më_E_P_Sh\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(a){return\"M\"===a.charAt(0)},meridiem:function(a,b,c){return 12\u003ea?\"PD\":\"MD\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Sot në] LT\",nextDay:\"[Nesër në] LT\",nextWeek:\"dddd [në] LT\",lastDay:\"[Dje në] LT\",lastWeek:\"dddd [e kaluar në] LT\",sameElse:\"L\"},relativeTime:{future:\"në %s\",past:\"%s më parë\",s:\"disa sekonda\",m:\"një minutë\",mm:\"%d minuta\",h:\"një orë\",hh:\"%d orë\",d:\"një ditë\",dd:\"%d ditë\",M:\"një muaj\",MM:\"%d muaj\",y:\"një vit\",yy:\"%d vite\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","m:[\"један минут\",\"једне минуте\"],mm:[\"минут\",\"минуте\",\"минута\"],h:[\"један сат\",\"једног сата\"],hh:[\"сат\",\"сата\",\"сати\"],dd:[\"дан\",\"дана\",\"дана\"],MM:[\"месец\",\"месеца\",\"месеци\"],yy:[\"година\",\"године\",\"година\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=mh.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+mh.correctGrammaticalCase(a,d)}}),nh=(kg.defineLocale(\"sr-cyrl\",{months:\"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар\".split(\"_\"),monthsShort:\"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.\".split(\"_\"),monthsParseExact:!0,weekdays:\"недеља_понедељак_уторак_среда_четвртак_петак_субота\".split(\"_\"),weekdaysShort:\"нед._пон._уто._сре._чет._пет._суб.\".split(\"_\"),weekdaysMin:\"не_по_ут_ср_че_пе_су\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[данас у] LT\",nextDay:\"[сутра у] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[у] [недељу] [у] LT\";case 3:return\"[у] [среду] [у] LT\";case 6:return\"[у] [суботу] [у] LT\";case 1:case 2:case 4:case 5:return\"[у] dddd [у] LT\"}},lastDay:\"[јуче у] LT\",lastWeek:function(){var a=[\"[прошле] [недеље] [у] LT\",\"[прошлог] [понедељка] [у] LT\",\"[прошлог] [уторка] [у] LT\",\"[прошле] [среде] [у] LT\",\"[прошлог] [четвртка] [у] LT\",\"[прошлог] [петка] [у] LT\",\"[прошле] [суботе] [у] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"пре %s\",s:\"неколико секунди\",m:mh.translate,mm:mh.translate,h:mh.translate,hh:mh.translate,d:\"дан\",dd:mh.translate,M:\"месец\",MM:mh.translate,y:\"годину\",yy:mh.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","m:[\"jedan minut\",\"jedne minute\"],mm:[\"minut\",\"minute\",\"minuta\"],h:[\"jedan sat\",\"jednog sata\"],hh:[\"sat\",\"sata\",\"sati\"],dd:[\"dan\",\"dana\",\"dana\"],MM:[\"mesec\",\"meseca\",\"meseci\"],yy:[\"godina\",\"godine\",\"godina\"]},correctGrammaticalCase:function(a,b)return 1===a?b[0]:a\u003e=2\u0026\u00264\u003e=a?b[1]:b[2]},translate:function(a,b,c){var d=nh.words[c];return 1===c.length?b?d[0]:d[1]:a+\" \"+nh.correctGrammaticalCase(a,d)}}),oh=(kg.defineLocale(\"sr\",{months:\"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.\".split(\"_\"),monthsParseExact:!0,weekdays:\"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sre._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD. MM. YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},calendar:{sameDay:\"[danas u] LT\",nextDay:\"[sutra u] LT\",nextWeek:function(){switch(this.day()){case 0:return\"[u] [nedelju] [u] LT\";case 3:return\"[u] [sredu] [u] LT\";case 6:return\"[u] [subotu] [u] LT\";case 1:case 2:case 4:case 5:return\"[u] dddd [u] LT\"}},lastDay:\"[juče u] LT\",lastWeek:function(){var a=[\"[prošle] [nedelje] [u] LT\",\"[prošlog] [ponedeljka] [u] LT\",\"[prošlog] [utorka] [u] LT\",\"[prošle] [srede] [u] LT\",\"[prošlog] [četvrtka] [u] LT\",\"[prošlog] [petka] [u] LT\",\"[prošle] [subote] [u] LT\"];return a[this.day()]},sameElse:\"L\"},relativeTime:{future:\"za %s\",past:\"pre %s\",s:\"nekoliko sekundi\",m:nh.translate,mm:nh.translate,h:nh.translate,hh:nh.translate,d:\"dan\",dd:nh.translate,M:\"mesec\",MM:nh.translate,y:\"godinu\",yy:nh.translate},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"ss\",months:\"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\"_\"),monthsShort:\"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo\".split(\"_\"),weekdays:\"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo\".split(\"_\"),weekdaysShort:\"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg\".split(\"_\"),weekdaysMin:\"Li_Us_Lb_Lt_Ls_Lh_Ug\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},calendar:{sameDay:\"[Namuhla nga] LT\",nextDay:\"[Kusasa nga] LT\",nextWeek:\"dddd [nga] LT\",lastDay:\"[Itolo nga] LT\",lastWeek:\"dddd [leliphelile] [nga] LT\",sameElse:\"L\"},relativeTime:{future:\"nga %s\",past:\"wenteka nga %s\",s:\"emizuzwana lomcane\",m:\"umzuzu\",mm:\"%d emizuzu\",h:\"lihora\",hh:\"%d emahora\",d:\"lilanga\",dd:\"%d emalanga\",M:\"inyanga\",MM:\"%d tinyanga\",y:\"umnyaka\",yy:\"%d iminyaka\"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(a,b,c){return 11\u003ea?\"ekuseni\":15\u003ea?\"emini\":19\u003ea?\"entsambama\":\"ebusuku\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"ekuseni\"===b?a:\"emini\"===b?a\u003e=11?a:a+12:\"entsambama\"===b||\"ebusuku\"===b?0===a?0:a+12:void 0},ordinalParse:/\\d{1,2}/,ordinal:\"%d\",week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"sv\",months:\"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekdays:\"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),weekdaysShort:\"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),weekdaysMin:\"sö_må_ti_on_to_fr_lö\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D MMMM YYYY [kl.] HH:mm\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Idag] LT\",nextDay:\"[Imorgon] LT\",lastDay:\"[Igår] LT\",nextWeek:\"[På] dddd LT\",lastWeek:\"[I] dddd[s] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"för %s sedan\",s:\"några sekunder\",m:\"en minut\",mm:\"%d minuter\",h:\"en timme\",hh:\"%d timmar\",d:\"en dag\",dd:\"%d dagar\",M:\"en månad\",MM:\"%d månader\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}(e|a)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"e\":1===b?\"a\":2===b?\"a\":\"e\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:7}}),1:\"௧\",2:\"௨\",3:\"௩\",4:\"௪\",5:\"௫\",6:\"௬\",7:\"௭\",8:\"௮\",9:\"௯\",0:\"௦\"}),ph={\"௧\":\"1\",\"௨\":\"2\",\"௩\":\"3\",\"௪\":\"4\",\"௫\":\"5\",\"௬\":\"6\",\"௭\":\"7\",\"௮\":\"8\",\"௯\":\"9\",\"௦\":\"0\"},qh=(kg.defineLocale(\"ta\",{months:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),monthsShort:\"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்\".split(\"_\"),weekdays:\"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை\".split(\"_\"),weekdaysShort:\"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி\".split(\"_\"),weekdaysMin:\"ஞா_தி_செ_பு_வி_வெ_ச\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, HH:mm\",LLLL:\"dddd, D MMMM YYYY, HH:mm\"},calendar:{sameDay:\"[இன்று] LT\",nextDay:\"[நாளை] LT\",nextWeek:\"dddd, LT\",lastDay:\"[நேற்று] LT\",lastWeek:\"[கடந்த வாரம்] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s இல்\",past:\"%s முன்\",s:\"ஒரு சில விநாடிகள்\",m:\"ஒரு நிமிடம்\",mm:\"%d நிமிடங்கள்\",h:\"ஒரு மணி நேரம்\",hh:\"%d மணி நேரம்\",d:\"ஒரு நாள்\",dd:\"%d நாட்கள்\",M:\"ஒரு மாதம்\",MM:\"%d மாதங்கள்\",y:\"ஒரு வருடம்\",yy:\"%d ஆண்டுகள்\"},ordinalParse:/\\d{1,2}வது/,ordinal:function(a){return a+\"வது\"},preparse:function(a){return a.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,function(a){return ph[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return oh[a]})},","meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(a,b,c)return 2\u003ea?\" யாமம்\":6\u003ea?\" வைகறை\":10\u003ea?\" காலை\":14\u003ea?\" நண்பகல்\":18\u003ea?\" எற்பாடு\":22\u003ea?\" மாலை\":\" யாமம்\"},meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"யாமம்\"===b?2\u003ea?a:a+12:\"வைகறை\"===b||\"காலை\"===b?a:\"நண்பகல்\"===b\u0026\u0026a\u003e=10?a:a+12},week:{dow:0,// Sunday is the first day of the week.","doy:6}}),kg.defineLocale(\"te\",months:\"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్\".split(\"_\"),monthsShort:\"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.\".split(\"_\"),monthsParseExact:!0,weekdays:\"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం\".split(\"_\"),weekdaysShort:\"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని\".split(\"_\"),weekdaysMin:\"ఆ_సో_మం_బు_గు_శు_శ\".split(\"_\"),longDateFormat:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm\",LLLL:\"dddd, D MMMM YYYY, A h:mm\"},calendar:{sameDay:\"[నేడు] LT\",nextDay:\"[రేపు] LT\",nextWeek:\"dddd, LT\",lastDay:\"[నిన్న] LT\",lastWeek:\"[గత] dddd, LT\",sameElse:\"L\"},relativeTime:{future:\"%s లో\",past:\"%s క్రితం\",s:\"కొన్ని క్షణాలు\",m:\"ఒక నిమిషం\",mm:\"%d నిమిషాలు\",h:\"ఒక గంట\",hh:\"%d గంటలు\",d:\"ఒక రోజు\",dd:\"%d రోజులు\",M:\"ఒక నెల\",MM:\"%d నెలలు\",y:\"ఒక సంవత్సరం\",yy:\"%d సంవత్సరాలు\"},ordinalParse:/\\d{1,2}వ/,ordinal:\"%dవ\",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"రాత్రి\"===b?4\u003ea?a:a+12:\"ఉదయం\"===b?a:\"మధ్యాహ్నం\"===b?a\u003e=10?a:a+12:\"సాయంత్రం\"===b?a+12:void 0},meridiem:function(a,b,c){return 4\u003ea?\"రాత్రి\":10\u003ea?\"ఉదయం\":17\u003ea?\"మధ్యాహ్నం\":20\u003ea?\"సాయంత్రం\":\"రాత్రి\"},week:{dow:0,// Sunday is the first day of the week.","weekdaysMin:\"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:LT:\"H นาฬิกา m นาที\",LTS:\"H นาฬิกา m นาที s วินาที\",L:\"YYYY/MM/DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY เวลา H นาฬิกา m นาที\",LLLL:\"วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที\"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(a){return\"หลังเที่ยง\"===a},meridiem:function(a,b,c){return 12\u003ea?\"ก่อนเที่ยง\":\"หลังเที่ยง\"},calendar:{sameDay:\"[วันนี้ เวลา] LT\",nextDay:\"[พรุ่งนี้ เวลา] LT\",nextWeek:\"dddd[หน้า เวลา] LT\",lastDay:\"[เมื่อวานนี้ เวลา] LT\",lastWeek:\"[วัน]dddd[ที่แล้ว เวลา] LT\",sameElse:\"L\"},relativeTime:{future:\"อีก %s\",past:\"%sที่แล้ว\",s:\"ไม่กี่วินาที\",m:\"1 นาที\",mm:\"%d นาที\",h:\"1 ชั่วโมง\",hh:\"%d ชั่วโมง\",d:\"1 วัน\",dd:\"%d วัน\",M:\"1 เดือน\",MM:\"%d เดือน\",y:\"1 ปี\",yy:\"%d ปี\"}}),kg.defineLocale(\"tl-ph\",{months:\"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre\".split(\"_\"),monthsShort:\"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis\".split(\"_\"),weekdays:\"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado\".split(\"_\"),weekdaysShort:\"Lin_Lun_Mar_Miy_Huw_Biy_Sab\".split(\"_\"),weekdaysMin:\"Li_Lu_Ma_Mi_Hu_Bi_Sab\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"MM/D/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY HH:mm\",LLLL:\"dddd, MMMM DD, YYYY HH:mm\"},calendar:{sameDay:\"[Ngayon sa] LT\",nextDay:\"[Bukas sa] LT\",nextWeek:\"dddd [sa] LT\",lastDay:\"[Kahapon sa] LT\",lastWeek:\"dddd [huling linggo] LT\",sameElse:\"L\"},relativeTime:{future:\"sa loob ng %s\",past:\"%s ang nakalipas\",s:\"ilang segundo\",m:\"isang minuto\",mm:\"%d minuto\",h:\"isang oras\",hh:\"%d oras\",d:\"isang araw\",dd:\"%d araw\",M:\"isang buwan\",MM:\"%d buwan\",y:\"isang taon\",yy:\"%d taon\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),1:\"'inci\",5:\"'inci\",8:\"'inci\",70:\"'inci\",80:\"'inci\",2:\"'nci\",7:\"'nci\",20:\"'nci\",50:\"'nci\",3:\"'üncü\",4:\"'üncü\",100:\"'üncü\",6:\"'ncı\",9:\"'uncu\",10:\"'uncu\",30:\"'uncu\",60:\"'ıncı\",90:\"'ıncı\"}),sh=(kg.defineLocale(\"tr\",{months:\"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),monthsShort:\"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),weekdays:\"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),weekdaysShort:\"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),weekdaysMin:\"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[bugün saat] LT\",nextDay:\"[yarın saat] LT\",nextWeek:\"[haftaya] dddd [saat] LT\",lastDay:\"[dün] LT\",lastWeek:\"[geçen hafta] dddd [saat] LT\",sameElse:\"L\"},relativeTime:{future:\"%s sonra\",past:\"%s önce\",s:\"birkaç saniye\",m:\"bir dakika\",mm:\"%d dakika\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir yıl\",yy:\"%d yıl\"},ordinalParse:/\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,ordinal:function(a){if(0===a)// special case for zero","doy:7}}),kg.defineLocale(\"tzl\",months:\"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar\".split(\"_\"),monthsShort:\"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec\".split(\"_\"),weekdays:\"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi\".split(\"_\"),weekdaysShort:\"Súl_Lún_Mai_Már_Xhú_Vié_Sát\".split(\"_\"),weekdaysMin:\"Sú_Lú_Ma_Má_Xh_Vi_Sá\".split(\"_\"),longDateFormat:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM [dallas] YYYY\",LLL:\"D. MMMM [dallas] YYYY HH.mm\",LLLL:\"dddd, [li] D. MMMM [dallas] YYYY HH.mm\"},meridiemParse:/d\\'o|d\\'a/i,isPM:function(a){return\"d'o\"===a.toLowerCase()},meridiem:function(a,b,c){return a\u003e11?c?\"d'o\":\"D'O\":c?\"d'a\":\"D'A\"},calendar:{sameDay:\"[oxhi à] LT\",nextDay:\"[demà à] LT\",nextWeek:\"dddd [à] LT\",lastDay:\"[ieiri à] LT\",lastWeek:\"[sür el] dddd [lasteu à] LT\",sameElse:\"L\"},relativeTime:{future:\"osprei %s\",past:\"ja%s\",s:ee,m:ee,mm:ee,h:ee,hh:ee,d:ee,dd:ee,M:ee,MM:ee,y:ee,yy:ee},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.","doy:12}}),kg.defineLocale(\"uk\",months:{format:\"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня\".split(\"_\"),standalone:\"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень\".split(\"_\")},monthsShort:\"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),weekdays:he,weekdaysShort:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY р.\",LLL:\"D MMMM YYYY р., HH:mm\",LLLL:\"dddd, D MMMM YYYY р., HH:mm\"},calendar:{sameDay:ie(\"[Сьогодні \"),nextDay:ie(\"[Завтра \"),lastDay:ie(\"[Вчора \"),nextWeek:ie(\"[У] dddd [\"),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return ie(\"[Минулої] dddd [\").call(this);case 1:case 2:case 4:return ie(\"[Минулого] dddd [\").call(this)}},sameElse:\"L\"},relativeTime:{future:\"за %s\",past:\"%s тому\",s:\"декілька секунд\",m:ge,mm:ge,h:\"годину\",hh:ge,d:\"день\",dd:ge,M:\"місяць\",MM:ge,y:\"рік\",yy:ge},","meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(a)return/^(дня|вечора)$/.test(a)},meridiem:function(a,b,c){return 4\u003ea?\"ночі\":12\u003ea?\"ранку\":17\u003ea?\"дня\":\"вечора\"},ordinalParse:/\\d{1,2}-(й|го)/,ordinal:function(a,b){switch(b){case\"M\":case\"d\":case\"DDD\":case\"w\":case\"W\":return a+\"-й\";case\"D\":return a+\"-го\";default:return a}},week:{dow:1,// Monday is the first day of the week.","doy:7}}),kg.defineLocale(\"vi\",months:\"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12\".split(\"_\"),monthsShort:\"Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12\".split(\"_\"),monthsParseExact:!0,weekdays:\"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy\".split(\"_\"),weekdaysShort:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysMin:\"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(a){return/^ch$/i.test(a)},meridiem:function(a,b,c){return 12\u003ea?c?\"sa\":\"SA\":c?\"ch\":\"CH\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM [năm] YYYY\",LLL:\"D MMMM [năm] YYYY HH:mm\",LLLL:\"dddd, D MMMM [năm] YYYY HH:mm\",l:\"DD/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},calendar:{sameDay:\"[Hôm nay lúc] LT\",nextDay:\"[Ngày mai lúc] LT\",nextWeek:\"dddd [tuần tới lúc] LT\",lastDay:\"[Hôm qua lúc] LT\",lastWeek:\"dddd [tuần rồi lúc] LT\",sameElse:\"L\"},relativeTime:{future:\"%s tới\",past:\"%s trước\",s:\"vài giây\",m:\"một phút\",mm:\"%d phút\",h:\"một giờ\",hh:\"%d giờ\",d:\"một ngày\",dd:\"%d ngày\",M:\"một tháng\",MM:\"%d tháng\",y:\"một năm\",yy:\"%d năm\"},ordinalParse:/\\d{1,2}/,ordinal:function(a){return a},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"x-pseudo\",months:\"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér\".split(\"_\"),monthsShort:\"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc\".split(\"_\"),monthsParseExact:!0,weekdays:\"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý\".split(\"_\"),weekdaysShort:\"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát\".split(\"_\"),weekdaysMin:\"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[T~ódá~ý át] LT\",nextDay:\"[T~ómó~rró~w át] LT\",nextWeek:\"dddd [át] LT\",lastDay:\"[Ý~ést~érdá~ý át] LT\",lastWeek:\"[L~ást] dddd [át] LT\",sameElse:\"L\"},relativeTime:{future:\"í~ñ %s\",past:\"%s á~gó\",s:\"á ~féw ~sécó~ñds\",m:\"á ~míñ~úté\",mm:\"%d m~íñú~tés\",h:\"á~ñ hó~úr\",hh:\"%d h~óúrs\",d:\"á ~dáý\",dd:\"%d d~áýs\",M:\"á ~móñ~th\",MM:\"%d m~óñt~hs\",y:\"á ~ýéár\",yy:\"%d ý~éárs\"},ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===~~(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c},week:{dow:1,// Monday is the first day of the week.","doy:4}}),kg.defineLocale(\"zh-cn\",months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah点mm分\",LTS:\"Ah点m分s秒\",L:\"YYYY-MM-DD\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah点mm分\",LLLL:\"YYYY年MMMD日ddddAh点mm分\",l:\"YYYY-MM-DD\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah点mm分\",llll:\"YYYY年MMMD日ddddAh点mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"下午\"===b||\"晚上\"===b?a+12:a\u003e=11?a:a+12},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:function(){return 0===this.minutes()?\"[今天]Ah[点整]\":\"[今天]LT\"},nextDay:function(){return 0===this.minutes()?\"[明天]Ah[点整]\":\"[明天]LT\"},lastDay:function(){return 0===this.minutes()?\"[昨天]Ah[点整]\":\"[昨天]LT\"},nextWeek:function(){var a,b;return a=kg().startOf(\"week\"),b=this.diff(a,\"days\")\u003e=7?\"[下]\":\"[本]\",0===this.minutes()?b+\"dddAh点整\":b+\"dddAh点mm\"},lastWeek:function(){var a,b;return a=kg().startOf(\"week\"),b=this.unix()\u003ca.unix()?\"[上]\":\"[本]\",0===this.minutes()?b+\"dddAh点整\":b+\"dddAh点mm\"},sameElse:\"LL\"},ordinalParse:/\\d{1,2}(日|月|周)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"周\";default:return a}},relativeTime:{future:\"%s内\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},week:{","doy:4}}),kg.defineLocale(\"zh-tw\",months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"週日_週一_週二_週三_週四_週五_週六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),longDateFormat:{LT:\"Ah點mm分\",LTS:\"Ah點m分s秒\",L:\"YYYY年MMMD日\",LL:\"YYYY年MMMD日\",LLL:\"YYYY年MMMD日Ah點mm分\",LLLL:\"YYYY年MMMD日ddddAh點mm分\",l:\"YYYY年MMMD日\",ll:\"YYYY年MMMD日\",lll:\"YYYY年MMMD日Ah點mm分\",llll:\"YYYY年MMMD日ddddAh點mm分\"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(a,b){return 12===a\u0026\u0026(a=0),\"凌晨\"===b||\"早上\"===b||\"上午\"===b?a:\"中午\"===b?a\u003e=11?a:a+12:\"下午\"===b||\"晚上\"===b?a+12:void 0},meridiem:function(a,b,c){var d=100*a+b;return 600\u003ed?\"凌晨\":900\u003ed?\"早上\":1130\u003ed?\"上午\":1230\u003ed?\"中午\":1800\u003ed?\"下午\":\"晚上\"},calendar:{sameDay:\"[今天]LT\",nextDay:\"[明天]LT\",nextWeek:\"[下]ddddLT\",lastDay:\"[昨天]LT\",lastWeek:\"[上]ddddLT\",sameElse:\"L\"},ordinalParse:/\\d{1,2}(日|月|週)/,ordinal:function(a,b){switch(b){case\"d\":case\"D\":case\"DDD\":return a+\"日\";case\"M\":return a+\"月\";case\"w\":case\"W\":return a+\"週\";default:return a}},relativeTime:{future:\"%s內\",past:\"%s前\",s:\"幾秒\",m:\"1 分鐘\",mm:\"%d 分鐘\",h:\"1 小時\",hh:\"%d 小時\",d:\"1 天\",dd:\"%d 天\",M:\"1 個月\",MM:\"%d 個月\",y:\"1 年\",yy:\"%d 年\"}}),kg);return sh.locale(\"en\"),sh});"],"Dependencies":null},{"FileName":"node_modules\\moment\\min\\moment.min.js","LineCount":492,"CharCount":58195,"Comments":["//! moment.js","//! version : 2.14.1","//! authors : Tim Wood, Iskren Chernev, Moment.js contributors","//! license : MIT","//! momentjs.com","!function(a,b){\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module?module.exports=b():\"function\"==typeof define\u0026\u0026define.amd?define(b):a.moment=b()}(this,function(){\"use strict\";function a(){return md.apply(null,arguments)}","// This is done to register the method called with moment()","// without creating circular dependencies.","function b(a){md=a}function c(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return\"[object Object]\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)","// even if its not own property I'd still call it non-empty","return!1;return!0}function f(a){return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c\u003ca.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)\u0026\u0026(a[c]=b[c]);return h(b,\"toString\")\u0026\u0026(a.toString=b.toString),h(b,\"valueOf\")\u0026\u0026(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){","// We need to deep clone this object.","return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf\u0026\u0026(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=nd.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())\u0026\u0026b.overflow\u003c0\u0026\u0026!b.empty\u0026\u0026!b.invalidMonth\u0026\u0026!b.invalidWeekday\u0026\u0026!b.nullInput\u0026\u0026!b.invalidFormat\u0026\u0026!b.userInvalidated\u0026\u0026(!b.meridiem||b.meridiem\u0026\u0026c),a._strict\u0026\u0026(a._isValid=a._isValid\u0026\u00260===b.charsLeftOver\u0026\u00260===b.unusedTokens.length\u0026\u0026void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),od.length\u003e0)for(c in od)d=od[c],e=b[d],o(e)||(a[d]=e);return a}","// Moment prototype object","function q(b){p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),pd===!1\u0026\u0026(pd=!0,a.updateOffset(this),pd=!1)}function r(a){return a instanceof q||null!=a\u0026\u0026null!=a._isAMomentObject}function s(a){return 0\u003ea?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b\u0026\u0026isFinite(b)\u0026\u0026(c=s(b)),c}","// compare two arrays, return the number of differences","function u(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e\u003ed;d++)(c\u0026\u0026a[d]!==b[d]||!c\u0026\u0026t(a[d])!==t(b[d]))\u0026\u0026g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1\u0026\u0026\"undefined\"!=typeof console\u0026\u0026console.warn\u0026\u0026console.warn(\"Deprecation warning: \"+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(null,b),d\u0026\u0026(v(b+\"\\nArguments: \"+Array.prototype.slice.call(arguments).join(\", \")+\"\\n\"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(b,c),qd[b]||(v(c),qd[b]=!0)}function y(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this[\"_\"+c]=b;this._config=a,","// Lenient ordinal parsing accepts just a number in addition to","// number + (possibly) stuff coming from _ordinalParseLenient.","this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\d{1,2}/.source)}function A(a,b){var c,e=i({},a);for(c in b)h(b,c)\u0026\u0026(d(a[c])\u0026\u0026d(b[c])?(e[c]={},i(e[c],a[c]),i(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)h(a,c)\u0026\u0026!h(b,c)\u0026\u0026d(a[c])\u0026\u0026(","// make sure changes to properties don't modify parent config","e[c]=i({},e[c]));return e}function B(a){null!=a\u0026\u0026this.set(a)}function C(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return y(d)?d.call(b,c):d}function D(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function E(){return this._invalidDate}function F(a){return this._ordinal.replace(\"%d\",a)}function G(a,b,c,d){var e=this._relativeTime[c];return y(e)?e(a,b,c,d):e.replace(/%d/i,a)}function H(a,b){var c=this._relativeTime[a\u003e0?\"future\":\"past\"];return y(c)?c(b):c.replace(/%s/i,b)}function I(a,b){var c=a.toLowerCase();zd[c]=zd[c+\"s\"]=zd[b]=a}function J(a){return\"string\"==typeof a?zd[a]||zd[a.toLowerCase()]:void 0}function K(a){var b,c,d={};for(c in a)h(a,c)\u0026\u0026(b=J(c),b\u0026\u0026(d[b]=a[c]));return d}function L(a,b){Ad[a]=b}function M(a){var b=[];for(var c in a)b.push({unit:c,priority:Ad[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function N(b,c){return function(d){return null!=d?(P(this,b,d),a.updateOffset(this,c),this):O(this,b)}}function O(a,b){return a.isValid()?a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+b]():NaN}function P(a,b,c){a.isValid()\u0026\u0026a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+b](c)}","// MOMENTS","function Q(a){return a=J(a),y(this[a])?this[a]():this}function R(a,b){if(\"object\"==typeof a){a=K(a);for(var c=M(a),d=0;d\u003cc.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=J(a),y(this[a]))return this[a](b);return this}function S(a,b,c){var d=\"\"+Math.abs(a),e=b-d.length,f=a\u003e=0;return(f?c?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}","// token:    'M'","// padded:   ['MM', 2]","// ordinal:  'Mo'","// callback: function () { this.month() + 1 }","function T(a,b,c,d){var e=d;\"string\"==typeof d\u0026\u0026(e=function(){return this[d]()}),a\u0026\u0026(Ed[a]=e),b\u0026\u0026(Ed[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c\u0026\u0026(Ed[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function V(a){var b,c,d=a.match(Bd);for(b=0,c=d.length;c\u003eb;b++)Ed[d[b]]?d[b]=Ed[d[b]]:d[b]=U(d[b]);return function(b){var e,f=\"\";for(e=0;c\u003ee;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}","// format date using native date object","function W(a,b){return a.isValid()?(b=X(b,a.localeData()),Dd[b]=Dd[b]||V(b),Dd[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Cd.lastIndex=0;d\u003e=0\u0026\u0026Cd.test(a);)a=a.replace(Cd,c),Cd.lastIndex=0,d-=1;return a}function Y(a,b,c){Wd[a]=y(b)?b:function(a,d){return a\u0026\u0026c?c:b}}function Z(a,b){return h(Wd,a)?Wd[a](b._strict,b._locale):new RegExp($(a))}","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function $(a){return _(a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function _(a){return a.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$\u0026\")}function aa(a,b){var c,d=b;for(\"string\"==typeof a\u0026\u0026(a=[a]),\"number\"==typeof b\u0026\u0026(d=function(a,c){c[b]=t(a)}),c=0;c\u003ca.length;c++)Xd[a[c]]=d}function ba(a,b){aa(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function ca(a,b,c){null!=b\u0026\u0026h(Xd,a)\u0026\u0026Xd[a](b,c._a,c,a)}function da(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function ea(a,b){return c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||fe).test(b)?\"format\":\"standalone\"][a.month()]}function fa(a,b){return c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[fe.test(b)?\"format\":\"standalone\"][a.month()]}function ga(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(","// this is not used","this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;12\u003ed;++d)f=j([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\"\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\"\").toLocaleLowerCase();return c?\"MMM\"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null):(e=sd.call(this._longMonthsParse,g),-1!==e?e:null):\"MMM\"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:(e=sd.call(this._longMonthsParse,g),-1!==e?e:null)):(e=sd.call(this._longMonthsParse,g),-1!==e?e:(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null))}function ha(a,b,c){var d,e,f;if(this._monthsParseExact)return ga.call(this,a,b,c);","// TODO: add sorting","// Sorting makes sure if one month (or abbr) is a prefix of another","// see sorting in computeMonthsParse","for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12\u003ed;d++){","// test the regex","if(e=j([2e3,d]),c\u0026\u0026!this._longMonthsParse[d]\u0026\u0026(this._longMonthsParse[d]=new RegExp(\"^\"+this.months(e,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[d]=new RegExp(\"^\"+this.monthsShort(e,\"\").replace(\".\",\"\")+\"$\",\"i\")),c||this._monthsParse[d]||(f=\"^\"+this.months(e,\"\")+\"|^\"+this.monthsShort(e,\"\"),this._monthsParse[d]=new RegExp(f.replace(\".\",\"\"),\"i\")),c\u0026\u0026\"MMMM\"===b\u0026\u0026this._longMonthsParse[d].test(a))return d;if(c\u0026\u0026\"MMM\"===b\u0026\u0026this._shortMonthsParse[d].test(a))return d;if(!c\u0026\u0026this._monthsParse[d].test(a))return d}}","// MOMENTS","function ia(a,b){var c;if(!a.isValid())","// No op","return a;if(\"string\"==typeof b)if(/^\\d+$/.test(b))b=t(b);else","// TODO: Another silent failure?","if(b=a.localeData().monthsParse(b),\"number\"!=typeof b)return a;return c=Math.min(a.date(),da(a.year(),b)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](b,c),a}function ja(b){return null!=b?(ia(this,b),a.updateOffset(this,!0),this):O(this,\"Month\")}function ka(){return da(this.year(),this.month())}function la(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(h(this,\"_monthsShortRegex\")||(this._monthsShortRegex=ie),this._monthsShortStrictRegex\u0026\u0026a?this._monthsShortStrictRegex:this._monthsShortRegex)}function ma(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsStrictRegex:this._monthsRegex):(h(this,\"_monthsRegex\")||(this._monthsRegex=je),this._monthsStrictRegex\u0026\u0026a?this._monthsStrictRegex:this._monthsRegex)}function na(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;12\u003eb;b++)c=j([2e3,b]),d.push(this.monthsShort(c,\"\")),e.push(this.months(c,\"\")),f.push(this.months(c,\"\")),f.push(this.monthsShort(c,\"\"));for(","// Sorting makes sure if one month (or abbr) is a prefix of another it","// will match the longer piece.","d.sort(a),e.sort(a),f.sort(a),b=0;12\u003eb;b++)d[b]=_(d[b]),e[b]=_(e[b]);for(b=0;24\u003eb;b++)f[b]=_(f[b]);this._monthsRegex=new RegExp(\"^(\"+f.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+e.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+d.join(\"|\")+\")\",\"i\")}","// HELPERS","function oa(a){return pa(a)?366:365}function pa(a){return a%4===0\u0026\u0026a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){","//can't just apply() to create a date:","//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply","var h=new Date(a,b,c,d,e,f,g);","//the date constructor remaps years 0-99 to 1900-1999","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(h.getFullYear())\u0026\u0026h.setFullYear(a),h}function sa(a){var b=new Date(Date.UTC.apply(null,arguments));","//the Date.UTC function remaps years 0-99 to 1900-1999","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(b.getUTCFullYear())\u0026\u0026b.setUTCFullYear(a),b}","// start-of-first-week - start-of-year","function ta(a,b,c){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)","d=7+b-c,","// first-week day local weekday -- which local weekday is fwd","e=(7+sa(a,0,d).getUTCDay()-b)%7;return-e+d-1}","//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday","function ua(a,b,c,d,e){var f,g,h=(7+c-d)%7,i=ta(a,d,e),j=1+7*(b-1)+h+i;return 0\u003e=j?(f=a-1,g=oa(f)+j):j\u003eoa(a)?(f=a+1,g=j-oa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function va(a,b,c){var d,e,f=ta(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return 1\u003eg?(e=a.year()-1,d=g+wa(e,b,c)):g\u003ewa(a.year(),b,c)?(d=g-wa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function wa(a,b,c){var d=ta(a,b,c),e=ta(a+1,b,c);return(oa(a)-d+e)/7}","// HELPERS","// LOCALES","function xa(a){return va(a,this._week.dow,this._week.doy).week}function ya(){return this._week.dow}function za(){return this._week.doy}","// MOMENTS","function Aa(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\"d\")}function Ba(a){var b=va(this,1,4).week;return null==a?b:this.add(7*(a-b),\"d\")}","// HELPERS","function Ca(a,b){return\"string\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\"number\"==typeof a?a:null):parseInt(a,10)}function Da(a,b){return\"string\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Ea(a,b){return c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\"format\":\"standalone\"][a.day()]}function Fa(a){return this._weekdaysShort[a.day()]}function Ga(a){return this._weekdaysMin[a.day()]}function Ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;7\u003ed;++d)f=j([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\"\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\"\").toLocaleLowerCase();return c?\"dddd\"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:null):\"ddd\"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null):\"dddd\"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):\"ddd\"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null)))}function Ia(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ha.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;7\u003ed;d++){","// test the regex","if(e=j([2e3,1]).day(d),c\u0026\u0026!this._fullWeekdaysParse[d]\u0026\u0026(this._fullWeekdaysParse[d]=new RegExp(\"^\"+this.weekdays(e,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._shortWeekdaysParse[d]=new RegExp(\"^\"+this.weekdaysShort(e,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._minWeekdaysParse[d]=new RegExp(\"^\"+this.weekdaysMin(e,\"\").replace(\".\",\".?\")+\"$\",\"i\")),this._weekdaysParse[d]||(f=\"^\"+this.weekdays(e,\"\")+\"|^\"+this.weekdaysShort(e,\"\")+\"|^\"+this.weekdaysMin(e,\"\"),this._weekdaysParse[d]=new RegExp(f.replace(\".\",\"\"),\"i\")),c\u0026\u0026\"dddd\"===b\u0026\u0026this._fullWeekdaysParse[d].test(a))return d;if(c\u0026\u0026\"ddd\"===b\u0026\u0026this._shortWeekdaysParse[d].test(a))return d;if(c\u0026\u0026\"dd\"===b\u0026\u0026this._minWeekdaysParse[d].test(a))return d;if(!c\u0026\u0026this._weekdaysParse[d].test(a))return d}}","// MOMENTS","function Ja(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,\"d\")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function La(a){if(!this.isValid())return null!=a?this:NaN;","// behaves the same as moment#day except","// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)","// as a setter, sunday should belong to the previous week.","if(null!=a){var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,\"_weekdaysRegex\")||(this._weekdaysRegex=pe),this._weekdaysStrictRegex\u0026\u0026a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=qe),this._weekdaysShortStrictRegex\u0026\u0026a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=re),this._weekdaysMinStrictRegex\u0026\u0026a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7\u003eb;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,\"\"),e=this.weekdaysShort(c,\"\"),f=this.weekdays(c,\"\"),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(","// Sorting makes sure if one weekday (or abbr) is a prefix of another it","// will match the longer piece.","g.sort(a),h.sort(a),i.sort(a),k.sort(a),b=0;7\u003eb;b++)h[b]=_(h[b]),i[b]=_(i[b]),k[b]=_(k[b]);this._weekdaysRegex=new RegExp(\"^(\"+k.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+h.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+g.join(\"|\")+\")\",\"i\")}","// FORMATTING","function Qa(){return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}","// PARSING","function Ta(a,b){return b._meridiemParse}","// LOCALES","function Ua(a){","// IE8 Quirks Mode \u0026 IE7 Standards Mode do not allow accessing strings like arrays","// Using charAt should be more compatible.","return\"p\"===(a+\"\").toLowerCase().charAt(0)}function Va(a,b,c){return a\u003e11?c?\"pm\":\"PM\":c?\"am\":\"AM\"}function Wa(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}","// pick the locale from the array","// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each","// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root","function Xa(a){for(var b,c,d,e,f=0;f\u003ca.length;){for(e=Wa(a[f]).split(\"-\"),b=e.length,c=Wa(a[f+1]),c=c?c.split(\"-\"):null;b\u003e0;){if(d=Ya(e.slice(0,b).join(\"-\")))return d;if(c\u0026\u0026c.length\u003e=b\u0026\u0026u(e,c,!0)\u003e=b-1)","//the next array item is better than a shallower substring of this one","break;b--}f++}return null}function Ya(a){var b=null;","// TODO: Find a better way to register and load all the locales in Node","if(!we[a]\u0026\u0026\"undefined\"!=typeof module\u0026\u0026module\u0026\u0026module.exports)try{b=se._abbr,require(\"./locale/\"+a),","// because defineLocale currently also sets the global locale, we","// want to undo that for lazy loaded locales","Za(b)}catch(c){}return we[a]}","// This function will load locale and then set the global locale.  If","// no arguments are passed in, it will simply return the current global","// locale key.","function Za(a,b){var c;","// moment.duration._locale = moment._locale = data;","return a\u0026\u0026(c=o(b)?ab(a):$a(a,b),c\u0026\u0026(se=c)),se._abbr}function $a(a,b){if(null!==b){var c=ve;","// treat as if there is no base config","// backwards compat for now: also set the locale","return b.abbr=a,null!=we[a]?(x(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),c=we[a]._config):null!=b.parentLocale\u0026\u0026(null!=we[b.parentLocale]?c=we[b.parentLocale]._config:x(\"parentLocaleUndefined\",\"specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/\")),we[a]=new B(A(c,b)),Za(a),we[a]}","// useful for testing","return delete we[a],null}function _a(a,b){if(null!=b){var c,d=ve;","// MERGE","null!=we[a]\u0026\u0026(d=we[a]._config),b=A(d,b),c=new B(b),c.parentLocale=we[a],we[a]=c,","// backwards compat for now: also set the locale","Za(a)}else","// pass null for config to unupdate, useful for tests","null!=we[a]\u0026\u0026(null!=we[a].parentLocale?we[a]=we[a].parentLocale:null!=we[a]\u0026\u0026delete we[a]);return we[a]}","// returns locale data","function ab(a){var b;if(a\u0026\u0026a._locale\u0026\u0026a._locale._abbr\u0026\u0026(a=a._locale._abbr),!a)return se;if(!c(a)){if(b=Ya(a))return b;a=[a]}return Xa(a)}function bb(){return rd(we)}function cb(a){var b,c=a._a;return c\u0026\u0026-2===l(a).overflow\u0026\u0026(b=c[Zd]\u003c0||c[Zd]\u003e11?Zd:c[$d]\u003c1||c[$d]\u003eda(c[Yd],c[Zd])?$d:c[_d]\u003c0||c[_d]\u003e24||24===c[_d]\u0026\u0026(0!==c[ae]||0!==c[be]||0!==c[ce])?_d:c[ae]\u003c0||c[ae]\u003e59?ae:c[be]\u003c0||c[be]\u003e59?be:c[ce]\u003c0||c[ce]\u003e999?ce:-1,l(a)._overflowDayOfYear\u0026\u0026(Yd\u003eb||b\u003e$d)\u0026\u0026(b=$d),l(a)._overflowWeeks\u0026\u0026-1===b\u0026\u0026(b=de),l(a)._overflowWeekday\u0026\u0026-1===b\u0026\u0026(b=ee),l(a).overflow=b),a}","// date from iso format","function db(a){var b,c,d,e,f,g,h=a._i,i=xe.exec(h)||ye.exec(h);if(i){for(l(a).iso=!0,b=0,c=Ae.length;c\u003eb;b++)if(Ae[b][1].exec(i[1])){e=Ae[b][0],d=Ae[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=Be.length;c\u003eb;b++)if(Be[b][1].exec(i[3])){","// match[2] should be 'T' or space","f=(i[2]||\" \")+Be[b][0];break}if(null==f)return void(a._isValid=!1)}if(!d\u0026\u0026null!=f)return void(a._isValid=!1);if(i[4]){if(!ze.exec(i[4]))return void(a._isValid=!1);g=\"Z\"}a._f=e+(f||\"\")+(g||\"\"),jb(a)}else a._isValid=!1}","// date from iso format or fallback","function eb(b){var c=Ce.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(db(b),void(b._isValid===!1\u0026\u0026(delete b._isValid,a.createFromInputFallback(b))))}","// Pick the first defined of two or three arguments.","function fb(a,b,c){return null!=a?a:null!=b?b:c}function gb(b){","// hooks is actually the exported moment object","var c=new Date(a.now());return b._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()]}","// convert an array to a date.","// the array should mirror the parameters below","// note: all values past the year are optional and will default to the lowest possible value.","// [year, month, day , hour, minute, second, millisecond]","function hb(a){var b,c,d,e,f=[];if(!a._d){","// Default to current date.","// * if no year, month, day of month are given, default to today","// * if day of month is given, default month and year","// * if month is given, default only year","// * if year is given, don't default anything","for(d=gb(a),a._w\u0026\u0026null==a._a[$d]\u0026\u0026null==a._a[Zd]\u0026\u0026ib(a),a._dayOfYear\u0026\u0026(e=fb(a._a[Yd],d[Yd]),a._dayOfYear\u003eoa(e)\u0026\u0026(l(a)._overflowDayOfYear=!0),c=sa(e,0,a._dayOfYear),a._a[Zd]=c.getUTCMonth(),a._a[$d]=c.getUTCDate()),b=0;3\u003eb\u0026\u0026null==a._a[b];++b)a._a[b]=f[b]=d[b];","// Zero out whatever was not defaulted, including time","for(;7\u003eb;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];","// Check for 24:00:00.000","24===a._a[_d]\u0026\u00260===a._a[ae]\u0026\u00260===a._a[be]\u0026\u00260===a._a[ce]\u0026\u0026(a._nextDay=!0,a._a[_d]=0),a._d=(a._useUTC?sa:ra).apply(null,f),","// Apply timezone offset from input. The actual utcOffset can be changed","// with parseZone.","null!=a._tzm\u0026\u0026a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay\u0026\u0026(a._a[_d]=24)}}function ib(a){var b,c,d,e,f,g,h,i;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=fb(b.GG,a._a[Yd],va(rb(),1,4).year),d=fb(b.W,1),e=fb(b.E,1),(1\u003ee||e\u003e7)\u0026\u0026(i=!0)):(f=a._locale._week.dow,g=a._locale._week.doy,c=fb(b.gg,a._a[Yd],va(rb(),f,g).year),d=fb(b.w,1),null!=b.d?(e=b.d,(0\u003ee||e\u003e6)\u0026\u0026(i=!0)):null!=b.e?(e=b.e+f,(b.e\u003c0||b.e\u003e6)\u0026\u0026(i=!0)):e=f),1\u003ed||d\u003ewa(c,f,g)?l(a)._overflowWeeks=!0:null!=i?l(a)._overflowWeekday=!0:(h=ua(c,d,e,f,g),a._a[Yd]=h.year,a._dayOfYear=h.dayOfYear)}","// date from string and format string","function jb(b){","// TODO: Move this to another part of the creation flow to prevent circular deps","if(b._f===a.ISO_8601)return void db(b);b._a=[],l(b).empty=!0;","// This array is used to make a Date, either with `new Date` or `Date.UTC`","var c,d,e,f,g,h=\"\"+b._i,i=h.length,j=0;for(e=X(b._f,b._locale).match(Bd)||[],c=0;c\u003ce.length;c++)f=e[c],d=(h.match(Z(f,b))||[])[0],d\u0026\u0026(g=h.substr(0,h.indexOf(d)),g.length\u003e0\u0026\u0026l(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),Ed[f]?(d?l(b).empty=!1:l(b).unusedTokens.push(f),ca(f,d,b)):b._strict\u0026\u0026!d\u0026\u0026l(b).unusedTokens.push(f);","// add remaining unparsed input length to the string","l(b).charsLeftOver=i-j,h.length\u003e0\u0026\u0026l(b).unusedInput.push(h),","// clear _12h flag if hour is \u003c= 12","b._a[_d]\u003c=12\u0026\u0026l(b).bigHour===!0\u0026\u0026b._a[_d]\u003e0\u0026\u0026(l(b).bigHour=void 0),l(b).parsedDateParts=b._a.slice(0),l(b).meridiem=b._meridiem,","// handle meridiem","b._a[_d]=kb(b._locale,b._a[_d],b._meridiem),hb(b),cb(b)}function kb(a,b,c){var d;","// Fallback","return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d\u0026\u002612\u003eb\u0026\u0026(b+=12),d||12!==b||(b=0),b):b}","// date from string and array of format strings","function lb(a){var b,c,d,e,f;if(0===a._f.length)return l(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e\u003ca._f.length;e++)f=0,b=p({},a),null!=a._useUTC\u0026\u0026(b._useUTC=a._useUTC),b._f=a._f[e],jb(b),m(b)\u0026\u0026(f+=l(b).charsLeftOver,f+=10*l(b).unusedTokens.length,l(b).score=f,(null==d||d\u003ef)\u0026\u0026(d=f,c=b));i(a,c||b)}function mb(a){if(!a._d){var b=K(a._i);a._a=g([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a\u0026\u0026parseInt(a,10)}),hb(a)}}function nb(a){var b=new q(cb(ob(a)));","// Adding is smart enough around DST","return b._nextDay\u0026\u0026(b.add(1,\"d\"),b._nextDay=void 0),b}function ob(a){var b=a._i,d=a._f;return a._locale=a._locale||ab(a._l),null===b||void 0===d\u0026\u0026\"\"===b?n({nullInput:!0}):(\"string\"==typeof b\u0026\u0026(a._i=b=a._locale.preparse(b)),r(b)?new q(cb(b)):(c(d)?lb(a):f(b)?a._d=b:d?jb(a):pb(a),m(a)||(a._d=null),a))}function pb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):f(d)?b._d=new Date(d.valueOf()):\"string\"==typeof d?eb(b):c(d)?(b._a=g(d.slice(0),function(a){return parseInt(a,10)}),hb(b)):\"object\"==typeof d?mb(b):\"number\"==typeof d?","// from milliseconds","b._d=new Date(d):a.createFromInputFallback(b)}function qb(a,b,f,g,h){var i={};","// object construction must be done this way.","// https://github.com/moment/moment/issues/1423","return\"boolean\"==typeof f\u0026\u0026(g=f,f=void 0),(d(a)\u0026\u0026e(a)||c(a)\u0026\u00260===a.length)\u0026\u0026(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,nb(i)}function rb(a,b,c,d){return qb(a,b,c,d,!1)}","// Pick a moment m from moments so that m[fn](other) is true for all","// other. This relies on the function fn to be transitive.","//","// moments should either be an array of moment objects or an array, whose","// first element is an array of moment objects.","function sb(a,b){var d,e;if(1===b.length\u0026\u0026c(b[0])\u0026\u0026(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e\u003cb.length;++e)b[e].isValid()\u0026\u0026!b[e][a](d)||(d=b[e]);return d}","// TODO: Use [].sort instead?","function tb(){var a=[].slice.call(arguments,0);return sb(\"isBefore\",a)}function ub(){var a=[].slice.call(arguments,0);return sb(\"isAfter\",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;","// representation for dateAddRemove","this._milliseconds=+k+1e3*j+// 1000","6e4*i+// 1000 * 60","1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978","// Because of dateAddRemove treats 24 hours as different from a","// day when working around DST, we need to store them separately","this._days=+g+7*f,","// It is impossible translate months into days without knowing","// which months you are are talking about, so we have to store","// it separately.","this._months=+e+3*d+12*c,this._data={},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}","// FORMATTING","function xb(a,b){T(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0\u003ea\u0026\u0026(a=-a,c=\"-\"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||\"\").match(a)||[],d=c[c.length-1]||[],e=(d+\"\").match(Ge)||[\"-\",0,0],f=+(60*e[1])+t(e[2]);return\"+\"===e[0]?f:-f}","// Return a moment from input, that is local/utc/zone equivalent to model.","function zb(b,c){var d,e;","// Use low-level api, because this fn is low-level api.","return c._isUTC?(d=c.clone(),e=(r(b)||f(b)?b.valueOf():rb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):rb(b).local()}function Ab(a){","// On Firefox.24 Date#getTimezoneOffset returns a floating point.","// https://github.com/moment/moment/pull/1871","return 15*-Math.round(a._d.getTimezoneOffset()/15)}","// MOMENTS","// keepLocalTime = true means only change the timezone, without","// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--\u003e","// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset","// +0200, so we adjust the time as needed, to be valid.","//","// Keeping the time actually adds/subtracts (one hour)","// from the actual represented time. That is why we call updateOffset","// a second time. In case it wants us to change the offset again","// _changeInProgress == true case, then we have to adjust, because","// there is no such time in the given timezone.","function Bb(b,c){var d,e=this._offset||0;return this.isValid()?null!=b?(\"string\"==typeof b?b=yb(Td,b):Math.abs(b)\u003c16\u0026\u0026(b=60*b),!this._isUTC\u0026\u0026c\u0026\u0026(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d\u0026\u0026this.add(d,\"m\"),e!==b\u0026\u0026(!c||this._changeInProgress?Sb(this,Mb(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?(\"string\"!=typeof a\u0026\u0026(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC\u0026\u0026(this.utcOffset(0,a),this._isUTC=!1,a\u0026\u0026this.subtract(Ab(this),\"m\")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i\u0026\u0026this.utcOffset(yb(Sd,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()\u003ethis.clone().month(0).utcOffset()||this.utcOffset()\u003ethis.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()\u0026\u0026u(a._a,b.toArray())\u003e0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC\u0026\u00260===this._offset:!1}function Mb(a,b){var c,d,e,f=a,","// matching against regexp is expensive, do it on demand","g=null;// checks for null or undefined","return wb(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=He.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:0,d:t(g[$d])*c,h:t(g[_d])*c,m:t(g[ae])*c,s:t(g[be])*c,ms:t(g[ce])*c}):(g=Ie.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:\"object\"==typeof f\u0026\u0026(\"from\"in f||\"to\"in f)\u0026\u0026(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)\u0026\u0026h(a,\"_locale\")\u0026\u0026(d._locale=a._locale),d}function Nb(a,b){","// We'd normally use ~~inp for this, but unfortunately it also","// converts floats to ints.","// inp may be undefined, so careful calling replace on it.","var c=a\u0026\u0026parseFloat(a.replace(\",\",\".\"));","// apply sign while we're at it","return(isNaN(c)?0:c)*b}function Ob(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\"M\").isAfter(b)\u0026\u0026--c.months,c.milliseconds=+b-+a.clone().add(c.months,\"M\"),c}function Pb(a,b){var c;return a.isValid()\u0026\u0026b.isValid()?(b=zb(b,a),a.isBefore(b)?c=Ob(a,b):(c=Ob(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}function Qb(a){return 0\u003ea?-1*Math.round(-1*a):Math.round(a)}","// TODO: remove 'name' arg after deprecation is removed","function Rb(a,b){return function(c,d){var e,f;","//invert the arguments, but complain about it","return null===d||isNaN(+d)||(x(b,\"moment().\"+b+\"(period, number) is deprecated. Please use moment().\"+b+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),f=c,c=d,d=f),c=\"string\"==typeof c?+c:c,e=Mb(c,d),Sb(this,e,a),this}}function Sb(b,c,d,e){var f=c._milliseconds,g=Qb(c._days),h=Qb(c._months);b.isValid()\u0026\u0026(e=null==e?!0:e,f\u0026\u0026b._d.setTime(b._d.valueOf()+f*d),g\u0026\u0026P(b,\"Date\",O(b,\"Date\")+g*d),h\u0026\u0026ia(b,O(b,\"Month\")+h*d),e\u0026\u0026a.updateOffset(b,g||h))}function Tb(a,b){var c=a.diff(b,\"days\",!0);return-6\u003ec?\"sameElse\":-1\u003ec?\"lastWeek\":0\u003ec?\"lastDay\":1\u003ec?\"sameDay\":2\u003ec?\"nextDay\":7\u003ec?\"nextWeek\":\"sameElse\"}function Ub(b,c){","// We want to compare the start of today, vs this.","// Getting start-of-today depends on whether we're local/utc/offset or not.","var d=b||rb(),e=zb(d,this).startOf(\"day\"),f=a.calendarFormat(this,e)||\"sameElse\",g=c\u0026\u0026(y(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,rb(d)))}function Vb(){return new q(this)}function Wb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003ec.valueOf():c.valueOf()\u003cthis.clone().startOf(b).valueOf()):!1}function Xb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003cc.valueOf():this.clone().endOf(b).valueOf()\u003cc.valueOf()):!1}function Yb(a,b,c,d){return d=d||\"()\",(\"(\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))\u0026\u0026(\")\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function Zb(a,b){var c,d=r(a)?a:rb(a);return this.isValid()\u0026\u0026d.isValid()?(b=J(b||\"millisecond\"),\"millisecond\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()\u003c=c\u0026\u0026c\u003c=this.clone().endOf(b).valueOf())):!1}function $b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function _b(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function ac(a,b,c){var d,e,f,g;// 1000","// 1000 * 60","// 1000 * 60 * 60","// 1000 * 60 * 60 * 24, negate dst","// 1000 * 60 * 60 * 24 * 7, negate dst","return this.isValid()?(d=zb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=J(b),\"year\"===b||\"month\"===b||\"quarter\"===b?(g=bc(this,d),\"quarter\"===b?g/=3:\"year\"===b\u0026\u0026(g/=12)):(f=this-d,g=\"second\"===b?f/1e3:\"minute\"===b?f/6e4:\"hour\"===b?f/36e5:\"day\"===b?(f-e)/864e5:\"week\"===b?(f-e)/6048e5:f),c?g:s(g)):NaN):NaN}function bc(a,b){","// difference in months","var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),","// b is in (anchor - 1 month, anchor + 1 month)","f=a.clone().add(e,\"months\");","//check for negative zero, return zero if negative zero","// linear across the month","// linear across the month","return 0\u003eb-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)||0}function cc(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function dc(){var a=this.clone().utc();return 0\u003ca.year()\u0026\u0026a.year()\u003c=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):W(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}","// If passed a locale key, it will set the locale for this","// instance.  Otherwise, it will return the locale configuration","// variables for this instance.","function jc(a){var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b\u0026\u0026(this._locale=b),this)}function kc(){return this._locale}function lc(a){","// the following switch intentionally omits break keywords","// to utilize falling through the cases.","switch(a=J(a)){case\"year\":this.month(0);/* falls through */","switch(a=J(a)){case\"year\":this.month(0);/* falls through */","case\"quarter\":case\"month\":this.date(1);/* falls through */","case\"week\":case\"isoWeek\":case\"day\":case\"date\":this.hours(0);/* falls through */","case\"hour\":this.minutes(0);/* falls through */","case\"minute\":this.seconds(0);/* falls through */","case\"second\":this.milliseconds(0)}","// weeks are a special case","// quarters are also special","return\"week\"===a\u0026\u0026this.weekday(0),\"isoWeek\"===a\u0026\u0026this.isoWeekday(1),\"quarter\"===a\u0026\u0026this.month(3*Math.floor(this.month()/3)),this}function mc(a){","// 'date' is an alias for 'day', so it should be considered as such.","return a=J(a),void 0===a||\"millisecond\"===a?this:(\"date\"===a\u0026\u0026(a=\"day\"),this.startOf(a).add(1,\"isoWeek\"===a?\"week\":a).subtract(1,\"ms\"))}function nc(){return this._d.valueOf()-6e4*(this._offset||0)}function oc(){return Math.floor(this.valueOf()/1e3)}function pc(){return new Date(this.valueOf())}function qc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function rc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function sc(){","// new Date(NaN).toJSON() === null","return this.isValid()?this.toISOString():null}function tc(){return m(this)}function uc(){return i({},l(this))}function vc(){return l(this).overflow}function wc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function xc(a,b){T(0,[a,a.length],0,b)}","// MOMENTS","function yc(a){return Cc.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zc(a){return Cc.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Ac(){return wa(this.year(),1,4)}function Bc(){var a=this.localeData()._week;return wa(this.year(),a.dow,a.doy)}function Cc(a,b,c,d,e){var f;return null==a?va(this,d,e).year:(f=wa(a,d,e),b\u003ef\u0026\u0026(b=f),Dc.call(this,a,b,c,d,e))}function Dc(a,b,c,d,e){var f=ua(a,b,c,d,e),g=sa(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}","// MOMENTS","function Ec(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}","// HELPERS","// MOMENTS","function Fc(a){var b=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?b:this.add(a-b,\"d\")}function Gc(a,b){b[ce]=t(1e3*(\"0.\"+a))}","// MOMENTS","function Hc(){return this._isUTC?\"UTC\":\"\"}function Ic(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Jc(a){return rb(1e3*a)}function Kc(){return rb.apply(null,arguments).parseZone()}function Lc(a){return a}function Mc(a,b,c,d){var e=ab(),f=j().set(d,b);return e[c](f,a)}function Nc(a,b,c){if(\"number\"==typeof a\u0026\u0026(b=a,a=void 0),a=a||\"\",null!=b)return Mc(a,b,c,\"month\");var d,e=[];for(d=0;12\u003ed;d++)e[d]=Mc(a,d,c,\"month\");return e}","// ()","// (5)","// (fmt, 5)","// (fmt)","// (true)","// (true, 5)","// (true, fmt, 5)","// (true, fmt)","function Oc(a,b,c,d){\"boolean\"==typeof a?(\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\"):(b=a,c=b,a=!1,\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\");var e=ab(),f=a?e._week.dow:0;if(null!=c)return Mc(b,(c+f)%7,d,\"day\");var g,h=[];for(g=0;7\u003eg;g++)h[g]=Mc(b,(g+f)%7,d,\"day\");return h}function Pc(a,b){return Nc(a,b,\"months\")}function Qc(a,b){return Nc(a,b,\"monthsShort\")}function Rc(a,b,c){return Oc(a,b,c,\"weekdays\")}function Sc(a,b,c){return Oc(a,b,c,\"weekdaysShort\")}function Tc(a,b,c){return Oc(a,b,c,\"weekdaysMin\")}function Uc(){var a=this._data;return this._milliseconds=Ue(this._milliseconds),this._days=Ue(this._days),this._months=Ue(this._months),a.milliseconds=Ue(a.milliseconds),a.seconds=Ue(a.seconds),a.minutes=Ue(a.minutes),a.hours=Ue(a.hours),a.months=Ue(a.months),a.years=Ue(a.years),this}function Vc(a,b,c,d){var e=Mb(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}","// supports only 2.0-style add(1, 's') or add(duration)","function Wc(a,b){return Vc(this,a,b,1)}","// supports only 2.0-style subtract(1, 's') or subtract(duration)","function Xc(a,b){return Vc(this,a,b,-1)}function Yc(a){return 0\u003ea?Math.floor(a):Math.ceil(a)}function Zc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;","// if we have a mix of positive and negative values, bubble down first","// check: https://github.com/moment/moment/issues/2166","// The following code bubbles up values, see the tests for","// examples of what that means.","// convert days to months","// 12 months -\u003e 1 year","return f\u003e=0\u0026\u0026g\u003e=0\u0026\u0026h\u003e=0||0\u003e=f\u0026\u00260\u003e=g\u0026\u00260\u003e=h||(f+=864e5*Yc(_c(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=s(f/1e3),i.seconds=a%60,b=s(a/60),i.minutes=b%60,c=s(b/60),i.hours=c%24,g+=s(c/24),e=s($c(g)),h+=e,g-=Yc(_c(e)),d=s(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function $c(a){","// 400 years have 146097 days (taking into account leap year rules)","// 400 years have 12 months === 4800","return 4800*a/146097}function _c(a){","// the reverse of daysToMonths","return 146097*a/4800}function ad(a){var b,c,d=this._milliseconds;if(a=J(a),\"month\"===a||\"year\"===a)return b=this._days+d/864e5,c=this._months+$c(b),\"month\"===a?c:c/12;switch(b=this._days+Math.round(_c(this._months)),a){case\"week\":return b/7+d/6048e5;case\"day\":return b+d/864e5;case\"hour\":return 24*b+d/36e5;case\"minute\":return 1440*b+d/6e4;case\"second\":return 86400*b+d/1e3;","// Math.floor prevents floating point math errors here","case\"millisecond\":return Math.floor(864e5*b)+d;default:throw new Error(\"Unknown unit \"+a)}}","// TODO: Use this.as('ms')?","function bd(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)}function cd(a){return function(){return this.as(a)}}function dd(a){return a=J(a),this[a+\"s\"]()}function ed(a){return function(){return this._data[a]}}function fd(){return s(this.days()/7)}","// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function gd(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function hd(a,b,c){var d=Mb(a).abs(),e=jf(d.as(\"s\")),f=jf(d.as(\"m\")),g=jf(d.as(\"h\")),h=jf(d.as(\"d\")),i=jf(d.as(\"M\")),j=jf(d.as(\"y\")),k=e\u003ckf.s\u0026\u0026[\"s\",e]||1\u003e=f\u0026\u0026[\"m\"]||f\u003ckf.m\u0026\u0026[\"mm\",f]||1\u003e=g\u0026\u0026[\"h\"]||g\u003ckf.h\u0026\u0026[\"hh\",g]||1\u003e=h\u0026\u0026[\"d\"]||h\u003ckf.d\u0026\u0026[\"dd\",h]||1\u003e=i\u0026\u0026[\"M\"]||i\u003ckf.M\u0026\u0026[\"MM\",i]||1\u003e=j\u0026\u0026[\"y\"]||[\"yy\",j];return k[2]=b,k[3]=+a\u003e0,k[4]=c,gd.apply(null,k)}","// This function allows you to set the rounding function for relative time strings","function id(a){return void 0===a?jf:\"function\"==typeof a?(jf=a,!0):!1}","// This function allows you to set a threshold for relative time strings","function jd(a,b){return void 0===kf[a]?!1:void 0===b?kf[a]:(kf[a]=b,!0)}function kd(a){var b=this.localeData(),c=hd(this,!a,b);return a\u0026\u0026(c=b.pastFuture(+this,c)),b.postformat(c)}function ld(){","// for ISO strings we do not use the normal bubbling rules:","//  * milliseconds bubble up until they become hours","//  * days do not bubble at all","//  * months bubble up until they become years","// This is because there is no context-free conversion between hours and days","// (think of clock changes)","// and also not between days and months (28-31 days per month)","var a,b,c,d=lf(this._milliseconds)/1e3,e=lf(this._days),f=lf(this._months);a=s(d/60),b=s(a/60),d%=60,a%=60,c=s(f/12),f%=12;","// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js","var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0\u003em?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}var md,nd;nd=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length\u003e\u003e\u003e0,d=0;c\u003ed;d++)if(d in b\u0026\u0026a.call(this,b[d],d,b))return!0;return!1};","// Plugins that add properties should also add the key here (null value),","// so we can properly clone ourselves.","var od=a.momentProperties=[],pd=!1,qd={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var rd;rd=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)\u0026\u0026c.push(b);return c};var sd,td={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},ud={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},vd=\"Invalid date\",wd=\"%d\",xd=/\\d{1,2}/,yd={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},zd={},Ad={},Bd=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Cd=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Dd={},Ed={},Fd=/\\d/,Gd=/\\d\\d/,Hd=/\\d{3}/,Id=/\\d{4}/,Jd=/[+-]?\\d{6}/,Kd=/\\d\\d?/,Ld=/\\d\\d\\d\\d?/,Md=/\\d\\d\\d\\d\\d\\d?/,Nd=/\\d{1,3}/,Od=/\\d{1,4}/,Pd=/[+-]?\\d{1,6}/,Qd=/\\d+/,Rd=/[+-]?\\d+/,Sd=/Z|[+-]\\d\\d:?\\d\\d/gi,Td=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Ud=/[+-]?\\d+(\\.\\d{1,3})?/,Vd=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,Wd={},Xd={},Yd=0,Zd=1,$d=2,_d=3,ae=4,be=5,ce=6,de=7,ee=8;sd=Array.prototype.indexOf?Array.prototype.indexOf:function(a){","// I know","var b;for(b=0;b\u003cthis.length;++b)if(this[b]===a)return b;return-1},T(\"M\",[\"MM\",2],\"Mo\",function(){return this.month()+1}),T(\"MMM\",0,0,function(a){return this.localeData().monthsShort(this,a)}),T(\"MMMM\",0,0,function(a){return this.localeData().months(this,a)}),I(\"month\",\"M\"),L(\"month\",8),Y(\"M\",Kd),Y(\"MM\",Kd,Gd),Y(\"MMM\",function(a,b){return b.monthsShortRegex(a)}),Y(\"MMMM\",function(a,b){return b.monthsRegex(a)}),aa([\"M\",\"MM\"],function(a,b){b[Zd]=t(a)-1}),aa([\"MMM\",\"MMMM\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[Zd]=e:l(c).invalidMonth=a});","// LOCALES","var fe=/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/,ge=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),he=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),ie=Vd,je=Vd;","// FORMATTING","T(\"Y\",0,0,function(){var a=this.year();return 9999\u003e=a?\"\"+a:\"+\"+a}),T(0,[\"YY\",2],0,function(){return this.year()%100}),T(0,[\"YYYY\",4],0,\"year\"),T(0,[\"YYYYY\",5],0,\"year\"),T(0,[\"YYYYYY\",6,!0],0,\"year\"),","// ALIASES","I(\"year\",\"y\"),","// PRIORITIES","L(\"year\",1),","// PARSING","Y(\"Y\",Rd),Y(\"YY\",Kd,Gd),Y(\"YYYY\",Od,Id),Y(\"YYYYY\",Pd,Jd),Y(\"YYYYYY\",Pd,Jd),aa([\"YYYYY\",\"YYYYYY\"],Yd),aa(\"YYYY\",function(b,c){c[Yd]=2===b.length?a.parseTwoDigitYear(b):t(b)}),aa(\"YY\",function(b,c){c[Yd]=a.parseTwoDigitYear(b)}),aa(\"Y\",function(a,b){b[Yd]=parseInt(a,10)}),","// HOOKS","a.parseTwoDigitYear=function(a){return t(a)+(t(a)\u003e68?1900:2e3)};","// MOMENTS","var ke=N(\"FullYear\",!0);","// FORMATTING","T(\"w\",[\"ww\",2],\"wo\",\"week\"),T(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),","// ALIASES","I(\"week\",\"w\"),I(\"isoWeek\",\"W\"),","// PRIORITIES","L(\"week\",5),L(\"isoWeek\",5),","// PARSING","Y(\"w\",Kd),Y(\"ww\",Kd,Gd),Y(\"W\",Kd),Y(\"WW\",Kd,Gd),ba([\"w\",\"ww\",\"W\",\"WW\"],function(a,b,c,d){b[d.substr(0,1)]=t(a)});var le={dow:0,// Sunday is the first day of the week.","doy:6};","// FORMATTING","T(\"d\",0,\"do\",\"day\"),T(\"dd\",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),T(\"ddd\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),T(\"dddd\",0,0,function(a){return this.localeData().weekdays(this,a)}),T(\"e\",0,0,\"weekday\"),T(\"E\",0,0,\"isoWeekday\"),","// ALIASES","I(\"day\",\"d\"),I(\"weekday\",\"e\"),I(\"isoWeekday\",\"E\"),","// PRIORITY","L(\"day\",11),L(\"weekday\",11),L(\"isoWeekday\",11),","// PARSING","Y(\"d\",Kd),Y(\"e\",Kd),Y(\"E\",Kd),Y(\"dd\",function(a,b){return b.weekdaysMinRegex(a)}),Y(\"ddd\",function(a,b){return b.weekdaysShortRegex(a)}),Y(\"dddd\",function(a,b){return b.weekdaysRegex(a)}),ba([\"dd\",\"ddd\",\"dddd\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);","// if we didn't get a weekday name, mark the date as invalid","null!=e?b.d=e:l(c).invalidWeekday=a}),ba([\"d\",\"e\",\"E\"],function(a,b,c,d){b[d]=t(a)});","// LOCALES","var me=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),ne=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),oe=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),pe=Vd,qe=Vd,re=Vd;T(\"H\",[\"HH\",2],0,\"hour\"),T(\"h\",[\"hh\",2],0,Qa),T(\"k\",[\"kk\",2],0,Ra),T(\"hmm\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)}),T(\"hmmss\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)+S(this.seconds(),2)}),T(\"Hmm\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)}),T(\"Hmmss\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)+S(this.seconds(),2)}),Sa(\"a\",!0),Sa(\"A\",!1),","// ALIASES","I(\"hour\",\"h\"),","// PRIORITY","L(\"hour\",13),Y(\"a\",Ta),Y(\"A\",Ta),Y(\"H\",Kd),Y(\"h\",Kd),Y(\"HH\",Kd,Gd),Y(\"hh\",Kd,Gd),Y(\"hmm\",Ld),Y(\"hmmss\",Md),Y(\"Hmm\",Ld),Y(\"Hmmss\",Md),aa([\"H\",\"HH\"],_d),aa([\"a\",\"A\"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),aa([\"h\",\"hh\"],function(a,b,c){b[_d]=t(a),l(c).bigHour=!0}),aa(\"hmm\",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d)),l(c).bigHour=!0}),aa(\"hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e)),l(c).bigHour=!0}),aa(\"Hmm\",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d))}),aa(\"Hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e))});var se,te=/[ap]\\.?m?\\.?/i,ue=N(\"Hours\",!0),ve={calendar:td,longDateFormat:ud,invalidDate:vd,ordinal:wd,ordinalParse:xd,relativeTime:yd,months:ge,monthsShort:he,week:le,weekdays:me,weekdaysMin:oe,weekdaysShort:ne,meridiemParse:te},we={},xe=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,ye=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,ze=/Z|[+-]\\d\\d(?::?\\d\\d)?/,Ae=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],","// YYYYMM is NOT allowed by the standard","[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],Be=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Ce=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=w(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),","// constant that refers to the ISO standard","a.ISO_8601=function(){};var De=w(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?this\u003ea?this:a:n()}),Ee=w(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?a\u003ethis?this:a:n()}),Fe=function(){return Date.now?Date.now():+new Date};xb(\"Z\",\":\"),xb(\"ZZ\",\"\"),","// PARSING","Y(\"Z\",Td),Y(\"ZZ\",Td),aa([\"Z\",\"ZZ\"],function(a,b,c){c._useUTC=!0,c._tzm=yb(Td,a)});","// HELPERS","// timezone chunker","// '+10:00' \u003e ['10',  '00']","// '-1530'  \u003e ['-15', '30']","var Ge=/([\\+\\-]|\\d\\d)/gi;","// HOOKS","// This function will be called whenever a moment is mutated.","// It is intended to keep the offset in sync with the timezone.","a.updateOffset=function(){};","// ASP.NET json date format regex","var He=/^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/,Ie=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Je=Rb(1,\"add\"),Ke=Rb(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",a.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Le=w(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});","// FORMATTING","T(0,[\"gg\",2],0,function(){return this.weekYear()%100}),T(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),xc(\"gggg\",\"weekYear\"),xc(\"ggggg\",\"weekYear\"),xc(\"GGGG\",\"isoWeekYear\"),xc(\"GGGGG\",\"isoWeekYear\"),","// ALIASES","I(\"weekYear\",\"gg\"),I(\"isoWeekYear\",\"GG\"),","// PRIORITY","L(\"weekYear\",1),L(\"isoWeekYear\",1),","// PARSING","Y(\"G\",Rd),Y(\"g\",Rd),Y(\"GG\",Kd,Gd),Y(\"gg\",Kd,Gd),Y(\"GGGG\",Od,Id),Y(\"gggg\",Od,Id),Y(\"GGGGG\",Pd,Jd),Y(\"ggggg\",Pd,Jd),ba([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(a,b,c,d){b[d.substr(0,2)]=t(a)}),ba([\"gg\",\"GG\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),","// FORMATTING","T(\"Q\",0,\"Qo\",\"quarter\"),","// ALIASES","I(\"quarter\",\"Q\"),","// PRIORITY","L(\"quarter\",7),","// PARSING","Y(\"Q\",Fd),aa(\"Q\",function(a,b){b[Zd]=3*(t(a)-1)}),","// FORMATTING","T(\"D\",[\"DD\",2],\"Do\",\"date\"),","// ALIASES","I(\"date\",\"D\"),","// PRIOROITY","L(\"date\",9),","// PARSING","Y(\"D\",Kd),Y(\"DD\",Kd,Gd),Y(\"Do\",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),aa([\"D\",\"DD\"],$d),aa(\"Do\",function(a,b){b[$d]=t(a.match(Kd)[0],10)});","// MOMENTS","var Me=N(\"Date\",!0);","// FORMATTING","T(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),","// ALIASES","I(\"dayOfYear\",\"DDD\"),","// PRIORITY","L(\"dayOfYear\",4),","// PARSING","Y(\"DDD\",Nd),Y(\"DDDD\",Hd),aa([\"DDD\",\"DDDD\"],function(a,b,c){c._dayOfYear=t(a)}),","// FORMATTING","T(\"m\",[\"mm\",2],0,\"minute\"),","// ALIASES","I(\"minute\",\"m\"),","// PRIORITY","L(\"minute\",14),","// PARSING","Y(\"m\",Kd),Y(\"mm\",Kd,Gd),aa([\"m\",\"mm\"],ae);","// MOMENTS","var Ne=N(\"Minutes\",!1);","// FORMATTING","T(\"s\",[\"ss\",2],0,\"second\"),","// ALIASES","I(\"second\",\"s\"),","// PRIORITY","L(\"second\",15),","// PARSING","Y(\"s\",Kd),Y(\"ss\",Kd,Gd),aa([\"s\",\"ss\"],be);","// MOMENTS","var Oe=N(\"Seconds\",!1);","// FORMATTING","T(\"S\",0,0,function(){return~~(this.millisecond()/100)}),T(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),T(0,[\"SSS\",3],0,\"millisecond\"),T(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),T(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),T(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),T(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),T(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),T(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),","// ALIASES","I(\"millisecond\",\"ms\"),","// PRIORITY","L(\"millisecond\",16),","// PARSING","Y(\"S\",Nd,Fd),Y(\"SS\",Nd,Gd),Y(\"SSS\",Nd,Hd);var Pe;for(Pe=\"SSSS\";Pe.length\u003c=9;Pe+=\"S\")Y(Pe,Qd);for(Pe=\"S\";Pe.length\u003c=9;Pe+=\"S\")aa(Pe,Gc);","// MOMENTS","var Qe=N(\"Milliseconds\",!1);","// FORMATTING","T(\"z\",0,0,\"zoneAbbr\"),T(\"zz\",0,0,\"zoneName\");var Re=q.prototype;Re.add=Je,Re.calendar=Ub,Re.clone=Vb,Re.diff=ac,Re.endOf=mc,Re.format=ec,Re.from=fc,Re.fromNow=gc,Re.to=hc,Re.toNow=ic,Re.get=Q,Re.invalidAt=vc,Re.isAfter=Wb,Re.isBefore=Xb,Re.isBetween=Yb,Re.isSame=Zb,Re.isSameOrAfter=$b,Re.isSameOrBefore=_b,Re.isValid=tc,Re.lang=Le,Re.locale=jc,Re.localeData=kc,Re.max=Ee,Re.min=De,Re.parsingFlags=uc,Re.set=R,Re.startOf=lc,Re.subtract=Ke,Re.toArray=qc,Re.toObject=rc,Re.toDate=pc,Re.toISOString=dc,Re.toJSON=sc,Re.toString=cc,Re.unix=oc,Re.valueOf=nc,Re.creationData=wc,","// Year","Re.year=ke,Re.isLeapYear=qa,","// Week Year","Re.weekYear=yc,Re.isoWeekYear=zc,","// Quarter","Re.quarter=Re.quarters=Ec,","// Month","Re.month=ja,Re.daysInMonth=ka,","// Week","Re.week=Re.weeks=Aa,Re.isoWeek=Re.isoWeeks=Ba,Re.weeksInYear=Bc,Re.isoWeeksInYear=Ac,","// Day","Re.date=Me,Re.day=Re.days=Ja,Re.weekday=Ka,Re.isoWeekday=La,Re.dayOfYear=Fc,","// Hour","Re.hour=Re.hours=ue,","// Minute","Re.minute=Re.minutes=Ne,","// Second","Re.second=Re.seconds=Oe,","// Millisecond","Re.millisecond=Re.milliseconds=Qe,","// Offset","Re.utcOffset=Bb,Re.utc=Db,Re.local=Eb,Re.parseZone=Fb,Re.hasAlignedHourOffset=Gb,Re.isDST=Hb,Re.isLocal=Jb,Re.isUtcOffset=Kb,Re.isUtc=Lb,Re.isUTC=Lb,","// Timezone","Re.zoneAbbr=Hc,Re.zoneName=Ic,","// Deprecations","Re.dates=w(\"dates accessor is deprecated. Use date instead.\",Me),Re.months=w(\"months accessor is deprecated. Use month instead\",ja),Re.years=w(\"years accessor is deprecated. Use year instead\",ke),Re.zone=w(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",Cb),Re.isDSTShifted=w(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",Ib);var Se=Re,Te=B.prototype;Te.calendar=C,Te.longDateFormat=D,Te.invalidDate=E,Te.ordinal=F,Te.preparse=Lc,Te.postformat=Lc,Te.relativeTime=G,Te.pastFuture=H,Te.set=z,","// Month","Te.months=ea,Te.monthsShort=fa,Te.monthsParse=ha,Te.monthsRegex=ma,Te.monthsShortRegex=la,","// Week","Te.week=xa,Te.firstDayOfYear=za,Te.firstDayOfWeek=ya,","// Day of Week","Te.weekdays=Ea,Te.weekdaysMin=Ga,Te.weekdaysShort=Fa,Te.weekdaysParse=Ia,Te.weekdaysRegex=Ma,Te.weekdaysShortRegex=Na,Te.weekdaysMinRegex=Oa,","// Hours","Te.isPM=Ua,Te.meridiem=Va,Za(\"en\",{ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),","// Side effect imports","a.lang=w(\"moment.lang is deprecated. Use moment.locale instead.\",Za),a.langData=w(\"moment.langData is deprecated. Use moment.localeData instead.\",ab);var Ue=Math.abs,Ve=cd(\"ms\"),We=cd(\"s\"),Xe=cd(\"m\"),Ye=cd(\"h\"),Ze=cd(\"d\"),$e=cd(\"w\"),_e=cd(\"M\"),af=cd(\"y\"),bf=ed(\"milliseconds\"),cf=ed(\"seconds\"),df=ed(\"minutes\"),ef=ed(\"hours\"),ff=ed(\"days\"),gf=ed(\"months\"),hf=ed(\"years\"),jf=Math.round,kf={s:45,// seconds to minute","m:45,// minutes to hour","h:22,// hours to day","d:26,// days to month","M:11},lf=Math.abs,mf=vb.prototype;mf.abs=Uc,mf.add=Wc,mf.subtract=Xc,mf.as=ad,mf.asMilliseconds=Ve,mf.asSeconds=We,mf.asMinutes=Xe,mf.asHours=Ye,mf.asDays=Ze,mf.asWeeks=$e,mf.asMonths=_e,mf.asYears=af,mf.valueOf=bd,mf._bubble=Zc,mf.get=dd,mf.milliseconds=bf,mf.seconds=cf,mf.minutes=df,mf.hours=ef,mf.days=ff,mf.weeks=fd,mf.months=gf,mf.years=hf,mf.humanize=kd,mf.toISOString=ld,mf.toString=ld,mf.toJSON=ld,mf.locale=jc,mf.localeData=kc,","// Deprecations","mf.toIsoString=w(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",ld),mf.lang=Le,","// Side effect imports","// FORMATTING","T(\"X\",0,0,\"unix\"),T(\"x\",0,0,\"valueOf\"),","// PARSING","Y(\"x\",Rd),Y(\"X\",Ud),aa(\"X\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),aa(\"x\",function(a,b,c){c._d=new Date(t(a))}),","// Side effect imports","a.version=\"2.14.1\",b(rb),a.fn=Se,a.min=tb,a.max=ub,a.now=Fe,a.utc=j,a.unix=Jc,a.months=Pc,a.isDate=f,a.locale=Za,a.invalid=n,a.duration=Mb,a.isMoment=r,a.weekdays=Rc,a.parseZone=Kc,a.localeData=ab,a.isDuration=wb,a.monthsShort=Qc,a.weekdaysMin=Tc,a.defineLocale=$a,a.updateLocale=_a,a.locales=bb,a.weekdaysShort=Sc,a.normalizeUnits=J,a.relativeTimeRounding=id,a.relativeTimeThreshold=jd,a.calendarFormat=Tb,a.prototype=Se;var nf=a;return nf});"],"Functions":["!function(a,b)\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module?module.exports=b():\"function\"==typeof define\u0026\u0026define.amd?define(b):a.moment=b()}(this,function(){\"use strict\";function a(){return md.apply(null,arguments)}","function b(a)md=a}function c(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return\"[object Object]\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)","return!1;return!0}function f(a)return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c\u003ca.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)\u0026\u0026(a[c]=b[c]);return h(b,\"toString\")\u0026\u0026(a.toString=b.toString),h(b,\"valueOf\")\u0026\u0026(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){","returnempty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf\u0026\u0026(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=nd.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())\u0026\u0026b.overflow\u003c0\u0026\u0026!b.empty\u0026\u0026!b.invalidMonth\u0026\u0026!b.invalidWeekday\u0026\u0026!b.nullInput\u0026\u0026!b.invalidFormat\u0026\u0026!b.userInvalidated\u0026\u0026(!b.meridiem||b.meridiem\u0026\u0026c),a._strict\u0026\u0026(a._isValid=a._isValid\u0026\u00260===b.charsLeftOver\u0026\u00260===b.unusedTokens.length\u0026\u0026void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),od.length\u003e0)for(c in od)d=od[c],e=b[d],o(e)||(a[d]=e);return a}","function q(b)p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),pd===!1\u0026\u0026(pd=!0,a.updateOffset(this),pd=!1)}function r(a){return a instanceof q||null!=a\u0026\u0026null!=a._isAMomentObject}function s(a){return 0\u003ea?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b\u0026\u0026isFinite(b)\u0026\u0026(c=s(b)),c}","function u(a,b,c)var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e\u003ed;d++)(c\u0026\u0026a[d]!==b[d]||!c\u0026\u0026t(a[d])!==t(b[d]))\u0026\u0026g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1\u0026\u0026\"undefined\"!=typeof console\u0026\u0026console.warn\u0026\u0026console.warn(\"Deprecation warning: \"+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(null,b),d\u0026\u0026(v(b+\"\\nArguments: \"+Array.prototype.slice.call(arguments).join(\", \")+\"\\n\"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler\u0026\u0026a.deprecationHandler(b,c),qd[b]||(v(c),qd[b]=!0)}function y(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this[\"_\"+c]=b;this._config=a,","this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\d1,2}/.source)}function A(a,b){var c,e=i({},a);for(c in b)h(b,c)\u0026\u0026(d(a[c])\u0026\u0026d(b[c])?(e[c]={},i(e[c],a[c]),i(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)h(a,c)\u0026\u0026!h(b,c)\u0026\u0026d(a[c])\u0026\u0026(","e[c]=i(},e[c]));return e}function B(a){null!=a\u0026\u0026this.set(a)}function C(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return y(d)?d.call(b,c):d}function D(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function E(){return this._invalidDate}function F(a){return this._ordinal.replace(\"%d\",a)}function G(a,b,c,d){var e=this._relativeTime[c];return y(e)?e(a,b,c,d):e.replace(/%d/i,a)}function H(a,b){var c=this._relativeTime[a\u003e0?\"future\":\"past\"];return y(c)?c(b):c.replace(/%s/i,b)}function I(a,b){var c=a.toLowerCase();zd[c]=zd[c+\"s\"]=zd[b]=a}function J(a){return\"string\"==typeof a?zd[a]||zd[a.toLowerCase()]:void 0}function K(a){var b,c,d={};for(c in a)h(a,c)\u0026\u0026(b=J(c),b\u0026\u0026(d[b]=a[c]));return d}function L(a,b){Ad[a]=b}function M(a){var b=[];for(var c in a)b.push({unit:c,priority:Ad[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function N(b,c){return function(d){return null!=d?(P(this,b,d),a.updateOffset(this,c),this):O(this,b)}}function O(a,b){return a.isValid()?a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+b]():NaN}function P(a,b,c){a.isValid()\u0026\u0026a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+b](c)}","function Q(a)return a=J(a),y(this[a])?this[a]():this}function R(a,b){if(\"object\"==typeof a){a=K(a);for(var c=M(a),d=0;d\u003cc.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=J(a),y(this[a]))return this[a](b);return this}function S(a,b,c){var d=\"\"+Math.abs(a),e=b-d.length,f=a\u003e=0;return(f?c?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}","// callback: function ()  this.month() + 1 }","function T(a,b,c,d)var e=d;\"string\"==typeof d\u0026\u0026(e=function(){return this[d]()}),a\u0026\u0026(Ed[a]=e),b\u0026\u0026(Ed[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c\u0026\u0026(Ed[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function V(a){var b,c,d=a.match(Bd);for(b=0,c=d.length;c\u003eb;b++)Ed[d[b]]?d[b]=Ed[d[b]]:d[b]=U(d[b]);return function(b){var e,f=\"\";for(e=0;c\u003ee;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}","function W(a,b)return a.isValid()?(b=X(b,a.localeData()),Dd[b]=Dd[b]||V(b),Dd[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Cd.lastIndex=0;d\u003e=0\u0026\u0026Cd.test(a);)a=a.replace(Cd,c),Cd.lastIndex=0,d-=1;return a}function Y(a,b,c){Wd[a]=y(b)?b:function(a,d){return a\u0026\u0026c?c:b}}function Z(a,b){return h(Wd,a)?Wd[a](b._strict,b._locale):new RegExp($(a))}","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function $(a)return _(a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function _(a){return a.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$\u0026\")}function aa(a,b){var c,d=b;for(\"string\"==typeof a\u0026\u0026(a=[a]),\"number\"==typeof b\u0026\u0026(d=function(a,c){c[b]=t(a)}),c=0;c\u003ca.length;c++)Xd[a[c]]=d}function ba(a,b){aa(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function ca(a,b,c){null!=b\u0026\u0026h(Xd,a)\u0026\u0026Xd[a](b,c._a,c,a)}function da(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function ea(a,b){return c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||fe).test(b)?\"format\":\"standalone\"][a.month()]}function fa(a,b){return c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[fe.test(b)?\"format\":\"standalone\"][a.month()]}function ga(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(","this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;12\u003ed;++d)f=j([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\"\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\"\").toLocaleLowerCase();return c?\"MMM\"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null):(e=sd.call(this._longMonthsParse,g),-1!==e?e:null):\"MMM\"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:(e=sd.call(this._longMonthsParse,g),-1!==e?e:null)):(e=sd.call(this._longMonthsParse,g),-1!==e?e:(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null))}function ha(a,b,c)var d,e,f;if(this._monthsParseExact)return ga.call(this,a,b,c);","function ia(a,b)var c;if(!a.isValid())","if(b=a.localeData().monthsParse(b),\"number\"!=typeof b)return a;return c=Math.min(a.date(),da(a.year(),b)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](b,c),a}function ja(b)return null!=b?(ia(this,b),a.updateOffset(this,!0),this):O(this,\"Month\")}function ka(){return da(this.year(),this.month())}function la(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(h(this,\"_monthsShortRegex\")||(this._monthsShortRegex=ie),this._monthsShortStrictRegex\u0026\u0026a?this._monthsShortStrictRegex:this._monthsShortRegex)}function ma(a){return this._monthsParseExact?(h(this,\"_monthsRegex\")||na.call(this),a?this._monthsStrictRegex:this._monthsRegex):(h(this,\"_monthsRegex\")||(this._monthsRegex=je),this._monthsStrictRegex\u0026\u0026a?this._monthsStrictRegex:this._monthsRegex)}function na(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;12\u003eb;b++)c=j([2e3,b]),d.push(this.monthsShort(c,\"\")),e.push(this.months(c,\"\")),f.push(this.months(c,\"\")),f.push(this.monthsShort(c,\"\"));for(","function oa(a)return pa(a)?366:365}function pa(a){return a%4===0\u0026\u0026a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){","return 100\u003ea\u0026\u0026a\u003e=0\u0026\u0026isFinite(h.getFullYear())\u0026\u0026h.setFullYear(a),h}function sa(a)var b=new Date(Date.UTC.apply(null,arguments));","//the Date.UTC function remaps years 0-99 to 1900-1999","function ta(a,b,c)var// first-week day -- which january is always in the first week (4 for iso, 1 for other)","function ua(a,b,c,d,e)var f,g,h=(7+c-d)%7,i=ta(a,d,e),j=1+7*(b-1)+h+i;return 0\u003e=j?(f=a-1,g=oa(f)+j):j\u003eoa(a)?(f=a+1,g=j-oa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function va(a,b,c){var d,e,f=ta(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return 1\u003eg?(e=a.year()-1,d=g+wa(e,b,c)):g\u003ewa(a.year(),b,c)?(d=g-wa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function wa(a,b,c){var d=ta(a,b,c),e=ta(a+1,b,c);return(oa(a)-d+e)/7}","function xa(a)return va(a,this._week.dow,this._week.doy).week}function ya(){return this._week.dow}function za(){return this._week.doy}","function Aa(a)var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\"d\")}function Ba(a){var b=va(this,1,4).week;return null==a?b:this.add(7*(a-b),\"d\")}","function Ca(a,b)return\"string\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\"number\"==typeof a?a:null):parseInt(a,10)}function Da(a,b){return\"string\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Ea(a,b){return c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\"format\":\"standalone\"][a.day()]}function Fa(a){return this._weekdaysShort[a.day()]}function Ga(a){return this._weekdaysMin[a.day()]}function Ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;7\u003ed;++d)f=j([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\"\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\"\").toLocaleLowerCase();return c?\"dddd\"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:null):\"ddd\"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null):\"dddd\"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):\"ddd\"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null)))}function Ia(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ha.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;7\u003ed;d++){","function Ja(a)if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,\"d\")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function La(a){if(!this.isValid())return null!=a?this:NaN;","if(null!=a)var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,\"_weekdaysRegex\")||(this._weekdaysRegex=pe),this._weekdaysStrictRegex\u0026\u0026a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=qe),this._weekdaysShortStrictRegex\u0026\u0026a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=re),this._weekdaysMinStrictRegex\u0026\u0026a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7\u003eb;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,\"\"),e=this.weekdaysShort(c,\"\"),f=this.weekdays(c,\"\"),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(","function Qa()return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}","function Ta(a,b)return b._meridiemParse}","function Ua(a)","return\"p\"===(a+\"\").toLowerCase().charAt(0)}function Va(a,b,c)return a\u003e11?c?\"pm\":\"PM\":c?\"am\":\"AM\"}function Wa(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}","function Xa(a)for(var b,c,d,e,f=0;f\u003ca.length;){for(e=Wa(a[f]).split(\"-\"),b=e.length,c=Wa(a[f+1]),c=c?c.split(\"-\"):null;b\u003e0;){if(d=Ya(e.slice(0,b).join(\"-\")))return d;if(c\u0026\u0026c.length\u003e=b\u0026\u0026u(e,c,!0)\u003e=b-1)","break;b--}f++}return null}function Ya(a)var b=null;","// This function will load locale and then set the global locale.  If","function Za(a,b)var c;","return a\u0026\u0026(c=o(b)?ab(a):$a(a,b),c\u0026\u0026(se=c)),se._abbr}function $a(a,b)if(null!==b){var c=ve;","return delete we[a],null}function _a(a,b)if(null!=b){var c,d=ve;","function ab(a)var b;if(a\u0026\u0026a._locale\u0026\u0026a._locale._abbr\u0026\u0026(a=a._locale._abbr),!a)return se;if(!c(a)){if(b=Ya(a))return b;a=[a]}return Xa(a)}function bb(){return rd(we)}function cb(a){var b,c=a._a;return c\u0026\u0026-2===l(a).overflow\u0026\u0026(b=c[Zd]\u003c0||c[Zd]\u003e11?Zd:c[$d]\u003c1||c[$d]\u003eda(c[Yd],c[Zd])?$d:c[_d]\u003c0||c[_d]\u003e24||24===c[_d]\u0026\u0026(0!==c[ae]||0!==c[be]||0!==c[ce])?_d:c[ae]\u003c0||c[ae]\u003e59?ae:c[be]\u003c0||c[be]\u003e59?be:c[ce]\u003c0||c[ce]\u003e999?ce:-1,l(a)._overflowDayOfYear\u0026\u0026(Yd\u003eb||b\u003e$d)\u0026\u0026(b=$d),l(a)._overflowWeeks\u0026\u0026-1===b\u0026\u0026(b=de),l(a)._overflowWeekday\u0026\u0026-1===b\u0026\u0026(b=ee),l(a).overflow=b),a}","function db(a)var b,c,d,e,f,g,h=a._i,i=xe.exec(h)||ye.exec(h);if(i){for(l(a).iso=!0,b=0,c=Ae.length;c\u003eb;b++)if(Ae[b][1].exec(i[1])){e=Ae[b][0],d=Ae[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=Be.length;c\u003eb;b++)if(Be[b][1].exec(i[3])){","function eb(b)var c=Ce.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(db(b),void(b._isValid===!1\u0026\u0026(delete b._isValid,a.createFromInputFallback(b))))}","function fb(a,b,c)return null!=a?a:null!=b?b:c}function gb(b){","function hb(a)var b,c,d,e,f=[];if(!a._d){","null!=a._tzm\u0026\u0026a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay\u0026\u0026(a._a[_d]=24)}}function ib(a)var b,c,d,e,f,g,h,i;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=fb(b.GG,a._a[Yd],va(rb(),1,4).year),d=fb(b.W,1),e=fb(b.E,1),(1\u003ee||e\u003e7)\u0026\u0026(i=!0)):(f=a._locale._week.dow,g=a._locale._week.doy,c=fb(b.gg,a._a[Yd],va(rb(),f,g).year),d=fb(b.w,1),null!=b.d?(e=b.d,(0\u003ee||e\u003e6)\u0026\u0026(i=!0)):null!=b.e?(e=b.e+f,(b.e\u003c0||b.e\u003e6)\u0026\u0026(i=!0)):e=f),1\u003ed||d\u003ewa(c,f,g)?l(a)._overflowWeeks=!0:null!=i?l(a)._overflowWeekday=!0:(h=ua(c,d,e,f,g),a._a[Yd]=h.year,a._dayOfYear=h.dayOfYear)}","function jb(b)","b._a[_d]=kb(b._locale,b._a[_d],b._meridiem),hb(b),cb(b)}function kb(a,b,c)var d;","function lb(a)var b,c,d,e,f;if(0===a._f.length)return l(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e\u003ca._f.length;e++)f=0,b=p({},a),null!=a._useUTC\u0026\u0026(b._useUTC=a._useUTC),b._f=a._f[e],jb(b),m(b)\u0026\u0026(f+=l(b).charsLeftOver,f+=10*l(b).unusedTokens.length,l(b).score=f,(null==d||d\u003ef)\u0026\u0026(d=f,c=b));i(a,c||b)}function mb(a){if(!a._d){var b=K(a._i);a._a=g([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a\u0026\u0026parseInt(a,10)}),hb(a)}}function nb(a){var b=new q(cb(ob(a)));","return b._nextDay\u0026\u0026(b.add(1,\"d\"),b._nextDay=void 0),b}function ob(a)var b=a._i,d=a._f;return a._locale=a._locale||ab(a._l),null===b||void 0===d\u0026\u0026\"\"===b?n({nullInput:!0}):(\"string\"==typeof b\u0026\u0026(a._i=b=a._locale.preparse(b)),r(b)?new q(cb(b)):(c(d)?lb(a):f(b)?a._d=b:d?jb(a):pb(a),m(a)||(a._d=null),a))}function pb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):f(d)?b._d=new Date(d.valueOf()):\"string\"==typeof d?eb(b):c(d)?(b._a=g(d.slice(0),function(a){return parseInt(a,10)}),hb(b)):\"object\"==typeof d?mb(b):\"number\"==typeof d?","b._d=new Date(d):a.createFromInputFallback(b)}function qb(a,b,f,g,h)var i={};","return\"boolean\"==typeof f\u0026\u0026(g=f,f=void 0),(d(a)\u0026\u0026e(a)||c(a)\u0026\u00260===a.length)\u0026\u0026(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,nb(i)}function rb(a,b,c,d)return qb(a,b,c,d,!1)}","// other. This relies on the function fn to be transitive.","function sb(a,b)var d,e;if(1===b.length\u0026\u0026c(b[0])\u0026\u0026(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e\u003cb.length;++e)b[e].isValid()\u0026\u0026!b[e][a](d)||(d=b[e]);return d}","function tb()var a=[].slice.call(arguments,0);return sb(\"isBefore\",a)}function ub(){var a=[].slice.call(arguments,0);return sb(\"isAfter\",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;","this._months=+e+3*d+12*c,this._data=},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}","function xb(a,b)T(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0\u003ea\u0026\u0026(a=-a,c=\"-\"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||\"\").match(a)||[],d=c[c.length-1]||[],e=(d+\"\").match(Ge)||[\"-\",0,0],f=+(60*e[1])+t(e[2]);return\"+\"===e[0]?f:-f}","function zb(b,c)var d,e;","return c._isUTC?(d=c.clone(),e=(r(b)||f(b)?b.valueOf():rb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):rb(b).local()}function Ab(a)","function Bb(b,c)var d,e=this._offset||0;return this.isValid()?null!=b?(\"string\"==typeof b?b=yb(Td,b):Math.abs(b)\u003c16\u0026\u0026(b=60*b),!this._isUTC\u0026\u0026c\u0026\u0026(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d\u0026\u0026this.add(d,\"m\"),e!==b\u0026\u0026(!c||this._changeInProgress?Sb(this,Mb(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?(\"string\"!=typeof a\u0026\u0026(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC\u0026\u0026(this.utcOffset(0,a),this._isUTC=!1,a\u0026\u0026this.subtract(Ab(this),\"m\")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i\u0026\u0026this.utcOffset(yb(Sd,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()\u003ethis.clone().month(0).utcOffset()||this.utcOffset()\u003ethis.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()\u0026\u0026u(a._a,b.toArray())\u003e0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC\u0026\u00260===this._offset:!1}function Mb(a,b){var c,d,e,f=a,","return wb(a)?f=ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=He.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:0,d:t(g[$d])*c,h:t(g[_d])*c,m:t(g[ae])*c,s:t(g[be])*c,ms:t(g[ce])*c}):(g=Ie.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:\"object\"==typeof f\u0026\u0026(\"from\"in f||\"to\"in f)\u0026\u0026(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)\u0026\u0026h(a,\"_locale\")\u0026\u0026(d._locale=a._locale),d}function Nb(a,b){","return(isNaN(c)?0:c)*b}function Ob(a,b)var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\"M\").isAfter(b)\u0026\u0026--c.months,c.milliseconds=+b-+a.clone().add(c.months,\"M\"),c}function Pb(a,b){var c;return a.isValid()\u0026\u0026b.isValid()?(b=zb(b,a),a.isBefore(b)?c=Ob(a,b):(c=Ob(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}function Qb(a){return 0\u003ea?-1*Math.round(-1*a):Math.round(a)}","function Rb(a,b)return function(c,d){var e,f;","return null===d||isNaN(+d)||(x(b,\"moment().\"+b+\"(period, number) is deprecated. Please use moment().\"+b+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),f=c,c=d,d=f),c=\"string\"==typeof c?+c:c,e=Mb(c,d),Sb(this,e,a),this}}function Sb(b,c,d,e)var f=c._milliseconds,g=Qb(c._days),h=Qb(c._months);b.isValid()\u0026\u0026(e=null==e?!0:e,f\u0026\u0026b._d.setTime(b._d.valueOf()+f*d),g\u0026\u0026P(b,\"Date\",O(b,\"Date\")+g*d),h\u0026\u0026ia(b,O(b,\"Month\")+h*d),e\u0026\u0026a.updateOffset(b,g||h))}function Tb(a,b){var c=a.diff(b,\"days\",!0);return-6\u003ec?\"sameElse\":-1\u003ec?\"lastWeek\":0\u003ec?\"lastDay\":1\u003ec?\"sameDay\":2\u003ec?\"nextDay\":7\u003ec?\"nextWeek\":\"sameElse\"}function Ub(b,c){","var d=b||rb(),e=zb(d,this).startOf(\"day\"),f=a.calendarFormat(this,e)||\"sameElse\",g=c\u0026\u0026(y(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,rb(d)))}function Vb()return new q(this)}function Wb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003ec.valueOf():c.valueOf()\u003cthis.clone().startOf(b).valueOf()):!1}function Xb(a,b){var c=r(a)?a:rb(a);return this.isValid()\u0026\u0026c.isValid()?(b=J(o(b)?\"millisecond\":b),\"millisecond\"===b?this.valueOf()\u003cc.valueOf():this.clone().endOf(b).valueOf()\u003cc.valueOf()):!1}function Yb(a,b,c,d){return d=d||\"()\",(\"(\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))\u0026\u0026(\")\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function Zb(a,b){var c,d=r(a)?a:rb(a);return this.isValid()\u0026\u0026d.isValid()?(b=J(b||\"millisecond\"),\"millisecond\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()\u003c=c\u0026\u0026c\u003c=this.clone().endOf(b).valueOf())):!1}function $b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function _b(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function ac(a,b,c){var d,e,f,g;// 1000","return this.isValid()?(d=zb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=J(b),\"year\"===b||\"month\"===b||\"quarter\"===b?(g=bc(this,d),\"quarter\"===b?g/=3:\"year\"===b\u0026\u0026(g/=12)):(f=this-d,g=\"second\"===b?f/1e3:\"minute\"===b?f/6e4:\"hour\"===b?f/36e5:\"day\"===b?(f-e)/864e5:\"week\"===b?(f-e)/6048e5:f),c?g:s(g)):NaN):NaN}function bc(a,b)","return 0\u003eb-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)||0}function cc()return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function dc(){var a=this.clone().utc();return 0\u003ca.year()\u0026\u0026a.year()\u003c=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):W(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()\u0026\u0026(r(a)\u0026\u0026a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}","function jc(a)var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b\u0026\u0026(this._locale=b),this)}function kc(){return this._locale}function lc(a){","return\"week\"===a\u0026\u0026this.weekday(0),\"isoWeek\"===a\u0026\u0026this.isoWeekday(1),\"quarter\"===a\u0026\u0026this.month(3*Math.floor(this.month()/3)),this}function mc(a)","return a=J(a),void 0===a||\"millisecond\"===a?this:(\"date\"===a\u0026\u0026(a=\"day\"),this.startOf(a).add(1,\"isoWeek\"===a?\"week\":a).subtract(1,\"ms\"))}function nc()return this._d.valueOf()-6e4*(this._offset||0)}function oc(){return Math.floor(this.valueOf()/1e3)}function pc(){return new Date(this.valueOf())}function qc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function rc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function sc(){","return this.isValid()?this.toISOString():null}function tc()return m(this)}function uc(){return i({},l(this))}function vc(){return l(this).overflow}function wc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function xc(a,b){T(0,[a,a.length],0,b)}","function yc(a)return Cc.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zc(a){return Cc.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Ac(){return wa(this.year(),1,4)}function Bc(){var a=this.localeData()._week;return wa(this.year(),a.dow,a.doy)}function Cc(a,b,c,d,e){var f;return null==a?va(this,d,e).year:(f=wa(a,d,e),b\u003ef\u0026\u0026(b=f),Dc.call(this,a,b,c,d,e))}function Dc(a,b,c,d,e){var f=ua(a,b,c,d,e),g=sa(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}","function Ec(a)return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}","function Fc(a)var b=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?b:this.add(a-b,\"d\")}function Gc(a,b){b[ce]=t(1e3*(\"0.\"+a))}","function Hc()return this._isUTC?\"UTC\":\"\"}function Ic(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Jc(a){return rb(1e3*a)}function Kc(){return rb.apply(null,arguments).parseZone()}function Lc(a){return a}function Mc(a,b,c,d){var e=ab(),f=j().set(d,b);return e[c](f,a)}function Nc(a,b,c){if(\"number\"==typeof a\u0026\u0026(b=a,a=void 0),a=a||\"\",null!=b)return Mc(a,b,c,\"month\");var d,e=[];for(d=0;12\u003ed;d++)e[d]=Mc(a,d,c,\"month\");return e}","function Oc(a,b,c,d)\"boolean\"==typeof a?(\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\"):(b=a,c=b,a=!1,\"number\"==typeof b\u0026\u0026(c=b,b=void 0),b=b||\"\");var e=ab(),f=a?e._week.dow:0;if(null!=c)return Mc(b,(c+f)%7,d,\"day\");var g,h=[];for(g=0;7\u003eg;g++)h[g]=Mc(b,(g+f)%7,d,\"day\");return h}function Pc(a,b){return Nc(a,b,\"months\")}function Qc(a,b){return Nc(a,b,\"monthsShort\")}function Rc(a,b,c){return Oc(a,b,c,\"weekdays\")}function Sc(a,b,c){return Oc(a,b,c,\"weekdaysShort\")}function Tc(a,b,c){return Oc(a,b,c,\"weekdaysMin\")}function Uc(){var a=this._data;return this._milliseconds=Ue(this._milliseconds),this._days=Ue(this._days),this._months=Ue(this._months),a.milliseconds=Ue(a.milliseconds),a.seconds=Ue(a.seconds),a.minutes=Ue(a.minutes),a.hours=Ue(a.hours),a.months=Ue(a.months),a.years=Ue(a.years),this}function Vc(a,b,c,d){var e=Mb(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}","function Wc(a,b)return Vc(this,a,b,1)}","function Xc(a,b)return Vc(this,a,b,-1)}function Yc(a){return 0\u003ea?Math.floor(a):Math.ceil(a)}function Zc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;","return f\u003e=0\u0026\u0026g\u003e=0\u0026\u0026h\u003e=0||0\u003e=f\u0026\u00260\u003e=g\u0026\u00260\u003e=h||(f+=864e5*Yc(_c(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=s(f/1e3),i.seconds=a%60,b=s(a/60),i.minutes=b%60,c=s(b/60),i.hours=c%24,g+=s(c/24),e=s($c(g)),h+=e,g-=Yc(_c(e)),d=s(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function $c(a)","return 4800*a/146097}function _c(a)","return 146097*a/4800}function ad(a)var b,c,d=this._milliseconds;if(a=J(a),\"month\"===a||\"year\"===a)return b=this._days+d/864e5,c=this._months+$c(b),\"month\"===a?c:c/12;switch(b=this._days+Math.round(_c(this._months)),a){case\"week\":return b/7+d/6048e5;case\"day\":return b+d/864e5;case\"hour\":return 24*b+d/36e5;case\"minute\":return 1440*b+d/6e4;case\"second\":return 86400*b+d/1e3;","function bd()return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)}function cd(a){return function(){return this.as(a)}}function dd(a){return a=J(a),this[a+\"s\"]()}function ed(a){return function(){return this._data[a]}}function fd(){return s(this.days()/7)}","// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function gd(a,b,c,d,e)return e.relativeTime(b||1,!!c,a,d)}function hd(a,b,c){var d=Mb(a).abs(),e=jf(d.as(\"s\")),f=jf(d.as(\"m\")),g=jf(d.as(\"h\")),h=jf(d.as(\"d\")),i=jf(d.as(\"M\")),j=jf(d.as(\"y\")),k=e\u003ckf.s\u0026\u0026[\"s\",e]||1\u003e=f\u0026\u0026[\"m\"]||f\u003ckf.m\u0026\u0026[\"mm\",f]||1\u003e=g\u0026\u0026[\"h\"]||g\u003ckf.h\u0026\u0026[\"hh\",g]||1\u003e=h\u0026\u0026[\"d\"]||h\u003ckf.d\u0026\u0026[\"dd\",h]||1\u003e=i\u0026\u0026[\"M\"]||i\u003ckf.M\u0026\u0026[\"MM\",i]||1\u003e=j\u0026\u0026[\"y\"]||[\"yy\",j];return k[2]=b,k[3]=+a\u003e0,k[4]=c,gd.apply(null,k)}","// This function allows you to set the rounding function for relative time strings","function id(a)return void 0===a?jf:\"function\"==typeof a?(jf=a,!0):!1}","// This function allows you to set a threshold for relative time strings","function jd(a,b)return void 0===kf[a]?!1:void 0===b?kf[a]:(kf[a]=b,!0)}function kd(a){var b=this.localeData(),c=hd(this,!a,b);return a\u0026\u0026(c=b.pastFuture(+this,c)),b.postformat(c)}function ld(){","var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0\u003em?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}var md,nd;nd=Array.prototype.some?Array.prototype.some:function(a)for(var b=Object(this),c=b.length\u003e\u003e\u003e0,d=0;c\u003ed;d++)if(d in b\u0026\u0026a.call(this,b[d],d,b))return!0;return!1};","var od=a.momentProperties=[],pd=!1,qd=};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var rd;rd=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)\u0026\u0026c.push(b);return c};var sd,td={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},ud={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},vd=\"Invalid date\",wd=\"%d\",xd=/\\d{1,2}/,yd={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},zd={},Ad={},Bd=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Cd=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Dd={},Ed={},Fd=/\\d/,Gd=/\\d\\d/,Hd=/\\d{3}/,Id=/\\d{4}/,Jd=/[+-]?\\d{6}/,Kd=/\\d\\d?/,Ld=/\\d\\d\\d\\d?/,Md=/\\d\\d\\d\\d\\d\\d?/,Nd=/\\d{1,3}/,Od=/\\d{1,4}/,Pd=/[+-]?\\d{1,6}/,Qd=/\\d+/,Rd=/[+-]?\\d+/,Sd=/Z|[+-]\\d\\d:?\\d\\d/gi,Td=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Ud=/[+-]?\\d+(\\.\\d{1,3})?/,Vd=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,Wd={},Xd={},Yd=0,Zd=1,$d=2,_d=3,ae=4,be=5,ce=6,de=7,ee=8;sd=Array.prototype.indexOf?Array.prototype.indexOf:function(a){","var b;for(b=0;b\u003cthis.length;++b)if(this[b]===a)return b;return-1},T(\"M\",[\"MM\",2],\"Mo\",function()return this.month()+1}),T(\"MMM\",0,0,function(a){return this.localeData().monthsShort(this,a)}),T(\"MMMM\",0,0,function(a){return this.localeData().months(this,a)}),I(\"month\",\"M\"),L(\"month\",8),Y(\"M\",Kd),Y(\"MM\",Kd,Gd),Y(\"MMM\",function(a,b){return b.monthsShortRegex(a)}),Y(\"MMMM\",function(a,b){return b.monthsRegex(a)}),aa([\"M\",\"MM\"],function(a,b){b[Zd]=t(a)-1}),aa([\"MMM\",\"MMMM\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[Zd]=e:l(c).invalidMonth=a});","T(\"Y\",0,0,function()var a=this.year();return 9999\u003e=a?\"\"+a:\"+\"+a}),T(0,[\"YY\",2],0,function(){return this.year()%100}),T(0,[\"YYYY\",4],0,\"year\"),T(0,[\"YYYYY\",5],0,\"year\"),T(0,[\"YYYYYY\",6,!0],0,\"year\"),","Y(\"Y\",Rd),Y(\"YY\",Kd,Gd),Y(\"YYYY\",Od,Id),Y(\"YYYYY\",Pd,Jd),Y(\"YYYYYY\",Pd,Jd),aa([\"YYYYY\",\"YYYYYY\"],Yd),aa(\"YYYY\",function(b,c)c[Yd]=2===b.length?a.parseTwoDigitYear(b):t(b)}),aa(\"YY\",function(b,c){c[Yd]=a.parseTwoDigitYear(b)}),aa(\"Y\",function(a,b){b[Yd]=parseInt(a,10)}),","a.parseTwoDigitYear=function(a)return t(a)+(t(a)\u003e68?1900:2e3)};","Y(\"w\",Kd),Y(\"ww\",Kd,Gd),Y(\"W\",Kd),Y(\"WW\",Kd,Gd),ba([\"w\",\"ww\",\"W\",\"WW\"],function(a,b,c,d)b[d.substr(0,1)]=t(a)});var le={dow:0,// Sunday is the first day of the week.","T(\"d\",0,\"do\",\"day\"),T(\"dd\",0,0,function(a)return this.localeData().weekdaysMin(this,a)}),T(\"ddd\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),T(\"dddd\",0,0,function(a){return this.localeData().weekdays(this,a)}),T(\"e\",0,0,\"weekday\"),T(\"E\",0,0,\"isoWeekday\"),","Y(\"d\",Kd),Y(\"e\",Kd),Y(\"E\",Kd),Y(\"dd\",function(a,b)return b.weekdaysMinRegex(a)}),Y(\"ddd\",function(a,b){return b.weekdaysShortRegex(a)}),Y(\"dddd\",function(a,b){return b.weekdaysRegex(a)}),ba([\"dd\",\"ddd\",\"dddd\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);","null!=e?b.d=e:l(c).invalidWeekday=a}),ba([\"d\",\"e\",\"E\"],function(a,b,c,d)b[d]=t(a)});","var me=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),ne=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),oe=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),pe=Vd,qe=Vd,re=Vd;T(\"H\",[\"HH\",2],0,\"hour\"),T(\"h\",[\"hh\",2],0,Qa),T(\"k\",[\"kk\",2],0,Ra),T(\"hmm\",0,0,function()return\"\"+Qa.apply(this)+S(this.minutes(),2)}),T(\"hmmss\",0,0,function(){return\"\"+Qa.apply(this)+S(this.minutes(),2)+S(this.seconds(),2)}),T(\"Hmm\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)}),T(\"Hmmss\",0,0,function(){return\"\"+this.hours()+S(this.minutes(),2)+S(this.seconds(),2)}),Sa(\"a\",!0),Sa(\"A\",!1),","L(\"hour\",13),Y(\"a\",Ta),Y(\"A\",Ta),Y(\"H\",Kd),Y(\"h\",Kd),Y(\"HH\",Kd,Gd),Y(\"hh\",Kd,Gd),Y(\"hmm\",Ld),Y(\"hmmss\",Md),Y(\"Hmm\",Ld),Y(\"Hmmss\",Md),aa([\"H\",\"HH\"],_d),aa([\"a\",\"A\"],function(a,b,c)c._isPm=c._locale.isPM(a),c._meridiem=a}),aa([\"h\",\"hh\"],function(a,b,c){b[_d]=t(a),l(c).bigHour=!0}),aa(\"hmm\",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d)),l(c).bigHour=!0}),aa(\"hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e)),l(c).bigHour=!0}),aa(\"Hmm\",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d))}),aa(\"Hmmss\",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e))});var se,te=/[ap]\\.?m?\\.?/i,ue=N(\"Hours\",!0),ve={calendar:td,longDateFormat:ud,invalidDate:vd,ordinal:wd,ordinalParse:xd,relativeTime:yd,months:ge,monthsShort:he,week:le,weekdays:me,weekdaysMin:oe,weekdaysShort:ne,meridiemParse:te},we={},xe=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,ye=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/,ze=/Z|[+-]\\d\\d(?::?\\d\\d)?/,Ae=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],","[\"GGGG[W]WWE\",/\\d4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],Be=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Ce=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=w(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),","a.ISO_8601=function()};var De=w(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?this\u003ea?this:a:n()}),Ee=w(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()\u0026\u0026a.isValid()?a\u003ethis?this:a:n()}),Fe=function(){return Date.now?Date.now():+new Date};xb(\"Z\",\":\"),xb(\"ZZ\",\"\"),","Y(\"Z\",Td),Y(\"ZZ\",Td),aa([\"Z\",\"ZZ\"],function(a,b,c)c._useUTC=!0,c._tzm=yb(Td,a)});","// This function will be called whenever a moment is mutated.","a.updateOffset=function()};","var He=/^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d3})?\\d*)?$/,Ie=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Je=Rb(1,\"add\"),Ke=Rb(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",a.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Le=w(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});","T(0,[\"gg\",2],0,function()return this.weekYear()%100}),T(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),xc(\"gggg\",\"weekYear\"),xc(\"ggggg\",\"weekYear\"),xc(\"GGGG\",\"isoWeekYear\"),xc(\"GGGGG\",\"isoWeekYear\"),","Y(\"G\",Rd),Y(\"g\",Rd),Y(\"GG\",Kd,Gd),Y(\"gg\",Kd,Gd),Y(\"GGGG\",Od,Id),Y(\"gggg\",Od,Id),Y(\"GGGGG\",Pd,Jd),Y(\"ggggg\",Pd,Jd),ba([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(a,b,c,d)b[d.substr(0,2)]=t(a)}),ba([\"gg\",\"GG\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),","Y(\"Q\",Fd),aa(\"Q\",function(a,b)b[Zd]=3*(t(a)-1)}),","Y(\"D\",Kd),Y(\"DD\",Kd,Gd),Y(\"Do\",function(a,b)return a?b._ordinalParse:b._ordinalParseLenient}),aa([\"D\",\"DD\"],$d),aa(\"Do\",function(a,b){b[$d]=t(a.match(Kd)[0],10)});","Y(\"DDD\",Nd),Y(\"DDDD\",Hd),aa([\"DDD\",\"DDDD\"],function(a,b,c)c._dayOfYear=t(a)}),","T(\"S\",0,0,function()return~~(this.millisecond()/100)}),T(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),T(0,[\"SSS\",3],0,\"millisecond\"),T(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),T(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),T(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),T(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),T(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),T(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),","Te.isPM=Ua,Te.meridiem=Va,Za(\"en\",ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),","Y(\"x\",Rd),Y(\"X\",Ud),aa(\"X\",function(a,b,c)c._d=new Date(1e3*parseFloat(a,10))}),aa(\"x\",function(a,b,c){c._d=new Date(t(a))}),"],"Dependencies":null},{"FileName":"node_modules\\moment\\moment.js","LineCount":4195,"CharCount":134815,"Comments":["//! moment.js","//! version : 2.14.1","//! authors : Tim Wood, Iskren Chernev, Moment.js contributors","//! license : MIT","//! momentjs.com","",";(function (global, factory) {","    // This is done to register the method called with moment()","    // without creating circular dependencies.","    function setHookCallback (callback) {","            // even if its not own property I'd still call it non-empty","            return false;","        // We need to deep clone this object.","        return {","    // Plugins that add properties should also add the key here (null value),","    // so we can properly clone ourselves.","    var momentProperties = utils_hooks__hooks.momentProperties = [];","    // Moment prototype object","    function Moment(config) {","        // Prevent infinite loop in case updateOffset creates new moment","        // objects.","        if (updateInProgress === false) {","            // -0 -\u003e 0","            return Math.ceil(number) || 0;","    // compare two arrays, return the number of differences","    function compareArrays(array1, array2, dontConvert) {","        // Lenient ordinal parsing accepts just a number in addition to","        // number + (possibly) stuff coming from _ordinalParseLenient.","        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);","                // make sure changes to properties don't modify parent config","                res[prop] = extend({}, res[prop]);","    // MOMENTS","","    function stringGet (units) {","    // token:    'M'","    // padded:   ['MM', 2]","    // ordinal:  'Mo'","    // callback: function () { this.month() + 1 }","    function addFormatToken (token, padded, ordinal, callback) {","    // format date using native date object","    function formatMoment(m, format) {","    var match1         = /\\d/;            //       0 - 9","    var match2         = /\\d\\d/;          //      00 - 99","    var match3         = /\\d{3}/;         //     000 - 999","    var match4         = /\\d{4}/;         //    0000 - 9999","    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999","    var match1to2      = /\\d\\d?/;         //       0 - 99","    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999","    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999","    var match1to3      = /\\d{1,3}/;       //       0 - 999","    var match1to4      = /\\d{1,4}/;       //       0 - 9999","    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999","","    var matchUnsigned  = /\\d+/;           //       0 - inf","    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf","","    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z","    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z","","    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123","","    // any word (or two) characters or numbers including two/three word month in arabic.","    // includes scottish gaelic two word and hyphenated months","    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;","    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","    function unescapeFormat(s) {","            // I know","            var i;","    // FORMATTING","","    addFormatToken('M', ['MM', 2], 'Mo', function () {","    // ALIASES","","    addUnitAlias('month', 'M');","    // PRIORITY","","    addUnitPriority('month', 8);","    // PARSING","","    addRegexToken('M',    match1to2);","        // if we didn't find a month name, mark the date as invalid.","        if (month != null) {","    // LOCALES","","    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;","            // this is not used","            this._monthsParse = [];","        // TODO: add sorting","        // Sorting makes sure if one month (or abbr) is a prefix of another","        // see sorting in computeMonthsParse","        for (i = 0; i \u003c 12; i++) {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, i]);","            // test the regex","            if (strict \u0026\u0026 format === 'MMMM' \u0026\u0026 this._longMonthsParse[i].test(monthName)) {","    // MOMENTS","","    function setMonth (mom, value) {","            // No op","            return mom;","                // TODO: Another silent failure?","                if (typeof value !== 'number') {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, i]);","        // Sorting makes sure if one month (or abbr) is a prefix of another it","        // will match the longer piece.","        shortPieces.sort(cmpLenRev);","    // FORMATTING","","    addFormatToken('Y', 0, 0, function () {","    // ALIASES","","    addUnitAlias('year', 'y');","    // PRIORITIES","","    addUnitPriority('year', 1);","    // PARSING","","    addRegexToken('Y',      matchSigned);","    // HELPERS","","    function daysInYear(year) {","    // HOOKS","","    utils_hooks__hooks.parseTwoDigitYear = function (input) {","    // MOMENTS","","    var getSetYear = makeGetSet('FullYear', true);","        //can't just apply() to create a date:","        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply","        var date = new Date(y, m, d, h, M, s, ms);","        //the date constructor remaps years 0-99 to 1900-1999","        if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getFullYear())) {","        //the Date.UTC function remaps years 0-99 to 1900-1999","        if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getUTCFullYear())) {","    // start-of-first-week - start-of-year","    function firstWeekOffset(year, dow, doy) {","        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)","            fwd = 7 + dow - doy,","            // first-week day local weekday -- which local weekday is fwd","            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;","    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday","    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {","    // FORMATTING","","    addFormatToken('w', ['ww', 2], 'wo', 'week');","    // ALIASES","","    addUnitAlias('week', 'w');","    // PRIORITIES","","    addUnitPriority('week', 5);","    // PARSING","","    addRegexToken('w',  match1to2);","    // HELPERS","","    // LOCALES","","    function localeWeek (mom) {","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    };","    // MOMENTS","","    function getSetWeek (input) {","    // FORMATTING","","    addFormatToken('d', 0, 'do', 'day');","    // ALIASES","","    addUnitAlias('day', 'd');","    // PRIORITY","    addUnitPriority('day', 11);","    // PARSING","","    addRegexToken('d',    match1to2);","        // if we didn't get a weekday name, mark the date as invalid","        if (weekday != null) {","    // HELPERS","","    function parseWeekday(input, locale) {","    // LOCALES","","    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');","            // make the regex if we don't have it already","","            mom = create_utc__createUTC([2000, 1]).day(i);","            // test the regex","            if (strict \u0026\u0026 format === 'dddd' \u0026\u0026 this._fullWeekdaysParse[i].test(weekdayName)) {","    // MOMENTS","","    function getSetDayOfWeek (input) {","        // behaves the same as moment#day except","        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)","        // as a setter, sunday should belong to the previous week.","","        if (input != null) {","            // make the regex if we don't have it already","            mom = create_utc__createUTC([2000, 1]).day(i);","        // Sorting makes sure if one weekday (or abbr) is a prefix of another it","        // will match the longer piece.","        minPieces.sort(cmpLenRev);","    // FORMATTING","","    function hFormat() {","    // ALIASES","","    addUnitAlias('hour', 'h');","    // PRIORITY","    addUnitPriority('hour', 13);","    // PARSING","","    function matchMeridiem (isStrict, locale) {","    // LOCALES","","    function localeIsPM (input) {","        // IE8 Quirks Mode \u0026 IE7 Standards Mode do not allow accessing strings like arrays","        // Using charAt should be more compatible.","        return ((input + '').toLowerCase().charAt(0) === 'p');","    // MOMENTS","","    // Setting the hour should keep the time, because the user explicitly","    // specified which hour he wants. So trying to maintain the same hour (in","    // a new timezone) makes sense. Adding/subtracting hours does not follow","    // this rule.","    var getSetHour = makeGetSet('Hours', true);","    // internal storage for locale config files","    var locales = {};","    // pick the locale from the array","    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each","    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root","    function chooseLocale(names) {","                    //the next array item is better than a shallower substring of this one","                    break;","        // TODO: Find a better way to register and load all the locales in Node","        if (!locales[name] \u0026\u0026 (typeof module !== 'undefined') \u0026\u0026","                // because defineLocale currently also sets the global locale, we","                // want to undo that for lazy loaded locales","                locale_locales__getSetGlobalLocale(oldLocale);","    // This function will load locale and then set the global locale.  If","    // no arguments are passed in, it will simply return the current global","    // locale key.","    function locale_locales__getSetGlobalLocale (key, values) {","                // moment.duration._locale = moment._locale = data;","                globalLocale = data;","                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');","                parentConfig = locales[name]._config;","                    // treat as if there is no base config","                    deprecateSimple('parentLocaleUndefined',","                            'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');","                }","            // backwards compat for now: also set the locale","            locale_locales__getSetGlobalLocale(name);","            // useful for testing","            delete locales[name];","            // MERGE","            if (locales[name] != null) {","            // backwards compat for now: also set the locale","            locale_locales__getSetGlobalLocale(name);","            // pass null for config to unupdate, useful for tests","            if (locales[name] != null) {","    // returns locale data","    function locale_locales__getLocale (key) {","            //short-circuit everything else","            locale = loadLocale(key);","    // iso 8601 regex","    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)","    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;","        // YYYYMM is NOT allowed by the standard","        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],","    // iso time formats and regexes","    var isoTimes = [","    // date from iso format","    function configFromISO(config) {","                        // match[2] should be 'T' or space","                        timeFormat = (match[2] || ' ') + isoTimes[i][0];","    // date from iso format or fallback","    function configFromString(config) {","        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',","        function (config) {","    // Pick the first defined of two or three arguments.","    function defaults(a, b, c) {","        // hooks is actually the exported moment object","        var nowValue = new Date(utils_hooks__hooks.now());","    // convert an array to a date.","    // the array should mirror the parameters below","    // note: all values past the year are optional and will default to the lowest possible value.","    // [year, month, day , hour, minute, second, millisecond]","    function configFromArray (config) {","        //compute day of the year from weeks and weekdays","        if (config._w \u0026\u0026 config._a[DATE] == null \u0026\u0026 config._a[MONTH] == null) {","        //if the day of the year is set, figure out what it is","        if (config._dayOfYear) {","        // Default to current date.","        // * if no year, month, day of month are given, default to today","        // * if day of month is given, default month and year","        // * if month is given, default only year","        // * if year is given, don't default anything","        for (i = 0; i \u003c 3 \u0026\u0026 config._a[i] == null; ++i) {","        // Zero out whatever was not defaulted, including time","        for (; i \u003c 7; i++) {","        // Check for 24:00:00.000","        if (config._a[HOUR] === 24 \u0026\u0026","        // Apply timezone offset from input. The actual utcOffset can be changed","        // with parseZone.","        if (config._tzm != null) {","            // TODO: We need to take the current isoWeekYear, but that depends on","            // how we interpret now (local, utc, fixed offset). So create","            // a now version of current config (take local/utc/offset flags, and","            // create now).","            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);","                // weekday -- low day numbers are considered next week","                weekday = w.d;","                // local weekday -- counting starts from begining of week","                weekday = w.e + dow;","                // default to begining of week","                weekday = dow;","    // constant that refers to the ISO standard","    utils_hooks__hooks.ISO_8601 = function () {};","    // date from string and format string","    function configFromStringAndFormat(config) {","        // TODO: Move this to another part of the creation flow to prevent circular deps","        if (config._f === utils_hooks__hooks.ISO_8601) {","        // This array is used to make a Date, either with `new Date` or `Date.UTC`","        var string = '' + config._i,","            // console.log('token', token, 'parsedInput', parsedInput,","            //         'regex', getParseRegexForToken(token, config));","            if (parsedInput) {","            // don't parse if it's not a known token","            if (formatTokenFunctions[token]) {","        // add remaining unparsed input length to the string","        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;","        // clear _12h flag if hour is \u003c= 12","        if (config._a[HOUR] \u003c= 12 \u0026\u0026","        // handle meridiem","        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);","            // nothing to do","            return hour;","            // Fallback","            isPm = locale.isPM(meridiem);","            // this is not supposed to happen","            return hour;","    // date from string and array of format strings","    function configFromStringAndArray(config) {","            // if there is any input that was not parsed add a penalty for that format","            currentScore += getParsingFlags(tempConfig).charsLeftOver;","            //or tokens","            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;","            // Adding is smart enough around DST","            res.add(1, 'd');","            // from milliseconds","            config._d = new Date(input);","        // object construction must be done this way.","        // https://github.com/moment/moment/issues/1423","        c._isAMomentObject = true;","        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',","        function () {","        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',","        function () {","    // Pick a moment m from moments so that m[fn](other) is true for all","    // other. This relies on the function fn to be transitive.","    //","    // moments should either be an array of moment objects or an array, whose","    // first element is an array of moment objects.","    function pickBy(fn, moments) {","    // TODO: Use [].sort instead?","    function min () {","        // representation for dateAddRemove","        this._milliseconds = +milliseconds +","            seconds * 1e3 + // 1000","            minutes * 6e4 + // 1000 * 60","            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978","        // Because of dateAddRemove treats 24 hours as different from a","        // day when working around DST, we need to store them separately","        this._days = +days +","        // It is impossible translate months into days without knowing","        // which months you are are talking about, so we have to store","        // it separately.","        this._months = +months +","    // FORMATTING","","    function offset (token, separator) {","    // PARSING","","    addRegexToken('Z',  matchShortOffset);","    // HELPERS","","    // timezone chunker","    // '+10:00' \u003e ['10',  '00']","    // '-1530'  \u003e ['-15', '30']","    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;","    // Return a moment from input, that is local/utc/zone equivalent to model.","    function cloneWithOffset(input, model) {","            // Use low-level api, because this fn is low-level api.","            res._d.setTime(res._d.valueOf() + diff);","        // On Firefox.24 Date#getTimezoneOffset returns a floating point.","        // https://github.com/moment/moment/pull/1871","        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;","    // HOOKS","","    // This function will be called whenever a moment is mutated.","    // It is intended to keep the offset in sync with the timezone.","    utils_hooks__hooks.updateOffset = function () {};","    // MOMENTS","","    // keepLocalTime = true means only change the timezone, without","    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--\u003e","    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset","    // +0200, so we adjust the time as needed, to be valid.","    //","    // Keeping the time actually adds/subtracts (one hour)","    // from the actual represented time. That is why we call updateOffset","    // a second time. In case it wants us to change the offset again","    // _changeInProgress == true case, then we have to adjust, because","    // there is no such time in the given timezone.","    function getSetOffset (input, keepLocalTime) {","    // ASP.NET json date format regex","    var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;","    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html","    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere","    // and further modified to allow for strings containing both week and day","    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;","            // matching against regexp is expensive, do it on demand","            match = null,","        } else if (duration == null) {// checks for null or undefined","            duration = {};","        // We'd normally use ~~inp for this, but unfortunately it also","        // converts floats to ints.","        // inp may be undefined, so careful calling replace on it.","        var res = inp \u0026\u0026 parseFloat(inp.replace(',', '.'));","        // apply sign while we're at it","        return (isNaN(res) ? 0 : res) * sign;","    // TODO: remove 'name' arg after deprecation is removed","    function createAdder(direction, name) {","            //invert the arguments, but complain about it","            if (period !== null \u0026\u0026 !isNaN(+period)) {","                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');","                tmp = val; val = period; period = tmp;","            // No op","            return;","        // We want to compare the start of today, vs this.","        // Getting start-of-today depends on whether we're local/utc/offset or not.","        var now = time || local__createLocal(),","            output = units === 'second' ? delta / 1e3 : // 1000","                units === 'minute' ? delta / 6e4 : // 1000 * 60","                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60","                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst","                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst","                delta;","        // difference in months","        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),","            // b is in (anchor - 1 month, anchor + 1 month)","            anchor = a.clone().add(wholeMonthDiff, 'months'),","            // linear across the month","            adjust = (b - anchor) / (anchor - anchor2);","            // linear across the month","            adjust = (b - anchor) / (anchor2 - anchor);","        //check for negative zero, return zero if negative zero","        return -(wholeMonthDiff + adjust) || 0;","                // native implementation is ~50x faster, use it when we can","                return this.toDate().toISOString();","    // If passed a locale key, it will set the locale for this","    // instance.  Otherwise, it will return the locale configuration","    // variables for this instance.","    function locale (key) {","        // the following switch intentionally omits break keywords","        // to utilize falling through the cases.","        switch (units) {","                /* falls through */","            case 'quarter':","                /* falls through */","            case 'week':","                /* falls through */","            case 'hour':","                /* falls through */","            case 'minute':","                /* falls through */","            case 'second':","        // weeks are a special case","        if (units === 'week') {","        // quarters are also special","        if (units === 'quarter') {","        // 'date' is an alias for 'day', so it should be considered as such.","        if (units === 'date') {","        // new Date(NaN).toJSON() === null","        return this.isValid() ? this.toISOString() : null;","    // FORMATTING","","    addFormatToken(0, ['gg', 2], 0, function () {","    // ALIASES","","    addUnitAlias('weekYear', 'gg');","    // PRIORITY","","    addUnitPriority('weekYear', 1);","    // PARSING","","    addRegexToken('G',      matchSigned);","    // MOMENTS","","    function getSetWeekYear (input) {","    // FORMATTING","","    addFormatToken('Q', 0, 'Qo', 'quarter');","    // ALIASES","","    addUnitAlias('quarter', 'Q');","    // PRIORITY","","    addUnitPriority('quarter', 7);","    // PARSING","","    addRegexToken('Q', match1);","    // MOMENTS","","    function getSetQuarter (input) {","    // FORMATTING","","    addFormatToken('D', ['DD', 2], 'Do', 'date');","    // ALIASES","","    addUnitAlias('date', 'D');","    // PRIOROITY","    addUnitPriority('date', 9);","    // PARSING","","    addRegexToken('D',  match1to2);","    // MOMENTS","","    var getSetDayOfMonth = makeGetSet('Date', true);","    // FORMATTING","","    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');","    // ALIASES","","    addUnitAlias('dayOfYear', 'DDD');","    // PRIORITY","    addUnitPriority('dayOfYear', 4);","    // PARSING","","    addRegexToken('DDD',  match1to3);","    // HELPERS","","    // MOMENTS","","    function getSetDayOfYear (input) {","    // FORMATTING","","    addFormatToken('m', ['mm', 2], 0, 'minute');","    // ALIASES","","    addUnitAlias('minute', 'm');","    // PRIORITY","","    addUnitPriority('minute', 14);","    // PARSING","","    addRegexToken('m',  match1to2);","    // MOMENTS","","    var getSetMinute = makeGetSet('Minutes', false);","    // FORMATTING","","    addFormatToken('s', ['ss', 2], 0, 'second');","    // ALIASES","","    addUnitAlias('second', 's');","    // PRIORITY","","    addUnitPriority('second', 15);","    // PARSING","","    addRegexToken('s',  match1to2);","    // MOMENTS","","    var getSetSecond = makeGetSet('Seconds', false);","    // FORMATTING","","    addFormatToken('S', 0, 0, function () {","    // ALIASES","","    addUnitAlias('millisecond', 'ms');","    // PRIORITY","","    addUnitPriority('millisecond', 16);","    // PARSING","","    addRegexToken('S',    match1to3, match1);","    // MOMENTS","","    var getSetMillisecond = makeGetSet('Milliseconds', false);","    // FORMATTING","","    addFormatToken('z',  0, 0, 'zoneAbbr');","    // MOMENTS","","    function getZoneAbbr () {","    // Year","    momentPrototype__proto.year       = getSetYear;","    // Week Year","    momentPrototype__proto.weekYear    = getSetWeekYear;","    // Quarter","    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;","    // Month","    momentPrototype__proto.month       = getSetMonth;","    // Week","    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;","    // Day","    momentPrototype__proto.date       = getSetDayOfMonth;","    // Hour","    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;","    // Minute","    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;","    // Second","    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;","    // Millisecond","    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;","    // Offset","    momentPrototype__proto.utcOffset            = getSetOffset;","    // Timezone","    momentPrototype__proto.zoneAbbr = getZoneAbbr;","    // Deprecations","    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);","    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);","    momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);","","    var momentPrototype = momentPrototype__proto;","    // Month","    prototype__proto.months            =        localeMonths;","    // Week","    prototype__proto.week = localeWeek;","    // Day of Week","    prototype__proto.weekdays       =        localeWeekdays;","    // Hours","    prototype__proto.isPM = localeIsPM;","    // ()","    // (5)","    // (fmt, 5)","    // (fmt)","    // (true)","    // (true, 5)","    // (true, fmt, 5)","    // (true, fmt)","    function listWeekdaysImpl (localeSorted, format, index, field) {","    // Side effect imports","    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);","    // supports only 2.0-style add(1, 's') or add(duration)","    function duration_add_subtract__add (input, value) {","    // supports only 2.0-style subtract(1, 's') or subtract(duration)","    function duration_add_subtract__subtract (input, value) {","        // if we have a mix of positive and negative values, bubble down first","        // check: https://github.com/moment/moment/issues/2166","        if (!((milliseconds \u003e= 0 \u0026\u0026 days \u003e= 0 \u0026\u0026 months \u003e= 0) ||","        // The following code bubbles up values, see the tests for","        // examples of what that means.","        data.milliseconds = milliseconds % 1000;","        // convert days to months","        monthsFromDays = absFloor(daysToMonths(days));","        // 12 months -\u003e 1 year","        years = absFloor(months / 12);","        // 400 years have 146097 days (taking into account leap year rules)","        // 400 years have 12 months === 4800","        return days * 4800 / 146097;","        // the reverse of daysToMonths","        return months * 146097 / 4800;","            // handle milliseconds separately because of floating point math errors (issue #1867)","            days = this._days + Math.round(monthsToDays(this._months));","                // Math.floor prevents floating point math errors here","                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;","    // TODO: Use this.as('ms')?","    function duration_as__valueOf () {","        s: 45,  // seconds to minute","        m: 45,  // minutes to hour","        h: 22,  // hours to day","        d: 26,  // days to month","        M: 11   // months to year","    };","    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {","    // This function allows you to set the rounding function for relative time strings","    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {","    // This function allows you to set a threshold for relative time strings","    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {","        // for ISO strings we do not use the normal bubbling rules:","        //  * milliseconds bubble up until they become hours","        //  * days do not bubble at all","        //  * months bubble up until they become years","        // This is because there is no context-free conversion between hours and days","        // (think of clock changes)","        // and also not between days and months (28-31 days per month)","        var seconds = iso_string__abs(this._milliseconds) / 1000;","        // 3600 seconds -\u003e 60 minutes -\u003e 1 hour","        minutes           = absFloor(seconds / 60);","        // 12 months -\u003e 1 year","        years  = absFloor(months / 12);","        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js","        var Y = years;","            // this is the same as C#'s (Noda) and python (isodate)...","            // but not other JS (goog.date)","            return 'P0D';","    // Deprecations","    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);","    // Side effect imports","","    // FORMATTING","","    addFormatToken('X', 0, 0, 'unix');","    // PARSING","","    addRegexToken('x', matchSigned);","    // Side effect imports","","","    utils_hooks__hooks.version = '2.14.1';"],"Functions":[";(function (global, factory) ","    typeof define === 'function' \u0026\u0026 define.amd ? define(factory) :","}(this, function ()  'use strict';","    function utils_hooks__hooks () ","    function setHookCallback (callback) ","    function isArray(input) ","    function isObject(input) ","    function isObjectEmpty(obj) ","    function isDate(input) ","    function map(arr, fn) ","    function hasOwnProp(a, b) ","    function extend(a, b) ","    function create_utc__createUTC (input, format, locale, strict) ","    function defaultParsingFlags() ","    function getParsingFlags(m) ","        some = function (fun) ","    function valid__isValid(m) ","            var parsedParts = some.call(flags.parsedDateParts, function (i) ","    function valid__createInvalid (flags) ","    function isUndefined(input) ","    function copyConfig(to, from) ","    function Moment(config) ","    function isMoment (obj) ","    function absFloor (number) ","    function toInt(argumentForCoercion) ","    function compareArrays(array1, array2, dontConvert) ","    function warn(msg) ","    function deprecate(msg, fn) ","        return extend(function () ","    function deprecateSimple(name, msg) ","    function isFunction(input) ","    function locale_set__set (config) ","    function mergeConfigs(parentConfig, childConfig) ","    function Locale(config) ","        keys = function (obj) ","    function locale_calendar__calendar (key, mom, now) ","    function longDateFormat (key) ","        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) ","    function invalidDate () ","    function ordinal (number) ","    function relative__relativeTime (number, withoutSuffix, string, isFuture) ","    function pastFuture (diff, output) ","    function addUnitAlias (unit, shorthand) ","    function normalizeUnits(units) ","    function normalizeObjectUnits(inputObject) ","    function addUnitPriority(unit, priority) ","    function getPrioritizedUnits(unitsObj) ","        units.sort(function (a, b) ","    function makeGetSet (unit, keepTime) ","        return function (value) ","    function get_set__get (mom, unit) ","    function get_set__set (mom, unit, value) ","    function stringGet (units) ","    function stringSet (units, value) ","    function zeroFill(number, targetLength, forceSign) ","    // callback: function ()  this.month() + 1 }","    function addFormatToken (token, padded, ordinal, callback) ","            func = function () ","            formatTokenFunctions[padded[0]] = function () ","            formatTokenFunctions[ordinal] = function () ","    function removeFormattingTokens(input) ","    function makeFormatFunction(format) ","        return function (mom) ","    function formatMoment(m, format) ","    function expandFormat(format, locale) ","        function replaceLongDateFormatTokens(input) ","    function addRegexToken (token, regex, strictRegex) ","        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) ","    function getParseRegexForToken (token, config) ","    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","    function unescapeFormat(s) ","        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) ","    function regexEscape(s) ","    function addParseToken (token, callback) ","            func = function (input, array) ","    function addWeekParseToken (token, callback) ","        addParseToken(token, function (input, array, config, token) ","    function addTimeToArrayFromToken(token, input, config) ","        indexOf = function (o) ","    function daysInMonth(year, month) ","    addFormatToken('M', ['MM', 2], 'Mo', function () ","    addFormatToken('MMM', 0, 0, function (format) ","    addFormatToken('MMMM', 0, 0, function (format) ","    addRegexToken('MMM',  function (isStrict, locale) ","    addRegexToken('MMMM', function (isStrict, locale) ","    addParseToken(['M', 'MM'], function (input, array) ","    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) ","    function localeMonths (m, format) ","    function localeMonthsShort (m, format) ","    function units_month__handleStrictParse(monthName, format, strict) ","    function localeMonthsParse (monthName, format, strict) ","    function setMonth (mom, value) ","    function getSetMonth (value) ","    function getDaysInMonth () ","    function monthsShortRegex (isStrict) ","    function monthsRegex (isStrict) ","    function computeMonthsParse () ","        function cmpLenRev(a, b) ","    addFormatToken('Y', 0, 0, function () ","    addFormatToken(0, ['YY', 2], 0, function () ","    addParseToken('YYYY', function (input, array) ","    addParseToken('YY', function (input, array) ","    addParseToken('Y', function (input, array) ","    function daysInYear(year) ","    function isLeapYear(year) ","    utils_hooks__hooks.parseTwoDigitYear = function (input) ","    function getIsLeapYear () ","    function createDate (y, m, d, h, M, s, ms) ","    function createUTCDate (y) ","        //the Date.UTC function remaps years 0-99 to 1900-1999","    function firstWeekOffset(year, dow, doy) ","    function dayOfYearFromWeeks(year, week, weekday, dow, doy) ","    function weekOfYear(mom, dow, doy) ","    function weeksInYear(year, dow, doy) ","    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) ","    function localeWeek (mom) ","    function localeFirstDayOfWeek () ","    function localeFirstDayOfYear () ","    function getSetWeek (input) ","    function getSetISOWeek (input) ","    addFormatToken('dd', 0, 0, function (format) ","    addFormatToken('ddd', 0, 0, function (format) ","    addFormatToken('dddd', 0, 0, function (format) ","    addRegexToken('dd',   function (isStrict, locale) ","    addRegexToken('ddd',   function (isStrict, locale) ","    addRegexToken('dddd',   function (isStrict, locale) ","    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) ","    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) ","    function parseWeekday(input, locale) ","    function parseIsoWeekday(input, locale) ","    function localeWeekdays (m, format) ","    function localeWeekdaysShort (m) ","    function localeWeekdaysMin (m) ","    function day_of_week__handleStrictParse(weekdayName, format, strict) ","    function localeWeekdaysParse (weekdayName, format, strict) ","    function getSetDayOfWeek (input) ","    function getSetLocaleDayOfWeek (input) ","    function getSetISODayOfWeek (input) ","    function weekdaysRegex (isStrict) ","    function weekdaysShortRegex (isStrict) ","    function weekdaysMinRegex (isStrict) ","    function computeWeekdaysParse () ","        function cmpLenRev(a, b) ","    function hFormat() ","    function kFormat() ","    addFormatToken('hmm', 0, 0, function () ","    addFormatToken('hmmss', 0, 0, function () ","    addFormatToken('Hmm', 0, 0, function () ","    addFormatToken('Hmmss', 0, 0, function () ","    function meridiem (token, lowercase) ","        addFormatToken(token, 0, 0, function () ","    function matchMeridiem (isStrict, locale) ","    addParseToken(['a', 'A'], function (input, array, config) ","    addParseToken(['h', 'hh'], function (input, array, config) ","    addParseToken('hmm', function (input, array, config) ","    addParseToken('hmmss', function (input, array, config) ","    addParseToken('Hmm', function (input, array, config) ","    addParseToken('Hmmss', function (input, array, config) ","    function localeIsPM (input) ","    function localeMeridiem (hours, minutes, isLower) ","    function normalizeLocale(key) ","    function chooseLocale(names) ","    function loadLocale(name) ","    // This function will load locale and then set the global locale.  If","    function locale_locales__getSetGlobalLocale (key, values) ","    function defineLocale (name, config) ","    function updateLocale(name, config) ","    function locale_locales__getLocale (key) ","    function locale_locales__listLocales() ","    function checkOverflow (m) ","    function configFromISO(config) ","    function configFromString(config) ","        function (config) ","    function defaults(a, b, c) ","    function currentDateArray(config) ","    function configFromArray (config) ","    function dayOfYearFromWeekInfo(config) ","    utils_hooks__hooks.ISO_8601 = function () };","    function configFromStringAndFormat(config) ","    function meridiemFixWrap (locale, hour, meridiem) ","    function configFromStringAndArray(config) ","    function configFromObject(config) ","        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) ","    function createFromConfig (config) ","    function prepareConfig (config) ","    function configFromInput(config) ","            config._a = map(input.slice(0), function (obj) ","    function createLocalOrUTC (input, format, locale, strict, isUTC) ","    function local__createLocal (input, format, locale, strict) ","        function () ","        function () ","    // other. This relies on the function fn to be transitive.","    function pickBy(fn, moments) ","    function min () ","    function max () ","    var now = function () ","    function Duration (duration) ","    function isDuration (obj) ","    function offset (token, separator) ","        addFormatToken(token, 0, 0, function () ","    addParseToken(['Z', 'ZZ'], function (input, array, config) ","    function offsetFromString(matcher, string) ","    function cloneWithOffset(input, model) ","    function getDateOffset (m) ","    // This function will be called whenever a moment is mutated.","    utils_hooks__hooks.updateOffset = function () };","    function getSetOffset (input, keepLocalTime) ","    function getSetZone (input, keepLocalTime) ","    function setOffsetToUTC (keepLocalTime) ","    function setOffsetToLocal (keepLocalTime) ","    function setOffsetToParsedOffset () ","    function hasAlignedHourOffset (input) ","    function isDaylightSavingTime () ","    function isDaylightSavingTimeShifted () ","    function isLocal () ","    function isUtcOffset () ","    function isUtc () ","    function create__createDuration (input, key) ","    function parseIso (inp, sign) ","    function positiveMomentsDifference(base, other) ","    function momentsDifference(base, other) ","    function absRound (number) ","    function createAdder(direction, name) ","        return function (val, period) ","    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) ","    function getCalendarFormat(myMoment, now) ","    function moment_calendar__calendar (time, formats) ","    function clone () ","    function isAfter (input, units) ","    function isBefore (input, units) ","    function isBetween (from, to, units, inclusivity) ","    function isSame (input, units) ","    function isSameOrAfter (input, units) ","    function isSameOrBefore (input, units) ","    function diff (input, units, asFloat) ","    function monthDiff (a, b) ","    function toString () ","    function moment_format__toISOString () ","    function format (inputString) ","    function from (time, withoutSuffix) ","    function fromNow (withoutSuffix) ","    function to (time, withoutSuffix) ","    function toNow (withoutSuffix) ","    function locale (key) ","        function (key) ","    function localeData () ","    function startOf (units) ","    function endOf (units) ","    function to_type__valueOf () ","    function unix () ","    function toDate () ","    function toArray () ","    function toObject () ","    function toJSON () ","    function moment_valid__isValid () ","    function parsingFlags () ","    function invalidAt () ","    function creationData() ","    addFormatToken(0, ['gg', 2], 0, function () ","    addFormatToken(0, ['GG', 2], 0, function () ","    function addWeekYearFormatToken (token, getter) ","    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) ","    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) ","    function getSetWeekYear (input) ","    function getSetISOWeekYear (input) ","    function getISOWeeksInYear () ","    function getWeeksInYear () ","    function getSetWeekYearHelper(input, week, weekday, dow, doy) ","    function setWeekAll(weekYear, week, weekday, dow, doy) ","    addParseToken('Q', function (input, array) ","    function getSetQuarter (input) ","    addRegexToken('Do', function (isStrict, locale) ","    addParseToken('Do', function (input, array) ","    addParseToken(['DDD', 'DDDD'], function (input, array, config) ","    function getSetDayOfYear (input) ","    addFormatToken('S', 0, 0, function () ","    addFormatToken(0, ['SS', 2], 0, function () ","    addFormatToken(0, ['SSSS', 4], 0, function () ","    addFormatToken(0, ['SSSSS', 5], 0, function () ","    addFormatToken(0, ['SSSSSS', 6], 0, function () ","    addFormatToken(0, ['SSSSSSS', 7], 0, function () ","    addFormatToken(0, ['SSSSSSSS', 8], 0, function () ","    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () ","    function parseMs(input, array) ","    function getZoneAbbr () ","    function getZoneName () ","    function moment__createUnix (input) ","    function moment__createInZone () ","    function preParsePostFormat (string) ","    function lists__get (format, index, field, setter) ","    function listMonthsImpl (format, index, field) ","    function listWeekdaysImpl (localeSorted, format, index, field) ","    function lists__listMonths (format, index) ","    function lists__listMonthsShort (format, index) ","    function lists__listWeekdays (localeSorted, format, index) ","    function lists__listWeekdaysShort (localeSorted, format, index) ","    function lists__listWeekdaysMin (localeSorted, format, index) ","        ordinal : function (number) ","    function duration_abs__abs () ","    function duration_add_subtract__addSubtract (duration, input, value, direction) ","    function duration_add_subtract__add (input, value) ","    function duration_add_subtract__subtract (input, value) ","    function absCeil (number) ","    function bubble () ","    function daysToMonths (days) ","    function monthsToDays (months) ","    function as (units) ","    function duration_as__valueOf () ","    function makeAs (alias) ","        return function () ","    function duration_get__get (units) ","    function makeGetter(name) ","        return function () ","    function weeks () ","    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) ","    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) ","    // This function allows you to set the rounding function for relative time strings","    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) ","        if (typeof(roundingFunction) === 'function') ","    // This function allows you to set a threshold for relative time strings","    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) ","    function humanize (withSuffix) ","    function iso_string__toISOString() ","    addParseToken('X', function (input, array, config) ","    addParseToken('x', function (input, array, config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\package.js","LineCount":12,"CharCount":262,"Comments":["            // only include moment/moment","            return mid != \"moment/moment\";"],"Functions":["        ignore: function(filename, mid)","        amd: function(filename, mid)"],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\check-overflow.js","LineCount":35,"CharCount":1272,"Comments":[],"Functions":["export default function checkOverflow (m) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\date-from-array.js","LineCount":22,"CharCount":692,"Comments":["    //can't just apply() to create a date:","    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply","    var date = new Date(y, m, d, h, M, s, ms);","    //the date constructor remaps years 0-99 to 1900-1999","    if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getFullYear())) {","    //the Date.UTC function remaps years 0-99 to 1900-1999","    if (y \u003c 100 \u0026\u0026 y \u003e= 0 \u0026\u0026 isFinite(date.getUTCFullYear())) {"],"Functions":["export function createDate (y, m, d, h, M, s, ms) ","export function createUTCDate (y) ","    //the Date.UTC function remaps years 0-99 to 1900-1999"],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-anything.js","LineCount":109,"CharCount":3081,"Comments":["        // Adding is smart enough around DST","        res.add(1, 'd');","        // from milliseconds","        config._d = new Date(input);","    // object construction must be done this way.","    // https://github.com/moment/moment/issues/1423","    c._isAMomentObject = true;"],"Functions":["function createFromConfig (config) ","export function prepareConfig (config) ","function configFromInput(config) ","        config._a = map(input.slice(0), function (obj) ","export function createLocalOrUTC (input, format, locale, strict, isUTC) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-array.js","LineCount":137,"CharCount":4740,"Comments":["    // hooks is actually the exported moment object","    var nowValue = new Date(hooks.now());","// convert an array to a date.","// the array should mirror the parameters below","// note: all values past the year are optional and will default to the lowest possible value.","// [year, month, day , hour, minute, second, millisecond]","export function configFromArray (config) {","    //compute day of the year from weeks and weekdays","    if (config._w \u0026\u0026 config._a[DATE] == null \u0026\u0026 config._a[MONTH] == null) {","    //if the day of the year is set, figure out what it is","    if (config._dayOfYear) {","    // Default to current date.","    // * if no year, month, day of month are given, default to today","    // * if day of month is given, default month and year","    // * if month is given, default only year","    // * if year is given, don't default anything","    for (i = 0; i \u003c 3 \u0026\u0026 config._a[i] == null; ++i) {","    // Zero out whatever was not defaulted, including time","    for (; i \u003c 7; i++) {","    // Check for 24:00:00.000","    if (config._a[HOUR] === 24 \u0026\u0026","    // Apply timezone offset from input. The actual utcOffset can be changed","    // with parseZone.","    if (config._tzm != null) {","        // TODO: We need to take the current isoWeekYear, but that depends on","        // how we interpret now (local, utc, fixed offset). So create","        // a now version of current config (take local/utc/offset flags, and","        // create now).","        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);","            // weekday -- low day numbers are considered next week","            weekday = w.d;","            // local weekday -- counting starts from begining of week","            weekday = w.e + dow;","            // default to begining of week","            weekday = dow;"],"Functions":["function currentDateArray(config) ","export function configFromArray (config) ","function dayOfYearFromWeekInfo(config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-object.js","LineCount":17,"CharCount":451,"Comments":[],"Functions":["export function configFromObject(config) ","    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-string-and-array.js","LineCount":51,"CharCount":1418,"Comments":["// date from string and array of format strings","export function configFromStringAndArray(config) {","        // if there is any input that was not parsed add a penalty for that format","        currentScore += getParsingFlags(tempConfig).charsLeftOver;","        //or tokens","        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;"],"Functions":["export function configFromStringAndArray(config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-string-and-format.js","LineCount":108,"CharCount":3573,"Comments":["// constant that refers to the ISO standard","hooks.ISO_8601 = function () {};","// date from string and format string","export function configFromStringAndFormat(config) {","    // TODO: Move this to another part of the creation flow to prevent circular deps","    if (config._f === hooks.ISO_8601) {","    // This array is used to make a Date, either with `new Date` or `Date.UTC`","    var string = '' + config._i,","        // console.log('token', token, 'parsedInput', parsedInput,","        //         'regex', getParseRegexForToken(token, config));","        if (parsedInput) {","        // don't parse if it's not a known token","        if (formatTokenFunctions[token]) {","    // add remaining unparsed input length to the string","    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;","    // clear _12h flag if hour is \u003c= 12","    if (config._a[HOUR] \u003c= 12 \u0026\u0026","    // handle meridiem","    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);","        // nothing to do","        return hour;","        // Fallback","        isPm = locale.isPM(meridiem);","        // this is not supposed to happen","        return hour;"],"Functions":["hooks.ISO_8601 = function () };","export function configFromStringAndFormat(config) ","function meridiemFixWrap (locale, hour, meridiem) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\from-string.js","LineCount":121,"CharCount":3803,"Comments":["// iso 8601 regex","// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)","var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;","    // YYYYMM is NOT allowed by the standard","    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],","// iso time formats and regexes","var isoTimes = [","// date from iso format","export function configFromISO(config) {","                    // match[2] should be 'T' or space","                    timeFormat = (match[2] || ' ') + isoTimes[i][0];","// date from iso format or fallback","export function configFromString(config) {","    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',","    function (config) {"],"Functions":["export function configFromISO(config) ","export function configFromString(config) ","    function (config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\local.js","LineCount":6,"CharCount":179,"Comments":[],"Functions":["export function createLocal (input, format, locale, strict) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\parsing-flags.js","LineCount":25,"CharCount":586,"Comments":["    // We need to deep clone this object.","    return {"],"Functions":["function defaultParsingFlags() ","export default function getParsingFlags(m) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\utc.js","LineCount":6,"CharCount":182,"Comments":[],"Functions":["export function createUTC (input, format, locale, strict) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\create\\valid.js","LineCount":43,"CharCount":1164,"Comments":[],"Functions":["export function isValid(m) ","        var parsedParts = some.call(flags.parsedDateParts, function (i) ","export function createInvalid (flags) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\abs.js","LineCount":19,"CharCount":527,"Comments":[],"Functions":["export function abs () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\add-subtract.js","LineCount":22,"CharCount":640,"Comments":["// supports only 2.0-style add(1, 's') or add(duration)","export function add (input, value) {","// supports only 2.0-style subtract(1, 's') or subtract(duration)","export function subtract (input, value) {"],"Functions":["function addSubtract (duration, input, value, direction) ","export function add (input, value) ","export function subtract (input, value) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\as.js","LineCount":56,"CharCount":1867,"Comments":["        // handle milliseconds separately because of floating point math errors (issue #1867)","        days = this._days + Math.round(monthsToDays(this._months));","            // Math.floor prevents floating point math errors here","            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;","// TODO: Use this.as('ms')?","export function valueOf () {"],"Functions":["export function as (units) ","export function valueOf () ","function makeAs (alias) ","    return function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\bubble.js","LineCount":62,"CharCount":1777,"Comments":["    // if we have a mix of positive and negative values, bubble down first","    // check: https://github.com/moment/moment/issues/2166","    if (!((milliseconds \u003e= 0 \u0026\u0026 days \u003e= 0 \u0026\u0026 months \u003e= 0) ||","    // The following code bubbles up values, see the tests for","    // examples of what that means.","    data.milliseconds = milliseconds % 1000;","    // convert days to months","    monthsFromDays = absFloor(daysToMonths(days));","    // 12 months -\u003e 1 year","    years = absFloor(months / 12);","    // 400 years have 146097 days (taking into account leap year rules)","    // 400 years have 12 months === 4800","    return days * 4800 / 146097;","    // the reverse of daysToMonths","    return months * 146097 / 4800;"],"Functions":["export function bubble () ","export function daysToMonths (days) ","export function monthsToDays (months) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\constructor.js","LineCount":42,"CharCount":1443,"Comments":["    // representation for dateAddRemove","    this._milliseconds = +milliseconds +","        seconds * 1e3 + // 1000","        minutes * 6e4 + // 1000 * 60","        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978","    // Because of dateAddRemove treats 24 hours as different from a","    // day when working around DST, we need to store them separately","    this._days = +days +","    // It is impossible translate months into days without knowing","    // which months you are are talking about, so we have to store","    // it separately.","    this._months = +months +"],"Functions":["export function Duration (duration) ","export function isDuration (obj) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\create.js","LineCount":119,"CharCount":3830,"Comments":["// ASP.NET json date format regex","var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;","// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html","// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere","// and further modified to allow for strings containing both week and day","var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;","        // matching against regexp is expensive, do it on demand","        match = null,","    } else if (duration == null) {// checks for null or undefined","        duration = {};","    // We'd normally use ~~inp for this, but unfortunately it also","    // converts floats to ints.","    // inp may be undefined, so careful calling replace on it.","    var res = inp \u0026\u0026 parseFloat(inp.replace(',', '.'));","    // apply sign while we're at it","    return (isNaN(res) ? 0 : res) * sign;"],"Functions":["export function createDuration (input, key) ","function parseIso (inp, sign) ","function positiveMomentsDifference(base, other) ","function momentsDifference(base, other) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\duration.js","LineCount":17,"CharCount":324,"Comments":["// Side effect imports","import './prototype';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\get.js","LineCount":26,"CharCount":674,"Comments":[],"Functions":["export function get (units) ","function makeGetter(name) ","    return function () ","export function weeks () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\humanize.js","LineCount":77,"CharCount":2462,"Comments":["    s: 45,  // seconds to minute","    m: 45,  // minutes to hour","    h: 22,  // hours to day","    d: 26,  // days to month","    M: 11   // months to year","};","// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {","// This function allows you to set the rounding function for relative time strings","export function getSetRelativeTimeRounding (roundingFunction) {","// This function allows you to set a threshold for relative time strings","export function getSetRelativeTimeThreshold (threshold, limit) {"],"Functions":["// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize","function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) ","function relativeTime (posNegDuration, withoutSuffix, locale) ","// This function allows you to set the rounding function for relative time strings","export function getSetRelativeTimeRounding (roundingFunction) ","    if (typeof(roundingFunction) === 'function') ","// This function allows you to set a threshold for relative time strings","export function getSetRelativeTimeThreshold (threshold, limit) ","export function humanize (withSuffix) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\iso-string.js","LineCount":53,"CharCount":1528,"Comments":["    // for ISO strings we do not use the normal bubbling rules:","    //  * milliseconds bubble up until they become hours","    //  * days do not bubble at all","    //  * months bubble up until they become years","    // This is because there is no context-free conversion between hours and days","    // (think of clock changes)","    // and also not between days and months (28-31 days per month)","    var seconds = abs(this._milliseconds) / 1000;","    // 3600 seconds -\u003e 60 minutes -\u003e 1 hour","    minutes           = absFloor(seconds / 60);","    // 12 months -\u003e 1 year","    years  = absFloor(months / 12);","    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js","    var Y = years;","        // this is the same as C#'s (Noda) and python (isodate)...","        // but not other JS (goog.date)","        return 'P0D';"],"Functions":["export function toISOString() "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\duration\\prototype.js","LineCount":49,"CharCount":1648,"Comments":["// Deprecations","import { deprecate } from '../utils/deprecate';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\format\\format.js","LineCount":92,"CharCount":2573,"Comments":["// token:    'M'","// padded:   ['MM', 2]","// ordinal:  'Mo'","// callback: function () { this.month() + 1 }","export function addFormatToken (token, padded, ordinal, callback) {","// format date using native date object","export function formatMoment(m, format) {"],"Functions":["// callback: function ()  this.month() + 1 }","export function addFormatToken (token, padded, ordinal, callback) ","        func = function () ","        formatTokenFunctions[padded[0]] = function () ","        formatTokenFunctions[ordinal] = function () ","function removeFormattingTokens(input) ","function makeFormatFunction(format) ","    return function (mom) ","export function formatMoment(m, format) ","export function expandFormat(format, locale) ","    function replaceLongDateFormatTokens(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\base-config.js","LineCount":45,"CharCount":1121,"Comments":["// months","import {","// week","import { defaultLocaleWeek } from '../units/week';","// weekdays","import {","// meridiem","import { defaultLocaleMeridiemParse } from '../units/hour';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\calendar.js","LineCount":16,"CharCount":433,"Comments":[],"Functions":["import isFunction from '../utils/is-function';","export function calendar (key, mom, now) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\constructor.js","LineCount":6,"CharCount":88,"Comments":[],"Functions":["export function Locale(config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\en.js","LineCount":16,"CharCount":429,"Comments":[],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\formats.js","LineCount":24,"CharCount":566,"Comments":[],"Functions":["export function longDateFormat (key) ","    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\invalid.js","LineCount":6,"CharCount":109,"Comments":[],"Functions":["export function invalidDate () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\lists.js","LineCount":93,"CharCount":2091,"Comments":["// ()","// (5)","// (fmt, 5)","// (fmt)","// (true)","// (true, 5)","// (true, fmt, 5)","// (true, fmt)","function listWeekdaysImpl (localeSorted, format, index, field) {"],"Functions":["function get (format, index, field, setter) ","function listMonthsImpl (format, index, field) ","function listWeekdaysImpl (localeSorted, format, index, field) ","export function listMonths (format, index) ","export function listMonthsShort (format, index) ","export function listWeekdays (localeSorted, format, index) ","export function listWeekdaysShort (localeSorted, format, index) ","export function listWeekdaysMin (localeSorted, format, index) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\locale.js","LineCount":40,"CharCount":767,"Comments":["// Side effect imports","import './prototype';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\locales.js","LineCount":172,"CharCount":5223,"Comments":["// internal storage for locale config files","var locales = {};","// pick the locale from the array","// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each","// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root","function chooseLocale(names) {","                //the next array item is better than a shallower substring of this one","                break;","    // TODO: Find a better way to register and load all the locales in Node","    if (!locales[name] \u0026\u0026 (typeof module !== 'undefined') \u0026\u0026","            // because defineLocale currently also sets the global locale, we","            // want to undo that for lazy loaded locales","            getSetGlobalLocale(oldLocale);","// This function will load locale and then set the global locale.  If","// no arguments are passed in, it will simply return the current global","// locale key.","export function getSetGlobalLocale (key, values) {","            // moment.duration._locale = moment._locale = data;","            globalLocale = data;","                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');","            parentConfig = locales[name]._config;","                // treat as if there is no base config","                deprecateSimple('parentLocaleUndefined',","                        'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');","            }","        // backwards compat for now: also set the locale","        getSetGlobalLocale(name);","        // useful for testing","        delete locales[name];","        // MERGE","        if (locales[name] != null) {","        // backwards compat for now: also set the locale","        getSetGlobalLocale(name);","        // pass null for config to unupdate, useful for tests","        if (locales[name] != null) {","// returns locale data","export function getLocale (key) {","        //short-circuit everything else","        locale = loadLocale(key);"],"Functions":["function normalizeLocale(key) ","function chooseLocale(names) ","function loadLocale(name) ","// This function will load locale and then set the global locale.  If","export function getSetGlobalLocale (key, values) ","export function defineLocale (name, config) ","export function updateLocale(name, config) ","export function getLocale (key) ","export function listLocales() "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\ordinal.js","LineCount":8,"CharCount":158,"Comments":[],"Functions":["export function ordinal (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\pre-post-format.js","LineCount":4,"CharCount":64,"Comments":[],"Functions":["export function preParsePostFormat (string) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\prototype.js","LineCount":70,"CharCount":1933,"Comments":["// Month","import {","// Week","import { localeWeek, localeFirstDayOfYear, localeFirstDayOfWeek } from '../units/week';","// Day of Week","import {","// Hours","import { localeIsPM, localeMeridiem } from '../units/hour';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\relative.js","LineCount":30,"CharCount":778,"Comments":[],"Functions":["import isFunction from '../utils/is-function';","export function relativeTime (number, withoutSuffix, string, isFuture) ","export function pastFuture (diff, output) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\locale\\set.js","LineCount":47,"CharCount":1536,"Comments":["    // Lenient ordinal parsing accepts just a number in addition to","    // number + (possibly) stuff coming from _ordinalParseLenient.","    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);","            // make sure changes to properties don't modify parent config","            res[prop] = extend({}, res[prop]);"],"Functions":["import isFunction from '../utils/is-function';","export function set (config) ","export function mergeConfigs(parentConfig, childConfig) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\add-subtract.js","LineCount":56,"CharCount":1724,"Comments":["// TODO: remove 'name' arg after deprecation is removed","function createAdder(direction, name) {","        //invert the arguments, but complain about it","        if (period !== null \u0026\u0026 !isNaN(+period)) {","            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');","            tmp = val; val = period; period = tmp;","        // No op","        return;"],"Functions":["function createAdder(direction, name) ","    return function (val, period) ","export function addSubtract (mom, duration, isAdding, updateOffset) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\calendar.js","LineCount":27,"CharCount":1034,"Comments":["    // We want to compare the start of today, vs this.","    // Getting start-of-today depends on whether we're local/utc/offset or not.","    var now = time || createLocal(),"],"Functions":["import isFunction from '../utils/is-function';","export function getCalendarFormat(myMoment, now) ","export function calendar (time, formats) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\clone.js","LineCount":6,"CharCount":94,"Comments":[],"Functions":["export function clone () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\compare.js","LineCount":60,"CharCount":2076,"Comments":[],"Functions":["export function isAfter (input, units) ","export function isBefore (input, units) ","export function isBetween (from, to, units, inclusivity) ","export function isSame (input, units) ","export function isSameOrAfter (input, units) ","export function isSameOrBefore (input, units) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\constructor.js","LineCount":75,"CharCount":1917,"Comments":["// Plugins that add properties should also add the key here (null value),","// so we can properly clone ourselves.","var momentProperties = hooks.momentProperties = [];","// Moment prototype object","export function Moment(config) {","    // Prevent infinite loop in case updateOffset creates new moment","    // objects.","    if (updateInProgress === false) {"],"Functions":["export function copyConfig(to, from) ","export function Moment(config) ","export function isMoment (obj) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\creation-data.js","LineCount":10,"CharCount":182,"Comments":[],"Functions":["export function creationData() "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\diff.js","LineCount":63,"CharCount":1926,"Comments":["        output = units === 'second' ? delta / 1e3 : // 1000","            units === 'minute' ? delta / 6e4 : // 1000 * 60","            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60","            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst","            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst","            delta;","    // difference in months","    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),","        // b is in (anchor - 1 month, anchor + 1 month)","        anchor = a.clone().add(wholeMonthDiff, 'months'),","        // linear across the month","        adjust = (b - anchor) / (anchor - anchor2);","        // linear across the month","        adjust = (b - anchor) / (anchor2 - anchor);","    //check for negative zero, return zero if negative zero","    return -(wholeMonthDiff + adjust) || 0;"],"Functions":["export function diff (input, units, asFloat) ","function monthDiff (a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\format.js","LineCount":33,"CharCount":1036,"Comments":["            // native implementation is ~50x faster, use it when we can","            return this.toDate().toISOString();"],"Functions":["import isFunction from '../utils/is-function';","export function toString () ","export function toISOString () ","export function format (inputString) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\from.js","LineCount":18,"CharCount":569,"Comments":[],"Functions":["export function from (time, withoutSuffix) ","export function fromNow (withoutSuffix) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\get-set.js","LineCount":56,"CharCount":1374,"Comments":["// MOMENTS","","export function stringGet (units) {"],"Functions":["import isFunction from '../utils/is-function';","export function makeGetSet (unit, keepTime) ","    return function (value) ","export function get (mom, unit) ","export function set (mom, unit, value) ","export function stringGet (units) ","export function stringSet (units, value) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\locale.js","LineCount":35,"CharCount":914,"Comments":["// If passed a locale key, it will set the locale for this","// instance.  Otherwise, it will return the locale configuration","// variables for this instance.","export function locale (key) {"],"Functions":["export function locale (key) ","    function (key) ","export function localeData () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\min-max.js","LineCount":64,"CharCount":1789,"Comments":["    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',","    function () {","    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',","    function () {","// Pick a moment m from moments so that m[fn](other) is true for all","// other. This relies on the function fn to be transitive.","//","// moments should either be an array of moment objects or an array, whose","// first element is an array of moment objects.","function pickBy(fn, moments) {","// TODO: Use [].sort instead?","export function min () {"],"Functions":["    function () ","    function () ","// other. This relies on the function fn to be transitive.","function pickBy(fn, moments) ","export function min () ","export function max () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\moment.js","LineCount":29,"CharCount":582,"Comments":[],"Functions":["function createUnix (input) ","function createInZone () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\now.js","LineCount":4,"CharCount":81,"Comments":[],"Functions":["export var now = function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\prototype.js","LineCount":150,"CharCount":5277,"Comments":["// Year","import { getSetYear, getIsLeapYear } from '../units/year';","// Week Year","import { getSetWeekYear, getSetISOWeekYear, getWeeksInYear, getISOWeeksInYear } from '../units/week-year';","// Quarter","import { getSetQuarter } from '../units/quarter';","// Month","import { getSetMonth, getDaysInMonth } from '../units/month';","// Week","import { getSetWeek, getSetISOWeek } from '../units/week';","// Day","import { getSetDayOfMonth } from '../units/day-of-month';","// Hour","import { getSetHour } from '../units/hour';","// Minute","import { getSetMinute } from '../units/minute';","// Second","import { getSetSecond } from '../units/second';","// Millisecond","import { getSetMillisecond } from '../units/millisecond';","// Offset","import {","// Timezone","import { getZoneAbbr, getZoneName } from '../units/timezone';","// Deprecations","import { deprecate } from '../utils/deprecate';","proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);","proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);","","export default proto;"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\start-end-of.js","LineCount":60,"CharCount":1435,"Comments":["    // the following switch intentionally omits break keywords","    // to utilize falling through the cases.","    switch (units) {","            /* falls through */","        case 'quarter':","            /* falls through */","        case 'week':","            /* falls through */","        case 'hour':","            /* falls through */","        case 'minute':","            /* falls through */","        case 'second':","    // weeks are a special case","    if (units === 'week') {","    // quarters are also special","    if (units === 'quarter') {","    // 'date' is an alias for 'day', so it should be considered as such.","    if (units === 'date') {"],"Functions":["export function startOf (units) ","export function endOf (units) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\to-type.js","LineCount":35,"CharCount":744,"Comments":["    // new Date(NaN).toJSON() === null","    return this.isValid() ? this.toISOString() : null;"],"Functions":["export function valueOf () ","export function unix () ","export function toDate () ","export function toArray () ","export function toObject () ","export function toJSON () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\to.js","LineCount":18,"CharCount":563,"Comments":[],"Functions":["export function to (time, withoutSuffix) ","export function toNow (withoutSuffix) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\moment\\valid.js","LineCount":16,"CharCount":352,"Comments":[],"Functions":["export function isValid () ","export function parsingFlags () ","export function invalidAt () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\parse\\regex.js","LineCount":55,"CharCount":2257,"Comments":["export var match1         = /\\d/;            //       0 - 9","export var match2         = /\\d\\d/;          //      00 - 99","export var match3         = /\\d{3}/;         //     000 - 999","export var match4         = /\\d{4}/;         //    0000 - 9999","export var match6         = /[+-]?\\d{6}/;    // -999999 - 999999","export var match1to2      = /\\d\\d?/;         //       0 - 99","export var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999","export var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999","export var match1to3      = /\\d{1,3}/;       //       0 - 999","export var match1to4      = /\\d{1,4}/;       //       0 - 9999","export var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999","","export var matchUnsigned  = /\\d+/;           //       0 - inf","export var matchSigned    = /[+-]?\\d+/;      //    -inf - inf","","export var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z","export var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z","","export var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123","","// any word (or two) characters or numbers including two/three word month in arabic.","// includes scottish gaelic two word and hyphenated months","export var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function unescapeFormat(s) {"],"Functions":["import isFunction from '../utils/is-function';","export function addRegexToken (token, regex, strictRegex) ","    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) ","export function getParseRegexForToken (token, config) ","// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript","function unescapeFormat(s) ","    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) ","export function regexEscape(s) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\parse\\token.js","LineCount":33,"CharCount":844,"Comments":[],"Functions":["export function addParseToken (token, callback) ","        func = function (input, array) ","export function addWeekParseToken (token, callback) ","    addParseToken(token, function (input, array, config, token) ","export function addTimeToArrayFromToken(token, input, config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\aliases.js","LineCount":31,"CharCount":765,"Comments":[],"Functions":["export function addUnitAlias (unit, shorthand) ","export function normalizeUnits(units) ","export function normalizeObjectUnits(inputObject) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\constants.js","LineCount":10,"CharCount":195,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\day-of-month.js","LineCount":37,"CharCount":908,"Comments":["// FORMATTING","","addFormatToken('D', ['DD', 2], 'Do', 'date');","// ALIASES","","addUnitAlias('date', 'D');","// PRIOROITY","addUnitPriority('date', 9);","// PARSING","","addRegexToken('D',  match1to2);","// MOMENTS","","export var getSetDayOfMonth = makeGetSet('Date', true);"],"Functions":["addRegexToken('Do', function (isStrict, locale) ","addParseToken('Do', function (input, array) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\day-of-week.js","LineCount":361,"CharCount":11433,"Comments":["// FORMATTING","","addFormatToken('d', 0, 'do', 'day');","// ALIASES","","addUnitAlias('day', 'd');","// PRIORITY","addUnitPriority('day', 11);","// PARSING","","addRegexToken('d',    match1to2);","    // if we didn't get a weekday name, mark the date as invalid","    if (weekday != null) {","// HELPERS","","function parseWeekday(input, locale) {","// LOCALES","","export var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');","        // make the regex if we don't have it already","","        mom = createUTC([2000, 1]).day(i);","        // test the regex","        if (strict \u0026\u0026 format === 'dddd' \u0026\u0026 this._fullWeekdaysParse[i].test(weekdayName)) {","// MOMENTS","","export function getSetDayOfWeek (input) {","    // behaves the same as moment#day except","    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)","    // as a setter, sunday should belong to the previous week.","","    if (input != null) {","        // make the regex if we don't have it already","        mom = createUTC([2000, 1]).day(i);","    // Sorting makes sure if one weekday (or abbr) is a prefix of another it","    // will match the longer piece.","    minPieces.sort(cmpLenRev);"],"Functions":["addFormatToken('dd', 0, 0, function (format) ","addFormatToken('ddd', 0, 0, function (format) ","addFormatToken('dddd', 0, 0, function (format) ","addRegexToken('dd',   function (isStrict, locale) ","addRegexToken('ddd',   function (isStrict, locale) ","addRegexToken('dddd',   function (isStrict, locale) ","addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) ","addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) ","function parseWeekday(input, locale) ","function parseIsoWeekday(input, locale) ","export function localeWeekdays (m, format) ","export function localeWeekdaysShort (m) ","export function localeWeekdaysMin (m) ","function handleStrictParse(weekdayName, format, strict) ","export function localeWeekdaysParse (weekdayName, format, strict) ","export function getSetDayOfWeek (input) ","export function getSetLocaleDayOfWeek (input) ","export function getSetISODayOfWeek (input) ","export function weekdaysRegex (isStrict) ","export function weekdaysShortRegex (isStrict) ","export function weekdaysMinRegex (isStrict) ","function computeWeekdaysParse () ","    function cmpLenRev(a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\day-of-year.js","LineCount":37,"CharCount":954,"Comments":["// FORMATTING","","addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');","// ALIASES","","addUnitAlias('dayOfYear', 'DDD');","// PRIORITY","addUnitPriority('dayOfYear', 4);","// PARSING","","addRegexToken('DDD',  match1to3);","// HELPERS","","// MOMENTS","","export function getSetDayOfYear (input) {"],"Functions":["addParseToken(['DDD', 'DDDD'], function (input, array, config) ","export function getSetDayOfYear (input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\hour.js","LineCount":139,"CharCount":4006,"Comments":["// FORMATTING","","function hFormat() {","// ALIASES","","addUnitAlias('hour', 'h');","// PRIORITY","addUnitPriority('hour', 13);","// PARSING","","function matchMeridiem (isStrict, locale) {","// LOCALES","","export function localeIsPM (input) {","    // IE8 Quirks Mode \u0026 IE7 Standards Mode do not allow accessing strings like arrays","    // Using charAt should be more compatible.","    return ((input + '').toLowerCase().charAt(0) === 'p');","// MOMENTS","","// Setting the hour should keep the time, because the user explicitly","// specified which hour he wants. So trying to maintain the same hour (in","// a new timezone) makes sense. Adding/subtracting hours does not follow","// this rule.","export var getSetHour = makeGetSet('Hours', true);"],"Functions":["function hFormat() ","function kFormat() ","addFormatToken('hmm', 0, 0, function () ","addFormatToken('hmmss', 0, 0, function () ","addFormatToken('Hmm', 0, 0, function () ","addFormatToken('Hmmss', 0, 0, function () ","function meridiem (token, lowercase) ","    addFormatToken(token, 0, 0, function () ","function matchMeridiem (isStrict, locale) ","addParseToken(['a', 'A'], function (input, array, config) ","addParseToken(['h', 'hh'], function (input, array, config) ","addParseToken('hmm', function (input, array, config) ","addParseToken('hmmss', function (input, array, config) ","addParseToken('Hmm', function (input, array, config) ","addParseToken('Hmmss', function (input, array, config) ","export function localeIsPM (input) ","export function localeMeridiem (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\millisecond.js","LineCount":70,"CharCount":1755,"Comments":["// FORMATTING","","addFormatToken('S', 0, 0, function () {","// ALIASES","","addUnitAlias('millisecond', 'ms');","// PRIORITY","","addUnitPriority('millisecond', 16);","// PARSING","","addRegexToken('S',    match1to3, match1);","// MOMENTS","","export var getSetMillisecond = makeGetSet('Milliseconds', false);"],"Functions":["addFormatToken('S', 0, 0, function () ","addFormatToken(0, ['SS', 2], 0, function () ","addFormatToken(0, ['SSSS', 4], 0, function () ","addFormatToken(0, ['SSSSS', 5], 0, function () ","addFormatToken(0, ['SSSSSS', 6], 0, function () ","addFormatToken(0, ['SSSSSSS', 7], 0, function () ","addFormatToken(0, ['SSSSSSSS', 8], 0, function () ","addFormatToken(0, ['SSSSSSSSS', 9], 0, function () ","function parseMs(input, array) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\minute.js","LineCount":30,"CharCount":651,"Comments":["// FORMATTING","","addFormatToken('m', ['mm', 2], 0, 'minute');","// ALIASES","","addUnitAlias('minute', 'm');","// PRIORITY","","addUnitPriority('minute', 14);","// PARSING","","addRegexToken('m',  match1to2);","// MOMENTS","","export var getSetMinute = makeGetSet('Minutes', false);"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\month.js","LineCount":275,"CharCount":8610,"Comments":["// FORMATTING","","addFormatToken('M', ['MM', 2], 'Mo', function () {","// ALIASES","","addUnitAlias('month', 'M');","// PRIORITY","","addUnitPriority('month', 8);","// PARSING","","addRegexToken('M',    match1to2);","    // if we didn't find a month name, mark the date as invalid.","    if (month != null) {","// LOCALES","","var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;","        // this is not used","        this._monthsParse = [];","    // TODO: add sorting","    // Sorting makes sure if one month (or abbr) is a prefix of another","    // see sorting in computeMonthsParse","    for (i = 0; i \u003c 12; i++) {","        // make the regex if we don't have it already","        mom = createUTC([2000, i]);","        // test the regex","        if (strict \u0026\u0026 format === 'MMMM' \u0026\u0026 this._longMonthsParse[i].test(monthName)) {","// MOMENTS","","export function setMonth (mom, value) {","        // No op","        return mom;","            // TODO: Another silent failure?","            if (typeof value !== 'number') {","        // make the regex if we don't have it already","        mom = createUTC([2000, i]);","    // Sorting makes sure if one month (or abbr) is a prefix of another it","    // will match the longer piece.","    shortPieces.sort(cmpLenRev);"],"Functions":["export function daysInMonth(year, month) ","addFormatToken('M', ['MM', 2], 'Mo', function () ","addFormatToken('MMM', 0, 0, function (format) ","addFormatToken('MMMM', 0, 0, function (format) ","addRegexToken('MMM',  function (isStrict, locale) ","addRegexToken('MMMM', function (isStrict, locale) ","addParseToken(['M', 'MM'], function (input, array) ","addParseToken(['MMM', 'MMMM'], function (input, array, config, token) ","export function localeMonths (m, format) ","export function localeMonthsShort (m, format) ","function handleStrictParse(monthName, format, strict) ","export function localeMonthsParse (monthName, format, strict) ","export function setMonth (mom, value) ","export function getSetMonth (value) ","export function getDaysInMonth () ","export function monthsShortRegex (isStrict) ","export function monthsRegex (isStrict) ","function computeMonthsParse () ","    function cmpLenRev(a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\offset.js","LineCount":220,"CharCount":6313,"Comments":["// FORMATTING","","function offset (token, separator) {","// PARSING","","addRegexToken('Z',  matchShortOffset);","// HELPERS","","// timezone chunker","// '+10:00' \u003e ['10',  '00']","// '-1530'  \u003e ['-15', '30']","var chunkOffset = /([\\+\\-]|\\d\\d)/gi;","// Return a moment from input, that is local/utc/zone equivalent to model.","export function cloneWithOffset(input, model) {","        // Use low-level api, because this fn is low-level api.","        res._d.setTime(res._d.valueOf() + diff);","    // On Firefox.24 Date#getTimezoneOffset returns a floating point.","    // https://github.com/moment/moment/pull/1871","    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;","// HOOKS","","// This function will be called whenever a moment is mutated.","// It is intended to keep the offset in sync with the timezone.","hooks.updateOffset = function () {};","// MOMENTS","","// keepLocalTime = true means only change the timezone, without","// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--\u003e","// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset","// +0200, so we adjust the time as needed, to be valid.","//","// Keeping the time actually adds/subtracts (one hour)","// from the actual represented time. That is why we call updateOffset","// a second time. In case it wants us to change the offset again","// _changeInProgress == true case, then we have to adjust, because","// there is no such time in the given timezone.","export function getSetOffset (input, keepLocalTime) {"],"Functions":["function offset (token, separator) ","    addFormatToken(token, 0, 0, function () ","addParseToken(['Z', 'ZZ'], function (input, array, config) ","function offsetFromString(matcher, string) ","export function cloneWithOffset(input, model) ","function getDateOffset (m) ","// This function will be called whenever a moment is mutated.","hooks.updateOffset = function () };","export function getSetOffset (input, keepLocalTime) ","export function getSetZone (input, keepLocalTime) ","export function setOffsetToUTC (keepLocalTime) ","export function setOffsetToLocal (keepLocalTime) ","export function setOffsetToParsedOffset () ","export function hasAlignedHourOffset (input) ","export function isDaylightSavingTime () ","export function isDaylightSavingTimeShifted () ","export function isLocal () ","export function isUtcOffset () ","export function isUtc () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\priorities.js","LineCount":17,"CharCount":353,"Comments":[],"Functions":["export function addUnitPriority(unit, priority) ","export function getPrioritizedUnits(unitsObj) ","    units.sort(function (a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\quarter.js","LineCount":33,"CharCount":731,"Comments":["// FORMATTING","","addFormatToken('Q', 0, 'Qo', 'quarter');","// ALIASES","","addUnitAlias('quarter', 'Q');","// PRIORITY","","addUnitPriority('quarter', 7);","// PARSING","","addRegexToken('Q', match1);","// MOMENTS","","export function getSetQuarter (input) {"],"Functions":["addParseToken('Q', function (input, array) ","export function getSetQuarter (input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\second.js","LineCount":30,"CharCount":651,"Comments":["// FORMATTING","","addFormatToken('s', ['ss', 2], 0, 'second');","// ALIASES","","addUnitAlias('second', 's');","// PRIORITY","","addUnitPriority('second', 15);","// PARSING","","addRegexToken('s',  match1to2);","// MOMENTS","","export var getSetSecond = makeGetSet('Seconds', false);"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\timestamp.js","LineCount":21,"CharCount":574,"Comments":["// FORMATTING","","addFormatToken('X', 0, 0, 'unix');","// PARSING","","addRegexToken('x', matchSigned);"],"Functions":["addParseToken('X', function (input, array, config) ","addParseToken('x', function (input, array, config) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\timezone.js","LineCount":17,"CharCount":312,"Comments":["// FORMATTING","","addFormatToken('z',  0, 0, 'zoneAbbr');","// MOMENTS","","export function getZoneAbbr () {"],"Functions":["export function getZoneAbbr () ","export function getZoneName () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\units.js","LineCount":21,"CharCount":384,"Comments":["// Side effect imports","import './day-of-month';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\week-calendar-utils.js","LineCount":66,"CharCount":2069,"Comments":["// start-of-first-week - start-of-year","function firstWeekOffset(year, dow, doy) {","    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)","        fwd = 7 + dow - doy,","        // first-week day local weekday -- which local weekday is fwd","        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;","//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday","export function dayOfYearFromWeeks(year, week, weekday, dow, doy) {"],"Functions":["function firstWeekOffset(year, dow, doy) ","export function dayOfYearFromWeeks(year, week, weekday, dow, doy) ","export function weekOfYear(mom, dow, doy) ","export function weeksInYear(year, dow, doy) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\week-year.js","LineCount":108,"CharCount":3108,"Comments":["// FORMATTING","","addFormatToken(0, ['gg', 2], 0, function () {","// ALIASES","","addUnitAlias('weekYear', 'gg');","// PRIORITY","","addUnitPriority('weekYear', 1);","// PARSING","","addRegexToken('G',      matchSigned);","// MOMENTS","","export function getSetWeekYear (input) {"],"Functions":["addFormatToken(0, ['gg', 2], 0, function () ","addFormatToken(0, ['GG', 2], 0, function () ","function addWeekYearFormatToken (token, getter) ","addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) ","addWeekParseToken(['gg', 'GG'], function (input, week, config, token) ","export function getSetWeekYear (input) ","export function getSetISOWeekYear (input) ","export function getISOWeeksInYear () ","export function getWeeksInYear () ","function getSetWeekYearHelper(input, week, weekday, dow, doy) ","function setWeekAll(weekYear, week, weekday, dow, doy) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\week.js","LineCount":68,"CharCount":1635,"Comments":["// FORMATTING","","addFormatToken('w', ['ww', 2], 'wo', 'week');","// ALIASES","","addUnitAlias('week', 'w');","// PRIORITIES","","addUnitPriority('week', 5);","// PARSING","","addRegexToken('w',  match1to2);","// HELPERS","","// LOCALES","","export function localeWeek (mom) {","    dow : 0, // Sunday is the first day of the week.","    doy : 6  // The week that contains Jan 1st is the first week of the year.","};","// MOMENTS","","export function getSetWeek (input) {"],"Functions":["addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) ","export function localeWeek (mom) ","export function localeFirstDayOfWeek () ","export function localeFirstDayOfYear () ","export function getSetWeek (input) ","export function getSetISOWeek (input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\units\\year.js","LineCount":76,"CharCount":1886,"Comments":["// FORMATTING","","addFormatToken('Y', 0, 0, function () {","// ALIASES","","addUnitAlias('year', 'y');","// PRIORITIES","","addUnitPriority('year', 1);","// PARSING","","addRegexToken('Y',      matchSigned);","// HELPERS","","export function daysInYear(year) {","// HOOKS","","hooks.parseTwoDigitYear = function (input) {","// MOMENTS","","export var getSetYear = makeGetSet('FullYear', true);"],"Functions":["addFormatToken('Y', 0, 0, function () ","addFormatToken(0, ['YY', 2], 0, function () ","addParseToken('YYYY', function (input, array) ","addParseToken('YY', function (input, array) ","addParseToken('Y', function (input, array) ","export function daysInYear(year) ","function isLeapYear(year) ","hooks.parseTwoDigitYear = function (input) ","export function getIsLeapYear () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\abs-ceil.js","LineCount":8,"CharCount":148,"Comments":[],"Functions":["export default function absCeil (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\abs-floor.js","LineCount":9,"CharCount":172,"Comments":["        // -0 -\u003e 0","        return Math.ceil(number) || 0;"],"Functions":["export default function absFloor (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\abs-round.js","LineCount":8,"CharCount":160,"Comments":[],"Functions":["export default function absRound (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\compare-arrays.js","LineCount":17,"CharCount":515,"Comments":["// compare two arrays, return the number of differences","export default function compareArrays(array1, array2, dontConvert) {"],"Functions":["export default function compareArrays(array1, array2, dontConvert) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\defaults.js","LineCount":11,"CharCount":193,"Comments":["// Pick the first defined of two or three arguments.","export default function defaults(a, b, c) {"],"Functions":["export default function defaults(a, b, c) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\deprecate.js","LineCount":41,"CharCount":1051,"Comments":[],"Functions":["function warn(msg) ","export function deprecate(msg, fn) ","    return extend(function () ","export function deprecateSimple(name, msg) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\extend.js","LineCount":20,"CharCount":326,"Comments":[],"Functions":["export default function extend(a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\has-own-prop.js","LineCount":4,"CharCount":97,"Comments":[],"Functions":["export default function hasOwnProp(a, b) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\hooks.js","LineCount":14,"CharCount":285,"Comments":["// This is done to register the method called with moment()","// without creating circular dependencies.","function setHookCallback (callback) {"],"Functions":["function hooks () ","function setHookCallback (callback) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\index-of.js","LineCount":19,"CharCount":324,"Comments":["        // I know","        var i;"],"Functions":["    indexOf = function (o) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-array.js","LineCount":4,"CharCount":137,"Comments":[],"Functions":["export default function isArray(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-date.js","LineCount":4,"CharCount":134,"Comments":[],"Functions":["export default function isDate(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-function.js","LineCount":4,"CharCount":146,"Comments":[],"Functions":["export default function isFunction(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-object-empty.js","LineCount":9,"CharCount":184,"Comments":["        // even if its not own property I'd still call it non-empty","        return false;"],"Functions":["export default function isObjectEmpty(obj) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-object.js","LineCount":4,"CharCount":113,"Comments":[],"Functions":["export default function isObject(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\is-undefined.js","LineCount":4,"CharCount":73,"Comments":[],"Functions":["export default function isUndefined(input) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\keys.js","LineCount":20,"CharCount":313,"Comments":[],"Functions":["    keys = function (obj) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\map.js","LineCount":8,"CharCount":149,"Comments":[],"Functions":["export default function map(arr, fn) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\some.js","LineCount":20,"CharCount":364,"Comments":[],"Functions":["    some = function (fun) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\to-int.js","LineCount":13,"CharCount":270,"Comments":[],"Functions":["export default function toInt(argumentForCoercion) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\lib\\utils\\zero-fill.js","LineCount":8,"CharCount":321,"Comments":[],"Functions":["export default function zeroFill(number, targetLength, forceSign) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\af.js","LineCount":64,"CharCount":2028,"Comments":["//! moment.js locale configuration","//! locale : Afrikaans [af]","//! author : Werner Mollentze : https://github.com/wernerm","","import moment from '../moment';","        return number + ((number === 1 || number === 8 || number \u003e= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter","    },","        dow : 1, // Maandag is die eerste dag van die week.","        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hours, minutes, isLower) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ar-ma.js","LineCount":52,"CharCount":1896,"Comments":["//! moment.js locale configuration","//! locale : Arabic (Morocco) [ar-ma]","//! author : ElFadili Yassine : https://github.com/ElFadiliY","//! author : Abdel Said : https://github.com/abdelsaid","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ar-sa.js","LineCount":96,"CharCount":2765,"Comments":["//! moment.js locale configuration","//! locale : Arabic (Saudi Arabia) [ar-sa]","//! author : Suhail Alkowaileet : https://github.com/xsoh","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    preparse: function (string) ","        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ar-tn.js","LineCount":50,"CharCount":1754,"Comments":["//! moment.js locale configuration","//! locale  :  Arabic (Tunisia) [ar-tn]","","import moment from '../moment';","        dow: 1, // Monday is the first day of the week.","        doy: 4 // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ar.js","LineCount":129,"CharCount":4272,"Comments":["//! moment.js locale configuration","//! locale : Arabic [ar]","//! author : Abdel Said: https://github.com/abdelsaid","//! changes in months, weekdays: Ahmed Elkhatib","//! Native plural forms: forabi https://github.com/forabi","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["}, pluralForm = function (n) ","}, pluralize = function (u) ","    return function (number, withoutSuffix, string, isFuture) ","    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    preparse: function (string) ","        return string.replace(/\\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\az.js","LineCount":97,"CharCount":2693,"Comments":["//! moment.js locale configuration","//! locale : Azerbaijani [az]","//! author : topchiyev : https://github.com/topchiyev","","import moment from '../moment';","        if (number === 0) {  // special case for zero","            return number + '-ıncı';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\be.js","LineCount":126,"CharCount":4696,"Comments":["//! moment.js locale configuration","//! locale : Belarusian [be]","//! author : Dmitry Demidov : https://github.com/demidov91","//! author: Praleska: http://praleska.pro/","//! Author : Menelion Elensúle : https://github.com/Oire","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function plural(word, num) ","function relativeTimeWithPlural(number, withoutSuffix, key) ","        nextWeek: function () ","        lastWeek: function () ","    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\bg.js","LineCount":82,"CharCount":2787,"Comments":["//! moment.js locale configuration","//! locale : Bulgarian [bg]","//! author : Krasen Borisov : https://github.com/kraz","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["        lastWeek : function () ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\bn.js","LineCount":111,"CharCount":3601,"Comments":["//! moment.js locale configuration","//! locale : Bengali [bn]","//! author : Kaushik Gandhi : https://github.com/kaushikgandhi","","import moment from '../moment';","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\bo.js","LineCount":111,"CharCount":4389,"Comments":["//! moment.js locale configuration","//! locale : Tibetan [bo]","//! author : Thupten N. Chakrishar : https://github.com/vajradog","","import moment from '../moment';","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\br.js","LineCount":100,"CharCount":2717,"Comments":["//! moment.js locale configuration","//! locale : Breton [br]","//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function relativeTimeWithMutation(number, withoutSuffix, key) ","function specialMutationForYears(number) ","function lastNumber(number) ","function mutation(text, number) ","function softMutation(text) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\bs.js","LineCount":135,"CharCount":4047,"Comments":["//! moment.js locale configuration","//! locale : Bosnian [bs]","//! author : Nedim Cholich : https://github.com/frontyard","//! based on (hr) translation by Bojan Marković","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function translate(number, withoutSuffix, key) ","        nextWeek : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ca.js","LineCount":73,"CharCount":2340,"Comments":["//! moment.js locale configuration","//! locale : Catalan [ca]","//! author : Juan G. Hurtado : https://github.com/juanghurtado","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["        sameDay : function () ","        nextDay : function () ","        nextWeek : function () ","        lastDay : function () ","        lastWeek : function () ","    ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\cs.js","LineCount":164,"CharCount":5699,"Comments":["//! moment.js locale configuration","//! locale : Czech [cs]","//! author : petrbela : https://github.com/petrbela","","import moment from '../moment';","        case 's':  // a few seconds / in a few seconds / a few seconds ago","            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';","        case 'm':  // a minute / in a minute / a minute ago","            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');","        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","            if (withoutSuffix || isFuture) {","        case 'h':  // an hour / in an hour / an hour ago","            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","        case 'hh': // 9 hours / in 9 hours / 9 hours ago","            if (withoutSuffix || isFuture) {","        case 'd':  // a day / in a day / a day ago","            return (withoutSuffix || isFuture) ? 'den' : 'dnem';","        case 'dd': // 9 days / in 9 days / 9 days ago","            if (withoutSuffix || isFuture) {","        case 'M':  // a month / in a month / a month ago","            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';","        case 'MM': // 9 months / in 9 months / 9 months ago","            if (withoutSuffix || isFuture) {","        case 'y':  // a year / in a year / a year ago","            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';","        case 'yy': // 9 years / in 9 years / 9 years ago","            if (withoutSuffix || isFuture) {","            // use custom parser to solve problem with July (červenec)","            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function plural(n) ","function translate(number, withoutSuffix, key, isFuture) ","    monthsParse : (function (months, monthsShort) ","    shortMonthsParse : (function (monthsShort) ","    longMonthsParse : (function (months) ","        nextWeek: function () ","        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\cv.js","LineCount":54,"CharCount":2164,"Comments":["//! moment.js locale configuration","//! locale : Chuvash [cv]","//! author : Anatoly Mironov : https://github.com/mirontoli","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["        future : function (output) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\cy.js","LineCount":72,"CharCount":2292,"Comments":["//! moment.js locale configuration","//! locale : Welsh [cy]","//! author : Robert Allen","","import moment from '../moment';","    // time formats are the same as en-gb","    longDateFormat: {","    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh","    ordinal: function (number) {","                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed","                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed","            ];","                output = 'fed'; // not 30ain, 70ain or 90ain","            } else {","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal: function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\da.js","LineCount":52,"CharCount":1554,"Comments":["//! moment.js locale configuration","//! locale : Danish [da]","//! author : Ulrik Nielsen : https://github.com/mrbase","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\de-at.js","LineCount":70,"CharCount":2421,"Comments":["//! moment.js locale configuration","//! locale : German (Austria) [de-at]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Martin Groller : https://github.com/MadMG","//! author : Mikolaj Dadela : https://github.com/mik01aj","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\de.js","LineCount":69,"CharCount":2349,"Comments":["//! moment.js locale configuration","//! locale : German [de]","//! author : lluchs : https://github.com/lluchs","//! author: Menelion Elensúle: https://github.com/Oire","//! author : Mikolaj Dadela : https://github.com/mik01aj","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\dv.js","LineCount":90,"CharCount":2285,"Comments":["//! moment.js locale configuration","//! locale : Maldivian [dv]","//! author : Jawish Hameed : https://github.com/jawish","","import moment from '../moment';","        dow : 7,  // Sunday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    preparse: function (string) ","    postformat: function (string) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\el.js","LineCount":87,"CharCount":3403,"Comments":["//! moment.js locale configuration","//! locale : Greek [el]","//! author : Aggelos Karalias : https://github.com/mehiel","","import moment from '../moment';","        if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'","            return this._monthsGenitiveEl[momentToFormat.month()];","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4st is the first week of the year.","    }"],"Functions":["import isFunction from '../lib/utils/is-function';","    months : function (momentToFormat, format) ","    meridiem : function (hours, minutes, isLower) ","    isPM : function (input) ","        lastWeek : function () ","    calendar : function (key, mom) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\en-au.js","LineCount":58,"CharCount":1754,"Comments":["//! moment.js locale configuration","//! locale : English (Australia) [en-au]","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\en-ca.js","LineCount":54,"CharCount":1657,"Comments":["//! moment.js locale configuration","//! locale : English (Canada) [en-ca]","//! author : Jonathan Abourbih : https://github.com/jonbca","","import moment from '../moment';"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\en-gb.js","LineCount":59,"CharCount":1813,"Comments":["//! moment.js locale configuration","//! locale : English (United Kingdom) [en-gb]","//! author : Chris Gedrim : https://github.com/chrisgedrim","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\en-ie.js","LineCount":59,"CharCount":1811,"Comments":["//! moment.js locale configuration","//! locale : English (Ireland) [en-ie]","//! author : Chris Cartlidge : https://github.com/chriscartlidge","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\en-nz.js","LineCount":57,"CharCount":1756,"Comments":["//! moment.js locale configuration","//! locale : English (New Zealand) [en-nz]","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\eo.js","LineCount":65,"CharCount":2100,"Comments":["//! moment.js locale configuration","//! locale : Esperanto [eo]","//! author : Colin Dean : https://github.com/colindean","//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.","//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!","","import moment from '../moment';","        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo","        dd : '%d tagoj',","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    isPM: function (input) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\es-do.js","LineCount":72,"CharCount":2334,"Comments":["//! moment.js locale configuration","//! locale : Spanish (Dominican Republic) [es-do]","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    monthsShort : function (m, format) ","        sameDay : function () ","        nextDay : function () ","        nextWeek : function () ","        lastDay : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\es.js","LineCount":73,"CharCount":2354,"Comments":["//! moment.js locale configuration","//! locale : Spanish [es]","//! author : Julio Napurí : https://github.com/julionc","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    monthsShort : function (m, format) ","        sameDay : function () ","        nextDay : function () ","        nextWeek : function () ","        lastDay : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\et.js","LineCount":72,"CharCount":2548,"Comments":["//! moment.js locale configuration","//! locale : Estonian [et]","//! author : Henry Kehlmann : https://github.com/madhenry","//! improvements : Illimar Tambek : https://github.com/ragulka","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\eu.js","LineCount":58,"CharCount":1837,"Comments":["//! moment.js locale configuration","//! locale : Basque [eu]","//! author : Eneko Illarramendi : https://github.com/eillarra","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fa.js","LineCount":98,"CharCount":2886,"Comments":["//! moment.js locale configuration","//! locale : Persian [fa]","//! author : Ebrahim Byagowi : https://github.com/ebraminio","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12 // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    isPM: function (input) ","    meridiem : function (hour, minute, isLower) ","    preparse: function (string) ","        return string.replace(/[۰-۹]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fi.js","LineCount":99,"CharCount":3237,"Comments":["//! moment.js locale configuration","//! locale : Finnish [fi]","//! author : Tarmo Aidantausta : https://github.com/bleadof","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function translate(number, withoutSuffix, key, isFuture) ","function verbalNumber(number, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fo.js","LineCount":52,"CharCount":1606,"Comments":["//! moment.js locale configuration","//! locale : Faroese [fo]","//! author : Ragnar Johannesen : https://github.com/ragnar123","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fr-ca.js","LineCount":52,"CharCount":1566,"Comments":["//! moment.js locale configuration","//! locale : French (Canada) [fr-ca]","//! author : Jonathan Abourbih : https://github.com/jonbca","","import moment from '../moment';"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fr-ch.js","LineCount":56,"CharCount":1724,"Comments":["//! moment.js locale configuration","//! locale : French (Switzerland) [fr-ch]","//! author : Gaspard Bucher : https://github.com/gaspard","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fr.js","LineCount":56,"CharCount":1702,"Comments":["//! moment.js locale configuration","//! locale : French [fr]","//! author : John Fischer : https://github.com/jfroffice","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\fy.js","LineCount":65,"CharCount":2061,"Comments":["//! moment.js locale configuration","//! locale : Frisian [fy]","//! author : Robin van der Vliet : https://github.com/robin0van0der0v","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    monthsShort : function (m, format) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\gd.js","LineCount":68,"CharCount":2055,"Comments":["//! moment.js locale configuration","//! locale : Scottish Gaelic [gd]","//! author : Jon Ashdown : https://github.com/jonashdown","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\gl.js","LineCount":69,"CharCount":2186,"Comments":["//! moment.js locale configuration","//! locale : Galician [gl]","//! author : Juan G. Hurtado : https://github.com/juanghurtado","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["        sameDay : function () ","        nextDay : function () ","        nextWeek : function () ","        lastDay : function () ","        lastWeek : function () ","        future : function (str) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\he.js","LineCount":91,"CharCount":3098,"Comments":["//! moment.js locale configuration","//! locale : Hebrew [he]","//! author : Tomer Cohen : https://github.com/tomer","//! author : Moshe Simantov : https://github.com/DevelopmentIL","//! author : Tal Ater : https://github.com/TalAter","","import moment from '../moment';"],"Functions":["        hh : function (number) ","        dd : function (number) ","        MM : function (number) ","        yy : function (number) ","    isPM : function (input) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\hi.js","LineCount":116,"CharCount":3745,"Comments":["//! moment.js locale configuration","//! locale : Hindi [hi]","//! author : Mayank Singhal : https://github.com/mayanksinghal","","import moment from '../moment';","    // Hindi notation for meridiems are quite fuzzy in practice. While there exists","    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.","    meridiemParse: /रात|सुबह|दोपहर|शाम/,","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[१२३४५६७८९०]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\hr.js","LineCount":137,"CharCount":4174,"Comments":["//! moment.js locale configuration","//! locale : Croatian [hr]","//! author : Bojan Marković : https://github.com/bmarkovic","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function translate(number, withoutSuffix, key) ","        nextWeek : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\hu.js","LineCount":101,"CharCount":3381,"Comments":["//! moment.js locale configuration","//! locale : Hungarian [hu]","//! author : Adam Brunner : https://github.com/adambrunner","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function translate(number, withoutSuffix, key, isFuture) ","function week(isFuture) ","    isPM: function (input) ","    meridiem : function (hours, minutes, isLower) ","        nextWeek : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\hy-am.js","LineCount":87,"CharCount":3038,"Comments":["//! moment.js locale configuration","//! locale : Armenian [hy-am]","//! author : Armendarabyan : https://github.com/armendarabyan","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["        nextWeek: function () ","        lastWeek: function () ","    isPM: function (input) ","    meridiem : function (hour) ","    ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\id.js","LineCount":75,"CharCount":2298,"Comments":["//! moment.js locale configuration","//! locale : Indonesian [id]","//! author : Mohammad Satrio Utomo : https://github.com/tyok","//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    meridiemHour : function (hour, meridiem) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\is.js","LineCount":119,"CharCount":3861,"Comments":["//! moment.js locale configuration","//! locale : Icelandic [is]","//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function plural(n) ","function translate(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\it.js","LineCount":62,"CharCount":1893,"Comments":["//! moment.js locale configuration","//! locale : Italian [it]","//! author : Lorenzo : https://github.com/aliem","//! author: Mattia Larentis: https://github.com/nostalgiaz","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["        lastWeek: function () ","        future : function (s) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ja.js","LineCount":68,"CharCount":1861,"Comments":["//! moment.js locale configuration","//! locale : Japanese [ja]","//! author : LI Long : https://github.com/baryon","","import moment from '../moment';"],"Functions":["    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\jv.js","LineCount":74,"CharCount":2307,"Comments":["//! moment.js locale configuration","//! locale : Japanese [jv]","//! author : Rony Lantip : https://github.com/lantip","//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    meridiemHour : function (hour, meridiem) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ka.js","LineCount":81,"CharCount":3523,"Comments":["//! moment.js locale configuration","//! locale : Georgian [ka]","//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili","","import moment from '../moment';"],"Functions":["        future : function (s) ","        past : function (s) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\kk.js","LineCount":78,"CharCount":2381,"Comments":["//! moment.js locale configuration","//! locale : Kazakh [kk]","//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\km.js","LineCount":50,"CharCount":2230,"Comments":["//! moment.js locale configuration","//! locale : Cambodian [km]","//! author : Kruy Vanna : https://github.com/kruyvanna","","import moment from '../moment';","        dow: 1, // Monday is the first day of the week.","        doy: 4 // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ko.js","LineCount":60,"CharCount":1683,"Comments":["//! moment.js locale configuration","//! locale : Korean [ko]","//!","//! authors","//!","//! - Kyungwook, Park : https://github.com/kyungw00k","//! - Jeeeyul Lee \u003cjeeeyul@gmail.com\u003e","","import moment from '../moment';"],"Functions":["    isPM : function (token) ","    meridiem : function (hour, minute, isUpper) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ky.js","LineCount":79,"CharCount":2391,"Comments":["//! moment.js locale configuration","//! locale : Kyrgyz [ky]","//! author : Chyngyz Arystan uulu : https://github.com/chyngyz","","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\lb.js","LineCount":128,"CharCount":4029,"Comments":["//! moment.js locale configuration","//! locale : Luxembourgish [lb]","//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz","","import moment from '../moment';","/**"," * Returns true if the word before the given number loses the '-n' ending."," * e.g. 'an 10 Deeg' but 'a 5 Deeg'"," *"," * @param number {integer}"," * @returns {boolean}"," */","function eifelerRegelAppliesToNumber(number) {","        // Negative Number --\u003e always true","        return true;","        // Only 1 digit","        if (4 \u003c= number \u0026\u0026 number \u003c= 7) {","        // 2 digits","        var lastDigit = number % 10, firstDigit = number / 10;","        // 3 or 4 digits --\u003e recursively check first digit","        while (number \u003e= 10) {","        // Anything larger than 4 digits: recursively check first n-3 digits","        number = number / 1000;","            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule","            switch (this.day()) {","        dow: 1, // Monday is the first day of the week.","        doy: 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function processRelativeTime(number, withoutSuffix, key, isFuture) ","function processFutureTime(string) ","function processPastTime(string) ","function eifelerRegelAppliesToNumber(number) ","        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\lo.js","LineCount":62,"CharCount":2466,"Comments":["//! moment.js locale configuration","//! locale : Lao [lo]","//! author : Ryan Hart : https://github.com/ryanhart2","","import moment from '../moment';"],"Functions":["    isPM: function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\lt.js","LineCount":109,"CharCount":3704,"Comments":["//! moment.js locale configuration","//! locale : Lithuanian [lt]","//! author : Mindaugas Mozūras : https://github.com/mmozuras","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function translateSeconds(number, withoutSuffix, key, isFuture) ","function translateSingular(number, withoutSuffix, key, isFuture) ","function special(number) ","function forms(key) ","function translate(number, withoutSuffix, key, isFuture) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\lv.js","LineCount":89,"CharCount":3267,"Comments":["//! moment.js locale configuration","//! locale : Latvian [lv]","//! author : Kristaps Karlsons : https://github.com/skakri","//! author : Jānis Elmeris : https://github.com/JanisE","","import moment from '../moment';","/**"," * @param withoutSuffix boolean true = a length of time; false = before/after a period of time."," */","function format(forms, number, withoutSuffix) {","        // E.g. \"21 minūte\", \"3 minūtes\".","        return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[2] : forms[3];","        // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".","        // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".","        return number % 10 === 1 \u0026\u0026 number % 100 !== 11 ? forms[0] : forms[1];","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function format(forms, number, withoutSuffix) ","function relativeTimeWithPlural(number, withoutSuffix, key) ","function relativeTimeWithSingular(number, withoutSuffix, key) ","function relativeSeconds(number, withoutSuffix) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\me.js","LineCount":102,"CharCount":3388,"Comments":["//! moment.js locale configuration","//! locale : Montenegrin [me]","//! author : Miodrag Nikač \u003cmiodrag@restartit.me\u003e : https://github.com/miodragnikac","","import moment from '../moment';","    words: { //Different grammatical cases","        m: ['jedan minut', 'jednog minuta'],","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    correctGrammaticalCase: function (number, wordKey) ","    translate: function (number, withoutSuffix, key) ","        nextWeek: function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\mk.js","LineCount":82,"CharCount":2809,"Comments":["//! moment.js locale configuration","//! locale : Macedonian [mk]","//! author : Borislav Mickov : https://github.com/B0k0","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["        lastWeek : function () ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ml.js","LineCount":73,"CharCount":3117,"Comments":["//! moment.js locale configuration","//! locale : Malayalam [ml]","//! author : Floyd Pink : https://github.com/floydpink","","import moment from '../moment';"],"Functions":["    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\mr.js","LineCount":151,"CharCount":5416,"Comments":["//! moment.js locale configuration","//! locale : Marathi [mr]","//! author : Harshad Kale : https://github.com/kalehv","//! author : Vivek Athalye : https://github.com/vnathalye","","import moment from '../moment';","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function relativeTimeMr(number, withoutSuffix, string, isFuture)","    preparse: function (string) ","        return string.replace(/[१२३४५६७८९०]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem: function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ms-my.js","LineCount":75,"CharCount":2253,"Comments":["//! moment.js locale configuration","//! locale : Malay [ms-my]","//! note : DEPRECATED, the correct one is [ms]","//! author : Weldan Jamili : https://github.com/weldan","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    meridiemHour: function (hour, meridiem) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ms.js","LineCount":74,"CharCount":2201,"Comments":["//! moment.js locale configuration","//! locale : Malay [ms]","//! author : Weldan Jamili : https://github.com/weldan","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    meridiemHour: function (hour, meridiem) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\my.js","LineCount":85,"CharCount":2745,"Comments":["//! moment.js locale configuration","//! locale : Burmese [my]","//! author : Squar team, mysquar.com","","import moment from '../moment';","        dow: 1, // Monday is the first day of the week.","        doy: 4 // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\nb.js","LineCount":55,"CharCount":1707,"Comments":["//! moment.js locale configuration","//! locale : Norwegian Bokmål [nb]","//! authors : Espen Hovlandsdal : https://github.com/rexxars","//!           Sigurd Gartmann : https://github.com/sigurdga","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ne.js","LineCount":115,"CharCount":3782,"Comments":["//! moment.js locale configuration","//! locale : Nepalese [ne]","//! author : suvash : https://github.com/suvash","","import moment from '../moment';","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[१२३४५६७८९०]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\nl.js","LineCount":65,"CharCount":2059,"Comments":["//! moment.js locale configuration","//! locale : Dutch [nl]","//! author : Joris Röling : https://github.com/jjupiter","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    monthsShort : function (m, format) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\nn.js","LineCount":52,"CharCount":1566,"Comments":["//! moment.js locale configuration","//! locale : Nynorsk [nn]","//! author : https://github.com/mechuwind","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\pa-in.js","LineCount":116,"CharCount":3937,"Comments":["//! moment.js locale configuration","//! locale : Punjabi (India) [pa-in]","//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit","","import moment from '../moment';","    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.","    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),","    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists","    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.","    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    preparse: function (string) ","        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\pl.js","LineCount":96,"CharCount":3302,"Comments":["//! moment.js locale configuration","//! locale : Polish [pl]","//! author : Rafal Hirsz : https://github.com/evoL","","import moment from '../moment';","            // Hack: if format empty we know this is used to generate","            // RegExp by moment. Give then back both valid forms of months","            // in RegExp ready format.","            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function plural(n) ","function translate(number, withoutSuffix, key) ","    months : function (momentToFormat, format) ","        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\pt-br.js","LineCount":53,"CharCount":1719,"Comments":["//! moment.js locale configuration","//! locale : Portuguese (Brazil) [pt-br]","//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira","","import moment from '../moment';","                '[Último] dddd [às] LT' : // Saturday + Sunday","                '[Última] dddd [às] LT'; // Monday - Friday","        },"],"Functions":["        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\pt.js","LineCount":57,"CharCount":1813,"Comments":["//! moment.js locale configuration","//! locale : Portuguese [pt]","//! author : Jefferson : https://github.com/jalex79","","import moment from '../moment';","                '[Último] dddd [às] LT' : // Saturday + Sunday","                '[Última] dddd [às] LT'; // Monday - Friday","        },","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ro.js","LineCount":67,"CharCount":2031,"Comments":["//! moment.js locale configuration","//! locale : Romanian [ro]","//! author : Vlad Gurdiga : https://github.com/gurdiga","//! author : Valentin Agachi : https://github.com/avaly","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function relativeTimeWithPlural(number, withoutSuffix, key) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ru.js","LineCount":174,"CharCount":7688,"Comments":["//! moment.js locale configuration","//! locale : Russian [ru]","//! author : Viktorminator : https://github.com/Viktorminator","//! Author : Menelion Elensúle : https://github.com/Oire","//! author : Коренберг Марк : https://github.com/socketpair","","import moment from '../moment';","// http://new.gramota.ru/spravka/rules/139-prop : § 103","// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637","// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753","export default moment.defineLocale('ru', {","        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?","        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),","    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки","    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","    // копия предыдущего","    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,","    // полные названия с падежами","    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,","    // Выражение, которое соотвествует только сокращённым формам","    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function plural(word, num) ","function relativeTimeWithPlural(number, withoutSuffix, key) ","        nextWeek: function (now) ","        lastWeek: function (now) ","    isPM : function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\se.js","LineCount":52,"CharCount":1736,"Comments":["//! moment.js locale configuration","//! locale : Northern Sami [se]","//! authors : Bård Rolstad Henriksen : https://github.com/karamell","","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\si.js","LineCount":62,"CharCount":2552,"Comments":["//! moment.js locale configuration","//! locale : Sinhalese [si]","//! author : Sampath Sitinamaluwa : https://github.com/sampathsris","","import moment from '../moment';","/*jshint -W100*/","export default moment.defineLocale('si', {"],"Functions":["    ordinal : function (number) ","    isPM : function (input) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sk.js","LineCount":142,"CharCount":4851,"Comments":["//! moment.js locale configuration","//! locale : Slovak [sk]","//! author : Martin Minka : https://github.com/k2s","//! based on work of petrbela : https://github.com/petrbela","","import moment from '../moment';","        case 's':  // a few seconds / in a few seconds / a few seconds ago","            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';","        case 'm':  // a minute / in a minute / a minute ago","            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');","        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago","            if (withoutSuffix || isFuture) {","        case 'h':  // an hour / in an hour / an hour ago","            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');","        case 'hh': // 9 hours / in 9 hours / 9 hours ago","            if (withoutSuffix || isFuture) {","        case 'd':  // a day / in a day / a day ago","            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';","        case 'dd': // 9 days / in 9 days / 9 days ago","            if (withoutSuffix || isFuture) {","        case 'M':  // a month / in a month / a month ago","            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';","        case 'MM': // 9 months / in 9 months / 9 months ago","            if (withoutSuffix || isFuture) {","        case 'y':  // a year / in a year / a year ago","            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';","        case 'yy': // 9 years / in 9 years / 9 years ago","            if (withoutSuffix || isFuture) {","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function plural(n) ","function translate(number, withoutSuffix, key, isFuture) ","        nextWeek: function () ","        lastWeek: function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sl.js","LineCount":153,"CharCount":5487,"Comments":["//! moment.js locale configuration","//! locale : Slovenian [sl]","//! author : Robert Sedovšek : https://github.com/sedovsek","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function processRelativeTime(number, withoutSuffix, key, isFuture) ","        nextWeek : function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sq.js","LineCount":62,"CharCount":1912,"Comments":["//! moment.js locale configuration","//! locale : Albanian [sq]","//! author : Flakërim Ismani : https://github.com/flakerimi","//! author: Menelion Elensúle: https://github.com/Oire (tests)","//! author : Oerd Cukalla : https://github.com/oerd (fixes)","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    isPM: function (input) ","    meridiem : function (hours, minutes, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sr-cyrl.js","LineCount":102,"CharCount":3841,"Comments":["//! moment.js locale configuration","//! locale : Serbian Cyrillic [sr-cyrl]","//! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","","import moment from '../moment';","    words: { //Different grammatical cases","        m: ['један минут', 'једне минуте'],","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    correctGrammaticalCase: function (number, wordKey) ","    translate: function (number, withoutSuffix, key) ","        nextWeek: function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sr.js","LineCount":102,"CharCount":3367,"Comments":["//! moment.js locale configuration","//! locale : Serbian [sr]","//! author : Milan Janačković\u003cmilanjanackovic@gmail.com\u003e : https://github.com/milan-j","","import moment from '../moment';","    words: { //Different grammatical cases","        m: ['jedan minut', 'jedne minute'],","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    correctGrammaticalCase: function (number, wordKey) ","    translate: function (number, withoutSuffix, key) ","        nextWeek: function () ","        lastWeek : function () "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ss.js","LineCount":81,"CharCount":2447,"Comments":["//! moment.js locale configuration","//! locale : Swazi [ss]","//! author : Nicolai Davies\u003cmail@nicolai.io\u003e : https://github.com/nicolaidavies","","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    meridiem : function (hours, minutes, isLower) ","    meridiemHour : function (hour, meridiem) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sv.js","LineCount":61,"CharCount":1842,"Comments":["//! moment.js locale configuration","//! locale : Swedish [sv]","//! author : Jens Alm : https://github.com/ulmus","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\sw.js","LineCount":51,"CharCount":1565,"Comments":["//! moment.js locale configuration","//! locale : Swahili [sw]","//! author : Fahad Kassim : https://github.com/fadsel","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\ta.js","LineCount":121,"CharCount":4499,"Comments":["//! moment.js locale configuration","//! locale : Tamil [ta]","//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404","","import moment from '../moment';","    // refer http://ta.wikipedia.org/s/1er1","    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,","            return ' வைகறை';  // வைகறை","        } else if (hour \u003c 10) {","            return ' காலை'; // காலை","        } else if (hour \u003c 14) {","            return ' நண்பகல்'; // நண்பகல்","        } else if (hour \u003c 18) {","            return ' எற்பாடு'; // எற்பாடு","        } else if (hour \u003c 22) {","            return ' மாலை'; // மாலை","        } else {","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    ordinal : function (number) ","    preparse: function (string) ","        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) ","    postformat: function (string) ","        return string.replace(/\\d/g, function (match) ","    meridiem : function (hour, minute, isLower) ","    meridiemHour : function (hour, meridiem) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\te.js","LineCount":80,"CharCount":3232,"Comments":["//! moment.js locale configuration","//! locale : Telugu [te]","//! author : Krishna Chaitanya Thota : https://github.com/kcthota","","import moment from '../moment';","        dow : 0, // Sunday is the first day of the week.","        doy : 6  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\th.js","LineCount":58,"CharCount":2693,"Comments":["//! moment.js locale configuration","//! locale : Thai [th]","//! author : Kridsada Thanabulpong : https://github.com/sirn","","import moment from '../moment';","    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference","    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),"],"Functions":["    isPM: function (input) ","    meridiem : function (hour, minute, isLower) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tl-ph.js","LineCount":54,"CharCount":1602,"Comments":["//! moment.js locale configuration","//! locale : Tagalog (Philippines) [tl-ph]","//! author : Dan Hagman","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tlh.js","LineCount":111,"CharCount":3401,"Comments":["//! moment.js locale configuration","//! locale : Klingon [tlh]","//! author : Dominika Kruk : https://github.com/amaranthrose","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["function translateFuture(output) ","function translatePast(output) ","function translate(number, withoutSuffix, string, isFuture) ","function numberAsNoun(number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tr.js","LineCount":82,"CharCount":2276,"Comments":["//! moment.js locale configuration","//! locale : Turkish [tr]","//! authors : Erhan Gundogan : https://github.com/erhangundogan,","//!           Burak Yiğit Kaya: https://github.com/BYK","","import moment from '../moment';","        if (number === 0) {  // special case for zero","            return number + '\\'ıncı';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tzl.js","LineCount":83,"CharCount":2957,"Comments":["//! moment.js locale configuration","//! locale : Talossan [tzl]","//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun","","","import moment from '../moment';","// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.","// This is currently too difficult (maybe even impossible) to add.","export default moment.defineLocale('tzl', {","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hours, minutes, isLower) ","function processRelativeTime(number, withoutSuffix, key, isFuture) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tzm-latn.js","LineCount":50,"CharCount":1601,"Comments":["//! moment.js locale configuration","//! locale : Central Atlas Tamazight Latin [tzm-latn]","//! author : Abdel Said : https://github.com/abdelsaid","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\tzm.js","LineCount":50,"CharCount":2223,"Comments":["//! moment.js locale configuration","//! locale : Central Atlas Tamazight [tzm]","//! author : Abdel Said : https://github.com/abdelsaid","","import moment from '../moment';","        dow : 6, // Saturday is the first day of the week.","        doy : 12  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\uk.js","LineCount":138,"CharCount":5205,"Comments":["//! moment.js locale configuration","//! locale : Ukrainian [uk]","//! author : zemlanin : https://github.com/zemlanin","//! Author : Menelion Elensúle : https://github.com/Oire","","import moment from '../moment';","    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason","    meridiemParse: /ночі|ранку|дня|вечора/,","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 1st is the first week of the year.","    }"],"Functions":["function plural(word, num) ","function relativeTimeWithPlural(number, withoutSuffix, key) ","function weekdaysCaseReplace(m, format) ","function processHoursFunction(str) ","    return function () ","        lastWeek: function () ","    isPM: function (input) ","    meridiem : function (hour, minute, isLower) ","    ordinal: function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\uz.js","LineCount":50,"CharCount":1824,"Comments":["//! moment.js locale configuration","//! locale : Uzbek [uz]","//! author : Sardor Muminov : https://github.com/muminoff","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 7  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\vi.js","LineCount":71,"CharCount":2170,"Comments":["//! moment.js locale configuration","//! locale : Vietnamese [vi]","//! author : Bang Nguyen : https://github.com/bangnk","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    isPM : function (input) ","    meridiem : function (hours, minutes, isLower) ","    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\x-pseudo.js","LineCount":59,"CharCount":2075,"Comments":["//! moment.js locale configuration","//! locale : Pseudo [x-pseudo]","//! author : Andrew Hood : https://github.com/andrewhood125","","import moment from '../moment';","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    ordinal : function (number) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\zh-cn.js","LineCount":119,"CharCount":3981,"Comments":["//! moment.js locale configuration","//! locale : Chinese (China) [zh-cn]","//! author : suupic : https://github.com/suupic","//! author : Zeno Zeng : https://github.com/zenozeng","","import moment from '../moment';","            // '中午'","            return hour \u003e= 11 ? hour : hour + 12;","        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效","        dow : 1, // Monday is the first day of the week.","        doy : 4  // The week that contains Jan 4th is the first week of the year.","    }"],"Functions":["    meridiemHour: function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) ","        sameDay : function () ","        nextDay : function () ","        lastDay : function () ","        nextWeek : function () ","        lastWeek : function () ","    ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\locale\\zh-tw.js","LineCount":95,"CharCount":2927,"Comments":["//! moment.js locale configuration","//! locale : Chinese (Taiwan) [zh-tw]","//! author : Ben : https://github.com/ben-lin","//! author : Chris Lam : https://github.com/hehachris","","import moment from '../moment';"],"Functions":["    meridiemHour : function (hour, meridiem) ","    meridiem : function (hour, minute, isLower) ","    ordinal : function (number, period) "],"Dependencies":null},{"FileName":"node_modules\\moment\\src\\moment.js","LineCount":83,"CharCount":2322,"Comments":["//! moment.js","//! version : 2.14.1","//! authors : Tim Wood, Iskren Chernev, Moment.js contributors","//! license : MIT","//! momentjs.com","","import { hooks as moment, setHookCallback } from './lib/utils/hooks';"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\mongodb\\index.js","LineCount":51,"CharCount":1598,"Comments":["// Core module","var core = require('mongodb-core'),","// Set up the connect function","var connect = require('./lib/mongo_client').connect;","// Expose error class","connect.MongoError = core.MongoError;","// Actual driver classes exported","connect.Admin = require('./lib/admin');","// BSON types exported","connect.Binary = core.BSON.Binary;","// Add connect method","connect.connect = connect;","// Set up the instrumentation method","connect.instrument = function(options, callback) {","// Set our exports to be the connect function","module.exports = connect;"],"Functions":["// Set up the connect function","connect.instrument = function(options, callback) ","  if(typeof options == 'function') callback = options, options = };","// Set our exports to be the connect function"],"Dependencies":["mongodb-core","./lib/apm","./lib/mongo_client","./lib/admin","./lib/mongo_client","./lib/db","./lib/collection","./lib/server","./lib/replset","./lib/mongos","./lib/read_preference","./lib/gridfs/grid_store","./lib/gridfs/chunk","./lib/cursor","./lib/gridfs-stream"]},{"FileName":"node_modules\\mongodb\\lib\\admin.js","LineCount":582,"CharCount":17985,"Comments":["/**"," * @fileOverview The **Admin** class is an internal class that allows convenient access to"," * the admin functionality and commands for MongoDB."," *"," * **ADMIN Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Use the admin database for the operation"," *   var adminDb = db.admin();"," *"," *   // List all the available databases"," *   adminDb.listDatabases(function(err, dbs) {"," *     test.equal(null, err);"," *     test.ok(dbs.databases.length \u003e 0);"," *     db.close();"," *   });"," * });"," */","","/**"," * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @return {Admin} a collection instance."," */","var Admin = function(db, topology, promiseLibrary) {","  // Internal state","  this.s = {","/**"," * The callback format for results"," * @callback Admin~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","/**"," * Execute a command"," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.command = function(command, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(command, options, function(err, doc) {","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Retrieve the server information for the current"," * instance of the db client"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.buildInfo = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.serverInfo(callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Retrieve the server information for the current"," * instance of the db client"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.serverInfo = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({buildinfo:1}, function(err, doc) {","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Retrieve this db's server status."," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.serverStatus = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return serverStatus(self, callback)","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Retrieve the current profiling Level for MongoDB"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.profilingLevel = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return profilingLevel(self, callback)","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Ping the MongoDB server and retrieve results"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.ping = function(options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({ping: 1}, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Authenticate a user against the server."," * @method"," * @param {string} username The username."," * @param {string} [password] The password."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.authenticate = function(username, password, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.authenticate(username, password, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Logout user from server, fire off on all connections and remove all auth info"," * @method"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.logout = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.logout({authdb: 'admin'}, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","// Get write concern","var writeConcern = function(options, db) {","  // If options already contain write concerns return it","  if(options.w || options.wtimeout || options.j || options.fsync) {","  // Set db write concern if available","  if(db.writeConcern) {","  // Return modified options","  return options;","/**"," * Add a user to the database."," * @method"," * @param {string} username The username."," * @param {string} password The password."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)"," * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.addUser = function(username, password, options, callback) {","  // Get the options","  options = writeConcern(options, self.s.db)","  // Set the db name to admin","  options.dbName = 'admin';","  // Execute using callback","  if(typeof callback == 'function')","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Remove a user from a database"," * @method"," * @param {string} username The username."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.removeUser = function(username, options, callback) {","  // Get the options","  options = writeConcern(options, self.s.db)","  // Set the db name","  options.dbName = 'admin';","  // Execute using callback","  if(typeof callback == 'function')","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Set the current profiling level of MongoDB"," *"," * @param {string} level The new profiling level (off, slow_only, all)."," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.setProfilingLevel = function(level, callback) {","  // Execute using callback","  if(typeof callback == 'function') return setProfilingLevel(self, level, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Set up the profile number","  command['profile'] = profile;","/**"," * Retrive the current profiling information for MongoDB"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.profilingInfo = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return profilingInfo(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Validate an existing collection"," *"," * @param {string} collectionName The name of the collection to validate."," * @param {object} [options=null] Optional settings."," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.validateCollection = function(collectionName, options, callback) {","  // Execute using callback","  if(typeof callback == 'function')","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Decorate command with extra options","  for(var i = 0; i \u003c keys.length; i++) {","/**"," * List the available databases"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.listDatabases = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return self.s.db.executeDbAdminCommand({listDatabases:1}, {}, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Get ReplicaSet status"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.replSetGetStatus = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return replSetGetStatus(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {"],"Functions":[" * the admin functionality and commands for MongoDB."," * MongoClient.connect(url, function(err, db) "," *   adminDb.listDatabases(function(err, dbs) ","var Admin = function(db, topology, promiseLibrary) ","Admin.prototype.command = function(command, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(command, options, function(err, doc) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.executeDbAdminCommand(command, options, function(err, doc) ","Admin.prototype.buildInfo = function(callback) ","  if(typeof callback == 'function') return this.serverInfo(callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.serverInfo(function(err, r) ","Admin.prototype.serverInfo = function(callback) ","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(buildinfo:1}, function(err, doc) {","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.executeDbAdminCommand(buildinfo:1}, function(err, doc) {","Admin.prototype.serverStatus = function(callback) ","  if(typeof callback == 'function') return serverStatus(self, callback)","  return new this.s.promiseLibrary(function(resolve, reject) ","    serverStatus(self, function(err, r) ","var serverStatus = function(self, callback) ","  self.s.db.executeDbAdminCommand(serverStatus: 1}, function(err, doc) {","Admin.prototype.profilingLevel = function(callback) ","  if(typeof callback == 'function') return profilingLevel(self, callback)","  return new this.s.promiseLibrary(function(resolve, reject) ","    profilingLevel(self, function(err, r) ","var profilingLevel = function(self, callback) ","  self.s.db.executeDbAdminCommand(profile:-1}, function(err, doc) {","Admin.prototype.ping = function(options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(ping: 1}, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.executeDbAdminCommand(ping: 1}, function(err, r) {","Admin.prototype.authenticate = function(username, password, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return this.s.db.authenticate(username, password, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.authenticate(username, password, options, function(err, r) ","Admin.prototype.logout = function(callback) ","  if(typeof callback == 'function') return this.s.db.logout(authdb: 'admin'}, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.logout(authdb: 'admin'}, function(err, r) {","var writeConcern = function(options, db) ","Admin.prototype.addUser = function(username, password, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function')","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.addUser(username, password, options, function(err, r) ","Admin.prototype.removeUser = function(username, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function')","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.removeUser(username, options, function(err, r) ","Admin.prototype.setProfilingLevel = function(level, callback) ","  if(typeof callback == 'function') return setProfilingLevel(self, level, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    setProfilingLevel(self, level, function(err, r) ","var setProfilingLevel = function(self, level, callback) ","  self.s.db.executeDbAdminCommand(command, function(err, doc) ","Admin.prototype.profilingInfo = function(callback) ","  if(typeof callback == 'function') return profilingInfo(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    profilingInfo(self, function(err, r) ","var profilingInfo = function(self, callback) ","Admin.prototype.validateCollection = function(collectionName, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function')","  return new this.s.promiseLibrary(function(resolve, reject) ","    validateCollection(self, collectionName, options, function(err, r) ","var validateCollection = function(self, collectionName, options, callback) ","  self.s.db.command(command, function(err, doc) ","Admin.prototype.listDatabases = function(callback) ","  if(typeof callback == 'function') return self.s.db.executeDbAdminCommand(listDatabases:1}, {}, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.executeDbAdminCommand(listDatabases:1}, {}, function(err, r) {","Admin.prototype.replSetGetStatus = function(callback) ","  if(typeof callback == 'function') return replSetGetStatus(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    replSetGetStatus(self, function(err, r) ","var replSetGetStatus = function(self, callback) ","  self.s.db.executeDbAdminCommand(replSetGetStatus:1}, function(err, doc) {"],"Dependencies":["./utils","./metadata","./utils","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\aggregation_cursor.js","LineCount":446,"CharCount":13561,"Comments":["/**"," * @fileOverview The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query. It supports"," * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X"," * or higher stream"," *"," * **AGGREGATIONCURSOR Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *     // Show that duplicate records got dropped"," *     col.aggregation({}, {cursor: {}}).toArray(function(err, items) {"," *       test.equal(null, err);"," *       test.equal(4, items.length);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the browser."," * @external Readable"," */","","/**"," * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class AggregationCursor"," * @extends external:Readable"," * @fires AggregationCursor#data"," * @fires AggregationCursor#end"," * @fires AggregationCursor#close"," * @fires AggregationCursor#readable"," * @return {AggregationCursor} an AggregationCursor instance."," */","var AggregationCursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  // MaxTimeMS","  var maxTimeMS = null;","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Set up","  Readable.call(this, {objectMode: true});","  // Internal state","  this.s = {","    // MaxTimeMS","      maxTimeMS: maxTimeMS","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespae","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology Options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","/**"," * AggregationCursor stream data event, fired for each document in the cursor."," *"," * @event AggregationCursor#data"," * @type {object}"," */","","/**"," * AggregationCursor stream end event"," *"," * @event AggregationCursor#end"," * @type {null}"," */","","/**"," * AggregationCursor stream close event"," *"," * @event AggregationCursor#close"," * @type {null}"," */","","/**"," * AggregationCursor stream readable event"," *"," * @event AggregationCursor#readable"," * @type {null}"," */","","// Inherit from Readable","// Inherit from Readable","inherits(AggregationCursor, Readable);","// Set the methods to inherit from prototype","var methodsToInherit = ['_next', 'next', 'each', 'forEach', 'toArray'","// Extend the Cursor","for(var name in CoreCursor.prototype) {","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {AggregationCursor}"," */","AggregationCursor.prototype.batchSize = function(value) {","/**"," * Add a geoNear stage to the aggregation pipeline"," * @method"," * @param {object} document The geoNear stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.geoNear = function(document) {","/**"," * Add a group stage to the aggregation pipeline"," * @method"," * @param {object} document The group stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.group = function(document) {","/**"," * Add a limit stage to the aggregation pipeline"," * @method"," * @param {number} value The state limit value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.limit = function(value) {","/**"," * Add a match stage to the aggregation pipeline"," * @method"," * @param {object} document The match stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.match = function(document) {","/**"," * Add a maxTimeMS stage to the aggregation pipeline"," * @method"," * @param {number} value The state maxTimeMS value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.maxTimeMS = function(value) {","/**"," * Add a out stage to the aggregation pipeline"," * @method"," * @param {number} destination The destination name."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.out = function(destination) {","/**"," * Add a project stage to the aggregation pipeline"," * @method"," * @param {object} document The project stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.project = function(document) {","/**"," * Add a lookup stage to the aggregation pipeline"," * @method"," * @param {object} document The lookup stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.lookup = function(document) {","/**"," * Add a redact stage to the aggregation pipeline"," * @method"," * @param {object} document The redact stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.redact = function(document) {","/**"," * Add a skip stage to the aggregation pipeline"," * @method"," * @param {number} value The state skip value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.skip = function(value) {","/**"," * Add a sort stage to the aggregation pipeline"," * @method"," * @param {object} document The sort stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.sort = function(document) {","/**"," * Add a unwind stage to the aggregation pipeline"," * @method"," * @param {number} field The unwind field name."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.unwind = function(field) {","// Inherited methods","define.classMethod('toArray', {callback: true, promise:true});","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @function AggregationCursor.prototype.next"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback AggregationCursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed. In that case,"," * cursor.rewind() can be used to reset the cursor."," * @method AggregationCursor.prototype.toArray"," * @param {AggregationCursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback AggregationCursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null)} result The result object if the command was executed successfully."," */","","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method AggregationCursor.prototype.each"," * @param {AggregationCursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","","/**"," * Close the cursor, sending a AggregationCursor command and emitting close."," * @method AggregationCursor.prototype.close"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Is the cursor closed"," * @method AggregationCursor.prototype.isClosed"," * @return {boolean}"," */","","/**"," * Execute the explain for the cursor"," * @method AggregationCursor.prototype.explain"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Clone the cursor"," * @function AggregationCursor.prototype.clone"," * @return {AggregationCursor}"," */","","/**"," * Resets the cursor"," * @function AggregationCursor.prototype.rewind"," * @return {AggregationCursor}"," */","","/**"," * The callback format for the forEach iterator method"," * @callback AggregationCursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback AggregationCursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/*"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method AggregationCursor.prototype.forEach"," * @param {AggregationCursor~iteratorCallback} iterator The iteration callback."," * @param {AggregationCursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","","AggregationCursor.INIT = 0;"],"Functions":[" * MongoClient.connect(url, function(err, db) "," *     , a:4, b:4}], {w:1}, function(err, result) {"," *     col.aggregation(}, {cursor: {}}).toArray(function(err, items) {","var AggregationCursor = function(bson, ns, cmd, options, topology, topologyOptions) ","    promiseLibrary = typeof global.Promise == 'function' ?","AggregationCursor.prototype.batchSize = function(value) ","AggregationCursor.prototype.geoNear = function(document) ","AggregationCursor.prototype.group = function(document) ","AggregationCursor.prototype.limit = function(value) ","AggregationCursor.prototype.match = function(document) ","AggregationCursor.prototype.maxTimeMS = function(value) ","AggregationCursor.prototype.out = function(destination) ","AggregationCursor.prototype.project = function(document) ","AggregationCursor.prototype.lookup = function(document) ","AggregationCursor.prototype.redact = function(document) ","AggregationCursor.prototype.skip = function(value) ","AggregationCursor.prototype.sort = function(document) ","AggregationCursor.prototype.unwind = function(field) "," * @function AggregationCursor.prototype.next"," * @function AggregationCursor.prototype.clone"," * @function AggregationCursor.prototype.rewind"],"Dependencies":["util","util","./utils","./utils","./utils","./utils","mongodb-core","events","./read_preference","mongodb-core","stream\").Readable||require(\"readable-stream","./metadata","./cursor","mongodb-core","mongodb-core","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\apm.js","LineCount":608,"CharCount":19760,"Comments":["// Get prototypes","var AggregationCursor = require('./aggregation_cursor'),","  // Optional id generators","  var operationIdGenerator = options.operationIdGenerator || basicOperationIdGenerator;","  // Optional timestamp generator","  var timestampGenerator = options.timestampGenerator || basicTimestampGenerator;","  // Extend with event emitter functionality","  EventEmitter.call(this);","  // Contains all the instrumentation overloads","  this.overloads = [];","  // ---------------------------------------------------------","  //","  // Instrument prototype","  //","  // ---------------------------------------------------------","","  var instrumentPrototype = function(callback) {","    // Classes to support","    var classes = [GridStore, OrderedBulkOperation, UnorderedBulkOperation,","    // Add instrumentations to the available list","    for(var i = 0; i \u003c classes.length; i++) {","    // Return the list of instrumentation points","    callback(null, instrumentations);","  // Did the user want to instrument the prototype","  if(typeof callback == 'function') {","  // ---------------------------------------------------------","  //","  // Server","  //","  // ---------------------------------------------------------","","  // Reference","  var self = this;","  // Names of methods we need to wrap","  var methods = ['command', 'insert', 'update', 'remove'];","  // Prototype","  var proto = core.Server.prototype;","  // Core server method we are going to wrap","  methods.forEach(function(x) {","    // Add to overloaded methods","    self.overloads.push({proto: proto, name:x, func:func});","    // The actual prototype","    proto[x] = function() {","      // Get the aruments","      var args = Array.prototype.slice.call(arguments, 0);","      // Do we have a legacy insert/update/remove command","      if(x == 'insert' \u0026\u0026 !this.lastIsMaster().maxWireVersion) {","        // Get the collection","        var col = ns.split('.');","        // Re-write the command","        commandObj = {","        // Get the collection","        var col = ns.split('.');","        // Re-write the command","        commandObj = {","        // Get the collection","        var col = ns.split('.');","        // Re-write the command","        commandObj = {","        // Skip the insert/update/remove commands as they are executed as actual write commands in 2.6 or higher","        return func.apply(this, args);","      // Get the callback","      var callback = args.pop();","      // Set current callback operation id from the current context or create","      // a new one","      var ourOpId = callback.operationId || operationIdGenerator.next();","      // Get a connection reference for this server instance","      var connection = this.s.pool.get()","      // Emit the start event for the command","      var command = {","        // Returns the command.","        command: commandObj,","        // Returns the database name.","        databaseName: db,","        // Returns the command name.","        commandName: commandName,","        // Returns the driver generated request id.","        requestId: requestId,","        // Returns the driver generated operation id.","        // This is used to link events together such as bulk write operations. OPTIONAL.","        operationId: ourOpId,","        // Returns the connection id for the command. For languages that do not have this,","        // this MUST return the driver equivalent which MUST include the server address and port.","        // The name of this field is flexible to match the object that is returned from the driver.","        connectionId: connection","      // Filter out any sensitive commands","      if(senstiveCommands.indexOf(commandName.toLowerCase())) {","      // Emit the started event","      self.emit('started', command)","      // Start time","      var startTime = timestampGenerator.current();","      // Push our handler callback","      args.push(function(err, r) {","        // If we have an error","        if(err || (r \u0026\u0026 r.result \u0026\u0026 r.result.ok == 0)) {","          // Filter out any sensitive commands","          if(senstiveCommands.indexOf(commandName.toLowerCase())) {","          // If we have write concern 0","          command.reply = {ok:1};","          // Filter out any sensitive commands","          if(senstiveCommands.indexOf(commandName.toLowerCase()) != -1) {","        // Return to caller","        callback(err, r);","      // Apply the call","      func.apply(this, args);","  // ---------------------------------------------------------","  //","  // Bulk Operations","  //","  // ---------------------------------------------------------","","  // Inject ourselves into the Bulk methods","  var methods = ['execute'];","    // Core server method we are going to wrap","    methods.forEach(function(x) {","      // Add to overloaded methods","      self.overloads.push({proto: proto, name:x, func:func});","      // The actual prototype","      proto[x] = function() {","        // Get the aruments","        var args = Array.prototype.slice.call(arguments, 0);","        // Set an operation Id on the bulk object","        this.operationId = operationIdGenerator.next();","        // Get the callback","        var callback = args.pop();","        // If we have a callback use this","        if(typeof callback == 'function') {","            // Return to caller","            callback(err, r);","          // Apply the call","          func.apply(this, args);","  // ---------------------------------------------------------","  //","  // Cursor","  //","  // ---------------------------------------------------------","","  // Inject ourselves into the Cursor methods","  var methods = ['_find', '_getmore', '_killcursor'];","  // Command name translation","  var commandTranslation = {","    // Core server method we are going to wrap","    methods.forEach(function(x) {","      // Add to overloaded methods","      self.overloads.push({proto: proto, name:x, func:func});","      // The actual prototype","      proto[x] = function() {","        // Get the collection","        parts.shift();","        // Set the command","        var command = this.query;","        // If we have a find method, set the operationId on the cursor","        if(x == '_find') {","        // Do we have a find command rewrite it","        if(x == '_getmore') {","          // Options","          if(cmd.skip) command.skip = cmd.skip;","          // Flags","          if(typeof cmd.awaitData == 'boolean') command.awaitData = cmd.awaitData;","          // Read Concern","          if(cmd.readConcern) command.readConcern = cmd.readConcern;","          // Override method","          if(cmd.explain) command.explain = cmd.explain;","          // If we have a explain flag","          if(cmd.explain) {","            // Create fake explain command","            command = {","            // Set readConcern on the command if available","            if(cmd.readConcern) command.readConcern = cmd.readConcern","            // Set up the _explain name for the command","            x = '_explain';","        // Set up the connection","        var connectionId = null;","        // Set local connection","        if(this.connection) connectionId = this.connection;","        // Get the command Name","        var commandName = x == '_find' ? Object.keys(command)[0] : commandTranslation[x];","        // Emit the start event for the command","        var command = {","          // Returns the command.","          command: command,","          // Returns the database name.","          databaseName: db,","          // Returns the command name.","          commandName: commandName,","          // Returns the driver generated request id.","          requestId: requestId,","          // Returns the driver generated operation id.","          // This is used to link events together such as bulk write operations. OPTIONAL.","          operationId: this.operationId,","          // Returns the connection id for the command. For languages that do not have this,","          // this MUST return the driver equivalent which MUST include the server address and port.","          // The name of this field is flexible to match the object that is returned from the driver.","          connectionId: connectionId","        // Get the aruments","        var args = Array.prototype.slice.call(arguments, 0);","        // Get the callback","        var callback = args.pop();","        // We do not have a callback but a Promise","        if(typeof callback == 'function' || command.commandName == 'killCursors') {","          // Emit the started event","          self.emit('started', command)","          // Emit succeeded event with killcursor if we have a legacy protocol","          if(command.commandName == 'killCursors'","            // Emit the succeeded command","            var command = {","            // Emit the command","            return self.emit('succeeded', command)","          // Add our callback handler","          args.push(function(err, r) {","              // Command","              var command = {","              // Emit the command","              self.emit('failed', command)","              // Do we have a getMore","              if(commandName.toLowerCase() == 'getmore' \u0026\u0026 r == null) {","              // cursor id is zero, we can issue success command","              var command = {","              // Emit the command","              self.emit('succeeded', command)","            // Return","            if(!callback) return;","            // Return to caller","            callback(err, r);","          // Apply the call","          func.apply(this, args);","          // Assume promise, push back the missing value","          args.push(callback);","          // Get the promise","          var promise = func.apply(this, args);","          // Return a new promise","          return new cursor.s.promiseLibrary(function(resolve, reject) {","            // Emit the started event","            self.emit('started', command)","            // Execute the function","            promise.then(function(r) {","              // cursor id is zero, we can issue success command","              var command = {","              // Emit the command","              self.emit('succeeded', command)","              // Command","              var command = {","              // Emit the command","              self.emit('failed', command)","              // reject the promise","              reject(err);","  // Remove all listeners","  this.removeAllListeners('started');"],"Functions":["  next: function() ","  current: function() ","  duration: function(start, end) ","var Instrumentation = function(core, options, callback) ","  // Extend with event emitter functionality","  var instrumentPrototype = function(callback) ","  if(typeof callback == 'function') ","  methods.forEach(function(x) ","    proto[x] = function() ","      args.push(function(err, r) ","  prototypes.forEach(function(proto) ","    methods.forEach(function(x) ","      proto[x] = function() ","        if(typeof callback == 'function') ","          args.push(function(err, r) ","  prototypes.forEach(function(proto) ","    methods.forEach(function(x) ","      proto[x] = function() ","        if(typeof callback == 'function' || command.commandName == 'killCursors') ","          args.push(function(err, r) ","          return new cursor.s.promiseLibrary(function(resolve, reject) ","            // Execute the function","            promise.then(function(r) ","            }).catch(function(err) ","Instrumentation.prototype.uninstrument = function() "],"Dependencies":["events","util","./aggregation_cursor","./command_cursor","./bulk/ordered","./bulk/unordered","./gridfs/grid_store","./server","./replset","./mongos","./cursor","./collection","./db","./admin"]},{"FileName":"node_modules\\mongodb\\lib\\bulk\\common.js","LineCount":432,"CharCount":10977,"Comments":["// Error codes","var UNKNOWN_ERROR = 8;","// Insert types","var INSERT = 1;","// Get write concern","var writeConcern = function(target, col, options) {","/**"," * Helper function to define properties"," * @ignore"," */","var defineReadOnlyProperty = function(self, name, value) {","/**"," * Keeps the state of a unordered batch so we can rewrite the results"," * correctly after command execution"," * @ignore"," */","var Batch = function(batchType, originalZeroIndex) {","/**"," * Wraps a legacy operation so we can correctly rewrite it's error"," * @ignore"," */","var LegacyOp = function(batchType, operation, index) {","/**"," * Create a new BulkWriteResult instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {boolean} ok Did bulk operation correctly execute"," * @property {number} nInserted number of inserted documents"," * @property {number} nUpdated number of documents updated logically"," * @property {number} nUpserted Number of upserted documents"," * @property {number} nModified Number of documents updated physically on disk"," * @property {number} nRemoved Number of removed documents"," * @return {BulkWriteResult} a BulkWriteResult instance"," */","var BulkWriteResult = function(bulkResult) {","  /**","   * Return an array of inserted ids","   *","   * @return {object[]}","   */","  this.getInsertedIds = function() {","  /**","   * Return an array of upserted ids","   *","   * @return {object[]}","   */","  this.getUpsertedIds = function() {","  /**","   * Return the upserted id at position x","   *","   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index","   * @return {object}","   */","  this.getUpsertedIdAt = function(index) {","  /**","   * Return raw internal result","   *","   * @return {object}","   */","  this.getRawResponse = function() {","  /**","   * Returns true if the bulk operation contains a write error","   *","   * @return {boolean}","   */","  this.hasWriteErrors = function() {","  /**","   * Returns the number of write errors off the bulk operation","   *","   * @return {number}","   */","  this.getWriteErrorCount = function() {","  /**","   * Returns a specific write error object","   *","   * @return {WriteError}","   */","  this.getWriteErrorAt = function(index) {","  /**","   * Retrieve all write errors","   *","   * @return {object[]}","   */","  this.getWriteErrors = function() {","  /**","   * Retrieve lastOp if available","   *","   * @return {object}","   */","  this.getLastOp = function() {","  /**","   * Retrieve the write concern error if any","   *","   * @return {WriteConcernError}","   */","  this.getWriteConcernError = function() {","      // Return the error","      return bulkResult.writeConcernErrors[0];","      // Combine the errors","      var errmsg = \"\";","        // TODO: Something better","        if(i == 0) errmsg = errmsg + \" and \";","/**"," * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {number} code Write concern error code."," * @property {string} errmsg Write concern error message."," * @return {WriteConcernError} a WriteConcernError instance"," */","var WriteConcernError = function(err) {","  // Define properties","  defineReadOnlyProperty(this, \"code\", err.code);","/**"," * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {number} code Write concern error code."," * @property {number} index Write concern error original bulk operation index."," * @property {string} errmsg Write concern error message."," * @return {WriteConcernError} a WriteConcernError instance"," */","var WriteError = function(err) {","  // Define properties","  defineReadOnlyProperty(this, \"code\", err.code);","  //","  // Define access methods","  this.getOperation = function() {","/**"," * Merges results into shared data structure"," * @ignore"," */","var mergeBatchResults = function(ordered, batch, bulkResult, err, result) {","  // If we have an error set the result to be the err object","  if(err) {","  // Do we have a top level error stop processing and return","  if(result.ok == 0 \u0026\u0026 bulkResult.ok == 1) {","  // Deal with opTime if available","  if(result.opTime || result.lastOp) {","    // We have a time stamp","    if(opTime instanceof Timestamp) {","      // Existing TS","      if(bulkResult.lastOp) {","      // Current OpTime TS","      var opTimeTS = typeof opTime.ts == 'number'","      // Compare the opTime's","      if(bulkResult.lastOp == null) {","  // If we have an insert Batch type","  if(batch.batchType == INSERT \u0026\u0026 result.n) {","  // If we have an insert Batch type","  if(batch.batchType == REMOVE \u0026\u0026 result.n) {","  // We have an array of upserted values, we need to rewrite the indexes","  if(Array.isArray(result.upserted)) {","  // If we have an update Batch type","  if(batch.batchType == UPDATE \u0026\u0026 result.n) {","//","// Clone the options","var cloneOptions = function(options) {","// Exports symbols","exports.BulkWriteResult = BulkWriteResult;"],"Functions":["var writeConcern = function(target, col, options) "," * Helper function to define properties","var defineReadOnlyProperty = function(self, name, value) ","    , get: function() ","var Batch = function(batchType, originalZeroIndex) ","var LegacyOp = function(batchType, operation, index) ","var BulkWriteResult = function(bulkResult) ","  this.getInsertedIds = function() ","  this.getUpsertedIds = function() ","  this.getUpsertedIdAt = function(index) ","  this.getRawResponse = function() ","  this.hasWriteErrors = function() ","  this.getWriteErrorCount = function() ","  this.getWriteErrorAt = function(index) ","  this.getWriteErrors = function() ","  this.getLastOp = function() ","  this.getWriteConcernError = function() ","  this.toJSON = function() ","  this.toString = function() ","  this.isOk = function() ","var WriteConcernError = function(err) ","  this.toJSON = function() ","  this.toString = function() ","var WriteError = function(err) ","  this.getOperation = function() ","  this.toJSON = function() ","  this.toString = function() ","var mergeBatchResults = function(ordered, batch, bulkResult, err, result) ","var cloneOptions = function(options) "],"Dependencies":["../utils","mongodb-core","mongodb-core"]},{"FileName":"node_modules\\mongodb\\lib\\bulk\\ordered.js","LineCount":538,"CharCount":15965,"Comments":["/**"," * Create a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @return {FindOperatorsOrdered} a FindOperatorsOrdered instance."," */","var FindOperatorsOrdered = function(self) {","/**"," * Add a single update document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.update = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","/**"," * Add a single update one document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.updateOne = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","/**"," * Add a replace one operation to the bulk operation"," *"," * @method"," * @param {object} doc the new document to replace the existing one with"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.replaceOne = function(updateDocument) {","/**"," * Upsert modifier for update bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {FindOperatorsOrdered}"," */","FindOperatorsOrdered.prototype.upsert = function() {","/**"," * Add a remove one operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.deleteOne = function() {","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","// Backward compatibility","FindOperatorsOrdered.prototype.removeOne = FindOperatorsOrdered.prototype.deleteOne;","/**"," * Add a remove operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.delete = function() {","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","// Backward compatibility","FindOperatorsOrdered.prototype.remove = FindOperatorsOrdered.prototype.delete;","// Add to internal list of documents","var addToOperationsList = function(_self, docType, document) {","  // Get the bsonSize","  var bsonSize = bson.calculateObjectSize(document, false);","  // Throw error if the doc is bigger than the max BSON size","  if(bsonSize \u003e= _self.s.maxBatchSizeBytes) {","  // Create a new batch object if we don't have a current one","  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","  // Check if we need to create a new batch","  if(((_self.s.currentBatchSize + 1) \u003e= _self.s.maxWriteBatchSize)","    // Save the batch to the execution stack","    _self.s.batches.push(_self.s.currentBatch);","    // Create a new batch","    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","    // Reset the current size trackers","    _self.s.currentBatchSize = 0;","    // Update current batch size","    _self.s.currentBatchSize = _self.s.currentBatchSize + 1;","  // We have an array of documents","  if(Array.isArray(document)) {","  // Return self","  return _self;","/**"," * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {number} length Get the number of operations in the bulk."," * @return {OrderedBulkOperation} a OrderedBulkOperation instance."," */","function OrderedBulkOperation(topology, collection, options) {","\t// TODO Bring from driver information in isMaster","\tvar self = this;","\t// Current item","\tvar currentOp = null;","\t// Handle to the bson serializer, used to calculate running sizes","\tvar bson = topology.bson;","\t// Namespace for the operation","  var namespace = collection.collectionName;","  // Set max byte size","\tvar maxBatchSizeBytes = topology.isMasterDoc \u0026\u0026 topology.isMasterDoc.maxBsonObjectSize","  // Get the write concern","  var writeConcern = common.writeConcern(shallowClone(options), collection, options);","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Current batch","  var currentBatch = null;","  // Final results","  var bulkResult = {","  // Internal state","  this.s = {","    // Final result","      bulkResult: bulkResult","    // Current batch state","    , currentBatch: null","    // Write concern","    , writeConcern: writeConcern","    // Max batch size options","    , maxBatchSizeBytes: maxBatchSizeBytes","    // Namespace","    , namespace: namespace","    // BSON","    , bson: bson","    // Topology","    , topology: topology","    // Options","    , options: options","    // Current operation","    , currentOp: currentOp","    // Executed","    , executed: executed","    // Collection","    , collection: collection","    // Promise Library","    , promiseLibrary: promiseLibrary","\t\t// Fundamental error","\t\t, err: null","    // Bypass validation","    , bypassDocumentValidation: typeof options.bypassDocumentValidation == 'boolean' ? options.bypassDocumentValidation : false","  // Set up the force server object id","  var forceServerObjectId = typeof this.s.options.forceServerObjectId == 'boolean'","  // Update operations","  if((op.updateOne \u0026\u0026 op.updateOne.q)","  // Crud spec update format","  if(op.updateOne || op.updateMany || op.replaceOne) {","  // Remove operations","  if(op.removeOne || op.removeMany || (op.deleteOne \u0026\u0026 op.deleteOne.q) || op.deleteMany \u0026\u0026 op.deleteMany.q) {","  // Crud spec delete operations, less efficient","  if(op.deleteOne || op.deleteMany) {","  // Insert operations","  if(op.insertOne \u0026\u0026 op.insertOne.document == null) {","  // No valid type of operation","  throw toError(\"bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany\");","/**"," * Add a single insert document to the bulk operation"," *"," * @param {object} doc the document to insert"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","OrderedBulkOperation.prototype.insert = function(document) {","/**"," * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne"," *"," * @method"," * @param {object} selector The selector for the bulk operation."," * @throws {MongoError}"," * @return {FindOperatorsOrdered}"," */","OrderedBulkOperation.prototype.find = function(selector) {","  // Save a current selector","  this.s.currentOp = {","//","// Execute next write command in a chain","var executeCommands = function(self, callback) {","  // Ordered execution of the command","  var batch = self.s.batches.shift();","\t\t// Error is a driver related error not a bulk op error, terminate","\t\tif(err \u0026\u0026 err.driver || err \u0026\u0026 err.message) {","    // If we have and error","    if(err) err.ok = 0;","    // Merge the results together","    var mergeResult = mergeBatchResults(true, batch, self.s.bulkResult, err, result);","    // If we are ordered and have errors and they are","    // not all replication errors terminate the operation","    if(self.s.bulkResult.writeErrors.length \u003e 0) {","    // Execute the next command in line","    executeCommands(self, callback);","\t// Set an operationIf if provided","\tif(self.operationId) {","\t// Serialize functions","\tif(self.s.options.serializeFunctions) {","  // Serialize functions","  if(self.s.options.ignoreUndefined) {","  // Is the bypassDocumentValidation options specific","  if(self.s.bypassDocumentValidation == true) {","    // Force top level error","    err.ok = 0;","    // Merge top level error and return","    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));","/**"," * The callback format for results"," * @callback OrderedBulkOperation~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {BulkWriteResult} result The bulk write result."," */","","/**"," * Execute the ordered bulk operation"," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {OrderedBulkOperation~resultCallback} [callback] The result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","OrderedBulkOperation.prototype.execute = function(_writeConcern, callback) {","  // If we have current batch","  if(this.s.currentBatch) this.s.batches.push(this.s.currentBatch)","  // If we have no operations in the bulk raise an error","  if(this.s.batches.length == 0) {","  // Execute using callback","  if(typeof callback == 'function') {","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Returns an unordered batch object"," * @ignore"," */","var initializeOrderedBulkOp = function(topology, collection, options) {"],"Functions":["var FindOperatorsOrdered = function(self) ","FindOperatorsOrdered.prototype.update = function(updateDocument) ","FindOperatorsOrdered.prototype.updateOne = function(updateDocument) ","FindOperatorsOrdered.prototype.replaceOne = function(updateDocument) ","FindOperatorsOrdered.prototype.upsert = function() ","FindOperatorsOrdered.prototype.deleteOne = function() ","FindOperatorsOrdered.prototype.delete = function() ","var addToOperationsList = function(_self, docType, document) ","function OrderedBulkOperation(topology, collection, options) ","    promiseLibrary = typeof global.Promise == 'function' ?","OrderedBulkOperation.prototype.raw = function(op) ","OrderedBulkOperation.prototype.insert = function(document) ","OrderedBulkOperation.prototype.find = function(selector) ","  get: function() ","var executeCommands = function(self, callback) ","  var resultHandler = function(err, result) ","\t// Serialize functions","  // Serialize functions","OrderedBulkOperation.prototype.execute = function(_writeConcern, callback) ","  if(typeof _writeConcern == 'function') ","  if(typeof callback == 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    executeCommands(self, function(err, r) ","var initializeOrderedBulkOp = function(topology, collection, options) "],"Dependencies":["./common","../utils","../utils","util","../utils","mongodb-core","../metadata","mongodb-core"]},{"FileName":"node_modules\\mongodb\\lib\\bulk\\unordered.js","LineCount":543,"CharCount":16579,"Comments":["/**"," * Create a FindOperatorsUnordered instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {number} length Get the number of operations in the bulk."," * @return {FindOperatorsUnordered} a FindOperatorsUnordered instance."," */","var FindOperatorsUnordered = function(self) {","/**"," * Add a single update document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.update = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","/**"," * Add a single update one document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.updateOne = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","/**"," * Add a replace one operation to the bulk operation"," *"," * @method"," * @param {object} doc the new document to replace the existing one with"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.replaceOne = function(updateDocument) {","/**"," * Upsert modifier for update bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.upsert = function() {","/**"," * Add a remove one operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.removeOne = function() {","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","/**"," * Add a remove operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.remove = function() {","  // Establish the update command","  var document = {","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","//","// Add to the operations list","//","var addToOperationsList = function(_self, docType, document) {","  // Get the bsonSize","  var bsonSize = bson.calculateObjectSize(document, false);","  // Throw error if the doc is bigger than the max BSON size","  if(bsonSize \u003e= _self.s.maxBatchSizeBytes) throw toError(\"document is larger than the maximum size \" + _self.s.maxBatchSizeBytes);","  // Holds the current batch","  _self.s.currentBatch = null;","  // Get the right type of batch","  if(docType == common.INSERT) {","  // Create a new batch object if we don't have a current one","  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","  // Check if we need to create a new batch","  if(((_self.s.currentBatch.size + 1) \u003e= _self.s.maxWriteBatchSize)","    // Save the batch to the execution stack","    _self.s.batches.push(_self.s.currentBatch);","    // Create a new batch","    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","  // We have an array of documents","  if(Array.isArray(document)) {","  // Save back the current Batch to the right type","  if(docType == common.INSERT) {","  // Update current batch size","  _self.s.currentBatch.size = _self.s.currentBatch.size + 1;","  // Return self","  return _self;","/**"," * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @return {UnorderedBulkOperation} a UnorderedBulkOperation instance."," */","var UnorderedBulkOperation = function(topology, collection, options) {","\t// Contains reference to self","\tvar self = this;","\t// Get the namesspace for the write operations","  var namespace = collection.collectionName;","  // Used to mark operation as executed","  var executed = false;","\t// Current item","  // var currentBatch = null;","\tvar currentOp = null;","  // The current Batches for the different operations","  var currentInsertBatch = null;","\t// Handle to the bson serializer, used to calculate running sizes","\tvar bson = topology.bson;","  // Set max byte size","  var maxBatchSizeBytes = topology.isMasterDoc \u0026\u0026 topology.isMasterDoc.maxBsonObjectSize","  // Get the write concern","  var writeConcern = common.writeConcern(shallowClone(options), collection, options);","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Final results","  var bulkResult = {","  // Internal state","  this.s = {","    // Final result","      bulkResult: bulkResult","    // Current batch state","    , currentInsertBatch: null","    // Write concern","    , writeConcern: writeConcern","    // Max batch size options","    , maxBatchSizeBytes: maxBatchSizeBytes","    // Namespace","    , namespace: namespace","    // BSON","    , bson: bson","    // Topology","    , topology: topology","    // Options","    , options: options","    // Current operation","    , currentOp: currentOp","    // Executed","    , executed: executed","    // Collection","    , collection: collection","    // Promise Library","    , promiseLibrary: promiseLibrary","    // Bypass validation","    , bypassDocumentValidation: typeof options.bypassDocumentValidation == 'boolean' ? options.bypassDocumentValidation : false","/**"," * Add a single insert document to the bulk operation"," *"," * @param {object} doc the document to insert"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","UnorderedBulkOperation.prototype.insert = function(document) {","/**"," * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne"," *"," * @method"," * @param {object} selector The selector for the bulk operation."," * @throws {MongoError}"," * @return {FindOperatorsUnordered}"," */","UnorderedBulkOperation.prototype.find = function(selector) {","  // Save a current selector","  this.s.currentOp = {","  // Set up the force server object id","  var forceServerObjectId = typeof this.s.options.forceServerObjectId == 'boolean'","  // Update operations","  if((op.updateOne \u0026\u0026 op.updateOne.q)","  // Crud spec update format","  if(op.updateOne || op.updateMany || op.replaceOne) {","  // Remove operations","  if(op.removeOne || op.removeMany || (op.deleteOne \u0026\u0026 op.deleteOne.q) || op.deleteMany \u0026\u0026 op.deleteMany.q) {","  // Crud spec delete operations, less efficient","  if(op.deleteOne || op.deleteMany) {","  // Insert operations","  if(op.insertOne \u0026\u0026 op.insertOne.document == null) {","  // No valid type of operation","  throw toError(\"bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany\");","//","// Execute the command","var executeBatch = function(self, batch, callback) {","\t\t// Error is a driver related error not a bulk op error, terminate","\t\tif(err \u0026\u0026 err.driver || err \u0026\u0026 err.message) {","    // If we have and error","    if(err) err.ok = 0;","\t// Set an operationIf if provided","\tif(self.operationId) {","\t// Serialize functions","\tif(self.s.options.serializeFunctions) {","  // Is the bypassDocumentValidation options specific","  if(self.s.bypassDocumentValidation == true) {","    // Force top level error","    err.ok = 0;","    // Merge top level error and return","    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));","//","// Execute all the commands","var executeBatches = function(self, callback) {","  // Execute over all the batches","  for(var i = 0; i \u003c self.s.batches.length; i++) {","\t\t\t// Driver layer error capture it","\t\t\tif(err) error = err;","\t\t\t// Count down the number of commands left to execute","      numberOfCommandsToExecute = numberOfCommandsToExecute - 1;","      // Execute","      if(numberOfCommandsToExecute == 0) {","\t\t\t\t// Driver level error","\t\t\t\tif(error) return handleCallback(callback, error);","\t\t\t\t// Treat write errors","        var error = self.s.bulkResult.writeErrors.length \u003e 0 ? toError(self.s.bulkResult.writeErrors[0]) : null;","/**"," * The callback format for results"," * @callback UnorderedBulkOperation~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {BulkWriteResult} result The bulk write result."," */","","/**"," * Execute the ordered bulk operation"," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {UnorderedBulkOperation~resultCallback} [callback] The result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","UnorderedBulkOperation.prototype.execute = function(_writeConcern, callback) {","  // If we have current batch","  if(this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);","  // If we have no operations in the bulk raise an error","  if(this.s.batches.length == 0) {","  // Execute using callback","  if(typeof callback == 'function') return executeBatches(this, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Returns an unordered batch object"," * @ignore"," */","var initializeUnorderedBulkOp = function(topology, collection, options) {"],"Functions":["var FindOperatorsUnordered = function(self) ","FindOperatorsUnordered.prototype.update = function(updateDocument) ","FindOperatorsUnordered.prototype.updateOne = function(updateDocument) ","FindOperatorsUnordered.prototype.replaceOne = function(updateDocument) ","FindOperatorsUnordered.prototype.upsert = function() ","FindOperatorsUnordered.prototype.removeOne = function() ","FindOperatorsUnordered.prototype.remove = function() ","var addToOperationsList = function(_self, docType, document) ","var UnorderedBulkOperation = function(topology, collection, options) ","    promiseLibrary = typeof global.Promise == 'function' ?","UnorderedBulkOperation.prototype.insert = function(document) ","UnorderedBulkOperation.prototype.find = function(selector) ","  get: function() ","UnorderedBulkOperation.prototype.raw = function(op) ","var executeBatch = function(self, batch, callback) ","  var resultHandler = function(err, result) ","\t// Serialize functions","var executeBatches = function(self, callback) ","    executeBatch(self, self.s.batches[i], function(err, result) ","UnorderedBulkOperation.prototype.execute = function(_writeConcern, callback) ","  if(typeof _writeConcern == 'function') ","  if(typeof callback == 'function') return executeBatches(this, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    executeBatches(self, function(err, r) ","var initializeUnorderedBulkOp = function(topology, collection, options) "],"Dependencies":["./common","../utils","../utils","util","../utils","mongodb-core","mongodb-core","../metadata"]},{"FileName":"node_modules\\mongodb\\lib\\collection.js","LineCount":3218,"CharCount":120688,"Comments":["/**"," * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection"," * allowing for insert/update/remove/find and other command operation on that MongoDB collection."," *"," * **COLLECTION Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Show that duplicate records got dropped"," *   col.find({}).toArray(function(err, items) {"," *     test.equal(null, err);"," *     test.equal(4, items.length);"," *     db.close();"," *   });"," * });"," */","","/**"," * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {string} collectionName Get the collection name."," * @property {string} namespace Get the full collection namespace."," * @property {object} writeConcern The current write concern values."," * @property {object} readConcern The current read concern values."," * @property {object} hint Get current index hint for collection."," * @return {Collection} a Collection instance."," */","var Collection = function(db, topology, dbName, name, pkFactory, options) {","  // Unpack variables","  var internalHint = null;","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Assign the right collection level readPreference","  if(options \u0026\u0026 options.readPreference) {","  // Set custom primary key factory if provided","  pkFactory = pkFactory == null","  // Internal state","  this.s = {","    // Set custom primary key factory if provided","      pkFactory: pkFactory","    // Db","    , db: db","    // Topology","    , topology: topology","    // dbName","    , dbName: dbName","    // Options","    , options: options","    // Namespace","    , namespace: namespace","    // Read preference","    , readPreference: readPreference","    // Raw","    , raw: raw","    // SlaveOK","    , slaveOk: slaveOk","    // Serialize functions","    , serializeFunctions: serializeFunctions","    // internalHint","    , internalHint: internalHint","    // collectionHint","    , collectionHint: collectionHint","    // Name","    , name: name","    // Promise library","    , promiseLibrary: promiseLibrary","    // Read Concern","    , readConcern: options.readConcern","/**"," * @ignore"," */","Object.defineProperty(Collection.prototype, \"hint\", {","/**"," * Creates a cursor for a query that can be used to iterate over results from MongoDB"," * @method"," * @param {object} query The cursor query object."," * @throws {MongoError}"," * @return {Cursor}"," */","Collection.prototype.find = function() {","    // backwards compat for callback?, options case","    selector = {};","    // Rewrite the array","    for(var i = 0; i \u003c fields.length; i++) {","    // Set the fields","    fields = newFields;","  // Ensure selector is not null","  selector = selector == null ? {} : selector;","  // Validate correctness off the selector","  var object = selector;","  // Validate correctness of the field selector","  var object = fields;","  // Check special case where we are using an objectId","  if(selector instanceof ObjectID || (selector != null \u0026\u0026 selector._bsontype == 'ObjectID')) {","  // If it's a serialized fields field we need to just let it through","  // user be warned it better be good","  if(options \u0026\u0026 options.fields \u0026\u0026 !(Buffer.isBuffer(options.fields))) {","  // Make a shallow copy of options","  for (var key in options) {","  // Unpack options","  newOptions.skip = len \u003e 3 ? args[2] : options.skip ? options.skip : 0;","  // // If we have overridden slaveOk otherwise use the default db setting","  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;","  // Add read preference if needed","  newOptions = getReadPreference(this, newOptions, this.s.db, this);","  // Set slave ok to true if read preference different from primary","  if(newOptions.readPreference != null","  // Ensure the query is an object","  if(selector != null \u0026\u0026 typeof selector != 'object') {","  // Build the find command","  var findCommand = {","  // Ensure we use the right await data option","  if(typeof newOptions.awaitdata == 'boolean')  {","  // Translate to new command option noCursorTimeout","  if(typeof newOptions.timeout == 'boolean') newOptions.noCursorTimeout = newOptions.timeout;","  // Merge in options to command","  for(var name in newOptions) {","  // Format the fields","  var formatFields = function(fields) {","  // Special treatment for the fields selector","  if(fields) findCommand.fields = formatFields(fields);","  // Add db object to the new options","  newOptions.db = this.s.db;","  // Add the promise library","  newOptions.promiseLibrary = this.s.promiseLibrary;","  // Set raw if available at collection level","  if(newOptions.raw == null \u0026\u0026 this.s.raw) newOptions.raw = this.s.raw;","  // Sort options","  if(findCommand.sort)","  // Set the readConcern","  if(this.s.readConcern) {","  // Create the cursor","  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));","/**"," * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object} doc Document to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.insertOne = function(doc, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return insertOne(self, doc, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Workaround for pre 2.6 servers","    if(r == null) return callback(null, {result: {ok:1}});","    // Add values to top level to ensure crud spec compatibility","    r.insertedCount = r.result.n;","/**"," * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object[]} docs Documents to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~insertWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.insertMany = function(docs, options, callback) {","  // Get the write concern options","  if(typeof options.checkKeys != 'boolean') {","  // If keep going set unordered","  options['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;","  // Set up the force server object id","  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'","  // Do we want to force the server to assign the _id key","  if(forceServerObjectId !== true) {","    // Add _id if not specified","    for(var i = 0; i \u003c docs.length; i++) {","  // Generate the bulk write operations","  var operations = [{","  // Execute using callback","  if(typeof callback == 'function') return bulkWrite(self, operations, options, function(err, r) {","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * @typedef {Object} Collection~BulkWriteOpResult"," * @property {number} insertedCount Number of documents inserted."," * @property {number} matchedCount Number of documents matched for update."," * @property {number} modifiedCount Number of documents modified."," * @property {number} deletedCount Number of documents deleted."," * @property {number} upsertedCount Number of documents upserted."," * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation"," * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation"," * @property {object} result The command result object."," */","","/**"," * The callback format for inserts"," * @callback Collection~bulkWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Perform a bulkWrite operation without a fluent API"," *"," * Legal operation types are"," *"," *  { insertOne: { document: { a: 1 } } }"," *"," *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }"," *"," *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }"," *"," *  { deleteOne: { filter: {c:1} } }"," *"," *  { deleteMany: { filter: {c:1} } }"," *"," *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}"," *"," * If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object[]} operations Bulk operations to perform."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~bulkWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.bulkWrite = function(operations, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return bulkWrite(self, operations, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Add ignoreUndfined","  if(self.s.options.ignoreUndefined) {","  // Create the bulk operation","  var bulk = options.ordered == true || options.ordered == null ? self.initializeOrderedBulkOp(options) : self.initializeUnorderedBulkOp(options);","  // for each op go through and add to the bulk","  try {","  // Final options for write concern","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // Execute the bulk","  bulk.execute(writeCon, function(err, r) {","    // We have connection level error","    if(!r \u0026\u0026 err) return callback(err, null);","    // We have single error","    if(r \u0026\u0026 r.hasWriteErrors() \u0026\u0026 r.getWriteErrorCount() == 1) {","    // if(err) return callback(err);","    r.insertedCount = r.nInserted;","    // Update the n","    r.n = r.insertedCount;","    // Inserted documents","    var inserted = r.getInsertedIds();","    // Map inserted ids","    for(var i = 0; i \u003c inserted.length; i++) {","    // Upserted documents","    var upserted = r.getUpsertedIds();","    // Map upserted ids","    for(var i = 0; i \u003c upserted.length; i++) {","    // Check if we have write errors","    if(r.hasWriteErrors()) {","      // Get all the errors","      var errors = r.getWriteErrors();","      // Return the MongoError object","      return callback(toError({","    // Check if we have a writeConcern error","    if(r.getWriteConcernError()) {","      // Return the MongoError object","      return callback(toError(r.getWriteConcernError()), r);","    // Return the results","    callback(null, r);","  // Ensure we are operating on an array op docs","  docs = Array.isArray(docs) ? docs : [docs];","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // If keep going set unordered","  if(finalOptions.keepGoing == true) finalOptions.ordered = false;","  // Set up the force server object id","  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'","  // Add _id if not specified","  if(forceServerObjectId !== true){","  // File inserts","  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {","    // Add docs to the list","    result.ops = docs;","    // Return the results","    handleCallback(callback, null, result);","/**"," * @typedef {Object} Collection~WriteOpResult"," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {object} connection The connection object used for the operation."," * @property {object} result The command result object."," */","","/**"," * The callback format for inserts"," * @callback Collection~writeOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~WriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * @typedef {Object} Collection~insertWriteOpResult"," * @property {Number} insertedCount The total amount of documents inserted."," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {ObjectId[]} insertedIds All the generated _id's for the inserted documents."," * @property {object} connection The connection object used for the operation."," * @property {object} result The raw command result object returned from MongoDB (content might vary by server version)."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents inserted."," */","","/**"," * @typedef {Object} Collection~insertOneWriteOpResult"," * @property {Number} insertedCount The total amount of documents inserted."," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation."," * @property {object} connection The connection object used for the operation."," * @property {object} result The raw command result object returned from MongoDB (content might vary by server version)."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents inserted."," */","","/**"," * The callback format for inserts"," * @callback Collection~insertWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * The callback format for inserts"," * @callback Collection~insertOneWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {(object|object[])} docs Documents to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~insertWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use insertOne, insertMany or bulkWrite"," */","Collection.prototype.insert = function(docs, options, callback) {","/**"," * @typedef {Object} Collection~updateWriteOpResult"," * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents scanned."," * @property {Number} result.nModified The total count of documents modified."," * @property {Object} connection The connection object used for the operation."," * @property {Number} matchedCount The number of documents that matched the filter."," * @property {Number} modifiedCount The number of documents that were modified."," * @property {Number} upsertedCount The number of documents upserted."," * @property {Object} upsertedId The upserted id."," * @property {ObjectId} upsertedId._id The upserted _id returned from the server."," */","","/**"," * The callback format for inserts"," * @callback Collection~updateWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Update a single document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} update The update operations to be applied to the document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.updateOne = function(filter, update, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return updateOne(self, filter, update, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Set single document update","  options.multi = false;","  // Execute update","  updateDocuments(self, filter, update, options, function(err, r) {","/**"," * Replace a document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} doc The Document that replaces the matching document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.replaceOne = function(filter, update, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return replaceOne(self, filter, update, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Set single document update","  options.multi = false;","  // Execute update","  updateDocuments(self, filter, update, options, function(err, r) {","/**"," * Update multiple documents on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} update The update operations to be applied to the document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.updateMany = function(filter, update, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return updateMany(self, filter, update, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Set single document update","  options.multi = true;","  // Execute update","  updateDocuments(self, filter, update, options, function(err, r) {","  // If we are not providing a selector or document throw","  if(selector == null || typeof selector != 'object') return callback(toError(\"selector must be a valid JavaScript object\"));","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // Do we return the actual result document","  // Either use override on the function, or go back to default on either the collection","  // level or db","  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;","  // Execute the operation","  var op = {q: selector, u: document};","  // Update options","  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {","    // Return the results","    handleCallback(callback, null, result);","/**"," * Updates documents."," * @method"," * @param {object} selector The selector for the update operation."," * @param {object} document The update document."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {boolean} [options.multi=false] Update one/all documents with operation."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use updateOne, updateMany or bulkWrite"," */","Collection.prototype.update = function(selector, document, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return updateDocuments(self, selector, document, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * @typedef {Object} Collection~deleteWriteOpResult"," * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents deleted."," * @property {Object} connection The connection object used for the operation."," * @property {Number} deletedCount The number of documents deleted."," */","","/**"," * The callback format for inserts"," * @callback Collection~deleteWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Delete a document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to remove"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~deleteWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.deleteOne = function(filter, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return deleteOne(self, filter, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Delete multiple documents on MongoDB"," * @method"," * @param {object} filter The Filter used to select the documents to remove"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~deleteWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.deleteMany = function(filter, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return deleteMany(self, filter, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Create an empty options object if the provided one is null","  options = options || {};","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // If selector is null set empty","  if(selector == null) selector = {};","  // Build the op","  var op = {q: selector, limit: 0};","  // Execute the remove","  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {","    // Return the results","    handleCallback(callback, null, result);","/**"," * Remove documents."," * @method"," * @param {object} selector The selector for the update operation."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.single=false] Removes the first document found."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use deleteOne, deleteMany or bulkWrite"," */","Collection.prototype.remove = function(selector, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return removeDocuments(self, selector, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic"," * operators and update instead for more efficient operations."," * @method"," * @param {object} doc Document to save"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use insertOne, insertMany, updateOne or updateMany"," */","Collection.prototype.save = function(doc, options, callback) {","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","  // Execute using callback","  if(typeof callback == 'function') return save(self, doc, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // Establish if we need to perform an insert or update","  if(doc._id != null) {","  // Insert the document","  insertDocuments(self, [doc], options, function(err, r) {","/**"," * The callback format for results"," * @callback Collection~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","/**"," * Fetches the first document that matches the query"," * @method"," * @param {object} query Query for find Operation"," * @param {object} [options=null] Optional settings."," * @param {number} [options.limit=0] Sets the limit of documents returned in the query."," * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc."," * @param {object} [options.fields=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}"," * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination)."," * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}"," * @param {boolean} [options.explain=false] Explain the query instead of returning the data."," * @param {boolean} [options.snapshot=false] Snapshot query."," * @param {boolean} [options.timeout=false] Specify if the cursor can timeout."," * @param {boolean} [options.tailable=false] Specify if the cursor is tailable."," * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results."," * @param {boolean} [options.returnKey=false] Only return the index key."," * @param {number} [options.maxScan=null] Limit the number of items to scan."," * @param {number} [options.min=null] Set index bounds."," * @param {number} [options.max=null] Set index bounds."," * @param {boolean} [options.showDiskLoc=false] Show disk location of results."," * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler."," * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system"," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use find().limit(1).next(function(err, doc){})"," */","Collection.prototype.findOne = function() {","  // Execute using callback","  if(typeof callback == 'function') return findOne(self, args, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Return the item","  cursor.next(function(err, item) {","/**"," * The callback format for the collection method, must be used if strict is specified"," * @callback Collection~collectionResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection instance."," */","","/**"," * Rename the collection."," *"," * @method"," * @param {string} newName New name of of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists."," * @param {Collection~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.rename = function(newName, opt, callback) {","  // Execute using callback","  if(typeof callback == 'function') return rename(self, newName, opt, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Check the collection name","  checkCollectionName(newName);","  // Build the command","  var renameCollection = f(\"%s.%s\", self.s.dbName, self.s.name);","  // Execute against admin","  self.s.db.admin().command(cmd, opt, function(err, doc) {","    // We have an error","    if(doc.errmsg) return handleCallback(callback, toError(doc), null);","/**"," * Drop the collection from the database, removing it permanently. New accesses will create a new collection."," *"," * @method"," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.drop = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return self.s.db.dropCollection(self.s.name, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Returns the options of the collection."," *"," * @method"," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.options = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return options(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Returns if the collection is a capped collection"," *"," * @method"," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.isCapped = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return isCapped(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Creates an index on the db and collection collection."," * @method"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.createIndex = function(fieldOrSpec, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return createIndex(self, fieldOrSpec, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Creates multiple indexes in the collection, this method is only supported for"," * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported"," * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/."," * @method"," * @param {array} indexSpecs An array of index specifications to be created"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.createIndexes = function(indexSpecs, callback) {","  // Execute using callback","  if(typeof callback == 'function') return createIndexes(self, indexSpecs, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Ensure we generate the correct name if the parameter is not set","  for(var i = 0; i \u003c indexSpecs.length; i++) {","      // Set the name","      indexSpecs[i].name = keys.join('_');","  // Execute the index","  self.s.db.command({","/**"," * Drops an index from this collection."," * @method"," * @param {string} indexName Name of the index to drop."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.dropIndex = function(indexName, options, callback) {","  // Run only against primary","  options.readPreference = ReadPreference.PRIMARY;","  // Execute using callback","  if(typeof callback == 'function') return dropIndex(self, indexName, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Delete index command","  var cmd = {'deleteIndexes':self.s.name, 'index':indexName};","  // Execute command","  self.s.db.command(cmd, options, function(err, result) {","/**"," * Drops all indexes from this collection."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.dropIndexes = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return dropIndexes(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Drops all indexes from this collection."," * @method"," * @deprecated use dropIndexes"," * @param {Collection~resultCallback} callback The command result callback"," * @return {Promise} returns Promise if no [callback] passed"," */","Collection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;","/**"," * Reindex all indexes on the collection"," * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.reIndex = function(options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return reIndex(self, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Reindex","  var cmd = {'reIndex':self.s.name};","  // Execute the command","  self.s.db.command(cmd, options, function(err, result) {","/**"," * Get the list of all indexes information for the collection."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @return {CommandCursor}"," */","Collection.prototype.listIndexes = function(options) {","  // Clone the options","  options = shallowClone(options);","  // Determine the read preference in the options.","  options = getReadPreference(this, options, this.s.db, this);","  // Set the CommandCursor constructor","  options.cursorFactory = CommandCursor;","  // Set the promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","  // We have a list collections command","  if(this.s.topology.capabilities().hasListIndexesCommand) {","    // Cursor options","    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}","    // Build the command","    var command = { listIndexes: this.s.name, cursor: cursor };","    // Execute the cursor","    var cursor = this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);","    // Do we have a readPreference, apply it","    if(options.readPreference) cursor.setReadPreference(options.readPreference);","    // Return the cursor","    return cursor;","  // Get the namespace","  var ns = f('%s.system.indexes', this.s.dbName);","  // Get the query","  var cursor = this.s.topology.cursor(ns, {find: ns, query: {ns: this.s.namespace}}, options);","  // Do we have a readPreference, apply it","  if(options.readPreference) cursor.setReadPreference(options.readPreference);","  // Set the passed in batch size if one was provided","  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);","  // Return the cursor","  return cursor;","/**"," * Ensures that an index exists, if it does not it creates it"," * @method"," * @deprecated use createIndexes instead"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return ensureIndex(self, fieldOrSpec, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Checks if one or more indexes exist on the collection, fails on first non-existing index"," * @method"," * @param {(string|array)} indexes One or more index names to check."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexExists = function(indexes, callback) {","  // Execute using callback","  if(typeof callback == 'function') return indexExists(self, indexes, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    // If we have an error return","    if(err != null) return handleCallback(callback, err, null);","    // Let's check for the index names","    if(!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null);","    // Check in list of indexes","    for(var i = 0; i \u003c indexes.length; i++) {","    // All keys found return true","    return handleCallback(callback, null, true);","/**"," * Retrieves this collections index info."," * @method"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.full=false] Returns the full raw index information."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexInformation = function(options, callback) {","  // Unpack calls","  var args = Array.prototype.slice.call(arguments, 0);","  // Execute using callback","  if(typeof callback == 'function') return indexInformation(self, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * The callback format for results"," * @callback Collection~countCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} result The count of documents that matched the query."," */","","/**"," * Count number of matching documents in the db to a query."," * @method"," * @param {object} query The query for the count."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.limit=null] The limit of documents to count."," * @param {boolean} [options.skip=null] The number of documents to skip for the count."," * @param {string} [options.hint=null] An index name hint for the query."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Collection~countCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.count = function(query, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return count(self, queryOption, optionsOption, callback);","  // Check if query is empty","  query = query || {};","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Final query","  var cmd = {","  // Add limit and skip if defined","  if(typeof skip == 'number') cmd.skip = skip;","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // Do we have a readConcern specified","  if(self.s.readConcern) {","  // Execute command","  self.s.db.command(cmd, options, function(err, result) {","/**"," * The distinct command returns returns a list of distinct values for the given key across a collection."," * @method"," * @param {string} key Field of the document to find distinct values for."," * @param {object} query The query for filtering the set of documents to which we apply the distinct filter."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.distinct = function(key, query, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return distinct(self, key, queryOption, optionsOption, callback);","  // Ensure the query and options are set","  query = query || {};","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // maxTimeMS option","  var maxTimeMS = options.maxTimeMS;","  // Distinct command","  var cmd = {","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // Do we have a readConcern specified","  if(self.s.readConcern) {","  // Execute the command","  self.s.db.command(cmd, options, function(err, result) {","/**"," * Retrieve all the indexes on the collection."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexes = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return indexes(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Get all the collection statistics."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.scale=null] Divide the returned sizes by scale value."," * @param {Collection~resultCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.stats = function(options, callback) {","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","  // Execute using callback","  if(typeof callback == 'function') return stats(self, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Build command object","  var commandObject = {","  // Check if we have the scale value","  if(options['scale'] != null) commandObject['scale'] = options['scale'];","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // Execute the command","  self.s.db.command(commandObject, options, callback);","/**"," * @typedef {Object} Collection~findAndModifyWriteOpResult"," * @property {object} value Document returned from findAndModify command."," * @property {object} lastErrorObject The raw lastErrorObject returned from the command."," * @property {Number} ok Is 1 if the command executed correctly."," */","","/**"," * The callback format for inserts"," * @callback Collection~findAndModifyCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndDelete = function(filter, options, callback) {","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","  // Execute using callback","  if(typeof callback == 'function') return findOneAndDelete(self, filter, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Final options","  var finalOptions = shallowClone(options);","  // Execute find and Modify","  self.findAndModify(","/**"," * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} replacement Document replacing the matching document."," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {boolean} [options.upsert=false] Upsert the document if it does not exist."," * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","  // Execute using callback","  if(typeof callback == 'function') return findOneAndReplace(self, filter, replacement, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Final options","  var finalOptions = shallowClone(options);","  // Execute findAndModify","  self.findAndModify(","/**"," * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} update Update operations to be performed on the document"," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {boolean} [options.upsert=false] Upsert the document if it does not exist."," * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndUpdate = function(filter, update, options, callback) {","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","  // Execute using callback","  if(typeof callback == 'function') return findOneAndUpdate(self, filter, update, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Final options","  var finalOptions = shallowClone(options);","  // Execute findAndModify","  self.findAndModify(","/**"," * Find and update a document."," * @method"," * @param {object} query Query object to locate the object to modify."," * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate."," * @param {object} doc The fields/vals to be updated."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.remove=false] Set to true to remove the object before returning."," * @param {boolean} [options.upsert=false] Perform an upsert operation."," * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove."," * @param {object} [options.fields=null] Object containing the field projection for the result returned from the operation."," * @param {Collection~findAndModifyCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead"," */","Collection.prototype.findAndModify = function(query, sort, doc, options, callback) {","  // Clone options","  var options = shallowClone(options);","  // Force read preference primary","  options.readPreference = ReadPreference.PRIMARY;","  // Execute using callback","  if(typeof callback == 'function') return findAndModify(self, query, sort, doc, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Create findAndModify command object","  var queryObject = {","  // Either use override on the function, or go back to default on either the collection","  // level or db","  if(options['serializeFunctions'] != null) {","  // No check on the documents","  options.checkKeys = false;","  // Get the write concern settings","  var finalOptions = writeConcern(options, self.s.db, self, options);","  // Decorate the findAndModify command with the write Concern","  if(finalOptions.writeConcern) {","  // Have we specified bypassDocumentValidation","  if(typeof finalOptions.bypassDocumentValidation == 'boolean') {","  // Execute the command","  self.s.db.command(queryObject","/**"," * Find and remove a document."," * @method"," * @param {object} query Query object to locate the object to modify."," * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use findOneAndDelete instead"," */","Collection.prototype.findAndRemove = function(query, sort, options, callback) {","  // Execute using callback","  if(typeof callback == 'function') return findAndRemove(self, query, sort, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Add the remove option","  options['remove'] = true;","  // Execute the callback","  self.findAndModify(query, sort, null, options, callback);","/**"," * Execute an aggregation framework pipeline against the collection, needs MongoDB \u003e= 2.2"," * @method"," * @param {object} pipeline Array containing all the aggregation framework commands for the execution."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 \u003e it returns as a real cursor on pre 2.6 it returns as an emulated cursor."," * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor"," * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 \u003e)."," * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 \u003e)."," * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~resultCallback} callback The command result callback"," * @return {(null|AggregationCursor)}"," */","Collection.prototype.aggregate = function(pipeline, options, callback) {","    // Set up callback if one is provided","    if(typeof options == 'function') {","    // If we have no options or callback we are doing","    // a cursor based aggregation","    if(options == null \u0026\u0026 callback == null) {","    // Aggregation pipeline passed as arguments on the method","    var args = Array.prototype.slice.call(arguments, 0);","    // Get the callback","    callback = args.pop();","    // Get the possible options object","    var opts = args[args.length - 1];","    // If it contains any of the admissible options pop it of the args","    options = opts \u0026\u0026 (opts.readPreference","      // Left over arguments is the pipeline","    pipeline = args;","  // Ignore readConcern option","  var ignoreReadConcern = false;","  // If out was specified","  if(typeof options.out == 'string') {","  // Build the command","  var command = { aggregate : this.s.name, pipeline : pipeline};","  // If we have bypassDocumentValidation set","  if(typeof options.bypassDocumentValidation == 'boolean') {","  // Do we have a readConcern specified","  if(!ignoreReadConcern \u0026\u0026 this.s.readConcern) {","  // If we have allowDiskUse defined","  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;","  // Ensure we have the right read preference inheritance","  options = getReadPreference(this, options, this.s.db, this);","  // If explain has been specified add it","  if(options.explain) command.explain = options.explain;","  // Validate that cursor options is valid","  if(options.cursor != null \u0026\u0026 typeof options.cursor != 'object') {","  // promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","  // Set the AggregationCursor constructor","  options.cursorFactory = AggregationCursor;","    // Allow disk usage command","    if(typeof options.allowDiskUse == 'boolean') command.allowDiskUse = options.allowDiskUse;","    // Execute the cursor","    return this.s.topology.cursor(this.s.namespace, command, options);","  // We do not allow cursor","  if(options.cursor) {","  // Execute the command","  this.s.db.command(command, options, function(err, result) {","/**"," * The callback format for results"," * @callback Collection~parallelCollectionScanCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection."," */","","/**"," * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are"," * no ordering guarantees for returned results."," * @method"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results."," * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)"," * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents."," * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.parallelCollectionScan = function(options, callback) {","  // Set number of cursors to 1","  options.numCursors = options.numCursors || 1;","  // Ensure we have the right read preference inheritance","  options = getReadPreference(this, options, this.s.db, this);","  // Add a promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","  // Execute using callback","  if(typeof callback == 'function') return parallelCollectionScan(self, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Create command object","  var commandObject = {","  // Do we have a readConcern specified","  if(self.s.readConcern) {","  // Store the raw value","  var raw = options.raw;","  // Execute the command","  self.s.db.command(commandObject, options, function(err, result) {","    // Add the raw back to the option","    if(raw) options.raw = raw;","    // Create command cursors for each item","    for(var i = 0; i \u003c result.cursors.length; i++) {","      // Convert cursorId to Long if needed","      var cursorId = typeof rawId == 'number' ? Long.fromNumber(rawId) : rawId;","      // Command cursor options","      var cmd = {","      // Add a command cursor","      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));","/**"," * Execute the geoNear command to search for items in the collection"," *"," * @method"," * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order."," * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.num=null] Max number of results to return."," * @param {number} [options.minDistance=null] Include results starting at minDistance from a point (2.6 or higher)"," * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point."," * @param {number} [options.distanceMultiplier=null] Include a value to multiply the distances with allowing for range conversions."," * @param {object} [options.query=null] Filter the results by a query."," * @param {boolean} [options.spherical=false] Perform query using a spherical model."," * @param {boolean} [options.uniqueDocs=false] The closest location in a document to the center of the search region will always be returned MongoDB \u003e 2.X."," * @param {boolean} [options.includeLocs=false] Include the location data fields in the top level of the results MongoDB \u003e 2.X."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.geoNear = function(x, y, options, callback) {","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","  // Execute using callback","  if(typeof callback == 'function') return geoNear(self, x, y, point, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Build command object","  var commandObject = {","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // Exclude readPreference and existing options to prevent user from","  // shooting themselves in the foot","  var exclude = {","  // Filter out any excluded objects","  commandObject = decorateCommand(commandObject, options, exclude);","  // Do we have a readConcern specified","  if(self.s.readConcern) {","  // Execute the command","  self.s.db.command(commandObject, options, function (err, res) {","    // should we only be returning res.results here? Not sure if the user","    // should see the other return information","    handleCallback(callback, null, res);","/**"," * Execute a geo search using a geo haystack index on a collection."," *"," * @method"," * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order."," * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point."," * @param {object} [options.search=null] Filter the results by a query."," * @param {number} [options.limit=false] Max number of results to return."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.geoHaystackSearch = function(x, y, options, callback) {","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","  // Execute using callback","  if(typeof callback == 'function') return geoHaystackSearch(self, x, y, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Build command object","  var commandObject = {","  // Remove read preference from hash if it exists","  commandObject = decorateCommand(commandObject, options, {readPreference: true});","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // Do we have a readConcern specified","  if(self.s.readConcern) {","  // Execute the command","  self.s.db.command(commandObject, options, function (err, res) {","    // should we only be returning res.results here? Not sure if the user","    // should see the other return information","    handleCallback(callback, null, res);","/**"," * Group function helper"," * @ignore"," */","// var groupFunction = function () {","// var groupFunction = function () {","//   var c = db[ns].find(condition);","//   var map = new Map();","//   var reduce_function = reduce;","//","//   while (c.hasNext()) {","//     var obj = c.next();","//     var key = {};","//","//     for (var i = 0, len = keys.length; i \u003c len; ++i) {","//       var k = keys[i];","//       key[k] = obj[k];","//     }","//","//     var aggObj = map.get(key);","//","//     if (aggObj == null) {","//       var newObj = Object.extend({}, key);","//       aggObj = Object.extend(newObj, initial);","//       map.put(key, aggObj);","//     }","//","//     reduce_function(obj, aggObj);","//   }","//","//   return { \"result\": map.values() };","// }.toString();","var groupFunction = 'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i \u003c len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';","/**"," * Run a group command across a collection"," *"," * @method"," * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by."," * @param {object} condition An optional condition that must be true for a row to be considered."," * @param {object} initial Initial value of the aggregation counter object."," * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated"," * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned."," * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) {","  // Fetch all commands","  reduce = args.length ? args.shift() : null;","  // Make sure we are backward compatible","  if(!(typeof finalize == 'function')) {","  // Set up the command as default","  command = command == null ? true : command;","  // Execute using callback","  if(typeof callback == 'function') return group(self, keys, condition, initial, reduce, finalize, command, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Execute using the command","  if(command) {","    // if finalize is defined","    if(finalize != null) selector.group['finalize'] = finalize;","    // Set up group selector","    if ('function' === typeof keys || keys instanceof Code) {","    // Ensure we have the right read preference inheritance","    options = getReadPreference(self, options, self.s.db, self);","    // Do we have a readConcern specified","    if(self.s.readConcern) {","    // Execute command","    self.s.db.command(selector, options, function(err, result) {","    // Create execution scope","    var scope = reduce != null \u0026\u0026 reduce instanceof Code","    // Pass in the function text to execute within mongodb.","    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');","/**"," * Functions that are passed as scope args must"," * be converted to Code instances."," * @ignore"," */","function processScope (scope) {","/**"," * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection."," *"," * @method"," * @param {(function|string)} map The mapping function."," * @param {(function|string)} reduce The reduce function."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*"," * @param {object} [options.query=null] Query filter object."," * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces."," * @param {number} [options.limit=null] Number of objects to return from collection."," * @param {boolean} [options.keeptemp=false] Keep temporary data."," * @param {(function|string)} [options.finalize=null] Finalize function."," * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize."," * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB \u003e 2.0.X."," * @param {boolean} [options.verbose=false] Provide statistics on job execution time."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~resultCallback} [callback] The command result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.mapReduce = function(map, reduce, options, callback) {","  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)","  if(null == options.out) {","  // Execute using callback","  if(typeof callback == 'function') return mapReduce(self, map, reduce, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Add any other options passed in","  for(var n in options) {","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","  // If we have a read preference and inline is not set as output fail hard","  if((options.readPreference != false \u0026\u0026 options.readPreference != 'primary')","  // Is bypassDocumentValidation specified","  if(typeof options.bypassDocumentValidation == 'boolean') {","  // Execute command","  self.s.db.command(mapCommandHash, {readPreference:options.readPreference}, function (err, result) {","    // Check if we have an error","    if(1 != result.ok || result.err || result.errmsg) {","    // Create statistics value","    var stats = {};","    // invoked with inline?","    if(result.results) {","      // If we wish for no verbosity","      if(options['verbose'] == null || !options['verbose']) {","    // The returned collection","    var collection = null;","    // If we have an object it's a different db","    if(result.result != null \u0026\u0026 typeof result.result == 'object') {","      // Create a collection object that wraps the result collection","      collection = self.s.db.collection(result.result)","    // If we wish for no verbosity","    if(options['verbose'] == null || !options['verbose']) {","    // Return stats as third set of values","    handleCallback(callback, err, collection, stats);","/**"," * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @return {UnorderedBulkOperation}"," */","Collection.prototype.initializeUnorderedBulkOp = function(options) {","/**"," * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {OrderedBulkOperation} callback The command result callback"," * @return {null}"," */","Collection.prototype.initializeOrderedBulkOp = function(options) {","// Get write concern","var writeConcern = function(target, db, col, options) {","// Figure out the read preference","var getReadPreference = function(self, options, db, coll) {"],"Functions":[" * MongoClient.connect(url, function(err, db) "," *   col.find(}).toArray(function(err, items) {","var Collection = function(db, topology, dbName, name, pkFactory, options) ","    promiseLibrary = typeof global.Promise == 'function' ?","    // Serialize functions","  enumerable: true, get: function()  return this.s.name; }","  enumerable: true, get: function()  return this.s.namespace; }","  enumerable: true, get: function()  return this.s.readConcern || {level: 'local'}; }","  get: function() ","  , get: function ()  return this.s.collectionHint; }","  , set: function (v)  this.s.collectionHint = normalizeHintField(v); }","Collection.prototype.find = function() ","    , has_callback = typeof args[args.length - 1] === 'function'","    , has_weird_callback = typeof args[0] === 'function'","  var formatFields = function(fields) ","  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));"," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Collection.prototype.insertOne = function(doc, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(Array.isArray(doc) \u0026\u0026 typeof callback == 'function') ","    return new this.s.promiseLibrary(function(resolve, reject) ","  if(typeof callback == 'function') return insertOne(self, doc, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    insertOne(self, doc, options, function(err, r) ","var insertOne = function(self, doc, options, callback) ","  insertDocuments(self, [doc], options, function(err, r) ","var mapInserManyResults = function(docs, r) "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Collection.prototype.insertMany = function(docs, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(!Array.isArray(docs) \u0026\u0026 typeof callback == 'function') ","    return new this.s.promiseLibrary(function(resolve, reject) ","  if(typeof callback == 'function') return bulkWrite(self, operations, options, function(err, r) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    bulkWrite(self, operations, options, function(err, r) "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Collection.prototype.bulkWrite = function(operations, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return bulkWrite(self, operations, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    bulkWrite(self, operations, options, function(err, r) ","var bulkWrite = function(self, operations, options, callback) ","  bulk.execute(writeCon, function(err, r) ","var insertDocuments = function(self, docs, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Collection.prototype.insert = function(docs, options, callback) ","  if(typeof options == 'function') callback = options, options = };","Collection.prototype.updateOne = function(filter, update, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return updateOne(self, filter, update, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    updateOne(self, filter, update, options, function(err, r) ","var updateOne = function(self, filter, update, options, callback) ","  updateDocuments(self, filter, update, options, function(err, r) ","Collection.prototype.replaceOne = function(filter, update, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return replaceOne(self, filter, update, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    replaceOne(self, filter, update, options, function(err, r) ","var replaceOne = function(self, filter, update, options, callback) ","  updateDocuments(self, filter, update, options, function(err, r) ","Collection.prototype.updateMany = function(filter, update, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return updateMany(self, filter, update, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    updateMany(self, filter, update, options, function(err, r) ","var updateMany = function(self, filter, update, options, callback) ","  updateDocuments(self, filter, update, options, function(err, r) ","var updateDocuments = function(self, selector, document, options, callback) ","  if('function' === typeof options) callback = options, options = null;","  if(!('function' === typeof callback)) callback = null;","  // Either use override on the function, or go back to default on either the collection","  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) ","Collection.prototype.update = function(selector, document, options, callback) ","  if(typeof callback == 'function') return updateDocuments(self, selector, document, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    updateDocuments(self, selector, document, options, function(err, r) ","Collection.prototype.deleteOne = function(filter, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return deleteOne(self, filter, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    deleteOne(self, filter, options, function(err, r) ","var deleteOne = function(self, filter, options, callback) ","  removeDocuments(self, filter, options, function(err, r) ","Collection.prototype.deleteMany = function(filter, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return deleteMany(self, filter, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    deleteMany(self, filter, options, function(err, r) ","var deleteMany = function(self, filter, options, callback) ","  removeDocuments(self, filter, options, function(err, r) ","var removeDocuments = function(self, selector, options, callback) ","  if(typeof options == 'function') ","  } else if (typeof selector === 'function') ","  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) ","Collection.prototype.remove = function(selector, options, callback) ","  if(typeof callback == 'function') return removeDocuments(self, selector, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    removeDocuments(self, selector, options, function(err, r) "," * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic","Collection.prototype.save = function(doc, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return save(self, doc, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    save(self, doc, options, function(err, r) ","var save = function(self, doc, options, callback) ","  insertDocuments(self, [doc], options, function(err, r) "," * @deprecated use find().limit(1).next(function(err, doc)})","Collection.prototype.findOne = function() ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return findOne(self, args, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findOne(self, args, function(err, r) ","var findOne = function(self, args, callback) ","  cursor.next(function(err, item) ","Collection.prototype.rename = function(newName, opt, callback) ","  if(typeof opt == 'function') callback = opt, opt = };","  if(typeof callback == 'function') return rename(self, newName, opt, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    rename(self, newName, opt, function(err, r) ","var rename = function(self, newName, opt, callback) ","  self.s.db.admin().command(cmd, opt, function(err, doc) ","Collection.prototype.drop = function(callback) ","  if(typeof callback == 'function') return self.s.db.dropCollection(self.s.name, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.s.db.dropCollection(self.s.name, function(err, r) ","Collection.prototype.options = function(callback) ","  if(typeof callback == 'function') return options(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    options(self, function(err, r) ","var options = function(self, callback) ","  self.s.db.listCollections(name: self.s.name}).toArray(function(err, collections) {","Collection.prototype.isCapped = function(callback) ","  if(typeof callback == 'function') return isCapped(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    isCapped(self, function(err, r) ","var isCapped = function(self, callback) ","  self.options(function(err, document) ","Collection.prototype.createIndex = function(fieldOrSpec, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  options = typeof callback === 'function' ? options : callback;","  if(typeof callback == 'function') return createIndex(self, fieldOrSpec, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    createIndex(self, fieldOrSpec, options, function(err, r) ","var createIndex = function(self, fieldOrSpec, options, callback) ","Collection.prototype.createIndexes = function(indexSpecs, callback) ","  if(typeof callback == 'function') return createIndexes(self, indexSpecs, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    createIndexes(self, indexSpecs, function(err, r) ","var createIndexes = function(self, indexSpecs, callback) ","Collection.prototype.dropIndex = function(indexName, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return dropIndex(self, indexName, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    dropIndex(self, indexName, options, function(err, r) ","var dropIndex = function(self, indexName, options, callback) ","  self.s.db.command(cmd, options, function(err, result) ","    if(typeof callback != 'function') return;","Collection.prototype.dropIndexes = function(callback) ","  if(typeof callback == 'function') return dropIndexes(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    dropIndexes(self, function(err, r) ","var dropIndexes = function(self, callback) ","  self.dropIndex('*', function (err, result) ","Collection.prototype.reIndex = function(options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return reIndex(self, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    reIndex(self, options, function(err, r) ","var reIndex = function(self, options, callback) ","  self.s.db.command(cmd, options, function(err, result) ","Collection.prototype.listIndexes = function(options) ","Collection.prototype.ensureIndex = function(fieldOrSpec, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return ensureIndex(self, fieldOrSpec, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    ensureIndex(self, fieldOrSpec, options, function(err, r) ","var ensureIndex = function(self, fieldOrSpec, options, callback) ","Collection.prototype.indexExists = function(indexes, callback) ","  if(typeof callback == 'function') return indexExists(self, indexes, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    indexExists(self, indexes, function(err, r) ","var indexExists = function(self, indexes, callback) ","  self.indexInformation(function(err, indexInformation) ","Collection.prototype.indexInformation = function(options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return indexInformation(self, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    indexInformation(self, options, function(err, r) ","var indexInformation = function(self, options, callback) ","Collection.prototype.count = function(query, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return count(self, queryOption, optionsOption, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    count(self, query, options, function(err, r) ","var count = function(self, query, options, callback) ","  self.s.db.command(cmd, options, function(err, result) ","Collection.prototype.distinct = function(key, query, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return distinct(self, key, queryOption, optionsOption, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    distinct(self, key, query, options, function(err, r) ","var distinct = function(self, key, query, options, callback) ","  self.s.db.command(cmd, options, function(err, result) ","Collection.prototype.indexes = function(callback) ","  if(typeof callback == 'function') return indexes(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    indexes(self, function(err, r) ","var indexes = function(self, callback) ","Collection.prototype.stats = function(options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return stats(self, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    stats(self, options, function(err, r) ","var stats = function(self, options, callback) ","Collection.prototype.findOneAndDelete = function(filter, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return findOneAndDelete(self, filter, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findOneAndDelete(self, filter, options, function(err, r) ","var findOneAndDelete = function(self, filter, options, callback) ","Collection.prototype.findOneAndReplace = function(filter, replacement, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return findOneAndReplace(self, filter, replacement, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findOneAndReplace(self, filter, replacement, options, function(err, r) ","var findOneAndReplace = function(self, filter, replacement, options, callback) ","Collection.prototype.findOneAndUpdate = function(filter, update, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return findOneAndUpdate(self, filter, update, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findOneAndUpdate(self, filter, update, options, function(err, r) ","var findOneAndUpdate = function(self, filter, update, options, callback) ","Collection.prototype.findAndModify = function(query, sort, doc, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return findAndModify(self, query, sort, doc, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findAndModify(self, query, sort, doc, options, function(err, r) ","var findAndModify = function(self, query, sort, doc, options, callback) ","  // Either use override on the function, or go back to default on either the collection","    , options, function(err, result) ","Collection.prototype.findAndRemove = function(query, sort, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return findAndRemove(self, query, sort, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    findAndRemove(self, query, sort, options, function(err, r) ","var findAndRemove = function(self, query, sort, options, callback) ","Collection.prototype.aggregate = function(pipeline, options, callback) ","    if(typeof options == 'function') ","  if(typeof callback != 'function') ","  this.s.db.command(command, options, function(err, result) ","Collection.prototype.parallelCollectionScan = function(options, callback) ","  if(typeof options == 'function') callback = options, options = numCursors: 1};","  if(typeof callback == 'function') return parallelCollectionScan(self, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    parallelCollectionScan(self, options, function(err, r) ","var parallelCollectionScan = function(self, options, callback) ","  self.s.db.command(commandObject, options, function(err, result) ","Collection.prototype.geoNear = function(x, y, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return geoNear(self, x, y, point, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    geoNear(self, x, y, point, options, function(err, r) ","var geoNear = function(self, x, y, point, options, callback) ","  self.s.db.command(commandObject, options, function (err, res) ","Collection.prototype.geoHaystackSearch = function(x, y, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return geoHaystackSearch(self, x, y, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    geoHaystackSearch(self, x, y, options, function(err, r) ","var geoHaystackSearch = function(self, x, y, options, callback) ","  self.s.db.command(commandObject, options, function (err, res) "," * Group function helper","// var groupFunction = function () ","//   var reduce_function = reduce;","//     reduce_function(obj, aggObj);","var groupFunction = 'function () \\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i \u003c len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';"," * @param (object|array|function|code)} keys An object, array or function expressing the keys to group by."," * @param (function|Code)} reduce The reduce function aggregates (reduces) the objects iterated"," * @param (function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.","Collection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(!(typeof finalize == 'function')) ","  if (!Array.isArray(keys) \u0026\u0026 keys instanceof Object \u0026\u0026 typeof(keys) !== 'function' \u0026\u0026 !(keys instanceof Code)) ","  if(typeof reduce === 'function') ","  if(typeof finalize === 'function') ","  if(typeof callback == 'function') return group(self, keys, condition, initial, reduce, finalize, command, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    group(self, keys, condition, initial, reduce, finalize, command, options, function(err, r) ","var group = function(self, keys, condition, initial, reduce, finalize, command, options, callback) ","    if ('function' === typeof keys || keys instanceof Code) ","      keys.forEach(function (key) ","    self.s.db.command(selector, options, function(err, result) ","    // Pass in the function text to execute within mongodb.","    self.s.db.eval(new Code(groupfn, scope), function (err, results) ","function processScope (scope) ","    if ('function' == typeof scope[key]) "," * @param (function|string)} map The mapping function."," * @param (function|string)} reduce The reduce function."," * @param (function|string)} [options.finalize=null] Finalize function.","Collection.prototype.mapReduce = function(map, reduce, options, callback) ","  if('function' === typeof options) callback = options, options = };","  if('function' === typeof map) ","  if('function' === typeof reduce) ","  if('function' === typeof options.finalize) ","  if(typeof callback == 'function') return mapReduce(self, map, reduce, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    mapReduce(self, map, reduce, options, function(err, r, r1) ","var mapReduce = function(self, map, reduce, options, callback) ","  self.s.db.command(mapCommandHash, readPreference:options.readPreference}, function (err, result) {","Collection.prototype.initializeUnorderedBulkOp = function(options) ","Collection.prototype.initializeOrderedBulkOp = function(options) ","var writeConcern = function(target, db, col, options) ","var getReadPreference = function(self, options, db, coll) "],"Dependencies":["./utils","mongodb-core","mongodb-core","mongodb-core","util","./aggregation_cursor","mongodb-core","./utils","./utils","./utils","./utils","./utils","./utils","./utils","./read_preference","mongodb-core","./command_cursor","./metadata","./cursor","./bulk/unordered","./bulk/ordered","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\command_cursor.js","LineCount":321,"CharCount":10132,"Comments":["/**"," * @fileOverview The **CommandCursor** class is an internal class that embodies a"," * generalized cursor based on a MongoDB command allowing for iteration over the"," * results returned. It supports one by one document iteration, conversion to an"," * array or can be iterated as a Node 0.10.X or higher stream"," *"," * **CommandCursor Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('listCollectionsExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *"," *     // List the database collections available"," *     db.listCollections().toArray(function(err, items) {"," *       test.equal(null, err);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the browser."," * @external Readable"," */","","/**"," * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class CommandCursor"," * @extends external:Readable"," * @fires CommandCursor#data"," * @fires CommandCursor#end"," * @fires CommandCursor#close"," * @fires CommandCursor#readable"," * @return {CommandCursor} an CommandCursor instance."," */","var CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  // MaxTimeMS","  var maxTimeMS = null;","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Set up","  Readable.call(this, {objectMode: true});","  // Internal state","  this.s = {","    // MaxTimeMS","      maxTimeMS: maxTimeMS","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespae","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology Options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","/**"," * CommandCursor stream data event, fired for each document in the cursor."," *"," * @event CommandCursor#data"," * @type {object}"," */","","/**"," * CommandCursor stream end event"," *"," * @event CommandCursor#end"," * @type {null}"," */","","/**"," * CommandCursor stream close event"," *"," * @event CommandCursor#close"," * @type {null}"," */","","/**"," * CommandCursor stream readable event"," *"," * @event CommandCursor#readable"," * @type {null}"," */","","// Inherit from Readable","// Inherit from Readable","inherits(CommandCursor, Readable);","// Set the methods to inherit from prototype","var methodsToInherit = ['_next', 'next', 'each', 'forEach', 'toArray'","// Only inherit the types we need","for(var i = 0; i \u003c methodsToInherit.length; i++) {","/**"," * Set the ReadPreference for the cursor."," * @method"," * @param {(string|ReadPreference)} readPreference The new read preference for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","CommandCursor.prototype.setReadPreference = function(r) {","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {CommandCursor}"," */","CommandCursor.prototype.batchSize = function(value) {","/**"," * Add a maxTimeMS stage to the aggregation pipeline"," * @method"," * @param {number} value The state maxTimeMS value."," * @return {CommandCursor}"," */","CommandCursor.prototype.maxTimeMS = function(value) {","// Inherited methods","define.classMethod('toArray', {callback: true, promise:true});","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @function CommandCursor.prototype.next"," * @param {CommandCursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback CommandCursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed."," * @method CommandCursor.prototype.toArray"," * @param {CommandCursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback CommandCursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null)} result The result object if the command was executed successfully."," */","","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method CommandCursor.prototype.each"," * @param {CommandCursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","","/**"," * Close the cursor, sending a KillCursor command and emitting close."," * @method CommandCursor.prototype.close"," * @param {CommandCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Is the cursor closed"," * @method CommandCursor.prototype.isClosed"," * @return {boolean}"," */","","/**"," * Clone the cursor"," * @function CommandCursor.prototype.clone"," * @return {CommandCursor}"," */","","/**"," * Resets the cursor"," * @function CommandCursor.prototype.rewind"," * @return {CommandCursor}"," */","","/**"," * The callback format for the forEach iterator method"," * @callback CommandCursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback CommandCursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/*"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method CommandCursor.prototype.forEach"," * @param {CommandCursor~iteratorCallback} iterator The iteration callback."," * @param {CommandCursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","","CommandCursor.INIT = 0;"],"Functions":[" * MongoClient.connect(url, function(err, db) "," *     , a:4, b:4}], {w:1}, function(err, result) {"," *     db.listCollections().toArray(function(err, items) ","var CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) ","    promiseLibrary = typeof global.Promise == 'function' ?","CommandCursor.prototype.setReadPreference = function(r) ","CommandCursor.prototype.batchSize = function(value) ","CommandCursor.prototype.maxTimeMS = function(value) "," * @function CommandCursor.prototype.next"," * @function CommandCursor.prototype.clone"," * @function CommandCursor.prototype.rewind"],"Dependencies":["util","util","./utils","./utils","./utils","./utils","mongodb-core","events","./read_preference","mongodb-core","stream\").Readable||require(\"readable-stream","./metadata","./cursor","mongodb-core","mongodb-core","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\cursor.js","LineCount":1169,"CharCount":38649,"Comments":["/**"," * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query. It supports"," * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X"," * or higher stream"," *"," * **CURSORS Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *"," *     // Show that duplicate records got dropped"," *     col.find({}).toArray(function(err, items) {"," *       test.equal(null, err);"," *       test.equal(4, items.length);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the mongodb-core and node.js"," * @external CoreCursor"," * @external Readable"," */","","// Flags allowed for cursor","// Flags allowed for cursor","var flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];","/**"," * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class Cursor"," * @extends external:CoreCursor"," * @extends external:Readable"," * @property {string} sortValue Cursor query sort setting."," * @property {boolean} timeout Is Cursor able to time out."," * @property {ReadPreference} readPreference Get cursor ReadPreference."," * @fires Cursor#data"," * @fires Cursor#end"," * @fires Cursor#close"," * @fires Cursor#readable"," * @return {Cursor} a Cursor instance."," * @example"," * Cursor cursor options."," *"," * collection.find({}).project({a:1})                             // Create a projection of field a"," * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10"," * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5"," * collection.find({}).filter({a:1})                              // Set query on the cursor"," * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries"," * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable"," * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay"," * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout"," * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData"," * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial"," * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}"," * collection.find({}).max(10)                                    // Set the cursor maxScan"," * collection.find({}).maxScan(10)                                // Set the cursor maxScan"," * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS"," * collection.find({}).min(100)                                   // Set the cursor min"," * collection.find({}).returnKey(10)                              // Set the cursor returnKey"," * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference"," * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId"," * collection.find({}).snapshot(true)                             // Set the cursor snapshot"," * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query"," * collection.find({}).hint('a_1')                                // Set the cursor hint"," *"," * All options are chainable, so one can do the following."," *"," * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)"," */","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  // Tailable cursor options","  var numberOfRetries = options.numberOfRetries || 5;","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Set up","  Readable.call(this, {objectMode: true});","  // Internal cursor state","  this.s = {","    // Tailable cursor options","      numberOfRetries: numberOfRetries","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespace","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","    // Current doc","    , currentDoc: null","  // Translate correctly","  if(self.s.options.noCursorTimeout == true) {","  // Set the sort value","  this.sortValue = self.s.cmd.sort;","/**"," * Cursor stream data event, fired for each document in the cursor."," *"," * @event Cursor#data"," * @type {object}"," */","","/**"," * Cursor stream end event"," *"," * @event Cursor#end"," * @type {null}"," */","","/**"," * Cursor stream close event"," *"," * @event Cursor#close"," * @type {null}"," */","","/**"," * Cursor stream readable event"," *"," * @event Cursor#readable"," * @type {null}"," */","","// Inherit from Readable","// Inherit from Readable","inherits(Cursor, Readable);","// Map core cursor _next method so we can apply mapping","CoreCursor.prototype._next = CoreCursor.prototype.next;","/**"," * Check if there is any document still available in the cursor"," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.hasNext = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') {","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.next = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') {","    // Return the currentDoc if someone called hasNext first","    if(self.s.currentDoc) {","    // Return the next object","    return nextObject(self, callback)","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Return the currentDoc if someone called hasNext first","    if(self.s.currentDoc) {","/**"," * Set the cursor query"," * @method"," * @param {object} filter The filter object used for the cursor."," * @return {Cursor}"," */","Cursor.prototype.filter = function(filter) {","/**"," * Set the cursor maxScan"," * @method"," * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query"," * @return {Cursor}"," */","Cursor.prototype.maxScan = function(maxScan) {","/**"," * Set the cursor hint"," * @method"," * @param {object} hint If specified, then the query system will only consider plans using the hinted index."," * @return {Cursor}"," */","Cursor.prototype.hint = function(hint) {","/**"," * Set the cursor min"," * @method"," * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order."," * @return {Cursor}"," */","Cursor.prototype.min = function(min) {","/**"," * Set the cursor max"," * @method"," * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order."," * @return {Cursor}"," */","Cursor.prototype.max = function(max) {","/**"," * Set the cursor returnKey"," * @method"," * @param {object} returnKey Only return the index field or fields for the results of the query. If $returnKey is set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields. Use one of the following forms:"," * @return {Cursor}"," */","Cursor.prototype.returnKey = function(value) {","/**"," * Set the cursor showRecordId"," * @method"," * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find."," * @return {Cursor}"," */","Cursor.prototype.showRecordId = function(value) {","/**"," * Set the cursor snapshot"," * @method"," * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document."," * @return {Cursor}"," */","Cursor.prototype.snapshot = function(value) {","/**"," * Set a node.js specific cursor option"," * @method"," * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval']."," * @param {object} value The field value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.setCursorOption = function(field, value) {","/**"," * Add a cursor flag to the cursor"," * @method"," * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial']."," * @param {boolean} value The flag boolean value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.addCursorFlag = function(flag, value) {","/**"," * Add a query modifier to the cursor query"," * @method"," * @param {string} name The query modifier (must start with $, such as $orderby etc)"," * @param {boolean} value The flag boolean value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.addQueryModifier = function(name, value) {","  // Strip of the $","  var field = name.substr(1);","  // Set on the command","  this.s.cmd[field] = value;","  // Deal with the special case for sort","  if(field == 'orderby') this.s.cmd.sort = this.s.cmd[field];","/**"," * Add a comment to the cursor query allowing for tracking the comment in the log."," * @method"," * @param {string} value The comment attached to this query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.comment = function(value) {","/**"," * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)"," * @method"," * @param {number} value Number of milliseconds to wait before aborting the tailed query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.maxAwaitTimeMS = function(value) {","/**"," * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)"," * @method"," * @param {number} value Number of milliseconds to wait before aborting the query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.maxTimeMS = function(value) {","/**"," * Sets a field projection for the query."," * @method"," * @param {object} value The field projection object."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.project = function(value) {","/**"," * Sets the sort order of the cursor query."," * @method"," * @param {(string|array|object)} keyOrList The key or keys set for the sort."," * @param {number} [direction] The direction of the sorting (1 or -1)."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.sort = function(keyOrList, direction) {","  // We have an array of arrays, we need to preserve the order of the sort","  // so we will us a Map","  if(Array.isArray(order) \u0026\u0026 Array.isArray(order[0])) {","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.batchSize = function(value) {","/**"," * Set the limit for the cursor."," * @method"," * @param {number} value The limit for the cursor query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.limit = function(value) {","  // this.cursorLimit = value;","  this.setCursorLimit(value);","/**"," * Set the skip for the cursor."," * @method"," * @param {number} value The skip for the cursor query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.skip = function(value) {","/**"," * The callback format for results"," * @callback Cursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null|boolean)} result The result object if the command was executed successfully."," */","","/**"," * Clone the cursor"," * @function external:CoreCursor#clone"," * @return {Cursor}"," */","","/**"," * Resets the cursor"," * @function external:CoreCursor#rewind"," * @return {null}"," */","","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @deprecated"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.nextObject = Cursor.prototype.next;","  // Get the next object","  self._next(function(err, doc) {","// Trampoline emptying the number of retrieved items","// without incurring a nextTick operation","var loop = function(self, callback) {","  // No more items we are done","  if(self.bufferedCount() == 0) return;","  // Get the next document","  self._next(callback);","  // Loop","  return loop;","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method"," * @deprecated"," * @param {Cursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","Cursor.prototype.each = function(callback) {","  // Rewind cursor state","  this.rewind();","  // Set current cursor to INIT","  this.s.state = Cursor.INIT;","  // Run the query","  _each(this, callback);","// Run the each loop","var _each = function(self, callback) {","  // Define function to avoid global scope escape","  var fn = null;","  // Trampoline all the entries","  if(self.bufferedCount() \u003e 0) {","/**"," * The callback format for the forEach iterator method"," * @callback Cursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback Cursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/**"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method"," * @param {Cursor~iteratorCallback} iterator The iteration callback."," * @param {Cursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","Cursor.prototype.forEach = function(iterator, callback) {","/**"," * Set the ReadPreference for the cursor."," * @method"," * @param {(string|ReadPreference)} readPreference The new read preference for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.setReadPreference = function(r) {","/**"," * The callback format for results"," * @callback Cursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed. In that case,"," * cursor.rewind() can be used to reset the cursor."," * @method"," * @param {Cursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.toArray = function(callback) {","  // Execute using callback","  if(typeof callback == 'function') return toArray(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Reset cursor","  self.rewind();","  // Fetch all the documents","  var fetchDocs = function() {","      // Add doc to items","      items.push(doc)","      // Get all buffered objects","      if(self.bufferedCount() \u003e 0) {","        // Transform the doc if transform method added","        if(self.s.transforms \u0026\u0026 typeof self.s.transforms.doc == 'function') {","      // Attempt a fetch","      fetchDocs();","/**"," * The callback format for results"," * @callback Cursor~countResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} count The count of documents."," */","","/**"," * Get the count of documents for this cursor"," * @method"," * @param {boolean} applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options."," * @param {object} [options=null] Optional settings."," * @param {number} [options.skip=null] The number of documents to skip."," * @param {number} [options.limit=null] The maximum amounts to count before aborting."," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {string} [options.hint=null] An index name hint for the query."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Cursor~countResultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.count = function(applySkipLimit, opts, callback) {","  // Execute using callback","  if(typeof callback == 'function') return count(self, applySkipLimit, opts, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Command","  var delimiter = self.s.ns.indexOf('.');","  // Merge in any options","  if(opts.skip) command.skip = opts.skip;","  // Execute the command","  self.topology.command(f(\"%s.$cmd\", self.s.ns.substr(0, delimiter))","/**"," * Close the cursor, sending a KillCursor command and emitting close."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.close = function(callback) {","  // Kill the cursor","  this.kill();","  // Emit the close event for the cursor","  this.emit('close');","  // Callback if provided","  if(typeof callback == 'function') return handleCallback(callback, null, this);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Map all documents using the provided function"," * @method"," * @param {function} [transform] The mapping transformation method."," * @return {null}"," */","Cursor.prototype.map = function(transform) {","/**"," * Is the cursor closed"," * @method"," * @return {boolean}"," */","Cursor.prototype.isClosed = function() {","/**"," * Return a modified Readable stream including a possible transform method."," * @method"," * @param {object} [options=null] Optional settings."," * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream."," * @return {Cursor}"," */","Cursor.prototype.stream = function(options) {","/**"," * Execute the explain for the cursor"," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.explain = function(callback) {","  // Do we have a readConcern","  if(this.s.cmd.readConcern) {","  // Execute using callback","  if(typeof callback == 'function') return this._next(callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Get the next item","  self.nextObject(function(err, result) {","      // Emit end event","      self.emit('end');","    // If we provided a transformation method","    if(typeof self.s.streamOptions.transform == 'function' \u0026\u0026 result != null) {","    // If we provided a map function","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.doc == 'function' \u0026\u0026 result != null) {","    // Return the result","    self.push(result);","    // TODO: refactor this logic into core","    var ns = this.s.ns || '';","/**"," * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null."," * @function external:Readable#read"," * @param {number} size Optional argument to specify how much data to read."," * @return {(String | Buffer | null)}"," */","","/**"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Readable#setEncoding"," * @param {string} encoding The encoding to use."," * @return {null}"," */","","/**"," * This method will cause the readable stream to resume emitting data events."," * @function external:Readable#resume"," * @return {null}"," */","","/**"," * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer."," * @function external:Readable#pause"," * @return {null}"," */","","/**"," * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream."," * @function external:Readable#pipe"," * @param {Writable} destination The destination for writing data"," * @param {object} [options] Pipe options"," * @return {null}"," */","","/**"," * This method will remove the hooks set up for a previous pipe() call."," * @function external:Readable#unpipe"," * @param {Writable} [destination] The destination for writing data"," * @return {null}"," */","","/**"," * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party."," * @function external:Readable#unshift"," * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue."," * @return {null}"," */","","/**"," * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)"," * @function external:Readable#wrap"," * @param {Stream} stream An \"old style\" readable stream."," * @return {null}"," */","","Cursor.INIT = 0;"],"Functions":[" * MongoClient.connect(url, function(err, db) "," *     , a:4, b:4}], {w:1}, function(err, result) {"," *     col.find(}).toArray(function(err, items) {","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) ","    promiseLibrary = typeof global.Promise == 'function' ?","Cursor.prototype.hasNext = function(callback) ","  if(typeof callback == 'function') ","      return nextObject(self, function(err, doc) ","  return new this.s.promiseLibrary(function(resolve, reject) ","      nextObject(self, function(err, doc) ","Cursor.prototype.next = function(callback) ","  if(typeof callback == 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    nextObject(self, function(err, r) ","Cursor.prototype.filter = function(filter) ","Cursor.prototype.maxScan = function(maxScan) ","Cursor.prototype.hint = function(hint) ","Cursor.prototype.min = function(min) ","Cursor.prototype.max = function(max) ","Cursor.prototype.returnKey = function(value) ","Cursor.prototype.showRecordId = function(value) ","Cursor.prototype.snapshot = function(value) ","Cursor.prototype.setCursorOption = function(field, value) ","Cursor.prototype.addCursorFlag = function(flag, value) ","Cursor.prototype.addQueryModifier = function(name, value) ","Cursor.prototype.comment = function(value) ","Cursor.prototype.maxAwaitTimeMS = function(value) ","Cursor.prototype.maxTimeMS = function(value) ","Cursor.prototype.project = function(value) ","Cursor.prototype.sort = function(keyOrList, direction) ","    order = new Map(order.map(function(x) ","Cursor.prototype.batchSize = function(value) ","Cursor.prototype.limit = function(value) ","Cursor.prototype.skip = function(value) "," * @function external:CoreCursor#clone"," * @function external:CoreCursor#rewind","var nextObject = function(self, callback) ","  self._next(function(err, doc) ","var loop = function(self, callback) ","Cursor.prototype.each = function(callback) ","var _each = function(self, callback) ","  // Define function to avoid global scope escape","    self.next(function(err, item) ","Cursor.prototype.forEach = function(iterator, callback) ","  this.each(function(err, doc)","Cursor.prototype.setReadPreference = function(r) ","Cursor.prototype.toArray = function(callback) ","  if(typeof callback == 'function') return toArray(self, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    toArray(self, function(err, r) ","var toArray = function(self, callback) ","  var fetchDocs = function() ","    self._next(function(err, doc) ","        if(self.s.transforms \u0026\u0026 typeof self.s.transforms.doc == 'function') ","Cursor.prototype.count = function(applySkipLimit, opts, callback) ","  if(typeof opts == 'function') callback = opts, opts = };","  if(typeof callback == 'function') return count(self, applySkipLimit, opts, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    count(self, applySkipLimit, opts, function(err, r) ","var count = function(self, applySkipLimit, opts, callback) ","  if(typeof applySkipLimit == 'function') ","    , command, function(err, result) ","Cursor.prototype.close = function(callback) ","  if(typeof callback == 'function') return handleCallback(callback, null, this);","  return new this.s.promiseLibrary(function(resolve, reject) "," * Map all documents using the provided function"," * @param function} [transform] The mapping transformation method.","Cursor.prototype.map = function(transform) ","Cursor.prototype.isClosed = function() ","Cursor.prototype.destroy = function(err) "," * @param function} [options.transform=null] A transformation method applied to each document emitted by the stream.","Cursor.prototype.stream = function(options) ","Cursor.prototype.explain = function(callback) ","  if(typeof callback == 'function') return this._next(callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    self._next(function(err, r) ","Cursor.prototype._read = function(n) ","  self.nextObject(function(err, result) ","    if(typeof self.s.streamOptions.transform == 'function' \u0026\u0026 result != null) ","    // If we provided a map function","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.doc == 'function' \u0026\u0026 result != null) ","  get: function() ","  get: function() "," * @function external:Readable#read"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Readable#setEncoding"," * @function external:Readable#resume"," * @function external:Readable#pause"," * @function external:Readable#pipe"," * @function external:Readable#unpipe"," * @function external:Readable#unshift"," * @function external:Readable#wrap"],"Dependencies":["util","util","./utils","./utils","./read_preference","mongodb-core","stream\").Readable||require(\"readable-stream","./metadata","mongodb-core","mongodb-core","mongodb-core","mongodb-core","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\db.js","LineCount":1832,"CharCount":69847,"Comments":["/**"," * @fileOverview The **Db** class is a class that represents a MongoDB Database."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Get an additional db"," *   var testDb = db.db('test');"," *   db.close();"," * });"," */","","/**"," * Creates a new Db instance"," * @class"," * @param {string} databaseName The name of the database this instance represents."," * @param {(Server|ReplSet|Mongos)} topology The server topology for the database."," * @param {object} [options=null] Optional settings."," * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution."," * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)"," * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)"," * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology."," * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database"," * @property {string} databaseName The name of the database this instance represents."," * @property {object} options The options associated with the db instance."," * @property {boolean} native_parser The current value of the parameter native_parser."," * @property {boolean} slaveOk The current slaveOk value for the db instance."," * @property {object} writeConcern The current write concern values."," * @property {object} topology Access the topology object (single server, replicaset or mongos)."," * @fires Db#close"," * @fires Db#authenticated"," * @fires Db#reconnect"," * @fires Db#error"," * @fires Db#timeout"," * @fires Db#parseError"," * @fires Db#fullsetup"," * @return {Db} a Db instance."," */","var Db = function(databaseName, topology, options) {","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Ensure we put the promiseLib in the options","  options.promiseLibrary = promiseLibrary;","  // var self = this;  // Internal state of the db object","  this.s = {","    // Database name","      databaseName: databaseName","    // DbCache","    , dbCache: {}","    // Children db's","    , children: []","    // Topology","    , topology: topology","    // Options","    , options: options","    // Logger instance","    , logger: Logger('Db', options)","    // Get the bson parser","    , bson: topology ? topology.bson : null","    // Authsource if any","    , authSource: options.authSource","    // Unpack read preference","    , readPreference: options.readPreference","    // Set buffermaxEntries","    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : -1","    // Parent db (if chained)","    , parentDb: options.parentDb || null","    // Set up the primary key factory or fallback to ObjectID","    , pkFactory: options.pkFactory || ObjectID","    // Get native parser","    , nativeParser: options.nativeParser || options.native_parser","    // Promise library","    , promiseLibrary: promiseLibrary","    // No listener","    , noListener: typeof options.noListener == 'boolean' ? options.noListener : false","    // ReadConcern","    , readConcern: options.readConcern","  // Ensure we have a valid db name","  validateDatabaseName(self.s.databaseName);","  // If we have specified the type of parser","  if(typeof self.s.nativeParser == 'boolean') {","  // Add a read Only property","  getSingleProperty(this, 'serverConfig', self.s.topology);","  // This is a child db, do not register any listeners","  if(options.parentDb) return;","  // Add listeners","  topology.on('error', createListener(self, 'error', self));","// Topology","Object.defineProperty(Db.prototype, 'topology', {","// Options","Object.defineProperty(Db.prototype, 'options', {","// Running native parser","Object.defineProperty(Db.prototype, 'native_parser', {","// slaveOk specified","Object.defineProperty(Db.prototype, 'slaveOk', {","// get the write Concern","Object.defineProperty(Db.prototype, 'writeConcern', {","/**"," * The callback format for the Db.open method"," * @callback Db~openCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Db} db The Db instance if the open method was successful."," */","","// Internal method","// Internal method","var open = function(self, callback) {","/**"," * Open the database"," * @method"," * @param {Db~openCallback} [callback] Callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.open = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return open(self, callback);","  // Return promise","  return new self.s.promiseLibrary(function(resolve, reject) {","/**"," * Converts provided read preference to CoreReadPreference"," * @param {(ReadPreference|string|object)} readPreference the user provided read preference"," * @return {CoreReadPreference}"," */","var convertReadPreference = function(readPreference) {","/**"," * The callback format for results"," * @callback Db~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","var executeCommand = function(self, command, options, callback) {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Get the db name we are executing against","  var dbName = options.dbName || options.authdb || self.s.databaseName;","  // If we have a readPreference set","  if(options.readPreference == null \u0026\u0026 self.s.readPreference) {","  // Convert the readPreference","  if(options.readPreference) {","  // Debug information","  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command %s against %s with options [%s]'","  // Execute command","  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {","/**"," * Execute a command"," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.command = function(command, options, callback) {","  // Change the callback","  if(typeof options == 'function') callback = options, options = {};","  // Clone the options","  options = shallowClone(options);","  // Do we have a callback","  if(typeof callback == 'function') return executeCommand(self, command, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * The callback format for results"," * @callback Db~noResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {null} result Is not set to a value"," */","","/**"," * Close the db and its underlying connections"," * @method"," * @param {boolean} force Force close, emitting no events"," * @param {Db~noResultCallback} [callback] The result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.close = function(force, callback) {","  // Fire close event if any listeners","  if(this.listeners('close').length \u003e 0) {","    // If it's the top level db emit close on all children","    if(this.parentDb == null) {","      // Fire close on all children","      for(var i = 0; i \u003c this.s.children.length; i++) {","    // Remove listeners after emit","    self.removeAllListeners('close');","  // Close parent db if set","  if(this.s.parentDb) this.s.parentDb.close();","  // Callback after next event loop tick","  if(typeof callback == 'function') return process.nextTick(function() {","  // Return dummy promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Return the Admin db instance"," * @method"," * @return {Admin} return the new Admin db instance"," */","Db.prototype.admin = function() {","/**"," * The callback format for the collection method, must be used if strict is specified"," * @callback Db~collectionResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection instance."," */","","/**"," * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can"," * can use it without a callback in the following way: `var collection = db.collection('mycollection');`"," *"," * @method"," * @param {string} name the collection name we wish to access."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.strict=false] Returns an error if the collection does not exist"," * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)"," * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)"," * @param {Db~collectionResultCallback} callback The collection result callback"," * @return {Collection} return the new Collection instance if not in strict mode"," */","Db.prototype.collection = function(name, options, callback) {","  // Set the promise library","  options.promiseLibrary = this.s.promiseLibrary;","  // If we have not set a collection level readConcern set the db level one","  options.readConcern = options.readConcern || this.s.readConcern;","  // Do we have ignoreUndefined set","  if(this.s.options.ignoreUndefined) {","  // Execute","  if(options == null || !options.strict) {","  // Strict mode","  if(typeof callback != 'function') {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) {","  // Strict mode","  this.listCollections({name:name}).toArray(function(err, collections) {","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self, options);","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Check if we have the name","  self.listCollections({name: name}).toArray(function(err, collections) {","    // Create collection command","    var cmd = {'create':name};","    // Add all optional parameters","    for(var n in options) {","    // Execute command","    self.command(cmd, finalOptions, function(err, result) {","/**"," * Create a new collection on a server with the specified options. Use this to create capped collections."," *"," * @method"," * @param {string} name the collection name we wish to access."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.strict=false] Returns an error if the collection does not exist"," * @param {boolean} [options.capped=false] Create a capped collection."," * @param {number} [options.size=null] The size of the capped collection in bytes."," * @param {number} [options.max=null] The maximum number of documents in the capped collection."," * @param {boolean} [options.autoIndexId=true] Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version \u003c 2.2."," * @param {Db~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.createCollection = function(name, options, callback) {","  // Do we have a promisesLibrary","  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;","  // Check if the callback is in fact a string","  if(typeof callback == 'string') name = callback;","  // Execute the fallback callback","  if(typeof callback == 'function') return createCollection(self, name, options, callback);","/**"," * Get all the db statistics."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.scale=null] Divide the returned sizes by scale value."," * @param {Db~resultCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.stats = function(options, callback) {","  // Build command object","  var commandObject = { dbStats:true };","  // Check if we have the scale value","  if(options['scale'] != null) commandObject['scale'] = options['scale'];","  // Execute the command","  return this.command(commandObject, options, callback);","// Transformation methods for cursor results","var listCollectionsTranforms = function(databaseName) {","      // Remove database name if available","      if(doc.name \u0026\u0026 index == 0) {","/**"," * Get the list of all collection information for the specified db."," *"," * @method"," * @param {object} filter Query to filter collections by"," * @param {object} [options=null] Optional settings."," * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @return {CommandCursor}"," */","Db.prototype.listCollections = function(filter, options) {","  // Shallow clone the object","  options = shallowClone(options);","  // Set the promise library","  options.promiseLibrary = this.s.promiseLibrary;","  // Ensure valid readPreference","  if(options.readPreference) {","  // We have a list collections command","  if(this.serverConfig.capabilities().hasListCollectionsCommand) {","    // Cursor options","    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}","    // Build the command","    var command = { listCollections : true, filter: filter, cursor: cursor };","    // Set the AggregationCursor constructor","    options.cursorFactory = CommandCursor;","    // Create the cursor","    var cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);","    // Do we have a readPreference, apply it","    if(options.readPreference) {","    // Return the cursor","    return cursor;","  // We cannot use the listCollectionsCommand","  if(!this.serverConfig.capabilities().hasListCollectionsCommand) {","    // If we have legacy mode and have not provided a full db name filter it","    if(typeof filter.name == 'string' \u0026\u0026 !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {","  // No filter, filter by current database","  if(filter == null) {","  // Rewrite the filter to use $and to filter out indexes","  if(filter.name) {","  // Return options","  var _options = {transforms: listCollectionsTranforms(this.s.databaseName)}","  // Get the cursor","  var cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);","  // Do we have a readPreference, apply it","  if(options.readPreference) cursor.setReadPreference(options.readPreference);","  // Set the passed in batch size if one was provided","  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);","  // We have a fallback mode using legacy systems collections","  return cursor;","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // If not a code object translate to one","  if(!(finalCode instanceof Code)) finalCode = new Code(finalCode);","  // Ensure the parameters are correct","  if(parameters != null \u0026\u0026 !Array.isArray(parameters) \u0026\u0026 typeof parameters !== 'function') {","  // Create execution selector","  var cmd = {'$eval':finalCode, 'args':finalParameters};","  // Check if the nolock parameter is passed in","  if(options['nolock']) {","  // Set primary read preference","  options.readPreference = new CoreReadPreference(ReadPreference.PRIMARY);","  // Execute the command","  self.command(cmd, options, function(err, result) {","/**"," * Evaluate JavaScript on the server"," *"," * @method"," * @param {Code} code JavaScript to execute on server."," * @param {(object|array)} parameters The parameters for the call."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript."," * @param {Db~resultCallback} [callback] The results callback"," * @deprecated Eval is deprecated on MongoDB 3.2 and forward"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.eval = function(code, parameters, options, callback) {","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Rename a collection."," *"," * @method"," * @param {string} fromCollection Name of current collection to rename."," * @param {string} toCollection New name of of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists."," * @param {Db~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {","  // Add return new collection","  options.new_collection = true;","  // Check if the callback is in fact a string","  if(typeof callback == 'function') {","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","/**"," * Drop a collection from the database, removing it permanently. New accesses will create a new collection."," *"," * @method"," * @param {string} name Name of collection to drop"," * @param {Db~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.dropCollection = function(name, callback) {","  // Command to execute","  var cmd = {'drop':name}","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Execute command","    self.command(cmd, self.s.options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","/**"," * Drop a database, removing it permanently from the server."," *"," * @method"," * @param {Db~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.dropDatabase = function(callback) {","  // Drop database command","  var cmd = {'dropDatabase':1};","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Execute command","    self.command(cmd, self.s.options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","/**"," * The callback format for the collections method."," * @callback Db~collectionsResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection[]} collections An array of all the collections objects for the db instance."," */","var collections = function(self, callback) {","  // Let's get the collection names","  self.listCollections().toArray(function(err, documents) {","    // Filter collections removing any illegal ones","    documents = documents.filter(function(doc) {","    // Return the collection objects","    handleCallback(callback, null, documents.map(function(d) {","/**"," * Fetch all collections for the current db."," *"," * @method"," * @param {Db~collectionsResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.collections = function(callback) {","  // Return the callback","  if(typeof callback == 'function') return collections(self, callback);","  // Return the promise","  return new self.s.promiseLibrary(function(resolve, reject) {","/**"," * Runs a command on the database as admin."," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.executeDbAdminCommand = function(selector, options, callback) {","  // Ensure valid readPreference","  if(options.readPreference","  // Return the callback","  if(typeof callback == 'function') return self.s.topology.command('admin.$cmd', selector, options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Return promise","  return new self.s.promiseLibrary(function(resolve, reject) {","      // Did the user destroy the topology","      if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","/**"," * Creates an index on the db and collection collection."," * @method"," * @param {string} name Name of the collection to create the index on."," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.createIndex = function(name, fieldOrSpec, options, callback) {","  // Shallow clone the options","  options = shallowClone(options);","  // Run only against primary","  options.readPreference = ReadPreference.PRIMARY;","  // If we have a callback fallback","  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Get the write concern options","  var finalOptions = writeConcern({}, self, options);","  // Ensure we have a callback","  if(finalOptions.writeConcern \u0026\u0026 typeof callback != 'function') {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Attempt to run using createIndexes command","  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {","    // 67 = 'CannotCreateIndex', means that the server recognized","    // `createIndex` as a command and so we don't need to fallback to","    // an insert.","    if(err.code === 67 || err.code == 11000) {","    // Create command","    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);","    // Set no key checking","    finalOptions.checkKeys = false;","    // Insert document","    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) {","/**"," * Ensures that an index exists, if it does not it creates it"," * @method"," * @deprecated since version 2.0"," * @param {string} name The index name"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {","  // If we have a callback fallback","  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Get the write concern options","  var finalOptions = writeConcern({}, self, options);","  // Create command","  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Default command options","  var commandOptions = {};","  // Check if the index allready exists","  self.indexInformation(name, finalOptions, function(err, indexInformation) {","    // If the index does not exist, create it","    if(indexInformation == null || !indexInformation[index_name])  {","/**"," * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are"," * related in a parent-child relationship to the original instance so that events are correctly emitted on child"," * db instances. Child db instances are cached so performing db('db1') twice will return the same instance."," * You can control these behaviors with the options noListener and returnNonCachedInstance."," *"," * @method"," * @param {string} name The name of the database we want to use."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection."," * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created"," * @return {Db}"," */","Db.prototype.db = function(dbName, options) {","  // Copy the options and add out internal override of the not shared flag","  for(var key in this.options) {","  // Do we have the db in the cache already","  if(this.s.dbCache[dbName] \u0026\u0026 options.returnNonCachedInstance !== true) {","  // Add current db as parentDb","  if(options.noListener == null || options.noListener == false) {","  // Add promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","  // Return the db object","  var db = new Db(dbName, this.s.topology, options)","  // Add as child","  if(options.noListener == null || options.noListener == false) {","  // Add the db to the cache","  this.s.dbCache[dbName] = db;","  // Return the database","  return db;","  // Special case where there is no password ($external users)","  if(typeof username == 'string'","  // Unpack all options","  if(typeof options == 'function') {","  // Error out if we digestPassword set","  if(options.digestPassword != null) {","  // Get additional values","  var customData = options.customData != null ? options.customData : {};","  // If not roles defined print deprecated message","  if(roles.length == 0) {","  // Get the error options","  var commandOptions = {writeCommand:true};","  // Add maxTimeMS to options if set","  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;","  // Check the db name and add roles if needed","  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') \u0026\u0026 !Array.isArray(options.roles)) {","  // Build the command to execute","  var command = {","  // Apply write concern to command","  command = writeConcern(command, self, options);","  // Use node md5 generator","  var md5 = crypto.createHash('md5');","  // Generate keys used for authentication","  md5.update(username + \":mongo:\" + password);","  // No password","  if(typeof password == 'string') {","  // Force write using primary","  commandOptions.readPreference = CoreReadPreference.primary;","  // Execute the command","  self.command(command, commandOptions, function(err, result) {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Attempt to execute auth command","  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {","    // We need to perform the backward compatible insert operation","    if(err \u0026\u0026 err.code == -5000) {","      // Use node md5 generator","      var md5 = crypto.createHash('md5');","      // Generate keys used for authentication","      md5.update(username + \":mongo:\" + password);","      // If we have another db set","      var db = options.dbName ? self.db(options.dbName) : self;","      // Fetch a user collection","      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);","      // Check if we are inserting the first user","      collection.count({}, function(err, count) {","        // We got an error (f.ex not authorized)","        if(err != null) return handleCallback(callback, err, null);","        // Check if the user exists and update i","        collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err, documents) {","          // We got an error (f.ex not authorized)","          if(err != null) return handleCallback(callback, err, null);","          // Add command keys","          finalOptions.upsert = true;","          // We have a user, let's update the password or upsert if not","          collection.update({user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err, results, full) {","/**"," * Add a user to the database."," * @method"," * @param {string} username The username."," * @param {string} password The password."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)"," * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.addUser = function(username, password, options, callback) {","  // Unpack the parameters","  var self = this;","  // If we have a callback fallback","  if(typeof callback == 'function') return addUser(self, username, password, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Get the error options","  var commandOptions = {writeCommand:true};","  // Get additional values","  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;","  // Add maxTimeMS to options if set","  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;","  // Build the command to execute","  var command = {","  // Apply write concern to command","  command = writeConcern(command, self, options);","  // Force write using primary","  commandOptions.readPreference = CoreReadPreference.primary;","  // Execute the command","  self.command(command, commandOptions, function(err, result) {","  // Attempt to execute command","  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {","      // If we have another db set","      var db = options.dbName ? self.db(options.dbName) : self;","      // Fetch a user collection","      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);","      // Locate the user","      collection.findOne({user: username}, {}, function(err, user) {","/**"," * Remove a user from a database"," * @method"," * @param {string} username The username."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.removeUser = function(username, options, callback) {","  // Unpack the parameters","  var self = this;","  // If we have a callback fallback","  if(typeof callback == 'function') return removeUser(self, username, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // the default db to authenticate against is 'self'","  // if authententicate is called from a retry context, it may be another one, like admin","  var authdb = options.authdb ? options.authdb : options.dbName;","  // Callback","  var _callback = function(err, result) {","    // Return to caller","    handleCallback(callback, err, result);","  // authMechanism","  var authMechanism = options.authMechanism || '';","  // If classic auth delegate to auth command","  if(authMechanism == 'MONGODB-CR') {","/**"," * Authenticate a user against the server."," * @method"," * @param {string} username The username."," * @param {string} [password] The password."," * @param {object} [options=null] Optional settings."," * @param {string} [options.authMechanism=MONGODB-CR] The authentication mechanism to use, GSSAPI, MONGODB-CR, MONGODB-X509, PLAIN"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.authenticate = function(username, password, options, callback) {","  // Shallow copy the options","  options = shallowClone(options);","  // Set default mechanism","  if(!options.authMechanism) {","  // If we have a callback fallback","  if(typeof callback == 'function') return authenticate(self, username, password, options, function(err, r) {","    // Support failed auth method","    if(err \u0026\u0026 err.message \u0026\u0026 err.message.indexOf('saslStart') != -1) err.code = 59;","    // Reject error","    if(err) return callback(err, r);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","      // Support failed auth method","      if(err \u0026\u0026 err.message \u0026\u0026 err.message.indexOf('saslStart') != -1) err.code = 59;","      // Reject error","      if(err) return reject(err);","/**"," * Logout user from server, fire off on all connections and remove all auth info"," * @method"," * @param {object} [options=null] Optional settings."," * @param {string} [options.dbName=null] Logout against different database than current."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.logout = function(options, callback) {","  // logout command","  var cmd = {'logout':1};","  // Add onAll to login to ensure all connection are logged out","  options.onAll = true;","  // We authenticated against a different db use that","  if(this.s.authSource) options.dbName = this.s.authSource;","  // Execute the command","  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Return promise","  return new this.s.promiseLibrary(function(resolve, reject) {","      // Did the user destroy the topology","      if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","// Figure out the read preference","var getReadPreference = function(options, db) {","/**"," * Retrieves this collections index info."," * @method"," * @param {string} name The name of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.full=false] Returns the full raw index information."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.indexInformation = function(name, options, callback) {","  // If we have a callback fallback","  if(typeof callback == 'function') return indexInformation(self, name, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    // If we specified full information","  var full = options['full'] == null ? false : options['full'];","  // Did the user destroy the topology","  if(self.serverConfig \u0026\u0026 self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Process all the results from the index command and collection","  var processResults = function(indexes) {","    // Contains all the information","    var info = {};","    // Process all the indexes","    for(var i = 0; i \u003c indexes.length; i++) {","      // Let's unpack the object","      info[index.name] = [];","  // Get the list of indexes of the specified collection","  self.collection(name).listIndexes().toArray(function(err, indexes) {","  // Generate the index name","  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;","  // Ensure we have a correct finalUnique","  var finalUnique = options == null || 'object' === typeof options ? false : options;","  // Set up options","  options = options == null || typeof options == 'boolean' ? {} : options;","  // Add all the options","  var keysToOmit = Object.keys(selector);","  // Remove any write concern operations","  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];","  // Return the command creation selector","  return selector;","  // Build the index","  var indexParameters = parseIndexOptions(fieldOrSpec);","  // Generate the index name","  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;","  // Set up the index","  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];","  // merge all the options","  var keysToOmit = Object.keys(indexes[0]);","    // Remove any write concern operations","    var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];","  // Create command, apply write concern to command","  var cmd = writeConcern({createIndexes: name, indexes: indexes}, self, options);","  // Build the command","  self.command(cmd, options, function(err, result) {","    // Return the indexName for backward compatibility","    handleCallback(callback, null, indexName);","// Validate the database name","var validateDatabaseName = function(databaseName) {","// Get write concern","var writeConcern = function(target, db, options) {","// Add listeners to topology","var createListener = function(self, e, object) {","      // Emit on all associated db's if available","      for(var i = 0; i \u003c self.s.children.length; i++) {","/**"," * Unref all sockets"," * @method"," */","Db.prototype.unref = function(options, callback) {","/**"," * Db close event"," *"," * Emitted after a socket closed against a single server or mongos proxy."," *"," * @event Db#close"," * @type {MongoError}"," */","","/**"," * Db authenticated event"," *"," * Emitted after all server members in the topology (single server, replicaset or mongos) have successfully authenticated."," *"," * @event Db#authenticated"," * @type {object}"," */","","/**"," * Db reconnect event"," *"," *  * Server: Emitted when the driver has reconnected and re-authenticated."," *  * ReplicaSet: N/A"," *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos."," *"," * @event Db#reconnect"," * @type {object}"," */","","/**"," * Db error event"," *"," * Emitted after an error occurred against a single server or mongos proxy."," *"," * @event Db#error"," * @type {MongoError}"," */","","/**"," * Db timeout event"," *"," * Emitted after a socket timeout occurred against a single server or mongos proxy."," *"," * @event Db#timeout"," * @type {MongoError}"," */","","/**"," * Db parseError event"," *"," * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server."," *"," * @event Db#parseError"," * @type {MongoError}"," */","","/**"," * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time."," *"," * * Server: Emitted when the driver has connected to the single server and has authenticated."," * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members."," * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies."," *"," * @event Db#fullsetup"," * @type {Db}"," */","","// Constants","// Constants","Db.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";"],"Functions":[" * MongoClient.connect(url, function(err, db) "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","var Db = function(databaseName, topology, options) ","    promiseLibrary = typeof global.Promise == 'function' ?","  get: function()  return this.s.topology; }","  get: function()  return this.s.options; }","  get: function()  return this.s.topology.parserType() == 'c++'; }","  get: function() ","  get: function() ","var open = function(self, callback) ","  self.s.topology.connect(self, self.s.options, function(err, topology) ","Db.prototype.open = function(callback) ","  if(typeof callback == 'function') return open(self, callback);","  return new self.s.promiseLibrary(function(resolve, reject) ","    open(self, function(err, db) ","var convertReadPreference = function(readPreference) ","var executeCommand = function(self, command, options, callback) ","  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) ","Db.prototype.command = function(command, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return executeCommand(self, command, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    executeCommand(self, command, options, function(err, r) ","Db.prototype.close = function(force, callback) ","  if(typeof force == 'function') callback = force, force = false;","  if(typeof callback == 'function') return process.nextTick(function() ","  return new this.s.promiseLibrary(function(resolve, reject) ","Db.prototype.admin = function() "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Db.prototype.collection = function(name, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback != 'function') ","  this.listCollections(name:name}).toArray(function(err, collections) {","var createCollection = function(self, name, options, callback) ","  self.listCollections(name: name}).toArray(function(err, collections) {","      if(options[n] != null \u0026\u0026 typeof options[n] != 'function')","    self.command(cmd, finalOptions, function(err, result) "," * @param boolean} [options.serializeFunctions=false] Serialize functions on any object.","Db.prototype.createCollection = function(name, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return createCollection(self, name, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    createCollection(self, name, options, function(err, r) ","Db.prototype.stats = function(options, callback) ","  if(typeof options == 'function') callback = options, options = };","var listCollectionsTranforms = function(databaseName) ","    doc: function(doc) ","Db.prototype.listCollections = function(filter, options) ","var evaluate = function(self, code, parameters, options, callback) ","  if(parameters != null \u0026\u0026 !Array.isArray(parameters) \u0026\u0026 typeof parameters !== 'function') ","  } else if(parameters != null \u0026\u0026 Array.isArray(parameters) \u0026\u0026 typeof parameters !== 'function') ","  self.command(cmd, options, function(err, result) ","Db.prototype.eval = function(code, parameters, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    evaluate(self, code, parameters, options, function(err, r) ","Db.prototype.renameCollection = function(fromCollection, toCollection, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.collection(fromCollection).rename(toCollection, options, function(err, r) ","Db.prototype.dropCollection = function(name, callback) ","  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.command(cmd, self.s.options, function(err, result) ","Db.prototype.dropDatabase = function(callback) ","  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.command(cmd, self.s.options, function(err, result) ","var collections = function(self, callback) ","  self.listCollections().toArray(function(err, documents) ","    documents = documents.filter(function(doc) ","    handleCallback(callback, null, documents.map(function(d) ","Db.prototype.collections = function(callback) ","  if(typeof callback == 'function') return collections(self, callback);","  return new self.s.promiseLibrary(function(resolve, reject) ","    collections(self, function(err, r) ","Db.prototype.executeDbAdminCommand = function(selector, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return self.s.topology.command('admin.$cmd', selector, options, function(err, result) ","  return new self.s.promiseLibrary(function(resolve, reject) ","    self.s.topology.command('admin.$cmd', selector, options, function(err, result) ","Db.prototype.createIndex = function(name, fieldOrSpec, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  options = typeof callback === 'function' ? options : callback;","  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    createIndex(self, name, fieldOrSpec, options, function(err, r) ","var createIndex = function(self, name, fieldOrSpec, options, callback) ","  if(finalOptions.writeConcern \u0026\u0026 typeof callback != 'function') ","  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) ","    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) ","Db.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    ensureIndex(self, name, fieldOrSpec, options, function(err, r) ","var ensureIndex = function(self, name, fieldOrSpec, options, callback) ","  self.indexInformation(name, finalOptions, function(err, indexInformation) ","      if(typeof callback === 'function') return handleCallback(callback, null, index_name);","Db.prototype.addChild = function(db) ","Db.prototype.db = function(dbName, options) ","var _executeAuthCreateUserCommand = function(self, username, password, options, callback) ","  if(typeof options == 'function') ","  self.command(command, commandOptions, function(err, result) ","var addUser = function(self, username, password, options, callback) ","  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) ","      collection.count(}, function(err, count) {","        collection.find(user: username}, {dbName: options['dbName']}).toArray(function(err, documents) {","          collection.update(user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err, results, full) {","Db.prototype.addUser = function(username, password, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return addUser(self, username, password, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    addUser(self, username, password, options, function(err, r) ","var _executeAuthRemoveUserCommand = function(self, username, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  self.command(command, commandOptions, function(err, result) ","var removeUser = function(self, username, options, callback) ","  _executeAuthRemoveUserCommand(self, username, options, function(err, result) ","      collection.findOne(user: username}, {}, function(err, user) {","        collection.remove(user: username}, finalOptions, function(err, result) {","Db.prototype.removeUser = function(username, options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return removeUser(self, username, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    removeUser(self, username, options, function(err, r) ","var authenticate = function(self, username, password, options, callback) ","  var _callback = function(err, result) ","    self.s.topology.auth('mongocr', authdb, username, password, function(err, result) ","    self.s.topology.auth('plain', authdb, username, password, function(err, result) ","    self.s.topology.auth('x509', authdb, username, password, function(err, result) ","    self.s.topology.auth('scram-sha-1', authdb, username, password, function(err, result) ","      self.s.topology.auth('sspi', authdb, username, password, options, function(err, result) ","      self.s.topology.auth('gssapi', authdb, username, password, options, function(err, result) ","    self.s.topology.auth('default', authdb, username, password, function(err, result) ","Db.prototype.authenticate = function(username, password, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return authenticate(self, username, password, options, function(err, r) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    authenticate(self, username, password, options, function(err, r) ","Db.prototype.logout = function(options, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) ","  return new this.s.promiseLibrary(function(resolve, reject) ","    self.command(cmd, options, function(err, result) ","var getReadPreference = function(options, db) ","Db.prototype.indexInformation = function(name, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  if(typeof callback == 'function') return indexInformation(self, name, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) ","    indexInformation(self, name, options, function(err, r) ","var indexInformation = function(self, name, options, callback) ","  var processResults = function(indexes) ","  self.collection(name).listIndexes().toArray(function(err, indexes) ","var createCreateIndexCommand = function(db, name, fieldOrSpec, options) ","var createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) ","  self.command(cmd, options, function(err, result) ","var validateDatabaseName = function(databaseName) ","var writeConcern = function(target, db, options) ","var createListener = function(self, e, object) ","  var listener = function(err) ","Db.prototype.unref = function(options, callback) "],"Dependencies":["events","util","./utils","./utils","./utils","./utils","./command_cursor","./utils","./utils","./read_preference","util","./admin","mongodb-core","mongodb-core","mongodb-core","mongodb-core","./metadata","mongodb-core","./collection","crypto","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\gridfs\\chunk.js","LineCount":234,"CharCount":6941,"Comments":["/**"," * Class for representing a single chunk in GridFS."," *"," * @class"," *"," * @param file {GridStore} The {@link GridStore} object holding this chunk."," * @param mongoObject {object} The mongo object representation of this chunk."," *"," * @throws Error when the type of data field for {@link mongoObject} is not"," *     supported. Currently supported types for data field are instances of"," *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}"," *     from the bson module"," *"," * @see Chunk#buildMongoObject"," */","var Chunk = function(file, mongoObject, writeConcern) {","  // Update position","  this.internalPosition = 0;","/**"," * Writes a data to this object and advance the read/write head."," *"," * @param data {string} the data to write"," * @param callback {function(*, GridStore)} This will be called after executing"," *     this method. The first parameter will contain null and the second one"," *     will contain a reference to this object."," */","Chunk.prototype.write = function(data, callback) {","/**"," * Reads data and advances the read/write head."," *"," * @param length {number} The length of data to read."," *"," * @return {string} The data read if the given length will not exceed the end of"," *     the chunk. Returns an empty String otherwise."," */","Chunk.prototype.read = function(length) {","  // Default to full read if no index defined","  length = length == null || length == 0 ? this.length() : length;","    if (this.data.buffer != null) { //Pure BSON","      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);","    } else { //Native BSON","      data = new Buffer(length);","/**"," * Checks if the read/write head is at the end."," *"," * @return {boolean} Whether the read/write head has reached the end of this"," *     chunk."," */","Chunk.prototype.eof = function() {","/**"," * Reads one character from the data of this chunk and advances the read/write"," * head."," *"," * @return {string} a single character data read if the the read/write head is"," *     not at the end of the chunk. Returns an empty String otherwise."," */","Chunk.prototype.getc = function() {","/**"," * Clears the contents of the data in this chunk and resets the read/write head"," * to the initial position."," */","Chunk.prototype.rewind = function() {","/**"," * Saves this chunk to the database. Also overwrites existing entries having the"," * same id as this chunk."," *"," * @param callback {function(*, GridStore)} This will be called after executing"," *     this method. The first parameter will contain null and the second one"," *     will contain a reference to this object."," */","Chunk.prototype.save = function(options, callback) {","    // Merge the options","    var writeOptions = { upsert: true };","    // });","  });","/**"," * Creates a mongoDB object representation of this chunk."," *"," * @param callback {function(Object)} This will be called after executing this"," *     method. The object will be passed to the first parameter and will have"," *     the structure:"," *"," *        \u003cpre\u003e\u003ccode\u003e"," *        {"," *          '_id' : , // {number} id for this chunk"," *          'files_id' : , // {number} foreign key to the file collection"," *          'n' : , // {number} chunk number"," *          'data' : , // {bson#Binary} the chunk data itself"," *        }"," *        \u003c/code\u003e\u003c/pre\u003e"," *"," * @see \u003ca href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\"\u003eMongoDB GridFS Chunk Object Structure\u003c/a\u003e"," */","Chunk.prototype.buildMongoObject = function(callback) {","  // If we are saving using a specific ObjectId","  if(this.objectId != null) mongoObject._id = this.objectId;","/**"," * @return {number} the length of the data"," */","Chunk.prototype.length = function() {","/**"," * The position of the read/write head"," * @name position"," * @lends Chunk#"," * @field"," */","Object.defineProperty(Chunk.prototype, \"position\", { enumerable: true","/**"," * The default chunk size"," * @constant"," */","Chunk.DEFAULT_CHUNK_SIZE = 1024 * 255;"],"Functions":["var Chunk = function(file, mongoObject, writeConcern) "," * @param callback function(*, GridStore)} This will be called after executing","Chunk.prototype.write = function(data, callback) ","Chunk.prototype.read = function(length) ","Chunk.prototype.readSlice = function(length) ","Chunk.prototype.eof = function() ","Chunk.prototype.getc = function() ","Chunk.prototype.rewind = function() "," * @param callback function(*, GridStore)} This will be called after executing","Chunk.prototype.save = function(options, callback) ","  if(typeof options == 'function') ","  self.file.chunkCollection(function(err, collection) ","      self.buildMongoObject(function(mongoObject) ","        collection.replaceOne('_id':self.objectId}, mongoObject, writeOptions, function(err, collection) {"," * @param callback function(Object)} This will be called after executing this","Chunk.prototype.buildMongoObject = function(callback) ","Chunk.prototype.length = function() ","  , get: function () ","  , set: function(value) "],"Dependencies":["mongodb-core","mongodb-core"]},{"FileName":"node_modules\\mongodb\\lib\\gridfs\\grid_store.js","LineCount":1957,"CharCount":65968,"Comments":["/**"," * @fileOverview GridFS is a tool for MongoDB to store files to the database."," * Because of the restrictions of the object size the database can hold, a"," * facility to split a file into several chunks is needed. The {@link GridStore}"," * class offers a simplified api to interact with files while managing the"," * chunks of split files behind the scenes. More information about GridFS can be"," * found \u003ca href=\"http://www.mongodb.org/display/DOCS/GridFS\"\u003ehere\u003c/a\u003e."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   GridStore = require('mongodb').GridStore,"," *   ObjectID = require('mongodb').ObjectID,"," *   test = require('assert');"," *"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   var gridStore = new GridStore(db, null, \"w\");"," *   gridStore.open(function(err, gridStore) {"," *     gridStore.write(\"hello world!\", function(err, gridStore) {"," *       gridStore.close(function(err, result) {"," *"," *         // Let's read the file using object Id"," *         GridStore.read(db, result._id, function(err, data) {"," *           test.equal('hello world!', data);"," *           db.close();"," *           test.done();"," *         });"," *       });"," *     });"," *   });"," * });"," */","var Chunk = require('./chunk'),","/**"," * Namespace provided by the mongodb-core and node.js"," * @external Duplex"," */","","/**"," * Create a new GridStore instance"," *"," * Modes"," *  - **\"r\"** - read only. This is the default mode."," *  - **\"w\"** - write in truncate mode. Existing data will be overwriten."," *"," * @class"," * @param {Db} db A database instance to interact with."," * @param {object} [id] optional unique id for this file"," * @param {string} [filename] optional filename for this file, no unique constrain on the field"," * @param {string} mode set the mode for this file."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {string} [options.root=null] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {string} [options.content_type=null] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**."," * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**."," * @param {object} [options.metadata=null] Arbitrary data the user wants to store."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @property {number} chunkSize Get the gridstore chunk size."," * @property {number} md5 The md5 checksum for this file."," * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory"," * @return {GridStore} a GridStore instance."," * @deprecated Use GridFSBucket API instead"," */","var GridStore = function GridStore(db, id, filename, mode, options) {","  // Handle options","  if(typeof options === 'undefined') options = {};","  // Handle mode","  if(typeof mode === 'undefined') {","  // Set up the rest","  this.mode = mode == null ? \"r\" : mode;","  // Opened","  this.isOpen = false;","  // Set the root if overridden","  this.root = this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];","  // Set default chunk size","  this.internalChunkSize = this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];","  // Get the promiseLibrary","  var promiseLibrary = this.options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Set the promiseLibrary","  this.promiseLibrary = promiseLibrary;","/**"," * The callback format for the Gridstore.open method"," * @callback GridStore~openCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {GridStore} gridStore The GridStore instance if the open method was successful."," */","","/**"," * Opens the file from the database and initialize this object. Also creates a"," * new one if file does not exist."," *"," * @method"," * @param {GridStore~openCallback} [callback] this will be called after executing this method"," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.open = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return open(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","  // Get the write concern","  var writeConcern = _getWriteConcern(self.db, self.options);","  // If we are writing we need to ensure we have the right indexes for md5's","  if((self.mode == \"w\" || self.mode == \"w+\")) {","    // Get files collection","    var collection = self.collection();","    // Put index on filename","    collection.ensureIndex([['filename', 1]], writeConcern, function(err, index) {","      // Get chunk collection","      var chunkCollection = self.chunkCollection();","      // Make an unique index for compatibility with mongo-cxx-driver:legacy","      var chunkIndexOptions = shallowClone(writeConcern);","      // Ensure index on chunk collection","      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function(err, index) {","        // Open the connection","        _open(self, writeConcern, function(err, r) {","    // Open the gridstore","    _open(self, writeConcern, function(err, r) {","// Push the definition for open","define.classMethod('open', {callback: true, promise:true});","/**"," * Verify if the file is at EOF."," *"," * @method"," * @return {boolean} true if the read/write head is at the end of this file."," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.eof = function() {","/**"," * The callback result format."," * @callback GridStore~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result from the callback."," */","","/**"," * Retrieves a single character from this file."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.getc = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return eof(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * Writes a string to the file with a newline character appended at the end if"," * the given string does not have one."," *"," * @method"," * @param {string} string the string to write."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.puts = function(string, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return this.write(finalString, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * Return a modified Readable stream including a possible transform method."," *"," * @method"," * @return {GridStoreStream}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.stream = function() {","/**"," * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\"."," *"," * @method"," * @param {(string|Buffer)} data the data to write."," * @param {boolean} [close] closes this file after writing if set to true."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.write = function write(data, close, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return _writeNormal(this, data, close, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * Handles the destroy part of a stream"," *"," * @method"," * @result {null}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.destroy = function destroy() {","  // close and do not emit any more events. queued data is not sent.","  if(!this.writable) return;","/**"," * Stores a file from the file system to the GridFS database."," *"," * @method"," * @param {(string|Buffer|FileHandle)} file the file to store."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.writeFile = function (file, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return writeFile(self, file, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","      // Write a chunk","      var writeChunk = function() {","          // Create a new chunk for the data","          var chunk = new Chunk(self, {n:index++}, self.writeConcern);","              // Point to current chunk","              self.currentChunk = chunk;","      // Process the first write","      process.nextTick(writeChunk);","/**"," * Saves this file to the database. This will overwrite the old entry if it"," * already exists. This will work properly only if mode was initialized to"," * \"w\" or \"w+\"."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.close = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return close(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    // Set up options","    var options = self.writeConcern;","          // Build the mongo object","          if(self.uploadDate != null) {","/**"," * The collection callback format."," * @callback GridStore~collectionCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection from the command execution."," */","","/**"," * Retrieve this file's chunks collection."," *"," * @method"," * @param {GridStore~collectionCallback} callback the command callback."," * @return {Collection}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.chunkCollection = function(callback) {","/**"," * Deletes all the chunks of this file in the database."," *"," * @method"," * @param {GridStore~resultCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.unlink = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return unlink(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * Retrieves the file collection associated with this object."," *"," * @method"," * @param {GridStore~collectionCallback} callback the command callback."," * @return {Collection}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.collection = function(callback) {","/**"," * The readlines callback format."," * @callback GridStore~readlinesCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {string[]} strings The array of strings returned."," */","","/**"," * Read the entire file as a list of strings splitting by the provided separator."," *"," * @method"," * @param {string} [separator] The character to be recognized as the newline separator."," * @param {GridStore~readlinesCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.readlines = function(separator, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return readlines(self, separator, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * Deletes all the chunks of this file in the database if mode was set to \"w\" or"," * \"w+\" and resets the read/write head to the initial position."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.rewind = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return rewind(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * The read callback format."," * @callback GridStore~readCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Buffer} data The data read from the GridStore object"," */","","/**"," * Retrieves the contents of this file and advances the read/write head. Works with Buffers only."," *"," * There are 3 signatures for this method:"," *"," * (callback)"," * (length, callback)"," * (length, buffer, callback)"," *"," * @method"," * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified."," * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method."," * @param {GridStore~readCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.read = function(length, buffer, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return read(self, length, buffer, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","  // The data is a c-terminated string and thus the length - 1","  var finalLength = length == null ? self.length - self.position : length;","  // Add a index to buffer to keep track of writing position or apply current index","  finalBuffer._index = buffer != null \u0026\u0026 buffer._index != null ? buffer._index : 0;","    // Copy content to final buffer","    slice.copy(finalBuffer, finalBuffer._index);","    // Update internal position","    self.position = self.position + finalBuffer.length;","    // Check if we don't have a file at all","    if(finalLength == 0 \u0026\u0026 finalBuffer.length == 0) return callback(MongoError.create({message: \"File does not exist\", driver:true}), null);","    // Else return data","    return callback(null, finalBuffer);","  // Read the next chunk","  var slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);","  // Copy content to final buffer","  slice.copy(finalBuffer, finalBuffer._index);","  // Update index position","  finalBuffer._index += slice.length;","  // Load next chunk and read more","  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {","/**"," * The tell callback format."," * @callback GridStore~tellCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} position The current read position in the GridStore."," */","","/**"," * Retrieves the position of the read/write head of this file."," *"," * @method"," * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified."," * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method."," * @param {GridStore~tellCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.tell = function(callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return callback(null, this.position);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","/**"," * The tell callback format."," * @callback GridStore~gridStoreCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {GridStore} gridStore The gridStore."," */","","/**"," * Moves the read/write head to a new location."," *"," * There are 3 signatures for this method"," *"," * Seek Location Modes"," *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file."," *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file."," *  - **GridStore.IO_SEEK_END**, set the position from the end of the file."," *"," * @method"," * @param {number} [position] the position to seek to"," * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes."," * @param {GridStore~gridStoreCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.seek = function(position, seekLocation, callback) {","  // We provided a callback leg","  if(typeof callback == 'function') return seek(self, position, seekLocation, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","  // Seek only supports read mode","  if(self.mode != 'r') {","  // Calculate the position","  if(seekLocationFinal == GridStore.IO_SEEK_CUR) {","  // Get the chunk","  var newChunkNumber = Math.floor(targetPosition/self.chunkSize);","      // Set the current chunk","      self.currentChunk = chunk;","/**"," * @ignore"," */","var _open = function(self, options, callback) {","  // Create the query","  var query = self.referenceBy == REFERENCE_BY_ID ? {_id:self.fileId} : {filename:self.filename};","  // Fetch the chunks","  if(query != null) {","      // Check if the collection for the files exists otherwise prepare the new one","      if(doc != null) {","        // Prefer a new filename over the existing one if this is a write","        self.filename = ((self.mode == 'r') || (self.filename == undefined)) ? doc.filename : self.filename;","      // Process the mode of the object","      if(self.mode == \"r\") {","        // Delete any existing chunks","        deleteChunks(self, options, function(err, result) {","          // Set the current chunk","          self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;","    // Write only mode","    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;","    // No file exists set up write mode","    if(self.mode == \"w\") {","      // Delete any existing chunks","      deleteChunks(self, options, function(err, result) {","        // Set the current chunk","        self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;","  // only pass error to callback once","  function error (err) {","/**"," * @ignore"," */","var writeBuffer = function(self, buffer, close, callback) {","      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left","      // to a new chunk (recursively)","      var previousChunkNumber = self.currentChunk.chunkNumber;","      // A list of chunks to write out","      var chunksToWrite = [self.currentChunk.write(firstChunkData)];","      // If we have more data left than the chunk size let's keep writing new chunks","      while(leftOverData.length \u003e= self.chunkSize) {","        // Create a new chunk and write to it","        var newChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);","        // Update chunk number","        previousChunkNumber = previousChunkNumber + 1;","        // Write data","        newChunk.write(firstChunkData);","        // Push chunk to save list","        chunksToWrite.push(newChunk);","      // Set current chunk with remaining data","      self.currentChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);","      // If we have left over data write it","      if(leftOverData.length \u003e 0) self.currentChunk.write(leftOverData);","      // Update the position for the gridstore","      self.position = self.position + buffer.length;","      // Total number of chunks to write","      var numberOfChunksToWrite = chunksToWrite.length;","            // We care closing the file before returning","            if(finalClose) {","            // Return normally","            return callback(null, self);","      // Update the position for the gridstore","      self.position = self.position + buffer.length;","      // We have less data than the chunk size just write it and callback","      self.currentChunk.write(buffer);","      // We care closing the file before returning","      if(finalClose) {","      // Return normally","      return callback(null, self);","/**"," * Creates a mongoDB object representation of this object."," *"," *        \u003cpre\u003e\u003ccode\u003e"," *        {"," *          '_id' : , // {number} id for this file"," *          'filename' : , // {string} name for this file"," *          'contentType' : , // {string} mime type for this file"," *          'length' : , // {number} size of this file?"," *          'chunksize' : , // {number} chunk size used by this file"," *          'uploadDate' : , // {Date}"," *          'aliases' : , // {array of string}"," *          'metadata' : , // {string}"," *        }"," *        \u003c/code\u003e\u003c/pre\u003e"," *"," * @ignore"," */","var buildMongoObject = function(self, callback) {","  // Calcuate the length","  var mongoObject = {","/**"," * Gets the nth chunk of this file."," * @ignore"," */","var nthChunk = function(self, chunkNumber, options, callback) {","  // Get the nth chunk","  self.chunkCollection().findOne({'files_id':self.fileId, 'n':chunkNumber}, options, function(err, chunk) {","/**"," * @ignore"," */","var lastChunkNumber = function(self) {","/**"," * Deletes all the chunks of this file in the database."," *"," * @ignore"," */","var deleteChunks = function(self, options, callback) {","/**","* The collection to be used for holding the files and chunks collection.","*","* @classconstant DEFAULT_ROOT_COLLECTION","**/","GridStore.DEFAULT_ROOT_COLLECTION = 'fs';","/**","* Default file mime type","*","* @classconstant DEFAULT_CONTENT_TYPE","**/","GridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';","/**","* Seek mode where the given length is absolute.","*","* @classconstant IO_SEEK_SET","**/","GridStore.IO_SEEK_SET = 0;","/**","* Seek mode where the given length is an offset to the current read/write head.","*","* @classconstant IO_SEEK_CUR","**/","GridStore.IO_SEEK_CUR = 1;","/**","* Seek mode where the given length is an offset to the end of the file.","*","* @classconstant IO_SEEK_END","**/","GridStore.IO_SEEK_END = 2;","/**"," * Checks if a file exists in the database."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} name The name of the file to look for."," * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] result from exists."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // We provided a callback leg","  if(typeof callback == 'function') return exists(db, fileIdObject, rootCollection, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","  // Establish read preference","  var readPreference = options.readPreference || ReadPreference.PRIMARY;","  // Fetch collection","  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;","    // Build query","    var query = (typeof fileIdObject == 'string' || Object.prototype.toString.call(fileIdObject) == '[object RegExp]' )","      : {'_id':fileIdObject};    // Attempt to locate file","","    // We have a specific query","    if(fileIdObject != null","    // Check if the entry exists","    collection.findOne(query, {readPreference:readPreference}, function(err, item) {","/**"," * Gets the list of files stored in the GridFS."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] result from exists."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.list = function(db, rootCollection, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // We provided a callback leg","  if(typeof callback == 'function') return list(db, rootCollection, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","  // Ensure we have correct values","  if(rootCollection != null \u0026\u0026 typeof rootCollection == 'object') {","  // Establish read preference","  var readPreference = options.readPreference || ReadPreference.PRIMARY;","  // Check if we are returning by id not filename","  var byId = options['id'] != null ? options['id'] : false;","  // Fetch item","  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;","/**"," * Reads the contents of a file."," *"," * This method has the following signatures"," *"," * (db, name, callback)"," * (db, name, length, callback)"," * (db, name, length, offset, callback)"," * (db, name, length, offset, options, callback)"," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} name The name of the file."," * @param {number} [length] The size of data to read."," * @param {number} [offset] The offset from the head of the file of which to start reading from."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~readCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.read = function(db, name, length, offset, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options ? options.promiseLibrary : null;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // We provided a callback leg","  if(typeof callback == 'function') return readStatic(db, name, length, offset, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    // Make sure we are not reading out of bounds","    if(offset \u0026\u0026 offset \u003e= gridStore.length) return callback(\"offset larger than size of file\", null);","/**"," * Read the entire file as a list of strings splitting by the provided separator."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {(String|object)} name the name of the file."," * @param {string} [separator] The character to be recognized as the newline separator."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~readlinesCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.readlines = function(db, name, separator, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options ? options.promiseLibrary : null;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // We provided a callback leg","  if(typeof callback == 'function') return readlinesStatic(db, name, separator, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","/**"," * Deletes the chunks and metadata information of a file from GridFS."," *"," * @method"," * @static"," * @param {Db} db The database to query."," * @param {(string|array)} names The name/names of the files to delete."," * @param {object} [options=null] Optional settings."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.unlink = function(db, names, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // We provided a callback leg","  if(typeof callback == 'function') return unlinkStatic(self, db, names, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","  // Get the write concern","  var writeConcern = _getWriteConcern(db, options);","  // List of names","  if(names.constructor == Array) {","/**"," *  @ignore"," */","var _writeNormal = function(self, data, close, callback) {","  // If we have a buffer write it using the writeBuffer method","  if(Buffer.isBuffer(data)) {","/**"," * @ignore"," */","var _setWriteConcernHash = function(options) {","/**"," * @ignore"," */","var _getWriteConcern = function(self, options) {","  // Final options","  var finalOptions = {w:1};","  // Local options verification","  if(options.w != null || typeof options.j == 'boolean' || typeof options.journal == 'boolean' || typeof options.fsync == 'boolean') {","  // Ensure we don't have an invalid combination of write concerns","  if(finalOptions.w \u003c 1","  // Return the options","  return finalOptions;","/**"," * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @extends external:Duplex"," * @return {GridStoreStream} a GridStoreStream instance."," * @deprecated Use GridFSBucket API instead"," */","var GridStoreStream = function(gs) {","  // Initialize the duplex stream","  Duplex.call(this);","  // Get the gridstore","  this.gs = gs;","  // End called","  this.endCalled = false;","  // If we have a seek","  this.totalBytesToRead = this.gs.length - this.gs.position;","//","// Inherit duplex","inherits(GridStoreStream, Duplex);","// Set up override","GridStoreStream.prototype.pipe = function(destination) {","  // Only open gridstore if not already open","  if(!self.gs.isOpen) {","// Called by stream","GridStoreStream.prototype._read = function(n) {","    // Read data","    self.gs.read(length, function(err, buffer) {","      // Stream is closed","      if(self.endCalled || buffer == null) return self.push(null);","      // Remove bytes read","      if(buffer.length \u003c= self.totalBytesToRead) {","      // Finished reading","      if(self.totalBytesToRead \u003c= 0) {","  // Set read length","  var length = self.gs.length \u003c self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;","  // Do we have to open the gridstore","  if(!self.gs.isOpen) {","/**"," * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null."," * @function external:Duplex#read"," * @param {number} size Optional argument to specify how much data to read."," * @return {(String | Buffer | null)}"," */","","/**"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Duplex#setEncoding"," * @param {string} encoding The encoding to use."," * @return {null}"," */","","/**"," * This method will cause the readable stream to resume emitting data events."," * @function external:Duplex#resume"," * @return {null}"," */","","/**"," * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer."," * @function external:Duplex#pause"," * @return {null}"," */","","/**"," * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream."," * @function external:Duplex#pipe"," * @param {Writable} destination The destination for writing data"," * @param {object} [options] Pipe options"," * @return {null}"," */","","/**"," * This method will remove the hooks set up for a previous pipe() call."," * @function external:Duplex#unpipe"," * @param {Writable} [destination] The destination for writing data"," * @return {null}"," */","","/**"," * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party."," * @function external:Duplex#unshift"," * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue."," * @return {null}"," */","","/**"," * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)"," * @function external:Duplex#wrap"," * @param {Stream} stream An \"old style\" readable stream."," * @return {null}"," */","","/**"," * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled."," * @function external:Duplex#write"," * @param {(string|Buffer)} chunk The data to write"," * @param {string} encoding The encoding, if chunk is a String"," * @param {function} callback Callback for when this chunk of data is flushed"," * @return {boolean}"," */","","/**"," * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event."," * @function external:Duplex#end"," * @param {(string|Buffer)} chunk The data to write"," * @param {string} encoding The encoding, if chunk is a String"," * @param {function} callback Callback for when this chunk of data is flushed"," * @return {null}"," */","","/**"," * GridStoreStream stream data event, fired for each document in the cursor."," *"," * @event GridStoreStream#data"," * @type {object}"," */","","/**"," * GridStoreStream stream end event"," *"," * @event GridStoreStream#end"," * @type {null}"," */","","/**"," * GridStoreStream stream close event"," *"," * @event GridStoreStream#close"," * @type {null}"," */","","/**"," * GridStoreStream stream readable event"," *"," * @event GridStoreStream#readable"," * @type {null}"," */","","/**"," * GridStoreStream stream drain event"," *"," * @event GridStoreStream#drain"," * @type {null}"," */","","/**"," * GridStoreStream stream finish event"," *"," * @event GridStoreStream#finish"," * @type {null}"," */","","/**"," * GridStoreStream stream pipe event"," *"," * @event GridStoreStream#pipe"," * @type {null}"," */","","/**"," * GridStoreStream stream unpipe event"," *"," * @event GridStoreStream#unpipe"," * @type {null}"," */","","/**"," * GridStoreStream stream error event"," *"," * @event GridStoreStream#error"," * @type {null}"," */","","/**"," * @ignore"," */","module.exports = GridStore;"],"Functions":[" * MongoClient.connect(url, function(err, db) "," *   gridStore.open(function(err, gridStore) "," *     gridStore.write(\"hello world!\", function(err, gridStore) "," *       gridStore.close(function(err, result) "," *         GridStore.read(db, result._id, function(err, data) ","var GridStore = function GridStore(db, id, filename, mode, options) ","    promiseLibrary = typeof global.Promise == 'function' ?","   , get: function () ","   , set: function(value) ","   , get: function () ","   , get: function () ","GridStore.prototype.open = function(callback) ","  if(typeof callback == 'function') return open(self, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    open(self, function(err, store) ","var open = function(self, callback) ","    collection.ensureIndex([['filename', 1]], writeConcern, function(err, index) ","      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function(err, index) ","        _open(self, writeConcern, function(err, r) ","    _open(self, writeConcern, function(err, r) ","GridStore.prototype.eof = function() ","GridStore.prototype.getc = function(callback) ","  if(typeof callback == 'function') return eof(self, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    eof(self, function(err, r) ","var eof = function(self, callback) ","    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) ","GridStore.prototype.puts = function(string, callback) ","  if(typeof callback == 'function') return this.write(finalString, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    self.write(finalString, function(err, r) ","GridStore.prototype.stream = function() ","GridStore.prototype.write = function write(data, close, callback) ","  if(typeof callback == 'function') return _writeNormal(this, data, close, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    _writeNormal(self, data, close, function(err, r) ","GridStore.prototype.destroy = function destroy() ","GridStore.prototype.writeFile = function (file, callback) ","  if(typeof callback == 'function') return writeFile(self, file, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    writeFile(self, file, function(err, r) ","var writeFile = function(self, file, callback) ","    fs.open(file, 'r', function (err, fd) ","  self.open(function (err, self) ","    fs.fstat(file, function (err, stats) ","      var writeChunk = function() ","        fs.read(file, self.chunkSize, offset, 'binary', function(err, data, bytesRead) ","          chunk.write(data, function(err, chunk) ","            chunk.save(}, function(err, result) {","                self.close(function(err, result) ","GridStore.prototype.close = function(callback) ","  if(typeof callback == 'function') return close(self, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    close(self, function(err, r) ","var close = function(self, callback) ","      self.currentChunk.save(}, function(err, chunk) {","        if(err \u0026\u0026 typeof callback == 'function') return callback(err);","        self.collection(function(err, files) ","          if(err \u0026\u0026 typeof callback == 'function') return callback(err);","            buildMongoObject(self, function(err, mongoObject) ","                if(typeof callback == 'function') return callback(err); else throw err;","              files.save(mongoObject, options, function(err) ","                if(typeof callback == 'function')","            buildMongoObject(self, function(err, mongoObject) ","                if(typeof callback == 'function') return callback(err); else throw err;","              files.save(mongoObject, options, function(err) ","                if(typeof callback == 'function')","      self.collection(function(err, files) ","        if(err \u0026\u0026 typeof callback == 'function') return callback(err);","        buildMongoObject(self, function(err, mongoObject) ","            if(typeof callback == 'function') return callback(err); else throw err;","          files.save(mongoObject, options, function(err) ","            if(typeof callback == 'function')","    if(typeof callback == 'function')","    if(typeof callback == 'function')","GridStore.prototype.chunkCollection = function(callback) ","  if(typeof callback == 'function')","GridStore.prototype.unlink = function(callback) ","  if(typeof callback == 'function') return unlink(self, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    unlink(self, function(err, r) ","var unlink = function(self, callback) ","  deleteChunks(self, function(err) ","    self.collection(function(err, collection) ","      collection.remove('_id':self.fileId}, self.writeConcern, function(err) {","GridStore.prototype.collection = function(callback) ","  if(typeof callback == 'function')","GridStore.prototype.readlines = function(separator, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return readlines(self, separator, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    readlines(self, separator, function(err, r) ","var readlines = function(self, separator, callback) ","  self.read(function(err, data) ","GridStore.prototype.rewind = function(callback) ","  if(typeof callback == 'function') return rewind(self, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    rewind(self, function(err, r) ","var rewind = function(self, callback) ","      deleteChunks(self, function(err, gridStore) ","      self.currentChunk(0, function(err, chunk) ","GridStore.prototype.read = function(length, buffer, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return read(self, length, buffer, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    read(self, length, buffer, function(err, r) ","var read = function(self, length, buffer, callback) ","  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) ","GridStore.prototype.tell = function(callback) ","  if(typeof callback == 'function') return callback(null, this.position);","  return new self.promiseLibrary(function(resolve, reject) ","GridStore.prototype.seek = function(position, seekLocation, callback) ","  if(typeof callback != 'function') args.push(callback);","  if(typeof callback == 'function') return seek(self, position, seekLocation, callback);","  return new self.promiseLibrary(function(resolve, reject) ","    seek(self, position, seekLocation, function(err, r) ","var seek = function(self, position, seekLocation, callback) ","  var seekChunk = function() ","    nthChunk(self, newChunkNumber, function(err, chunk) ","var _open = function(self, options, callback) ","    collection.findOne(query, options, function(err, doc) ","        nthChunk(self, 0, options, function(err, chunk) ","        deleteChunks(self, options, function(err, result) ","        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) ","      deleteChunks(self, options, function(err, result) ","      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) ","  function error (err) ","var writeBuffer = function(self, buffer, close, callback) ","  if(typeof close === \"function\")  callback = close; close = null; }","        chunksToWrite[i].save(}, function(err, result) {","              return self.close(function(err, result) ","        return self.close(function(err, result) ","var buildMongoObject = function(self, callback) ","  self.db.command(md5Command, function(err, results) ","var nthChunk = function(self, chunkNumber, options, callback) ","  if(typeof options == 'function') ","  self.chunkCollection().findOne('files_id':self.fileId, 'n':chunkNumber}, options, function(err, chunk) {","var lastChunkNumber = function(self) ","var deleteChunks = function(self, options, callback) ","  if(typeof options == 'function') ","    self.chunkCollection().remove('files_id':self.fileId}, options, function(err, result) {","GridStore.exist = function(db, fileIdObject, rootCollection, options, callback) ","  if(typeof callback != 'function') args.push(callback);","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback == 'function') return exists(db, fileIdObject, rootCollection, options, callback);","  return new promiseLibrary(function(resolve, reject) ","    exists(db, fileIdObject, rootCollection, options, function(err, r) ","var exists = function(db, fileIdObject, rootCollection, options, callback) ","  db.collection(rootCollectionFinal + \".files\", function(err, collection) ","    collection.findOne(query, readPreference:readPreference}, function(err, item) {","GridStore.list = function(db, rootCollection, options, callback) ","  if(typeof callback != 'function') args.push(callback);","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback == 'function') return list(db, rootCollection, options, callback);","  return new promiseLibrary(function(resolve, reject) ","    list(db, rootCollection, options, function(err, r) ","var list = function(db, rootCollection, options, callback) ","  db.collection((rootCollectionFinal + \".files\"), function(err, collection) ","    collection.find(}, {readPreference:readPreference}, function(err, cursor) {","      cursor.each(function(err, item) ","GridStore.read = function(db, name, length, offset, options, callback) ","  if(typeof callback != 'function') args.push(callback);","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback == 'function') return readStatic(db, name, length, offset, options, callback);","  return new promiseLibrary(function(resolve, reject) ","    readStatic(db, name, length, offset, options, function(err, r) ","var readStatic = function(db, name, length, offset, options, callback) ","  new GridStore(db, name, \"r\", options).open(function(err, gridStore) ","      gridStore.seek(offset, function(err, gridStore) ","GridStore.readlines = function(db, name, separator, options, callback) ","  if(typeof callback != 'function') args.push(callback);","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback == 'function') return readlinesStatic(db, name, separator, options, callback);","  return new promiseLibrary(function(resolve, reject) ","    readlinesStatic(db, name, separator, options, function(err, r) ","var readlinesStatic = function(db, name, separator, options, callback) ","  new GridStore(db, name, \"r\", options).open(function(err, gridStore) ","GridStore.unlink = function(db, names, options, callback) ","  if(typeof callback != 'function') args.push(callback);","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback == 'function') return unlinkStatic(self, db, names, options, callback);","  return new promiseLibrary(function(resolve, reject) ","    unlinkStatic(self, db, names, options, function(err, r) ","var unlinkStatic = function(self, db, names, options, callback) ","      GridStore.unlink(db, names[i], options, function(result) ","    new GridStore(db, names, \"w\", options).open(function(err, gridStore) ","      deleteChunks(gridStore, function(err, result) ","        gridStore.collection(function(err, collection) ","          collection.remove('_id':gridStore.fileId}, writeConcern, function(err, result) {","var _writeNormal = function(self, data, close, callback) ","var _setWriteConcernHash = function(options) ","var _getWriteConcern = function(self, options) ","var GridStoreStream = function(gs) ","GridStoreStream.prototype.pipe = function(destination) ","    self.gs.open(function(err) ","GridStoreStream.prototype._read = function(n) ","  var read = function() ","    self.gs.read(length, function(err, buffer) ","    self.gs.open(function(err, gs) ","GridStoreStream.prototype.destroy = function() ","GridStoreStream.prototype.write = function(chunk, encoding, callback) ","    self.gs.open(function() ","      self.gs.write(chunk, function() ","        process.nextTick(function() ","    self.gs.write(chunk, function() ","GridStoreStream.prototype.end = function(chunk, encoding, callback) ","  if(typeof callback != 'function') args.push(callback);","    self.gs.write(chunk, function() ","      self.gs.close(function() ","        if(typeof callback == 'function') callback();","  self.gs.close(function() ","    if(typeof callback == 'function') callback();"," * @function external:Duplex#read"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Duplex#setEncoding"," * @function external:Duplex#resume"," * @function external:Duplex#pause"," * @function external:Duplex#pipe"," * @function external:Duplex#unpipe"," * @function external:Duplex#unshift"," * @function external:Duplex#wrap"," * @function external:Duplex#write"," * @param function} callback Callback for when this chunk of data is flushed"," * @function external:Duplex#end"," * @param function} callback Callback for when this chunk of data is flushed"],"Dependencies":["mongodb","mongodb","mongodb","assert","./chunk","mongodb-core","../read_preference","buffer","../collection","fs","timers","util","util","../metadata","mongodb-core","stream\").Duplex||require(\"readable-stream","../utils"]},{"FileName":"node_modules\\mongodb\\lib\\gridfs-stream\\download.js","LineCount":388,"CharCount":9663,"Comments":["/**"," * A readable stream that enables you to read buffers from GridFS."," *"," * Do not instantiate this class directly. Use `openDownloadStream()` instead."," *"," * @class"," * @param {Collection} chunks Handle for chunks collection"," * @param {Collection} files Handle for files collection"," * @param {Object} readPreference The read preference to use"," * @param {Object} filter The query to use to find the file document"," * @param {Object} [options=null] Optional settings."," * @param {Number} [options.sort=null] Optional sort for the file find query"," * @param {Number} [options.skip=null] Optional skip for the file find query"," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @fires GridFSBucketReadStream#error"," * @fires GridFSBucketReadStream#file"," * @return {GridFSBucketReadStream} a GridFSBucketReadStream instance."," */","","function GridFSBucketReadStream(chunks, files, readPreference, filter, options) {","/**"," * An error occurred"," *"," * @event GridFSBucketReadStream#error"," * @type {Error}"," */","","/**"," * Fires when the stream loaded the file document corresponding to the"," * provided id."," *"," * @event GridFSBucketReadStream#file"," * @type {object}"," */","","/**"," * Emitted when a chunk of data is available to be consumed."," *"," * @event GridFSBucketReadStream#data"," * @type {object}"," */","","/**"," * Fired when the stream is exhausted (no more data events)."," *"," * @event GridFSBucketReadStream#end"," * @type {object}"," */","","/**"," * Fired when the stream is exhausted and the underlying cursor is killed"," *"," * @event GridFSBucketReadStream#close"," * @type {object}"," */","","/**"," * Reads from the cursor and pushes to the stream."," * @method"," */","","GridFSBucketReadStream.prototype._read = function() {","/**"," * Sets the 0-based offset in bytes to start streaming from. Throws"," * an error if this stream has entered flowing mode"," * (e.g. if you've already called `on('data')`)"," * @method"," * @param {Number} start Offset in bytes to start reading at"," * @return {GridFSBucketReadStream}"," */","","GridFSBucketReadStream.prototype.start = function(start) {","/**"," * Sets the 0-based offset in bytes to start streaming from. Throws"," * an error if this stream has entered flowing mode"," * (e.g. if you've already called `on('data')`)"," * @method"," * @param {Number} end Offset in bytes to stop reading at"," * @return {GridFSBucketReadStream}"," */","","GridFSBucketReadStream.prototype.end = function(end) {","/**"," * Marks this stream as aborted (will never push another `data` event)"," * and kills the underlying cursor. Will emit the 'end' event, and then"," * the 'close' event once the cursor is successfully killed."," *"," * @method"," * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred."," * @fires GridFSBucketWriteStream#close"," * @fires GridFSBucketWriteStream#end"," */","","GridFSBucketReadStream.prototype.abort = function(callback) {","      // If not initialized, fire close event because we will never","      // get a cursor","      _this.emit('close');","/**"," * @ignore"," */","","function throwIfInitialized(self) {","/**"," * @ignore"," */","","function doRead(_this) {","/**"," * @ignore"," */","","function init(self) {","    // If document is empty, kill the stream immediately and don't","    // execute any reads","    if (doc.length \u003c= 0) {","      // If user destroys the stream before we have a cursor, wait","      // until the query is done to say we're 'closed' because we can't","      // cancel a query.","      self.emit('close');","/**"," * @ignore"," */","","function waitForFile(_this, callback) {","/**"," * @ignore"," */","","function handleStartOption(stream, doc, cursor, options) {","/**"," * @ignore"," */","","function handleEndOption(stream, doc, cursor, options) {","/**"," * @ignore"," */","","function __handleError(_this, error) {"],"Functions":["function GridFSBucketReadStream(chunks, files, readPreference, filter, options) ","GridFSBucketReadStream.prototype._read = function() ","  waitForFile(_this, function() ","GridFSBucketReadStream.prototype.start = function(start) ","GridFSBucketReadStream.prototype.end = function(end) ","GridFSBucketReadStream.prototype.abort = function(callback) ","    this.s.cursor.close(function(error) ","function throwIfInitialized(self) ","function doRead(_this) ","  _this.s.cursor.next(function(error, doc) ","      return _this.s.cursor.close(function(error) ","function init(self) ","  self.s.files.findOne(self.s.filter, findOneOptions, function(error, doc) ","function waitForFile(_this, callback) ","  _this.once('file', function() ","function handleStartOption(stream, doc, cursor, options) ","function handleEndOption(stream, doc, cursor, options) ","function __handleError(_this, error) "],"Dependencies":["../utils","stream","util"]},{"FileName":"node_modules\\mongodb\\lib\\gridfs-stream\\index.js","LineCount":336,"CharCount":9885,"Comments":["/**"," * Constructor for a streaming GridFS interface"," * @class"," * @param {Db} db A db handle"," * @param {object} [options=null] Optional settings."," * @param {string} [options.bucketName=\"fs\"] The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot."," * @param {number} [options.chunkSizeBytes=255 * 1024] Number of bytes stored in each chunk. Defaults to 255KB"," * @param {object} [options.writeConcern=null] Optional write concern to be passed to write operations, for instance `{ w: 1 }`"," * @param {object} [options.readPreference=null] Optional read preference to be passed to read operations"," * @fires GridFSBucketWriteStream#index"," * @return {GridFSBucket}"," */","","function GridFSBucket(db, options) {","/**"," * When the first call to openUploadStream is made, the upload stream will"," * check to see if it needs to create the proper indexes on the chunks and"," * files collections. This event is fired either when 1) it determines that"," * no index creation is necessary, 2) when it successfully creates the"," * necessary indexes."," *"," * @event GridFSBucket#index"," * @type {Error}"," */","","/**"," * Returns a writable stream (GridFSBucketWriteStream) for writing"," * buffers to GridFS. The stream's 'id' property contains the resulting"," * file's id."," * @method"," * @param {string} filename The value of the 'filename' key in the files doc"," * @param {object} [options=null] Optional settings."," * @param {number} [options.chunkSizeBytes=null] Optional overwrite this bucket's chunkSizeBytes for this file"," * @param {object} [options.metadata=null] Optional object to store in the file document's `metadata` field"," * @param {string} [options.contentType=null] Optional string to store in the file document's `contentType` field"," * @param {array} [options.aliases=null] Optional array of strings to store in the file document's `aliases` field"," * @return {GridFSBucketWriteStream}"," */","","GridFSBucket.prototype.openUploadStream = function(filename, options) {","/**"," * Returns a readable stream (GridFSBucketReadStream) for streaming file"," * data from GridFS."," * @method"," * @param {ObjectId} id The id of the file doc"," * @param {Object} [options=null] Optional settings."," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @return {GridFSBucketReadStream}"," */","","GridFSBucket.prototype.openDownloadStream = function(id, options) {","/**"," * Deletes a file with the given id"," * @method"," * @param {ObjectId} id The id of the file doc"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.delete = function(id, callback) {","/**"," * @ignore"," */","","function _delete(_this, id, callback) {","      // Delete orphaned chunks before returning FileNotFound","      if (!res.result.n) {","/**"," * Convenience wrapper around find on the files collection"," * @method"," * @param {Object} filter"," * @param {Object} [options=null] Optional settings for cursor"," * @param {number} [options.batchSize=null] Optional batch size for cursor"," * @param {number} [options.limit=null] Optional limit for cursor"," * @param {number} [options.maxTimeMS=null] Optional maxTimeMS for cursor"," * @param {boolean} [options.noCursorTimeout=null] Optionally set cursor's `noCursorTimeout` flag"," * @param {number} [options.skip=null] Optional skip for cursor"," * @param {object} [options.sort=null] Optional sort for cursor"," * @return {Cursor}"," */","","GridFSBucket.prototype.find = function(filter, options) {","/**"," * Returns a readable stream (GridFSBucketReadStream) for streaming the"," * file with the given name from GridFS. If there are multiple files with"," * the same name, this will stream the most recent file with the given name"," * (as determined by the `uploadDate` field). You can set the `revision`"," * option to change this behavior."," * @method"," * @param {String} filename The name of the file to stream"," * @param {Object} [options=null] Optional settings"," * @param {number} [options.revision=-1] The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest."," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @return {GridFSBucketReadStream}"," */","","GridFSBucket.prototype.openDownloadStreamByName = function(filename, options) {","/**"," * Renames the file with the given _id to the given string"," * @method"," * @param {ObjectId} id the id of the file to rename"," * @param {String} filename new name for the file"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.rename = function(id, filename, callback) {","/**"," * @ignore"," */","","function _rename(_this, id, filename, callback) {","/**"," * Removes this bucket's files collection, followed by its chunks collection."," * @method"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.drop = function(callback) {","/**"," * @ignore"," */","","function _drop(_this, callback) {","/**"," * Callback format for all GridFSBucket methods that can accept a callback."," * @callback GridFSBucket~errorCallback"," * @param {MongoError} error An error instance representing any errors that occurred"," */",""],"Functions":["function GridFSBucket(db, options) ","      (typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise)","GridFSBucket.prototype.openUploadStream = function(filename, options) ","GridFSBucket.prototype.openDownloadStream = function(id, options) ","GridFSBucket.prototype.delete = function(id, callback) ","  if (typeof callback === 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    _delete(_this, id, function(error, res) ","function _delete(_this, id, callback) ","  _this.s._filesCollection.deleteOne( _id: id }, function(error, res) {","    _this.s._chunksCollection.deleteMany( files_id: id }, function(error) {","GridFSBucket.prototype.find = function(filter, options) ","GridFSBucket.prototype.openDownloadStreamByName = function(filename, options) ","GridFSBucket.prototype.rename = function(id, filename, callback) ","  if (typeof callback === 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    _rename(_this, id, filename, function(error, res) ","function _rename(_this, id, filename, callback) ","  _this.s._filesCollection.updateOne(filter, update, function(error, res) ","GridFSBucket.prototype.drop = function(callback) ","  if (typeof callback === 'function') ","  return new this.s.promiseLibrary(function(resolve, reject) ","    _drop(_this, function(error, res) ","function _drop(_this, callback) ","  _this.s._filesCollection.drop(function(error) ","    _this.s._chunksCollection.drop(function(error) "],"Dependencies":["events","./download","./upload","../utils","../utils","util"]},{"FileName":"node_modules\\mongodb\\lib\\gridfs-stream\\upload.js","LineCount":516,"CharCount":12277,"Comments":["/**"," * A writable stream that enables you to write buffers to GridFS."," *"," * Do not instantiate this class directly. Use `openUploadStream()` instead."," *"," * @class"," * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket"," * @param {string} filename The value of the 'filename' key in the files doc"," * @param {object} [options=null] Optional settings."," * @param {number} [options.chunkSizeBytes=null] The chunk size to use, in bytes"," * @param {number} [options.w=null] The write concern"," * @param {number} [options.wtimeout=null] The write concern timeout"," * @param {number} [options.j=null] The journal write concern"," * @fires GridFSBucketWriteStream#error"," * @fires GridFSBucketWriteStream#finish"," * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance."," */","","function GridFSBucketWriteStream(bucket, filename, options) {","/**"," * An error occurred"," *"," * @event GridFSBucketWriteStream#error"," * @type {Error}"," */","","/**"," * `end()` was called and the write stream successfully wrote the file"," * metadata and all the chunks to MongoDB."," *"," * @event GridFSBucketWriteStream#finish"," * @type {object}"," */","","/**"," * Write a buffer to the stream."," *"," * @method"," * @param {Buffer} chunk Buffer to write"," * @param {String} encoding Optional encoding for the buffer"," * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush."," * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise."," */","","GridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {","/**"," * Places this write stream into an aborted state (all future writes fail)"," * and deletes all chunks that have already been written."," *"," * @method"," * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred"," * @return {Promise} if no callback specified"," */","","GridFSBucketWriteStream.prototype.abort = function(callback) {","/**"," * Tells the stream that no more data will be coming in. The stream will"," * persist the remaining data to MongoDB, write the files document, and"," * then emit a 'finish' event."," *"," * @method"," * @param {Buffer} chunk Buffer to write"," * @param {String} encoding Optional encoding for the buffer"," * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB"," */","","GridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {","/**"," * @ignore"," */","","function __handleError(_this, error, callback) {","/**"," * @ignore"," */","","function createChunkDoc(filesId, n, data) {","/**"," * @ignore"," */","","function checkChunksIndex(_this, callback) {","      // Collection doesn't exist so create index","      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {","/**"," * @ignore"," */","","function checkDone(_this, callback) {","/**"," * @ignore"," */","","function checkIndexes(_this, callback) {","        // Collection doesn't exist so create index","        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {","/**"," * @ignore"," */","","function createFilesDoc(_id, length, chunkSize, md5, filename, contentType,","/**"," * @ignore"," */","","function doWrite(_this, chunk, encoding, callback) {","  // Input is small enough to fit in our buffer","  if (_this.pos + inputBuf.length \u003c _this.chunkSizeBytes) {","    // Note that we reverse the typical semantics of write's return value","    // to be compatible with node's `.pipe()` function.","    // True means client can keep writing.","    return true;","  // Otherwise, buffer is too big for current chunk, so we need to flush","  // to MongoDB.","  var inputBufRemaining = inputBuf.length;","  // Note that we reverse the typical semantics of write's return value","  // to be compatible with node's `.pipe()` function.","  // False means the client should wait for the 'drain' event.","  return false;","/**"," * @ignore"," */","","function getWriteOptions(_this) {","/**"," * @ignore"," */","","function waitForIndexes(_this, callback) {","/**"," * @ignore"," */","","function writeRemnant(_this, callback) {","  // Buffer is empty, so don't bother to insert","  if (_this.pos === 0) {","  // Create a new buffer to make sure the buffer isn't bigger than it needs","  // to be.","  var remnant = new Buffer(_this.pos);","  // If the stream was aborted, do not write remnant","  if (checkAborted(_this, callback)) {","/**"," * @ignore"," */","","function checkAborted(_this, callback) {"],"Functions":["function GridFSBucketWriteStream(bucket, filename, options) ","    checkIndexes(this, function() ","GridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) ","  return waitForIndexes(this, function() ","GridFSBucketWriteStream.prototype.abort = function(callback) ","    if (typeof callback == 'function') ","    if (typeof callback == 'function') ","  this.chunks.deleteMany( files_id: this.id }, function(error) {","    if(typeof callback == 'function') callback(error);","GridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) ","    waitForIndexes(this, function() ","  this.write(chunk, encoding, function() ","function __handleError(_this, error, callback) ","function createChunkDoc(filesId, n, data) ","function checkChunksIndex(_this, callback) ","  _this.chunks.listIndexes().toArray(function(error, indexes) ","        _this.chunks.createIndex(index,  background: false }, function(error) {","    indexes.forEach(function(index) ","      _this.chunks.createIndex(index, indexOptions, function(error) ","function checkDone(_this, callback) ","    _this.files.insert(filesDoc, getWriteOptions(_this), function(error) ","function checkIndexes(_this, callback) ","  _this.files.findOne(}, { _id: 1 }, function(error, doc) {","    _this.files.listIndexes().toArray(function(error, indexes) ","          _this.files.createIndex(index,  background: false }, function(error) {","      indexes.forEach(function(index) ","        _this.files.createIndex(index, indexOptions, function(error) ","function createFilesDoc(_id, length, chunkSize, md5, filename, contentType,","function doWrite(_this, chunk, encoding, callback) ","    // to be compatible with node's `.pipe()` function.","      _this.chunks.insert(doc, getWriteOptions(_this), function(error) ","  // to be compatible with node's `.pipe()` function.","function getWriteOptions(_this) ","function waitForIndexes(_this, callback) ","  _this.bucket.once('index', function() ","function writeRemnant(_this, callback) ","  _this.chunks.insert(doc, getWriteOptions(_this), function(error) ","function checkAborted(_this, callback) ","    if(typeof callback == 'function') "],"Dependencies":["mongodb-core","crypto","../utils","stream","util"]},{"FileName":"node_modules\\mongodb\\lib\\metadata.js","LineCount":64,"CharCount":1529,"Comments":["  // Add a list of instrumentations","  if(this.instrumentations[key] == null) {","  // Push to list of method for this instrumentation","  this.instrumentations[key].methods.push(name);","  // Add a list of instrumentations","  if(this.instrumentations[key] == null) {","  // Push to list of method for this instrumentation","  this.instrumentations[key].methods.push(name);","  // Generate the return object","  var object = {"],"Functions":["var Define = function(name, object, stream) ","Define.prototype.classMethod = function(name, options) ","var generateKey = function(keys, options) ","Define.prototype.staticMethod = function(name, options) ","Define.prototype.generate = function(keys, options) "],"Dependencies":["util"]},{"FileName":"node_modules\\mongodb\\lib\\mongo_client.js","LineCount":530,"CharCount":19689,"Comments":["/**"," * @fileOverview The **MongoClient** class is a class that allows for making Connections to MongoDB."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","","/**"," * Creates a new MongoClient instance"," * @class"," * @return {MongoClient} a MongoClient instance."," */","function MongoClient() {","  /**","   * The callback format for results","   * @callback MongoClient~connectCallback","   * @param {MongoError} error An error instance representing the error during the execution.","   * @param {Db} db The connected database.","   */","","  /**","   * Connect to MongoDB using a url as documented at","   *","   *  docs.mongodb.org/manual/reference/connection-string/","   *","   * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver","   *","   * @method","   * @param {string} url The connection URI string","   * @param {object} [options=null] Optional settings.","   * @param {boolean} [options.uri_decode_auth=false] Uri decode the user name and password for authentication","   * @param {object} [options.db=null] A hash of options to set on the db object, see **Db constructor**","   * @param {object} [options.server=null] A hash of options to set on the server objects, see **Server** constructor**","   * @param {object} [options.replSet=null] A hash of options to set on the replSet object, see **ReplSet** constructor**","   * @param {object} [options.mongos=null] A hash of options to set on the mongos object, see **Mongos** constructor**","   * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible","   * @param {MongoClient~connectCallback} [callback] The command result callback","   * @return {Promise} returns Promise if no callback passed","   */","  this.connect = MongoClient.connect;","/**"," * Connect to MongoDB using a url as documented at"," *"," *  docs.mongodb.org/manual/reference/connection-string/"," *"," * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver"," *"," * @method"," * @static"," * @param {string} url The connection URI string"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.uri_decode_auth=false] Uri decode the user name and password for authentication"," * @param {object} [options.db=null] A hash of options to set on the db object, see **Db constructor**"," * @param {object} [options.server=null] A hash of options to set on the server objects, see **Server** constructor**"," * @param {object} [options.replSet=null] A hash of options to set on the replSet object, see **ReplSet** constructor**"," * @param {object} [options.mongos=null] A hash of options to set on the mongos object, see **Mongos** constructor**"," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {MongoClient~connectCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","MongoClient.connect = function(url, options, callback) {","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","  // No promise library selected fall back","  if(!promiseLibrary) {","  // Return a promise","  if(typeof callback != 'function') {","  // Fallback to callback based connect","  connect(url, options, callback);","/*"," * Merge top level options into final options object"," */","var mergeTopLevel = function(object, options) {","/*"," * Connect using MongoClient"," */","var connect = function(url, options, callback) {","  // If callback is null throw an exception","  if(callback == null)","  // Parse the string","  var object = parse(url, options);","  // Merge in any options for db in options object","  if(dbOptions) {","  // Added the url to the options","  object.db_options.url = url;","  // Merge in any options for server in options object","  if(serverOptions) {","  // Merge in any replicaset server options","  if(replSetServersOptions) {","  // Merge in any replicaset server options","  if(mongosOptions) {","  // Set the promise library","  object.db_options.promiseLibrary = options.promiseLibrary;","  // We need to ensure that the list of servers are only either direct members or mongos","  // they cannot be a mix of monogs and mongod's","  var totalNumberOfServers = object.servers.length;","  // Failure modes","  if(object.servers.length == 0) throw new Error(\"connection string must contain at least one seed host\");","  // If we have no db setting for the native parser try to set the c++ one first","  object.db_options.native_parser = _setNativeParser(object.db_options);","  // If no auto_reconnect is set, set it to true as default for single servers","  if(typeof object.server_options.auto_reconnect != 'boolean') {","  // Merge in the top level options if any specified","  object = mergeTopLevel(object, options);","  // If we have more than a server, it could be replicaset or mongos list","  // need to verify that it's one or the other and fail if it's a mix","  // Connect to all servers and run ismaster","  for(var i = 0; i \u003c object.servers.length; i++) {","    // Set up socket options","    var providedSocketOptions = object.server_options.socketOptions || {};","    // Ensure we have ssl setup for the servers","    if(object.server_options.ssl) {","    // Error","    var error = null;","    // Set up the Server object","    var _server = object.servers[i].domain_socket","      // Attempt connect","      new Db(object.dbName, __server, {w:1, native_parser:false, promiseLibrary:options.promiseLibrary}).open(function(err, db) {","        // Update number of servers","        totalNumberOfServers = totalNumberOfServers - 1;","        // If no error do the correct checks","        if(!err) {","          // Close the connection","          db.close();","          // Get the last ismaster document","          var isMasterDoc = db.serverConfig.isMasterDoc;","          // Check what type of server we have","          if(isMasterDoc.setName) {","          // Error out","          if(totalNumberOfMongodServers == 0 \u0026\u0026 totalNumberOfMongosServers == 0 \u0026\u0026 error) {","          // If we have a mix of mongod and mongos, throw an error","          if(totalNumberOfMongosServers \u003e 0 \u0026\u0026 totalNumberOfMongodServers \u003e 0) {","            // Clean out any error servers","            errorServers = {};","            // Set up the final configuration","            if(totalNumberOfMongodServers \u003e 0) {","                // If no replicaset name was provided, we wish to perform a","                // direct connection","                if(totalNumberOfMongodServers == 1","          // Ensure no firing of open event before we are ready","          serverConfig.emitOpen = false;","          // Set up all options etc and connect to the database","          _finishConnecting(serverConfig, object, options, callback)","    // Wrap the context of the call","    connectFunction(_server);","  // If we have a readPreference passed in by the db options","  if(typeof object.db_options.readPreference == 'string') {","  // Do we have readPreference tags","  if(object.db_options.readPreference \u0026\u0026 object.db_options.readPreferenceTags) {","  // Get the socketTimeoutMS","  var socketTimeoutMS = object.server_options.socketOptions.socketTimeoutMS || 0;","  // If we have a replset, override with replicaset socket timeout option if available","  if(serverConfig instanceof ReplSet) {","  // Set socketTimeout to the same as the connectTimeoutMS or 30 sec","  serverConfig.connectTimeoutMS = serverConfig.connectTimeoutMS || 30000;","  // Set up the db options","  var db = new Db(object.dbName, serverConfig, object.db_options);","  // Open the db","  db.open(function(err, db){","    // Reset the socket timeout","    serverConfig.socketTimeoutMS = socketTimeoutMS || 0;","    // Return object","    if(err == null \u0026\u0026 object.auth){","      // What db to authenticate against","      var authentication_db = db;","      // Build options object","      var options = {};","      // Ensure we pass in the correct authentication options","      if(object.db_options.authMechanism) options.authMechanism = object.db_options.authMechanism;","      // Authenticate","      authentication_db.authenticate(object.auth.user, object.auth.password, options, function(err, success){"],"Functions":[" * MongoClient.connect(url, function(err, db) ","function MongoClient() ","MongoClient.connect = function(url, options, callback) ","  callback = typeof args[args.length - 1] == 'function' ? args.pop() : null;","    promiseLibrary = typeof global.Promise == 'function' ?","  if(typeof callback != 'function') ","    return new promiseLibrary(function(resolve, reject) ","      connect(url, options, function(err, db) ","var mergeTopLevel = function(object, options) ","var connect = function(url, options, callback) ","    throw new Error(\"no callback function provided\");","    var connectFunction = function(__server) ","      new Db(object.dbName, __server, w:1, native_parser:false, promiseLibrary:options.promiseLibrary}).open(function(err, db) {","            return process.nextTick(function() ","              .filter(function(serverObj) ","              .map(function(serverObj) ","            return process.nextTick(function() ","var _setNativeParser = function(db_options) ","var _finishConnecting = function(serverConfig, object, options, callback) ","  db.open(function(err, db)","      return process.nextTick(function() ","      authentication_db.authenticate(object.auth.user, object.auth.password, options, function(err, success)","          process.nextTick(function() ","          process.nextTick(function() ","      process.nextTick(function() "],"Dependencies":["./url_parser","./server","./mongos","./replset","./metadata","./read_preference","./db","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\mongos.js","LineCount":520,"CharCount":16148,"Comments":["/**"," * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is"," * used to construct connections."," *"," * **Mongos Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   Mongos = require('mongodb').Mongos,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using Mongos"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new Mongos([server]));"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","","/**"," * Creates a new Mongos instance"," * @class"," * @deprecated"," * @param {Server[]} servers A seedlist of servers participating in the replicaset."," * @param {object} [options=null] Optional settings."," * @param {booelan} [options.ha=true] Turn on high availability monitoring."," * @param {number} [options.haInterval=5000] Time between each replicaset status check."," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for MongoS proxy selection"," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @fires Mongos#connect"," * @fires Mongos#ha"," * @fires Mongos#joined"," * @fires Mongos#left"," * @fires Mongos#fullsetup"," * @fires Mongos#open"," * @fires Mongos#close"," * @fires Mongos#error"," * @fires Mongos#timeout"," * @fires Mongos#parseError"," * @return {Mongos} a Mongos instance."," */","var Mongos = function(servers, options) {","  // Ensure all the instances are Server","  for(var i = 0; i \u003c servers.length; i++) {","  // Store option defaults","  var storeOptions = {","  // If we have \"unlimited\" set to max Number","  if(storeOptions.bufferMaxEntries == -1) {","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","  // Set up event emitter","  EventEmitter.call(this);","  // Debug tag","  var tag = options.tag;","  // Build seed list","  var seedlist = servers.map(function(x) {","  // Final options","  var finalOptions = shallowClone(options);","  // Default values","  finalOptions.size = typeof options.poolSize == 'number' ? options.poolSize : 5;","  // Add the store","  finalOptions.disconnectHandler = store;","  // Ensure we change the sslCA option to ca if available","  if(options.sslCA) finalOptions.ca = options.sslCA;","  // Socket options passed down","  if(options.socketOptions) {","  // Are we running in debug mode","  var debug = typeof options.debug == 'boolean' ? options.debug : false;","  // Map keep alive setting","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.keepAlive == 'number') {","  // Connection timeout","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.connectionTimeout == 'number') {","  // Socket timeout","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.socketTimeout == 'number') {","  // noDelay","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.noDelay == 'boolean') {","  // Add the non connection store","  finalOptions.disconnectHandler = store;","  // Create the Mongos","  var mongos = new CMongos(seedlist, finalOptions)","  // Server capabilities","  var sCapabilities = null;","  // Add auth prbufferMaxEntriesoviders","  mongos.addAuthProvider('mongocr', new MongoCR());","  // Internal state","  this.s = {","    // Create the Mongos","      mongos: mongos","    // Server capabilities","    , sCapabilities: sCapabilities","    // Debug turned on","    , debug: debug","    // Store option defaults","    , storeOptions: storeOptions","    // Cloned options","    , clonedOptions: finalOptions","    // Actual store of callbacks","    , store: store","    // Options","    , options: options","  // Last ismaster","  Object.defineProperty(this, 'isMasterDoc', {","  // Last ismaster","  Object.defineProperty(this, 'numberOfConnectedServers', {","  // BSON property","  Object.defineProperty(this, 'bson', {","/**"," * @ignore"," */","inherits(Mongos, EventEmitter);","// Connect","Mongos.prototype.connect = function(db, _options, callback) {","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","  // Error handler","  var connectErrorHandler = function(event) {","      // Remove all event handlers","      var events = ['timeout', 'error', 'close'];","      // Try to callback","      try {","  // Actual handler","  var errorHandler = function(event) {","  // Error handler","  var reconnectHandler = function(err) {","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","    // Set up listeners","    self.s.mongos.once('timeout', errorHandler('timeout'));","    // relay the event","    var relay = function(event) {","    // Set up SDAM listeners","    self.s.mongos.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    // Set up serverConfig listeners","    self.s.mongos.on('joined', relay('joined'));","    // Emit open event","    self.emit('open', null, self);","    // Return correctly","    try {","  // Set up listeners","  self.s.mongos.once('timeout', connectErrorHandler('timeout'));","  // Reconnect server","  self.s.mongos.on('reconnect', reconnectHandler);","  // Start connection","  self.s.mongos.connect(_options);","// Server capabilities","Mongos.prototype.capabilities = function() {","// Command","Mongos.prototype.command = function(ns, cmd, options, callback) {","// Insert","Mongos.prototype.insert = function(ns, ops, options, callback) {","// Update","Mongos.prototype.update = function(ns, ops, options, callback) {","// Remove","Mongos.prototype.remove = function(ns, ops, options, callback) {","// Destroyed","Mongos.prototype.isDestroyed = function() {","// IsConnected","Mongos.prototype.isConnected = function() {","// Insert","Mongos.prototype.cursor = function(ns, cmd, options) {","  // We need to wash out all stored processes","  if(forceClosed == true) {","/**"," * All raw connections"," * @method"," * @return {array}"," */","Mongos.prototype.connections = function() {","/**"," * A mongos connect event, used to verify that the connection is up and running"," *"," * @event Mongos#connect"," * @type {Mongos}"," */","","/**"," * The mongos high availability event"," *"," * @event Mongos#ha"," * @type {function}"," * @param {string} type The stage in the high availability event (start|end)"," * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only"," * @param {number} data.id The id for this high availability request"," * @param {object} data.state An object containing the information about the current replicaset"," */","","/**"," * A server member left the mongos set"," *"," * @event Mongos#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the mongos set"," *"," * @event Mongos#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","/**"," * Mongos fullsetup event, emitted when all proxies in the topology have been connected to."," *"," * @event Mongos#fullsetup"," * @type {Mongos}"," */","","/**"," * Mongos open event, emitted when mongos can start processing commands."," *"," * @event Mongos#open"," * @type {Mongos}"," */","","/**"," * Mongos close event"," *"," * @event Mongos#close"," * @type {object}"," */","","/**"," * Mongos error event, emitted if there is an error listener."," *"," * @event Mongos#error"," * @type {MongoError}"," */","","/**"," * Mongos timeout event"," *"," * @event Mongos#timeout"," * @type {object}"," */","","/**"," * Mongos parseError event"," *"," * @event Mongos#parseError"," * @type {object}"," */","","module.exports = Mongos;"],"Functions":[" * db.open(function(err, db) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Mongos = function(servers, options) ","  var seedlist = servers.map(function(x) ","    enumerable:true, get: function()  return self.s.mongos.lastIsMaster(); }","    enumerable:true, get: function() ","    enumerable: true, get: function() ","    enumerable:true, get: function()  return self.s.mongos.haInterval; }","Mongos.prototype.connect = function(db, _options, callback) ","  if('function' === typeof _options) callback = _options, _options = };","  if(!('function' === typeof callback)) callback = null;","  var connectErrorHandler = function(event) ","    return function(err) ","      events.forEach(function(e) ","        process.nextTick(function()  throw err; })","  var errorHandler = function(event) ","    return function(err) ","  var reconnectHandler = function(err) ","  var connectHandler = function() ","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) ","    var relay = function(event) ","      return function(t, server) ","      process.nextTick(function()  throw err; })","Mongos.prototype.parserType = function() ","Mongos.prototype.capabilities = function() ","Mongos.prototype.command = function(ns, cmd, options, callback) ","Mongos.prototype.insert = function(ns, ops, options, callback) ","  this.s.mongos.insert(ns, ops, options, function(e, m) ","Mongos.prototype.update = function(ns, ops, options, callback) ","Mongos.prototype.remove = function(ns, ops, options, callback) ","Mongos.prototype.isDestroyed = function() ","Mongos.prototype.isConnected = function() ","Mongos.prototype.cursor = function(ns, cmd, options) ","Mongos.prototype.setBSONParserType = function(type) ","Mongos.prototype.lastIsMaster = function() ","Mongos.prototype.close = function(forceClosed) ","Mongos.prototype.auth = function() ","Mongos.prototype.connections = function() "," * @type function}"," * @type function}"," * @type function}"],"Dependencies":["events","util","util","./topology_base","mongodb-core","mongodb-core","mongodb-core","./cursor","./aggregation_cursor","./command_cursor","./metadata","./server","./topology_base","./utils","./utils","mongodb","mongodb","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\read_preference.js","LineCount":104,"CharCount":3236,"Comments":["/**"," * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is"," * used to construct connections."," * "," * @example"," * var Db = require('mongodb').Db,"," *   ReplSet = require('mongodb').ReplSet,"," *   Server = require('mongodb').Server,"," *   ReadPreference = require('mongodb').ReadPreference,"," *   test = require('assert');"," * // Connect using ReplSet"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new ReplSet([server]));"," * db.open(function(err, db) {"," *   test.equal(null, err);"," *   // Perform a read"," *   var cursor = db.collection('t').find({});"," *   cursor.setReadPreference(ReadPreference.PRIMARY);"," *   cursor.toArray(function(err, docs) {"," *     test.equal(null, err);"," *     db.close();"," *   });"," * });"," */","","/**"," * Creates a new ReadPreference instance"," * "," * Read Preferences"," *  - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.)."," *  - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary."," *  - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error."," *  - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary."," *  - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection."," *"," * @class"," * @param {string} mode The ReadPreference mode as listed above."," * @param {object} tags An object representing read preference tags."," * @property {string} mode The ReadPreference mode."," * @property {object} tags The ReadPreference tags."," * @return {ReadPreference} a ReadPreference instance."," */ ","var ReadPreference = function(mode, tags) {","/**"," * Validate if a mode is legal"," *"," * @method"," * @param {string} mode The string representing the read preference mode."," * @return {boolean}"," */  ","ReadPreference.isValid = function(_mode) {","/**"," * Validate if a mode is legal"," *"," * @method"," * @param {string} mode The string representing the read preference mode."," * @return {boolean}"," */  ","ReadPreference.prototype.isValid = function(mode) {","/**"," * @ignore"," */","ReadPreference.prototype.toObject = function() {","/**"," * @ignore"," */","ReadPreference.PRIMARY = 'primary';","/**"," * @ignore"," */","module.exports = ReadPreference;"],"Functions":[" * db.open(function(err, db) "," *   cursor.toArray(function(err, docs) ","var ReadPreference = function(mode, tags) ","ReadPreference.isValid = function(_mode) ","ReadPreference.prototype.isValid = function(mode) ","ReadPreference.prototype.toObject = function() "],"Dependencies":["mongodb","mongodb","mongodb","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\replset.js","LineCount":580,"CharCount":18007,"Comments":["/**"," * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is"," * used to construct connections."," *"," * **ReplSet Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   ReplSet = require('mongodb').ReplSet,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using ReplSet"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new ReplSet([server]));"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","","/**"," * Creates a new ReplSet instance"," * @class"," * @deprecated"," * @param {Server[]} servers A seedlist of servers participating in the replicaset."," * @param {object} [options=null] Optional settings."," * @param {booelan} [options.ha=true] Turn on high availability monitoring."," * @param {number} [options.haInterval=10000] Time between each replicaset status check."," * @param {string} options.replicaSet The name of the replicaset to connect to."," * @param {number} [options.secondaryAcceptableLatencyMS=15] Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)"," * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available"," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=10000] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @fires ReplSet#connect"," * @fires ReplSet#ha"," * @fires ReplSet#joined"," * @fires ReplSet#left"," * @fires ReplSet#fullsetup"," * @fires ReplSet#open"," * @fires ReplSet#close"," * @fires ReplSet#error"," * @fires ReplSet#timeout"," * @fires ReplSet#parseError"," * @return {ReplSet} a ReplSet instance."," */","var ReplSet = function(servers, options) {","  // Ensure all the instances are Server","  for(var i = 0; i \u003c servers.length; i++) {","  // Store option defaults","  var storeOptions = {","  // If we have \"unlimited\" set to max Number","  if(storeOptions.bufferMaxEntries == -1) {","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","  // Set up event emitter","  EventEmitter.call(this);","  // Debug tag","  var tag = options.tag;","  // Build seed list","  var seedlist = servers.map(function(x) {","  // Final options","  var finalOptions = shallowClone(options);","  // Default values","  finalOptions.size = typeof options.poolSize == 'number' ? options.poolSize : 5;","  // Add the store","  finalOptions.disconnectHandler = store;","  // Socket options passed down","  if(options.socketOptions) {","  // Get the name","  var replicaSet = options.replicaSet || options.rs_name;","  // Set up options","  finalOptions.setName = replicaSet;","  // Are we running in debug mode","  var debug = typeof options.debug == 'boolean' ? options.debug : false;","  // Map keep alive setting","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.keepAlive == 'number') {","  // Connection timeout","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.connectionTimeout == 'number') {","  // Socket timeout","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.socketTimeout == 'number') {","  // noDelay","  if(options.socketOptions \u0026\u0026 typeof options.socketOptions.noDelay == 'boolean') {","  // Add the non connection store","  finalOptions.disconnectHandler = store;","  // Translate the options","  if(options.sslCA) finalOptions.ca = options.sslCA;","  // Create the ReplSet","  var replset = new CReplSet(seedlist, finalOptions)","  // Server capabilities","  var sCapabilities = null;","  // Listen to reconnect event","  replset.on('reconnect', function() {","  // Internal state","  this.s = {","    // Replicaset","    replset: replset","    // Server capabilities","    , sCapabilities: null","    // Debug tag","    , tag: options.tag","    // Store options","    , storeOptions: storeOptions","    // Cloned options","    , clonedOptions: finalOptions","    // Store","    , store: store","    // Options","    , options: options","  // Debug","  if(debug) {","    // Last ismaster","    Object.defineProperty(this, 'replset', {","  // Last ismaster","  Object.defineProperty(this, 'isMasterDoc', {","  // BSON property","  Object.defineProperty(this, 'bson', {","/**"," * @ignore"," */","inherits(ReplSet, EventEmitter);","// Ensure the right read Preference object","var translateReadPreference = function(options) {","// Connect method","ReplSet.prototype.connect = function(db, _options, callback) {","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","  // Actual handler","  var errorHandler = function(event) {","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","    // Set up listeners","    self.s.replset.once('timeout', errorHandler('timeout'));","    // relay the event","    var relay = function(event) {","    // Replset events relay","    var replsetRelay = function(event) {","    // Relay ha","    var relayHa = function(t, state) {","    // Set up serverConfig listeners","    self.s.replset.on('joined', replsetRelay('joined'));","    // Set up SDAM listeners","    self.s.replset.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    // Emit open event","    self.emit('open', null, self);","    // Return correctly","    try {","  // Error handler","  var connectErrorHandler = function(event) {","      // Destroy the replset","      self.s.replset.destroy();","      // Try to callback","      try {","  // Set up listeners","  self.s.replset.once('timeout', connectErrorHandler('timeout'));","  // Start connection","  self.s.replset.connect(_options);","// Server capabilities","ReplSet.prototype.capabilities = function() {","// Command","ReplSet.prototype.command = function(ns, cmd, options, callback) {","// Insert","ReplSet.prototype.insert = function(ns, ops, options, callback) {","// Update","ReplSet.prototype.update = function(ns, ops, options, callback) {","// Remove","ReplSet.prototype.remove = function(ns, ops, options, callback) {","// Destroyed","ReplSet.prototype.isDestroyed = function() {","// IsConnected","ReplSet.prototype.isConnected = function() {","// Insert","ReplSet.prototype.cursor = function(ns, cmd, options) {","  // We need to wash out all stored processes","  if(forceClosed == true) {","/**"," * All raw connections"," * @method"," * @return {array}"," */","ReplSet.prototype.connections = function() {","/**"," * A replset connect event, used to verify that the connection is up and running"," *"," * @event ReplSet#connect"," * @type {ReplSet}"," */","","/**"," * The replset high availability event"," *"," * @event ReplSet#ha"," * @type {function}"," * @param {string} type The stage in the high availability event (start|end)"," * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only"," * @param {number} data.id The id for this high availability request"," * @param {object} data.state An object containing the information about the current replicaset"," */","","/**"," * A server member left the replicaset"," *"," * @event ReplSet#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the replicaset"," *"," * @event ReplSet#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","/**"," * ReplSet open event, emitted when replicaset can start processing commands."," *"," * @event ReplSet#open"," * @type {Replset}"," */","","/**"," * ReplSet fullsetup event, emitted when all servers in the topology have been connected to."," *"," * @event ReplSet#fullsetup"," * @type {Replset}"," */","","/**"," * ReplSet close event"," *"," * @event ReplSet#close"," * @type {object}"," */","","/**"," * ReplSet error event, emitted if there is an error listener."," *"," * @event ReplSet#error"," * @type {MongoError}"," */","","/**"," * ReplSet timeout event"," *"," * @event ReplSet#timeout"," * @type {object}"," */","","/**"," * ReplSet parseError event"," *"," * @event ReplSet#parseError"," * @type {object}"," */","","module.exports = ReplSet;"],"Functions":[" * db.open(function(err, db) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var ReplSet = function(servers, options) ","  var seedlist = servers.map(function(x) ","  replset.on('reconnect', function() ","      enumerable:true, get: function()  return replset; }","    enumerable:true, get: function()  return replset.lastIsMaster(); }","    enumerable: true, get: function() ","    enumerable:true, get: function()  return replset.haInterval; }","var translateReadPreference = function(options) ","ReplSet.prototype.parserType = function() ","ReplSet.prototype.connect = function(db, _options, callback) ","  if('function' === typeof _options) callback = _options, _options = };","  if(!('function' === typeof callback)) callback = null;","  var errorHandler = function(event) ","    return function(err) ","  var connectHandler = function() ","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) ","    var relay = function(event) ","      return function(t, server) ","    var replsetRelay = function(event) ","      return function(t, server) ","    var relayHa = function(t, state) ","    self.s.replset.on('fullsetup', function(topology) ","    self.s.replset.on('all', function(topology) ","      process.nextTick(function()  throw err; })","  var connectErrorHandler = function(event) ","    return function(err) ","      ['timeout', 'error', 'close'].forEach(function(e) ","          process.nextTick(function()  throw err; })","ReplSet.prototype.capabilities = function() ","ReplSet.prototype.command = function(ns, cmd, options, callback) ","ReplSet.prototype.insert = function(ns, ops, options, callback) ","ReplSet.prototype.update = function(ns, ops, options, callback) ","ReplSet.prototype.remove = function(ns, ops, options, callback) ","ReplSet.prototype.isDestroyed = function() ","ReplSet.prototype.isConnected = function() ","ReplSet.prototype.setBSONParserType = function(type) ","ReplSet.prototype.cursor = function(ns, cmd, options) ","ReplSet.prototype.lastIsMaster = function() ","ReplSet.prototype.close = function(forceClosed) ","  events.forEach(function(e) ","ReplSet.prototype.auth = function() ","ReplSet.prototype.connections = function() "," * @type function}"," * @type function}"," * @type function}"],"Dependencies":["events","util","util","./server","./mongos","./cursor","./aggregation_cursor","./command_cursor","./read_preference","mongodb-core","mongodb-core","./topology_base","./topology_base","./metadata","mongodb-core","mongodb-core","mongodb-core","./utils","./utils","mongodb","mongodb","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\server.js","LineCount":469,"CharCount":14483,"Comments":["/**"," * @fileOverview The **Server** class is a class that represents a single server topology and is"," * used to construct connections."," *"," * **Server Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using single Server"," * var db = new Db('test', new Server('localhost', 27017););"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","","/**"," * Creates a new Server instance"," * @class"," * @deprecated"," * @param {string} host The host for the server, can be either an IP4, IP6 or domain socket style host."," * @param {number} [port] The server port if IP4."," * @param {object} [options=null] Optional settings."," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.autoReconnect=true] Reconnect on error."," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @fires Server#connect"," * @fires Server#close"," * @fires Server#error"," * @fires Server#timeout"," * @fires Server#parseError"," * @fires Server#reconnect"," * @return {Server} a Server instance."," */","var Server = function(host, port, options) {","  // Store option defaults","  var storeOptions = {","  // If we have \"unlimited\" set to max Number","  if(storeOptions.bufferMaxEntries == -1) {","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","  // Detect if we have a socket connection","  if(host.indexOf('\\/') != -1) {","  // Clone options","  var clonedOptions = shallowClone(options);","  // Reconnect","  var reconnect = typeof options.auto_reconnect == 'boolean' ? options.auto_reconnect : true;","  // Socket options passed down","  if(options.socketOptions) {","  // Add the cursor factory function","  clonedOptions.cursorFactory = Cursor;","  // Translate the options","  if(clonedOptions.sslCA) clonedOptions.ca = clonedOptions.sslCA;","  // Add the non connection store","  clonedOptions.disconnectHandler = store;","  // Create an instance of a server instance from mongodb-core","  var server = new CServer(clonedOptions);","  // Server capabilities","  var sCapabilities = null;","  // Define the internal properties","  this.s = {","    // Create an instance of a server instance from mongodb-core","      server: server","    // Server capabilities","    , sCapabilities: null","    // Cloned options","    , clonedOptions: clonedOptions","    // Reconnect","    , reconnect: reconnect","    // Emit error","    , emitError: emitError","    // Pool size","    , poolSize: poolSize","    // Store Options","    , storeOptions: storeOptions","    // Store","    , store: store","    // Host","    , host: host","    // Port","    , port: port","    // Options","    , options: options","  // BSON property","  Object.defineProperty(this, 'bson', {","  // Last ismaster","  Object.defineProperty(this, 'isMasterDoc', {","  // Last ismaster","  Object.defineProperty(this, 'poolSize', {","// Connect","Server.prototype.connect = function(db, _options, callback) {","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","  // Error handler","  var connectErrorHandler = function(event) {","      // Remove all event handlers","      var events = ['timeout', 'error', 'close'];","      // Try to callback","      try {","  // Actual handler","  var errorHandler = function(event) {","  // Error handler","  var reconnectHandler = function(err) {","  // Destroy called on topology, perform cleanup","  var destroyHandler = function() {","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","    // Set up listeners","    self.s.server.once('timeout', errorHandler('timeout'));","    // Only called on destroy","    self.s.server.once('destroy', destroyHandler);","    // relay the event","    var relay = function(event) {","    // Set up SDAM listeners","    self.s.server.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    // Emit open event","    self.emit('open', null, self);","    // Return correctly","    try {","  // Set up listeners","  var connectHandlers = {","  // Add the event handlers","  self.s.server.once('timeout', connectHandlers.timeout);","  // Reconnect server","  self.s.server.on('reconnect', reconnectHandler);","  // Start connection","  self.s.server.connect(_options);","// Server capabilities","Server.prototype.capabilities = function() {","// Command","Server.prototype.command = function(ns, cmd, options, callback) {","// Insert","Server.prototype.insert = function(ns, ops, options, callback) {","// Update","Server.prototype.update = function(ns, ops, options, callback) {","// Remove","Server.prototype.remove = function(ns, ops, options, callback) {","// IsConnected","Server.prototype.isConnected = function() {","// Insert","Server.prototype.cursor = function(ns, cmd, options) {","  // We need to wash out all stored processes","  if(forceClosed == true) {","/**"," * All raw connections"," * @method"," * @return {array}"," */","Server.prototype.connections = function() {","/**"," * Server connect event"," *"," * @event Server#connect"," * @type {object}"," */","","/**"," * Server close event"," *"," * @event Server#close"," * @type {object}"," */","","/**"," * Server reconnect event"," *"," * @event Server#reconnect"," * @type {object}"," */","","/**"," * Server error event"," *"," * @event Server#error"," * @type {MongoError}"," */","","/**"," * Server timeout event"," *"," * @event Server#timeout"," * @type {object}"," */","","/**"," * Server parseError event"," *"," * @event Server#parseError"," * @type {object}"," */","","module.exports = Server;"],"Functions":[" * db.open(function(err, db) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Server = function(host, port, options) ","  // Add the cursor factory function","    enumerable: true, get: function() ","    enumerable:true, get: function() ","    enumerable:true, get: function()  return self.s.server.connections().length; }","    enumerable:true, get: function()  return self.s.reconnect; }","    enumerable:true, get: function()  return self.s.host; }","    enumerable:true, get: function()  return self.s.port; }","Server.prototype.parserType = function() ","Server.prototype.connect = function(db, _options, callback) ","  if('function' === typeof _options) callback = _options, _options = };","  if(!('function' === typeof callback)) callback = null;","  var connectErrorHandler = function(event) ","    return function(err) ","      events.forEach(function(e) ","        process.nextTick(function()  throw err; })","  var errorHandler = function(event) ","    return function(err) ","  var reconnectHandler = function(err) ","  var destroyHandler = function() ","  var connectHandler = function() ","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) ","    var relay = function(event) ","      return function(t, server) ","      process.nextTick(function()  throw err; })","Server.prototype.capabilities = function() ","Server.prototype.command = function(ns, cmd, options, callback) ","Server.prototype.insert = function(ns, ops, options, callback) ","Server.prototype.update = function(ns, ops, options, callback) ","Server.prototype.remove = function(ns, ops, options, callback) ","Server.prototype.isConnected = function() ","Server.prototype.isDestroyed = function() ","Server.prototype.cursor = function(ns, cmd, options) ","Server.prototype.setBSONParserType = function(type) ","Server.prototype.lastIsMaster = function() ","Server.prototype.close = function(forceClosed) ","Server.prototype.auth = function() ","Server.prototype.connections = function() "],"Dependencies":["events","util","mongodb-core","./cursor","./aggregation_cursor","./command_cursor","util","./topology_base","./topology_base","./metadata","mongodb-core","./utils","./utils","mongodb","mongodb","assert"]},{"FileName":"node_modules\\mongodb\\lib\\topology_base.js","LineCount":153,"CharCount":4614,"Comments":["// The store of ops","var Store = function(topology, storeOptions) {","  // Internal state","  this.s = {","  // Get current ops","  var ops = this.s.storedOps;","  // Reset the ops","  this.s.storedOps = [];","  // Execute all the stored ops","  while(ops.length \u003e 0) {","// Server capabilities","var ServerCapabilities = function(ismaster) {","  // Capabilities","  var aggregationCursor = false;","  // If no min or max wire version set to 0","  if(ismaster.minWireVersion == null) {","  // Map up read only parameters","  setup_get_property(this, \"hasAggregationCursor\", aggregationCursor);"],"Functions":["var Store = function(topology, storeOptions) ","    enumerable:true, get: function()  return self.s.storedOps.length; }","Store.prototype.add = function(opType, ns, ops, options, callback) ","Store.prototype.addObjectAndMethod = function(opType, object, method, params, callback) ","Store.prototype.flush = function() ","Store.prototype.execute = function() ","Store.prototype.all = function() ","var ServerCapabilities = function(ismaster) ","  var setup_get_property = function(object, name, value) ","      , get: function ()  return value; }"],"Dependencies":["mongodb-core","util"]},{"FileName":"node_modules\\mongodb\\lib\\url_parser.js","LineCount":402,"CharCount":13525,"Comments":["  // Ensure we have a default options object if none set","  options = options || {};","  // Variables","  var connection_part = '';","  // Url parser result","  var result = parser.parse(url, true);","  // Remove query","  var clean = url.split('?').shift();","  // Extract the list of hosts","  var strings = clean.split(',');","        hosts.push(hostString.substr('mongodb://'.length));","      }","    var r = parser.parse(f('mongodb://%s', hosts[i].trim()));","    if(r.path \u0026\u0026 r.path.indexOf(':') != -1) {","  // If we have a ? mark cut the query elements off","  if(url.indexOf(\"?\") != -1) {","    connection_part = url.substring(\"mongodb://\".length, url.indexOf(\"?\"))","  } else {","    connection_part = url.substring(\"mongodb://\".length);","  }","  // Check if we have auth params","  if(connection_part.indexOf(\"@\") != -1) {","  // Check if the connection string has a db","  if(connection_part.indexOf(\".sock\") != -1) {","      // Check if multiple database names provided, or just an illegal trailing backslash","      if (dbName.indexOf(\"/\") != -1) {","    // Check if multiple database names provided, or just an illegal trailing backslash","    if (connection_part.split(\"/\").length \u003e 2) {","  // Result object","  var object = {};","  // Pick apart the authentication part of the string","  var authPart = auth_part || '';","  // Decode the URI components","  auth[0] = decodeURIComponent(auth[0]);","  // Add auth to final object if we have 2 elements","  if(auth.length == 2) object.auth = {user: auth[0], password: auth[1]};","  // Variables used for temporary storage","  var hostPart;","  // Add server options to final object","  object.server_options = serverOptions;","  // Let's check if we are using a domain socket","  if(url.match(/\\.sock/)) {","    // Split out the socket part","    var domainSocket = url.substring(","        url.indexOf(\"mongodb://\") + \"mongodb://\".length","      , url.lastIndexOf(\".sock\") + \".sock\".length);","    // Clean out any auth stuff if any","    if(domainSocket.indexOf(\"@\") != -1) domainSocket = domainSocket.split(\"@\")[1];","    // Split up the db","    hostPart = connection_part;","    // Deduplicate servers","    var deduplicatedServers = {};","    // Parse all server results","    servers = hostPart.split(',').map(function(h) {","      //check if it matches [IPv6]:port, where the port number is optional","      if ((ipv6match = /\\[([^\\]]+)\\](?:\\:(.+))?/.exec(h))) {","        //otherwise assume it's IPv4, or plain hostname","        var hostPort = h.split(':', 2);","        // Check for localhost?safe=true style case","        if(_host.indexOf(\"?\") != -1) _host = _host.split(/\\?/)[0];","      // No entry returned for duplicate servr","      if(deduplicatedServers[_host + \"_\" + _port]) return null;","      // Return the mapped object","      return {host: _host, port: _port};","  // Get the db name","  object.dbName = dbName || 'admin';","  // Split up all the options","  urlOptions = (query_string_part || '').split(/[\u0026;]/);","  // Ugh, we have to figure out which options go to which constructor manually.","  urlOptions.forEach(function(opt) {","    // Options implementations","    switch(name) {","          // If no password provided decode only the principal","          if(object.auth == null) {","        // Only support GSSAPI or MONGODB-CR for now","        if(value != 'GSSAPI'","        // Authentication mechanism","        dbOptions.authMechanism = value;","        // Split up into key, value pairs","        var values = value.split(',');","        // For each value split into key, value","        values.forEach(function(x) {","        // Set all authMechanismProperties","        dbOptions.authMechanismProperties = o;","        // Set the service name value","        if(typeof o.SERVICE_NAME == 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;","        // Decode the value","        value = decodeURIComponent(value);","        // Contains the tag object","        var tagObject = {};","        // Split up the tags","        var tags = value.split(/\\,/);","        // Set the preferences tags","        dbOptions.read_preference_tags.push(tagObject);","  // No tags: should be null (not [])","  if(dbOptions.read_preference_tags.length === 0) {","  // Validate if there are an invalid write concern combinations","  if((dbOptions.w == -1 || dbOptions.w == 0) \u0026\u0026 (","  // If no read preference set it to primary","  if(!dbOptions.readPreference) {","  // Add servers to result","  object.servers = servers;","  // Returned parsed object","  return object;"],"Functions":["module.exports = function(url, options) ","    servers = hostPart.split(',').map(function(h) ","    }).filter(function(x) ","  urlOptions.forEach(function(opt) ","        values.forEach(function(x) "],"Dependencies":["./read_preference","url","util"]},{"FileName":"node_modules\\mongodb\\lib\\utils.js","LineCount":240,"CharCount":5834,"Comments":["// Set simple property","var getSingleProperty = function(obj, name, value) {","  // Validate that we are not passing 0x00 in the colletion name","  if(!!~collectionName.indexOf(\"\\x00\")) {","/**"," * Wrap a Mongo error document in an Error instance"," * @ignore"," * @api private"," */","var toError = function(error) {","  // Get all object keys","  var keys = typeof error == 'object'","      // continue","    }","/**"," * @ignore"," */","var normalizeHintField = function normalizeHintField(hint) {","/**"," * Create index name based on field spec"," *"," * @ignore"," * @api private"," */","var parseIndexOptions = function(fieldOrSpec) {","  // Get all the fields accordingly","  if('string' == typeof fieldOrSpec) {","    // 'type'","    indexes.push(fieldOrSpec + '_' + 1);","        // [{location:'2d'}, 'type']","        indexes.push(f + '_' + 1);","        // [['location', '2d'],['type', 1]]","        indexes.push(f[0] + '_' + (f[1] || 1));","        // [{location:'2d'}, {type:1}]","        keys = Object.keys(f);","        // undefined (ignore)","      }","    // {location:'2d', type:1}","    keys = Object.keys(fieldOrSpec);"],"Functions":["var shallowClone = function(obj) ","var getSingleProperty = function(obj, name, value) ","    get: function() ","var formatSortValue = exports.formatSortValue = function(sortDirection) ","var formattedOrderClause = exports.formattedOrderClause = function(sortValue) ","var checkCollectionName = function checkCollectionName (collectionName) ","var handleCallback = function(callback, err, value1, value2) ","    process.nextTick(function()  throw err; });","var toError = function(error) ","var normalizeHintField = function normalizeHintField(hint) ","    hint.forEach(function(param) ","var parseIndexOptions = function(fieldOrSpec) ","    fieldOrSpec.forEach(function(f) ","        keys.forEach(function(k) ","    keys.forEach(function(key) ","var isObject = exports.isObject = function (arg) ","var debugOptions = function(debugFields, options) ","  debugFields.forEach(function(n) ","var decorateCommand = function(command, options, exclude) "],"Dependencies":["mongodb-core","util"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\duplex.js","LineCount":2,"CharCount":51,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_duplex.js"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\lib\\_stream_duplex.js","LineCount":90,"CharCount":2722,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// a duplex stream is just a stream that is both readable and writable.","// Since JS doesn't have multiple prototypal inheritance, this class","// prototypally inherits from Readable, and then parasitically from","// Writable.","","module.exports = Duplex;","/*\u003creplacement\u003e*/","var objectKeys = Object.keys || function (obj) {","/*\u003c/replacement\u003e*/","","","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var Readable = require('./_stream_readable');","// the no-half-open enforcer","function onend() {","  // if we allow half-open state, or if the writable side ended,","  // then we're ok.","  if (this.allowHalfOpen || this._writableState.ended)","  // no more data can be written.","  // But allow more writes to happen in this tick.","  process.nextTick(this.end.bind(this));"],"Functions":["var objectKeys = Object.keys || function (obj) ","forEach(objectKeys(Writable.prototype), function(method) ","function Duplex(options) ","function onend() ","function forEach (xs, f) "],"Dependencies":["core-util-is","inherits","./_stream_readable","./_stream_writable"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\lib\\_stream_passthrough.js","LineCount":47,"CharCount":1681,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// a passthrough stream.","// basically just the most minimal sort of Transform stream.","// Every written chunk gets output as-is.","","module.exports = PassThrough;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","util.inherits(PassThrough, Transform);"],"Functions":["function PassThrough(options) ","PassThrough.prototype._transform = function(chunk, encoding, cb) "],"Dependencies":["./_stream_transform","core-util-is","inherits"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\lib\\_stream_readable.js","LineCount":983,"CharCount":26138,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","module.exports = Readable;","/*\u003creplacement\u003e*/","var isArray = require('isarray');","/*\u003c/replacement\u003e*/","","","/*\u003creplacement\u003e*/","var Buffer = require('buffer').Buffer;","/*\u003c/replacement\u003e*/","","Readable.ReadableState = ReadableState;","/*\u003creplacement\u003e*/","if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {","/*\u003c/replacement\u003e*/","","var Stream = require('stream');","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var StringDecoder;","  // the point at which it stops calling _read() to fill the buffer","  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"","  var hwm = options.highWaterMark;","  // cast to ints.","  this.highWaterMark = ~~this.highWaterMark;","  // In streams that never have any data, and do push(null) right away,","  // the consumer can miss the 'end' event if they do some I/O before","  // consuming the stream.  So, we don't emit('end') until some reading","  // happens.","  this.calledRead = false;","  // a flag to be able to tell if the onwrite cb is called immediately,","  // or on a later tick.  We set this to true at first, becuase any","  // actions that shouldn't happen until \"later\" should generally also","  // not happen before the first write call.","  this.sync = true;","  // whenever we return null, then we set a flag to say","  // that we're awaiting a 'readable' event emission.","  this.needReadable = false;","  // object stream flag. Used to make read(n) ignore n and to","  // make all the buffer merging and length checks go away","  this.objectMode = !!options.objectMode;","  // Crypto is kind of old and crusty.  Historically, its default string","  // encoding is 'binary' so we have to make this configurable.","  // Everything else in the universe uses 'utf8', though.","  this.defaultEncoding = options.defaultEncoding || 'utf8';","  // when piping, we only care about 'readable' events that happen","  // after read()ing all the bytes and not getting any pushback.","  this.ranOut = false;","  // the number of writers that are awaiting a drain event in .pipe()s","  this.awaitDrain = 0;","  // if true, a maybeReadMore has been scheduled","  this.readingMore = false;","  // legacy","  this.readable = true;","// Manually shove something into the read() buffer.","// This returns true if the highWaterMark has not been hit yet,","// similar to how Writable.write() returns true if you should","// write() some more.","Readable.prototype.push = function(chunk, encoding) {","// Unshift should *always* be something directly out of read()","Readable.prototype.unshift = function(chunk) {","      // update the buffer info.","      state.length += state.objectMode ? 1 : chunk.length;","// if it's past the high water mark, we can push in some more.","// Also, if we have no data yet, we can stand some","// more bytes.  This is to work around cases where hwm=0,","// such as the repl.  Also, if the push() triggered a","// readable event, and the user called read(largeNumber) such that","// needReadable was set, then we ought to push more, so that another","// 'readable' event will be triggered.","function needMoreData(state) {","// backwards compatibility.","Readable.prototype.setEncoding = function(enc) {","// Don't raise the hwm \u003e 128MB","var MAX_HWM = 0x800000;","    // Get the next highest power of 2","    n--;","    // only flow one buffer at a time","    if (state.flowing \u0026\u0026 state.buffer.length)","  // If we're asking for more than the target buffer level,","  // then raise the water mark.  Bump up to the next highest","  // power of 2, to prevent increasing it excessively in tiny","  // amounts.","  if (n \u003e state.highWaterMark)","  // don't have that much.  return null, unless we've ended.","  if (n \u003e state.length) {","// you can override either this method, or the async _read(n) below.","Readable.prototype.read = function(n) {","  // if we're doing read(0) to trigger a readable event, but we","  // already have a bunch of data in the buffer, then just trigger","  // the 'readable' event and move on.","  if (n === 0 \u0026\u0026","  // if we've ended, and we're now clear, then finish it up.","  if (n === 0 \u0026\u0026 state.ended) {","    // In cases where the decoder did not receive enough data","    // to produce a full chunk, then immediately received an","    // EOF, state.buffer will contain [\u003cBuffer \u003e, \u003cBuffer 00 ...\u003e].","    // howMuchToRead will see this and coerce the amount to","    // read to zero (because it's looking at the length of the","    // first \u003cBuffer \u003e in state.buffer), and we'll end up here.","    //","    // This can only happen via state.decoder -- no other venue","    // exists for pushing a zero-length chunk into state.buffer","    // and triggering this behavior. In this case, we return our","    // remaining data and end the stream, if appropriate.","    if (state.length \u003e 0 \u0026\u0026 state.decoder) {","  // All the actual chunk generation logic needs to be","  // *below* the call to _read.  The reason is that in certain","  // synthetic stream cases, such as passthrough streams, _read","  // may be a completely synchronous operation which may change","  // the state of the read buffer, providing enough data when","  // before there was *not* enough.","  //","  // So, the steps are:","  // 1. Figure out what the state of things will be after we do","  // a read from the buffer.","  //","  // 2. If that resulting state will trigger a _read, then call _read.","  // Note that this may be asynchronous, or synchronous.  Yes, it is","  // deeply ugly to write APIs this way, but that still doesn't mean","  // that the Readable class should behave improperly, as streams are","  // designed to be sync/async agnostic.","  // Take note if the _read call is sync or async (ie, if the read call","  // has returned yet), so that we know whether or not it's safe to emit","  // 'readable' etc.","  //","  // 3. Actually pull the requested chunks out of the buffer and return.","","  // if we need a readable event, then we need to do some reading.","  var doRead = state.needReadable;","  // if we currently have less than the highWaterMark, then also read some","  if (state.length - n \u003c= state.highWaterMark)","  // however, if we've ended, then there's no point, and if we're already","  // reading, then it's unnecessary.","  if (state.ended || state.reading)","    // if the length is currently zero, then we *need* a readable event.","    if (state.length === 0)","    // call internal read method","    this._read(state.highWaterMark);","  // If _read called its callback synchronously, then `reading`","  // will be false, and we need to re-evaluate how much data we","  // can return to the user.","  if (doRead \u0026\u0026 !state.reading)","  // If we have nothing in the buffer, then we want to know","  // as soon as we *do* get something into the buffer.","  if (state.length === 0 \u0026\u0026 !state.ended)","  // If we happened to read() exactly the remaining amount in the","  // buffer, and the EOF has been seen at this point, then make sure","  // that we emit 'end' on the very next tick.","  if (state.ended \u0026\u0026 !state.endEmitted \u0026\u0026 state.length === 0)","  // if we've ended and we have some data left, then emit","  // 'readable' now to make sure it gets picked up.","  if (state.length \u003e 0)","// Don't emit readable right away in sync mode, because this can trigger","// another read() call =\u003e stack overflow.  This way, it might trigger","// a nextTick recursion warning, but that's not so bad.","function emitReadable(stream) {","// at this point, the user has presumably seen the 'readable' event,","// and called read() to consume some data.  that may have triggered","// in turn another _read(n) call, in which case reading = true if","// it's in progress.","// However, if we're not ended, or reading, and the length \u003c hwm,","// then go ahead and try to read some more preemptively.","function maybeReadMore(stream, state) {","      // didn't get any data, stop spinning.","      break;","// abstract method.  to be overridden in specific implementation classes.","// call cb(er, data) where data is \u003c= n in length.","// for virtual (non-string, non-buffer) streams, \"length\" is somewhat","// arbitrary, and perhaps not very meaningful.","Readable.prototype._read = function(n) {","  // when the dest drains, it reduces the awaitDrain counter","  // on the source.  This would be more elegant with a .once()","  // handler in flow(), but adding and removing repeatedly is","  // too slow.","  var ondrain = pipeOnDrain(src);","    // cleanup event handlers once the pipe is broken","    dest.removeListener('close', onclose);","    // if the reader is waiting for a drain event from this","    // specific writer, then it would cause it to never start","    // flowing again.","    // So, if this is awaiting a drain, then we just call it now.","    // If we don't know, then assume that we are waiting for one.","    if (!dest._writableState || dest._writableState.needDrain)","  // if the dest has an error, then stop piping into it.","  // however, don't suppress the throwing behavior for this.","  function onerror(er) {","  // This is a brutally ugly hack to make sure that our error handler","  // is attached before any userland ones.  NEVER DO THIS.","  if (!dest._events || !dest._events.error)","  // Both close and finish should trigger unpipe, but only once.","  function onclose() {","  // tell the dest that it's being piped to","  dest.emit('pipe', src);","  // start the flow if it hasn't been started already.","  if (!state.flowing) {","    // the handler that waits for readable events after all","    // the data gets sucked out in flow.","    // This would be easier to follow with a .once() handler","    // in flow(), but that is too slow.","    this.on('readable', pipeOnReadable);","    // if anyone needs a drain, then we have to wait for that.","    if (state.awaitDrain \u003e 0)","  // if every destination was unpiped, either before entering this","  // function, or in the while loop, then stop flowing.","  //","  // NB: This is a pretty rare edge case.","  if (state.pipesCount === 0) {","    // if there were data event listeners added, then switch to old mode.","    if (EE.listenerCount(src, 'data') \u003e 0)","  // at this point, no one needed a drain, so we just ran out of data","  // on the next readable event, start it over again.","  state.ranOut = true;","  // if we're not piping anywhere, then do nothing.","  if (state.pipesCount === 0)","  // just one destination.  most common case.","  if (state.pipesCount === 1) {","    // passed in one, but it's not the right one.","    if (dest \u0026\u0026 dest !== state.pipes)","    // got a match.","    state.pipes = null;","  // slow case. multiple pipe destinations.","","  if (!dest) {","    // remove all.","    var dests = state.pipes;","  // try to find the right one.","  var i = indexOf(state.pipes, dest);","// set up data events if they are asked for","// Ensure readable listeners eventually get something","Readable.prototype.on = function(ev, fn) {","// pause() and resume() are remnants of the legacy readable stream API","// If the user uses them, then switch into old mode.","Readable.prototype.resume = function() {","    // https://github.com/isaacs/readable-stream/issues/16","    throw new Error('Cannot switch to old mode now.');","  // convert to an old-style stream.","  stream.readable = true;","  // now make it start, just in case it hadn't already.","  stream.emit('readable');","// wrap an old-style stream as the async data source.","// This is *not* part of the readable stream interface.","// It is an ugly unfortunate mess of history.","Readable.prototype.wrap = function(stream) {","    // don't skip over falsy values in objectMode","    //if (state.objectMode \u0026\u0026 util.isNullOrUndefined(chunk))","    if (state.objectMode \u0026\u0026 (chunk === null || chunk === undefined))","  // proxy all the other methods.","  // important when wrapping filters and duplexes.","  for (var i in stream) {","  // proxy certain important events.","  var events = ['error', 'close', 'destroy', 'pause', 'resume'];","  // when we try to consume some more bytes, simply unpause the","  // underlying stream.","  self._read = function(n) {","// exposed for testing purposes only.","Readable._fromList = fromList;","// Pluck off n bytes from an array of buffers.","// Length is the combined lengths of all the buffers in the list.","function fromList(n, state) {","  // nothing in the list, definitely empty.","  if (list.length === 0)","    // read it all, truncate the array.","    if (stringMode)","    // read just some of it.","    if (n \u003c list[0].length) {","      // just take a part of the first list item.","      // slice is the same for buffers and strings.","      var buf = list[0];","      // first list is a perfect match","      ret = list.shift();","      // complex case.","      // we have enough to cover it, but it spans past the first buffer.","      if (stringMode)","  // If we get here before consuming all the bytes, then that is a","  // bug in node.  Should never happen.","  if (state.length \u003e 0)","      // Check that we didn't get one last unshift.","      if (!state.endEmitted \u0026\u0026 state.length === 0) {"],"Functions":["if (!EE.listenerCount) EE.listenerCount = function(emitter, type) ","function ReadableState(options, stream) ","function Readable(options) ","Readable.prototype.push = function(chunk, encoding) ","Readable.prototype.unshift = function(chunk) ","function readableAddChunk(stream, state, chunk, encoding, addToFront) ","function needMoreData(state) ","Readable.prototype.setEncoding = function(enc) ","function roundUpToNextPowerOf2(n) ","function howMuchToRead(n, state) ","Readable.prototype.read = function(n) ","function chunkInvalid(state, chunk) ","function onEofChunk(stream, state) ","function emitReadable(stream) ","    process.nextTick(function() ","function emitReadable_(stream) ","function maybeReadMore(stream, state) ","    process.nextTick(function() ","function maybeReadMore_(stream, state) ","Readable.prototype._read = function(n) ","Readable.prototype.pipe = function(dest, pipeOpts) ","  function onunpipe(readable) ","  function onend() ","  function cleanup() ","  function onerror(er) ","  function onclose() ","  function onfinish() ","  function unpipe() ","    process.nextTick(function() ","function pipeOnDrain(src) ","  return function() ","function flow(src) ","  function write(dest, i, list) ","  // function, or in the while loop, then stop flowing.","function pipeOnReadable() ","Readable.prototype.unpipe = function(dest) ","Readable.prototype.on = function(ev, fn) ","Readable.prototype.resume = function() ","Readable.prototype.pause = function() ","function emitDataEvents(stream, startPaused) ","  stream.on('readable', function() ","  stream.pause = function() ","  stream.resume = function() ","      process.nextTick(function() ","Readable.prototype.wrap = function(stream) ","  stream.on('end', function() ","  stream.on('data', function(chunk) ","    if (typeof stream[i] === 'function' \u0026\u0026","      this[i] = function(method)  return function() {","  forEach(events, function(ev) ","  self._read = function(n) ","function fromList(n, state) ","function endReadable(stream) ","    process.nextTick(function() ","function forEach (xs, f) ","function indexOf (xs, x) "],"Dependencies":["isarray","buffer","events","stream","core-util-is","inherits","string_decoder/","string_decoder/"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\lib\\_stream_transform.js","LineCount":211,"CharCount":7186,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","","// a transform stream is a readable/writable stream where you do","// something with the data.  Sometimes it's called a \"filter\",","// but that's not a great name for it, since that implies a thing where","// some bits pass through, and others are simply ignored.  (That would","// be a valid example of a transform, of course.)","//","// While the output is causally related to the input, it's not a","// necessarily symmetric or synchronous transformation.  For example,","// a zlib stream might take multiple plain-text writes(), and then","// emit a single compressed chunk some time in the future.","//","// Here's how this works:","//","// The Transform stream has all the aspects of the readable and writable","// stream classes.  When you write(chunk), that calls _write(chunk,cb)","// internally, and returns false if there's a lot of pending writes","// buffered up.  When you call read(), that calls _read(n) until","// there's enough pending readable data buffered up.","//","// In a transform stream, the written data is placed in a buffer.  When","// _read(n) is called, it transforms the queued up data, calling the","// buffered _write cb's as it consumes chunks.  If consuming a single","// written chunk would result in multiple output chunks, then the first","// outputted bit calls the readcb, and subsequent chunks just go into","// the read buffer, and will cause it to emit 'readable' if necessary.","//","// This way, back-pressure is actually determined by the reading side,","// since _read has to be called to start processing a new chunk.  However,","// a pathological inflate type of transform can cause excessive buffering","// here.  For example, imagine a stream where every byte of input is","// interpreted as an integer from 0-255, and then results in that many","// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in","// 1kb of data being output.  In this case, you could write a very small","// amount of input, and end up with a very large amount of output.  In","// such a pathological inflating mechanism, there'd be no way to tell","// the system to stop doing the transform.  A single 4MB write could","// cause the system to run out of memory.","//","// However, even in such a pathological case, only a single written chunk","// would be consumed, and then the rest would wait (un-transformed) until","// the results of the previous transformed chunk were consumed.","","module.exports = Transform;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","util.inherits(Transform, Duplex);","  // when the writable side finishes, then flush out anything remaining.","  var stream = this;","  // start out asking for a readable event once data is transformed.","  this._readableState.needReadable = true;","  // we have implemented the _read method, and done the other things","  // that Readable wants before the first _read call, so unset the","  // sync guard flag.","  this._readableState.sync = false;","// This is the part where you do stuff!","// override this function in implementation classes.","// 'chunk' is an input chunk.","//","// Call `push(newChunk)` to pass along transformed output","// to the readable side.  You may call 'push' zero or more times.","//","// Call `cb(err)` when you are done with this chunk.  If you pass","// an error, then that'll put the hurt on the whole operation.  If you","// never call cb(), then you'll never get another chunk.","Transform.prototype._transform = function(chunk, encoding, cb) {","// Doesn't matter what the args are here.","// _transform does all the work.","// That we got here means that the readable side wants more data.","Transform.prototype._read = function(n) {","    // mark that we need a transform, so that any data that comes in","    // will get processed, now that we've asked for it.","    ts.needTransform = true;","  // if there's nothing in the write buffer, then that means","  // that nothing more will ever be provided","  var ws = stream._writableState;"],"Functions":["function TransformState(options, stream) ","  this.afterTransform = function(er, data) ","function afterTransform(stream, er, data) ","function Transform(options) ","  this.once('finish', function() ","    if ('function' === typeof this._flush)","      this._flush(function(er) ","Transform.prototype.push = function(chunk, encoding) ","// override this function in implementation classes.","Transform.prototype._transform = function(chunk, encoding, cb) ","Transform.prototype._write = function(chunk, encoding, cb) ","Transform.prototype._read = function(n) ","function done(stream, er) "],"Dependencies":["./_stream_duplex","core-util-is","inherits"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\lib\\_stream_writable.js","LineCount":387,"CharCount":10516,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// A bit simpler than readable streams.","// Implement an async ._write(chunk, cb), and it'll handle all","// the drain event emission and buffering.","","module.exports = Writable;","/*\u003creplacement\u003e*/","var Buffer = require('buffer').Buffer;","/*\u003c/replacement\u003e*/","","Writable.WritableState = WritableState;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var Stream = require('stream');","  // the point at which write() starts returning false","  // Note: 0 is a valid value, means that we always return false if","  // the entire buffer is not flushed immediately on write()","  var hwm = options.highWaterMark;","  // object stream flag to indicate whether or not this stream","  // contains buffers or objects.","  this.objectMode = !!options.objectMode;","  // cast to ints.","  this.highWaterMark = ~~this.highWaterMark;","  // at the start of calling end()","  this.ending = false;","  // when end() has been called, and returned","  this.ended = false;","  // when 'finish' is emitted","  this.finished = false;","  // should we decode strings into buffers before passing to _write?","  // this is here so that some node-core streams can optimize string","  // handling at a lower level.","  var noDecode = options.decodeStrings === false;","  // Crypto is kind of old and crusty.  Historically, its default string","  // encoding is 'binary' so we have to make this configurable.","  // Everything else in the universe uses 'utf8', though.","  this.defaultEncoding = options.defaultEncoding || 'utf8';","  // not an actual buffer we keep track of, but a measurement","  // of how much we're waiting to get pushed to some underlying","  // socket or file.","  this.length = 0;","  // a flag to see when we're in the middle of a write.","  this.writing = false;","  // a flag to be able to tell if the onwrite cb is called immediately,","  // or on a later tick.  We set this to true at first, becuase any","  // actions that shouldn't happen until \"later\" should generally also","  // not happen before the first write call.","  this.sync = true;","  // a flag to know if we're processing previously buffered items, which","  // may call the _write() callback in the same tick, so that we don't","  // end up in an overlapped onwrite situation.","  this.bufferProcessing = false;","  // the callback that's passed to _write(chunk,cb)","  this.onwrite = function(er) {","  // the callback that the user supplies to write(chunk,encoding,cb)","  this.writecb = null;","  // the amount that is being written when _write is called.","  this.writelen = 0;","  // True if the error was already emitted and should not be thrown again","  this.errorEmitted = false;","  // Writable ctor is applied to Duplexes, though they're not","  // instanceof Writable, they're instanceof Readable.","  if (!(this instanceof Writable) \u0026\u0026 !(this instanceof Duplex))","  // legacy.","  this.writable = true;","// Otherwise people can pipe Writable streams, which is just wrong.","Writable.prototype.pipe = function() {","  // TODO: defer error events consistently everywhere, not just the cb","  stream.emit('error', er);","// If we get something that is not a buffer, string, null, or undefined,","// and we're not in objectMode, then that's an error.","// Otherwise stream chunks are all considered to be of length=1, and the","// watermarks determine how many objects to keep in the buffer, rather than","// how many bytes or characters.","function validChunk(stream, state, chunk, cb) {","// if we're already writing something, then just put this","// in the queue, and wait our turn.  Otherwise, call _write","// If we return false, then we need a drain event, so set that flag.","function writeOrBuffer(stream, state, chunk, encoding, cb) {","  // we must ensure that previous needDrain will not be reset to false.","  if (!ret)","    // Check if we're actually ready to finish, but don't emit yet","    var finished = needFinish(stream, state);","// Must force callback to be called on nextTick, so that we don't","// emit 'drain' before the write() consumer gets the 'false' return","// value, and has a chance to attach a 'drain' listener.","function onwriteDrain(stream, state) {","// if there's something in the buffer waiting, then process it","function clearBuffer(stream, state) {","    // if we didn't call the onwrite immediately, then","    // it means that we need to wait until it does.","    // also, that means that the chunk and cb are currently","    // being processed, so move the buffer counter past them.","    if (state.writing) {","  // ignore unnecessary end() calls.","  if (!state.ending \u0026\u0026 !state.finished)"],"Functions":["function WriteReq(chunk, encoding, cb) ","function WritableState(options, stream) ","  this.onwrite = function(er) ","function Writable(options) ","Writable.prototype.pipe = function() ","function writeAfterEnd(stream, state, cb) ","  process.nextTick(function() ","function validChunk(stream, state, chunk, cb) ","    process.nextTick(function() ","Writable.prototype.write = function(chunk, encoding, cb) ","  if (typeof encoding === 'function') ","  if (typeof cb !== 'function')","    cb = function() };","function decodeChunk(state, chunk, encoding) ","function writeOrBuffer(stream, state, chunk, encoding, cb) ","function doWrite(stream, state, len, chunk, encoding, cb) ","function onwriteError(stream, state, sync, er, cb) ","    process.nextTick(function() ","function onwriteStateUpdate(state) ","function onwrite(stream, er) ","      process.nextTick(function() ","function afterWrite(stream, state, finished, cb) ","function onwriteDrain(stream, state) ","function clearBuffer(stream, state) ","Writable.prototype._write = function(chunk, encoding, cb) ","Writable.prototype.end = function(chunk, encoding, cb) ","  if (typeof chunk === 'function') ","  } else if (typeof encoding === 'function') ","function needFinish(stream, state) ","function finishMaybe(stream, state) ","function endWritable(stream, state, cb) "],"Dependencies":["buffer","core-util-is","inherits","stream","./_stream_duplex"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\passthrough.js","LineCount":2,"CharCount":56,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_passthrough.js"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\readable.js","LineCount":7,"CharCount":319,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_readable.js","./lib/_stream_writable.js","./lib/_stream_duplex.js","./lib/_stream_transform.js","./lib/_stream_passthrough.js"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\transform.js","LineCount":2,"CharCount":54,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_transform.js"]},{"FileName":"node_modules\\mongodb\\node_modules\\readable-stream\\writable.js","LineCount":2,"CharCount":53,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_writable.js"]},{"FileName":"node_modules\\mongodb\\test.js","LineCount":210,"CharCount":6653,"Comments":["var uri = \"mongodb://admin:admin@localhost:27017,localhost:27018/admin\";","var uri = \"mongodb://localhost:31000,localhost:31001/test?replicaSet=rs\";","var uri = \"mongodb://muser:mpass@ds015510-a0.mlab.com:15510,ds015510-a1.mlab.com:15510/test?replicaSet=rs-ds015510\";","var interval = 500;","  // if(i == 100) {","  if(i == 100) {","    // replSet: {","    //   socketOptions: {","    //     connectTimeoutMS: 2000, socketTimeoutMS: 2000","    //   }","    // }","  }, function(err, db) {","      // console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! toArray\")","      // console.dir(err)","      // console.dir(docs)","      db.close(function(){","        // console.log(\"close\");","        console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! close\")","// openThenClose();","var intervalId = setInterval(function(){","// var start = null;","//","// console.log(\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ CLOSE 0\")","// MongoClient.connect('mongodb://localhost:31000/test?replicaSet=rs', {","//   replSet: {","//     socketOptions: {","//       connectTimeoutMS: 2000, socketTimeoutMS: 2000","//     }","//   }","//","// }, function(err, db) {","//   console.log(err)","//   start = new Date().getTime();","//   console.log(\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ CLOSE 1\")","//   db.close();","// });","//","// process.on('exit', function() {","//   console.log(\"--------- exit :: \" + (new Date().getTime() - start));","// });","// MongoClient.connect('mongodb://localhost:51000,localhost:51001/test', {","//   mongos: {","//     poolSize: 100","//   },","//   acceptableLatencyMS: 100","// }, function(err, db) {","//   const collection = db.collection(\"tempCollection\");","//","//   collection.remove({}, (err) =\u003e {","//     if (err) return console.trace(err);","//","//     collection.createIndexes([{key: {number: 1}}], (err) =\u003e {","//       const documents = [];","//       for (var i = 0; i \u003c 30000; i++) {","//         documents.push({number: i % 15, prop: '+ftnmrzxEcb+0wCcZjC/YWKP5K0M33FC+FyTaPKxCbyEkFWmXgdU+QW7I6HxDmUPjN8='})","//       }","//","//       collection.insertMany(documents, (err) =\u003e {","//         if (err) return console.trace(err);","//         console.log(\"finish inserting documents...\");","//","//         setInterval(function() {","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 2}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 3000}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 3000}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//","//           collection.find({number: 3000}).toArray((err, results) =\u003e {","//             if (err) return console.trace(err);","//             console.log(\"got\", results.length, \"results\");","//           })","//         }, 200);","//       })","//     })","//   })","// });","","// MongoClient.connect('mongodb://localhost:31000,localhost:31001,localhost:31002/test?rs_name=rs\u0026maxPoolSize=100', {","//   replSet: {","//     socketOptions: {","//       connectTimeoutMS: 2000,","//       socketTimeoutMS: 2000,","//     },","//     // haInterval: 1500","//   }","// }, function(err, db) {","//   console.dir(err)","//","//   db.serverConfig.on('timeout', function() {","//     console.log(\"----- timeout\")","//   })","//","//   db.serverConfig.on('close', function() {","//     console.log(\"----- close\")","//   })","// MongoClient.connect('mongodb://localhost:31000/test?maxPoolSize=100', function(err, db) {","  // console.dir(err)","  //","  // db.on('reconnect', function() {","  //   console.log('reconnect', new Error().stack)","  // });","  //","  // setInterval(function() {","  //   db.collection('t').insertOne({a:1}, function(e) {","  //     // console.log(\"------ insert\")","  //     // console.dir(e)","  //   });","  // }, 1)","  //","  // var doit = true;","  //","  // setInterval(function() {","  //   if(!doit) return","  //   console.log(\"-------------------------------------\")","  //   // // force a reconnect","  //   // var replset = db.serverConfig.s.replset;","  //   // var state = replset.s.replState;","  //   // var connections = state.primary.connections();","  //   var connections = db.serverConfig.connections();","  //","  //   for(var i = 0; i \u003c connections.length; i++) {","  //     connections[i].connection.write(\"da12123123213213123233123213123123123123asdacsdcdv \")","  //   }","  // }, 5000);","","  // setInterval(function() {","  //   doit = false;","  //","  //   // db.close();","  // }, 10000);","","  // db.close();","// })",""],"Functions":["var openThenClose = function()","    setInterval(function() ","  }, function(err, db) ","    descriptors.toArray(function(err, docs)","      db.serverConfig.connections().forEach(function(x) ","      db.close(function()","var intervalId = setInterval(function()","// }, function(err, db) ","// process.on('exit', function() ","// }, function(err, db) ","//         setInterval(function() ","// }, function(err, db) ","//   db.serverConfig.on('timeout', function() ","//   db.serverConfig.on('close', function() ","// MongoClient.connect('mongodb://localhost:31000/test?maxPoolSize=100', function(err, db) ","  // db.on('reconnect', function() ","  // setInterval(function() ","  //   db.collection('t').insertOne(a:1}, function(e) {","  // setInterval(function() ","  // setInterval(function() "],"Dependencies":["./","./"]},{"FileName":"node_modules\\mongodb-core\\index.js","LineCount":19,"CharCount":656,"Comments":["  // Raw operations","  , Query: require('./lib/connection/commands').Query","  // Auth mechanisms","  , MongoCR: require('./lib/auth/mongocr')"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\gssapi.js","LineCount":252,"CharCount":7632,"Comments":["// Kerberos class","var Kerberos = null;","// Try to grab the Kerberos class","try {","  // Authentication process for Mongo","  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess","/**"," * Creates a new GSSAPI authentication mechanism"," * @class"," * @return {GSSAPI} A cursor instance"," */","var GSSAPI = function() {","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","GSSAPI.prototype.auth = function(server, connections, db, username, password, options, callback) {","  // We don't have the Kerberos library","  if(Kerberos == null) return callback(new Error(\"Kerberos library is not installed\"));","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Start Auth process for a connection","      GSSAPIInitialize(db, username, password, db, gssapiServiceName, server, connection, options, function(err, r) {","        // Adjust count","        count = count - 1;","        // If we have an error","        if(err) {","        // We have authenticated all connections","        if(count == 0 \u0026\u0026 numberOfValidConnections \u003e 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password, options));","          // Return correct authentication","          callback(null, true);","//","// Initialize step","var GSSAPIInitialize = function(db, username, password, authdb, gssapiServiceName, server, connection, options, callback) {","  // Create authenticator","  var mongo_auth_process = new MongoAuthProcess(connection.host, connection.port, gssapiServiceName, options);","  // Perform initialization","  mongo_auth_process.init(username, password, function(err, context) {","    // Perform the first step","    mongo_auth_process.transition('', function(err, payload) {","      // Call the next db step","      MongoDBGSSAPIFirstStep(mongo_auth_process, payload, db, username, password, authdb, server, connection, callback);","//","// Perform first step against mongodb","var MongoDBGSSAPIFirstStep = function(mongo_auth_process, payload, db, username, password, authdb, server, connection, callback) {","  // Build the sasl start command","  var command = {","  // Execute first sasl step","  server.command(\"$external.$cmd\"","    // Execute mongodb transition","    mongo_auth_process.transition(r.result.payload, function(err, payload) {","      // MongoDB API Second Step","      MongoDBGSSAPISecondStep(mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback);","//","// Perform first step against mongodb","var MongoDBGSSAPISecondStep = function(mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback) {","  // Build Authentication command to send to MongoDB","  var command = {","  // Execute the command","  server.command(\"$external.$cmd\"","    // Call next transition for kerberos","    mongo_auth_process.transition(doc.payload, function(err, payload) {","      // Call the last and third step","      MongoDBGSSAPIThirdStep(mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback);","  // Build final command","  var command = {","  // Execute the command","  server.command(\"$external.$cmd\"","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","GSSAPI.prototype.reauthenticate = function(server, connections, callback) {","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = GSSAPI;"],"Functions":["var AuthSession = function(db, username, password, options) ","AuthSession.prototype.equal = function(session) ","var GSSAPI = function() ","GSSAPI.prototype.auth = function(server, connections, db, username, password, options, callback) ","    var execute = function(connection) ","      GSSAPIInitialize(db, username, password, db, gssapiServiceName, server, connection, options, function(err, r) ","    var _execute = function(_connection) ","      process.nextTick(function() ","var GSSAPIInitialize = function(db, username, password, authdb, gssapiServiceName, server, connection, options, callback) ","  mongo_auth_process.init(username, password, function(err, context) ","    mongo_auth_process.transition('', function(err, payload) ","var MongoDBGSSAPIFirstStep = function(mongo_auth_process, payload, db, username, password, authdb, server, connection, callback) ","    ,  connection: connection }, function(err, r) {","    mongo_auth_process.transition(r.result.payload, function(err, payload) ","var MongoDBGSSAPISecondStep = function(mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback) ","    ,  connection: connection }, function(err, r) {","    mongo_auth_process.transition(doc.payload, function(err, payload) ","var MongoDBGSSAPIThirdStep = function(mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback) ","    ,  connection: connection }, function(err, r) {","    mongo_auth_process.transition(null, function(err, payload) ","var addAuthSession = function(authStore, session) ","GSSAPI.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, authStore[i].options, function(err, r) "],"Dependencies":["util","crypto","require_optional","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\mongocr.js","LineCount":167,"CharCount":5035,"Comments":["/**"," * Creates a new MongoCR authentication mechanism"," * @class"," * @return {MongoCR} A cursor instance"," */","var MongoCR = function() {","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","MongoCR.prototype.auth = function(server, connections, db, username, password, callback) {","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","    // Execute MongoCR","    var executeMongoCR = function(connection) {","      // Let's start the process","      server.command(f(\"%s.$cmd\", db)","          // Adjust the number of connections left","          // Get nonce","          if(err == null) {","            // Use node md5 generator","            var md5 = crypto.createHash('md5');","            // Generate keys used for authentication","            md5.update(username + \":mongo:\" + password, 'utf8');","            // Final key","            md5 = crypto.createHash('md5');","          // Execute command","          server.command(f(\"%s.$cmd\", db)","              // If we have an error","              if(err) {","              // We have authenticated all connections","              if(count == 0 \u0026\u0026 numberOfValidConnections \u003e 0) {","                // Store the auth details","                addAuthSession(self.authStore, new AuthSession(db, username, password));","                // Return correct authentication","                callback(null, true);","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","MongoCR.prototype.reauthenticate = function(server, connections, callback) {","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = MongoCR;"],"Functions":["var AuthSession = function(db, username, password) ","AuthSession.prototype.equal = function(session) ","var MongoCR = function() ","var addAuthSession = function(authStore, session) ","MongoCR.prototype.auth = function(server, connections, db, username, password, callback) ","    var executeMongoCR = function(connection) ","        ,  connection: connection }, function(err, r) {","            ,  connection: connection }, function(err, r) {","    var _execute = function(_connection) ","      process.nextTick(function() ","MongoCR.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err, r) "],"Dependencies":["util","crypto","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\plain.js","LineCount":157,"CharCount":4360,"Comments":["/**"," * Creates a new Plain authentication mechanism"," * @class"," * @return {Plain} A cursor instance"," */","var Plain = function() {","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","Plain.prototype.auth = function(server, connections, db, username, password, callback) {","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Create payload","      var payload = new Binary(f(\"\\x00%s\\x00%s\", username, password));","      // Let's start the sasl process","      var command = {","      // Let's start the process","      server.command(\"$external.$cmd\"","        // Adjust count","        count = count - 1;","        // If we have an error","        if(err) {","        // We have authenticated all connections","        if(count == 0 \u0026\u0026 numberOfValidConnections \u003e 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          callback(null, true);","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","Plain.prototype.reauthenticate = function(server, connections, callback) {","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = Plain;"],"Functions":["var AuthSession = function(db, username, password) ","AuthSession.prototype.equal = function(session) ","var Plain = function() ","Plain.prototype.auth = function(server, connections, db, username, password, callback) ","    var execute = function(connection) ","        ,  connection: connection }, function(err, r) {","    var _execute = function(_connection) ","      process.nextTick(function() ","var addAuthSession = function(authStore, session) ","Plain.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err, r) "],"Dependencies":["util","crypto","bson","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\scram.js","LineCount":328,"CharCount":9333,"Comments":["/**"," * Creates a new ScramSHA1 authentication mechanism"," * @class"," * @return {ScramSHA1} A cursor instance"," */","var ScramSHA1 = function() {","  // Use node md5 generator","  var md5 = crypto.createHash('md5');","  // Generate keys used for authentication","  md5.update(username + \":mongo:\" + password, 'utf8');","// XOR two buffers","var xor = function(a, b) {","// Create a final digest","var hi = function(data, salt, iterations) {","  // Create digest","  var digest = function(msg) {","  // Create variables","  salt = Buffer.concat([salt, new Buffer('\\x00\\x00\\x00\\x01')])","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","ScramSHA1.prototype.auth = function(server, connections, db, username, password, callback) {","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // Execute MongoCR","  var executeScram = function(connection) {","    // Clean up the user","    username = username.replace('=', \"=3D\").replace(',', '=2C');","    // Create a random nonce","    var nonce = crypto.randomBytes(24).toString('base64');","    // var nonce = 'MsQUY9iw0T9fx2MUEz6LZPwGuhVvWAhc'","    var firstBare = f(\"n=%s,r=%s\", username, nonce);","    // Build command structure","    var cmd = {","    // Handle the error","    var handleError = function(err, r) {","    // Finish up","    var finish = function(_count, _numberOfValidConnections) {","        // Store the auth details","        addAuthSession(self.authStore, new AuthSession(db, username, password));","        // Return correct authentication","        return callback(null, true);","      // Handle any error","      handleError(_err, _r)","      // Adjust the number of connections","      count = count - 1;","      // Execute the finish","      finish(count, numberOfValidConnections);","    // Execute start sasl command","    server.command(f(\"%s.$cmd\", db)","      // Do we have an error, handle it","      if(handleError(err, r) == false) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          return callback(null, true);","      // Get the dictionary","      var dict = parsePayload(r.result.payload.value())","      // Unpack dictionary","      var iterations = parseInt(dict.i, 10);","      // Set up start of proof","      var withoutProof = f(\"c=biws,r=%s\", rnonce);","      // Create the client key","      var hmac = crypto.createHmac('sha1', saltedPassword);","      // Create the stored key","      var hash = crypto.createHash('sha1');","      // Create the authentication message","      var authMsg = [firstBare, r.result.payload.value().toString('base64'), withoutProof].join(',');","      // Create client signature","      var hmac = crypto.createHmac('sha1', storedKey);","      // Create client proof","      var clientProof = f(\"p=%s\", new Buffer(xor(clientKey, clientSig)).toString('base64'));","      // Create client final","      var clientFinal = [withoutProof, clientProof].join(',');","      // Generate server key","      var hmac = crypto.createHmac('sha1', saltedPassword);","      // Generate server signature","      var hmac = crypto.createHmac('sha1', serverKey);","      //","      // Create continue message","      var cmd = {","      //","      // Execute sasl continue","      server.command(f(\"%s.$cmd\", db)","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","ScramSHA1.prototype.reauthenticate = function(server, connections, callback) {","  // No connections","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {"],"Functions":["var AuthSession = function(db, username, password) ","AuthSession.prototype.equal = function(session) ","var ScramSHA1 = function() ","var parsePayload = function(payload) ","var passwordDigest = function(username, password) ","var xor = function(a, b) ","var hi = function(data, salt, iterations) ","  var digest = function(msg) ","ScramSHA1.prototype.auth = function(server, connections, db, username, password, callback) ","  var executeScram = function(connection) ","    var handleError = function(err, r) ","    var finish = function(_count, _numberOfValidConnections) ","    var handleEnd = function(_err, _r) ","      , cmd,  connection: connection }, function(err, r) {","        , cmd,  connection: connection }, function(err, r) {","              , cmd,  connection: connection }, function(err, r) {","  var _execute = function(_connection) ","    process.nextTick(function() ","var addAuthSession = function(authStore, session) ","ScramSHA1.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err, r) "],"Dependencies":["util","crypto","bson","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\sspi.js","LineCount":242,"CharCount":7299,"Comments":["// Kerberos class","var Kerberos = null;","// Try to grab the Kerberos class","try {","  // Authentication process for Mongo","  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess","/**"," * Creates a new SSPI authentication mechanism"," * @class"," * @return {SSPI} A cursor instance"," */","var SSPI = function() {","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","SSPI.prototype.auth = function(server, connections, db, username, password, options, callback) {","  // We don't have the Kerberos library","  if(Kerberos == null) return callback(new Error(\"Kerberos library is not installed\"));","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Start Auth process for a connection","      SSIPAuthenticate(username, password, gssapiServiceName, server, connection, options, function(err, r) {","        // Adjust count","        count = count - 1;","        // If we have an error","        if(err) {","        // We have authenticated all connections","        if(count == 0 \u0026\u0026 numberOfValidConnections \u003e 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password, options));","          // Return correct authentication","          callback(null, true);","  // Build Authentication command to send to MongoDB","  var command = {","  // Create authenticator","  var mongo_auth_process = new MongoAuthProcess(connection.host, connection.port, gssapiServiceName, options);","  // Execute first sasl step","  server.command(\"$external.$cmd\"","        // Perform the next step against mongod","        var command = {","        // Execute the command","        server.command(\"$external.$cmd\"","            // Perform the next step against mongod","            var command = {","            // Execute the command","            server.command(\"$external.$cmd\"","                // Perform the next step against mongod","                var command = {","                // Execute the command","                server.command(\"$external.$cmd\"","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","SSPI.prototype.reauthenticate = function(server, connections, callback) {","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = SSPI;"],"Functions":["var AuthSession = function(db, username, password, options) ","AuthSession.prototype.equal = function(session) ","var SSPI = function() ","SSPI.prototype.auth = function(server, connections, db, username, password, options, callback) ","    var execute = function(connection) ","      SSIPAuthenticate(username, password, gssapiServiceName, server, connection, options, function(err, r) ","    var _execute = function(_connection) ","      process.nextTick(function() ","var SSIPAuthenticate = function(username, password, gssapiServiceName, server, connection, options, callback) ","    ,  connection: connection }, function(err, r) {","    mongo_auth_process.init(username, password, function(err) ","      mongo_auth_process.transition(doc.payload, function(err, payload) ","          ,  connection: connection }, function(err, r) {","          mongo_auth_process.transition(doc.payload, function(err, payload) ","              ,  connection: connection }, function(err, r) {","              mongo_auth_process.transition(doc.payload, function(err, payload) ","                  ,  connection: connection }, function(err, r) {","var addAuthSession = function(authStore, session) ","SSPI.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, authStore[i].options, function(err, r) "],"Dependencies":["util","crypto","require_optional","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\auth\\x509.js","LineCount":152,"CharCount":4208,"Comments":["/**"," * Creates a new X509 authentication mechanism"," * @class"," * @return {X509} A cursor instance"," */","var X509 = function() {","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","X509.prototype.auth = function(server, connections, db, username, password, callback) {","  // Total connections","  var count = connections.length;","  // Valid connections","  var numberOfValidConnections = 0;","  // For each connection we need to authenticate","  while(connections.length \u003e 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Let's start the sasl process","      var command = {","      // Let's start the process","      server.command(\"$external.$cmd\"","        // Adjust count","        count = count - 1;","        // If we have an error","        if(err) {","        // We have authenticated all connections","        if(count == 0 \u0026\u0026 numberOfValidConnections \u003e 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          callback(null, true);","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","X509.prototype.reauthenticate = function(server, connections, callback) {","  // Iterate over all the auth details stored","  for(var i = 0; i \u003c authStore.length; i++) {","      // Done re-authenticating","      if(count == 0) {","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = X509;"],"Functions":["var AuthSession = function(db, username, password) ","AuthSession.prototype.equal = function(session) ","var X509 = function() ","X509.prototype.auth = function(server, connections, db, username, password, callback) ","    var execute = function(connection) ","        ,  connection: connection }, function(err, r) {","    var _execute = function(_connection) ","      process.nextTick(function() ","var addAuthSession = function(authStore, session) ","X509.prototype.reauthenticate = function(server, connections, callback) ","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err, r) "],"Dependencies":["util","crypto","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\connection\\commands.js","LineCount":554,"CharCount":17268,"Comments":["// Incrementing request id","var _requestId = 0;","// Wire command operation ids","var OP_QUERY = 2004;","// Query flags","var OPTS_NONE = 0;","// Request Id Max Value in JS","var JS_INT_MAX = 0x20000000000000;","// Response flags","var CURSOR_NOT_FOUND = 1;","/**************************************************************"," * QUERY"," **************************************************************/","var Query = function(bson, ns, query, options) {","  // Basic options needed to be passed in","  if(ns == null) throw new Error(\"ns must be specified for query\");","  // Validate that we are not passing 0x00 in the colletion name","  if(!!~ns.indexOf(\"\\x00\")) {","  // Basic options","  this.bson = bson;","  // Ensure empty options","  this.options = options || {};","  // Additional options","  this.numberToSkip = options.numberToSkip || 0;","  // Serialization option","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  // Flags","  this.tailable = false;","//","// Assign a new request Id","Query.prototype.incRequestId = function() {","//","// Assign a new request Id","Query.nextRequestId = function() {","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","Query.prototype.toBin = function() {","  // Set up the flags","  var flags = 0;","  // If batchSize is different to self.numberToReturn","  if(self.batchSize != self.numberToReturn) self.numberToReturn = self.batchSize;","  // Allocate write protocol header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // Flags","    + Buffer.byteLength(self.ns) + 1 // namespace","    + 4 // numberToSkip","    + 4 // numberToReturn","  );","  // Add header to buffers","  buffers.push(header);","  // Serialize the query","  var query = self.bson.serialize(this.query","  // Add query document","  buffers.push(query);","    // Serialize the projection document","    projection = self.bson.serialize(this.returnFieldSelector, this.checkKeys, true, this.serializeFunctions, this.ignoreUndefined);","    // Add projection document","    buffers.push(projection);","  // Total message size","  var totalLength = header.length + query.length + (projection ? projection.length : 0);","  // Set up the index","  var index = 4;","  // Write total document length","  header[3] = (totalLength \u003e\u003e 24) \u0026 0xff;","  // Write header information requestId","  header[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // Write header information responseTo","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Write header information OP_QUERY","  header[index + 3] = (OP_QUERY \u003e\u003e 24) \u0026 0xff;","  // Write header information flags","  header[index + 3] = (flags \u003e\u003e 24) \u0026 0xff;","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  // Write header information flags numberToSkip","  header[index + 3] = (this.numberToSkip \u003e\u003e 24) \u0026 0xff;","  // Write header information flags numberToReturn","  header[index + 3] = (this.numberToReturn \u003e\u003e 24) \u0026 0xff;","  // Return the buffers","  return buffers;","/**************************************************************"," * GETMORE"," **************************************************************/","var GetMore = function(bson, ns, cursorId, opts) {","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","GetMore.prototype.toBin = function() {","  // Create command buffer","  var index = 0;","  // Allocate buffer","  var _buffer = new Buffer(length);","  // Write header information","  // index = write32bit(index, _buffer, length);","  _buffer[index + 3] = (length \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, requestId);","  _buffer[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, OP_GETMORE);","  _buffer[index + 3] = (OP_GETMORE \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Write collection name","  index = index + _buffer.write(this.ns, index, 'utf8') + 1;","  // Write batch size","  // index = write32bit(index, _buffer, numberToReturn);","  _buffer[index + 3] = (this.numberToReturn \u003e\u003e 24) \u0026 0xff;","  // Write cursor id","  // index = write32bit(index, _buffer, cursorId.getLowBits());","  _buffer[index + 3] = (this.cursorId.getLowBits() \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, cursorId.getHighBits());","  _buffer[index + 3] = (this.cursorId.getHighBits() \u003e\u003e 24) \u0026 0xff;","  // Return buffer","  return _buffer;","/**************************************************************"," * KILLCURSOR"," **************************************************************/","var KillCursor = function(bson, cursorIds) {","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","KillCursor.prototype.toBin = function() {","  // Create command buffer","  var index = 0;","  // Write header information","  // index = write32bit(index, _buffer, length);","  _buffer[index + 3] = (length \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, requestId);","  _buffer[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, OP_KILL_CURSORS);","  _buffer[index + 3] = (OP_KILL_CURSORS \u003e\u003e 24) \u0026 0xff;","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Write batch size","  // index = write32bit(index, _buffer, this.cursorIds.length);","  _buffer[index + 3] = (this.cursorIds.length \u003e\u003e 24) \u0026 0xff;","  // Write all the cursor ids into the array","  for(var i = 0; i \u003c this.cursorIds.length; i++) {","    // Write cursor id","    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());","    _buffer[index + 3] = (this.cursorIds[i].getLowBits() \u003e\u003e 24) \u0026 0xff;","    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());","    _buffer[index + 3] = (this.cursorIds[i].getHighBits() \u003e\u003e 24) \u0026 0xff;","  // Return buffer","  return _buffer;","  //","  // Parse Header","  //","  this.index = 0;","  // Read the message length","  this.length = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Fetch the request id for this reply","  this.requestId = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Fetch the id of the request that triggered the response","  this.responseTo = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Skip op-code field","  this.index = this.index + 4;","  // Unpack flags","  this.responseFlags = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Unpack the cursor","  var lowBits = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Create long object","  this.cursorId = new Long(lowBits, highBits);","  // Unpack the starting from","  this.startingFrom = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Unpack the number of objects returned","  this.numberReturned = data[this.index] | data[this.index + 1] \u003c\u003c 8 | data[this.index + 2] \u003c\u003c 16 | data[this.index + 3] \u003c\u003c 24;","  // Preallocate document array","  this.documents = new Array(this.numberReturned);","  // Flag values","  this.cursorNotFound = (this.responseFlags \u0026 CURSOR_NOT_FOUND) != 0;","// Validation buffers","var firstBatch = new Buffer('firstBatch', 'utf8');","  // Don't parse again if not needed","  if(this.parsed) return;","  // Allow the return of raw documents instead of parsing","  var raw = options.raw || false;","  //","  // Single document and documentsReturnedIn set","  //","  if(this.numberReturned == 1 \u0026\u0026 documentsReturnedIn != null \u0026\u0026 raw) {","    // Calculate the bson size","    var bsonSize = this.data[this.index] | this.data[this.index + 1] \u003c\u003c 8 | this.data[this.index + 2] \u003c\u003c 16 | this.data[this.index + 3] \u003c\u003c 24;","    // Slice out the buffer containing the command result document","    var document = this.data.slice(this.index, this.index + bsonSize);","    // Set up field we wish to keep as raw","    var fieldsAsRaw = {}","    // Set up the options","    var _options = {promoteLongs: this.opts.promoteLongs, fieldsAsRaw: fieldsAsRaw};","    // Do we have a promoteLongs value on the options","    if(typeof options.promoteLongs == 'boolean') {","    // Deserialize but keep the array of documents in non-parsed form","    var doc = this.bson.deserialize(document, _options);","    // Get the documents","    this.documents = doc.cursor[documentsReturnedIn];","    // Ensure we have a Long valie cursor id","    this.cursorId = typeof doc.cursor.id == 'number'","    // Adjust the index","    this.index = this.index + bsonSize;","    // Set as parsed","    this.parsed = true","  //","  // Parse Body","  //","  for(var i = 0; i \u003c this.numberReturned; i++) {","    // Parse options","    var _options = {promoteLongs: this.opts.promoteLongs};","    // Do we have a promoteLongs value on the options","    if(typeof options.promoteLongs == 'boolean') {","    // If we have raw results specified slice the return document","    if(raw) {","    // Adjust the index","    this.index = this.index + bsonSize;","  // Set parsed","  this.parsed = true;"],"Functions":["var Query = function(bson, ns, query, options) ","Query.prototype.incRequestId = function() ","Query.nextRequestId = function() ","Query.prototype.toBin = function() ","Query.getRequestId = function() ","var GetMore = function(bson, ns, cursorId, opts) ","GetMore.prototype.toBin = function() ","var KillCursor = function(bson, cursorIds) ","KillCursor.prototype.toBin = function() ","var Response = function(connection, bson, data, opts) ","Response.prototype.isParsed = function() ","Response.prototype.parse = function(options) "],"Dependencies":["util","bson","./utils","./utils","./utils"]},{"FileName":"node_modules\\mongodb-core\\lib\\connection\\connection.js","LineCount":544,"CharCount":19233,"Comments":["/**"," * Creates a new Connection instance"," * @class"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @fires Connection#connect"," * @fires Connection#close"," * @fires Connection#error"," * @fires Connection#timeout"," * @fires Connection#parseError"," * @return {Connection} A cursor instance"," */","var Connection = function(options) {","  // Add event listener","  EventEmitter.call(this);","  // Set empty if no options passed","  this.options = options || {};","  // Identification information","  this.id = _id++;","  // Logger instance","  this.logger = Logger('Connection', options);","  // No bson parser passed in","  if(!options.bson) throw new Error(\"must pass in valid bson parser\");","  // Get bson parser","  this.bson = options.bson;","  // Grouping tag used for debugging purposes","  this.tag = options.tag;","  // Message handler","  this.messageHandler = options.messageHandler;","  // Max BSON message size","  this.maxBsonMessageSize = options.maxBsonMessageSize || (1024 * 1024 * 16 * 4);","  // Debug information","  if(this.logger.isDebug()) this.logger.debug(f('creating connection %s with options [%s]', this.id, JSON.stringify(debugOptions(debugFields, options))));","  // Default options","  this.port = options.port || 27017;","  // If connection was destroyed","  this.destroyed = false;","  // Check if we have a domain socket","  this.domainSocket = this.host.indexOf('\\/') != -1;","  // Serialize commands using function","  this.singleBufferSerializtion = typeof options.singleBufferSerializtion == 'boolean' ? options.singleBufferSerializtion : true;","  // SSL options","  this.ca = options.ca || null;","  // If ssl not enabled","  if(!this.ssl) this.rejectUnauthorized = false;","  // Response options","  this.responseOptions = {","  // Flushing","  this.flushing = false;","  // Internal state","  this.connection = null;","  // Create hash method","  var hash = crypto.createHash('sha1');","  // Create a hash name","  this.hashedName = hash.digest('hex');","    // Set the socket timeout","    this.socketTimeout = value;","    // Set the socket timeout on the socket","    this.connection.setTimeout(value);","//","// Connection handlers","var errorHandler = function(self) {","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s for [%s:%s] errored out with [%s]', self.id, self.host, self.port, JSON.stringify(err)));","    // Emit the error","    if(self.listeners('error').length \u003e 0) self.emit(\"error\", MongoError.create(err), self);","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s for [%s:%s] timed out', self.id, self.host, self.port));","    // Emit timeout error","    self.emit(\"timeout\"","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s with for [%s:%s] closed', self.id, self.host, self.port));","    // Emit close event","    if(!hadError) {","    // Parse until we are done with the data","    while(data.length \u003e 0) {","      // If we still have bytes to read on the current message","      if(self.bytesRead \u003e 0 \u0026\u0026 self.sizeOfMessage \u003e 0) {","        // Calculate the amount of remaining bytes","        var remainingBytesToRead = self.sizeOfMessage - self.bytesRead;","        // Check if the current chunk contains the rest of the message","        if(remainingBytesToRead \u003e data.length) {","          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)","          data.copy(self.buffer, self.bytesRead);","          // Adjust the number of bytes read so it point to the correct index in the buffer","          self.bytesRead = self.bytesRead + data.length;","          // Reset state of buffer","          data = new Buffer(0);","          // Copy the missing part of the data into our current buffer","          data.copy(self.buffer, self.bytesRead, 0, remainingBytesToRead);","          // Slice the overflow into a new buffer that we will then re-parse","          data = data.slice(remainingBytesToRead);","          // Emit current complete message","          try {","            // Reset state of buffer","            self.buffer = null;","            // Emit the buffer","            self.messageHandler(new Response(self, self.bson, emitBuffer, self.responseOptions), self);","            // We got a parse Error fire it off then keep going","            self.emit(\"parseError\", errorObject, self);","        // Stub buffer is kept in case we don't get enough bytes to determine the","        // size of the message (\u003c 4 bytes)","        if(self.stubBuffer != null \u0026\u0026 self.stubBuffer.length \u003e 0) {","          // If we have enough bytes to determine the message size let's do it","          if(self.stubBuffer.length + data.length \u003e 4) {","            // Prepad the data","            var newData = new Buffer(self.stubBuffer.length + data.length);","            // Reassign for parsing","            data = newData;","            // Reset state of buffer","            self.buffer = null;","            // Add the the bytes to the stub buffer","            var newStubBuffer = new Buffer(self.stubBuffer.length + data.length);","            // Copy existing stub buffer","            self.stubBuffer.copy(newStubBuffer, 0);","            // Copy missing part of the data","            data.copy(newStubBuffer, self.stubBuffer.length);","            // Exit parsing loop","            data = new Buffer(0);","            // Retrieve the message size","            // var sizeOfMessage = data.readUInt32LE(0);","            var sizeOfMessage = data[0] | data[1] \u003c\u003c 8 | data[2] \u003c\u003c 16 | data[3] \u003c\u003c 24;","            // If we have a negative sizeOfMessage emit error and return","            if(sizeOfMessage \u003c 0 || sizeOfMessage \u003e self.maxBsonMessageSize) {","              // We got a parse Error fire it off then keep going","              self.emit(\"parseError\", errorObject, self);","            // Ensure that the size of message is larger than 0 and less than the max allowed","            if(sizeOfMessage \u003e 4 \u0026\u0026 sizeOfMessage \u003c self.maxBsonMessageSize \u0026\u0026 sizeOfMessage \u003e data.length) {","              // Copy all the data into the buffer","              data.copy(self.buffer, 0);","              // Update bytes read","              self.bytesRead = data.length;","              // Update sizeOfMessage","              self.sizeOfMessage = sizeOfMessage;","              // Ensure stub buffer is null","              self.stubBuffer = null;","              // Exit parsing loop","              data = new Buffer(0);","                // Reset state of buffer","                self.buffer = null;","                // Exit parsing loop","                data = new Buffer(0);","                // Emit the message","                self.messageHandler(new Response(self, self.bson, emitBuffer, self.responseOptions), self);","                // We got a parse Error fire it off then keep going","                self.emit(\"parseError\", errorObject, self);","              // We got a parse Error fire it off then keep going","              self.emit(\"parseError\", errorObject, self);","              // Clear out the state of the parser","              self.buffer = null;","              // Exit parsing loop","              data = new Buffer(0);","              // Reset state of buffer","              self.buffer = null;","              // Copy rest of message","              data = data.slice(sizeOfMessage);","              // Emit the message","              self.messageHandler(new Response(self, self.bson, emitBuffer, self.responseOptions), self);","            // Create a buffer that contains the space for the non-complete message","            self.stubBuffer = new Buffer(data.length)","            // Copy the data to the stub buffer","            data.copy(self.stubBuffer, 0);","            // Exit parsing loop","            data = new Buffer(0);","/**"," * Connect"," * @method"," */","Connection.prototype.connect = function(_options) {","  // Check if we are overriding the promoteLongs","  if(typeof _options.promoteLongs == 'boolean') {","  // Create new connection instance","  self.connection = self.domainSocket","  // Set the options for the connection","  self.connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);","  // If we have ssl enabled","  if(self.ssl) {","    // Override checkServerIdentity behavior","    if(self.checkServerIdentity == false) {","      // Skip the identiy check by retuning undefined as per node documents","      // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback","      sslOptions.checkServerIdentity = function(servername, cert) {","        // Error on auth or skip","        if(self.connection.authorizationError \u0026\u0026 self.rejectUnauthorized) {","        // Set socket timeout instead of connection timeout","        self.connection.setTimeout(self.socketTimeout);","        // We are done emit connect","        self.emit('connect', self);","      // In the case of an invalid key, the Node tls module raises the error","      // Error: error:0B080074:x509 certificate routines:X509_check_private_key","      // but does not emit an error event like all other errors. We handle this","      // and other potential inconsistencies here.","      process.nextTick(function() {","      // Set socket timeout instead of connection timeout","      self.connection.setTimeout(self.socketTimeout);","      // Emit connect event","      self.emit('connect', self);","  // Add handlers for events","  self.connection.once('error', errorHandler(self));","/**"," * Unref this connection"," * @method"," * @return {boolean}"," */","Connection.prototype.unref = function() {","/**"," * Destroy connection"," * @method"," */","Connection.prototype.destroy = function() {","/**"," * Write to connection"," * @method"," * @param {Command} command Command to write out need to implement toBin and toBinUnified"," */","Connection.prototype.write = function(buffer) {","  // Debug Log","  if(this.logger.isDebug()) {","  // Write out the command","  if(!Array.isArray(buffer)) return this.connection.write(buffer, 'binary');","  // Iterate over all buffers and write them in order to the socket","  for(var i = 0; i \u003c buffer.length; i++) this.connection.write(buffer[i], 'binary');","/**"," * Return id of connection as a string"," * @method"," * @return {string}"," */","Connection.prototype.toString = function() {","/**"," * Return json object of connection"," * @method"," * @return {object}"," */","Connection.prototype.toJSON = function() {","/**"," * Is the connection connected"," * @method"," * @return {boolean}"," */","Connection.prototype.isConnected = function() {","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Connection#connect"," * @type {Connection}"," */","","/**"," * The server connection closed, all pool connections closed"," *"," * @event Connection#close"," * @type {Connection}"," */","","/**"," * The server connection caused an error, all pool connections closed"," *"," * @event Connection#error"," * @type {Connection}"," */","","/**"," * The server connection timed out, all pool connections closed"," *"," * @event Connection#timeout"," * @type {Connection}"," */","","/**"," * The driver experienced an invalid message, all pool connections closed"," *"," * @event Connection#parseError"," * @type {Connection}"," */","","module.exports = Connection;"],"Functions":[" * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Connection = function(options) ","  // Serialize commands using function","    || typeof options.checkServerIdentity == 'function' ? options.checkServerIdentity : true;","  get: function() ","  set: function(value) ","  get: function()  return this.socketTimeout; }","var errorHandler = function(self) ","  return function(err) ","var timeoutHandler = function(self) ","  return function() ","var closeHandler = function(self) ","  return function(hadError) ","var dataHandler = function(self) ","  return function(data) ","Connection.prototype.connect = function(_options) ","      sslOptions.checkServerIdentity = function(servername, cert) ","    } else if(typeof self.checkServerIdentity == 'function') ","      self.connection = tls.connect(self.port, self.host, sslOptions, function() ","      process.nextTick(function() ","    self.connection.on('connect', function() ","Connection.prototype.unref = function() ","    this.once('connect', function() ","Connection.prototype.destroy = function() ","Connection.prototype.write = function(buffer) ","Connection.prototype.toString = function() ","Connection.prototype.toJSON = function() ","Connection.prototype.isConnected = function() "],"Dependencies":["util","events","net","tls","util","crypto","./utils","./utils","./commands","../error","./logger"]},{"FileName":"node_modules\\mongodb-core\\lib\\connection\\logger.js","LineCount":196,"CharCount":5102,"Comments":["// Filters for classes","var classFilters = {};","// Save the process id","var pid = process.pid;","// current logger","var currentLogger = null;","/**"," * Creates a new Logger instance"," * @class"," * @param {string} className The Class name associated with the logging instance"," * @param {object} [options=null] Optional settings."," * @param {Function} [options.logger=null] Custom logger function;"," * @param {string} [options.loggerLevel=error] Override default global log level."," * @return {Logger} a Logger instance."," */","var Logger = function(className, options) {","  // Current reference","  var self = this;","  // Current logger","  if(currentLogger == null \u0026\u0026 options.logger) {","  // Set level of logging, default is error","  if(level == null) {","  // Add all class names","  if(filteredClasses[this.className] == null) classFilters[this.className] =  true;","/**"," * Log a message at the debug level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.debug = function(message, object) {","/**"," * Log a message at the info level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.info = function(message, object) {","/**"," * Log a message at the error level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.error = function(message, object) {","/**"," * Is the logger set at info level"," * @method"," * @return {boolean}"," */","Logger.prototype.isInfo = function() {","/**"," * Is the logger set at error level"," * @method"," * @return {boolean}"," */","Logger.prototype.isError = function() {","/**"," * Is the logger set at debug level"," * @method"," * @return {boolean}"," */","Logger.prototype.isDebug = function() {","/**"," * Resets the logger to default settings, error and no filtered classes"," * @method"," * @return {null}"," */","Logger.reset = function() {","/**"," * Get the current logger function"," * @method"," * @return {function}"," */","Logger.currentLogger = function() {","/**"," * Set the current logger function"," * @method"," * @param {function} logger Logger function."," * @return {null}"," */","Logger.setCurrentLogger = function(logger) {","/**"," * Set what classes to log."," * @method"," * @param {string} type The type of filter (currently only class)"," * @param {string[]} values The filters to apply"," * @return {null}"," */","Logger.filter = function(type, values) {","/**"," * Set the current log level"," * @method"," * @param {string} level Set current log level (debug, info, error)"," * @return {null}"," */","Logger.setLevel = function(_level) {"],"Functions":[" * @param Function} [options.logger=null] Custom logger function;","var Logger = function(className, options) ","Logger.prototype.debug = function(message, object) ","Logger.prototype.info = function(message, object) ","Logger.prototype.error = function(message, object) ","Logger.prototype.isInfo = function() ","Logger.prototype.isError = function() ","Logger.prototype.isDebug = function() ","Logger.reset = function() "," * Get the current logger function"," * @return function}","Logger.currentLogger = function() "," * Set the current logger function"," * @param function} logger Logger function.","Logger.setCurrentLogger = function(logger) ","  if(typeof logger != 'function') throw new MongoError(\"current logger must be a function\");","Logger.filter = function(type, values) ","    values.forEach(function(x) ","Logger.setLevel = function(_level) "],"Dependencies":["util","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\connection\\pool.js","LineCount":530,"CharCount":14690,"Comments":["/**"," * Creates a new Pool instance"," * @class"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {number} [options.size=1] Max server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passPhrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @fires Pool#connect"," * @fires Pool#close"," * @fires Pool#error"," * @fires Pool#timeout"," * @fires Pool#parseError"," * @return {Pool} A cursor instance"," */","var Pool = function(options) {","  // Add event listener","  EventEmitter.call(this);","  // Set empty if no options passed","  this.options = options || {};","  // Save host and port","  this.host = options.host;","  // Message handler","  this.messageHandler = options.messageHandler;","  // No bson parser passed in","  if(!options.bson) throw new Error(\"must pass in valid bson parser\");","  // // Contains all connections","  // this.connections = [];","  // Contains all available connections","  this.availableConnections = [];","  // Current status of the pool","  this.state = DISCONNECTED;","  // Round robin index","  this.index = 0;","  // Logger instance","  this.logger = Logger('Pool', options);","  // Pool id","  this.id = _id++;","  // Grouping tag used for debugging purposes","  this.tag = options.tag;","  // Operation work queue","  this.queue = [];","  // Currently executing","  this.executing = false;","  // Unref pool","  this.unreference = false;","  // Destroy connection","  connection.destroy();","  // Remove connection method","  var remove = function(connections) {","  // Clean out the connection","  if(remove(self.availableConnections)) return;","    // Destroy the connection","    connection.destroy();","    // Remove the connection","    removeConnection(self, connection);","    // Emit error","    if(self.listeners('error').length \u003e 0) {","    // Destroy the connection","    connection.destroy();","    // Remove the connection","    removeConnection(self, connection);","    // Emit connection timeout to server instance","    self.emit('timeout', err, connection);","    // Destroy the connection","    connection.destroy();","    // Remove the connection","    removeConnection(self, connection);","    // Emit connection close to server instance","    self.emit('close', err, connection);","    // Destroy the connection","    connection.destroy();","    // Remove the connection","    removeConnection(self, connection);","    // Emit error to server instance","    self.emit('parseError', err, connection);","/**"," * Unref the pool"," * @method"," */","Pool.prototype.unref = function() {","/**"," * Destroy pool"," * @method"," */","Pool.prototype.destroy = function() {","  // Set dead","  this.dead = true;","  // Get all the connections","  var connections = this.getAll();","  // Destroy all the connections","  connections.forEach(function(c) {","    // Destroy all event emitters","    [\"close\", \"message\", \"error\", \"timeout\", \"parseError\", \"connect\"].forEach(function(e) {","    // Destroy the connection","    c.destroy();","  // Wipe out all connection arrays","  this.availableConnections = [];","/**"," * Connect pool"," * @method"," */","Pool.prototype.connect = function(_options) {","  // Set to connecting","  this.state = CONNECTING","  // No dead","  this.dead = false;","  // Set the message handler","  self.options.messageHandler = self.messageHandler;","  // Create a new connection","  var connection = new Connection(self.options);","  // Delete all the event handlers","  ['close', 'error', 'timeout', 'parseError', 'connect'].forEach(function(x) {","  // Add all handlers","  connection.once('close', closeHandler(self));","    // Add the connection to the list of available connections","    self.availableConnections.push(connection);","    // Emit connected event","    self.emit(\"connect\", self);","  // Start connection","  connection.connect(_options);","  // Push the connection","  self.connectingConnections.push(connection);","  // Handle any errors","  var tempErrorHandler = function(_connection) {","  // All event handlers","  var handlers = [\"close\", \"message\", \"error\", \"timeout\", \"parseError\", \"connect\"];","  // Handle successful connection","  var tempConnectHandler = function(_connection) {","        // Remove the connection from the connectingConnections","        var index = self.connectingConnections.indexOf(_connection);","      // Destroy all event emitters","      handlers.forEach(function(e) {","      // Add the final handlers","      _connection.once('close', closeHandler(self));","      // Remove the connection from the connectingConnections","      var index = self.connectingConnections.indexOf(_connection);","      // Add to queue of new connection","      self.newConnections.push(_connection);","      // Emit connection to server instance","      // alowing it to apply any needed authentication","      self.emit('connection', _connection);","      // Execute any work waiting","      _execute(self)();","  // Add all handlers","  connection.once('close', tempErrorHandler(connection));","  // Start connection","  connection.connect();","    // Already executing, skip","    if(self.executing) return;","    // Set pool as executing","    self.executing = true;","    // Total availble connections","    var totalConnections = self.availableConnections.length","    // Have we not reached the max connection size yet","    if(self.availableConnections.length == 0","      // Create a new connection","      _createConnection(self);","      // Attempt to execute again","      self.executing = false;","    // Number of ops to do","    var numberOfOps = self.availableConnections.length \u003e self.queue.length","    // As long as we have available connections","    while(true) {","      // No available connections available","      if(self.availableConnections.length == 0) break;","      // Get a connection","      var connection = self.availableConnections.pop();","        // Add connection to callback so we can flush out","        // only ops for that connection on a socket closure","        if(workItem.cb) {","        // Get actual binary commands","        var buffer = workItem.buffer;","        // Add connection to workers in flight","        self.inUseConnections.push(connection);","        // Fire and forgot message","        if(workItem.immediateRelease) {","/**"," * Write a message to MongoDB"," * @method"," * @return {Connection}"," */","Pool.prototype.write = function(buffer, cb, options) {","  // Do we have an operation","  var operation = {buffer:buffer, cb: cb};","  // Do we immediately release the connection back to available (fire and forget)","  if(options \u0026\u0026 options.immediateRelease) {","  // Push the operation to the queue of operations in progress","  this.queue.push(operation);","  // Attempt to write all buffers out","  _execute(this)();","/**"," * Make a passed connection available"," * @method"," * @return {Connection}"," */","Pool.prototype.connectionAvailable = function(connection) {","  // Get the connection from the newConnections","  var index = this.newConnections.indexOf(connection);","  // If it's in the inUseConnections","  index = this.inUseConnections.indexOf(connection);","  // Add the connection to available connections if it's not a monitoring threads","  if(this.availableConnections.indexOf(connection) == -1) {","  // Fire execute loop","  _execute(this)();","/**"," * Get a pool connection (round-robin)"," * @method"," * @return {Connection}"," */","Pool.prototype.get = function(options) {","  // Set the current index","  this.index = this.index + 1;","  // Get all connections","  var connections = this.availableConnections.slice(0);","/**"," * Get all pool connections"," * @method"," * @return {array}"," */","Pool.prototype.getAll = function() {","/**"," * Is the pool connected"," * @method"," * @return {boolean}"," */","Pool.prototype.isConnected = function() {","  // Available connections","  for(var i = 0; i \u003c this.availableConnections.length; i++) {","  // inUseConnections","  for(var i = 0; i \u003c this.inUseConnections.length; i++) {","/**"," * Was the pool destroyed"," * @method"," * @return {boolean}"," */","Pool.prototype.isDestroyed = function() {","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Pool#connect"," * @type {Pool}"," */","","/**"," * The server connection closed, all pool connections closed"," *"," * @event Pool#close"," * @type {Pool}"," */","","/**"," * The server connection caused an error, all pool connections closed"," *"," * @event Pool#error"," * @type {Pool}"," */","","/**"," * The server connection timed out, all pool connections closed"," *"," * @event Pool#timeout"," * @type {Pool}"," */","","/**"," * The driver experienced an invalid message, all pool connections closed"," *"," * @event Pool#parseError"," * @type {Pool}"," */","","module.exports = Pool;"],"Functions":[" * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Pool = function(options) ","var removeConnection = function(self, connection) ","  var remove = function(connections) ","var errorHandler = function(self) ","  return function(err, connection) ","var timeoutHandler = function(self) ","  return function(err, connection) ","var closeHandler = function(self) ","  return function(err, connection) ","var parseErrorHandler = function(self) ","  return function(err, connection) ","Pool.prototype.unref = function() ","  this.getAll().forEach(function(c) ","Pool.prototype.destroy = function() ","  connections.forEach(function(c) ","    [\"close\", \"message\", \"error\", \"timeout\", \"parseError\", \"connect\"].forEach(function(e) ","Pool.prototype.connect = function(_options) ","  ['close', 'error', 'timeout', 'parseError', 'connect'].forEach(function(x) ","  connection.on('connect', function(connection) ","var _createConnection = function(self) ","  var tempErrorHandler = function(_connection) ","    return function(err) ","  var tempConnectHandler = function(_connection) ","    return function() ","      handlers.forEach(function(e) ","var _execute = function(self) ","  return function() ","Pool.prototype.write = function(buffer, cb, options) ","Pool.prototype.connectionAvailable = function(connection) ","Pool.prototype.get = function(options) ","Pool.prototype.getAll = function() ","Pool.prototype.isConnected = function() ","Pool.prototype.isDestroyed = function() "],"Dependencies":["util","events","./connection","./commands","./logger","util"]},{"FileName":"node_modules\\mongodb-core\\lib\\connection\\utils.js","LineCount":86,"CharCount":2104,"Comments":["// Set property function","var setProperty = function(obj, prop, flag, values) {","        // Flip the bit to 1","        if(value == true) values.flags |= flag;","        // Flip the bit to 0 if it's set, otherwise ignore","        if(value == false \u0026\u0026 (values.flags \u0026 flag) == flag) values.flags ^= flag;","// Set property function","var getProperty = function(obj, propName, fieldName, values, func) {","      // Not parsed yet, parse it","      if(values[fieldName] == null \u0026\u0026 obj.isParsed \u0026\u0026 !obj.isParsed()) {","      // Do we have a post processing function","      if(typeof func == 'function') return func(values[fieldName]);","      // Return raw value","      return values[fieldName];","// Set simple property","var getSingleProperty = function(obj, name, value) {","// Shallow copy","var copy = function(fObj, tObj) {","/**"," * @ignore"," */","var bindToCurrentDomain = function(callback) {","  // Copy all fields over","  for(var name in callback) {","  // Return the bound callback","  return boundCallback;"],"Functions":["// Set property function","var setProperty = function(obj, prop, flag, values) ","      set: function(value) ","    , get: function()  return prop.value; }","// Set property function","var getProperty = function(obj, propName, fieldName, values, func) ","    get: function() ","      // Do we have a post processing function","      if(typeof func == 'function') return func(values[fieldName]);","var getSingleProperty = function(obj, name, value) ","    get: function() ","var copy = function(fObj, tObj) ","var debugOptions = function(debugFields, options) ","  debugFields.forEach(function(n) ","var bindToCurrentDomain = function(callback) "],"Dependencies":null},{"FileName":"node_modules\\mongodb-core\\lib\\cursor.js","LineCount":697,"CharCount":21802,"Comments":["/**"," * This is a cursor results callback"," *"," * @callback resultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {object} document"," */","","/**"," * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query."," *"," * **CURSORS Cannot directly be instantiated**"," * @example"," * var Server = require('mongodb-core').Server"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new Server({host: 'localhost', port: 27017});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   assert.equal(null, err);"," *"," *   // Execute the write"," *   var cursor = _server.cursor('integration_tests.inserts_example4', {"," *       find: 'integration_tests.example4'"," *     , query: {a:1}"," *   }, {"," *     readPreference: new ReadPreference('secondary');"," *   });"," *"," *   // Get the first document"," *   cursor.next(function(err, doc) {"," *     assert.equal(null, err);"," *     server.destroy();"," *   });"," * });"," *"," * // Start connecting"," * server.connect();"," */","","/**"," * Creates a new Cursor, not to be used directly"," * @class"," * @param {object} bson An instance of the BSON parser"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|Long} cmd The selector (can be a command or a cursorId)"," * @param {object} [options=null] Optional settings."," * @param {object} [options.batchSize=1000] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {object} [options.transforms=null] Transform methods for the cursor results"," * @param {function} [options.transforms.query] Transform the value returned from the initial query"," * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next"," * @param {object} topology The server topology instance."," * @param {object} topologyOptions The server topology options."," * @return {Cursor} A cursor instance"," * @property {number} cursorBatchSize The current cursorBatchSize for the cursor"," * @property {number} cursorLimit The current cursorLimit for the cursor"," * @property {number} cursorSkip The current cursorSkip for the cursor"," */","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  // Cursor reference","  var self = this;","  // Initial query","  var query = null;","  // Cursor pool","  this.pool = null;","  // Cursor server","  this.server = null;","  // Do we have a not connected handler","  this.disconnectHandler = options.disconnectHandler;","  // Set local values","  this.bson = bson;","  // All internal state","  this.cursorState = {","    // Result field name if not a cursor (contains the array of results)","    , transforms: options.transforms","  // Add promoteLong to cursor state","  if(typeof topologyOptions.promoteLongs == 'boolean') {","  // Callback controller","  this.callbacks = null;","  // Logger","  this.logger = Logger('Cursor', options);","  //","  // Did we pass in a cursor id","  if(typeof cmd == 'number') {","//","// Handle callback (including any exceptions thrown)","var handleCallback = function(callback, err, result) {","// Internal methods","Cursor.prototype._find = function(callback) {","    // Query failure bit set","    if(result.queryFailure) {","    // Store the connection for usage with getMore command","    self.connection = result.connection;","    // Check if we have a command cursor","    if(Array.isArray(result.documents) \u0026\u0026 result.documents.length == 1","      // We have a an error document return the error","      if(result.documents[0]['$err']","      // We have a cursor document","      if(result.documents[0].cursor != null","          // If we have a namespace change set the new namespace for getmores","          if(result.documents[0].cursor.ns) {","          // Promote id to long if needed","          self.cursorState.cursorId = typeof id == 'number' ? Long.fromNumber(id) : id;","          // If we have a firstBatch set it","          if(Array.isArray(result.documents[0].cursor.firstBatch)) {","            self.cursorState.documents = result.documents[0].cursor.firstBatch;//.reverse();","          }","          // Return after processing command cursor","          return callback(null, null);","    // Otherwise fall back to regular find path","    self.cursorState.cursorId = result.cursorId;","    // Transform the results with passed in transformation method if provided","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.query == 'function') {","    // Return callback","    callback(null, null);","  // If we have a raw query decorate the function","  if(self.options.raw || self.cmd.raw) {","  // Do we have documentsReturnedIn set on the query","  if(typeof self.query.documentsReturnedIn == 'string') {","  // Add promote Long value if defined","  if(typeof self.cursorState.promoteLongs == 'boolean') {","  // Set up callback","  self.callbacks.register(self.query.requestId, queryCallback);","  // Write the initial command out","  self.pool.write(self.query.toBin(), queryCallback);","  // Determine if it's a raw query","  var raw = this.options.raw || this.cmd.raw;","  // Set the current batchSize","  var batchSize = this.cursorState.batchSize;","  // Default pool","  var pool = this.pool;","  // If we have a connection get the corresponding pool","  if(this.connection \u0026\u0026 this.connection.isConnected()) {","    // Get the server","    var server = this.topology.getServerFrom(this.connection);","    // Get the pool","    if(server \u0026\u0026 server.s.pool) {","  // We have a wire protocol handler","  this.server.wireProtocolHandler.getMore(this.bson, this.ns, this.cursorState, batchSize, raw, pool, this.callbacks, this.options, callback);","  // Set cursor to dead","  this.cursorState.dead = true;","  // Remove documents","  this.cursorState.documents = [];","  // If no cursor id just return","  if(this.cursorState.cursorId == null || this.cursorState.cursorId.isZero() || this.cursorState.init == false) {","  // Default pool","  var pool = this.pool;","  // If we have a connection get the corresponding pool","  if(this.connection \u0026\u0026 this.connection.isConnected()) {","    // Get the server","    var server = this.topology.getServerFrom(this.connection);","    // Get the pool","    if(server \u0026\u0026 server.s.pool) {","  // Execute command","  this.server.wireProtocolHandler.killCursor(this.bson, this.ns, this.cursorState.cursorId, pool, this.callbacks, callback);","/**"," * Clone the cursor"," * @method"," * @return {Cursor}"," */","Cursor.prototype.clone = function() {","/**"," * Checks if the cursor is dead"," * @method"," * @return {boolean} A boolean signifying if the cursor is dead or not"," */","Cursor.prototype.isDead = function() {","/**"," * Checks if the cursor was killed by the application"," * @method"," * @return {boolean} A boolean signifying if the cursor was killed by the application"," */","Cursor.prototype.isKilled = function() {","/**"," * Checks if the cursor notified it's caller about it's death"," * @method"," * @return {boolean} A boolean signifying if the cursor notified the callback"," */","Cursor.prototype.isNotified = function() {","/**"," * Returns current buffered documents length"," * @method"," * @return {number} The number of items in the buffered documents"," */","Cursor.prototype.bufferedCount = function() {","/**"," * Returns current buffered documents"," * @method"," * @return {Array} An array of buffered documents"," */","Cursor.prototype.readBufferedDocuments = function(number) {","  // Transform the doc with passed in transformation method if provided","  if(this.cursorState.transforms \u0026\u0026 typeof this.cursorState.transforms.doc == 'function') {","    // Transform all the elements","    for(var i = 0; i \u003c elements.length; i++) {","  // Ensure we do not return any more documents than the limit imposed","  // Just return the number of elements up to the limit","  if(this.cursorState.limit \u003e 0 \u0026\u0026 (this.cursorState.currentLimit + elements.length) \u003e this.cursorState.limit) {","  // Adjust current limit","  this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;","  // Return elements","  return elements;","/**"," * Kill the cursor"," * @method"," * @param {resultCallback} callback A callback function"," */","Cursor.prototype.kill = function(callback) {","/**"," * Resets the cursor"," * @method"," * @return {null}"," */","Cursor.prototype.rewind = function() {","/**"," * Validate if the pool is dead and return error"," */","var isConnectionDead = function(self, callback) {","/**"," * Validate if the cursor is dead but was not explicitly killed by user"," */","var isCursorDeadButNotkilled = function(self, callback) {","  // Cursor is dead but not marked killed, return null","  if(self.cursorState.dead \u0026\u0026 !self.cursorState.killed) {","/**"," * Validate if the cursor is dead and was killed by user"," */","var isCursorDeadAndKilled = function(self, callback) {","/**"," * Validate if the cursor was killed by the user"," */","var isCursorKilled = function(self, callback) {","/**"," * Mark cursor as being dead and notified"," */","var setCursorDeadAndNotified = function(self, callback) {","/**"," * Mark cursor as being notified"," */","var setCursorNotified = function(self, callback) {","  // We have notified about it","  if(self.cursorState.notified) {","  // Cursor is killed return null","  if(isCursorKilled(self, callback)) return;","  // Cursor is dead but not marked killed, return null","  if(isCursorDeadButNotkilled(self, callback)) return;","  // We have a dead and killed cursor, attempting to call next should error","  if(isCursorDeadAndKilled(self, callback)) return;","  // We have just started the cursor","  if(!self.cursorState.init) {","    // Topology is not connected, save the call in the provided store to be","    // Executed at some point when the handler deems it's reconnected","    if(!self.topology.isConnected(self.options) \u0026\u0026 self.disconnectHandler != null) {","      // Get a server","      self.server = self.topology.getServer(self.options);","      // Get a reference to the pool","      self.pool = self.server.s.pool;","      // Get the callbacks","      self.callbacks = self.server.getCallbacks();","      // Handle the error and add object to next method call","      if(self.disconnectHandler != null) {","      // Otherwise return the error","      return callback(err);","    // Set as init","    self.cursorState.init = true;","  // If we don't have a cursorId execute the first query","  if(self.cursorState.cursorId == null) {","    // Check if pool is dead and return if not possible to","    // execute the query against the db","    if(isConnectionDead(self, callback)) return;","    // Check if topology is destroyed","    if(self.topology.isDestroyed()) return callback(new MongoError(f('connection destroyed, not possible to instantiate cursor')));","    // query, cmd, options, cursorState, callback","    self._find(function(err, r) {","    // Ensure we kill the cursor on the server","    self.kill();","    // Set cursor in dead and notified state","    return setCursorDeadAndNotified(self, callback);","      // Ensure an empty cursor state","      self.cursorState.documents = [];","      // Check if topology is destroyed","      if(self.topology.isDestroyed()) return callback(new MongoError(f('connection destroyed, not possible to instantiate cursor')));","      // Check if connection is dead and return if not possible to","      // execute a getmore on this connection","      if(isConnectionDead(self, callback)) return;","      // Execute the next get more","      self._getmore(function(err, doc, connection) {","        // General error","        // if(err \u0026\u0026 err.code != 43) return handleCallback(callback, err);","        if(err \u0026\u0026 err.code != 43) return handleCallback(callback, err);","        // No cursor found error from mongos","        if((err \u0026\u0026 err.code == 43) || (self.cursorState.documents.length == 0","            // Finished iterating over the cursor","            return setCursorDeadAndNotified(self, callback);","        // Save the returned connection to ensure all getMore's fire over the same connection","        self.connection = connection;","        // Tailable cursor getMore result, notify owner about it","        // No attempt is made here to retry, this is left to the user of the","        // core module to handle to keep core simple","        if(self.cursorState.documents.length == 0","          // No more documents in the tailed cursor","          return handleCallback(callback, MongoError.create({","      // Ensure we kill the cursor on the server","      self.kill();","      // Set cursor in dead and notified state","      return setCursorDeadAndNotified(self, callback);","    // Increment the current cursor limit","    self.cursorState.currentLimit += 1;","    // Get the document","    var doc = self.cursorState.documents[self.cursorState.cursorIndex++];","    // Doc overflow","    if(doc.$err) {","      // Ensure we kill the cursor on the server","      self.kill();","      // Set cursor in dead and notified state","      return setCursorDeadAndNotified(self, function() {","    // Transform the doc with passed in transformation method if provided","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.doc == 'function') {","    // Return the document","    handleCallback(callback, null, doc);","/**"," * Retrieve the next document from the cursor"," * @method"," * @param {resultCallback} callback A callback function"," */","Cursor.prototype.next = function(callback) {"],"Functions":[" * server.on('connect', function(server) "," *   cursor.next(function(err, doc) "," * @param function} [options.transforms.query] Transform the value returned from the initial query"," * @param function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) ","Cursor.prototype.setCursorBatchSize = function(value) ","Cursor.prototype.cursorBatchSize = function() ","Cursor.prototype.setCursorLimit = function(value) ","Cursor.prototype.cursorLimit = function() ","Cursor.prototype.setCursorSkip = function(value) ","Cursor.prototype.cursorSkip = function() ","var handleCallback = function(callback, err, result) ","    process.nextTick(function() ","Cursor.prototype._find = function(callback) ","  var queryCallback = function(err, result) ","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.query == 'function') ","  // If we have a raw query decorate the function","Cursor.prototype._getmore = function(callback) ","Cursor.prototype._killcursor = function(callback) ","Cursor.prototype.clone = function() ","Cursor.prototype.isDead = function() ","Cursor.prototype.isKilled = function() ","Cursor.prototype.isNotified = function() ","Cursor.prototype.bufferedCount = function() ","Cursor.prototype.readBufferedDocuments = function(number) ","  if(this.cursorState.transforms \u0026\u0026 typeof this.cursorState.transforms.doc == 'function') "," * @param resultCallback} callback A callback function","Cursor.prototype.kill = function(callback) ","Cursor.prototype.rewind = function() ","var isConnectionDead = function(self, callback) ","var isCursorDeadButNotkilled = function(self, callback) ","var isCursorDeadAndKilled = function(self, callback) ","var isCursorKilled = function(self, callback) ","var setCursorDeadAndNotified = function(self, callback) ","var setCursorNotified = function(self, callback) ","var nextFunction = function(self, callback) ","    self._find(function(err, r) ","      self._getmore(function(err, doc, connection) ","      return setCursorDeadAndNotified(self, function() ","    if(self.cursorState.transforms \u0026\u0026 typeof self.cursorState.transforms.doc == 'function') "," * @param resultCallback} callback A callback function","Cursor.prototype.next = function(callback) "],"Dependencies":["bson","./connection/logger","./error","util","mongodb-core","mongodb-core","assert"]},{"FileName":"node_modules\\mongodb-core\\lib\\error.js","LineCount":45,"CharCount":950,"Comments":["/**"," * Creates a new MongoError"," * @class"," * @augments Error"," * @param {string} message The error message"," * @return {MongoError} A MongoError instance"," */","function MongoError(message) {","/**"," * Creates a new MongoError object"," * @method"," * @param {object} options The error options"," * @return {MongoError} A MongoError instance"," */","MongoError.create = function(options) {","    // Other options","    for(var name in options) {","// Extend JavaScript error","MongoError.prototype = new Error; "],"Functions":["function MongoError(message) ","MongoError.create = function(options) "],"Dependencies":null},{"FileName":"node_modules\\mongodb-core\\lib\\tools\\smoke_plugin.js","LineCount":60,"CharCount":1575,"Comments":["/* Note: because this plugin uses process.on('uncaughtException'), only one"," * of these can exist at any given time. This plugin and anything else that"," * uses process.on('uncaughtException') will conflict. */","exports.attachToRunner = function(runner, outputFile) {","  // In case of exception, make sure we write file","  process.on('uncaughtException', function(err) {","    // Mark all currently running tests as failed","    for (var testName in runningTests) {","    // write file","    fs.writeFileSync(outputFile, JSON.stringify(smokeOutput));","    // Standard NodeJS uncaught exception handler","    console.error(err.stack);"],"Functions":["exports.attachToRunner = function(runner, outputFile) ","    beforeTest: function(test, callback) ","    afterTest: function(test, callback) ","    beforeExit: function(obj, callback) ","      fs.writeFile(outputFile, JSON.stringify(smokeOutput), function() ","  process.on('uncaughtException', function(err) "],"Dependencies":["fs"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\command_result.js","LineCount":37,"CharCount":874,"Comments":["/**"," * Creates a new CommandResult instance"," * @class"," * @param {object} result CommandResult object"," * @param {Connection} connection A connection instance associated with this result"," * @return {CommandResult} A cursor instance"," */","var CommandResult = function(result, connection) {","/**"," * Convert CommandResult to JSON"," * @method"," * @return {object}"," */","CommandResult.prototype.toJSON = function() {","/**"," * Convert CommandResult to String representation"," * @method"," * @return {string}"," */","CommandResult.prototype.toString = function() {"],"Functions":["var CommandResult = function(result, connection) ","CommandResult.prototype.toJSON = function() ","CommandResult.prototype.toString = function() "],"Dependencies":["../connection/utils","../connection/utils","../connection/utils"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\mongos.js","LineCount":1236,"CharCount":39705,"Comments":["/**"," * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is"," * used to construct connections."," *"," * @example"," * var Mongos = require('mongodb-core').Mongos"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new Mongos([{host: 'localhost', port: 30000}]);"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   server.destroy();"," * });"," *"," * // Start connecting"," * server.connect();"," */","","var DISCONNECTED = 'disconnected';","// All bson types","var bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];","// BSON parser","var bsonInstance = null;","// Instance id","var mongosId = 0;","//","// Clone the options","var cloneOptions = function(options) {","  // Internal state","  this.s = {","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","/**"," * Is there a secondary connected"," * @method"," * @return {boolean}"," */","State.prototype.resetDescription = function() {","    // Generate description","    var description = {","    // Add all the secondaries","    description.servers = description.servers.concat(state.connectedServers.map(function(x) {","    // Create the result","    var result = {","    // Emit the topologyDescription change","    self.emit('topologyDescriptionChanged', result);","    // Set the new description","    state.topologyDescription = description;","//","// A Mongos connected","State.prototype.connected = function(server) {","  // Locate in disconnected servers and remove","  this.s.disconnectedServers = this.s.disconnectedServers.filter(function(s) {","  // Check if the server exists","  this.s.connectedServers.forEach(function(s) {","  // Add to disconnected list if it does not already exist","  if(!found) this.s.connectedServers.push(server);","  // Adjust lower bound","  if(this.s.lowerBoundLatency \u003e server.s.isMasterLatencyMS) {","//","// A Mongos disconnected","State.prototype.disconnected = function(server) {","  // Locate in disconnected servers and remove","  this.s.connectedServers = this.s.connectedServers.filter(function(s) {","  // Check if the server exists","  this.s.disconnectedServers.forEach(function(s) {","  // Add to disconnected list if it does not already exist","  if(!found) this.s.disconnectedServers.push(server);","//","// Return the list of disconnected servers","State.prototype.disconnectedServers = function() {","//","// Get connectedServers","State.prototype.connectedServers = function() {","//","// Get all servers","State.prototype.getAll = function() {","//","// Get all connections","State.prototype.getAllConnections = function() {","//","// Unref the state","State.prototype.unref = function() {","  // Unref all the servers","  for(var i = 0; i \u003c this.s.connectedServers.length; i++) {","    // Get each of the servers","    var server = this.s.connectedServers[i];","    // Remove any non used handlers","    ['error', 'close', 'timeout', 'connect'].forEach(function(e) {","    // Unreference the server","    server.unref();","//","// Destroy the state","State.prototype.destroy = function() {","  // Destroy any connected servers","  while(this.s.connectedServers.length \u003e 0) {","    // Remove any non used handlers","    ['error', 'close', 'timeout', 'connect'].forEach(function(e) {","    // Server destroy","    server.destroy();","    // Add to list of disconnected servers","    this.s.disconnectedServers.push(server);","  // All connected servers","  var servers = self.s.connectedServers.slice(0);","  // Do we have a custom readPreference strategy, use it","  if(self.s.readPreferenceStrategies != null \u0026\u0026 self.s.readPreferenceStrategies[readPreference] != null) {","    // Return the server if one is found","    return !server ? [] : [server];","  // Filter out the possible servers","  servers = self.s.connectedServers.filter(function(server) {","  // If no servers found return the lowest latency proxy","  if(servers.length == 0 \u0026\u0026 self.s.connectedServers.length \u003e 0) {","    // Return the lowest latency server if none is found","    return [servers[0]];","  // Return all the servers found","  return servers;","//","// Are we connected","State.prototype.isConnected = function(options) {","  // Get all the servers","  var servers = pickProxies(this, options);","  // Return if the server is connected","  return servers.length \u003e 0 ? true : false;","//","// Pick a server","State.prototype.pickServer = function(readPreference) {","  // Get all the servers","  var servers = pickProxies(this, {readPreference:readPreference});","  // No valid connections","  if(servers.length == 0) throw new MongoError(\"no mongos proxy available\");","  // Update index","  this.s.index = (this.s.index + 1) % servers.length;","  // Pick first one","  return servers[this.s.index];","/**"," * Creates a new Mongos instance"," * @class"," * @param {array} seedlist A list of seeds for the replicaset"," * @param {number} [options.reconnectTries=30] Reconnect retries for HA if no servers available"," * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry"," * @param {boolean} [options.emitError=false] Server will emit errors events"," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @return {Mongos} A cursor instance"," * @fires Mongos#connect"," * @fires Mongos#joined"," * @fires Mongos#left"," */","var Mongos = function(seedlist, options) {","  // Add event listener","  EventEmitter.call(this);","  // Validate seedlist","  if(!Array.isArray(seedlist)) throw new MongoError(\"seedlist must be an array\");","  // Validate list","  if(seedlist.length == 0) throw new MongoError(\"seedlist must contain at least one entry\");","  // Validate entries","  seedlist.forEach(function(e) {","  // BSON Parser, ensure we have a single instance","  bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;","  // Pick the right bson parser","  var bson = options.bson ? options.bson : bsonInstance;","  // Add bson parser to options","  options.bson = bson;","  // The Mongos state","  this.s = {","    // Seed list for sharding passed in","      seedlist: seedlist","    // Passed in options","    , options: options","    // Logger","    , logger: Logger('Mongos', options)","    // Reconnect tries","    , reconnectTries: options.reconnectTries || 30","    // Ha interval","    , haInterval: options.haInterval || 5000","    // localThresholdMS","    , localThresholdMS: options.localThresholdMS || 15","    // Have omitted fullsetup","    , fullsetup: false","    // Cursor factory","    , Cursor: options.cursorFactory || BasicCursor","    // Current credentials used for auth","    , credentials: []","    // BSON Parser","    , bsonInstance: bsonInstance","    // Pings","    , pings: {}","    // Default state","    , state: DISCONNECTED","    // Swallow or emit errors","    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false","    // Contains any alternate strategies for picking","    , readPreferenceStrategies: {}","    // Auth providers","    , authProviders: {}","    // Unique instance id","    , id: mongosId++","    // Authentication in progress","    , authInProgress: false","    // Servers added while auth in progress","    , authInProgressServers: []","    // Current retries left","    , retriesLeft: options.reconnectTries || 30","    // Do we have a not connected handler","    , disconnectHandler: options.disconnectHandler","  // Set up the connection timeout for the options","  options.connectionTimeout = options.connectionTimeout || 1000;","  // Create a new state for the mongos","  this.s.mongosState = new State(this.s.readPreferenceStrategies, this.s.localThresholdMS);","  // Add the authentication mechanisms","  this.addAuthProvider('mongocr', new MongoCR());","  // BSON property (find a server and pass it along)","  Object.defineProperty(this, 'bson', {","/**"," * Name of BSON parser currently used"," * @method"," * @return {string}"," */","Mongos.prototype.parserType = function() {","/**"," * Execute a command"," * @method"," * @param {string} type Type of BSON parser to use (c++ or js)"," */","Mongos.prototype.setBSONParserType = function(type) {","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","Mongos.prototype.lastIsMaster = function() {","/**"," * Initiate server connect"," * @method"," */","Mongos.prototype.connect = function(_options) {","  // Start replicaset inquiry process","  setTimeout(mongosInquirer(self, self.s), self.s.haInterval);","  // Additional options","  if(_options) for(var name in _options) self.s.options[name] = _options[name];","  // For all entries in the seedlist build a server instance","  self.s.seedlist.forEach(function(e) {","    // Clone options","    var opts = cloneOptions(self.s.options);","    // Add host and port","    opts.host = e.host;","    // Share the auth store","    opts.authProviders = self.s.authProviders;","    // Don't emit errors","    opts.emitError = true;","    // Set that server is in a topology","    opts.inTopology = true;","    // Create a new Server","    self.s.mongosState.disconnected(new Server(opts));","  // Reset the replState","  this.s.mongosState.resetDescription();","  // Emit the topology opening event","  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.s.id });","  // Get the disconnected servers","  var servers = self.s.mongosState.disconnectedServers();","  // Set connecting state","  this.s.state = CONNECTING;","  // Attempt to connect to all the servers","  while(servers.length \u003e 0) {","    // Get the server","    var server = servers.shift();","    // Remove any non used handlers","    ['error', 'close', 'timeout', 'connect', 'message', 'parseError',","    // Set up the event handlers","    server.once('error', errorHandlerTemp(self, self.s, server));","    // SDAM Monitoring events","    server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","    // Execute the connect","    var execute = function(_server) {","    // Connect","    execute(server);","/**"," * Unref all connections belong to this server"," * @method"," */","Mongos.prototype.unref = function(emitClose) {","  // Emit close","  if(emitClose \u0026\u0026 this.listeners('close').length \u003e 0) this.emit('close', this);","  // Unref sockets","  this.s.mongosState.unref();","/**"," * Destroy the server connection"," * @method"," */","Mongos.prototype.destroy = function(emitClose) {","  // Emit toplogy closing event","  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.s.id });","  // Emit close","  if(emitClose \u0026\u0026 self.listeners('close').length \u003e 0) self.emit('close', self);","  // Destroy the state","  this.s.mongosState.destroy();","/**"," * Figure out if the server is connected"," * @method"," * @return {boolean}"," */","Mongos.prototype.isConnected = function(options) {","/**"," * Figure out if the server instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","Mongos.prototype.isDestroyed = function() {","//","// Operations","//","","/**","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.insert = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.update = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.remove = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Connection} [options.connection] Specify connection object to execute command against"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.command = function(ns, cmd, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() \u0026\u0026 self.s.disconnectHandler != null) {","  // Ensure we have no options","  options = options || {};","  // We need to execute the command on all servers","  if(options.onAll) {","        // Finished executing command","        if(count == 0) {","          // Was it a logout command clear any credentials","          if(cmd.logout) clearCredentials(self.s, ns);","          // Return the error","          callback(err, r);","    // Get a primary","    server = self.s.mongosState.pickServer(options.writeConcern ? ReadPreference.primary : options.readPreference);","  // No server returned we had an error","  if(server == null) return callback(new MongoError(\"no mongos found\"));","    // Was it a logout command clear any credentials","    if(cmd.logout) clearCredentials(self.s, ns);","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.cursor = function(ns, cmd, cursorOptions) {","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","Mongos.prototype.auth = function(mechanism, db) {","  // If we don't have the mechanism fail","  if(this.s.authProviders[mechanism] == null \u0026\u0026 mechanism != 'default')","  // Authenticate against all the servers","  var servers = this.s.mongosState.connectedServers().slice(0);","  // Correct authentication","  var authenticated = true;","  // Set auth in progress","  this.s.authInProgress = true;","  // Authenticate against all servers","  while(servers.length \u003e 0) {","    // Arguments without a callback","    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));","    // Create arguments","    var finalArguments = argsWithoutCallback.concat([function(err, r) {","      // We are done","      if(count == 0) {","        // We have more servers that are not authenticated, let's authenticate","        if(self.s.authInProgressServers.length \u003e 0) {","        // Auth is done","        self.s.authInProgress = false;","        // Add successful credentials","        if(authErr == null) addCredentials(self.s, db, argsWithoutCallback);","        // Return the auth error","        if(authErr) return callback(authErr, false);","        // Successfully authenticated session","        callback(null, new Session({}, self));","    // Execute the auth","    server.auth.apply(server, finalArguments);","//","// Plugin methods","//","","/**","/**"," * Add custom read preference strategy"," * @method"," * @param {string} name Name of the read preference strategy"," * @param {object} strategy Strategy object instance"," */","Mongos.prototype.addReadPreferenceStrategy = function(name, strategy) {","/**"," * Add custom authentication mechanism"," * @method"," * @param {string} name Name of the authentication mechanism"," * @param {object} provider Authentication object instance"," */","Mongos.prototype.addAuthProvider = function(name, provider) {","/**"," * Get connection"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Connection}"," */","Mongos.prototype.getConnection = function(options) {","  // Ensure we have no options","  options = options || {};","  // Pick the right server based on readPreference","  var server = this.s.mongosState.pickServer(options.readPreference);","  // Return connection","  return server.getConnection();","/**"," * Get server"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Server}"," */","Mongos.prototype.getServer = function(options) {","  // Ensure we have no options","  options = options || {};","  // Pick the right server based on readPreference","  return this.s.mongosState.pickServer(options.readPreference);","/**"," * Get correct server for a given connection"," * @method"," * @param {Connection} [connection] A Connection showing a current server"," * @return {Server}"," */","Mongos.prototype.getServerFrom = function(connection) {","  // Go through all the server","  for(var i = 0; i \u003c servers.length; i++) {","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","Mongos.prototype.connections = function() {","//","// Inquires about state changes","//","var mongosInquirer = function(self, state) {","    // If we have a disconnected site","    if(state.state == DISCONNECTED \u0026\u0026 state.retriesLeft == 0) {","    // If we have a primary and a disconnect handler, execute","    // buffered operations","    if(state.mongosState.isConnected() \u0026\u0026 state.disconnectHandler) {","    // Log the information","    if(state.logger.isDebug()) state.logger.debug(f('mongos ha proceess running'));","    // Let's query any disconnected proxies","    var disconnectedServers = state.mongosState.disconnectedServers();","    // Count of connections waiting to be connected","    var connectionCount = disconnectedServers.length;","    // Let's attempt to reconnect","    while(disconnectedServers.length \u003e 0) {","      // Connect to proxy","      var connectToProxy = function(_server) {","          // Remove any non used handlers","          ['error', 'close', 'timeout', 'connect', 'message', 'parseError',","          // Set up the event handlers","          _server.once('error', errorHandlerTemp(self, state, server));","          // SDAM Monitoring events","          _server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","          // Start connect","          _server.connect();","    // Let's keep monitoring but wait for possible timeout to happen","    return setTimeout(mongosInquirer(self, state), state.options.connectionTimeout + state.haInterval);","//","// Error handler for initial connect","var errorHandlerTemp = function(self, state, server) {","    // Log the information","    if(state.logger.isInfo()) state.logger.info(f('server %s disconnected with error %s',  server.name, JSON.stringify(err)));","    // Signal disconnect of server","    state.mongosState.disconnected(server);","    // Remove any non used handlers","    var events = ['error', 'close', 'timeout', 'connect'];","//","// Handlers","var errorHandler = function(self, state) {","    // No more servers left emit close","    if(state.mongosState.connectedServers().length == 0) {","    // Emit topology changed event","    emitTopologyDescriptionChanged(self, state.mongosState);","    // Signal server left","    self.emit('left', 'mongos', server);","    // No more servers emit close event if no entries left","    if(state.mongosState.connectedServers().length == 0) {","    // Emit topology changed event","    emitTopologyDescriptionChanged(self, state.mongosState);","    // Signal server left","    self.emit('left', 'mongos', server);","    // No more servers left emit close","    if(state.mongosState.connectedServers().length == 0) {","    // Emit topology changed event","    emitTopologyDescriptionChanged(self, state.mongosState);","    // Signal server left","    self.emit('left', 'mongos', server);","// Connect handler","var connectHandler = function(self, state, e) {","    // Remove any non used handlers","    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) {","    // finish processing the server","    var processNewServer = function(_server) {","      // Add the server handling code","      if(_server.isConnected()) {","      // Emit joined event","      self.emit('joined', 'mongos', _server);","      // Add to list connected servers","      state.mongosState.connected(_server);","      // Do we have a reconnect event","      if('ha' == e \u0026\u0026 state.mongosState.connectedServers().length == 1) {","      // Full setup","      if(state.mongosState.disconnectedServers().length == 0 \u0026\u0026","      // all connected","      if(state.mongosState.disconnectedServers().length == 0 \u0026\u0026","      // Emit topology changed event","      emitTopologyDescriptionChanged(self, state.mongosState);","      // Set connected","      if(state.state == DISCONNECTED) {","    // Is there an authentication process ongoing","    if(state.authInProgress) {","    // No credentials just process server","    if(state.credentials.length == 0) return processNewServer(server);","    // Do we have credentials, let's apply them all","    var count = state.credentials.length;","    // Apply the credentials","    for(var i = 0; i \u003c state.credentials.length; i++) {","//","// Add server to the list if it does not exist","var addToListIfNotExist = function(list, server) {","  // Remove any non used handlers","  ['error', 'close', 'timeout', 'connect'].forEach(function(e) {","  // Check if the server already exists","  for(var i = 0; i \u003c list.length; i++) {","// Add the new credential for a db, removing the old","// credential from the cache","var addCredentials = function(state, db, argsWithoutCallback) {","  // Remove any credentials for the db","  clearCredentials(state, db + \".dummy\");","  // Add new credentials to list","  state.credentials.push(argsWithoutCallback);","// Clear out credentials for a namespace","var clearCredentials = function(state, ns) {","  // Filter out all credentials for the db the user is logging out off","  for(var i = 0; i \u003c state.credentials.length; i++) {","  // Set new list of credentials","  state.credentials = filteredCredentials;","  // No read preference specified","  if(options.readPreference == null) return cmd;","//","// Execute write operation","var executeWriteOperation = function(state, op, ns, ops, options, callback) {","  // Ensure we have no options","  options = options || {};","    // Get a primary","    server = state.mongosState.pickServer();","  // No server returned we had an error","  if(server == null) return callback(new MongoError(\"no mongos found\"));","  // Execute the command","  server[op](ns, ops, options, callback);","/**"," * A mongos connect event, used to verify that the connection is up and running"," *"," * @event Mongos#connect"," * @type {Mongos}"," */","","/**"," * A server member left the mongos list"," *"," * @event Mongos#left"," * @type {Mongos}"," * @param {string} type The type of member that left (mongos)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the mongos list"," *"," * @event Mongos#joined"," * @type {Mongos}"," * @param {string} type The type of member that left (mongos)"," * @param {Server} server The server object that joined"," */","","module.exports = Mongos;"],"Functions":[" * server.on('connect', function(server) ","var cloneOptions = function(options) ","var State = function(readPreferenceStrategies, localThresholdMS) ","function emitSDAMEvent(self, event, description) ","State.prototype.resetDescription = function() ","function emitTopologyDescriptionChanged(self, state) ","    description.servers = description.servers.concat(state.connectedServers.map(function(x) ","    description.servers = description.servers.concat(state.disconnectedServers.map(function(x) ","State.prototype.connected = function(server) ","  this.s.disconnectedServers = this.s.disconnectedServers.filter(function(s) ","  this.s.connectedServers.forEach(function(s) ","State.prototype.disconnected = function(server) ","  this.s.connectedServers = this.s.connectedServers.filter(function(s) ","  this.s.disconnectedServers.forEach(function(s) ","State.prototype.disconnectedServers = function() ","State.prototype.connectedServers = function() ","State.prototype.getAll = function() ","State.prototype.getAllConnections = function() ","  this.s.connectedServers.forEach(function(e) ","State.prototype.unref = function() ","    ['error', 'close', 'timeout', 'connect'].forEach(function(e) ","State.prototype.destroy = function() ","    ['error', 'close', 'timeout', 'connect'].forEach(function(e) ","var pickProxies = function(self, options) ","  servers = self.s.connectedServers.filter(function(server) ","    servers = self.s.connectedServers.sort(function(server1, server2) ","State.prototype.isConnected = function(options) ","State.prototype.pickServer = function(readPreference) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Mongos = function(seedlist, options) ","  seedlist.forEach(function(e) ","    enumerable: true, get: function() ","    enumerable:true, get: function()  return self.s.id; }","    enumerable:true, get: function()  return 'mongos'; }","    enumerable:true, get: function()  return self.s.haInterval; }","    enumerable:true, get: function()  return self.s.mongosState; }","Mongos.prototype.parserType = function() ","Mongos.prototype.setBSONParserType = function(type) ","Mongos.prototype.lastIsMaster = function() ","Mongos.prototype.connect = function(_options) ","  self.s.seedlist.forEach(function(e) ","      'serverHeartbeatSucceeded', 'serverHearbeatFailed', 'serverClosed'].forEach(function(e) ","    server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","    server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","    server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","    server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","    server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","    server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","    var execute = function(_server) ","      process.nextTick(function() ","Mongos.prototype.unref = function(emitClose) ","Mongos.prototype.destroy = function(emitClose) ","Mongos.prototype.isConnected = function(options) ","Mongos.prototype.isDestroyed = function() "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Mongos.prototype.insert = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Mongos.prototype.update = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Mongos.prototype.remove = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Mongos.prototype.command = function(ns, cmd, options, callback) ","  if(typeof options == 'function') callback = options, options = };","      servers[i].command(ns, cmd, options, function(err, r) ","  server.command(ns, cmd, options, function(err, r) "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Mongos.prototype.cursor = function(ns, cmd, cursorOptions) "," * @param authResultCallback} callback A callback function","Mongos.prototype.auth = function(mechanism, db) ","    var finalArguments = argsWithoutCallback.concat([function(err, r) ","Mongos.prototype.addReadPreferenceStrategy = function(name, strategy) ","Mongos.prototype.addAuthProvider = function(name, provider) ","Mongos.prototype.getConnection = function(options) ","Mongos.prototype.getServer = function(options) ","Mongos.prototype.getServerFrom = function(connection) ","Mongos.prototype.connections = function() ","var mongosInquirer = function(self, state) ","  return function() ","      var connectToProxy = function(_server) ","        setTimeout(function() ","            'serverHeartbeatSucceeded', 'serverHearbeatFailed', 'serverClosed'].forEach(function(e) ","          _server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","          _server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","          _server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","          _server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","          _server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","          _server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","var errorHandlerTemp = function(self, state, server) ","  return function(err, server) ","    events.forEach(function(e) ","var errorHandler = function(self, state) ","  return function(err, server) ","var timeoutHandler = function(self, state) ","  return function(err, server) ","var closeHandler = function(self, state) ","  return function(err, server) ","var connectHandler = function(self, state, e) ","  return function(server) ","    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) ","    var processNewServer = function(_server) ","      server.auth.apply(server, state.credentials[i].concat([function(err, r) ","var addToListIfNotExist = function(list, server) ","  ['error', 'close', 'timeout', 'connect'].forEach(function(e) ","var addCredentials = function(state, db, argsWithoutCallback) ","var clearCredentials = function(state, ns) ","var processReadPreference = function(cmd, options) ","var executeWriteOperation = function(state, op, ns, ops, options, callback) ","  if(typeof options == 'function') "],"Dependencies":["util","util","bson","../connection/utils","events","../cursor","bson","../cursor","./server","../auth/mongocr","../auth/x509","../auth/plain","../auth/gssapi","../auth/sspi","../auth/scram","../connection/logger","./read_preference","./session","../error","mongodb-core","mongodb-core","assert","bson","bson"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\read_preference.js","LineCount":106,"CharCount":2795,"Comments":["/**"," * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is"," * used to construct connections."," * "," * @example"," * var ReplSet = require('mongodb-core').ReplSet"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," * "," * var server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   var cursor = server.cursor('db.test'"," *     , {find: 'db.test', query: {}}"," *     , {readPreference: new ReadPreference('secondary')});"," *   cursor.next(function(err, doc) {"," *     server.destroy();"," *   });"," * });"," * "," * // Start connecting"," * server.connect();"," */","","/**"," * Creates a new Pool instance"," * @class"," * @param {string} preference A string describing the preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)"," * @param {object} tags The tags object"," * @param {object} [options] Additional read preference options"," * @property {string} preference The preference string (primary|primaryPreferred|secondary|secondaryPreferred|nearest)"," * @property {object} tags The tags object"," * @property {object} options Additional read preference options"," * @return {ReadPreference}"," */","var ReadPreference = function(preference, tags, options) {","/**"," * This needs slaveOk bit set"," * @method"," * @return {boolean}"," */","ReadPreference.prototype.slaveOk = function() {","/**"," * Are the two read preference equal"," * @method"," * @return {boolean}"," */","ReadPreference.prototype.equals = function(readPreference) {","/**"," * Return JSON representation"," * @method"," * @return {Object}"," */","ReadPreference.prototype.toJSON = function() {","/**"," * Primary read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.primary = new ReadPreference('primary');","/**"," * Primary Preferred read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');","/**"," * Secondary read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.secondary = new ReadPreference('secondary');","/**"," * Secondary Preferred read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');","/**"," * Nearest read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.nearest = new ReadPreference('nearest');"],"Functions":[" * server.on('connect', function(server) "," *   cursor.next(function(err, doc) ","var ReadPreference = function(preference, tags, options) ","ReadPreference.prototype.slaveOk = function() ","ReadPreference.prototype.equals = function(readPreference) ","ReadPreference.prototype.toJSON = function() "],"Dependencies":["mongodb-core","mongodb-core","assert"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\replset.js","LineCount":1744,"CharCount":60561,"Comments":["/**"," * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is"," * used to construct connecctions."," *"," * @example"," * var ReplSet = require('mongodb-core').ReplSet"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   server.destroy();"," * });"," *"," * // Start connecting"," * server.connect();"," */","","var DISCONNECTED = 'disconnected';","//","// ReplSet instance id","var replSetId = 1;","//","// Clone the options","var cloneOptions = function(options) {","// All bson types","var bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];","// BSON parser","var bsonInstance = null;","/**"," * Creates a new Replset instance"," * @class"," * @param {array} seedlist A list of seeds for the replicaset"," * @param {boolean} options.setName The Replicaset set name"," * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset"," * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry"," * @param {boolean} [options.emitError=false] Server will emit errors events"," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers"," * @param {number} [options.acceptableLatency=250] Acceptable latency for selecting a server for reading (in milliseconds)"," * @return {ReplSet} A cursor instance"," * @fires ReplSet#connect"," * @fires ReplSet#ha"," * @fires ReplSet#joined"," * @fires ReplSet#left"," */","var ReplSet = function(seedlist, options) {","  // Clone the options","  options = cloneOptions(options);","  // Validate seedlist","  if(!Array.isArray(seedlist)) throw new MongoError(\"seedlist must be an array\");","  // Validate list","  if(seedlist.length == 0) throw new MongoError(\"seedlist must contain at least one entry\");","  // Validate entries","  seedlist.forEach(function(e) {","  // Add event listener","  EventEmitter.call(this);","  // Set the bson instance","  bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;","  // Internal state hash for the object","  this.s = {","    // Logger instance","    , logger: Logger('ReplSet', options)","    // Uniquely identify the replicaset instance","    , id: replSetId++","    // Index","    , index: 0","    // Ha Index","    , haId: 0","    // Current credentials used for auth","    , credentials: []","    // Factory overrides","    , Cursor: options.cursorFactory || BasicCursor","    // BSON Parser, ensure we have a single instance","    , bsonInstance: bsonInstance","    // Pick the right bson parser","    , bson: options.bson ? options.bson : bsonInstance","    // Special replicaset options","    , secondaryOnlyConnectionAllowed: typeof options.secondaryOnlyConnectionAllowed == 'boolean'","    // Current haInterval","    , currentHaInterval: options.haInterval || 10000","    // Are we running in debug mode","    , debug: typeof options.debug == 'boolean' ? options.debug : false","    // The replicaset name","    , setName: options.setName","    // Swallow or emit errors","    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false","    // Grouping tag used for debugging purposes","    , tag: options.tag","    // Do we have a not connected handler","    , disconnectHandler: options.disconnectHandler","    // Contains any alternate strategies for picking","    , readPreferenceStrategies: {}","    // Auth providers","    , authProviders: {}","    // All the servers","    , disconnectedServers: []","    // Initial connection servers","    , initialConnectionServers: []","    // High availability process running","    , highAvailabilityProcessRunning: false","    // Full setup","    , fullsetup: false","    // All servers accounted for (used for testing)","    , all: false","    // Seedlist","    , seedlist: seedlist","    // Authentication in progress","    , authInProgress: false","    // Servers added while auth in progress","    , authInProgressServers: []","    // Minimum heartbeat frequency used if we detect a server close","    , minHeartbeatFrequencyMS: 500","    // stores high availability timer to allow efficient destroy","    , haTimer : null","  // Add bson parser to options","  options.bson = this.s.bson;","  // Set up the connection timeout for the options","  options.connectionTimeout = options.connectionTimeout || 10000;","  // Replicaset state","  var replState = new State(this, {","    // , connectingServers: this.s.connectingServers","    , secondaryOnlyConnectionAllowed: this.s.secondaryOnlyConnectionAllowed","  // Add Replicaset state to our internal state","  this.s.replState = replState;","  // Add the authentication mechanisms","  this.addAuthProvider('mongocr', new MongoCR());","  // BSON property (find a server and pass it along)","  Object.defineProperty(this, 'bson', {","  //","  // Debug options","  if(self.s.debug) {","    // Add access to the read Preference Strategies","    Object.defineProperty(this, 'readPreferenceStrategies', {","  // Add the ping strategy for nearest","  this.addReadPreferenceStrategy('nearest', new Ping(options));","//","// Plugin methods","//","","/**","/**"," * Add custom read preference strategy"," * @method"," * @param {string} name Name of the read preference strategy"," * @param {object} strategy Strategy object instance"," */","ReplSet.prototype.addReadPreferenceStrategy = function(name, func) {","/**"," * Add custom authentication mechanism"," * @method"," * @param {string} name Name of the authentication mechanism"," * @param {object} provider Authentication object instance"," */","ReplSet.prototype.addAuthProvider = function(name, provider) {","/**"," * Name of BSON parser currently used"," * @method"," * @return {string}"," */","ReplSet.prototype.parserType = function() {","/**"," * Execute a command"," * @method"," * @param {string} type Type of BSON parser to use (c++ or js)"," */","ReplSet.prototype.setBSONParserType = function(type) {","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","ReplSet.prototype.lastIsMaster = function() {","/**"," * Get connection"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Connection}"," */","ReplSet.prototype.getConnection = function(options) {","  // Ensure we have no options","  options = options || {};","  // Pick the right server based on readPreference","  var server = pickServer(this, this.s, options.readPreference);","  // Return connection","  return server.getConnection();","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","ReplSet.prototype.connections = function() {","/**"," * Get server"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Server}"," */","ReplSet.prototype.getServer = function(options) {","  // Ensure we have no options","  options = options || {};","  // Pick the right server based on readPreference","  return pickServer(this, this.s, options.readPreference);","/**"," * Get correct server for a given connection"," * @method"," * @param {Connection} [connection] A Connection showing a current server"," * @return {Server}"," */","ReplSet.prototype.getServerFrom = function(connection) {","  // Go through all the server","  for(var i = 0; i \u003c servers.length; i++) {","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.cursor = function(ns, cmd, cursorOptions) {","//","// Execute write operation","var executeWriteOperation = function(self, op, ns, ops, options, callback) {","  // Ensure we have no options","  options = options || {};","  // Get a primary","  try {","  // No server returned we had an error","  if(server == null) return callback(new MongoError(\"no server found\"));","  // Handler","  var handler = function(err, r) {","    // We have a no master error, immediately refresh the view of the replicaset","    if((notMasterError(r) || notMasterError(err)) \u0026\u0026 !self.s.highAvailabilityProcessRunning) {","      // Set he current interval to minHeartbeatFrequencyMS","      self.s.currentHaInterval = self.s.minHeartbeatFrequencyMS;","      // Attempt to locate the current master immediately","      replicasetInquirer(self, self.s, true)();","    // Return the result","    callback(err, r);","  // Add operationId if existing","  if(callback.operationId) handler.operationId = callback.operationId;","  // Execute the command","  server[op](ns, ops, options, handler);","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Connection} [options.connection] Specify connection object to execute command against"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.command = function(ns, cmd, options, callback) {","  // Ensure we have no options","  options = options || {};","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected(options) \u0026\u0026 this.s.disconnectHandler != null) {","  // We need to execute the command on all servers","  if(options.onAll) {","        // Finished executing command","        if(count == 0) {","          // Was it a logout command clear any credentials","          if(cmd.logout) clearCredentials(self.s, ns);","          // We have a no master error, immediately refresh the view of the replicaset","          if((notMasterError(r) || notMasterError(err)) \u0026\u0026 !self.s.highAvailabilityProcessRunning) {","          // Return the error","          callback(err, r);","  // Pick the right server based on readPreference","  try {","  // No server returned we had an error","  if(server == null) return callback(new MongoError(\"no server found\"));","  // Execute the command","  server.command(ns, cmd, options, function(err, r) {","    // Was it a logout command clear any credentials","    if(cmd.logout) clearCredentials(self.s, ns);","    // We have a no master error, immediately refresh the view of the replicaset","    if((notMasterError(r) || notMasterError(err)) \u0026\u0026 !self.s.highAvailabilityProcessRunning) {","    // Return the error","    callback(err, r);","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.remove = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.insert = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.update = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!this.isConnected() \u0026\u0026 this.s.disconnectHandler != null) {","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","ReplSet.prototype.auth = function(mechanism, db) {","  // If we don't have the mechanism fail","  if(this.s.authProviders[mechanism] == null \u0026\u0026 mechanism != 'default') {","  // Authenticate against all the servers","  var servers = this.s.replState.getAll().slice(0);","  // Correct authentication","  var authenticated = true;","  // Set auth in progress","  this.s.authInProgress = true;","  // Authenticate against all servers","  while(servers.length \u003e 0) {","    // Arguments without a callback","    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));","    // Create arguments","    var finalArguments = argsWithoutCallback.concat([function(err, r) {","      // We are done","      if(count == 0) {","        // We have more servers that are not authenticated, let's authenticate","        if(self.s.authInProgressServers.length \u003e 0) {","        // Auth is done","        self.s.authInProgress = false;","        // Add successful credentials","        if(authErr == null) addCredentials(self.s, db, argsWithoutCallback);","        // Return the auth error","        if(authErr) return callback(authErr, false);","        // Successfully authenticated session","        callback(null, new Session({}, self));","    // Execute the auth","    server.auth.apply(server, finalArguments);","/**"," * Ensure single socket connections to arbiters and hidden servers"," * @method"," */","var handleIsmaster = function(self) {","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","/**"," * Initiate server connect"," * @method"," */","ReplSet.prototype.connect = function(_options) {","  // Start replicaset inquiry process","  setHaTimer(self, self.s);","  // Additional options","  if(_options) for(var name in _options) this.s.options[name] = _options[name];","  // Set the state as connecting","  this.s.replState.state = CONNECTING;","  // No fullsetup reached","  this.s.fullsetup = false;","  // Reset the replState","  this.s.replState.resetDescription();","  // For all entries in the seedlist build a server instance","  this.s.seedlist.forEach(function(e) {","    // Clone options","    var opts = cloneOptions(self.s.options);","    // Add host and port","    opts.host = e.host;","    // Add a reserved connection for monitoring","    opts.size = opts.size + 1;","    // Server is in topology","    opts.inTopology = true;","    // Set up tags if any","    if(self.s.tag) opts.tag = self.s.tag;","    // Share the auth store","    opts.authProviders = self.s.authProviders;","    // Create a new Server","    var server = new Server(opts);","    // Handle the ismaster","    server.on('ismaster', handleIsmaster(self));","    // Add to list of disconnected servers","    self.s.disconnectedServers.push(server);","    // Add to list of inflight Connections","    self.s.initialConnectionServers.push(server);","  // Emit the topology opening event","  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.s.id });","  // Attempt to connect to all the servers","  while(this.s.disconnectedServers.length \u003e 0) {","    // Get the server","    var server = self.s.disconnectedServers.shift();","    // Ensure the server is properly disconnected","    server.destroy();","    // Set up the event handlers","    server.once('error', errorHandlerTemp(self, self.s, 'error'));","    // SDAM Monitoring events","    server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","    // Ensure we schedule the opening of new socket","    // on separate ticks of the event loop","    var execute = function(_server) {","      // Attempt to connect","      process.nextTick(function() {","/**"," * Figure out if the server is connected"," * @method"," * @return {boolean}"," */","ReplSet.prototype.isConnected = function(options) {","  // If we specified a read preference check if we are connected to something","  // than can satisfy this","  if(options.readPreference","/**"," * Figure out if the replicaset instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","ReplSet.prototype.isDestroyed = function() {","/**"," * Unref all connections belong to this server"," * @method"," */","ReplSet.prototype.unref = function(emitClose) {","  // Emit close","  if(emitClose \u0026\u0026 self.listeners('close').length \u003e 0) self.emit('close', self);","  // Unref sockets","  this.s.replState.unref();","  // Clear out any listeners","  var events = ['timeout', 'error', 'close', 'joined', 'left',","/**"," * Destroy the server connection"," * @method"," */","ReplSet.prototype.destroy = function(emitClose) {","  // Clear the ha timer","  if(self.s.haTimer) clearTimeout(self.s.haTimer);","  // Emit close","  if(emitClose \u0026\u0026 self.listeners('close').length \u003e 0) self.emit('close', self);","  // Destroy state","  this.s.replState.destroy();","  // Emit toplogy closing event","  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.s.id });","  // Clear out any listeners","  var events = ['timeout', 'error', 'close', 'joined', 'left',","/**"," * A replset connect event, used to verify that the connection is up and running"," *"," * @event ReplSet#connect"," * @type {ReplSet}"," */","","/**"," * The replset high availability event"," *"," * @event ReplSet#ha"," * @type {function}"," * @param {string} type The stage in the high availability event (start|end)"," * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only"," * @param {number} data.id The id for this high availability request"," * @param {object} data.state An object containing the information about the current replicaset"," */","","/**"," * A server member left the replicaset"," *"," * @event ReplSet#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the replicaset"," *"," * @event ReplSet#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","//","//","// Inquires about state changes","//","","// Add the new credential for a db, removing the old","// credential from the cache","var addCredentials = function(s, db, argsWithoutCallback) {","  // Remove any credentials for the db","  clearCredentials(s, db + \".dummy\");","  // Add new credentials to list","  s.credentials.push(argsWithoutCallback);","// Clear out credentials for a namespace","var clearCredentials = function(s, ns) {","  // Filter out all credentials for the db the user is logging out off","  for(var i = 0; i \u003c s.credentials.length; i++) {","  // Set new list of credentials","  s.credentials = filteredCredentials;","//","// Filter serves by tags","var filterByTags = function(readPreference, servers) {","  // Iterate over the tags","  for(var j = 0; j \u003c tagsArray.length; j++) {","    // Iterate over all the servers","    for(var i = 0; i \u003c servers.length; i++) {","      // Did we find the a matching server","      var found = true;","      // Check if the server is valid","      for(var name in tags) {","      // Add to candidate list","      if(found) {","    // We found servers by the highest priority","    if(found) break;","  // Returned filtered servers","  return filteredServers;","    // If no more initial servers and new scheduled servers to connect","    if (!state.replState.primary) return;","    // Only emit if there is a listener","    if(self.listeners('fullsetup').length \u003e 0) {","    // If all servers are accounted for and we have not sent the all event","    if (!state.replState.primary) return;","    // If we have all secondaries + primary","    if (length !== self.lastIsMaster().hosts.length) return;","    // Only emit if there is a listener","    if(self.listeners('all').length \u003e 0) {","//","// Pick a server based on readPreference","var pickServer = function(self, s, readPreference) {","  // If no read Preference set to primary by default","  readPreference = readPreference || ReadPreference.primary;","  // Do we have a custom readPreference strategy, use it","  if(s.readPreferenceStrategies != null \u0026\u0026 s.readPreferenceStrategies[readPreference.preference] != null) {","  // Get all the secondaries","  var secondaries = s.replState.getSecondaries();","  // Check if we can satisfy and of the basic read Preferences","  if(readPreference.equals(ReadPreference.secondary)","  // Secondary","  if(readPreference.equals(ReadPreference.secondary)) {","  // Secondary preferred","  if(readPreference.equals(ReadPreference.secondaryPreferred)) {","      // Apply tags if present","      var servers = filterByTags(readPreference, secondaries);","      // If have a matching server pick one otherwise fall through to primary","      if(servers.length \u003e 0) {","  // Primary preferred","  if(readPreference.equals(ReadPreference.primaryPreferred)) {","      // Apply tags if present","      var servers = filterByTags(readPreference, secondaries);","      // If have a matching server pick one otherwise fall through to primary","      if(servers.length \u003e 0) {","      // Throw error a we have not valid secondary or primary servers","      throw new MongoError(\"no secondary or primary server available\");","  // Return the primary","  return s.replState.primary;","  // all haTimers are set to to repeat, so we pass norepeat false","  self.s.haTimer = setTimeout(replicasetInquirer(self, state, false), state.currentHaInterval);","    // Process already running don't rerun","    if(state.highAvailabilityProcessRunning) {","    // State destroyed return","    if(state.replState.state == DESTROYED) {","    // Do we have a primary, ensure we only monitor by the haInterval","    if(state.replState.isPrimaryConnected()) {","    // Clean out any failed connection attempts","    state.replState.clearConnectingServers();","    // Cleanup state (removed disconnected servers)","    state.replState.clean();","    // Started processes","    state.highAvailabilityProcessRunning = true;","    // We have no connections we need to reseed the disconnected list","    if(!haveAvailableServers(state)) {","      // For all entries in the seedlist build a server instance","      state.disconnectedServers = state.seedlist.map(function(e) {","        // Clone options","        var opts = cloneOptions(state.options);","        // Add host and port","        opts.host = e.host;","        // Add a reserved connection for monitoring","        opts.size = opts.size + 1;","        // Server is in topology","        opts.inTopology = true;","        // Set up tags if any","        if(state.tag) opts.tag = state.tag;","        // Share the auth store","        opts.authProviders = state.authProviders;","        // Create a new Server","        var server = new Server(opts);","        // Handle the ismaster","        server.on('ismaster', handleIsmaster(self));","    // Unique HA id to identify the current look running","    var localHaId = state.haId++;","    // Controls if we are doing a single inquiry or repeating","    norepeat = typeof norepeat == 'boolean' ? norepeat : false;","    // If we have a primary and a disconnect handler, execute","    // buffered operations","    if(state.replState.isPrimaryConnected() \u0026\u0026 state.replState.isSecondaryConnected() \u0026\u0026 state.disconnectHandler) {","    // Emit replicasetInquirer","    self.emit('ha', 'start', {norepeat: norepeat, id: localHaId, state: state.replState ? state.replState.toJSON() : {}});","    // Let's process all the disconnected servers","    while(state.disconnectedServers.length \u003e 0) {","      // Get the first disconnected server","      var server = state.disconnectedServers.shift();","      // Set up the event handlers","      server.once('error', errorHandlerTemp(self, state, 'error'));","      // SDAM Monitoring events","      server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      // Ensure we schedule the opening of new socket","      // on separate ticks of the event loop","      var execute = function(_server) {","        // Attempt to connect","        process.nextTick(function() {","    // We need to query all servers","    var servers = state.replState.getAll({includeArbiters:true});","    // If no servers and we are not destroyed keep pinging","    if(servers.length == 0 \u0026\u0026 state.replState.state == CONNECTED) {","      // Emit ha process end","      self.emit('ha', 'end', {norepeat: norepeat, id: localHaId, state: state.replState ? state.replState.toJSON() : {}});","      // Ended highAvailabilityProcessRunning","      state.highAvailabilityProcessRunning = false;","      // Restart ha process","      if(!norepeat) {","    //","    // ismaster for Master server","    var primaryIsMaster = null;","    //","    // Inspect a specific servers ismaster","    var inspectServer = function(server, callback) {","      // Did we get a server","      if(server \u0026\u0026 server.isConnected()) {","        // Execute ismaster","        server.command('admin.$cmd', { ismaster:true }, {monitoring: true}, function(err, r) {","          // If the state was destroyed","          if(state.replState.state == DESTROYED) {","          // Count down the number of servers left","          serversLeft = serversLeft - 1;","          // If we have an error but still outstanding server request return","          if(err \u0026\u0026 serversLeft \u003e 0) {","          // We had an error and have no more servers to inspect, schedule a new check","          if(err \u0026\u0026 serversLeft == 0) {","            // Ended highAvailabilityProcessRunning","            state.highAvailabilityProcessRunning = false;","            // Return the replicasetInquirer","            return callback();","          // Let all the read Preferences do things to the servers","          var rPreferencesCount = Object.keys(state.readPreferenceStrategies).length;","          // Handle the primary","          var ismaster = r.result;","          // Update server instance ismaster to ensure proper sync","          // when producing SDAM monitoring events","          server.s.ismaster = ismaster;","          // Update the replicaset state","          if(!state.replState.update(ismaster, server) \u0026\u0026 !state.replState.contains(server)) {","            // Destroy the instance","            server.destroy();","            // Return","            return callback();","          //","          // Process hosts list from ismaster under two conditions","          // 1. Ismaster result is from primary","          // 2. There is no primary and the ismaster result is from a non-primary","          if(err == null","            // Hosts to process","            var hosts = ismaster.hosts;","            // Add arbiters to list of hosts if we have any","            if(Array.isArray(ismaster.arbiters)) {","            // Process all the hsots","            processHosts(self, state, hosts);","            // Destroy the instance","            server.destroy();","            // Return","            return callback();","          // No read Preferences strategies","          if(rPreferencesCount == 0) {","            // Don't schedule a new inquiry","            if(serversLeft \u003e 0) {","            // Emit ha process end","            self.emit('ha', 'end', {norepeat: norepeat, id: localHaId, state: state.replState ? state.replState.toJSON() : {}});","            // Ended highAvailabilityProcessRunning","            state.highAvailabilityProcessRunning = false;","          // No servers left to query, execute read preference strategies","          if(serversLeft == 0) {","            // Go over all the read preferences","            for(var name in state.readPreferenceStrategies) {","                  // Add any new servers in primary ismaster","                  if(err == null","                  // Emit ha process end","                  self.emit('ha', 'end', {norepeat: norepeat, id: localHaId, state: state.replState ? state.replState.toJSON() : {}});","                  // Ended highAvailabilityProcessRunning","                  state.highAvailabilityProcessRunning = false;","    // Go over all the servers","    if(servers.length == 0) {","      // Set the high availability","      state.highAvailabilityProcessRunning = false;","      // Check if we need to emit a fullsetup event","      checkAndEmitEvent(self, state, 'fullsetup');","      // Check if we need to emit the all event","      checkAndEmitEvent(self, state, 'all');","      // Repeat the process","      if(!norepeat) {","    // Ge the number of servers left","    var left = servers.length;","    // Call ismaster on all servers","    for(var i = 0; i \u003c servers.length; i++) {","          // Set the high availability","          state.highAvailabilityProcessRunning = false;","          // Check if we need to emit a fullsetup event","          checkAndEmitEvent(self, state, 'fullsetup');","          // Check if we need to emit the all event","          checkAndEmitEvent(self, state, 'all');","          // Repeat the process","          if(!norepeat) {","// Error handler for initial connect","var errorHandlerTemp = function(self, state, event) {","    // Destroy the server","    server.destroy();","    // Log the information","    if(state.logger.isInfo()) state.logger.info(f('[%s] server %s disconnected', state.id, server.lastIsMaster() ? server.lastIsMaster().me : server.name));","    // Filter out any connection servers","    state.initialConnectionServers = state.initialConnectionServers.filter(function(_server) {","    // Remove from list of connected servers","    state.replState.removeConnectingServer(server.name);","    // Connection is destroyed, ignore","    if(state.replState.state == DESTROYED) return;","    // Remove any non used handlers","    ['error', 'close', 'timeout', 'connect',","    // Push to list of disconnected servers","    addToListIfNotExist(state.disconnectedServers, server);","    // End connection operation if we have no legal replicaset state","    if(state.initialConnectionServers == 0 \u0026\u0026 state.replState.state == CONNECTING) {","    // If the number of disconnected servers is equal to","    // the number of seed servers we cannot connect","    if(state.disconnectedServers.length == state.seedlist.length \u0026\u0026 state.replState.state == CONNECTING) {","// Connect handler","var connectHandler = function(self, state) {","    // Destroyed connection","    if(state.replState.state == DESTROYED) {","    // Filter out any connection servers","    state.initialConnectionServers = state.initialConnectionServers.filter(function(_server) {","    // Process the new server","    var processNewServer = function() {","      // Discover any additional servers","      var ismaster = server.lastIsMaster();","      // Deal with events","      var events = ['error', 'close', 'timeout', 'connect', 'message',","      // Remove any non used handlers","      events.forEach(function(e) {","      // Clean up","      // delete state.connectingServers[server.name];","      state.replState.removeConnectingServer(server.name);","      // Update the replicaset state, destroy if not added","      if(!state.replState.update(ismaster, server) \u0026\u0026 !state.replState.contains(server)) {","        // Destroy the server instance","        server.destroy();","        // No more candiate servers","        if(state.state == CONNECTING \u0026\u0026 state.initialConnectionServers.length == 0","      // Add the server handling code","      if(server.isConnected()) {","        // SDAM Monitoring events","        server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      // Hosts to process","      var hosts = ismaster.hosts;","      // Add arbiters to list of hosts if we have any","      if(Array.isArray(ismaster.arbiters)) {","      // Add any new servers","      processHosts(self, state, hosts);","      // If have the server instance already destroy it","      if(state.initialConnectionServers.length == 0 \u0026\u0026 state.replState.connectingServersCount() == 0","      // Check if we need to emit a fullsetup event","      checkAndEmitEvent(self, state, 'fullsetup');","      // Check if we need to emit the all event","      checkAndEmitEvent(self, state, 'all');","    // Save up new members to be authenticated against","    if(self.s.authInProgress) {","    // No credentials just process server","    if(state.credentials.length == 0) return processNewServer();","    // Apply all the credentials serially","    var applyCredentials = function(server, index, credentials, callback) {","      // Do not apply credentials if we have an arbiter","      if(server.lastIsMaster() \u0026\u0026 server.lastIsMaster().arbiterOnly) return callback();","      // Done applying the credentials return","      if(index \u003e= credentials.length || credentials.length == 0) return callback();","      // Apply the credential","      server.auth.apply(server, credentials[index].concat([function(err, r) {","      // Did not fail the authentication, process the instance","      processNewServer();","//","// Detect if we need to add new servers","var processHosts = function(self, state, hosts) {","    // Check any hosts exposed by ismaster","    for(var i = 0; i \u003c hosts.length; i++) {","      // Get the object","      var host = hosts[i];","      // Do we have an arbiter","      if(typeof host == 'object') {","      // If not found we need to create a new connection","      if(!state.replState.contains(host)) {","          // Make sure we know what is trying to connect","          state.replState.addConnectingServer(host, host);","          // Connect the server","          connectToServer(self, state, host.split(':')[0], parseInt(host.split(':')[1], 10), options);","// Connect to a new server","var connectToServer = function(self, state, host, port, options) {","  // Share the auth store","  opts.authProviders = state.authProviders;","  // Server is in topology","  opts.inTopology = true;","  // Set the size to size + 1 and mark monitoring","  opts.size = opts.size + 1;","  // Do we have an arbiter set the poolSize to 1","  if(options.arbiter) {","  // Do not create a new server instance","  if(self.s.replState.state == DESTROYED) return;","  // Create a new server instance","  var server = new Server(opts);","  // Handle the ismaster","  server.on('ismaster', handleIsmaster(self));","  // Set up the event handlers","  server.once('error', errorHandlerTemp(self, state, 'error'));","  // SDAM Monitoring events","  server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","  // Ensure we schedule the opening of new socket","  // on separate ticks of the event loop","  var execute = function(_server) {","    // Attempt to connect","    process.nextTick(function() {","  // Add server as connecting","  state.replState.addConnectingServer(server.name, host);","  // Attempt connection of server","  execute(server);","//","// Add server to the list if it does not exist","var addToListIfNotExist = function(list, server) {","  // If the server is a null value return false","  if(server == null) return found;","  // Remove any non used handlers","  ['error', 'close', 'timeout', 'connect',","  // Check if the server already exists","  for(var i = 0; i \u003c list.length; i++) {","    // Destroy the server","    server.destroy();","    // Remove from list of connected servers","    state.replState.removeConnectingServer(server.name);","    // Check if destroyed the topology","    if(state.replState.state == DESTROYED) return;","    // Destroy the server","    server.destroy();","    // Remove from list of connected servers","    state.replState.removeConnectingServer(server.name);","    // Check if destroyed the topology","    if(state.replState.state == DESTROYED) return;","    // Destroy the server","    server.destroy();","    // Remove from list of connected servers","    state.replState.removeConnectingServer(server.name);","    // Check if destroyed the topology","    if(state.replState.state == DESTROYED) return;","//","// Validate if a non-master or recovering error","var notMasterError = function(r) {","  // Get result of any","  var result = r \u0026\u0026 r.result ? r.result : r;","  // Explore if we have a not master error","  if(result \u0026\u0026 (result.err == 'not master'"],"Functions":[" * server.on('connect', function(server) ","var cloneOptions = function(options) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var ReplSet = function(seedlist, options) ","  seedlist.forEach(function(e) ","    enumerable: true, get: function() ","    enumerable:true, get: function()  return self.s.id; }","    enumerable:true, get: function()  return self.s.haInterval; }","    enumerable:true, get: function()  return self.s.replState; }","      enumerable: true, get: function()  return self.s.readPreferenceStrategies; }","    enumerable:true, get: function()  return 'replset'; }","ReplSet.prototype.addReadPreferenceStrategy = function(name, func) ","ReplSet.prototype.addAuthProvider = function(name, provider) ","ReplSet.prototype.parserType = function() ","ReplSet.prototype.setBSONParserType = function(type) ","ReplSet.prototype.lastIsMaster = function() ","ReplSet.prototype.getConnection = function(options) ","ReplSet.prototype.connections = function() ","ReplSet.prototype.getServer = function(options) ","ReplSet.prototype.getServerFrom = function(connection) "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","ReplSet.prototype.cursor = function(ns, cmd, cursorOptions) ","var executeWriteOperation = function(self, op, ns, ops, options, callback) ","  if(typeof options == 'function') ","  var handler = function(err, r) "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","ReplSet.prototype.command = function(ns, cmd, options, callback) ","  if(typeof options == 'function') callback = options, options = };","      servers[i].command(ns, cmd, options, function(err, r) ","  server.command(ns, cmd, options, function(err, r) "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","ReplSet.prototype.remove = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","ReplSet.prototype.insert = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","ReplSet.prototype.update = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param authResultCallback} callback A callback function","ReplSet.prototype.auth = function(mechanism, db) ","    var finalArguments = argsWithoutCallback.concat([function(err, r) ","ReplSet.prototype.state = function() ","var handleIsmaster = function(self) ","  return function(ismaster, _server) ","function emitSDAMEvent(self, event, description) ","ReplSet.prototype.connect = function(_options) ","  this.s.seedlist.forEach(function(e) ","    server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","    server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","    server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","    server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","    server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","    server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","    var execute = function(_server) ","      process.nextTick(function() ","ReplSet.prototype.isConnected = function(options) ","ReplSet.prototype.isDestroyed = function() ","ReplSet.prototype.unref = function(emitClose) ","  events.forEach(function(e) ","ReplSet.prototype.destroy = function(emitClose) ","  events.forEach(function(e) "," * @type function}"," * @type function}"," * @type function}","var addCredentials = function(s, db, argsWithoutCallback) ","var clearCredentials = function(s, ns) ","var filterByTags = function(readPreference, servers) ","  fullsetup: function(self, state) ","  all: function(self, state) ","var checkAndEmitEvent = function(self, state, event) ","var pickServer = function(self, s, readPreference) ","var setHaTimer = function(self, state) ","var haveAvailableServers = function(state) ","var merge = function(list, newList) ","var replicasetInquirer = function(self, state, norepeat) ","  return function() ","      state.disconnectedServers = state.seedlist.map(function(e) ","      server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","      server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","      server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","      server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","      server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","      server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","      var execute = function(_server) ","        process.nextTick(function() ","    var inspectServer = function(server, callback) ","        server.command('admin.$cmd',  ismaster:true }, {monitoring: true}, function(err, r) {","              hosts = hosts.concat(ismaster.arbiters.map(function(x) ","              state.readPreferenceStrategies[name].ha(self, state.replState, function() ","      inspectServer(servers[i], function() ","var errorHandlerTemp = function(self, state, event) ","  return function(err, server) ","    state.initialConnectionServers = state.initialConnectionServers.filter(function(_server) ","      'serverHeartbeatSucceeded', 'serverHearbeatFailed', 'serverClosed'].forEach(function(e) ","var connectHandler = function(self, state) ","  return function(server) ","    state.initialConnectionServers = state.initialConnectionServers.filter(function(_server) ","    var processNewServer = function() ","      events.forEach(function(e) ","        server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","        server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","        server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","        server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","        server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","        server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","        hosts = hosts.concat(ismaster.arbiters.map(function(x) ","    var applyCredentials = function(server, index, credentials, callback) ","      server.auth.apply(server, credentials[index].concat([function(err, r) ","    applyCredentials(server, 0, state.credentials, function(err) ","var processHosts = function(self, state, hosts) ","var inInitialConnectingServers = function(self, state, address) ","var connectToServer = function(self, state, host, port, options) ","  server.on('serverOpening', function(e)  self.emit('serverOpening', e); });","  server.on('serverDescriptionChanged', function(e)  self.emit('serverDescriptionChanged', e); });","  server.on('serverHeartbeatStarted', function(e)  self.emit('serverHeartbeatStarted', e); });","  server.on('serverHeartbeatSucceeded', function(e)  self.emit('serverHeartbeatSucceeded', e); });","  server.on('serverHearbeatFailed', function(e)  self.emit('serverHearbeatFailed', e); });","  server.on('serverClosed', function(e)  self.emit('serverClosed', e); });","  var execute = function(_server) ","    process.nextTick(function() ","var addToListIfNotExist = function(list, server) ","    'serverHeartbeatSucceeded', 'serverHearbeatFailed', 'serverClosed'].forEach(function(e) ","var errorHandler = function(self, state) ","  return function(err, server) ","var timeoutHandler = function(self, state) ","  return function(err, server) ","var closeHandler = function(self, state) ","  return function(err, server) ","var notMasterError = function(r) "],"Dependencies":["util","util","bson","../connection/utils","../connection/utils","events","./server","./read_preference","../error","./strategies/ping","./session","../cursor","bson","./replset_state","../auth/mongocr","../auth/x509","../auth/plain","../auth/gssapi","../auth/sspi","../auth/scram","../connection/logger","mongodb-core","mongodb-core","assert","bson","bson"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\replset_state.js","LineCount":729,"CharCount":18597,"Comments":["/**"," * Creates a new Replicaset State object"," * @class"," * @property {object} primary Primary property"," * @property {array} secondaries List of secondaries"," * @property {array} arbiters List of arbiters"," * @return {State} A cursor instance"," */","var State = function(replSet, options) {","  // Initial state is disconnected","  this.state = DISCONNECTED;","  // Current electionId","  this.electionId = null;","  // Get a logger instance","  this.logger = Logger('ReplSet', options);","  // Unpacked options","  this.id = options.id;","  // Description of the Replicaset","  this.replicasetDescription = null;","/**"," * Is there a secondary connected"," * @method"," * @return {boolean}"," */","State.prototype.resetDescription = function() {","  // Difference document","  var diff = {","  // Got through all the servers","  for(var i = 0; i \u003c previous.servers.length; i++) {","    // Go through all current servers","    for(var j = 0; j \u003c current.servers.length; j++) {","      // Matching server","      if(prevServer.address === currServer.address) {","        // We had a change in state","        if(prevServer.type != currServer.type) {","  // Return difference","  return diff;","    // Generate description","    var description = {","    // Add the primary to the list","    if(self.isPrimaryConnected()) {","    // Add all the secondaries","    description.servers = description.servers.concat(self.secondaries.map(function(x) {","    // Add all the arbiters","    description.servers = description.servers.concat(self.arbiters.map(function(x) {","    // Add all the passives","    description.servers = description.servers.concat(self.passives.map(function(x) {","    // Create the result","    var result = {","    // Emit the topologyDescription change","    self.replSet.emit('topologyDescriptionChanged', result);","    // Set the new description","    self.replicasetDescription = description;","/**"," * Is there a secondary connected"," * @method"," * @return {boolean}"," */","State.prototype.isSecondaryConnected = function() {","/**"," * Is there a primary connection"," * @method"," * @return {boolean}"," */","State.prototype.isPrimaryConnected = function() {","/**"," * Is the given address the primary"," * @method"," * @param {string} address Server address"," * @return {boolean}"," */","State.prototype.isPrimary = function(address) {","/**"," * Is the given address a secondary"," * @method"," * @param {string} address Server address"," * @return {boolean}"," */","State.prototype.isSecondary = function(address) {","  // Check if the server is a secondary at the moment","  for(var i = 0; i \u003c this.secondaries.length; i++) {","/**"," * Is the given address a secondary"," * @method"," * @param {string} address Server address"," * @return {boolean}"," */","State.prototype.isPassive = function(address) {","  // Check if the server is a secondary at the moment","  for(var i = 0; i \u003c this.passives.length; i++) {","/**"," * Does the replicaset contain this server"," * @method"," * @param {string} address Server address"," * @return {boolean}"," */","State.prototype.contains = function(address) {","/**"," * Return all the valid and non passive secondaries"," * @method"," * @return {Array[Server]}"," */","State.prototype.getSecondaries = function() {","  // Filter out any non connected servers","  this.secondaries = this.secondaries.filter(function(server) {","  // Filter out any hidden secondaries","  return this.secondaries.filter(function(server) {","/**"," * Clean out all dead connections"," * @method"," */","State.prototype.clean = function() {","  // Filter out disconnected servers","  this.secondaries = this.secondaries.filter(function(s) {","  // Filter out disconnected servers","  this.arbiters = this.arbiters.filter(function(s) {","  // Filter out disconnected servers","  this.passives = this.passives.filter(function(s) {","/**"," * Unref state"," * @method"," */","State.prototype.unref = function() {","// Remove listeners","var events = ['timeout', 'error', 'close', 'joined', 'left',","/**"," * Destroy state"," * @method"," */","State.prototype.destroy = function() {","/**"," * Remove server from state"," * @method"," * @param {Server} Server to remove"," * @return {string} Returns type of server removed (primary|secondary)"," */","State.prototype.remove = function(server) {","  // Filter out the server from the arbiters","  this.arbiters = this.arbiters.filter(function(s) {","  // Filter out the server from the passives","  this.passives = this.passives.filter(function(s) {","  // We have removed a passive","  if(this.passives.length \u003c length)  {","    // Ensure we removed it from the list of secondaries as well if it exists","    this.secondaries = this.secondaries.filter(function(s) {","  // Filter out the server from the secondaries","  this.secondaries = this.secondaries.filter(function(s) {","  // Get the isMaster","  var isMaster = server.lastIsMaster();","  // Return primary if the server was primary","  if(isMaster.ismaster \u0026\u0026 isMaster.hosts) return 'primary';","/**"," * Get the server by name"," * @method"," * @param {string} address Server address"," * @return {Server}"," */","State.prototype.get = function(server) {","  // All servers to search","  var servers = this.primary ? [this.primary] : [];","  // Locate the server","  for(var i = 0; i \u003c servers.length; i++) {","/**"," * Get all the servers in the set"," * @method"," * @param {boolean} [options.includeArbiters] Include Arbiters in returned server list"," * @return {array}"," */","State.prototype.getAll = function(options) {","  // Include the arbiters","  if(options.includeArbiters) {","/**"," * All raw connections"," * @method"," * @param {boolean} [options.includeArbiters] Include Arbiters in returned server list"," * @return {array}"," */","State.prototype.getAllConnections = function(options) {","  // Include the arbiters","  if(options.includeArbiters) {","/**"," * Return JSON object"," * @method"," * @return {object}"," */","State.prototype.toJSON = function() {","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","State.prototype.lastIsMaster = function() {","/**"," * Promote server to primary"," * @method"," * @param {Server} server Server we wish to promote"," */","State.prototype.promotePrimary = function(server) {","  // Server does not exist in the state, add it as new primary","  if(currentServer == null) {","  // We found a server, make it primary and remove it from the secondaries","  // Remove the server first","  this.remove(currentServer);","  // Set as primary","  this.primary = currentServer;","  // Check if the server is contained in the list","  for(var i = 0; i \u003c list.length; i++) {","  // Add serer to list","  list.push(server);","  // Return true","  return true;","/**"," * Add server to list of secondaries"," * @method"," * @param {Server} server Server we wish to add"," */","State.prototype.addSecondary = function(server) {","/**"," * Add server to list of arbiters"," * @method"," * @param {Server} server Server we wish to add"," */","State.prototype.addArbiter = function(server) {","/**"," * Add server to list of passives"," * @method"," * @param {Server} server Server we wish to add"," */","State.prototype.addPassive = function(server) {","/**"," * Update the state given a specific ismaster result"," * @method"," * @param {object} ismaster IsMaster result"," * @param {Server} server IsMaster Server source"," */","State.prototype.update = function(ismaster, server) {","  // Perform a cleanup before performing the update","  this.clean();","  // Not in a known connection valid state","  if((!ismaster.ismaster \u0026\u0026 !ismaster.secondary \u0026\u0026 !ismaster.arbiterOnly) || !Array.isArray(ismaster.hosts)) {","    // Remove the state","    var result = self.remove(server);","  // Set the setName if it's not set from the first server","  if(self.setName == null \u0026\u0026 ismaster.setName) {","  // Check if the replicaset name matches the provided one","  if(ismaster.setName \u0026\u0026 self.setName != ismaster.setName) {","  // Log information","  if(self.logger.isInfo()) self.logger.info(f('[%s] updating replicaset state %s', self.id, JSON.stringify(this)));","  // It's a master set it","  if(ismaster.ismaster \u0026\u0026 self.setName == ismaster.setName \u0026\u0026 !self.isPrimary(ismaster.me)) {","    // Check if the electionId is not null","    if(ismaster.electionId instanceof ObjectId \u0026\u0026 self.electionId instanceof ObjectId) {","    // Initial electionId","    if(ismaster.electionId instanceof ObjectId \u0026\u0026 self.electionId == null) {","    // Promote to primary","    self.promotePrimary(server);","    // Log change of primary","    if(self.logger.isInfo()) self.logger.info(f('[%s] promoting %s to primary', self.id, ismaster.me));","    // Emit primary","    self.replSet.emit('joined', 'primary', this.primary);","    // Emit the description change","    emitTopologyDescriptionChanged(this);","    // We are connected","    if(self.state == CONNECTING) {","        // If we have secondaryOnlyConnectionAllowed and just a passive it's","        // still a valid connection","        if(self.secondaryOnlyConnectionAllowed \u0026\u0026 self.state == CONNECTING) {","        // Is this the primary right now","        if(self.primary \u0026\u0026 self.primary.name == server.name) {","  // Return update applied","  return true;"],"Functions":["var State = function(replSet, options) ","State.prototype.resetDescription = function() ","function diff(previous, current) ","function emitTopologyDescriptionChanged(self) ","    description.servers = description.servers.concat(self.secondaries.map(function(x) ","    description.servers = description.servers.concat(self.arbiters.map(function(x) ","    description.servers = description.servers.concat(self.passives.map(function(x) ","State.prototype.isSecondaryConnected = function() ","State.prototype.isPrimaryConnected = function() ","State.prototype.isPrimary = function(address) ","State.prototype.isSecondary = function(address) ","State.prototype.isPassive = function(address) ","State.prototype.clearConnectingServers = function() ","    if(typeof this.connectingServers[name].destroy == 'function') ","State.prototype.removeConnectingServer = function(address) ","State.prototype.addConnectingServer = function(host, object) ","State.prototype.isConnectingServer = function(host) ","State.prototype.connectingServersCount = function() ","State.prototype.contains = function(address) ","State.prototype.getSecondaries = function() ","  this.secondaries = this.secondaries.filter(function(server) ","  return this.secondaries.filter(function(server) ","State.prototype.clean = function() ","  this.secondaries = this.secondaries.filter(function(s) ","  this.arbiters = this.arbiters.filter(function(s) ","  this.passives = this.passives.filter(function(s) ","State.prototype.unref = function() ","  this.secondaries.forEach(function(s) ","  this.arbiters.forEach(function(s) ","var removeEvents = function(s) ","  events.forEach(function(e) ","State.prototype.destroy = function() ","  this.secondaries.forEach(function(s) ","  this.arbiters.forEach(function(s) ","State.prototype.remove = function(server) ","  this.arbiters = this.arbiters.filter(function(s) ","  this.passives = this.passives.filter(function(s) ","    this.secondaries = this.secondaries.filter(function(s) ","  this.secondaries = this.secondaries.filter(function(s) ","State.prototype.get = function(server) ","State.prototype.getAll = function(options) ","State.prototype.getAllConnections = function(options) ","  this.secondaries.forEach(function(s) ","    this.arbiters.forEach(function(s) ","State.prototype.toJSON = function() ","    , secondaries: this.secondaries.map(function(s) ","State.prototype.lastIsMaster = function() ","State.prototype.promotePrimary = function(server) ","var add = function(self, list, server) ","State.prototype.addSecondary = function(server) ","State.prototype.addArbiter = function(server) ","State.prototype.addPassive = function(server) ","var compareObjectIds = function(id1, id2) ","  if(typeof Buffer.compare === 'function') ","State.prototype.update = function(ismaster, server) "],"Dependencies":["../connection/logger","util","bson","../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\server.js","LineCount":1634,"CharCount":53059,"Comments":["/**"," * @fileOverview The **Server** class is a class that represents a single server topology and is"," * used to construct connections."," *"," * @example"," * var Server = require('mongodb-core').Server"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new Server({host: 'localhost', port: 27017});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   server.destroy();"," * });"," *"," * // Start connecting"," * server.connect();"," */","","// All bson types","// All bson types","var bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];","// BSON parser","var bsonInstance = null;","// Server instance id","var serverId = 0;","// Callbacks instance id","var callbackId = 0;","// Single store for all callbacks","var Callbacks = function() {","  // EventEmitter.call(this);","  var self = this;","  // Callbacks","  this.callbacks = {};","  // Set the callbacks id","  this.id = callbackId++;","  // Set the type to server","  this.type = 'server';","//","// Clone the options","var cloneOptions = function(options) {","//","// Flush all callbacks","Callbacks.prototype.flush = function(err) {","//","// Flush all callbacks","Callbacks.prototype.flushConnection = function(err, connection) {","      // Validate if the operation ran on the connection","      if(callback.connection \u0026\u0026 callback.connection.id === connection.id) {","// Supports server","var supportsServer = function(_s) {","//","// createWireProtocolHandler","var createWireProtocolHandler = function(result) {","  // 3.2 wire protocol handler","  if(result \u0026\u0026 result.maxWireVersion \u003e= 4) {","  // 2.6 wire protocol handler","  if(result \u0026\u0026 result.maxWireVersion \u003e= 2) {","  // 2.4 or earlier wire protocol handler","  return new PreTwoSixWireProtocolSupport();","    // Flush the connection operations","    if(self.s.callbacks) {","    // Emit error event","    if(state.emitError \u0026\u0026 self.listeners('error').length \u003e 0) {","    // No more connections left, emit a close","    if(state.pool.getAll().length == 0) {","      // Set disconnected state","      state.state = DISCONNECTED;","      // Notify any strategies for read Preferences about closure","      if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);","      // Flush out all the callbacks","      if(state.callbacks) {","      // Destroy all connections","      self.destroy();","      // Emit error event","      if(state.emitError \u0026\u0026 self.listeners('error').length \u003e 0) self.emit('error', err, self);","      // If we specified the driver to reconnect perform it","      if(state.reconnect) return setTimeout(function() {","      // No reconnect destroy instance","      self.destroy();","//","// reconnect error handler","var reconnectErrorHandler = function(self, state) {","    // Flush the connection operations","    if(self.s.callbacks) {","    // Emit error event","    if(state.emitError \u0026\u0026 self.listeners('error').length \u003e 0) {","    // No more connections left, emit a close","    if(state.pool.getAll().length == 0) {","      // No more retries","      if(state.currentReconnectRetry == 0) {","        // Set state to destroyed","        self.state = DESTROYED;","        // Destroy pool","        self.destroy();","        // Do we have an error listener emit the error","        if(self.listeners('error').length \u003e 0) {","        // Retry connection","        setTimeout(function() {","//","// Reconnect server","var reconnectServer = function(self, state) {","  // Flush out any left over callbacks","  if(self \u0026\u0026 state \u0026\u0026 state.callbacks) {","  // If the current reconnect retries is 0 stop attempting to reconnect","  if(state.currentReconnectRetry == 0) {","  // Adjust the number of retries","  state.currentReconnectRetry = state.currentReconnectRetry - 1;","  // Set status to connecting","  state.state = CONNECTING;","  // If we have a pool destroy it","  if(state.pool) state.pool.destroy();","  // Create a new Pool","  state.pool = new Pool(state.options);","  //","  // Attempt to connect","  state.pool.once('connect', function() {","    // Reset retries","    state.currentReconnectRetry = state.reconnectTries;","    // Remove any non used handlers","    var events = ['error', 'close', 'timeout', 'parseError',","    // Set connected state","    state.state = CONNECTED;","    // Add proper handlers","    state.pool.once('error', self.s.inTopology ? errorHandler(self, state) : reconnectErrorHandler(self, state));","    // We need to ensure we have re-authenticated","    var keys = Object.keys(state.authProviders);","    // Get all connections","    var connections = state.pool.getAll();","    // Execute all providers","    var count = keys.length;","    // Iterate over keys","    for(var i = 0; i \u003c keys.length; i++) {","        // We are done, emit reconnect event","        if(count == 0) {","  //","  // Handle connection failure","  state.pool.once('error', self.s.inTopology ? errorHandler(self, state) : reconnectErrorHandler(self, state));","  // Connect pool","  state.pool.connect();","//","// Handlers","var messageHandler = function(self, state) {","    // Attempt to parse the message","    try {","      // Get the callback","      var cb = state.callbacks.callback(response.responseTo);","      // Parse options","      var parseOptions = {","      // Parse the message","      response.parse(parseOptions);","      // If no","      if((cb \u0026\u0026 !cb.noRelease) || !cb) {","      // Log if debug enabled","      if(state.logger.isDebug()) state.logger.debug(f('message [%s] received from %s', response.raw.toString('hex'), self.name));","      // Execute the registered callback","      state.callbacks.emit(response.responseTo, null, response);","    // Flush the connection operations","    if(self.s.callbacks) {","    // No more connections left, emit a close","    if(state.pool.getAll().length == 0) {","      // Set disconnected state","      state.state = DISCONNECTED;","      // Notify any strategies for read Preferences about closure","      if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);","      // Flush out all the callbacks","      if(state.callbacks) {","      // Emit error event","      if(self.listeners('error').length \u003e 0) self.emit('error', err, self);","      // If we specified the driver to reconnect perform it","      if(state.reconnect) return setTimeout(function() {","      // No reconnect destroy instance","      self.destroy();","    // Flush the connection operations","    if(self.s.callbacks) {","    // No more connections left, emit a close","    if(state.pool.getAll().length == 0) {","      // Set disconnected state","      state.state = DISCONNECTED;","      // Notify any strategies for read Preferences about closure","      if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'timeout', [self]);","      // Flush out all the callbacks","      if(state.callbacks) {","      // Emit error event","      self.emit('timeout', err, self);","      // If we specified the driver to reconnect perform it","      if(state.reconnect) return setTimeout(function() {","      // No reconnect destroy instance","      self.destroy();","    // Flush the connection operations","    if(self.s.callbacks) {","    // No more connections left, emit a close","    if(state.pool.getAll().length == 0) {","      // Set state to disconnected","      state.state = DISCONNECTED;","      // Notify any strategies for read Preferences about closure","      if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'close', [self]);","      // Flush out all the callbacks","      if(state.callbacks) {","      // Emit opening server event","      if(self.listeners('serverClosed').length \u003e 0) self.emit('serverClosed', {","      // Emit toplogy opening event if not in topology","      if(self.listeners('topologyClosed').length \u003e 0 \u0026\u0026 !self.s.inTopology) {","      // Emit close event","      self.emit('close', err, self);","      // If we specified the driver to reconnect perform it","      if(state.reconnect) return setTimeout(function() {","      // No reconnect destroy instance","      self.destroy();","  // Apply all stored authentications","  var applyAuthentications = function(ismaster, callback) {","    // Do not authenticate if we have an arbiter","    if(ismaster \u0026\u0026 ismaster.arbiterOnly) return callback(null, null);","    // We need to ensure we have re-authenticated","    var keys = Object.keys(state.authProviders);","    // Get all connections","    var connections = state.pool.getAll();","    // Execute all providers","    var count = keys.length;","    // Iterate over keys","    for(var i = 0; i \u003c keys.length; i++) {","        // We are done","        if(count == 0) {","    // Apply any applyAuthentications","    // applyAuthentications(function() {","    // Initiate monitoring","    if(state.monitoring) {","    // Get the actual latency of the ismaster","    var start = new Date().getTime();","    // Execute an ismaster","    self.command('admin.$cmd', {ismaster:true}, function(err, r) {","        // Emit opening closed event","        if(self.listeners('serverClosed').length \u003e 0) self.emit('serverClosed', {","        // Emit toplogy opening event if not in topology","        if(!self.s.inTopology) {","      // Apply authentication","      applyAuthentications(r.result, function() {","        // Emit server description changed if something listening","        emitServerDescriptionChanged(self, {","        // Emit topology description changed if something listening","        emitTopologyDescriptionChanged(self, {","        // Set the latency for this instance","        state.isMasterLatencyMS = new Date().getTime() - start;","        // Set the current ismaster","        if(!err) {","        // Emit the ismaster","        self.emit('ismaster', r.result, self);","        // Determine the wire protocol handler","        state.wireProtocolHandler = createWireProtocolHandler(state.ismaster);","        // Set the wireProtocolHandler","        state.options.wireProtocolHandler = state.wireProtocolHandler;","        // Log the ismaster if available","        if(state.logger.isInfo()) state.logger.info(f('server %s connected with ismaster [%s]', self.name, JSON.stringify(r.result)));","        // Validate if we it's a server we can connect to","        if(!supportsServer(state) \u0026\u0026 state.wireProtocolHandler == null) {","        // Set the details","        if(state.ismaster \u0026\u0026 state.ismaster.me) {","        // No read preference strategies just emit connect","        if(state.readPreferenceStrategies == null) {","        // Signal connect to all readPreferences","        notifyStrategies(self, self.s, 'connect', [self], function(err, result) {","    // });","  }","//","// Execute readPreference Strategies","var notifyStrategies = function(self, state, op, params, callback) {","    // Notify query start to any read Preference strategies","    for(var name in state.readPreferenceStrategies) {","    // Finish up","    return;","  // Execute the async callbacks","  var nPreferences = Object.keys(state.readPreferenceStrategies).length;","      // Add a callback to params","      var cParams = params.slice(0);","      // Execute the readPreference","      strat[op].apply(strat, cParams);","/**"," * Creates a new Server instance"," * @class"," * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @param {boolean} [options.emitError=false] Server will emit errors events"," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @return {Server} A cursor instance"," * @fires Server#connect"," * @fires Server#close"," * @fires Server#error"," * @fires Server#timeout"," * @fires Server#parseError"," * @fires Server#reconnect"," */","var Server = function(options) {","  // Add event listener","  EventEmitter.call(this);","  // BSON Parser, ensure we have a single instance","  if(bsonInstance == null) {","  // Reconnect retries","  var reconnectTries = options.reconnectTries || 30;","  // Keeps all the internal state of the server","  this.s = {","    // Options","      options: options","    // Contains all the callbacks","    , callbacks: new Callbacks()","    // Logger","    , logger: Logger('Server', options)","    // Server state","    , state: DISCONNECTED","    // Reconnect option","    , reconnect: typeof options.reconnect == 'boolean' ? options.reconnect :  true","    // Swallow or emit errors","    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false","    // Current state","    , currentReconnectRetry: reconnectTries","    // Contains the ismaster","    , ismaster: null","    // Contains any alternate strategies for picking","    , readPreferenceStrategies: options.readPreferenceStrategies","    // Auth providers","    , authProviders: options.authProviders || {}","    // Server instance id","    , id: serverId++","    // Shared topology id if part of another one","    , topologyId: options.topologyId || -1","    // Grouping tag used for debugging purposes","    , tag: options.tag","    // Do we have a not connected handler","    , disconnectHandler: options.disconnectHandler","    // If we are monitoring this server we will create an exclusive reserved socket for that","    , monitoring: typeof options.monitoring == 'boolean' ? options.monitoring : false","    // High availability monitoring interval","    , haInterval: options.haInterval || 10000","    // wireProtocolHandler methods","    , wireProtocolHandler: options.wireProtocolHandler || new PreTwoSixWireProtocolSupport()","    // Factory overrides","    , Cursor: options.cursorFactory || BasicCursor","    // BSON Parser, ensure we have a single instance","    , bsonInstance: bsonInstance","    // Contains the inquireServerState timeout reference","    , inquireServerStateTimeout: null","    // Pick the right bson parser","    , bson: options.bson ? options.bson : bsonInstance","    // Internal connection pool","    , pool: null","    // Is master latency","    , isMasterLatencyMS: 0","    // Is the server in a topology","    , inTopology: typeof options.inTopology == 'boolean' ? options.inTopology : false","    // Server details","    , serverDetails: {","    // Current server description","    , serverDescription: null","    // Current topology description","    , topologyDescription: null","  // Create hash method","  var hash = crypto.createHash('sha1');","  // Create a hash name","  this.hashedName = hash.digest('hex');","  // Reference state","  var s = this.s;","  // Add bson parser to options","  options.bson = s.bson;","  // Set error properties","  getProperty(this, 'name', 'name', s.serverDetails, {});","  // If we do not have an inherited authorization mechanism","  if(!options.authProviders) {","    // Emit the server description changed events","    self.emit('serverDescriptionChanged', {","    // Emit the server description changed events","    self.emit('topologyDescriptionChanged', {","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","/**"," * Get the server description"," * @method"," * @return {object}","*/","Server.prototype.getDescription = function() {","  // Add fields if available","  if(ismaster.hosts) description.hosts = ismaster.hosts;","/**"," * Execute a command"," * @method"," * @param {string} type Type of BSON parser to use (c++ or js)"," */","Server.prototype.setBSONParserType = function(type) {","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","Server.prototype.lastIsMaster = function() {","/**"," * Returns the last known ismaster response latency"," * @method"," * @return {object}"," */","Server.prototype.isMasterLatencyMS = function() {","/**"," * Initiate server connect"," * @method"," */","Server.prototype.connect = function(_options) {","  // Set server specific settings","  _options = _options || {}","  // Set the promotion","  if(typeof _options.promoteLongs == 'boolean')  {","  // Destroy existing pool connections if connection called","  // Multiple times","  if(self.s.pool) {","  // Set the state to connection","  self.s.state = CONNECTING;","  // Create a new connection pool","  self.s.options.messageHandler = messageHandler(self, self.s);","  // Add all the event handlers","  self.s.pool.on('timeout', timeoutHandler(self, self.s));","  // Emit toplogy opening event if not in topology","  if(!self.s.inTopology) {","  // Emit opening server event","  self.emit('serverOpening', {","  //","  // Handle new connections","  self.s.pool.on('connection', function(connection) {","    // No auth handler used, return the connection","    var keys = Object.keys(self.s.authProviders);","    // Get all connections","    var connections = [connection];","    // Execute all providers","    var count = keys.length;","    // Iterate over all auth methods","    for(var i = 0; i \u003c keys.length; i++) {","      // reauthenticate the connection","      self.s.authProviders[keys[i]].reauthenticate(self, connections, function(err, r) {","        // We are done, Make the connection available","        if(count == 0) {","  // Connect the pool","  self.s.pool.connect();","    // Record response time","    var start = new Date().getTime();","    // emitSDAMEvent","    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });","    // Attempt to execute ismaster command","    self.command('admin.$cmd', { ismaster:true },  { monitoring:true }, function(err, r) {","        // Legacy event sender","        self.emit('ismaster', r, self);","        // Calculate latencyMS","        var latencyMS = new Date().getTime() - start;","        // Server heart beat event","        emitSDAMEvent(self, 'serverHeartbeatSucceeded', { durationMS: latencyMS, reply: r.result, connectionId: self.name });","        // Did the server change","        if(changedIsMaster(self, self.s.ismaster, r.result)) {","          // Emit server description changed if something listening","          emitServerDescriptionChanged(self, {","        // Updat ismaster view","        self.s.ismaster = r.result;","        // Set server response time","        self.s.isMasterLatencyMS = latencyMS;","      // Perform another sweep","      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);","/**"," * Unref all connections belong to this server"," * @method"," */","Server.prototype.unref = function() {","/**"," * Destroy the server connection"," * @method"," */","Server.prototype.destroy = function(emitClose, emitDestroy) {","  // If we already destroyed ignore","  if(self.s.state == DESTROYED) return;","  // Do we have a inquireServerState running","  if(this.s.inquireServerStateTimeout) {","  // Emit close","  if(emitClose \u0026\u0026 self.listeners('close').length \u003e 0) {","  // Emit opening server event","  if(self.listeners('serverClosed').length \u003e 0) self.emit('serverClosed', {","  // Emit toplogy opening event if not in topology","  if(self.listeners('topologyClosed').length \u003e 0 \u0026\u0026 !self.s.inTopology) {","  // Emit destroy event","  if(emitDestroy) self.emit('destroy', self);","  // Set state as destroyed","  self.s.state = DESTROYED;","  // Close the pool","  if(self.s.pool) self.s.pool.destroy();","  // Flush out all the callbacks","  if(self.s.callbacks) self.s.callbacks.flush(new MongoError(f(\"server %s sockets closed\", self.name)));","/**"," * Figure out if the server is connected"," * @method"," * @return {boolean}"," */","Server.prototype.isConnected = function() {","/**"," * Figure out if the server instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","Server.prototype.isDestroyed = function() {","  // Create a query instance","  var query = new Query(self.s.bson, ns, cmd, queryOptions);","  // Set slave OK","  query.slaveOk = slaveOk(options.readPreference);","  // Notify query start to any read Preference strategies","  if(self.s.readPreferenceStrategies != null) {","  // Raw BSON response","  var raw = typeof options.raw == 'boolean' ? options.raw : false;","  // Do not promote longs","  var promoteLongs = typeof options.promoteLongs == 'boolean' ? options.promoteLongs : true;","  // Monitoring","  var monitoring = typeof options.monitoring == 'boolean' ? options.monitoring : false;","  // Execute multiple queries","  if(onAll) {","    // We have an error","    var error = null;","    // Execute on all connections","    for(var i = 0; i \u003c connections.length; i++) {","      // Command callback","      var commandCallback = function(_connection) {","          // Done","          if(total == 0) {","            // Notify end of command","            notifyStrategies(self, self.s, 'endOperation', [self, error, result, new Date()]);","            // Add the connection details","            result.hashedName = _connection.hashedName;","            // Execute callback, catch and rethrow if needed","            try {","      // Return raw BSON docs","      if(raw) {","      // Add promote long","      commandCallback.promoteLongs = promoteLongs;","      // Add monitoring","      commandCallback.monitoring = monitoring;","      // Set the executed connection on the callback","      commandCallback.connection = connections[i];","      // Register the callback","      self.s.callbacks.register(query.requestId, commandCallback(connections[i]));","  // Command callback","  var commandCallback = function(err, result) {","    // Notify end of command","    notifyStrategies(self, self.s, 'endOperation', [self, err, result, new Date()]);","      // Add the connection details","      result.hashedName = result.connection.hashedName;","      // Execute callback, catch and rethrow if needed","      try {","    // Add monitoring","    commandCallback.monitoring = monitoring;","    // Write the query out to the passed in connection or use the pool","    // Passed in connections are used for authentication mechanisms","    if(options.connection) {","      // Add the reference to the connection to the callback so","      // we can flush only the affected operations","      commandCallback.connection = options.connection;","      // Write out the command","      options.connection.write(query.toBin());","  // Return raw BSON docs","  if(raw) commandCallback.raw = true;","  // Promote long setting","  commandCallback.promoteLongs = promoteLongs;","  // Register the callback","  self.s.callbacks.register(query.requestId, commandCallback);","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.command = function(ns, cmd, options, callback) {","  // Ensure we have no options","  options = options || {};","  // Do we have a read Preference it need to be of type ReadPreference","  if(options.readPreference \u0026\u0026 !(options.readPreference instanceof ReadPreference)) {","  // Debug log","  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command [%s] against %s', JSON.stringify({","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() \u0026\u0026 self.s.disconnectHandler != null) {","  // If we have no connection error","  if(!self.s.pool.isConnected()) {","  // Execute on all connections","  var onAll = typeof options.onAll == 'boolean' ? options.onAll : false;","  // Check keys","  var checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys: false;","  // Serialize function","  var serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  // Ignore undefined values","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;","  // Raw BSON response","  var raw = typeof options.raw == 'boolean' ? options.raw : false;","  // Query options","  var queryOptions = {","  // Set up the serialize functions and ignore undefined","  if(serializeFunctions) queryOptions.serializeFunctions = serializeFunctions;","  // Single operation execution","  executeSingleOperation(self, ns, cmd, queryOptions, options, onAll, callback);","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.insert = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() \u0026\u0026 self.s.disconnectHandler != null) {","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","  // Execute write","  return self.s.wireProtocolHandler.insert(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.update = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() \u0026\u0026 self.s.disconnectHandler != null) {","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","  // Execute write","  return self.s.wireProtocolHandler.update(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.remove = function(ns, ops, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() \u0026\u0026 self.s.disconnectHandler != null) {","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","  // Execute write","  return self.s.wireProtocolHandler.remove(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","Server.prototype.auth = function(mechanism, db) {","  // If we don't have the mechanism fail","  if(self.s.authProviders[mechanism] == null \u0026\u0026 mechanism != 'default')","  // If we have the default mechanism we pick mechanism based on the wire","  // protocol max version. If it's \u003e= 3 then scram-sha1 otherwise mongodb-cr","  if(mechanism == 'default' \u0026\u0026 self.s.ismaster \u0026\u0026 self.s.ismaster.maxWireVersion \u003e= 3) {","  // Get all available connections","  var connections = self.s.pool.getAll();","  // Actual arguments","  var finalArguments = [self, connections, db].concat(args.slice(0)).concat([function(err, r) {","  // Let's invoke the auth mechanism","  self.s.authProviders[mechanism].auth.apply(self.s.authProviders[mechanism], finalArguments);","//","// Plugin methods","//","","/**","/**"," * Add custom read preference strategy"," * @method"," * @param {string} name Name of the read preference strategy"," * @param {object} strategy Strategy object instance"," */","Server.prototype.addReadPreferenceStrategy = function(name, strategy) {","/**"," * Add custom authentication mechanism"," * @method"," * @param {string} name Name of the authentication mechanism"," * @param {object} provider Authentication object instance"," */","Server.prototype.addAuthProvider = function(name, provider) {","/**"," * Compare two server instances"," * @method"," * @param {Server} server Server to compare equality against"," * @return {boolean}"," */","Server.prototype.equals = function(server) {","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","Server.prototype.connections = function() {","/**"," * Get server"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Server}"," */","Server.prototype.getServer = function(options) {","/**"," * Get correct server for a given connection"," * @method"," * @param {Connection} [connection] A Connection showing a current server"," * @return {Server}"," */","Server.prototype.getServerFrom = function(connection) {","/**"," * Get connection"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Connection}"," */","Server.prototype.getConnection = function(options) {","/**"," * Get callbacks object"," * @method"," * @return {Callbacks}"," */","Server.prototype.getCallbacks = function() {","/**"," * Name of BSON parser currently used"," * @method"," * @return {string}"," */","Server.prototype.parserType = function() {","// // Command","// {","//     find: ns","//   , query: \u003cobject\u003e","//   , limit: \u003cn\u003e","//   , fields: \u003cobject\u003e","//   , skip: \u003cn\u003e","//   , hint: \u003cstring\u003e","//   , explain: \u003cboolean\u003e","//   , snapshot: \u003cboolean\u003e","//   , batchSize: \u003cn\u003e","//   , returnKey: \u003cboolean\u003e","//   , maxScan: \u003cn\u003e","//   , min: \u003cn\u003e","//   , max: \u003cn\u003e","//   , showDiskLoc: \u003cboolean\u003e","//   , comment: \u003cstring\u003e","//   , maxTimeMS: \u003cn\u003e","//   , raw: \u003cboolean\u003e","//   , readPreference: \u003cReadPreference\u003e","//   , tailable: \u003cboolean\u003e","//   , oplogReplay: \u003cboolean\u003e","//   , noCursorTimeout: \u003cboolean\u003e","//   , awaitdata: \u003cboolean\u003e","//   , exhaust: \u003cboolean\u003e","//   , partial: \u003cboolean\u003e","// }","","/**","/**"," * Get a new cursor"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.cursor = function(ns, cmd, cursorOptions) {","  // Set up final cursor type","  var FinalCursor = cursorOptions.cursorFactory || s.Cursor;","  // Return the cursor","  return new FinalCursor(s.bson, ns, cmd, cursorOptions, this, s.options);","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Server#connect"," * @type {Server}"," */","","/**"," * The server connection closed, all pool connections closed"," *"," * @event Server#close"," * @type {Server}"," */","","/**"," * The server connection caused an error, all pool connections closed"," *"," * @event Server#error"," * @type {Server}"," */","","/**"," * The server connection timed out, all pool connections closed"," *"," * @event Server#timeout"," * @type {Server}"," */","","/**"," * The driver experienced an invalid message, all pool connections closed"," *"," * @event Server#parseError"," * @type {Server}"," */","","/**"," * The server reestablished the connection"," *"," * @event Server#reconnect"," * @type {Server}"," */","","/**"," * This is an insert result callback"," *"," * @callback opResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {CommandResult} command result"," */","","/**"," * This is an authentication result callback"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {Session} an authenticated session"," */","","module.exports = Server;"],"Functions":[" * server.on('connect', function(server) ","var Callbacks = function() ","var cloneOptions = function(options) ","Callbacks.prototype.flush = function(err) ","Callbacks.prototype.flushConnection = function(err, connection) ","Callbacks.prototype.callback = function(id) ","Callbacks.prototype.emit = function(id, err, value) ","Callbacks.prototype.raw = function(id) ","Callbacks.prototype.documentsReturnedIn = function(id) ","Callbacks.prototype.unregister = function(id) ","Callbacks.prototype.register = function(id, callback) ","var supportsServer = function(_s) ","var createWireProtocolHandler = function(result) ","var errorHandler = function(self, state) ","  return function(err, connection) ","      if(state.reconnect) return setTimeout(function() ","var reconnectErrorHandler = function(self, state) ","  return function(err, connection) ","        setTimeout(function() ","var reconnectServer = function(self, state) ","  state.pool.once('connect', function() ","    events.forEach(function(e) ","      state.authProviders[keys[i]].reauthenticate(self, connections, function(err, r) ","var messageHandler = function(self, state) ","  return function(response, connection) ","var fatalErrorHandler = function(self, state) ","  return function(err, connection) ","      if(state.reconnect) return setTimeout(function() ","var timeoutHandler = function(self, state) ","  return function(err, connection) ","      if(state.reconnect) return setTimeout(function() ","var closeHandler = function(self, state) ","  return function(err, connection) ","      if(state.reconnect) return setTimeout(function() ","var connectHandler = function(self, state) ","  var applyAuthentications = function(ismaster, callback) ","      state.authProviders[keys[i]].reauthenticate(self, connections, function(err, r) ","  return function() ","    // applyAuthentications(function() ","    self.command('admin.$cmd', ismaster:true}, function(err, r) {","      applyAuthentications(r.result, function() ","        notifyStrategies(self, self.s, 'connect', [self], function(err, result) ","var slaveOk = function(r) ","var notifyStrategies = function(self, state, op, params, callback) ","  if(typeof callback != 'function') ","      cParams.push(function(err, r) "," * @param boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","var Server = function(options) ","var getPreviousDescription = function(self) ","var emitServerDescriptionChanged = function(self, description) ","var getPreviousTopologyDescription = function(self) ","var emitTopologyDescriptionChanged = function(self, description) ","function emitSDAMEvent(self, event, description) ","Server.prototype.getDescription = function() ","Server.prototype.setBSONParserType = function(type) ","Server.prototype.lastIsMaster = function() ","Server.prototype.isMasterLatencyMS = function() ","Server.prototype.connect = function(_options) ","  self.s.pool.on('connection', function(connection) ","      self.s.authProviders[keys[i]].reauthenticate(self, connections, function(err, r) ","var getTopologyType = function(self, ismaster) ","var changedIsMaster = function(self, currentIsmaster, ismaster) ","var inquireServerState = function(self) ","  return function() ","    self.command('admin.$cmd',  ismaster:true },  { monitoring:true }, function(err, r) {","Server.prototype.unref = function() ","Server.prototype.destroy = function(emitClose, emitDestroy) ","Server.prototype.isConnected = function() ","Server.prototype.isDestroyed = function() ","var executeSingleOperation = function(self, ns, cmd, queryOptions, options, onAll, callback) ","      var commandCallback = function(_connection) ","        return function(err, result) ","              process.nextTick(function()  throw err});","  var commandCallback = function(err, result) ","        process.nextTick(function()  throw err});"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Server.prototype.command = function(ns, cmd, options, callback) ","  if(typeof options == 'function') callback = options, options = };","  // Serialize function","  // Set up the serialize functions and ignore undefined"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Server.prototype.insert = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Server.prototype.update = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Server.prototype.remove = function(ns, ops, options, callback) ","  if(typeof options == 'function') callback = options, options = };"," * @param authResultCallback} callback A callback function","Server.prototype.auth = function(mechanism, db) ","  var finalArguments = [self, connections, db].concat(args.slice(0)).concat([function(err, r) ","Server.prototype.addReadPreferenceStrategy = function(name, strategy) ","Server.prototype.addAuthProvider = function(name, provider) ","Server.prototype.equals = function(server) ","Server.prototype.connections = function() ","Server.prototype.getServer = function(options) ","Server.prototype.getServerFrom = function(connection) ","Server.prototype.getConnection = function(options) ","Server.prototype.getCallbacks = function() ","Server.prototype.parserType = function() "," * @param Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param opResultCallback} callback A callback function","Server.prototype.cursor = function(ns, cmd, cursorOptions) "],"Dependencies":["util","util","../connection/utils","events","../connection/pool","bson","crypto","../connection/commands","../error","./read_preference","../cursor","./command_result","../connection/utils","../connection/utils","../connection/utils","bson","../wireprotocol/2_4_support","../wireprotocol/2_6_support","../wireprotocol/3_2_support","./session","../connection/logger","../auth/mongocr","../auth/x509","../auth/plain","../auth/gssapi","../auth/sspi","../auth/scram","mongodb-core","mongodb-core","assert","bson","bson"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\session.js","LineCount":93,"CharCount":3405,"Comments":["/**"," * Creates a new Authentication Session"," * @class"," * @param {object} [options] Options for the session"," * @param {{Server}|{ReplSet}|{Mongos}} topology The topology instance underpinning the session"," */","var Session = function(options, topology) {","  // Add event listener","  EventEmitter.call(this);","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {object} [options.readPreference] Specify read preference if command supports it"," * @param {object} [options.connection] Specify connection object to execute command against"," * @param {opResultCallback} callback A callback function"," */","Session.prototype.command = function(ns, cmd, options, callback) {","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {opResultCallback} callback A callback function"," */","Session.prototype.insert = function(ns, ops, options, callback) {","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {opResultCallback} callback A callback function"," */","Session.prototype.update = function(ns, ops, options, callback) {","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {opResultCallback} callback A callback function"," */","Session.prototype.remove = function(ns, ops, options, callback) {","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {boolean} [options.tailable=false] Tailable flag set"," * @param {boolean} [options.oplogReply=false] oplogReply flag set"," * @param {boolean} [options.awaitdata=false] awaitdata flag set"," * @param {boolean} [options.exhaust=false] exhaust flag set"," * @param {boolean} [options.partial=false] partial flag set"," * @param {opResultCallback} callback A callback function"," */","Session.prototype.cursor = function(ns, cmd, options) {"],"Functions":["var Session = function(options, topology) "," * @param opResultCallback} callback A callback function","Session.prototype.command = function(ns, cmd, options, callback) "," * @param opResultCallback} callback A callback function","Session.prototype.insert = function(ns, ops, options, callback) "," * @param opResultCallback} callback A callback function","Session.prototype.update = function(ns, ops, options, callback) "," * @param opResultCallback} callback A callback function","Session.prototype.remove = function(ns, ops, options, callback) "," * @param opResultCallback} callback A callback function","Session.prototype.cursor = function(ns, cmd, options) "],"Dependencies":["util","util","events"]},{"FileName":"node_modules\\mongodb-core\\lib\\topologies\\strategies\\ping.js","LineCount":276,"CharCount":7715,"Comments":["/**"," * Creates a new Ping read preference strategy instance"," * @class"," * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers"," * @param {number} [options.acceptableLatency=250] Acceptable latency for selecting a server for reading (in milliseconds)"," * @return {Ping} A cursor instance"," */","var Ping = function(options) {","  // Add event listener","  EventEmitter.call(this);","  // Contains the ping state","  this.s = {","    // Contains all the ping data","      pings: {}","    // Set no options if none provided","    , options: options || {}","    // Logger","    , logger: Logger('Ping', options)","    // Ping interval","    , pingInterval: options.pingInterval || 10000","    // Debug options","    , debug: typeof options.debug == 'boolean' ? options.debug : false","    // Index","    , index: 0","    // Current ping time","    , lastPing: null","  // Log the options set","  if(this.s.logger.isDebug()) this.s.logger.debug(f('ping strategy interval [%s], acceptableLatency [%s]', this.s.pingInterval, this.s.acceptableLatency));","  // If we have enabled debug ","  if(this.s.debug) {","    // Add access to the read Preference Strategies","    Object.defineProperty(this, 'data', {","/**"," * @ignore"," */","var filterByTags = function(readPreference, servers) {","  // Iterate over all the servers","  for(var i = 0; i \u003c servers.length; i++) {","    // Did we find the a matching server","    var found = true;","    // Check if the server is valid","    for(var name in tags) {","    // Add to candidate list","    if(found) filteredServers.push(servers[i]);","  // Returned filtered servers","  return filteredServers;","/**"," * Pick a server"," * @method"," * @param {State} set The current replicaset state object "," * @param {ReadPreference} readPreference The current readPreference object"," * @param {readPreferenceResultCallback} callback The callback to return the result from the function"," * @return {object}"," */","Ping.prototype.pickServer = function(set, readPreference) {","  // Only get primary and secondaries as seeds","  var seeds = {};","  // Filter by tags","  servers = filterByTags(readPreference, servers);","  // Transform the list","  var serverList = [];","  // for(var name in seeds) {","  for(var i = 0; i \u003c servers.length; i++) {","  // Sort by time","  serverList.sort(function(a, b) {","  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)","  var lowest = serverList.length \u003e 0 ? serverList[0].time : 0;","  // Filter by latency","  serverList = serverList.filter(function(s) {","  // No servers, default to primary","  if(serverList.length == 0 \u0026\u0026 set.primary) {","  // We picked first server","  if(self.s.logger.isInfo()) self.s.logger.info(f('picked server [%s] with ping latency [%s]', serverList[0].name, serverList[0].time));","  // Add to the index","  self.s.index = self.s.index + 1;","  // Select the index","  self.s.index = self.s.index % serverList.length;","  // Return the first server of the sorted and filtered list","  return set.get(serverList[self.s.index].name);","/**"," * Start of an operation"," * @method"," * @param {Server} server The server the operation is running against"," * @param {object} query The operation running"," * @param {Date} date The start time of the operation"," * @return {object}"," */","Ping.prototype.startOperation = function(server, query, date) {","/**"," * End of an operation"," * @method"," * @param {Server} server The server the operation is running against"," * @param {error} err An error from the operation"," * @param {object} result The result from the operation"," * @param {Date} date The start time of the operation"," * @return {object}"," */","Ping.prototype.endOperation = function(server, err, result, date) {","/**"," * High availability process running"," * @method"," * @param {State} set The current replicaset state object "," * @param {resultCallback} callback The callback to return the result from the function"," * @return {object}"," */","Ping.prototype.ha = function(topology, state, callback) {","  // No servers return","  if(servers.length == 0) return callback(null, null);","  // Return if we have not yet reached the ping interval","  if(self.s.lastPing != null) {","  // Execute operation","  var operation = function(_server) {","    // Execute ping against server","    _server.command('system.$cmd', {ismaster:1}, function(err, r) {","      // Log info for debug","      if(self.s.logger.isDebug()) self.s.logger.debug(f('ha latency for server [%s] is [%s] ms', _server.name, time));","      // We are done with all the servers","      if(count == 0) {","        // Emit ping event","        topology.emit('ping', err, r ? r.result : null);","        // Update the last ping time","        self.s.lastPing = new Date();","        // Return","        callback(null, null);","  // Let's ping all servers","  while(servers.length \u003e 0) {","/**"," * Server connection closed"," * @method"," * @param {Server} server The server that closed"," */","Ping.prototype.close = function(server) {","/**"," * Server connection errored out"," * @method"," * @param {Server} server The server that errored out"," */","Ping.prototype.error = function(server) {","/**"," * Server connection timeout"," * @method"," * @param {Server} server The server that timed out"," */","Ping.prototype.timeout = function(server) {","/**"," * Server connection happened"," * @method"," * @param {Server} server The server that connected"," * @param {resultCallback} callback The callback to return the result from the function"," */","Ping.prototype.connect = function(server, callback) {","  // Get the command start date","  var start = new Date();","  // Execute ping against server","  server.command('system.$cmd', {ismaster:1}, function(err, r) {","    // Log info for debug","    if(self.s.logger.isDebug()) self.s.logger.debug(f('connect latency for server [%s] is [%s] ms', server.name, time));","    // Set last ping","    self.s.lastPing = new Date();","    // Done, return","    callback(null, null);","/**"," * This is a result from a readPreference strategy"," *"," * @callback readPreferenceResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {Server} server The server picked by the strategy"," */","","module.exports = Ping;"],"Functions":["var Ping = function(options) ","      enumerable: true, get: function()  return this.s.pings; }","var filterByTags = function(readPreference, servers) "," * @param readPreferenceResultCallback} callback The callback to return the result from the function","Ping.prototype.pickServer = function(set, readPreference) ","  serverList.sort(function(a, b) ","  serverList = serverList.filter(function(s) ","Ping.prototype.startOperation = function(server, query, date) ","Ping.prototype.endOperation = function(server, err, result, date) "," * @param resultCallback} callback The callback to return the result from the function","Ping.prototype.ha = function(topology, state, callback) ","  var operation = function(_server) ","    _server.command('system.$cmd', ismaster:1}, function(err, r) {","var removeServer = function(self, server) ","Ping.prototype.close = function(server) ","Ping.prototype.error = function(server) ","Ping.prototype.timeout = function(server) "," * @param resultCallback} callback The callback to return the result from the function","Ping.prototype.connect = function(server, callback) ","  server.command('system.$cmd', ismaster:1}, function(err, r) {"],"Dependencies":["../../connection/logger","events","util","util"]},{"FileName":"node_modules\\mongodb-core\\lib\\wireprotocol\\2_4_support.js","LineCount":580,"CharCount":19640,"Comments":["// Write concern fields","var writeConcernFields = ['w', 'wtimeout', 'j', 'fsync'];","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  // If we have more than a 1000 ops fails","  if(ops.length \u003e 1000) return callback(new MongoError(\"exceeded maximum write batch size of 1000\"));","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","  // Create a kill cursor command","  var killCursor = new KillCursor(bson, [cursorId]);","  // Execute the kill cursor command","  if(pool \u0026\u0026 pool.isConnected()) pool.write(killCursor.toBin(), callback, {immediateRelease:true});","  // Set cursor to 0","  cursorId = Long.ZERO;","  // Return to caller","  if(callback) callback(null, null);","  // Create getMore command","  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});","  // Query callback","  var queryCallback = function(err, r) {","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags \u0026 (1 \u003c\u003c 0)) != 0) {","    // Ensure we have a Long valie cursor id","    var cursorId = typeof r.cursorId == 'number'","    // Set all the values","    cursorState.documents = r.documents;","    // Return","    callback(null, null, r.connection);","  // If we have a raw query decorate the function","  if(raw) {","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","  // Register a callback","  callbacks.register(getMore.requestId, queryCallback);","  // Write out the getMore command","  connection.write(getMore.toBin(), queryCallback);","  // Establish type of command","  if(cmd.find) {","//","// Execute a find command","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","  // Unpack the limit and batchSize values","  if(cursorState.limit == 0) {","  // Build actual find command","  var findCmd = {};","  // Using special modifier","  var usesSpecialModifier = false;","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos' \u0026\u0026 readPreference) {","  // Add special modifiers to the query","  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;","\t// nToReturn must be 0 (match all) or negative (match N and close cursor)","\t// nToReturn \u003e 0 will give explain results equivalent to limit(0)","    numberToReturn = -Math.abs(cmd.limit || 0);","  // If we have a special modifier","  if(usesSpecialModifier) {","  // Throw on majority readConcern passed in","  if(cmd.readConcern \u0026\u0026 cmd.readConcern.level != 'local') {","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) {","  // Set up the serialize and ignoreUndefined fields","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // Build Query object","  var query = new Query(bson, ns, findCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Set up the option bits for wire protocol","  if(typeof cmd.tailable == 'boolean') query.tailable = cmd.tailable;","  // Return the query","  return query;","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Final query","  var finalCmd = {};","  // Build command namespace","  var parts = ns.split(/\\./);","  // Throw on majority readConcern passed in","  if(cmd.readConcern \u0026\u0026 cmd.readConcern.level != 'local') {","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) delete cmd['readConcern'];","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // Set up the serialize and ignoreUndefined fields","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Return the query","  return query;","/**"," * @ignore"," */","var bindToCurrentDomain = function(callback) {","//","// Aggregate up all the results","//","var aggregateWriteOperationResults = function(opType, ops, results, connection) {","  // Map all the results coming back","  for(var i = 0; i \u003c results.length; i++) {","    // Push the upserted document to the list of upserted values","    if(result.upserted) {","    // We have an upsert where we passed in a _id","    if(result.updatedExisting == false \u0026\u0026 result.n == 1 \u0026\u0026 result.upserted == null) {","    // We have an insert command","    if(result.ok == 1 \u0026\u0026 opType == 'insert' \u0026\u0026 result.err == null) {","    // We have a command error","    if(result != null \u0026\u0026 result.ok == 0 || result.err || result.errmsg) {","      // Check if we have a write error","      if(result.code == 11000","    // Result as expected","    if(result != null \u0026\u0026 result.lastOp) finalResult.lastOp = result.lastOp;","  // Return finalResult aggregated results","  return new CommandResult(finalResult, connection);","//","// Execute all inserts in an ordered manner","//","var executeOrdered = function(opType ,command, ismaster, ns, bson, pool, callbacks, ops, options, callback) {","  // Bind to current domain","  callback = bindToCurrentDomain(callback);","  // Collect all the getLastErrors","  var getLastErrors = [];","  // Execute an operation","  var executeOp = function(list, _callback) {","    // No more items in the list","    if(list.length == 0) {","    // Get the first operation","    var doc = list.shift();","    // Create an insert command","    var op = new command(Query.getRequestId(), ismaster, bson, ns, [doc], options);","    // Write concern","    var optionWriteConcern = options.writeConcern || {w:1};","    // Final write concern","    var writeConcern = cloneWriteConcern(optionWriteConcern);","    // Get the db name","    var db = ns.split('.').shift();","      // Add binary message to list of commands to execute","      var commands = [op.toBin()];","      // If write concern 0 don't fire getLastError","      if(hasWriteConcern(writeConcern)) {","        // Merge all the fields","        for(var i = 0; i \u003c writeConcernFields.length; i++) {","        // Create a getLastError command","        var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});","        // Add getLastError command to list of ops to execute","        commands.push(getLastErrorOp.toBin());","        // getLastError callback","        var getLastErrorCallback = function(err, result) {","          // Get the document","          var doc = result.documents[0];","          // Save the getLastError document","          getLastErrors.push(doc);","          // If we have an error terminate","          if(doc.ok == 0 || doc.err || doc.errmsg) {","          // Execute the next op in the list","          executeOp(list, callback);","        // Register the callback","        callbacks.register(getLastErrorOp.requestId, getLastErrorCallback);","        // Write both commands out at the same time","        pool.write(commands, getLastErrorCallback);","        // Write both commands out at the same time","        pool.write(commands, callback, {immediateRelease:true});","      // We have a serialization error, rewrite as a write error to have same behavior as modern","      // write commands","      getLastErrors.push({ ok: 1, errmsg: err.message, code: 14 });","      // Return due to an error","      process.nextTick(function() {","  // Execute the operations","  executeOp(_ops, callback);","  // Bind to current domain","  callback = bindToCurrentDomain(callback);","  // Total operations to write","  var totalOps = ops.length;","  // Collect all the getLastErrors","  var getLastErrors = [];","  // Write concern","  var optionWriteConcern = options.writeConcern || {w:1};","  // Final write concern","  var writeConcern = cloneWriteConcern(optionWriteConcern);","  // Driver level error","  var error;","  // Execute all the operations","  for(var i = 0; i \u003c ops.length; i++) {","    // Create an insert command","    var op = new command(Query.getRequestId(), ismaster, bson, ns, [ops[i]], options);","    // Get db name","    var db = ns.split('.').shift();","      // Add binary message to list of commands to execute","      var commands = [op.toBin()];","      // If write concern 0 don't fire getLastError","      if(hasWriteConcern(writeConcern)) {","        // Merge all the fields","        for(var j = 0; j \u003c writeConcernFields.length; j++) {","        // Create a getLastError command","        var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});","        // Add getLastError command to list of ops to execute","        commands.push(getLastErrorOp.toBin());","        // Give the result from getLastError the right index","        var callbackOp = function(_index) {","            // Update the number of operations executed","            totalOps = totalOps - 1;","            // Save the getLastError document","            if(!err) getLastErrors[_index] = result.documents[0];","            // Check if we are done","            if(totalOps == 0) {","        // Register the callback","        callbacks.register(getLastErrorOp.requestId, callbackOp(i));","        // Write both commands out at the same time","        pool.write(commands, callbackOp(i));","        // Write both commands out at the same time","        pool.write(commands, callback, {immediateRelease:true});","      // Update the number of operations executed","      totalOps = totalOps - 1;","      // We have a serialization error, rewrite as a write error to have same behavior as modern","      // write commands","      getLastErrors[i] = { ok: 1, errmsg: err.message, code: 14 };","      // Check if we are done","      if(totalOps == 0) {","  // Empty w:0 return","  if(writeConcern"],"Functions":["var WireProtocol = function() }","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) ","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) ","  var queryCallback = function(err, r) ","  // If we have a raw query decorate the function","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) ","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) ","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) ","  // Serialize functions","var bindToCurrentDomain = function(callback) ","var hasWriteConcern = function(writeConcern) ","var cloneWriteConcern = function(writeConcern) ","var aggregateWriteOperationResults = function(opType, ops, results, connection) ","var executeOrdered = function(opType ,command, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","  var executeOp = function(list, _callback) ","      return process.nextTick(function() ","        var getLastErrorCallback = function(err, result) ","      process.nextTick(function() ","var executeUnordered = function(opType, command, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","        var callbackOp = function(_index) ","          return function(err, result) ","              process.nextTick(function() "],"Dependencies":["./commands","./commands","./commands","../connection/commands","../connection/utils","../connection/commands","../connection/commands","../connection/commands","../topologies/read_preference","util","../topologies/command_result","../error","bson","./shared"]},{"FileName":"node_modules\\mongodb-core\\lib\\wireprotocol\\2_6_support.js","LineCount":318,"CharCount":10183,"Comments":["//","// Execute a write operation","var executeWrite = function(topology, type, opsField, ns, ops, options, callback) {","  // Split the ns up to get db and collection","  var p = ns.split(\".\");","  // Options","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  // return skeleton","  var writeCommand = {};","  // Did we specify a write concern","  if(writeConcern \u0026\u0026 Object.keys(writeConcern).length \u003e 0) {","  // Options object","  var opts = {};","  // Ensure we support serialization of functions","  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;","  // Execute command","  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {","  // Create a kill cursor command","  var killCursor = new KillCursor(bson, [cursorId]);","  // Execute the kill cursor command","  if(pool \u0026\u0026 pool.isConnected()) pool.write(killCursor.toBin(), callback, {immediateRelease:true});","  // Set cursor to 0","  cursorId = Long.ZERO;","  // Return to caller","  if(callback) callback(null, null);","  // Create getMore command","  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});","  // Query callback","  var queryCallback = function(err, r) {","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags \u0026 (1 \u003c\u003c 0)) != 0) {","    // Ensure we have a Long valie cursor id","    var cursorId = typeof r.cursorId == 'number'","    // Set all the values","    cursorState.documents = r.documents;","    // Return","    callback(null, null, r.connection);","  // If we have a raw query decorate the function","  if(raw) {","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","  // Register a callback","  callbacks.register(getMore.requestId, queryCallback);","  // Write out the getMore command","  connection.write(getMore.toBin(), queryCallback);","  // Establish type of command","  if(cmd.find) {","//","// Execute a find command","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","  // Unpack the limit and batchSize values","  if(cursorState.limit == 0) {","  // Build actual find command","  var findCmd = {};","  // Using special modifier","  var usesSpecialModifier = false;","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos' \u0026\u0026 readPreference) {","  // Add special modifiers to the query","  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;","\t// nToReturn must be 0 (match all) or negative (match N and close cursor)","\t// nToReturn \u003e 0 will give explain results equivalent to limit(0)","    numberToReturn = -Math.abs(cmd.limit || 0);","  // If we have a special modifier","  if(usesSpecialModifier) {","  // Throw on majority readConcern passed in","  if(cmd.readConcern \u0026\u0026 cmd.readConcern.level != 'local') {","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) {","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // Build Query object","  var query = new Query(bson, ns, findCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Set up the option bits for wire protocol","  if(typeof cmd.tailable == 'boolean') {","  // Return the query","  return query;","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Final query","  var finalCmd = {};","  // Build command namespace","  var parts = ns.split(/\\./);","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // Throw on majority readConcern passed in","  if(cmd.readConcern \u0026\u0026 cmd.readConcern.level != 'local') {","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) delete cmd['readConcern'];","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Return the query","  return query;","/**"," * @ignore"," */","var bindToCurrentDomain = function(callback) {"],"Functions":["var WireProtocol = function() }","var executeWrite = function(topology, type, opsField, ns, ops, options, callback) ","  if(typeof options == 'function') ","  // Ensure we support serialization of functions","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) ","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) ","  var queryCallback = function(err, r) ","  // If we have a raw query decorate the function","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) ","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) ","  // Serialize functions","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) ","  // Serialize functions","var bindToCurrentDomain = function(callback) "],"Dependencies":["./commands","./commands","./commands","../connection/commands","../connection/utils","../connection/commands","../connection/commands","../connection/commands","../topologies/read_preference","util","../topologies/command_result","../error","bson","./shared"]},{"FileName":"node_modules\\mongodb-core\\lib\\wireprotocol\\3_2_support.js","LineCount":519,"CharCount":14660,"Comments":["//","// Execute a write operation","var executeWrite = function(topology, type, opsField, ns, ops, options, callback) {","  // Split the ns up to get db and collection","  var p = ns.split(\".\");","  // Options","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  // return skeleton","  var writeCommand = {};","  // Did we specify a write concern","  if(writeConcern \u0026\u0026 Object.keys(writeConcern).length \u003e 0) {","  // Do we have bypassDocumentValidation set, then enable it on the write command","  if(typeof options.bypassDocumentValidation == 'boolean') {","  // Options object","  var opts = {};","  // Ensure we support serialization of functions","  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;","  // Execute command","  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","  // Create getMore command","  var killcursorCmd = {","  // Build Query object","  var query = new Query(bson, commandns, killcursorCmd, {","  // Set query flags","  query.slaveOk = true;","  // Execute the kill cursor command","  if(pool \u0026\u0026 pool.isConnected()) {","  // Kill cursor callback","  var killCursorCallback = function(err, r) {","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags \u0026 (1 \u003c\u003c 0)) != 0) {","    // Return the result","    if(typeof callback == 'function') {","  // Register a callback","  callbacks.register(query.requestId, killCursorCallback);","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","  // Check if we have an maxTimeMS set","  var maxTimeMS = typeof cursorState.cmd.maxTimeMS == 'number' ? cursorState.cmd.maxTimeMS : 3000;","  // Create getMore command","  var getMoreCmd = {","  // Build Query object","  var query = new Query(bson, commandns, getMoreCmd, {","  // Set query flags","  query.slaveOk = true;","  // Query callback","  var queryCallback = function(err, r) {","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags \u0026 (1 \u003c\u003c 0)) != 0) {","    // Raw, return all the extracted documents","    if(raw) {","    // We have an error detected","    if(r.documents[0].ok == 0) {","    // Ensure we have a Long valid cursor id","    var cursorId = typeof r.documents[0].cursor.id == 'number'","    // Set all the values","    cursorState.documents = r.documents[0].cursor.nextBatch;","    // Return the result","    callback(null, r.documents[0], r.connection);","  // If we have a raw query decorate the function","  if(raw) {","  // Add the result field needed","  queryCallback.documentsReturnedIn = 'nextBatch';","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","  // Register a callback","  callbacks.register(query.requestId, queryCallback);","  // Write out the getMore command","  connection.write(query.toBin(), queryCallback);","  // Establish type of command","  if(cmd.find) {","    // Create the find command","    var query = executeFindCommand(bson, ns, cmd, cursorState, topology, options)","    // Mark the cmd as virtual","    cmd.virtual = false;","    // Signal the documents are in the firstBatch value","    query.documentsReturnedIn = 'firstBatch';","    // Return the query","    return query;","// // Command","// {","//     find: ns","//   , query: \u003cobject\u003e","//   , limit: \u003cn\u003e","//   , fields: \u003cobject\u003e","//   , skip: \u003cn\u003e","//   , hint: \u003cstring\u003e","//   , explain: \u003cboolean\u003e","//   , snapshot: \u003cboolean\u003e","//   , batchSize: \u003cn\u003e","//   , returnKey: \u003cboolean\u003e","//   , maxScan: \u003cn\u003e","//   , min: \u003cn\u003e","//   , max: \u003cn\u003e","//   , showDiskLoc: \u003cboolean\u003e","//   , comment: \u003cstring\u003e","//   , maxTimeMS: \u003cn\u003e","//   , raw: \u003cboolean\u003e","//   , readPreference: \u003cReadPreference\u003e","//   , tailable: \u003cboolean\u003e","//   , oplogReplay: \u003cboolean\u003e","//   , noCursorTimeout: \u003cboolean\u003e","//   , awaitdata: \u003cboolean\u003e","//   , exhaust: \u003cboolean\u003e","//   , partial: \u003cboolean\u003e","// }","","// FIND/GETMORE SPEC","// {","//     “find”: \u003cstring\u003e,","//     “filter”: { ... },","//     “sort”: { ... },","//     “projection”: { ... },","//     “hint”: { ... },","//     “skip”: \u003cint\u003e,","//     “limit”: \u003cint\u003e,","//     “batchSize”: \u003cint\u003e,","//     “singleBatch”: \u003cbool\u003e,","//     “comment”: \u003cstring\u003e,","//     “maxScan”: \u003cint\u003e,","//     “maxTimeMS”: \u003cint\u003e,","//     “max”: { ... },","//     “min”: { ... },","//     “returnKey”: \u003cbool\u003e,","//     “showRecordId”: \u003cbool\u003e,","//     “snapshot”: \u003cbool\u003e,","//     “tailable”: \u003cbool\u003e,","//     “oplogReplay”: \u003cbool\u003e,","//     “noCursorTimeout”: \u003cbool\u003e,","//     “awaitData”: \u003cbool\u003e,","//     “partial”: \u003cbool\u003e,","//     “$readPreference”: { ... }","// }","","//","// Execute a find command","var executeFindCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","  // Build actual find command","  var findCmd = {","  // I we provided a filter","  if(cmd.query) {","    // Check if the user is passing in the $query parameter","    if(cmd.query['$query']) {","  // Sort value","  var sortValue = cmd.sort;","  // Handle issue of sort being an Array","  if(Array.isArray(sortValue)) {","      // Translate the sort order text","      if(sortDirection == 'asc') {","      // Set the sort order","      sortObject[sortValue[0]] = sortDirection;","        // Translate the sort order text","        if(sortDirection == 'asc') {","        // Set the sort order","        sortObject[sortValue[i][0]] = sortDirection;","  // Add sort to command","  if(cmd.sort) findCmd.sort = sortValue;","  // Add a projection to the command","  if(cmd.fields) findCmd.projection = cmd.fields;","  // Add a hint to the command","  if(cmd.hint) findCmd.hint = cmd.hint;","  // Add a skip","  if(cmd.skip) findCmd.skip = cmd.skip;","  // Add a limit","  if(cmd.limit) findCmd.limit = cmd.limit;","  // Add a batchSize","  if(typeof cmd.batchSize == 'number') findCmd.batchSize = Math.abs(cmd.batchSize);","  // Check if we wish to have a singleBatch","  if(cmd.limit \u003c 0) {","  // If we have comment set","  if(cmd.comment) findCmd.comment = cmd.comment;","  // If we have maxScan","  if(cmd.maxScan) findCmd.maxScan = cmd.maxScan;","  // If we have maxTimeMS set","  if(cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;","  // If we have min","  if(cmd.min) findCmd.min = cmd.min;","  // If we have max","  if(cmd.max) findCmd.max = cmd.max;","  // If we have returnKey set","  if(cmd.returnKey) findCmd.returnKey = cmd.returnKey;","  // If we have showDiskLoc set","  if(cmd.showDiskLoc) findCmd.showRecordId = cmd.showDiskLoc;","  // If we have snapshot set","  if(cmd.snapshot) findCmd.snapshot = cmd.snapshot;","  // If we have tailable set","  if(cmd.tailable) findCmd.tailable = cmd.tailable;","  // If we have oplogReplay set","  if(cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;","  // If we have noCursorTimeout set","  if(cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;","  // If we have awaitData set","  if(cmd.awaitData) findCmd.awaitData = cmd.awaitData;","  // If we have partial set","  if(cmd.partial) findCmd.partial = cmd.partial;","  // If we have explain, we need to rewrite the find command","  // to wrap it in the explain command","  if(cmd.explain) {","  // Did we provide a readConcern","  if(cmd.readConcern) findCmd.readConcern = cmd.readConcern;","  // Set up the serialize and ignoreUndefined fields","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","  // Build Query object","  var query = new Query(bson, commandns, findCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Return the query","  return query;","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Final query","  var finalCmd = {};","  // Build command namespace","  var parts = ns.split(/\\./);","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","  // Set up the serialize and ignoreUndefined fields","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","  // Return the query","  return query;","/**"," * @ignore"," */","var bindToCurrentDomain = function(callback) {"],"Functions":["var WireProtocol = function(legacyWireProtocol) ","var executeWrite = function(topology, type, opsField, ns, ops, options, callback) ","  if(typeof options == 'function') ","  // Ensure we support serialization of functions","WireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) ","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) ","  var killCursorCallback = function(err, r) ","      if(typeof callback != 'function') return;","      if(typeof callback != 'function') return;","      if(typeof callback != 'function') return;","    if(typeof callback == 'function') ","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) ","  var queryCallback = function(err, r) ","  // If we have a raw query decorate the function","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) ","var executeFindCommand = function(bson, ns, cmd, cursorState, topology, options) ","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) ","  // Serialize functions","var bindToCurrentDomain = function(callback) "],"Dependencies":["./commands","./commands","./commands","../connection/commands","../connection/utils","../connection/commands","../connection/commands","../connection/commands","../topologies/read_preference","util","../topologies/command_result","../error","bson","./shared"]},{"FileName":"node_modules\\mongodb-core\\lib\\wireprotocol\\commands.js","LineCount":358,"CharCount":10076,"Comments":["// Wire command operation ids","var OP_UPDATE = 2001;","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","  // Validate that we are not passing 0x00 in the colletion name","  if(!!~ns.indexOf(\"\\x00\")) {","  // Set internal","  this.requestId = requestId;","  // Ensure empty options","  options = options || {};","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  // Set flags","  this.flags = this.continueOnError ? 1 : 0;","// To Binary","Insert.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // Flags","    + Buffer.byteLength(this.ns) + 1 // namespace","  );","  // Add header to buffers","  buffers.push(header);","  // Total length of the message","  var totalLength = header.length;","  // Serialize all the documents","  for(var i = 0; i \u003c this.documents.length; i++) {","    // Document is larger than maxBsonObjectSize, terminate serialization","    if(buffer.length \u003e this.ismaster.maxBsonObjectSize) {","    // Add to total length of wire protocol message","    totalLength = totalLength + buffer.length;","    // Add to buffer","    buffers.push(buffer);","  // Command is larger than maxMessageSizeBytes terminate serialization","  if(totalLength \u003e this.ismaster.maxMessageSizeBytes) {","  // Add all the metadata","  var index = 0;","  // Write header length","  header[index + 3] = (totalLength \u003e\u003e 24) \u0026 0xff;","  // Write header requestId","  header[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // No flags","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Operation","  header[index + 3] = (OP_INSERT \u003e\u003e 24) \u0026 0xff;","  // Flags","  header[index + 3] = (this.flags \u003e\u003e 24) \u0026 0xff;","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  // Return the buffers","  return buffers;","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","  // Ensure empty options","  options = options || {};","  // Set internal","  this.requestId = requestId;","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  // Unpack the update document","  this.upsert = typeof update[0].upsert == 'boolean' ? update[0].upsert : false;","  // Create flag value","  this.flags = this.upsert ? 1 : 0;","// To Binary","Update.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // ZERO","    + Buffer.byteLength(this.ns) + 1 // namespace","    + 4   // Flags","  );","  // Add header to buffers","  buffers.push(header);","  // Total length of the message","  var totalLength = header.length;","  // Serialize the selector","  var selector = this.bson.serialize(this.q","  // Serialize the update","  var update = this.bson.serialize(this.u","  // Index in header buffer","  var index = 0;","  // Write header length","  header[index + 3] = (totalLength \u003e\u003e 24) \u0026 0xff;","  // Write header requestId","  header[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // No flags","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Operation","  header[index + 3] = (OP_UPDATE \u003e\u003e 24) \u0026 0xff;","  // Write ZERO","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  // Flags","  header[index + 3] = (this.flags \u003e\u003e 24) \u0026 0xff;","  // Return the buffers","  return buffers;","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","  // Ensure empty options","  options = options || {};","  // Set internal","  this.requestId = requestId;","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  // Unpack the update document","  this.limit = typeof remove[0].limit == 'number' ? remove[0].limit : 1;","  // Create flag value","  this.flags = this.limit == 1 ? 1 : 0;","// To Binary","Remove.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // ZERO","    + Buffer.byteLength(this.ns) + 1 // namespace","    + 4   // Flags","  );","  // Add header to buffers","  buffers.push(header);","  // Total length of the message","  var totalLength = header.length;","  // Serialize the selector","  var selector = this.bson.serialize(this.q","  // Index in header buffer","  var index = 0;","  // Write header length","  header[index + 3] = (totalLength \u003e\u003e 24) \u0026 0xff;","  // Write header requestId","  header[index + 3] = (this.requestId \u003e\u003e 24) \u0026 0xff;","  // No flags","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Operation","  header[index + 3] = (OP_DELETE \u003e\u003e 24) \u0026 0xff;","  // Write ZERO","  header[index + 3] = (0 \u003e\u003e 24) \u0026 0xff;","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  // Write ZERO","  header[index + 3] = (this.flags \u003e\u003e 24) \u0026 0xff;","  // Return the buffers","  return buffers;"],"Functions":["var Insert = function(requestId, ismaster, bson, ns, documents, options) ","Insert.prototype.toBin = function() ","var Update = function(requestId, ismaster, bson, ns, update, options) ","Update.prototype.toBin = function() ","var Remove = function(requestId, ismaster, bson, ns, remove, options) ","Remove.prototype.toBin = function() "],"Dependencies":["../error"]},{"FileName":"node_modules\\mongodb-core\\lib\\wireprotocol\\shared.js","LineCount":25,"CharCount":693,"Comments":["  // Default to command version of the readPreference","  var readPreference = cmd.readPreference || new ReadPreference('primary');","  // If we have an option readPreference override the command one","  if(options.readPreference) {"],"Functions":["var getReadPreference = function(cmd, options) "],"Dependencies":["../topologies/read_preference"]},{"FileName":"node_modules\\mongoose\\examples\\aggregate\\aggregate.js","LineCount":104,"CharCount":2835,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) throw err;","  // create all of the dummy people","  async.each(data, function(item, cb) {","      // handle error","    }","    // run an aggregate query that will get all of the people who like a given","    // item. To see the full documentation on ways to use the aggregate","    // framework, see http://docs.mongodb.org/manual/core/aggregation/","    Person.aggregate(","      // select the fields we want to deal with","      {$project: {name: 1, likes: 1}},","      // unwind 'likes', which will create a document for each like","      {$unwind: '$likes'},","      // group everything by the like and then add each name with that like to","      // the set for the like","      {$group: {","         /* [","         { _id: { likes: 'the night' }, likers: [ 'alucard' ] },","         { _id: { likes: 'wine' }, likers: [ 'alucard' ] },","         { _id: { likes: 'books' }, likers: [ 'lilly' ] },","         { _id: { likes: 'glasses' }, likers: [ 'alucard' ] },","         { _id: { likes: 'birds' }, likers: [ 'mary' ] },","         { _id: { likes: 'rabbits' }, likers: [ 'bob' ] },","         { _id: { likes: 'cats' }, likers: [ 'lilly', 'mary' ] },","         { _id: { likes: 'dogs' }, likers: [ 'lilly', 'bill' ] },","         { _id: { likes: 'tv' }, likers: [ 'bob' ] },","         { _id: { likes: 'games' }, likers: [ 'bob', 'bill' ] },","         { _id: { likes: 'movies' }, likers: [ 'mary', 'bill' ] }","         ] */","","        cleanup();"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","      function(err, result) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\aggregate\\person.js","LineCount":18,"CharCount":376,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\doc-methods.js","LineCount":78,"CharCount":1202,"Comments":["/**"," * Schema"," */","","var CharacterSchema = Schema({","/**"," * Methods"," */","","CharacterSchema.methods.attack = function() {","/**"," * Character model"," */","","var Character = mongoose.model('Character', CharacterSchema);","/**"," * Connect to the database on localhost with"," * the default port (27017)"," */","","var dbname = 'mongoose-example-doc-methods-' + ((Math.random() * 10000) | 0);","var uri = 'mongodb://localhost/' + dbname;","","console.log('connecting to %s', uri);","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  example();","/**"," * Use case"," */","","function example() {","    link.attack(); // 'Link is attacking'","    done();","/**"," * Clean up"," */","","function done(err) {"],"Functions":["CharacterSchema.methods.attack = function() ","mongoose.connect(uri, function(err) ","function example() ","  Character.create(name: 'Link', health: 100}, function(err, link) {","function done(err) ","  mongoose.connection.db.dropDatabase(function() "],"Dependencies":["mongoose"]},{"FileName":"node_modules\\mongoose\\examples\\express\\connection-sharing\\app.js","LineCount":18,"CharCount":406,"Comments":["var uri = 'mongodb://localhost/mongoose-shared-connection';","global.db = mongoose.createConnection(uri);","  console.log('listening on http://localhost:8000');","});"],"Functions":["app.listen(8000, function() "],"Dependencies":["express","../../../lib","./routes"]},{"FileName":"node_modules\\mongoose\\examples\\express\\connection-sharing\\modelA.js","LineCount":6,"CharCount":144,"Comments":["/* global db */","module.exports = db.model('MyModel', mySchema);"],"Functions":null,"Dependencies":["../../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\express\\connection-sharing\\routes.js","LineCount":21,"CharCount":423,"Comments":[],"Functions":["exports.home = function(req, res, next) ","  model.find(function(err, docs) ","exports.modelName = function(req, res) ","exports.insert = function(req, res, next) ","  model.create(name: 'inserting ' + Date.now()}, function(err, doc) {"],"Dependencies":["./modelA"]},{"FileName":"node_modules\\mongoose\\examples\\geospatial\\geoJSONSchema.js","LineCount":23,"CharCount":591,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  // NOTE : This object must conform *precisely* to the geoJSON specification","  // you cannot embed a geoJSON doc inside a model or anything like that- IT","  // MUST BE VANILLA","  var LocationObject = new Schema({","  // define the index","  LocationObject.index({loc: '2dsphere'});"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\geospatial\\geoJSONexample.js","LineCount":57,"CharCount":1369,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","// note: the type can be Point, LineString, or Polygon","var data = [","mongoose.connect('mongodb://localhost/locations', function(err) {","  if (err) {","    // create all of the dummy locations","    async.each(data, function(item, cb) {","      // create the location we want to search for","      var coords = {type: 'Point', coordinates: [-5, 5]};","      // search for it","      Location.find({loc: {$near: coords}}).limit(1).exec(function(err, res) {"],"Functions":["mongoose.connect('mongodb://localhost/locations', function(err) ","  Location.on('index', function(err) ","    async.each(data, function(item, cb) ","    }, function(err) ","      Location.find(loc: {$near: coords}}).limit(1).exec(function(err, res) {","function cleanup() ","  Location.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\geospatial\\geospatial.js","LineCount":101,"CharCount":2222,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) {","  // create all of the dummy people","  async.each(data, function(item, cb) {","      // handler error","    }","    // let's find the closest person to bob","    Person.find({name: 'bob'}, function(err, res) {","        // we can also just query straight off of the model. For more","        // information about geospatial queries and indexes, see","        // http://docs.mongodb.org/manual/applications/geospatial-indexes/","        var coords = [7, 7];"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    Person.find(name: 'bob'}, function(err, res) {","      res[0].findClosest(function(err, closest) ","        Person.find(loc: {$nearSphere: coords}}).limit(1).exec(function(err, res) {","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\geospatial\\person.js","LineCount":28,"CharCount":677,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({","    // define the geospatial field","    loc: {type: [Number], index: '2d'}","  // define a method to find the closest person","  PersonSchema.methods.findClosest = function(cb) {"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() ","  PersonSchema.methods.findClosest = function(cb) "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\globalschemas\\gs_example.js","LineCount":48,"CharCount":998,"Comments":["// import the global schema, this can be done in any file that needs the model","require('./person.js')();","// grab the person model object","var Person = mongoose.model('Person');","// connect to a server to do a quick write / read example","","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) {","      // make sure to clean things up after we're done","      setTimeout(function() {"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  }, function(err, bill) ","    Person.find(}, function(err, people) {","      people.forEach(function(person) ","      setTimeout(function() ","function cleanup() ","  Person.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\globalschemas\\person.js","LineCount":15,"CharCount":337,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\lean\\lean.js","LineCount":85,"CharCount":1981,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) throw err;","  // create all of the dummy people","  async.each(data, function(item, cb) {","      // handle error","    }","    // lean queries return just plain javascript objects, not","    // MongooseDocuments. This makes them good for high performance read","    // situations","","    // when using .lean() the default is true, but you can explicitly set the","    // value by passing in a boolean value. IE. .lean(false)","    var q = Person.find({age: {$lt: 1000}}).sort('age').limit(2).lean();"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    q.exec(function(err, results) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\lean\\person.js","LineCount":17,"CharCount":376,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\mapreduce\\mapreduce.js","LineCount":101,"CharCount":2659,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) throw err;","  // create all of the dummy people","  async.each(data, function(item, cb) {","      // handle error","    }","    // alright, simple map reduce example. We will find the total ages of each","    // gender","","    // create the options object","    var o = {};","      // in this function, 'this' refers to the current document being","      // processed. Return the (gender, age) tuple using","      /* global emit */","      /* global emit */","      emit(this.gender, this.age);","    // the reduce function receives the array of ages that are grouped by the","    // id, which in this case is the gender","    o.reduce = function(id, ages) {","    // other options that can be specified","","    // o.query = { age : { $lt : 1000 }}; // the query object","    // o.limit = 3; // max number of documents","    // o.keeptemp = true; // default is false, specifies whether to keep temp data","    // o.finalize = someFunc; // function called after reduce","    // o.scope = {}; // the scope variable exposed to map/reduce/finalize","    // o.jsMode = true; // default is false, force execution to stay in JS","    o.verbose = true; // default is false, provide stats on the job","    // o.out = {}; // objects to specify where output goes, by default is","                   // returned, but can also be stored in a new collection","                   // see: http://mongoosejs.com/docs/api.html#model_Model.mapReduce","    Person.mapReduce(o, function(err, results, stats) {"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    o.map = function() ","      // in this function, 'this' refers to the current document being","    // the reduce function receives the array of ages that are grouped by the","    o.reduce = function(id, ages) ","    // o.finalize = someFunc; // function called after reduce","    Person.mapReduce(o, function(err, results, stats) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\mapreduce\\person.js","LineCount":17,"CharCount":356,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-across-three-collections.js","LineCount":135,"CharCount":2522,"Comments":["/**"," * Connect to the db"," */","","var dbname = 'testing_populateAdInfinitum_' + require('../../lib/utils').random();","/**"," * Schemas"," */","","var user = new Schema({","/**"," * example"," */","","mongoose.connection.on('open', function() {","  /**","   * Generate data","   */","","  var userIds = [new ObjectId, new ObjectId, new ObjectId, new ObjectId];","      /**","       * Population","       */","","      BlogPost","        /**","         * Populate the populated documents","         */","","        var opts = {"],"Functions":["mongoose.connection.on('error', function() ","mongoose.connection.on('open', function() ","  User.create(users, function(err) ","    BlogPost.create(blogposts, function(err) ","      .exec(function(err, docs) ","        BlogPost.populate(docs, opts, function(err, docs) ","function done(err) ","  mongoose.connection.db.dropDatabase(function() "],"Dependencies":["assert","../../lib","util"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-basic.js","LineCount":104,"CharCount":1743,"Comments":["/**"," * Console schema"," */","","var consoleSchema = Schema({","/**"," * Game schema"," */","","var gameSchema = Schema({","/**"," * Connect to the console database on localhost with"," * the default port (27017)"," */","","mongoose.connect('mongodb://localhost/console', function(err) {","mongoose.connect('mongodb://localhost/console', function(err) {","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  createData();","/**"," * Data generation"," */","","function createData() {","/**"," * Population"," */","","function example() {"],"Functions":["mongoose.connect('mongodb://localhost/console', function(err) ","function createData() ","    function(err, nintendo64) ","      function(err) ","function example() ","  .exec(function(err, ocinara) ","function done(err) ","  Console.remove(function() ","    Game.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-of-existing-doc.js","LineCount":110,"CharCount":1934,"Comments":["/**"," * Console schema"," */","","var consoleSchema = Schema({","/**"," * Game schema"," */","","var gameSchema = Schema({","/**"," * Connect to the console database on localhost with"," * the default port (27017)"," */","","mongoose.connect('mongodb://localhost/console', function(err) {","mongoose.connect('mongodb://localhost/console', function(err) {","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  createData();","/**"," * Data generation"," */","","function createData() {","/**"," * Population"," */","","function example() {","    // population of existing document","    ocinara.populate('consoles', function(err) {"],"Functions":["mongoose.connect('mongodb://localhost/console', function(err) ","function createData() ","    function(err, nintendo64) ","      function(err) ","function example() ","  .exec(function(err, ocinara) ","    ocinara.populate('consoles', function(err) ","function done(err) ","  Console.remove(function() ","    Game.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-of-multiple-existing-docs.js","LineCount":125,"CharCount":2269,"Comments":["/**"," * Console schema"," */","","var consoleSchema = Schema({","/**"," * Game schema"," */","","var gameSchema = Schema({","/**"," * Connect to the console database on localhost with"," * the default port (27017)"," */","","mongoose.connect('mongodb://localhost/console', function(err) {","mongoose.connect('mongodb://localhost/console', function(err) {","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  createData();","/**"," * Data generation"," */","","function createData() {","/**"," * Population"," */","","function example() {"],"Functions":["mongoose.connect('mongodb://localhost/console', function(err) ","function createData() ","    function(err, nintendo64, superNintendo) ","        function(err) ","function example() ","  .exec(function(err, games) ","    Game.populate(games, options, function(err, games) ","      games.forEach(function(game) ","function done(err) ","  Console.remove(function() ","    Game.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-options.js","LineCount":139,"CharCount":2488,"Comments":["/**"," * Console schema"," */","","var consoleSchema = Schema({","/**"," * Game schema"," */","","var gameSchema = Schema({","/**"," * Connect to the console database on localhost with"," * the default port (27017)"," */","","mongoose.connect('mongodb://localhost/console', function(err) {","mongoose.connect('mongodb://localhost/console', function(err) {","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  createData();","/**"," * Data generation"," */","","function createData() {","/**"," * Population"," */","","function example() {","/**"," * Clean up"," */","","function done(err) {"],"Functions":["mongoose.connect('mongodb://localhost/console', function(err) ","function createData() ","    function(err, nintendo64, superNintendo, xbox360) ","        function(err) ","function example() ","  .exec(function(err, games) ","    games.forEach(function(game) ","function done(err) ","  Console.remove(function() ","    Game.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\population\\population-plain-objects.js","LineCount":107,"CharCount":1848,"Comments":["/**"," * Console schema"," */","","var consoleSchema = Schema({","/**"," * Game schema"," */","","var gameSchema = Schema({","/**"," * Connect to the console database on localhost with"," * the default port (27017)"," */","","mongoose.connect('mongodb://localhost/console', function(err) {","mongoose.connect('mongodb://localhost/console', function(err) {","  // if we failed to connect, abort","  if (err) throw err;","  // we connected ok","  createData();","/**"," * Data generation"," */","","function createData() {","/**"," * Population"," */","","function example() {","  .lean() // just return plain objects, not documents wrapped by mongoose","  .exec(function(err, ocinara) {"],"Functions":["mongoose.connect('mongodb://localhost/console', function(err) ","function createData() ","    function(err, nintendo64) ","        function(err) ","function example() ","  .exec(function(err, ocinara) ","function done(err) ","  Console.remove(function() ","    Game.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\promises\\person.js","LineCount":16,"CharCount":337,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\promises\\promise.js","LineCount":95,"CharCount":2225,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) {","  // create all of the dummy people","  async.each(data, function(item, cb) {","      // handle error","    }","    // create a promise (get one from the query builder)","    var prom = Person.find({age: {$lt: 1000}}).exec();","    // add a callback on the promise. This will be called on both error and","    // complete","    prom.addBack(function() {","    // add a callback that is only called on complete (success) events","    prom.addCallback(function() {","    // add a callback that is only called on err (rejected) events","    prom.addErrback(function() {","    // you can chain things just like in the promise/A+ spec","    // note: each then() is returning a new promise, so the above methods","    // that we defined will all fire after the initial promise is fulfilled","    prom.then(function(people) {","      // just getting the stuff for the next query","      var ids = people.map(function(p) {","      // return the next promise","      return Person.find({_id: {$nin: ids}}).exec();"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    prom.addBack(function() ","    prom.addCallback(function() ","    prom.addErrback(function() ","    prom.then(function(people) ","      var ids = people.map(function(p) ","    }).then(function(oldest) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\querybuilder\\person.js","LineCount":16,"CharCount":337,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\querybuilder\\querybuilder.js","LineCount":80,"CharCount":1738,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) throw err;","  // create all of the dummy people","  async.each(data, function(item, cb) {","    // when querying data, instead of providing a callback, you can instead","    // leave that off and get a query object returned","    var query = Person.find({age: {$lt: 1000}});","    // this allows you to continue applying modifiers to it","    query.sort('birthday');","    // you can chain them together as well","    // a full list of methods can be found:","    // http://mongoosejs.com/docs/api.html#query-js","    query.where('age').gt(21);","    // finally, when ready to execute the query, call the exec() function","    query.exec(function(err, results) {"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    // finally, when ready to execute the query, call the exec() function","    query.exec(function(err, results) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\replicasets\\person.js","LineCount":16,"CharCount":337,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\replicasets\\replica-sets.js","LineCount":72,"CharCount":1515,"Comments":["// import async to make control flow simplier","var async = require('async');","// import the rest of the normal stuff","var mongoose = require('../../lib');","// define some dummy data","var data = [","// to connect to a replica set, pass in the comma delimited uri and optionally","// any connection options such as the rs_name.","var opts = {","mongoose.connect('mongodb://localhost:27018/persons,localhost:27019,localhost:27020', opts, function(err) {","  if (err) throw err;","  // create all of the dummy people","  async.each(data, function(item, cb) {","        // handle error","    }","      // create and delete some data","    var prom = Person.find({age: {$lt: 1000}}).exec();"],"Functions":["mongoose.connect('mongodb://localhost:27018/persons,localhost:27019,localhost:27020', opts, function(err) ","  async.each(data, function(item, cb) ","  }, function(err) ","    prom.then(function(people) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["async","../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\schema\\schema.js","LineCount":120,"CharCount":1827,"Comments":["/**"," * Module dependencies."," */","","var mongoose = require('../../lib'),","/**"," * Schema definition"," */","","// recursive embedded-document schema","// recursive embedded-document schema","","var Comment = new Schema();","/**"," * Accessing a specific schema type by key"," */","","BlogPost.path('date')","/**"," * Pre hook."," */","","BlogPost.pre('save', function(next, done) {","  /* global emailAuthor */","  emailAuthor(done); // some async function","  emailAuthor(done); // some async function","  next();","/**"," * Methods"," */","","BlogPost.methods.findCreator = function(callback) {","/**"," * Plugins"," */","","function slugGenerator(options) {","/**"," * Define model."," */","","mongoose.model('BlogPost', BlogPost);"],"Functions":[".default(function() ",".set(function(v) ","BlogPost.pre('save', function(next, done) ","  emailAuthor(done); // some async function","BlogPost.methods.findCreator = function(callback) ","BlogPost.statics.findByTitle = function(title, callback) ","BlogPost.methods.expressiveQuery = function(creator, date, callback) ","function slugGenerator(options) ","  return function slugGenerator(schema) ","    schema.path(key).set(function(v) "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\schema\\storing-schemas-as-json\\index.js","LineCount":28,"CharCount":569,"Comments":["// modules","var mongoose = require('../../../lib');","// parse json","var raw = require('./schema.json');","// create a schema","var timeSignatureSchema = Schema(raw);","// compile the model","var TimeSignature = mongoose.model('TimeSignatures', timeSignatureSchema);","// create a TimeSignature document","var threeFour = new TimeSignature({","  links: ['http://en.wikipedia.org/wiki/Time_signature'],","  user_id: '518d31a0ef32bbfa853a9814'","// print its description","console.log(threeFour);"],"Functions":null,"Dependencies":["../../../lib","./schema.json"]},{"FileName":"node_modules\\mongoose\\examples\\statics\\person.js","LineCount":21,"CharCount":472,"Comments":["// import the necessary modules","var mongoose = require('../../lib');","// create an export function to encapsulate the model creation","module.exports = function() {","  // define schema","  var PersonSchema = new Schema({","  // define a static","  PersonSchema.statics.findPersonByName = function(name, cb) {"],"Functions":["// create an export function to encapsulate the model creation","module.exports = function() ","  PersonSchema.statics.findPersonByName = function(name, cb) "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\examples\\statics\\statics.js","LineCount":42,"CharCount":841,"Comments":["// import the schema","require('./person.js')();","// grab the person model object","var Person = mongoose.model('Person');","// connect to a server to do a quick write / read example","","mongoose.connect('mongodb://localhost/persons', function(err) {","  if (err) {","        // using the static","        Person.findPersonByName('bill', function(err, result) {"],"Functions":["mongoose.connect('mongodb://localhost/persons', function(err) ","      function(err, bill) ","        Person.findPersonByName('bill', function(err, result) ","function cleanup() ","  Person.remove(function() "],"Dependencies":["../../lib"]},{"FileName":"node_modules\\mongoose\\index.js","LineCount":8,"CharCount":65,"Comments":["/**"," * Export lib/mongoose"," *"," */","","module.exports = require('./lib/');"],"Functions":null,"Dependencies":["./lib/"]},{"FileName":"node_modules\\mongoose\\lib\\ES6Promise.js","LineCount":27,"CharCount":753,"Comments":["/**"," * ES6 Promise wrapper constructor."," *"," * Promises are returned from executed queries. Example:"," *"," *     var query = Candy.find({ bar: true });"," *     var promise = query.exec();"," *"," * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,"," * if native promises are not present) but still"," * support plugging in your own ES6-compatible promises library. Mongoose 5.0"," * will **not** support mpromise."," *"," * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature"," * @api public"," */","","function ES6Promise() {"],"Functions":[" * @param Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature","function ES6Promise() ","ES6Promise.use = function(Promise) "],"Dependencies":null},{"FileName":"node_modules\\mongoose\\lib\\aggregate.js","LineCount":686,"CharCount":17555,"Comments":["/*!"," * Module dependencies"," */","","var util = require('util');","/**"," * Aggregate constructor used for building aggregation pipelines."," *"," * ####Example:"," *"," *     new Aggregate();"," *     new Aggregate({ $project: { a: 1, b: 1 } });"," *     new Aggregate({ $project: { a: 1, b: 1 } }, { $skip: 5 });"," *     new Aggregate([{ $project: { a: 1, b: 1 } }, { $skip: 5 }]);"," *"," * Returned when calling Model.aggregate()."," *"," * ####Example:"," *"," *     Model"," *     .aggregate({ $match: { age: { $gte: 21 }}})"," *     .unwind('tags')"," *     .exec(callback)"," *"," * ####Note:"," *"," * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned)."," * - Requires MongoDB \u003e= 2.1"," * - Mongoose does **not** cast pipeline stages. `new Aggregate({ $match: { _id: '00000000000000000000000a' } });` will not work unless `_id` is a string in the database. Use `new Aggregate({ $match: { _id: mongoose.Types.ObjectId('00000000000000000000000a') } });` instead."," *"," * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/"," * @see driver http://mongodb.github.com/node-mongodb-native/api-generated/collection.html#aggregate"," * @param {Object|Array} [ops] aggregation operator(s) or operator array"," * @api public"," */","","function Aggregate() {","/**"," * Binds this aggregate to a model."," *"," * @param {Model} model the model to which the aggregate is to be bound"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.model = function(model) {","/**"," * Appends new operators to this aggregate pipeline"," *"," * ####Examples:"," *"," *     aggregate.append({ $project: { field: 1 }}, { $limit: 2 });"," *"," *     // or pass an array"," *     var pipeline = [{ $match: { daw: 'Logic Audio X' }} ];"," *     aggregate.append(pipeline);"," *"," * @param {Object} ops operator(s) to append"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.append = function() {","/**"," * Appends a new $project operator to this aggregate pipeline."," *"," * Mongoose query [selection syntax](#query_Query-select) is also supported."," *"," * ####Examples:"," *"," *     // include a, include b, exclude _id"," *     aggregate.project(\"a b -_id\");"," *"," *     // or you may use object notation, useful when"," *     // you have keys already prefixed with a \"-\""," *     aggregate.project({a: 1, b: 1, _id: 0});"," *"," *     // reshaping documents"," *     aggregate.project({"," *         newField: '$b.nested'"," *       , plusTen: { $add: ['$val', 10]}"," *       , sub: {"," *            name: '$a'"," *         }"," *     })"," *"," *     // etc"," *     aggregate.project({ salary_k: { $divide: [ \"$salary\", 1000 ] } });"," *"," * @param {Object|String} arg field specification"," * @see projection http://docs.mongodb.org/manual/reference/aggregation/project/"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.project = function(arg) {","/**"," * Appends a new custom $group operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.group({ _id: \"$department\" });"," *"," * @see $group http://docs.mongodb.org/manual/reference/aggregation/group/"," * @method group"," * @memberOf Aggregate"," * @param {Object} arg $group operator contents"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new custom $match operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.match({ department: { $in: [ \"sales\", \"engineering\" } } });"," *"," * @see $match http://docs.mongodb.org/manual/reference/aggregation/match/"," * @method match"," * @memberOf Aggregate"," * @param {Object} arg $match operator contents"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $skip operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.skip(10);"," *"," * @see $skip http://docs.mongodb.org/manual/reference/aggregation/skip/"," * @method skip"," * @memberOf Aggregate"," * @param {Number} num number of records to skip before next stage"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $limit operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.limit(10);"," *"," * @see $limit http://docs.mongodb.org/manual/reference/aggregation/limit/"," * @method limit"," * @memberOf Aggregate"," * @param {Number} num maximum number of records to pass to the next stage"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $geoNear operator to this aggregate pipeline."," *"," * ####NOTE:"," *"," * **MUST** be used as the first operator in the pipeline."," *"," * ####Examples:"," *"," *     aggregate.near({"," *       near: [40.724, -73.997],"," *       distanceField: \"dist.calculated\", // required"," *       maxDistance: 0.008,"," *       query: { type: \"public\" },"," *       includeLocs: \"dist.location\","," *       uniqueDocs: true,"," *       num: 5"," *     });"," *"," * @see $geoNear http://docs.mongodb.org/manual/reference/aggregation/geoNear/"," * @method near"," * @memberOf Aggregate"," * @param {Object} parameters"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.near = function(arg) {","/*!"," * define methods"," */","","'group match skip limit out'.split(' ').forEach(function($operator) {","/**"," * Appends new custom $unwind operator(s) to this aggregate pipeline."," *"," * Note that the `$unwind` operator requires the path name to start with '$'."," * Mongoose will prepend '$' if the specified field doesn't start '$'."," *"," * ####Examples:"," *"," *     aggregate.unwind(\"tags\");"," *     aggregate.unwind(\"a\", \"b\", \"c\");"," *"," * @see $unwind http://docs.mongodb.org/manual/reference/aggregation/unwind/"," * @param {String} fields the field(s) to unwind"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.unwind = function() {","/**"," * Appends new custom $lookup operator(s) to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.lookup({ from: 'users', localField: 'userId', foreignField: '_id', as: 'users' });"," *"," * @see $lookup https://docs.mongodb.org/manual/reference/operator/aggregation/lookup/#pipe._S_lookup"," * @param {Object} options to $lookup as described in the above link"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.lookup = function(options) {","/**"," * Appends new custom $sample operator(s) to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.sample(3); // Add a pipeline that picks 3 random documents"," *"," * @see $sample https://docs.mongodb.org/manual/reference/operator/aggregation/sample/#pipe._S_sample"," * @param {Number} size number of random documents to pick"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.sample = function(size) {","/**"," * Appends a new $sort operator to this aggregate pipeline."," *"," * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`."," *"," * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending."," *"," * ####Examples:"," *"," *     // these are equivalent"," *     aggregate.sort({ field: 'asc', test: -1 });"," *     aggregate.sort('field -test');"," *"," * @see $sort http://docs.mongodb.org/manual/reference/aggregation/sort/"," * @param {Object|String} arg"," * @return {Aggregate} this"," * @api public"," */","","Aggregate.prototype.sort = function(arg) {","  // TODO refactor to reuse the query builder logic","","  var sort = {};","/**"," * Sets the readPreference option for the aggregation query."," *"," * ####Example:"," *"," *     Model.aggregate(..).read('primaryPreferred').exec(callback)"," *"," * @param {String} pref one of the listed preference options or their aliases"," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences"," */","","Aggregate.prototype.read = function(pref, tags) {","/**"," * Execute the aggregation with explain"," *"," * ####Example:"," *"," *     Model.aggregate(..).explain(callback)"," *"," * @param {Function} callback"," * @return {Promise}"," */","","Aggregate.prototype.explain = function(callback) {","/**"," * Sets the allowDiskUse option for the aggregation query (ignored for \u003c 2.6.0)"," *"," * ####Example:"," *"," *     Model.aggregate(..).allowDiskUse(true).exec(callback)"," *"," * @param {Boolean} value Should tell server it can use hard drive to store data during aggregation."," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/reference/command/aggregate/"," */","","Aggregate.prototype.allowDiskUse = function(value) {","/**"," * Sets the cursor option option for the aggregation query (ignored for \u003c 2.6.0)."," * Note the different syntax below: .exec() returns a cursor object, and no callback"," * is necessary."," *"," * ####Example:"," *"," *     var cursor = Model.aggregate(..).cursor({ batchSize: 1000 }).exec();"," *     cursor.each(function(error, doc) {"," *       // use doc"," *     });"," *"," * @param {Object} options set the cursor batch size"," * @see mongodb http://mongodb.github.io/node-mongodb-native/2.0/api/AggregationCursor.html"," */","","Aggregate.prototype.cursor = function(options) {","/**"," * Adds a [cursor flag](http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag)"," *"," * ####Example:"," *"," *     var cursor = Model.aggregate(..).cursor({ batchSize: 1000 }).exec();"," *     cursor.each(function(error, doc) {"," *       // use doc"," *     });"," *"," * @param {String} flag"," * @param {Boolean} value"," * @see mongodb http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag"," */","","Aggregate.prototype.addCursorFlag = function(flag, value) {","/**"," * Executes the aggregate pipeline on the currently bound Model."," *"," * ####Example:"," *"," *     aggregate.exec(callback);"," *"," *     // Because a promise is returned, the `callback` is optional."," *     var promise = aggregate.exec();"," *     promise.then(..);"," *"," * @see Promise #promise_Promise"," * @param {Function} [callback]"," * @return {Promise}"," * @api public"," */","","Aggregate.prototype.exec = function(callback) {","/**"," * Provides promise for aggregate."," *"," * ####Example:"," *"," *     Model.aggregate(..).then(successCallback, errorCallback);"," *"," * @see Promise #promise_Promise"," * @param {Function} [resolve] successCallback"," * @param {Function} [reject]  errorCallback"," * @return {Promise}"," */","Aggregate.prototype.then = function(resolve, reject) {","/*!"," * Helpers"," */","","/**"," * Checks whether an object is likely a pipeline operator"," *"," * @param {Object} obj object to check"," * @return {Boolean}"," * @api private"," */","","function isOperator(obj) {","/*!"," * Adds the appropriate `$match` pipeline step to the top of an aggregate's"," * pipeline, should it's model is a non-root discriminator type. This is"," * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`."," *"," * @param {Aggregate} aggregate Aggregate to prepare"," */","","function prepareDiscriminatorPipeline(aggregate) {","    // If the first pipeline stage is a match and it doesn't specify a `__t`","    // key, add the discriminator key to it. This allows for potential","    // aggregation query optimizations not to be disturbed by this feature.","    if (originalPipeline[0] \u0026\u0026 originalPipeline[0].$match \u0026\u0026 !originalPipeline[0].$match[discriminatorKey]) {","      // `originalPipeline` is a ref, so there's no need for","      // aggregate._pipeline = originalPipeline","    } else if (originalPipeline[0] \u0026\u0026 originalPipeline[0].$geoNear) {","/*!"," * Exports"," */","","module.exports = Aggregate;"],"Functions":["function Aggregate() ","Aggregate.prototype.model = function(model) ","Aggregate.prototype.append = function() ","Aggregate.prototype.project = function(arg) ","    Object.keys(arg).forEach(function(field) ","    arg.split(/\\s+/).forEach(function(field) ","Aggregate.prototype.near = function(arg) ","'group match skip limit out'.split(' ').forEach(function($operator) ","  Aggregate.prototype[$operator] = function(arg) ","Aggregate.prototype.unwind = function() ","Aggregate.prototype.lookup = function(options) ","Aggregate.prototype.sample = function(size) ","Aggregate.prototype.sort = function(arg) ","    Object.keys(arg).forEach(function(field) ","    arg.split(/\\s+/).forEach(function(field) ","Aggregate.prototype.read = function(pref, tags) ","Aggregate.prototype.explain = function(callback) ","  return new Promise.ES6(function(resolve, reject) ","        .explain(function(error, result) ","Aggregate.prototype.allowDiskUse = function(value) "," *     cursor.each(function(error, doc) ","Aggregate.prototype.cursor = function(options) "," *     cursor.each(function(error, doc) ","Aggregate.prototype.addCursorFlag = function(flag, value) ","Aggregate.prototype.exec = function(callback) ","      return new Promise.ES6(function(resolve) ","          process.nextTick(function() ","        _this._model.collection.emitter.once('queue', function() ","  return new Promise.ES6(function(resolve, reject) ","        .aggregate(_this._pipeline, _this.options || }, function(error, result) {","Aggregate.prototype.then = function(resolve, reject) ","  var promise = new Promise.ES6(function(success, error) ","    _this.exec(function(err, val) ","function isOperator(obj) ","          .some(function(key) "," * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`.","function prepareDiscriminatorPipeline(aggregate) "],"Dependencies":["util","./utils","./promise_provider","./query"]},{"FileName":"node_modules\\mongoose\\lib\\browser.js","LineCount":100,"CharCount":1771,"Comments":["/* eslint-env browser */","","/**"," * The [MongooseError](#error_MongooseError) constructor."," *"," * @method Error"," * @api public"," */","","exports.Error = require('./error');","/**"," * The Mongoose [Schema](#schema_Schema) constructor"," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var Schema = mongoose.Schema;"," *     var CatSchema = new Schema(..);"," *"," * @method Schema"," * @api public"," */","","exports.Schema = require('./schema');","/**"," * The various Mongoose Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var array = mongoose.Types.Array;"," *"," * ####Types:"," *"," * - [ObjectId](#types-objectid-js)"," * - [Buffer](#types-buffer-js)"," * - [SubDocument](#types-embedded-js)"," * - [Array](#types-array-js)"," * - [DocumentArray](#types-documentarray-js)"," *"," * Using this exposed access to the `ObjectId` type, we can construct ids on demand."," *"," *     var ObjectId = mongoose.Types.ObjectId;"," *     var id1 = new ObjectId;"," *"," * @property Types"," * @api public"," */","exports.Types = require('./types');","/**"," * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor"," *"," * @method VirtualType"," * @api public"," */","exports.VirtualType = require('./virtualtype');","/**"," * The various Mongoose SchemaTypes."," *"," * ####Note:"," *"," * _Alias of mongoose.Schema.Types for backwards compatibility._"," *"," * @property SchemaTypes"," * @see Schema.SchemaTypes #schema_Schema.Types"," * @api public"," */","","exports.SchemaType = require('./schematype.js');","/**"," * Internal utils"," *"," * @property utils"," * @api private"," */","","exports.utils = require('./utils.js');","/**"," * The Mongoose browser [Document](#document-js) constructor."," *"," * @method Document"," * @api public"," */","exports.Document = require('./document_provider.js')();","/*!"," * Module exports."," */","","if (typeof window !== 'undefined') {"],"Functions":null,"Dependencies":["./error","mongoose","./schema","mongoose","./types","./virtualtype","./schematype.js","./utils.js","./document_provider.js"]},{"FileName":"node_modules\\mongoose\\lib\\browserDocument.js","LineCount":104,"CharCount":2709,"Comments":["/*!"," * Module dependencies."," */","","var NodeJSDocument = require('./document'),","/**"," * Document constructor."," *"," * @param {Object} obj the values to set"," * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data"," * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose."," * @event `save`: Emitted when the document is successfully saved"," * @api private"," */","","function Document(obj, schema, fields, skipId, skipInit) {","  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id","  schema = this.schema || schema;","  // Generate ObjectId if it is missing, but it requires a scheme","  if (!this.schema \u0026\u0026 schema.options._id) {","  // var schema = this.schema;","","  if (typeof fields === 'boolean') {","  // apply methods","  for (var m in schema.methods) {","  // apply statics","  for (var s in schema.statics) {","/*!"," * Inherit from the NodeJS document"," */","Document.prototype = Object.create(NodeJSDocument.prototype);","/*!"," * Module exports."," */","Document.ValidationError = ValidationError;"],"Functions":["function Document(obj, schema, fields, skipId, skipInit) "],"Dependencies":["./document","events","./error","./schema","./types/objectid","./utils","./internal"]},{"FileName":"node_modules\\mongoose\\lib\\cast.js","LineCount":239,"CharCount":6898,"Comments":["/*!"," * Module dependencies."," */","","var utils = require('./utils');","/**"," * Handles internal casting for queries"," *"," * @param {Schema} schema"," * @param {Object} obj Object to cast"," * @api private"," */","module.exports = function cast(schema, obj) {","        // no casting for Mixed types","        continue;","        // Handle potential embedded array queries","        var split = path.split('.'),","        // Find the part of the var path that is a path of the Schema","        while (j--) {","        // If a substring of the input path resolves to an actual real path...","        if (schematype) {","          // Apply the casting; similar code for $elemMatch in schema/array.js","          if (schematype.caster \u0026\u0026 schematype.caster.schema) {","          // handle geo schemas that use object notation","          // { loc: { long: Number, lat: Number }","","          var geo = '';","            // geojson; cast the coordinates","            value = value.coordinates;"],"Functions":["module.exports = function cast(schema, obj) ","      if (type !== 'string' \u0026\u0026 type !== 'function') ","        throw new Error('Must have a string or function for $where');","      if (type === 'function') ","        any$conditionals = Object.keys(val).some(function(k) ","function _cast(val, numbertype) ","    val.forEach(function(item, i) "],"Dependencies":["./utils","./schema/index"]},{"FileName":"node_modules\\mongoose\\lib\\collection.js","LineCount":207,"CharCount":3755,"Comments":["/*!"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","/**"," * Abstract Collection constructor"," *"," * This is the base class that drivers inherit from and implement."," *"," * @param {String} name name of the collection"," * @param {Connection} conn A MongooseConnection instance"," * @param {Object} opts optional collection options"," * @api public"," */","","function Collection(name, conn, opts) {","/**"," * The collection name"," *"," * @api public"," * @property name"," */","","Collection.prototype.name;","/**"," * The collection name"," *"," * @api public"," * @property collectionName"," */","","Collection.prototype.collectionName;","/**"," * The Connection instance"," *"," * @api public"," * @property conn"," */","","Collection.prototype.conn;","/**"," * Called when the database connects"," *"," * @api private"," */","","Collection.prototype.onOpen = function() {","/**"," * Called when the database disconnects"," *"," * @api private"," */","","Collection.prototype.onClose = function() {","/**"," * Queues a method for later execution when its"," * database connection opens."," *"," * @param {String} name name of the method to queue"," * @param {Array} args arguments to pass to the method when executed"," * @api private"," */","","Collection.prototype.addQueue = function(name, args) {","/**"," * Executes all queued methods and clears the queue."," *"," * @api private"," */","","Collection.prototype.doQueue = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.ensureIndex = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.findAndModify = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.findOne = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.find = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.insert = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.save = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.update = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.getIndexes = function() {","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.mapReduce = function() {","/*!"," * Module exports."," */","","module.exports = Collection;"],"Functions":["function Collection(name, conn, opts) ","Collection.prototype.onOpen = function() ","Collection.prototype.onClose = function() ","Collection.prototype.addQueue = function(name, args) ","Collection.prototype.doQueue = function() ","  process.nextTick(function() ","Collection.prototype.ensureIndex = function() ","Collection.prototype.findAndModify = function() ","Collection.prototype.findOne = function() ","Collection.prototype.find = function() ","Collection.prototype.insert = function() ","Collection.prototype.save = function() ","Collection.prototype.update = function() ","Collection.prototype.getIndexes = function() ","Collection.prototype.mapReduce = function() "],"Dependencies":["events","./connectionstate"]},{"FileName":"node_modules\\mongoose\\lib\\connection.js","LineCount":795,"CharCount":20898,"Comments":["/*!"," * Module dependencies."," */","","var utils = require('./utils');","/*!"," * Protocol prefix regexp."," *"," * @api private"," */","","var rgxProtocol = /^(?:.)+:\\/\\//;","var rgxProtocol = /^(?:.)+:\\/\\//;","","/*!","/*!"," * A list of authentication mechanisms that don't require a password for authentication."," * This is used by the authMechanismDoesNotRequirePassword method."," *"," * @api private"," */","var authMechanismsWhichDontRequirePassword = [","/**"," * Connection constructor"," *"," * For practical reasons, a Connection equals a Db."," *"," * @param {Mongoose} base a mongoose instance"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `connecting`: Emitted when `connection.{open,openSet}()` is executed on this connection."," * @event `connected`: Emitted when this connection successfully connects to the db. May be emitted _multiple_ times in `reconnected` scenarios."," * @event `open`: Emitted after we `connected` and `onOpen` is executed on all of this connections models."," * @event `disconnecting`: Emitted when `connection.close()` was executed."," * @event `disconnected`: Emitted after getting disconnected from the db."," * @event `close`: Emitted after we `disconnected` and `onClose` executed on all of this connections models."," * @event `reconnected`: Emitted after we `connected` and subsequently `disconnected`, followed by successfully another successfull connection."," * @event `error`: Emitted when an error occurs on this connection."," * @event `fullsetup`: Emitted in a replica-set scenario, when primary and at least one seconaries specified in the connection string are connected."," * @event `all`: Emitted in a replica-set scenario, when all nodes specified in the connection string are connected."," * @api public"," */","","function Connection(base) {","/*!"," * Inherit from EventEmitter"," */","","Connection.prototype.__proto__ = EventEmitter.prototype;","/**"," * Connection ready state"," *"," * - 0 = disconnected"," * - 1 = connected"," * - 2 = connecting"," * - 3 = disconnecting"," *"," * Each state change emits its associated event name."," *"," * ####Example"," *"," *     conn.on('connected', callback);"," *     conn.on('disconnected', callback);"," *"," * @property readyState"," * @api public"," */","","Object.defineProperty(Connection.prototype, 'readyState', {","      // loop over the otherDbs on this connection and change their state","      for (var i = 0; i \u003c this.otherDbs.length; i++) {","/**"," * A hash of the collections associated with this connection"," *"," * @property collections"," */","","Connection.prototype.collections;","/**"," * The mongodb.Db instance, set when the connection is opened"," *"," * @property db"," */","","Connection.prototype.db;","/**"," * A hash of the global options that are associated with this connection"," *"," * @property config"," */","","Connection.prototype.config;","/**"," * Opens the connection to MongoDB."," *"," * `options` is a hash with the following possible properties:"," *"," *     config  - passed to the connection config instance"," *     db      - passed to the connection db instance"," *     server  - passed to the connection server instance(s)"," *     replset - passed to the connection ReplSet instance"," *     user    - username for authentication"," *     pass    - password for authentication"," *     auth    - options for authentication (see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate)"," *"," * ####Notes:"," *"," * Mongoose forces the db option `forceServerObjectId` false and cannot be overridden."," * Mongoose defaults the server `auto_reconnect` options to true which can be overridden."," * See the node-mongodb-native driver instance for options that it understands."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * @param {String} connection_string mongodb://uri or the host to which you are connecting"," * @param {String} [database] database name"," * @param {Number} [port] database port"," * @param {Object} [options] options"," * @param {Function} [callback]"," * @see node-mongodb-native https://github.com/mongodb/node-mongodb-native"," * @see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate"," * @api public"," */","","Connection.prototype.open = function(host, database, port, options, callback) {","      host = 'mongodb://' + host;","    }","  // make sure we can open","  if (STATES.disconnected !== this.readyState) {","  // authentication","  if (this.optionsProvideAuthenticationData(options)) {","    // Check hostname for user/pass","  } else if (/@/.test(host) \u0026\u0026 /:/.test(host.split('@')[0])) {","  // global configuration options","  if (options \u0026\u0026 options.config) {","/**"," * Opens the connection to a replica set."," *"," * ####Example:"," *"," *     var db = mongoose.createConnection();"," *     db.openSet(\"mongodb://user:pwd@localhost:27020/testing,mongodb://example.com:27020,mongodb://localhost:27019\");"," *"," * The database name and/or auth need only be included in one URI."," * The `options` is a hash which is passed to the internal driver connection object."," *"," * Valid `options`"," *"," *     db      - passed to the connection db instance"," *     server  - passed to the connection server instance(s)"," *     replset - passed to the connection ReplSetServer instance"," *     user    - username for authentication"," *     pass    - password for authentication"," *     auth    - options for authentication (see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate)"," *     mongos  - Boolean - if true, enables High Availability support for mongos"," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Notes:"," *"," * _If connecting to multiple mongos servers, set the `mongos` option to true._"," *"," *     conn.open('mongodb://mongosA:27501,mongosB:27501', { mongos: true }, cb);"," *"," * Mongoose forces the db option `forceServerObjectId` false and cannot be overridden."," * Mongoose defaults the server `auto_reconnect` options to true which can be overridden."," * See the node-mongodb-native driver instance for options that it understands."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * @param {String} uris comma-separated mongodb:// `URI`s"," * @param {String} [database] database name if not included in `uris`"," * @param {Object} [options] passed to the internal driver"," * @param {Function} [callback]"," * @see node-mongodb-native https://github.com/mongodb/node-mongodb-native"," * @see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate"," * @api public"," */","","Connection.prototype.openSet = function(uris, database, options, callback) {","    uris = 'mongodb://' + uris;","  }","  // authentication","  if (this.optionsProvideAuthenticationData(options)) {","  // global configuration options","  if (options \u0026\u0026 options.config) {","/**"," * error"," *"," * Graceful error handling, passes error to callback"," * if available, else emits error on the connection."," *"," * @param {Error} err"," * @param {Function} callback optional"," * @api private"," */","","Connection.prototype.error = function(err, callback) {","/**"," * Handles opening the connection with the appropriate method based on connection type."," *"," * @param {Function} callback"," * @api private"," */","","Connection.prototype._open = function(emit, callback) {","  // open connection","  this[method](function(err) {","/**"," * Called when the connection is opened"," *"," * @api private"," */","","Connection.prototype.onOpen = function(callback) {","    // avoid having the collection subscribe to our event emitter","    // to prevent 0.3 warning","    for (var i in _this.collections) {","  // re-authenticate if we're not already connected #3871","  if (this._readyState !== STATES.connected \u0026\u0026 this.shouldAuthenticate()) {","/**"," * Closes the connection"," *"," * @param {Function} [callback] optional"," * @return {Connection} self"," * @api public"," */","","Connection.prototype.close = function(callback) {","/**"," * Handles closing the connection"," *"," * @param {Function} callback"," * @api private"," */","Connection.prototype._close = function(callback) {","    case 0: // disconnected","      callback \u0026\u0026 callback();","    case 1: // connected","    case 4: // unauthorized","      this.readyState = STATES.disconnecting;","    case 2: // connecting","      this.once('open', function() {","    case 3: // disconnecting","      if (!callback) {","/**"," * Called when the connection closes"," *"," * @api private"," */","","Connection.prototype.onClose = function() {","  // avoid having the collection subscribe to our event emitter","  // to prevent 0.3 warning","  for (var i in this.collections) {","/**"," * Retrieves a collection, creating it if not cached."," *"," * Not typically needed by applications. Just talk to your collection through your model."," *"," * @param {String} name of the collection"," * @param {Object} [options] optional collection options"," * @return {Collection} collection instance"," * @api public"," */","","Connection.prototype.collection = function(name, options) {","/**"," * Defines or retrieves a model."," *"," *     var mongoose = require('mongoose');"," *     var db = mongoose.createConnection(..);"," *     db.model('Venue', new Schema(..));"," *     var Ticket = db.model('Ticket', new Schema(..));"," *     var Venue = db.model('Venue');"," *"," * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._"," *"," * ####Example:"," *"," *     var schema = new Schema({ name: String }, { collection: 'actor' });"," *"," *     // or"," *"," *     schema.set('collection', 'actor');"," *"," *     // or"," *"," *     var collectionName = 'actor'"," *     var M = conn.model('Actor', schema, collectionName)"," *"," * @param {String} name the model name"," * @param {Schema} [schema] a schema. necessary when defining a model"," * @param {String} [collection] name of mongodb collection (optional) if not given it will be induced from model name"," * @see Mongoose#model #index_Mongoose-model"," * @return {Model} The compiled model"," * @api public"," */","","Connection.prototype.model = function(name, schema, collection) {","  // collection name discovery","  if (typeof schema === 'string') {","    // model exists but we are not subclassing with custom collection","    if (schema \u0026\u0026 schema.instanceOfSchema \u0026\u0026 schema !== this.models[name].schema) {","    // compile a model","    model = this.base.model(name, schema, collection, opts);","    // only the first model with this name is cached to allow","    // for one-offs with custom collection names etc.","    if (!this.models[name]) {","    // subclassing current model with alternate collection","    model = this.models[name];","    // do not cache the sub model","    return sub;","  // lookup model in mongoose module","  model = this.base.models[name];","    // model already uses this connection.","","    // only the first model with this name is cached to allow","    // for one-offs with custom collection names etc.","    if (!this.models[name]) {","/**"," * Returns an array of model names created on this connection."," * @api public"," * @return {Array}"," */","","Connection.prototype.modelNames = function() {","/**"," * @brief Returns if the connection requires authentication after it is opened. Generally if a"," * username and password are both provided than authentication is needed, but in some cases a"," * password is not required."," * @api private"," * @return {Boolean} true if the connection should be authenticated after it is opened, otherwise false."," */","Connection.prototype.shouldAuthenticate = function() {","/**"," * @brief Returns a boolean value that specifies if the current authentication mechanism needs a"," * password to authenticate according to the auth objects passed into the open/openSet methods."," * @api private"," * @return {Boolean} true if the authentication mechanism specified in the options object requires"," *  a password, otherwise false."," */","Connection.prototype.authMechanismDoesNotRequirePassword = function() {","/**"," * @brief Returns a boolean value that specifies if the provided objects object provides enough"," * data to authenticate with. Generally this is true if the username and password are both specified"," * but in some authentication methods, a password is not required for authentication so only a username"," * is required."," * @param {Object} [options] the options object passed into the open/openSet methods."," * @api private"," * @return {Boolean} true if the provided options object provides enough data to authenticate with,"," *   otherwise false."," */","Connection.prototype.optionsProvideAuthenticationData = function(options) {","/*!"," * Module exports."," */","","Connection.STATES = STATES;"],"Functions":["function Connection(base) ","  get: function() ","  set: function(val) ","Connection.prototype.open = function(host, database, port, options, callback) ","          case 'function':","        if (typeof options === 'function') ","      case 'function':","  var promise = new Promise.ES6(function(resolve, reject) ","    _this._open(true, function(error) ","Connection.prototype.openSet = function(uris, database, options, callback) ","      if (typeof options === 'function') ","        case 'function':","  var promise = new Promise.ES6(function(resolve, reject) ","    _this._open(true, function(error) ","Connection.prototype.error = function(err, callback) ","Connection.prototype._open = function(emit, callback) ","  this[method](function(err) ","Connection.prototype.onOpen = function(callback) ","  function open(err, isAuth) ","    _this.db.authenticate(_this.user, _this.pass, _this.options.auth, function(err) ","Connection.prototype.close = function(callback) ","  return new Promise.ES6(function(resolve, reject) ","    _this._close(function(error) ","Connection.prototype._close = function(callback) ","      this.doClose(function(err) ","      this.once('open', function() ","      this.once('close', function() ","Connection.prototype.onClose = function() ","Connection.prototype.collection = function(name, options) ","Connection.prototype.model = function(name, schema, collection) ","Connection.prototype.modelNames = function() ","Connection.prototype.shouldAuthenticate = function() ","Connection.prototype.authMechanismDoesNotRequirePassword = function() ","Connection.prototype.optionsProvideAuthenticationData = function(options) "],"Dependencies":["./utils","events","./schema","tion=require(driver+\"/collection","./connectionstate","./error","muri","./promise_provider","mongoose"]},{"FileName":"node_modules\\mongoose\\lib\\connectionstate.js","LineCount":28,"CharCount":580,"Comments":["/*!"," * Connection states"," */","","var STATES = module.exports = exports = Object.create(null);"],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\mongoose\\lib\\document.js","LineCount":2539,"CharCount":63793,"Comments":["/*!"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","/**"," * Document constructor."," *"," * @param {Object} obj the values to set"," * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data"," * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted on a document after it has was retreived from the db and fully hydrated by Mongoose."," * @event `save`: Emitted when the document is successfully saved"," * @api private"," */","","function Document(obj, fields, skipId) {","/*!"," * Document exposes the NodeJS event emitter API, so you can use"," * `on`, `once`, etc."," */","utils.each(","/**"," * The documents schema."," *"," * @api public"," * @property schema"," */","","Document.prototype.schema;","/**"," * Boolean flag specifying if the document is new."," *"," * @api public"," * @property isNew"," */","","Document.prototype.isNew;","/**"," * The string version of this documents _id."," *"," * ####Note:"," *"," * This getter exists on all documents by default. The getter can be disabled by setting the `id` [option](/docs/guide.html#id) of its `Schema` to false at construction time."," *"," *     new Schema({ name: String }, { id: false });"," *"," * @api public"," * @see Schema options /docs/guide.html#options"," * @property id"," */","","Document.prototype.id;","/**"," * Hash containing current validation errors."," *"," * @api public"," * @property errors"," */","","Document.prototype.errors;","/**"," * Builds the default doc structure"," *"," * @param {Object} obj"," * @param {Object} [fields]"," * @param {Boolean} [skipId]"," * @return {Object}"," * @api private"," * @method $__buildDoc"," * @memberOf Document"," */","","Document.prototype.$__buildDoc = function(obj, fields, skipId) {","  // determine if this doc is a result of a query with","  // excluded fields","","  if (fields \u0026\u0026 utils.getFunctionName(fields.constructor) === 'Object') {","      // support excluding intermediary levels","      if (exclude === true) {","            // apply defaults to all non-excluded fields","            if (p in fields) {","            // selected field","            def = type.getDefault(_this, true);","/**"," * Initializes the document without setters or marking anything modified."," *"," * Called internally after a document is returned from mongodb."," *"," * @param {Object} doc document returned by mongo"," * @param {Function} fn callback"," * @api public"," */","","Document.prototype.init = function(doc, opts, fn) {","  // do not prefix this method with $__ since its","  // used by public hooks","","  if (typeof opts === 'function') {","  // handle docs with populated paths","  // If doc._id is not null or undefined","  if (doc._id !== null \u0026\u0026 doc._id !== undefined \u0026\u0026","/*!"," * Init helper."," *"," * @param {Object} self document instance"," * @param {Object} obj raw mongodb doc"," * @param {Object} doc object we are initializing"," * @api private"," */","","function init(self, obj, doc, prefix) {","      // assume nested object","      if (!doc[i]) {","      // mark as hydrated","      if (!self.isModified(path)) {","/**"," * Stores the current values of the shard keys."," *"," * ####Note:"," *"," * _Shard key values do not / are not allowed to change._"," *"," * @api private"," * @method $__storeShard"," * @memberOf Document"," */","","Document.prototype.$__storeShard = function() {","  // backwards compat","  var key = this.schema.options.shardKey || this.schema.options.shardkey;","          // Explicitly don't take value of dates","        (!val.constructor || utils.getFunctionName(val.constructor) !== 'Date')) {","/*!"," * Set up middleware support"," */","","for (var k in hooks) {","/**"," * Sends an update command with this document `_id` as the query selector."," *"," * ####Example:"," *"," *     weirdCar.update({$inc: {wheels:1}}, { w: 1 }, callback);"," *"," * ####Valid options:"," *"," *  - same as in [Model.update](#model_Model.update)"," *"," * @see Model.update #model_Model.update"," * @param {Object} doc"," * @param {Object} options"," * @param {Function} callback"," * @return {Query}"," * @api public"," */","","Document.prototype.update = function update() {","/**"," * Sets the value of a path, or many paths."," *"," * ####Example:"," *"," *     // path, value"," *     doc.set(path, value)"," *"," *     // object"," *     doc.set({"," *         path  : value"," *       , path2 : {"," *            path  : value"," *         }"," *     })"," *"," *     // on-the-fly cast to number"," *     doc.set(path, value, Number)"," *"," *     // on-the-fly cast to string"," *     doc.set(path, value, String)"," *"," *     // changing strict mode behavior"," *     doc.set(path, value, { strict: false });"," *"," * @param {String|Object} path path or object of key/vals to set"," * @param {Any} val the value to set"," * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for \"on-the-fly\" attributes"," * @param {Object} [options] optionally specify options that modify the behavior of the set"," * @api public"," */","","Document.prototype.set = function(path, val, type, options) {","    // new Document({ key: val })","","    if (path === null || path === void 0) {","              // need to know if plain object - no Buffer, ObjectId, ref, etc","            \u0026\u0026 utils.isObject(path[key])","          // Don't overwrite defaults with undefined keys (gh-3981)","          if (constructing \u0026\u0026 path[key] === void 0 \u0026\u0026","            // Check for setting single embedded schema to document (gh-3535)","            if (this.schema.paths[pathName] \u0026\u0026","  // ensure _strict is honored for obj props","  // docschema = new Schema({ path: { nest: 'string' }})","  // doc.set('path', obj);","  var pathType = this.schema.pathType(path);","    // check for roots that are Mixed types","    var mixed;","        // allow changes to sub paths of mixed types","        mixed = true;","  // When using the $set operator the path to the field must already exist.","  // Else mongodb throws: \"LEFT_SUBFIELD only supports Object\"","","  if (parts.length \u003c= 1) {","      if (this.isDirectModified(subpath) // earlier prefixes that are already","            // marked as dirty have precedence","          || this.get(subpath) === null) {","  // if this doc is being constructed we should not trigger getters","  var priorVal = constructing","    // If the user is trying to set a ref path to a document with","    // the correct model name, treat it as populated","    var didPopulate = false;","/*!"," * ignore"," */","","function cleanModifiedSubpaths(doc, path) {","/**"," * Determine if we should mark this change as modified."," *"," * @return {Boolean}"," * @api private"," * @method $__shouldModify"," * @memberOf Document"," */","","Document.prototype.$__shouldModify = function(pathToMark, path, constructing, parts, schema, val, priorVal) {","    // when a path is not selected in a query, its initial","    // value will be undefined.","    return true;","    // we're just unsetting the default value which was never saved","    return false;","  // gh-3992: if setting a populated field to a doc, don't mark modified","  // if they have the same _id","  if (this.populated(path) \u0026\u0026","    // a path with a default was $unset on the server","    // and the user is setting it to the same value again","    return true;","/**"," * Handles the actual setting of the value and marking the path modified if appropriate."," *"," * @api private"," * @method $__set"," * @memberOf Document"," */","","Document.prototype.$__set = function(pathToMark, path, constructing, parts, schema, val, priorVal) {","    // handle directly setting arrays (gh-1126)","    MongooseArray || (MongooseArray = require('./types/array'));","      // Small hack for gh-1638: if we're overwriting the entire array, ignore","      // paths that were modified before the array overwrite","      this.$__.activePaths.forEach(function(modifiedPath) {","/**"," * Gets a raw value from a path (no getters)"," *"," * @param {String} path"," * @api private"," */","","Document.prototype.getValue = function(path) {","/**"," * Sets a raw value for a path (no casting, setters, transformations)"," *"," * @param {String} path"," * @param {Object} value"," * @api private"," */","","Document.prototype.setValue = function(path, val) {","/**"," * Returns the value of a path."," *"," * ####Example"," *"," *     // path"," *     doc.get('age') // 47"," *"," *     // dynamic casting to a string"," *     doc.get('age', String) // \"47\""," *"," * @param {String} path"," * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for on-the-fly attributes"," * @api public"," */","","Document.prototype.get = function(path, type) {","  // Check if this path is populated - don't apply getters if it is,","  // because otherwise its a nested object. See gh-3357","  if (schema \u0026\u0026 !this.populated(path)) {","/**"," * Returns the schematype for the given `path`."," *"," * @param {String} path"," * @api private"," * @method $__path"," * @memberOf Document"," */","","Document.prototype.$__path = function(path) {","/**"," * Marks the path as having pending changes to write to the db."," *"," * _Very helpful when using [Mixed](./schematypes.html#mixed) types._"," *"," * ####Example:"," *"," *     doc.mixed.type = 'changed';"," *     doc.markModified('mixed.type');"," *     doc.save() // changes to mixed.type are now persisted"," *"," * @param {String} path the path to mark modified"," * @api public"," */","","Document.prototype.markModified = function(path) {","/**"," * Clears the modified state on the specified path."," *"," * ####Example:"," *"," *     doc.foo = 'bar';"," *     doc.unmarkModified('foo');"," *     doc.save() // changes to foo will not be persisted"," *"," * @param {String} path the path to unmark modified"," * @api public"," */","","Document.prototype.unmarkModified = function(path) {","/**"," * Returns the list of paths that have been modified."," *"," * @return {Array}"," * @api public"," */","","Document.prototype.modifiedPaths = function() {","/**"," * Returns true if this document was modified, else false."," *"," * If `path` is given, checks if a path or any full path containing `path` as part of its path chain has been modified."," *"," * ####Example"," *"," *     doc.set('documents.0.title', 'changed');"," *     doc.isModified()                      // true"," *     doc.isModified('documents')           // true"," *     doc.isModified('documents.0.title')   // true"," *     doc.isModified('documents otherProp') // true"," *     doc.isDirectModified('documents')     // false"," *"," * @param {String} [path] optional"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isModified = function(paths) {","/**"," * Checks if a path is set to its default."," *"," * ####Example"," *"," *     MyModel = mongoose.model('test', { name: { type: String, default: 'Val '} });"," *     var m = new MyModel();"," *     m.$isDefault('name');               // true"," *"," * @param {String} [path]"," * @return {Boolean}"," * @method $isDefault"," * @api public"," */","","Document.prototype.$isDefault = function(path) {","/**"," * Returns true if `path` was directly set and modified, else false."," *"," * ####Example"," *"," *     doc.set('documents.0.title', 'changed');"," *     doc.isDirectModified('documents.0.title') // true"," *     doc.isDirectModified('documents') // false"," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isDirectModified = function(path) {","/**"," * Checks if `path` was initialized."," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isInit = function(path) {","/**"," * Checks if `path` was selected in the source query which initialized this document."," *"," * ####Example"," *"," *     Thing.findOne().select('name').exec(function (err, doc) {"," *        doc.isSelected('name') // true"," *        doc.isSelected('age')  // false"," *     })"," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isSelected = function isSelected(path) {","      // only _id was selected.","      return this.$__.selected._id === 0;","/**"," * Executes registered validation rules for this document."," *"," * ####Note:"," *"," * This method is called `pre` save and if a validation rule is violated, [save](#model_Model-save) is aborted and the error is returned to your `callback`."," *"," * ####Example:"," *"," *     doc.validate(function (err) {"," *       if (err) handleError(err);"," *       else // validation passed"," *     });"," *"," * @param {Object} optional options internal options"," * @param {Function} callback optional callback called after validation completes, passing an error if one occurred"," * @return {Promise} Promise"," * @api public"," */","","Document.prototype.validate = function(options, callback) {","/*!"," * ignore"," */","","function _getPathsToValidate(doc) {","  // only validate required fields when necessary","  var paths = Object.keys(doc.$__.activePaths.states.require).filter(function(path) {","  // gh-661: if a whole array is modified, make sure to run validation on all","  // the children as well","  for (var i = 0; i \u003c paths.length; ++i) {","/*!"," * ignore"," */","","Document.prototype.$__validate = function(callback) {","        // Make sure cast errors persist","        if (!_this.__parent \u0026\u0026 err.errors[key] instanceof MongooseError.CastError) {","  // only validate required fields when necessary","  var paths = _getPathsToValidate(this);","      // If user marked as invalid or there was a cast error, don't validate","      if (!_this.$isValid(path)) {","/**"," * Executes registered validation rules (skipping asynchronous validators) for this document."," *"," * ####Note:"," *"," * This method is useful if you need synchronous validation."," *"," * ####Example:"," *"," *     var err = doc.validateSync();"," *     if ( err ){"," *       handleError( err );"," *     } else {"," *       // validation passed"," *     }"," *"," * @param {Array|string} pathsToValidate only validate the given paths"," * @return {MongooseError|undefined} MongooseError if there are errors during validation, or undefined if there is no error."," * @api public"," */","","Document.prototype.validateSync = function(pathsToValidate) {","  // only validate required fields when necessary","  var paths = _getPathsToValidate(this);","      // Make sure cast errors persist","      if (err.errors[key] instanceof MongooseError.CastError) {","/**"," * Marks a path as invalid, causing validation to fail."," *"," * The `errorMsg` argument will become the message of the `ValidationError`."," *"," * The `value` argument (if passed) will be available through the `ValidationError.value` property."," *"," *     doc.invalidate('size', 'must be less than 20', 14);",""," *     doc.validate(function (err) {"," *       console.log(err)"," *       // prints"," *       { message: 'Validation failed',"," *         name: 'ValidationError',"," *         errors:"," *          { size:"," *             { message: 'must be less than 20',"," *               name: 'ValidatorError',"," *               path: 'size',"," *               type: 'user defined',"," *               value: 14 } } }"," *     })"," *"," * @param {String} path the field to invalidate"," * @param {String|Error} errorMsg the error which states the reason `path` was invalid"," * @param {Object|String|Number|any} value optional invalid value"," * @param {String} [kind] optional `kind` property for the error"," * @return {ValidationError} the current ValidationError, with all currently invalidated paths"," * @api public"," */","","Document.prototype.invalidate = function(path, err, val, kind) {","/**"," * Marks a path as valid, removing existing validation errors."," *"," * @param {String} path the field to mark as valid"," * @api private"," * @method $markValid"," * @receiver Document"," */","","Document.prototype.$markValid = function(path) {","/**"," * Checks if a path is invalid"," *"," * @param {String} path the field to check"," * @method $isValid"," * @api private"," * @receiver Document"," */","","Document.prototype.$isValid = function(path) {","/**"," * Resets the internal modified state of this document."," *"," * @api private"," * @return {Document}"," * @method $__reset"," * @memberOf Document"," */","","Document.prototype.$__reset = function reset() {","  // clear atomics","  this.$__dirty().forEach(function(dirt) {","  // Clear 'dirty' cache","  this.$__.activePaths.clear('modify');","/**"," * Returns this documents dirty paths / vals."," *"," * @api private"," * @method $__dirty"," * @memberOf Document"," */","","Document.prototype.$__dirty = function() {","  // gh-2558: if we had to set a default and the value is not undefined,","  // we have to save as well","  all = all.concat(this.$__.activePaths.map('default', function(path) {","  // Sort dirty paths in a flat hierarchy.","  all.sort(function(a, b) {","  // Ignore \"foo.a\" if \"foo\" is dirty already.","  var minimal = [],","      // special case for top level MongooseArrays","      if (top.value \u0026\u0026 top.value._atomics \u0026\u0026 top.value.hasAtomics()) {","        // the `top` array itself and a sub path of `top` are being modified.","        // the only way to honor all of both modifications is through a $set","        // of entire array.","        top.value._atomics = {};","/*!"," * Compiles schemas."," */","","function compile(tree, proto, prefix, options) {","// gets descriptors for all properties of `object`","// makes all properties non-enumerable to match previous behavior to #2211","function getOwnPropertyDescriptors(object) {","/*!"," * Defines the accessor named prop on the incoming prototype."," */","","function defineKey(prop, subprops, prototype, prefix, keys, options) {","          // save scope for nested getters/setters","          if (!prefix) {","          // shadow inherited getters from sub-objects so","          // thing.nested.nested.nested... doesn't occur (gh-366)","          var i = 0,","            // over-write the parents getter without triggering it","            Object.defineProperty(nested, keys[i], {","              enumerable: false,    // It doesn't show up.","              writable: true,       // We can set it later.","              configurable: true,   // We can Object.defineProperty again.","              value: undefined      // It shadows its parent.","            });","/**"," * Assigns/compiles `schema` into this documents prototype."," *"," * @param {Schema} schema"," * @api private"," * @method $__setSchema"," * @memberOf Document"," */","","Document.prototype.$__setSchema = function(schema) {","/**"," * Get active path that were changed and are arrays"," *"," * @api private"," * @method $__getArrayPathsToValidate"," * @memberOf Document"," */","","Document.prototype.$__getArrayPathsToValidate = function() {","  // validate all document arrays.","  return this.$__.activePaths","/**"," * Get all subdocs (by bfs)"," *"," * @api private"," * @method $__getAllSubdocs"," * @memberOf Document"," */","","Document.prototype.$__getAllSubdocs = function() {","/**"," * Executes methods queued from the Schema definition"," *"," * @api private"," * @method $__registerHooksFromSchema"," * @memberOf Document"," */","","Document.prototype.$__registerHooksFromSchema = function() {","  // we are only interested in 'pre' hooks, and group by point-cut","  var toWrap = q.reduce(function(seed, pair) {","  // 'post' hooks are simpler","  toWrap.post.forEach(function(args) {","  // 'init' should be synchronous on subdocuments","  if (toWrap.init \u0026\u0026 _this instanceof Embedded) {","    // Set hooks also need to be sync re: gh-3479","    if (toWrap.set.pre) {","    // this is so we can wrap everything into a promise;","    var newName = ('$__original_' + pointCut);","            // gh-2633: since VersionError is very generic, take the","            // stack trace of the original save() function call rather","            // than the async trace","            if (error instanceof VersionError) {","          // There may be multiple results and promise libs other than","          // mpromise don't support passing multiple values to `resolve()`","          $results = Array.prototype.slice.call(arguments, 1);","  // emit on the Model if listening","  if (this.listeners('error').length) {","/**"," * Internal helper for toObject() and toJSON() that doesn't manipulate options"," *"," * @api private"," * @method $toObject"," * @memberOf Document"," */","","Document.prototype.$toObject = function(options, json) {","    // populated paths that we set to a document","    return clone(this._id, options);","  // If we're calling toObject on a populated doc, we may want to skip","  // depopulated on the top level","  if (options \u0026\u0026 options._skipDepopulateTopLevel) {","  // When internally saving this document we always pass options,","  // bypassing the custom schema options.","  if (!(options \u0026\u0026 utils.getFunctionName(options.constructor) === 'Object') ||","  // remember the root transform function","  // to save it from being overwritten by sub-transform functions","  var originalTransform = options.transform;","    // applyGetters for paths will add nested empty objects;","    // if minimize is set, we need to remove them.","    if (options.minimize) {","  // In the case where a subdocument has its own transform function, we need to","  // check and see if the parent has a transform (options.transform) and if the","  // child schema has a transform (this.schema.options.toObject) In this case,","  // we need to adjust options.transform to be the child schema's transform and","  // not the parent schema's","  if (transform === true ||","/**"," * Converts this document into a plain javascript object, ready for storage in MongoDB."," *"," * Buffers are converted to instances of [mongodb.Binary](http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html) for proper storage."," *"," * ####Options:"," *"," * - `getters` apply all getters (path and virtual getters)"," * - `virtuals` apply virtual getters (can override `getters` option)"," * - `minimize` remove empty objects (defaults to true)"," * - `transform` a transform function to apply to the resulting document before returning"," * - `depopulate` depopulate any populated paths, replacing them with their original refs (defaults to false)"," * - `versionKey` whether to include the version key (defaults to true)"," * - `retainKeyOrder` keep the order of object keys. If this is set to true, `Object.keys(new Doc({ a: 1, b: 2}).toObject())` will always produce `['a', 'b']` (defaults to false)"," *"," * ####Getters/Virtuals"," *"," * Example of only applying path getters"," *"," *     doc.toObject({ getters: true, virtuals: false })"," *"," * Example of only applying virtual getters"," *"," *     doc.toObject({ virtuals: true })"," *"," * Example of applying both path and virtual getters"," *"," *     doc.toObject({ getters: true })"," *"," * To apply these options to every document of your schema by default, set your [schemas](#schema_Schema) `toObject` option to the same argument."," *"," *     schema.set('toObject', { virtuals: true })"," *"," * ####Transform"," *"," * We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional `transform` function."," *"," * Transform functions receive three arguments"," *"," *     function (doc, ret, options) {}"," *"," * - `doc` The mongoose document which is being converted"," * - `ret` The plain object representation which has been converted"," * - `options` The options in use (either schema options or the options passed inline)"," *"," * ####Example"," *"," *     // specify the transform schema option"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       // remove the _id of every document before returning the result"," *       delete ret._id;"," *       return ret;"," *     }"," *"," *     // without the transformation in the schema"," *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }"," *"," *     // with the transformation"," *     doc.toObject(); // { name: 'Wreck-it Ralph' }"," *"," * With transformations we can do a lot more than remove properties. We can even return completely new customized objects:"," *"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       return { movie: ret.name }"," *     }"," *"," *     // without the transformation in the schema"," *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }"," *"," *     // with the transformation"," *     doc.toObject(); // { movie: 'Wreck-it Ralph' }"," *"," * _Note: if a transform function returns `undefined`, the return value will be ignored._"," *"," * Transformations may also be applied inline, overridding any transform set in the options:"," *"," *     function xform (doc, ret, options) {"," *       return { inline: ret.name, custom: true }"," *     }"," *"," *     // pass the transform as an inline option"," *     doc.toObject({ transform: xform }); // { inline: 'Wreck-it Ralph', custom: true }"," *"," * _Note: if you call `toObject` and pass any options, the transform declared in your schema options will __not__ be applied. To force its application pass `transform: true`_"," *"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.hide = '_id';"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       if (options.hide) {"," *         options.hide.split(' ').forEach(function (prop) {"," *           delete ret[prop];"," *         });"," *       }"," *       return ret;"," *     }"," *"," *     var doc = new Doc({ _id: 'anId', secret: 47, name: 'Wreck-it Ralph' });"," *     doc.toObject();                                        // { secret: 47, name: 'Wreck-it Ralph' }"," *     doc.toObject({ hide: 'secret _id' });                  // { _id: 'anId', secret: 47, name: 'Wreck-it Ralph' }"," *     doc.toObject({ hide: 'secret _id', transform: true }); // { name: 'Wreck-it Ralph' }"," *"," * Transforms are applied _only to the document and are not applied to sub-documents_."," *"," * Transforms, like all of these options, are also available for `toJSON`."," *"," * See [schema options](/docs/guide.html#toObject) for some more details."," *"," * _During save, no custom options are applied to the document before being sent to the database._"," *"," * @param {Object} [options]"," * @return {Object} js object"," * @see mongodb.Binary http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html"," * @api public"," */","","Document.prototype.toObject = function(options) {","/*!"," * Minimizes an object, removing undefined values and empty objects"," *"," * @param {Object} object to minimize"," * @return {Object}"," */","","function minimize(obj) {","/*!"," * Applies virtuals properties to `json`."," *"," * @param {Document} self"," * @param {Object} json"," * @param {String} type either `virtuals` or `paths`"," * @return {Object} `json`"," */","","function applyGetters(self, json, type, options) {","/**"," * The return value of this method is used in calls to JSON.stringify(doc)."," *"," * This method accepts the same options as [Document#toObject](#document_Document-toObject). To apply the options to every document of your schema by default, set your [schemas](#schema_Schema) `toJSON` option to the same argument."," *"," *     schema.set('toJSON', { virtuals: true })"," *"," * See [schema options](/docs/guide.html#toJSON) for details."," *"," * @param {Object} options"," * @return {Object}"," * @see Document#toObject #document_Document-toObject"," * @api public"," */","","Document.prototype.toJSON = function(options) {","/**"," * Helper for console.log"," *"," * @api public"," */","","Document.prototype.inspect = function(options) {","/**"," * Helper for console.log"," *"," * @api public"," * @method toString"," */","","Document.prototype.toString = function() {","/**"," * Returns true if the Document stores the same data as doc."," *"," * Documents are considered equal when they have matching `_id`s, unless neither"," * document has an `_id`, in which case this function falls back to using"," * `deepEqual()`."," *"," * @param {Document} doc a document to compare"," * @return {Boolean}"," * @api public"," */","","Document.prototype.equals = function(doc) {","/**"," * Populates document references, executing the `callback` when complete."," * If you want to use promises instead, use this function with"," * [`execPopulate()`](#document_Document-execPopulate)"," *"," * ####Example:"," *"," *     doc"," *     .populate('company')"," *     .populate({"," *       path: 'notes',"," *       match: /airline/,"," *       select: 'text',"," *       model: 'modelName'"," *       options: opts"," *     }, function (err, user) {"," *       assert(doc._id === user._id) // the document itself is passed"," *     })"," *"," *     // summary"," *     doc.populate(path)                   // not executed"," *     doc.populate(options);               // not executed"," *     doc.populate(path, callback)         // executed"," *     doc.populate(options, callback);     // executed"," *     doc.populate(callback);              // executed"," *     doc.populate(options).execPopulate() // executed, returns promise"," *"," *"," * ####NOTE:"," *"," * Population does not occur unless a `callback` is passed *or* you explicitly"," * call `execPopulate()`."," * Passing the same path a second time will overwrite the previous path options."," * See [Model.populate()](#model_Model.populate) for explaination of options."," *"," * @see Model.populate #model_Model.populate"," * @see Document.execPopulate #document_Document-execPopulate"," * @param {String|Object} [path] The path to populate or an options object"," * @param {Function} [callback] When passed, population is invoked"," * @api public"," * @return {Document} this"," */","","Document.prototype.populate = function populate() {","  // allow `doc.populate(callback)`","  if (args.length) {","    // use hash to remove duplicate paths","    var res = utils.populate.apply(null, args);","/**"," * Explicitly executes population and returns a promise. Useful for ES2015"," * integration."," *"," * ####Example:"," *"," *     var promise = doc."," *       populate('company')."," *       populate({"," *         path: 'notes',"," *         match: /airline/,"," *         select: 'text',"," *         model: 'modelName'"," *         options: opts"," *       })."," *       execPopulate();"," *"," *     // summary"," *     doc.execPopulate().then(resolve, reject);"," *"," *"," * @see Document.populate #document_Document-populate"," * @api public"," * @return {Promise} promise that resolves to the document when population is done"," */","","Document.prototype.execPopulate = function() {","/**"," * Gets _id(s) used during population of the given `path`."," *"," * ####Example:"," *"," *     Model.findOne().populate('author').exec(function (err, doc) {"," *       console.log(doc.author.name)         // Dr.Seuss"," *       console.log(doc.populated('author')) // '5144cf8050f071d979c118a7'"," *     })"," *"," * If the path was not populated, undefined is returned."," *"," * @param {String} path"," * @return {Array|ObjectId|Number|Buffer|String|undefined}"," * @api public"," */","","Document.prototype.populated = function(path, val, options) {","  // val and options are internal","","  if (val === null || val === void 0) {","  // internal","","  if (val === true) {","/**"," * Takes a populated field and returns it to its unpopulated state."," *"," * ####Example:"," *"," *     Model.findOne().populate('author').exec(function (err, doc) {"," *       console.log(doc.author.name); // Dr.Seuss"," *       console.log(doc.depopulate('author'));"," *       console.log(doc.author); // '5144cf8050f071d979c118a7'"," *     })"," *"," * If the path was not populated, this is a no-op."," *"," * @param {String} path"," * @see Document.populate #document_Document-populate"," * @api public"," */","","Document.prototype.depopulate = function(path) {","/**"," * Returns the full path to this document."," *"," * @param {String} [path]"," * @return {String}"," * @api private"," * @method $__fullPath"," * @memberOf Document"," */","","Document.prototype.$__fullPath = function(path) {","  // overridden in SubDocuments","  return path || '';","/*!"," * Module exports."," */","","Document.ValidationError = ValidationError;"],"Functions":["function Document(obj, fields, skipId) ","    keys.forEach(function(key) ","    function(emitterFn) ","      Document.prototype[emitterFn] = function() ","Document.prototype.$__buildDoc = function(obj, fields, skipId) ","Document.prototype.init = function(doc, opts, fn) ","  if (typeof opts === 'function') ","function init(self, obj, doc, prefix) ","Document.prototype.$__storeShard = function() ","Document.prototype.update = function update() ","Document.prototype.set = function(path, val, type, options) ","          val.map(function(v)  return v._id; }), popOpts);","        this.populated(path, val.map(function(v)  return v._id; }), popOpts);","function cleanModifiedSubpaths(doc, path) ","Document.prototype.$__shouldModify = function(pathToMark, path, constructing, parts, schema, val, priorVal) ","Document.prototype.$__set = function(pathToMark, path, constructing, parts, schema, val, priorVal) ","      this.$__.activePaths.forEach(function(modifiedPath) ","Document.prototype.getValue = function(path) ","Document.prototype.setValue = function(path, val) ","Document.prototype.get = function(path, type) ","Document.prototype.$__path = function(path) ","Document.prototype.markModified = function(path) ","Document.prototype.unmarkModified = function(path) ","Document.prototype.modifiedPaths = function() ","  return directModifiedPaths.reduce(function(list, path) ","    return list.concat(parts.reduce(function(chains, part, i) ","    }, []).filter(function(chain) ","Document.prototype.isModified = function(paths) ","    return paths.some(function(path) ","Document.prototype.$isDefault = function(path) ","Document.prototype.isDirectModified = function(path) ","Document.prototype.isInit = function(path) "," *     Thing.findOne().select('name').exec(function (err, doc) ","Document.prototype.isSelected = function isSelected(path) "," *     doc.validate(function (err) ","Document.prototype.validate = function(options, callback) ","  if (typeof options === 'function') ","function _getPathsToValidate(doc) ","  var paths = Object.keys(doc.$__.activePaths.states.require).filter(function(path) ","    if (typeof p.originalRequiredValue === 'function') ","      var _subpaths = Object.keys(flat).map(function(p) ","Document.prototype.$__validate = function(callback) ","  var _complete = function() ","    process.nextTick(function() ","  var complete = function() ","  var validatePath = function(path) ","    process.nextTick(function() ","      p.doValidate(val, function(err) ","Document.prototype.validateSync = function(pathsToValidate) ","  paths.forEach(function(path) "," *     doc.validate(function (err) ","Document.prototype.invalidate = function(path, err, val, kind) ","Document.prototype.$markValid = function(path) ","Document.prototype.$isValid = function(path) ","Document.prototype.$__reset = function reset() ","  .map('init', 'modify', function(i) ","  .filter(function(val) ","  .forEach(function(array) ","  this.$__dirty().forEach(function(dirt) ","  this.schema.requiredPaths().forEach(function(path) ","Document.prototype.$__dirty = function() ","  var all = this.$__.activePaths.map('modify', function(path) ","  all = all.concat(this.$__.activePaths.map('default', function(path) ","  all.sort(function(a, b) ","  all.forEach(function(item) ","function compile(tree, proto, prefix, options) ","function getOwnPropertyDescriptors(object) ","  Object.getOwnPropertyNames(object).forEach(function(key) ","function defineKey(prop, subprops, prototype, prefix, keys, options) ","      get: function() ","            value: function() ","            value: function() ","      set: function(v) ","      get: function() ","      set: function(v) ","Document.prototype.$__setSchema = function(schema) ","Document.prototype.$__getArrayPathsToValidate = function() ","  .map('init', 'modify', function(i) ","  .filter(function(val) ","  }).reduce(function(seed, array) ","  .filter(function(doc) ","Document.prototype.$__getAllSubdocs = function() ","  function docReducer(seed, path) ","      val.forEach(function _docReduce(doc) ","Document.prototype.$__registerHooksFromSchema = function() ","  var toWrap = q.reduce(function(seed, pair) ","  toWrap.post.forEach(function(args) ","      toWrap.init.pre.forEach(function(args) ","      toWrap.init.post.forEach(function(args) ","      toWrap.set.pre.forEach(function(args) ","      toWrap.set.post.forEach(function(args) ","  Object.keys(toWrap).forEach(function(pointCut) ","    _this[pointCut] = function wrappedPointCut() ","      if (lastArg \u0026\u0026 typeof lastArg !== 'function') ","      var promise = new Promise.ES6(function(resolve, reject) ","        args.push(function(error) ","            // stack trace of the original save() function call rather","          function() ","            process.nextTick(function() ","          function(error) ","            process.nextTick(function() ","    toWrap[pointCut].pre.forEach(function(args) ","    toWrap[pointCut].post.forEach(function(args) ","Document.prototype.$__handleReject = function handleReject(err) ","Document.prototype.$toObject = function(options, json) ","  // remember the root transform function","  // to save it from being overwritten by sub-transform functions","  // In the case where a subdocument has its own transform function, we need to","      transform = (typeof options.transform === 'function' ? options.transform : opts.transform);","  if (typeof transform === 'function') "," * - `transform` a transform function to apply to the resulting document before returning"," * We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional `transform` function."," * Transform functions receive three arguments"," *     function (doc, ret, options) }"," *     schema.options.toObject.transform = function (doc, ret, options) "," *     schema.options.toObject.transform = function (doc, ret, options) "," * _Note: if a transform function returns `undefined`, the return value will be ignored._"," *     function xform (doc, ret, options) "," *     schema.options.toObject.transform = function (doc, ret, options) "," *         options.hide.split(' ').forEach(function (prop) ","Document.prototype.toObject = function(options) ","function minimize(obj) ","function applyGetters(self, json, type, options) ","Document.prototype.toJSON = function(options) ","Document.prototype.inspect = function(options) ","Document.prototype.toString = function() "," * document has an `_id`, in which case this function falls back to using","Document.prototype.equals = function(doc) "," * If you want to use promises instead, use this function with"," *     }, function (err, user) ","Document.prototype.populate = function populate() ","  if (typeof args[args.length - 1] === 'function') ","Document.prototype.execPopulate = function() ","  return new Promise.ES6(function(resolve, reject) ","    _this.populate(function(error, res) "," *     Model.findOne().populate('author').exec(function (err, doc) ","Document.prototype.populated = function(path, val, options) "," *     Model.findOne().populate('author').exec(function (err, doc) ","Document.prototype.depopulate = function(path) ","Document.prototype.$__fullPath = function(path) "],"Dependencies":["events","./error","./schema/mixed","./schema","./error/objectExpected","./error/strict","./schematype","./error","./utils","util","./internal","hooks-fixed","./promise_provider","./services/common","./types/array","./types/documentarray","./types/documentarray","./types/documentarray"]},{"FileName":"node_modules\\mongoose\\lib\\document_provider.js","LineCount":22,"CharCount":426,"Comments":["/* eslint-env browser */","","/*!"," * Module dependencies."," */","var Document = require('./document.js');","/**"," * Returns the Document constructor for the current context"," *"," * @api private"," */","module.exports = function() {"],"Functions":["module.exports = function() "],"Dependencies":["./document.js","./browserDocument.js"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\browser\\ReadPreference.js","LineCount":6,"CharCount":46,"Comments":["/*!"," * ignore"," */","","module.exports = function() {};"],"Functions":["module.exports = function() };"],"Dependencies":null},{"FileName":"node_modules\\mongoose\\lib\\drivers\\browser\\binary.js","LineCount":13,"CharCount":123,"Comments":["/*!"," * Module dependencies."," */","","var Binary = require('bson').Binary;","/*!"," * Module exports."," */","","module.exports = exports = Binary;"],"Functions":null,"Dependencies":["bson"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\browser\\index.js","LineCount":8,"CharCount":155,"Comments":["/*!"," * Module exports."," */","","exports.Binary = require('./binary');"],"Functions":null,"Dependencies":["./binary","./objectid","./ReadPreference"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\browser\\objectid.js","LineCount":15,"CharCount":229,"Comments":["/*!"," * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId"," * @constructor NodeMongoDbObjectId"," * @see ObjectId"," */","","var ObjectId = require('bson').ObjectID;","/*!"," * ignore"," */","","module.exports = exports = ObjectId;"],"Functions":null,"Dependencies":["bson"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\index.js","LineCount":18,"CharCount":217,"Comments":["/*!"," * ignore"," */","","var driver;","/*!"," * ignore"," */","","module.exports = driver;"],"Functions":null,"Dependencies":["quire(global.MONGOOSE_DRIVER_PATH||\"./node-mongodb-native","./browser"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\ReadPreference.js","LineCount":46,"CharCount":713,"Comments":["/*!"," * Module dependencies."," */","","var mongodb = require('mongodb');","/*!"," * Converts arguments to ReadPrefs the driver"," * can understand."," *"," * @param {String|Array} pref"," * @param {Array} [tags]"," */","","module.exports = function readPref(pref, tags) {"],"Functions":["module.exports = function readPref(pref, tags) "],"Dependencies":["mongodb"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\binary.js","LineCount":9,"CharCount":102,"Comments":["/*!"," * Module dependencies."," */","","var Binary = require('mongodb').Binary;"],"Functions":null,"Dependencies":["mongodb"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js","LineCount":260,"CharCount":6362,"Comments":["/*!"," * Module dependencies."," */","","var MongooseCollection = require('../../collection'),","/**"," * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation."," *"," * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management."," *"," * @inherits Collection"," * @api private"," */","","function NativeCollection() {","/*!"," * Inherit from abstract Collection."," */","","NativeCollection.prototype.__proto__ = MongooseCollection.prototype;","/**"," * Called when the connection opens."," *"," * @api private"," */","","NativeCollection.prototype.onOpen = function() {","  // always get a new collection in case the user changed host:port","  // of parent db instance when re-opening the connection.","","  if (!_this.opts.capped.size) {","    // non-capped","    return _this.conn.db.collection(_this.name, callback);","  // capped","  return _this.conn.db.collection(_this.name, function(err, c) {","    // discover if this collection exists and if it is capped","    _this.conn.db.listCollections({name: _this.name}).toArray(function(err, docs) {","              + ' http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-Convertingacollectiontocapped';","          err = new Error(msg);","        // create","        var opts = utils.clone(_this.opts.capped);","      // likely a strict mode error","      _this.conn.emit('error', err);","/**"," * Called when the connection closes"," *"," * @api private"," */","","NativeCollection.prototype.onClose = function() {","/*!"," * Copy the collection methods and make them subject to queues"," */","","function iter(i) {","      // Collection operation may throw because of max bson size, catch it here","      // See gh-3906","      if (args.length \u003e 0 \u0026\u0026","  // Janky hack to work around gh-3005 until we can get rid of the mongoose","  // collection abstraction","  try {","/**"," * Debug print helper"," *"," * @api public"," * @method $print"," */","","NativeCollection.prototype.$print = function(name, i, args) {","/**"," * Formatter for debug print args"," *"," * @api public"," * @method $format"," */","","NativeCollection.prototype.$format = function(arg) {","/*!"," * Debug print helper"," */","","function map(o) {","/**"," * Retreives information about this collections indexes."," *"," * @param {Function} callback"," * @method getIndexes"," * @api public"," */","","NativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;","/*!"," * Module exports."," */","","module.exports = NativeCollection;"],"Functions":["function NativeCollection() ","NativeCollection.prototype.onOpen = function() ","  return _this.conn.db.collection(_this.name, function(err, c) ","    _this.conn.db.listCollections(name: _this.name}).toArray(function(err, docs) {","  function callback(err, collection) ","NativeCollection.prototype.onClose = function() ","function iter(i) ","  NativeCollection.prototype[i] = function() ","      if (typeof debug === 'function') ","          typeof args[args.length - 1] === 'function') ","    if (typeof Collection.prototype[i] !== 'function') ","NativeCollection.prototype.$print = function(name, i, args) ","  var functionCall = [name, i].join('.');","  console.error(moduleName + functionCall + params);","NativeCollection.prototype.$format = function(arg) ","  if (type === 'function' || type === 'undefined') return '';","function map(o) ","function formatObjectId(x, key) ","  x[key] = inspect: function() { return representation; }};","function formatDate(x, key) ","  x[key] = inspect: function() { return representation; }};","function format(obj, sub) ","      x = inspect: function() { return representation; }};","      x = inspect: function() { return representation; }};"],"Dependencies":["../../collection","mongodb","../../utils"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js","LineCount":387,"CharCount":9736,"Comments":["/*!"," * Module dependencies."," */","","var MongooseConnection = require('../../connection');","/**"," * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) connection implementation."," *"," * @inherits Connection"," * @api private"," */","","function NativeConnection() {","/**"," * Expose the possible connection states."," * @api public"," */","","NativeConnection.STATES = STATES;","/*!"," * Inherits from Connection."," */","","NativeConnection.prototype.__proto__ = MongooseConnection.prototype;","/**"," * Opens the connection to MongoDB."," *"," * @param {Function} fn"," * @return {Connection} this"," * @api private"," */","","NativeConnection.prototype.doOpen = function(fn) {","/**"," * Switches to a different database using the same connection pool."," *"," * Returns a new connection object, with the new db."," *"," * @param {String} name The database name"," * @return {Connection} New Connection Object"," * @api public"," */","","NativeConnection.prototype.useDb = function(name) {","  // we have to manually copy all of the attributes...","  var newConn = new this.constructor();","  // First, when we create another db object, we are not guaranteed to have a","  // db object to work with. So, in the case where we have a db object and it","  // is connected, we can just proceed with setting everything up. However, if","  // we do not have a db or the state is not connected, then we need to wait on","  // the 'open' event of the connection before doing the rest of the setup","  // the 'connected' event is the first time we'll have access to the db object","","  var _this = this;","    // setup the events appropriately","    listen(newConn);","  // push onto the otherDbs stack, this is used when state changes","  this.otherDbs.push(newConn);","/*!"," * Register listeners for important events and bubble appropriately."," */","","function listen(conn) {","    // the driver never emits an `open` event. auto_reconnect still","    // emits a `close` event but since we never get another","    // `open` we can't emit close","    if (conn.db.serverConfig.autoReconnect) {","/**"," * Opens a connection to a MongoDB ReplicaSet."," *"," * See description of [doOpen](#NativeConnection-doOpen) for server options. In this case `options.replset` is also passed to ReplSetServers."," *"," * @param {Function} fn"," * @api private"," * @return {Connection} this"," */","","NativeConnection.prototype.doOpenSet = function(fn) {","/**"," * Closes the connection"," *"," * @param {Function} fn"," * @return {Connection} this"," * @api private"," */","","NativeConnection.prototype.doClose = function(fn) {","/**"," * Prepares default connection options for the node-mongodb-native driver."," *"," * _NOTE: `passed` options take precedence over connection string options._"," *"," * @param {Object} passed options that were passed directly during connection"," * @param {Object} [connStrOptions] options that were passed in the connection string"," * @api private"," */","","NativeConnection.prototype.parseOptions = function(passed, connStrOpts) {","  // mongoose creates its own ObjectIds","  o.db.forceServerObjectId = false;","  // default safe using new nomenclature","  if (!('journal' in o.db || 'j' in o.db ||","/*!"," * Validates the driver db options."," *"," * @param {Object} o"," */","","function validate(o) {","/*!"," * Module exports."," */","","module.exports = NativeConnection;"],"Functions":["function NativeConnection() ","NativeConnection.prototype.doOpen = function(fn) ","  this.db.open(function(err) ","      server.s.server.on('error', function(error) ","NativeConnection.prototype.useDb = function(name) ","  function wireup() ","function listen(conn) ","  conn.db.on('close', function() ","  conn.db.on('error', function(err) ","  conn.db.on('reconnect', function() ","  conn.db.on('timeout', function(err) ","  conn.db.on('open', function(err, db) ","  conn.db.on('parseError', function(err) ","NativeConnection.prototype.doOpenSet = function(fn) ","  this.hosts.forEach(function(server) ","  this.db.on('fullsetup', function() ","  this.db.on('all', function() ","  this.db.open(function(err) ","NativeConnection.prototype.doClose = function(fn) ","NativeConnection.prototype.parseOptions = function(passed, connStrOpts) ","  Object.keys(opts).forEach(function(name) ","function validate(o) "],"Dependencies":["../../connection","mongodb","../../connectionstate","../../error/disconnected"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\index.js","LineCount":8,"CharCount":155,"Comments":["/*!"," * Module exports."," */","","exports.Binary = require('./binary');"],"Functions":null,"Dependencies":["./binary","./objectid","./ReadPreference"]},{"FileName":"node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\objectid.js","LineCount":15,"CharCount":232,"Comments":["/*!"," * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId"," * @constructor NodeMongoDbObjectId"," * @see ObjectId"," */","","var ObjectId = require('mongodb').ObjectId;","/*!"," * ignore"," */","","module.exports = exports = ObjectId;"],"Functions":null,"Dependencies":["mongodb"]},{"FileName":"node_modules\\mongoose\\lib\\error\\browserMissingSchema.js","LineCount":33,"CharCount":643,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/*!"," * MissingSchema Error constructor."," *"," * @inherits MongooseError"," */","","function MissingSchemaError() {","/*!"," * Inherits from MongooseError."," */","","MissingSchemaError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = MissingSchemaError;"],"Functions":["function MissingSchemaError() "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\cast.js","LineCount":43,"CharCount":763,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Casting Error constructor."," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function CastError(type, value, path, reason) {","/*!"," * Inherits from MongooseError."," */","","CastError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = CastError;"],"Functions":["function CastError(type, value, path, reason) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\disconnected.js","LineCount":41,"CharCount":804,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Casting Error constructor."," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function DisconnectedError(connectionString) {","/*!"," * Inherits from MongooseError."," */","","DisconnectedError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = DisconnectedError;"],"Functions":["function DisconnectedError(connectionString) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\divergentArray.js","LineCount":43,"CharCount":1128,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/*!"," * DivergentArrayError constructor."," *"," * @inherits MongooseError"," */","","function DivergentArrayError(paths) {","          // TODO write up a docs page (FAQ) and link to it","","  MongooseError.call(this, msg);","/*!"," * Inherits from MongooseError."," */","","DivergentArrayError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = DivergentArrayError;"],"Functions":["function DivergentArrayError(paths) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\messages.js","LineCount":43,"CharCount":1734,"Comments":["/**"," * The default built-in validator error messages. These may be customized."," *"," *     // customize within each schema or globally like so"," *     var mongoose = require('mongoose');"," *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";"," *"," * As you might have noticed, error messages support basic templating"," *"," * - `{PATH}` is replaced with the invalid document path"," * - `{VALUE}` is replaced with the invalid value"," * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\""," * - `{MIN}` is replaced with the declared min value for the Number.min validator"," * - `{MAX}` is replaced with the declared max value for the Number.max validator"," *"," * Click the \"show code\" link below to see all defaults."," *"," * @static messages"," * @receiver MongooseError"," * @api public"," */","","var msg = module.exports = exports = {};"],"Functions":null,"Dependencies":["mongoose"]},{"FileName":"node_modules\\mongoose\\lib\\error\\missingSchema.js","LineCount":34,"CharCount":656,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/*!"," * MissingSchema Error constructor."," *"," * @inherits MongooseError"," */","","function MissingSchemaError(name) {","/*!"," * Inherits from MongooseError."," */","","MissingSchemaError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = MissingSchemaError;"],"Functions":["function MissingSchemaError(name) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\objectExpected.js","LineCount":36,"CharCount":761,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Strict mode error constructor"," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function ObjectExpectedError(path, val) {","/*!"," * Inherits from MongooseError."," */","","ObjectExpectedError.prototype = Object.create(MongooseError.prototype);"],"Functions":["function ObjectExpectedError(path, val) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\overwriteModel.js","LineCount":32,"CharCount":594,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/*!"," * OverwriteModel Error constructor."," *"," * @inherits MongooseError"," */","","function OverwriteModelError(name) {","/*!"," * Inherits from MongooseError."," */","","OverwriteModelError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = OverwriteModelError;"],"Functions":["function OverwriteModelError(name) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\strict.js","LineCount":36,"CharCount":698,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Strict mode error constructor"," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function StrictModeError(path) {","/*!"," * Inherits from MongooseError."," */","","StrictModeError.prototype = Object.create(MongooseError.prototype);"],"Functions":["function StrictModeError(path) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\validation.js","LineCount":64,"CharCount":1171,"Comments":["/*!"," * Module requirements"," */","","var MongooseError = require('../error.js');","/**"," * Document Validation Error"," *"," * @api private"," * @param {Document} instance"," * @inherits MongooseError"," */","","function ValidationError(instance) {","/*!"," * Inherits from MongooseError."," */","","ValidationError.prototype = Object.create(MongooseError.prototype);","/**"," * Console.log helper"," */","","ValidationError.prototype.toString = function() {","/*!"," * Module exports"," */","","module.exports = exports = ValidationError;"],"Functions":["function ValidationError(instance) ","ValidationError.prototype.toString = function() ","  Object.keys(this.errors).forEach(function(key) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\validator.js","LineCount":82,"CharCount":1608,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Schema validator error"," *"," * @param {Object} properties"," * @inherits MongooseError"," * @api private"," */","","function ValidatorError(properties) {","/*!"," * Inherits from MongooseError"," */","","ValidatorError.prototype = Object.create(MongooseError.prototype);","/*!"," * The object used to define this validator. Not enumerable to hide"," * it from `require('util').inspect()` output re: gh-3925"," */","","Object.defineProperty(ValidatorError.prototype, 'properties', {","/*!"," * Formats error messages"," */","","ValidatorError.prototype.formatMessage = function(msg, properties) {","/*!"," * toString helper"," */","","ValidatorError.prototype.toString = function() {","/*!"," * exports"," */","","module.exports = ValidatorError;"],"Functions":["function ValidatorError(properties) ","ValidatorError.prototype.formatMessage = function(msg, properties) ","ValidatorError.prototype.toString = function() "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error\\version.js","LineCount":34,"CharCount":504,"Comments":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","/**"," * Version Error constructor."," *"," * @inherits MongooseError"," * @api private"," */","","function VersionError(doc) {","/*!"," * Inherits from MongooseError."," */","","VersionError.prototype = Object.create(MongooseError.prototype);","/*!"," * exports"," */","","module.exports = VersionError;"],"Functions":["function VersionError(doc) "],"Dependencies":["../error.js"]},{"FileName":"node_modules\\mongoose\\lib\\error.js","LineCount":56,"CharCount":1287,"Comments":["/**"," * MongooseError constructor"," *"," * @param {String} msg Error message"," * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error"," */","","function MongooseError(msg) {","/*!"," * Inherits from Error."," */","","MongooseError.prototype = Object.create(Error.prototype);","/*!"," * Module exports."," */","","module.exports = exports = MongooseError;","/**"," * The default built-in validator error messages."," *"," * @see Error.messages #error_messages_MongooseError-messages"," * @api public"," */","","MongooseError.messages = require('./error/messages');","// backward compat","MongooseError.Messages = MongooseError.messages;","/*!"," * Expose subclasses"," */","","MongooseError.CastError = require('./error/cast');"],"Functions":["function MongooseError(msg) "],"Dependencies":["./error/messages","./error/cast","./error/validation","./error/validator","./error/version","./error/overwriteModel","./error/missingSchema","./error/divergentArray"]},{"FileName":"node_modules\\mongoose\\lib\\index.js","LineCount":803,"CharCount":19096,"Comments":["/*!"," * Module dependencies."," */","","var Schema = require('./schema'),","/**"," * Mongoose constructor."," *"," * The exports object of the `mongoose` module is an instance of this class."," * Most apps will only use this one instance."," *"," * @api public"," */","","function Mongoose() {","  // default global options","  this.options = {","  var conn = this.createConnection(); // default connection","  conn.models = this.models;","/**"," * Expose connection states for user-land"," *"," */","Mongoose.prototype.STATES = STATES;","/**"," * Sets mongoose options"," *"," * ####Example:"," *"," *     mongoose.set('test', value) // sets the 'test' option to `value`"," *"," *     mongoose.set('debug', true) // enable logging collection methods + arguments to the console"," *"," *     mongoose.set('debug', function(collectionName, methodName, arg1, arg2...) {}); // use custom function to log collection methods + arguments"," *"," * @param {String} key"," * @param {String|Function} value"," * @api public"," */","","Mongoose.prototype.set = function(key, value) {","/**"," * Gets mongoose options"," *"," * ####Example:"," *"," *     mongoose.get('test') // returns the 'test' value"," *"," * @param {String} key"," * @method get"," * @api public"," */","","Mongoose.prototype.get = Mongoose.prototype.set;","/*!"," * ReplSet connection string check."," */","","var rgxReplSet = /^.+,.+$/;","/**"," * Checks if ?replicaSet query parameter is specified in URI"," *"," * ####Example:"," *"," *     checkReplicaSetInUri('localhost:27000?replicaSet=rs0'); // true"," *"," * @param {String} uri"," * @return {boolean}"," * @api private"," */","","var checkReplicaSetInUri = function(uri) {","/**"," * Creates a Connection instance."," *"," * Each `connection` instance maps to a single database. This method is helpful when mangaging multiple db connections."," *"," * If arguments are passed, they are proxied to either [Connection#open](#connection_Connection-open) or [Connection#openSet](#connection_Connection-openSet) appropriately. This means we can pass `db`, `server`, and `replset` options to the driver. _Note that the `safe` option specified in your schema will overwrite the `safe` db option specified here unless you set your schemas `safe` option to `undefined`. See [this](/docs/guide.html#safe) for more information._"," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Example:"," *"," *     // with mongodb:// URI"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database');"," *"," *     // and options"," *     var opts = { db: { native_parser: true }}"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database', opts);"," *"," *     // replica sets"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database');"," *"," *     // and options"," *     var opts = { replset: { strategy: 'ping', rs_name: 'testSet' }}"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database', opts);"," *"," *     // with [host, database_name[, port] signature"," *     db = mongoose.createConnection('localhost', 'database', port)"," *"," *     // and options"," *     var opts = { server: { auto_reconnect: false }, user: 'username', pass: 'mypassword' }"," *     db = mongoose.createConnection('localhost', 'database', port, opts)"," *"," *     // initialize now, connect later"," *     db = mongoose.createConnection();"," *     db.open('localhost', 'database', port, [opts]);"," *"," * @param {String} [uri] a mongodb:// URI"," * @param {Object} [options] options to pass to the driver"," * @param {Object} [options.config] mongoose-specific options"," * @param {Boolean} [options.config.autoIndex] set to false to disable automatic index creation for all models associated with this connection."," * @see Connection#open #connection_Connection-open"," * @see Connection#openSet #connection_Connection-openSet"," * @return {Connection} the created Connection object"," * @api public"," */","","Mongoose.prototype.createConnection = function(uri, options) {","/**"," * Opens the default mongoose connection."," *"," * If arguments are passed, they are proxied to either"," * [Connection#open](#connection_Connection-open) or"," * [Connection#openSet](#connection_Connection-openSet) appropriately."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Example:"," *"," *     mongoose.connect('mongodb://user:pass@localhost:port/database');"," *"," *     // replica sets"," *     var uri = 'mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/mydatabase';"," *     mongoose.connect(uri);"," *"," *     // with options"," *     mongoose.connect(uri, options);"," *"," *     // connecting to multiple mongos"," *     var uri = 'mongodb://hostA:27501,hostB:27501';"," *     var opts = { mongos: true };"," *     mongoose.connect(uri, opts);"," *"," *     // optional callback that gets fired when initial connection completed"," *     var uri = 'mongodb://nonexistent.domain:27000';"," *     mongoose.connect(uri, function(error) {"," *       // if error is truthy, the initial connection failed."," *     })"," *"," * @param {String} uri(s)"," * @param {Object} [options]"," * @param {Function} [callback]"," * @see Mongoose#createConnection #index_Mongoose-createConnection"," * @api public"," * @return {MongooseThenable} pseudo-promise wrapper around this"," */","","Mongoose.prototype.connect = function() {","/**"," * Disconnects all connections."," *"," * @param {Function} [fn] called after all connection close."," * @return {MongooseThenable} pseudo-promise wrapper around this"," * @api public"," */","","Mongoose.prototype.disconnect = function(fn) {","/**"," * Defines a model or retrieves it."," *"," * Models defined on the `mongoose` instance are available to all connection created by the same `mongoose` instance."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *"," *     // define an Actor model with this mongoose instance"," *     mongoose.model('Actor', new Schema({ name: String }));"," *"," *     // create a new connection"," *     var conn = mongoose.createConnection(..);"," *"," *     // retrieve the Actor model"," *     var Actor = conn.model('Actor');"," *"," * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._"," *"," * ####Example:"," *"," *     var schema = new Schema({ name: String }, { collection: 'actor' });"," *"," *     // or"," *"," *     schema.set('collection', 'actor');"," *"," *     // or"," *"," *     var collectionName = 'actor'"," *     var M = mongoose.model('Actor', schema, collectionName)"," *"," * @param {String} name model name"," * @param {Schema} [schema]"," * @param {String} [collection] name (optional, induced from model name)"," * @param {Boolean} [skipInit] whether to skip initialization (defaults to false)"," * @api public"," */","","Mongoose.prototype.model = function(name, schema, collection, skipInit) {","  // handle internal options from connection.model()","  var options;","  // look up schema for the collection.","  if (!this.modelSchemas[name]) {","      // cache it so we only apply plugins once","      this.modelSchemas[name] = schema;","  // connection.model() may be passing a different schema for","  // an existing model name. in this case don't read from cache.","  if (this.models[name] \u0026\u0026 options.cache !== false) {","      // subclass current model with alternate collection","      model = this.models[name];","      // do not cache the sub model","      return sub;","  // ensure a schema exists","  if (!schema) {","  // Apply relevant \"global\" options to the schema","  if (!('pluralization' in schema.options)) schema.options.pluralization = this.options.pluralization;","/**"," * Returns an array of model names created on this instance of Mongoose."," *"," * ####Note:"," *"," * _Does not include names of models created using `connection.model()`._"," *"," * @api public"," * @return {Array}"," */","","Mongoose.prototype.modelNames = function() {","/**"," * Applies global plugins to `schema`."," *"," * @param {Schema} schema"," * @api private"," */","","Mongoose.prototype._applyPlugins = function(schema) {","/**"," * Declares a global plugin executed on all Schemas."," *"," * Equivalent to calling `.plugin(fn)` on each Schema you create."," *"," * @param {Function} fn plugin callback"," * @param {Object} [opts] optional options"," * @return {Mongoose} this"," * @see plugins ./plugins.html"," * @api public"," */","","Mongoose.prototype.plugin = function(fn, opts) {","/**"," * The default connection of the mongoose module."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     mongoose.connect(...);"," *     mongoose.connection.on('error', cb);"," *"," * This is the connection used by default for every model created using [mongoose.model](#index_Mongoose-model)."," *"," * @property connection"," * @return {Connection}"," * @api public"," */","","Mongoose.prototype.__defineGetter__('connection', function() {","/*!"," * Driver depentend APIs"," */","","var driver = global.MONGOOSE_DRIVER_PATH || './drivers/node-mongodb-native';","/*!"," * Connection"," */","","var Connection = require(driver + '/connection');","/*!"," * Collection"," */","","var Collection = require(driver + '/collection');","/**"," * The Mongoose Aggregate constructor"," *"," * @method Aggregate"," * @api public"," */","","Mongoose.prototype.Aggregate = Aggregate;","/**"," * The Mongoose Collection constructor"," *"," * @method Collection"," * @api public"," */","","Mongoose.prototype.Collection = Collection;","/**"," * The Mongoose [Connection](#connection_Connection) constructor"," *"," * @method Connection"," * @api public"," */","","Mongoose.prototype.Connection = Connection;","/**"," * The Mongoose version"," *"," * @property version"," * @api public"," */","","Mongoose.prototype.version = pkg.version;","/**"," * The Mongoose constructor"," *"," * The exports of the mongoose module is an instance of this class."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var mongoose2 = new mongoose.Mongoose();"," *"," * @method Mongoose"," * @api public"," */","","Mongoose.prototype.Mongoose = Mongoose;","/**"," * The Mongoose [Schema](#schema_Schema) constructor"," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var Schema = mongoose.Schema;"," *     var CatSchema = new Schema(..);"," *"," * @method Schema"," * @api public"," */","","Mongoose.prototype.Schema = Schema;","/**"," * The Mongoose [SchemaType](#schematype_SchemaType) constructor"," *"," * @method SchemaType"," * @api public"," */","","Mongoose.prototype.SchemaType = SchemaType;","/**"," * The various Mongoose SchemaTypes."," *"," * ####Note:"," *"," * _Alias of mongoose.Schema.Types for backwards compatibility._"," *"," * @property SchemaTypes"," * @see Schema.SchemaTypes #schema_Schema.Types"," * @api public"," */","","Mongoose.prototype.SchemaTypes = Schema.Types;","/**"," * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor"," *"," * @method VirtualType"," * @api public"," */","","Mongoose.prototype.VirtualType = VirtualType;","/**"," * The various Mongoose Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var array = mongoose.Types.Array;"," *"," * ####Types:"," *"," * - [ObjectId](#types-objectid-js)"," * - [Buffer](#types-buffer-js)"," * - [SubDocument](#types-embedded-js)"," * - [Array](#types-array-js)"," * - [DocumentArray](#types-documentarray-js)"," *"," * Using this exposed access to the `ObjectId` type, we can construct ids on demand."," *"," *     var ObjectId = mongoose.Types.ObjectId;"," *     var id1 = new ObjectId;"," *"," * @property Types"," * @api public"," */","","Mongoose.prototype.Types = Types;","/**"," * The Mongoose [Query](#query_Query) constructor."," *"," * @method Query"," * @api public"," */","","Mongoose.prototype.Query = Query;","/**"," * The Mongoose [Promise](#promise_Promise) constructor."," *"," * @method Promise"," * @api public"," */","","Object.defineProperty(Mongoose.prototype, 'Promise', {","/**"," * Storage layer for mongoose promises"," *"," * @method PromiseProvider"," * @api public"," */","","Mongoose.prototype.PromiseProvider = PromiseProvider;","/**"," * The Mongoose [Model](#model_Model) constructor."," *"," * @method Model"," * @api public"," */","","Mongoose.prototype.Model = Model;","/**"," * The Mongoose [Document](#document-js) constructor."," *"," * @method Document"," * @api public"," */","","Mongoose.prototype.Document = Document;","/**"," * The Mongoose DocumentProvider constructor."," *"," * @method DocumentProvider"," * @api public"," */","","Mongoose.prototype.DocumentProvider = require('./document_provider');","/**"," * The [MongooseError](#error_MongooseError) constructor."," *"," * @method Error"," * @api public"," */","","Mongoose.prototype.Error = require('./error');","/**"," * The Mongoose CastError constructor"," *"," * @method CastError"," * @param {String} type The name of the type"," * @param {Any} value The value that failed to cast"," * @param {String} path The path `a.b.c` in the doc where this cast error occurred"," * @param {Error} [reason] The original error that was thrown"," * @api public"," */","","Mongoose.prototype.CastError = require('./error/cast');","/**"," * The [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver Mongoose uses."," *"," * @property mongo"," * @api public"," */","","Mongoose.prototype.mongo = require('mongodb');","/**"," * The [mquery](https://github.com/aheckmann/mquery) query builder Mongoose uses."," *"," * @property mquery"," * @api public"," */","","Mongoose.prototype.mquery = require('mquery');","/**"," * Wraps the given Mongoose instance into a thenable (pseudo-promise). This"," * is so `connect()` and `disconnect()` can return a thenable while maintaining"," * backwards compatibility."," *"," * @api private"," */","","function MongooseThenable(mongoose, promise) {","/**"," * Ability to use mongoose object as a pseudo-promise so `.connect().then()`"," * and `.disconnect().then()` are viable."," *"," * @param {Function} onFulfilled"," * @param {Function} onRejected"," * @return {Promise}"," * @api private"," */","","MongooseThenable.prototype.then = function(onFulfilled, onRejected) {","/**"," * Ability to use mongoose object as a pseudo-promise so `.connect().then()`"," * and `.disconnect().then()` are viable."," *"," * @param {Function} onFulfilled"," * @param {Function} onRejected"," * @return {Promise}"," * @api private"," */","","MongooseThenable.prototype.catch = function(onRejected) {","/*!"," * The exports object is an instance of Mongoose."," *"," * @api public"," */","","var mongoose = module.exports = exports = new Mongoose;"],"Functions":["function Mongoose() "," *     mongoose.set('debug', function(collectionName, methodName, arg1, arg2...) }); // use custom function to log collection methods + arguments","Mongoose.prototype.set = function(key, value) ","var checkReplicaSetInUri = function(uri) ","Mongoose.prototype.createConnection = function(uri, options) "," *     mongoose.connect(uri, function(error) ","Mongoose.prototype.connect = function() ","Mongoose.prototype.disconnect = function(fn) ","  this.connections.forEach(function(conn) ","    conn.close(function(err) ","  return new MongooseThenable(this, new Promise.ES6(function(resolve, reject) ","Mongoose.prototype.model = function(name, schema, collection, skipInit) ","Mongoose.prototype.modelNames = function() ","Mongoose.prototype._applyPlugins = function(schema) ","Mongoose.prototype.plugin = function(fn, opts) ","Mongoose.prototype.__defineGetter__('connection', function() ","Mongoose.prototype.__defineSetter__('connection', function(v) ","  get: function() ","  set: function(lib) ","function MongooseThenable(mongoose, promise) ","    if (typeof mongoose[key] === 'function' \u0026\u0026 mongoose[key].$hasSideEffects) ","      (function(key) ","        _this[key] = function() ","MongooseThenable.prototype.then = function(onFulfilled, onRejected) ","    return new Promise.ES6(function(resolve, reject) ","MongooseThenable.prototype.catch = function(onRejected) "],"Dependencies":["./schema","./schematype","./virtualtype","./connectionstate","./types","./query","./model","./document","./utils","../package.json","querystring","./aggregate","./promise_provider","mongoose","mongoose","tion=require(driver+\"/connection","tion=require(driver+\"/collection","mongoose","mongoose","mongoose","./document_provider","./error","./error/cast","mongodb","mquery"]},{"FileName":"node_modules\\mongoose\\lib\\internal.js","LineCount":32,"CharCount":877,"Comments":["/*!"," * Dependencies"," */","","var StateMachine = require('./statemachine');","  this.populate = undefined; // what we want to populate in this doc","  this.populated = undefined;// the _ids that have been populated","  this.wasPopulated = false; // if this doc was the result of a population","  this.scope = undefined;","  // embedded docs","  this.ownerDocument = undefined;"],"Functions":["function InternalCache() "],"Dependencies":["./statemachine"]},{"FileName":"node_modules\\mongoose\\lib\\model.js","LineCount":3336,"CharCount":92699,"Comments":["/*!"," * Module dependencies."," */","","var Document = require('./document');","/**"," * Model constructor"," *"," * Provides the interface to MongoDB collections as well as creates document instances."," *"," * @param {Object} doc values with which to create the document"," * @inherits Document http://mongoosejs.com/docs/api.html#document-js"," * @event `error`: If listening to this event, it is emitted when a document was saved without passing a callback and an `error` occurred. If not listening, the event bubbles to the connection used to create this Model."," * @event `index`: Emitted after `Model#ensureIndexes` completes. If an error occurred it is passed with the event."," * @event `index-single-start`: Emitted when an individual index starts within `Model#ensureIndexes`. The fields and options being used to build the index are also passed with the event."," * @event `index-single-done`: Emitted when an individual index finishes within `Model#ensureIndexes`. If an error occurred it is passed with the event. The fields, options, and index name are also passed."," * @api public"," */","","function Model(doc, fields, skipId) {","/*!"," * Inherits from Document."," *"," * All Model.prototype features are available on"," * top level (non-sub) documents."," */","","Model.prototype.__proto__ = Document.prototype;","/**"," * Connection the model uses."," *"," * @api public"," * @property db"," */","","Model.prototype.db;","/**"," * Collection the model uses."," *"," * @api public"," * @property collection"," */","","Model.prototype.collection;","/**"," * The name of the model"," *"," * @api public"," * @property modelName"," */","","Model.prototype.modelName;","/**"," * If this is a discriminator model, `baseModelName` is the name of"," * the base model."," *"," * @api public"," * @property baseModelName"," */","","Model.prototype.baseModelName;","    // send entire doc","    var toObjectOptions = {};","      // documents must have an _id else mongoose won't know","      // what to update later if more changes are made. the user","      // wouldn't know what _id was generated by mongodb either","      // nor would the ObjectId generated my mongodb necessarily","      // match the schema definition.","      setTimeout(function() {","    // Make it possible to retry the insert","    this.$__.inserting = true;","    // Make sure we don't treat it as a new object on error,","    // since it already exists","    this.$__.inserting = false;","/*!"," * ignore"," */","","Model.prototype.$__save = function(options, callback) {","    // was this an update that required a version bump?","    if (_this.$__.version \u0026\u0026 !_this.$__.inserting) {","        // the update failed. pass an error back","        var err = new VersionError(_this);","      // increment version if was successful","      if (doIncrement) {","/**"," * Saves this document."," *"," * ####Example:"," *"," *     product.sold = Date.now();"," *     product.save(function (err, product, numAffected) {"," *       if (err) .."," *     })"," *"," * The callback will receive three parameters"," *"," * 1. `err` if an error occurred"," * 2. `product` which is the saved `product`"," * 3. `numAffected` will be 1 when the document was successfully persisted to MongoDB, otherwise 0. Unless you tweak mongoose's internals, you don't need to worry about checking this parameter for errors - checking `err` is sufficient to make sure your document was properly saved."," *"," * As an extra measure of flow control, save will return a Promise."," * ####Example:"," *     product.save().then(function(product) {"," *        ..."," *     });"," *"," * For legacy reasons, mongoose stores object keys in reverse order on initial"," * save. That is, `{ a: 1, b: 2 }` will be saved as `{ b: 2, a: 1 }` in"," * MongoDB. To override this behavior, set"," * [the `toObject.retainKeyOrder` option](http://mongoosejs.com/docs/api.html#document_Document-toObject)"," * to true on your schema."," *"," * @param {Object} [options] options optional options"," * @param {Object} [options.safe] overrides [schema's safe option](http://mongoosejs.com//docs/guide.html#safe)"," * @param {Boolean} [options.validateBeforeSave] set to false to save without validating."," * @param {Function} [fn] optional callback"," * @return {Promise} Promise"," * @api public"," * @see middleware http://mongoosejs.com/docs/middleware.html"," */","","Model.prototype.save = function(options, fn) {","/*!"," * Determines whether versioning should be skipped for the given path"," *"," * @param {Document} self"," * @param {String} path"," * @return {Boolean} true if versioning should be skipped for the given path"," */","function shouldSkipVersioning(self, path) {","  // Remove any array indexes from the path","  path = path.replace(/\\.\\d+\\./, '.');","/*!"," * Apply the operation to the delta (update) clause as"," * well as track versioning for our where clause."," *"," * @param {Document} self"," * @param {Object} where"," * @param {Object} delta"," * @param {Object} data"," * @param {Mixed} val"," * @param {String} [operation]"," */","","function operand(self, where, delta, data, val, op) {","  // delta","  op || (op = '$set');","  // disabled versioning?","  if (self.schema.options.versionKey === false) return;","  // path excluded from versioning?","  if (shouldSkipVersioning(self, data.path)) return;","  // already marked for versioning?","  if (VERSION_ALL === (VERSION_ALL \u0026 self.$__.version)) return;","      // nothing to do","      return;","  // ensure updates sent with positional notation are","  // editing the correct array element.","  // only increment the version if an array position changes.","  // modifying elements of an array is ok if position does not change.","","  if (op === '$push' || op === '$pushAll' || op === '$addToSet') {","    // potentially changing array positions","    self.increment();","    // $set an array","    self.increment();","    // now handling $set, $unset","    // subpath of array","    self.$__.version = VERSION_WHERE;","/*!"," * Compiles an update and where clause for a `val` with _atomics."," *"," * @param {Document} self"," * @param {Object} where"," * @param {Object} delta"," * @param {Object} data"," * @param {Array} value"," */","","function handleAtomics(self, where, delta, data, value) {","    // $set has precedence over other atomics","    return;","  // legacy support for plugins","","  var atomics = value._atomics,","    // $set","","    if (isMongooseObject(value)) {","/**"," * Produces a special query document of the modified properties used in updates."," *"," * @api private"," * @method $__delta"," * @memberOf Model"," */","","Model.prototype.$__delta = function() {","      // If any array was selected using an $elemMatch projection, we alter the path and where clause","      // NOTE: MongoDB only supports projected $elemMatch on top level array.","      var pathSplit = data.path.split('.');","        // If the selected array entry was modified","        if (pathSplit.length \u003e 1 \u0026\u0026 pathSplit[1] == 0 \u0026\u0026 typeof where[top] === 'undefined') {","        // if the selected array was modified in any other way throw an error","        else {","      // arrays and other custom types (support plugins etc)","      handleAtomics(this, where, delta, data, value);","      // MongooseBuffer","      value = value.toObject();","/*!"," * Determine if array was populated with some form of filter and is now"," * being updated in a manner which could overwrite data unintentionally."," *"," * @see https://github.com/Automattic/mongoose/issues/1334"," * @param {Document} doc"," * @param {String} path"," * @return {String|undefined}"," */","","function checkDivergentArray(doc, path, array) {","  // see if we populated this path","  var pop = doc.populated(path, true);","    // If any array was selected using an $elemMatch projection, we deny the update.","    // NOTE: MongoDB only supports projected $elemMatch on top level array.","    var top = path.split('.')[0];","  // If the array was populated using options that prevented all","  // documents from being returned (match, skip, limit) or they","  // deselected the _id field, $pop and $set of the array are","  // not safe operations. If _id was deselected, we do not know","  // how to remove elements. $pop will pop off the _id from the end","  // of the array in the db which is not guaranteed to be the","  // same as the last element we have here. $set of the entire array","  // would be similarily destructive as we never received all","  // elements of the array and potentially would overwrite data.","  var check = pop.options.match ||","      pop.options.options \u0026\u0026 hasOwnProperty(pop.options.options, 'limit') || // 0 is not permitted","      pop.options.options \u0026\u0026 pop.options.options.skip || // 0 is permitted","      pop.options.select \u0026\u0026 // deselected _id?","      (pop.options.select._id === 0 ||","/**"," * Appends versioning to the where and update clauses."," *"," * @api private"," * @method $__version"," * @memberOf Model"," */","","Model.prototype.$__version = function(where, delta) {","    // this is an insert","    if (key) this.setValue(key, delta[key] = 0);","  // updates","","  // only apply versioning if our versionKey was selected. else","  // there is no way to select the correct version. we could fail","  // fast here and force them to include the versionKey but","  // thats a bit intrusive. can we do this automatically?","  if (!this.isSelected(key)) {","  // $push $addToSet don't need the where clause set","  if (VERSION_WHERE === (VERSION_WHERE \u0026 this.$__.version)) {","/**"," * Signal that we desire an increment of this documents version."," *"," * ####Example:"," *"," *     Model.findById(id, function (err, doc) {"," *       doc.increment();"," *       doc.save(function (err) { .. })"," *     })"," *"," * @see versionKeys http://mongoosejs.com/docs/guide.html#versionKey"," * @api public"," */","","Model.prototype.increment = function increment() {","/**"," * Returns a query object which applies shardkeys if they exist."," *"," * @api private"," * @method $__where"," * @memberOf Model"," */","","Model.prototype.$__where = function _where(where) {","/**"," * Removes this document from the db."," *"," * ####Example:"," *     product.remove(function (err, product) {"," *       if (err) return handleError(err);"," *       Product.findById(product._id, function (err, product) {"," *         console.log(product) // null"," *       })"," *     })"," *"," *"," * As an extra measure of flow control, remove will return a Promise (bound to `fn` if passed) so it could be chained, or hooked to recive errors"," *"," * ####Example:"," *     product.remove().then(function (product) {"," *        ..."," *     }).onRejected(function (err) {"," *        assert.ok(err)"," *     })"," *"," * @param {function(err,product)} [fn] optional callback"," * @return {Promise} Promise"," * @api public"," */","","Model.prototype.remove = function remove(options, fn) {","/**"," * Returns another Model instance."," *"," * ####Example:"," *"," *     var doc = new Tank;"," *     doc.model('User').findById(id, callback);"," *"," * @param {String} name model name"," * @api public"," */","","Model.prototype.model = function model(name) {","/**"," * Adds a discriminator type."," *"," * ####Example:"," *"," *     function BaseSchema() {"," *       Schema.apply(this, arguments);"," *"," *       this.add({"," *         name: String,"," *         createdAt: Date"," *       });"," *     }"," *     util.inherits(BaseSchema, Schema);"," *"," *     var PersonSchema = new BaseSchema();"," *     var BossSchema = new BaseSchema({ department: String });"," *"," *     var Person = mongoose.model('Person', PersonSchema);"," *     var Boss = Person.discriminator('Boss', BossSchema);"," *"," * @param {String} name   discriminator model name"," * @param {Schema} schema discriminator model schema"," * @api public"," */","","Model.discriminator = function discriminator(name, schema) {","    schema._requiredpaths = undefined; // reset just in case Schema#requiredPaths() was called on either schema","  }","  // merges base schema into new discriminator schema and sets new type field.","  merge(schema, this.schema);","  // apply methods and statics","  applyMethods(this.discriminators[name], schema);","// Model (class) features","","/*!","/*!"," * Give the constructor the ability to emit events."," */","","for (var i in EventEmitter.prototype) {","/**"," * Called when the model compiles."," *"," * @api private"," */","","Model.init = function init() {","/**"," * Sends `ensureIndex` commands to mongo for each index declared in the schema."," *"," * ####Example:"," *"," *     Event.ensureIndexes(function (err) {"," *       if (err) return handleError(err);"," *     });"," *"," * After completion, an `index` event is emitted on this `Model` passing an error if one occurred."," *"," * ####Example:"," *"," *     var eventSchema = new Schema({ thing: { type: 'string', unique: true }})"," *     var Event = mongoose.model('Event', eventSchema);"," *"," *     Event.on('index', function (err) {"," *       if (err) console.error(err); // error occurred during index creation"," *     })"," *"," * _NOTE: It is not recommended that you run this in production. Index creation may impact database performance depending on your load. Use with caution._"," *"," * The `ensureIndex` commands are not sent in parallel. This is to avoid the `MongoError: cannot add index with a background operation in progress` error. See [this ticket](https://github.com/Automattic/mongoose/issues/1365) for more information."," *"," * @param {Object} [options] internal options"," * @param {Function} [cb] optional callback"," * @return {Promise}"," * @api public"," */","","Model.ensureIndexes = function ensureIndexes(options, callback) {","  // Indexes are created one-by-one to support how MongoDB \u003c 2.4 deals","  // with background indexes.","","  var done = function(err) {","/**"," * Schema the model uses."," *"," * @property schema"," * @receiver Model"," * @api public"," */","","Model.schema;","/*!"," * Connection instance the model uses."," *"," * @property db"," * @receiver Model"," * @api public"," */","","Model.db;","/*!"," * Collection the model uses."," *"," * @property collection"," * @receiver Model"," * @api public"," */","","Model.collection;","/**"," * Base Mongoose instance the model uses."," *"," * @property base"," * @receiver Model"," * @api public"," */","","Model.base;","/**"," * Registered discriminators for this model."," *"," * @property discriminators"," * @receiver Model"," * @api public"," */","","Model.discriminators;","/**"," * Removes documents from the collection."," *"," * ####Example:"," *"," *     Comment.remove({ title: 'baby born from alien father' }, function (err) {"," *"," *     });"," *"," * ####Note:"," *"," * To remove documents without waiting for a response from MongoDB, do not pass a `callback`, then call `exec` on the returned [Query](#query-js):"," *"," *     var query = Comment.remove({ _id: id });"," *     query.exec();"," *"," * ####Note:"," *"," * This method sends a remove command directly to MongoDB, no Mongoose documents are involved. Because no Mongoose documents are involved, _no middleware (hooks) are executed_."," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.remove = function remove(conditions, callback) {","  // get the mongodb collection object","  var mq = new this.Query(conditions, {}, this, this.collection);","/**"," * Finds documents"," *"," * The `conditions` are cast to their respective SchemaTypes before the command is sent."," *"," * ####Examples:"," *"," *     // named john and at least 18"," *     MyModel.find({ name: 'john', age: { $gte: 18 }});"," *"," *     // executes immediately, passing results to callback"," *     MyModel.find({ name: 'john', age: { $gte: 18 }}, function (err, docs) {});"," *"," *     // name LIKE john and only selecting the \"name\" and \"friends\" fields, executing immediately"," *     MyModel.find({ name: /john/i }, 'name friends', function (err, docs) { })"," *"," *     // passing options"," *     MyModel.find({ name: /john/i }, null, { skip: 10 })"," *"," *     // passing options and executing immediately"," *     MyModel.find({ name: /john/i }, null, { skip: 10 }, function (err, docs) {});"," *"," *     // executing a query explicitly"," *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 })"," *     query.exec(function (err, docs) {});"," *"," *     // using the promise returned from executing a query"," *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 });"," *     var promise = query.exec();"," *     promise.addBack(function (err, docs) {});"," *"," * @param {Object} conditions"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see promise #promise-js"," * @api public"," */","","Model.find = function find(conditions, projection, options, callback) {","/**"," * Finds a single document by its _id field. `findById(id)` is almost*"," * equivalent to `findOne({ _id: id })`."," *"," * The `id` is cast based on the Schema before sending the command."," *"," * Note: `findById()` triggers `findOne` hooks."," *"," * * Except for how it treats `undefined`. Because the MongoDB driver"," * deletes keys that have value `undefined`, `findById(undefined)` gets"," * translated to `findById({ _id: null })`."," *"," * ####Example:"," *"," *     // find adventure by id and execute immediately"," *     Adventure.findById(id, function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findById(id).exec(callback);"," *"," *     // select only the adventures name and length"," *     Adventure.findById(id, 'name length', function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findById(id, 'name length').exec(callback);"," *"," *     // include all properties except for `length`"," *     Adventure.findById(id, '-length').exec(function (err, adventure) {});"," *"," *     // passing options (in this case return the raw js objects, not mongoose documents by passing `lean`"," *     Adventure.findById(id, 'name', { lean: true }, function (err, doc) {});"," *"," *     // same as above"," *     Adventure.findById(id, 'name').lean().exec(function (err, doc) {});"," *"," * @param {Object|String|Number} id value of `_id` to query by"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see lean queries #query_Query-lean"," * @api public"," */","","Model.findById = function findById(id, projection, options, callback) {","/**"," * Finds one document."," *"," * The `conditions` are cast to their respective SchemaTypes before the command is sent."," *"," * ####Example:"," *"," *     // find one iphone adventures - iphone adventures??"," *     Adventure.findOne({ type: 'iphone' }, function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }).exec(function (err, adventure) {});"," *"," *     // select only the adventures name"," *     Adventure.findOne({ type: 'iphone' }, 'name', function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }, 'name').exec(function (err, adventure) {});"," *"," *     // specify options, in this case lean"," *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }, callback);"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }).exec(callback);"," *"," *     // chaining findOne queries (same as above)"," *     Adventure.findOne({ type: 'iphone' }).select('name').lean().exec(callback);"," *"," * @param {Object} [conditions]"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see lean queries #query_Query-lean"," * @api public"," */","","Model.findOne = function findOne(conditions, projection, options, callback) {","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","/**"," * Counts number of matching documents in a database collection."," *"," * ####Example:"," *"," *     Adventure.count({ type: 'jungle' }, function (err, count) {"," *       if (err) .."," *       console.log('there are %d jungle adventures', count);"," *     });"," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.count = function count(conditions, callback) {","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","/**"," * Creates a Query for a `distinct` operation."," *"," * Passing a `callback` immediately executes the query."," *"," * ####Example"," *"," *     Link.distinct('url', { clicks: {$gt: 100}}, function (err, result) {"," *       if (err) return handleError(err);"," *"," *       assert(Array.isArray(result));"," *       console.log('unique urls with more than 100 clicks', result);"," *     })"," *"," *     var query = Link.distinct('url');"," *     query.exec(callback);"," *"," * @param {String} field"," * @param {Object} [conditions] optional"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.distinct = function distinct(field, conditions, callback) {","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","/**"," * Creates a Query, applies the passed conditions, and returns the Query."," *"," * For example, instead of writing:"," *"," *     User.find({age: {$gte: 21, $lte: 65}}, callback);"," *"," * we can instead write:"," *"," *     User.where('age').gte(21).lte(65).exec(callback);"," *"," * Since the Query class also supports `where` you can continue chaining"," *"," *     User"," *     .where('age').gte(21).lte(65)"," *     .where('name', /^b/i)"," *     ... etc"," *"," * @param {String} path"," * @param {Object} [val] optional value"," * @return {Query}"," * @api public"," */","","Model.where = function where(path, val) {","  void val; // eslint","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection).find({});","/**"," * Creates a `Query` and specifies a `$where` condition."," *"," * Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via `find({ $where: javascript })`, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model."," *"," *     Blog.$where('this.username.indexOf(\"val\") !== -1').exec(function (err, docs) {});"," *"," * @param {String|Function} argument is a javascript string or anonymous function"," * @method $where"," * @memberOf Model"," * @return {Query}"," * @see Query.$where #query_Query-%24where"," * @api public"," */","","Model.$where = function $where() {","/**"," * Issues a mongodb findAndModify update command."," *"," * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed else a Query object is returned."," *"," * ####Options:"," *"," * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `fields`: {Object|String} - Field selection. Equivalent to `.select(fields).findOneAndUpdate()`"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb \u003e= 2.6.0"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB \u003e= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," *"," *"," * ####Examples:"," *"," *     A.findOneAndUpdate(conditions, update, options, callback) // executes"," *     A.findOneAndUpdate(conditions, update, options)  // returns Query"," *     A.findOneAndUpdate(conditions, update, callback) // executes"," *     A.findOneAndUpdate(conditions, update)           // returns Query"," *     A.findOneAndUpdate()                             // returns Query"," *"," * ####Note:"," *"," * All top level update keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     var query = { name: 'borne' };"," *     Model.findOneAndUpdate(query, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.findOneAndUpdate(query, { $set: { name: 'jason borne' }}, options, callback)"," *"," * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object} [conditions]"," * @param {Object} [update]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findOneAndUpdate = function(conditions, update, options, callback) {","/**"," * Issues a mongodb findAndModify update command by a document's _id field."," * `findByIdAndUpdate(id, ...)` is equivalent to `findOneAndUpdate({ _id: id }, ...)`."," *"," * Finds a matching document, updates it according to the `update` arg,"," * passing any `options`, and returns the found document (if any) to the"," * callback. The query executes immediately if `callback` is passed else a"," * Query object is returned."," *"," * This function triggers `findOneAndUpdate` middleware."," *"," * ####Options:"," *"," * - `new`: bool - true to return the modified document rather than the original. defaults to false"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB \u003e= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `select`: sets the document fields to return"," *"," * ####Examples:"," *"," *     A.findByIdAndUpdate(id, update, options, callback) // executes"," *     A.findByIdAndUpdate(id, update, options)  // returns Query"," *     A.findByIdAndUpdate(id, update, callback) // executes"," *     A.findByIdAndUpdate(id, update)           // returns Query"," *     A.findByIdAndUpdate()                     // returns Query"," *"," * ####Note:"," *"," * All top level update keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     Model.findByIdAndUpdate(id, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.findByIdAndUpdate(id, { $set: { name: 'jason borne' }}, options, callback)"," *"," * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object|Number|String} id value of `_id` to query by"," * @param {Object} [update]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see Model.findOneAndUpdate #model_Model.findOneAndUpdate"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findByIdAndUpdate = function(id, update, options, callback) {","  // if a model is passed in instead of an id","  if (id instanceof Document) {","/**"," * Issue a mongodb findAndModify remove command."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback."," *"," * Executes immediately if `callback` is passed else a Query object is returned."," *"," * ####Options:"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb \u003e= 2.6.0"," * - `select`: sets the document fields to return"," *"," * ####Examples:"," *"," *     A.findOneAndRemove(conditions, options, callback) // executes"," *     A.findOneAndRemove(conditions, options)  // return Query"," *     A.findOneAndRemove(conditions, callback) // executes"," *     A.findOneAndRemove(conditions) // returns Query"," *     A.findOneAndRemove()           // returns Query"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object} conditions"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findOneAndRemove = function(conditions, options, callback) {","/**"," * Issue a mongodb findAndModify remove command by a document's _id field. `findByIdAndRemove(id, ...)` is equivalent to `findOneAndRemove({ _id: id }, ...)`."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback."," *"," * Executes immediately if `callback` is passed, else a `Query` object is returned."," *"," * ####Options:"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `select`: sets the document fields to return"," *"," * ####Examples:"," *"," *     A.findByIdAndRemove(id, options, callback) // executes"," *     A.findByIdAndRemove(id, options)  // return Query"," *     A.findByIdAndRemove(id, callback) // executes"," *     A.findByIdAndRemove(id) // returns Query"," *     A.findByIdAndRemove()           // returns Query"," *"," * @param {Object|Number|String} id value of `_id` to query by"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see Model.findOneAndRemove #model_Model.findOneAndRemove"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," */","","Model.findByIdAndRemove = function(id, options, callback) {","/**"," * Shortcut for saving one or more documents to the database."," * `MyModel.create(docs)` does `new MyModel(doc).save()` for every doc in"," * docs."," *"," * Hooks Triggered:"," * - `save()`"," *"," * ####Example:"," *"," *     // pass individual docs"," *     Candy.create({ type: 'jelly bean' }, { type: 'snickers' }, function (err, jellybean, snickers) {"," *       if (err) // ..."," *     });"," *"," *     // pass an array"," *     var array = [{ type: 'jelly bean' }, { type: 'snickers' }];"," *     Candy.create(array, function (err, candies) {"," *       if (err) // ..."," *"," *       var jellybean = candies[0];"," *       var snickers = candies[1];"," *       // ..."," *     });"," *"," *     // callback is optional; use the returned promise if you like:"," *     var promise = Candy.create({ type: 'jawbreaker' });"," *     promise.then(function (jawbreaker) {"," *       // ..."," *     })"," *"," * @param {Array|Object|*} doc(s)"," * @param {Function} [callback] callback"," * @return {Promise}"," * @api public"," */","","Model.create = function create(doc, callback) {","        // Hack to avoid getting a promise because of","        // $__registerHooksFromSchema","        if (toSave.$__original_save) {","/**"," * Shortcut for validating an array of documents and inserting them into"," * MongoDB if they're all valid. This function is faster than `.create()`"," * because it only sends one operation to the server, rather than one for each"," * document."," *"," * This function does **not** trigger save middleware."," *"," * ####Example:"," *"," *     var arr = [{ name: 'Star Wars' }, { name: 'The Empire Strikes Back' }];"," *     Movies.insertMany(arr, function(error, docs) {});"," *"," * @param {Array|Object|*} doc(s)"," * @param {Function} [callback] callback"," * @return {Promise}"," * @api public"," */","","Model.insertMany = function(arr, callback) {","/**"," * Shortcut for creating a new Document from existing raw data, pre-saved in the DB."," * The document returned has no paths marked as modified initially."," *"," * ####Example:"," *"," *     // hydrate previous data into a Mongoose document"," *     var mongooseCandy = Candy.hydrate({ _id: '54108337212ffb6d459f854c', type: 'jelly bean' });"," *"," * @param {Object} obj"," * @return {Document}"," * @api public"," */","","Model.hydrate = function(obj) {","/**"," * Updates documents in the database without returning them."," *"," * ####Examples:"," *"," *     MyModel.update({ age: { $gt: 18 } }, { oldEnough: true }, fn);"," *     MyModel.update({ name: 'Tobi' }, { ferret: true }, { multi: true }, function (err, raw) {"," *       if (err) return handleError(err);"," *       console.log('The raw response from Mongo was ', raw);"," *     });"," *"," * ####Valid options:"," *"," *  - `safe` (boolean) safe mode (defaults to value set in schema (true))"," *  - `upsert` (boolean) whether to create the doc if it doesn't match (false)"," *  - `multi` (boolean) whether multiple documents should be updated (false)"," *  - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," *  - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB \u003e= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," *  - `strict` (boolean) overrides the `strict` option for this update"," *  - `overwrite` (boolean) disables update-only mode, allowing you to overwrite the doc (false)"," *"," * All `update` values are cast to their appropriate SchemaTypes before being sent."," *"," * The `callback` function receives `(err, rawResponse)`."," *"," * - `err` is the error if any occurred"," * - `rawResponse` is the full response from Mongo"," *"," * ####Note:"," *"," * All top level keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     var query = { name: 'borne' };"," *     Model.update(query, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.update(query, { $set: { name: 'jason borne' }}, options, callback)"," *     // if overwrite option is false. If overwrite is true, sent without the $set wrapper."," *"," * This helps prevent accidentally overwriting all documents in your collection with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Be careful to not use an existing model instance for the update clause (this won't work and can cause weird behavior like infinite loops). Also, ensure that the update clause does not have an _id property, which causes Mongo to return a \"Mod on _id not allowed\" error."," *"," * ####Note:"," *"," * To update documents without waiting for a response from MongoDB, do not pass a `callback`, then call `exec` on the returned [Query](#query-js):"," *"," *     Comment.update({ _id: id }, { $set: { text: 'changed' }}).exec();"," *"," * ####Note:"," *"," * Although values are casted to their appropriate types when using update, the following are *not* applied:"," *"," * - defaults"," * - setters"," * - validators"," * - middleware"," *"," * If you need those features, use the traditional approach of first retrieving the document."," *"," *     Model.findOne({ name: 'borne' }, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     })"," *"," * @see strict http://mongoosejs.com/docs/guide.html#strict"," * @see response http://docs.mongodb.org/v2.6/reference/command/update/#output"," * @param {Object} conditions"," * @param {Object} doc"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.update = function update(conditions, doc, options, callback) {","  // gh-2406","  // make local deep copy of conditions","  if (conditions instanceof Document) {","/**"," * Executes a mapReduce command."," *"," * `o` is an object specifying all mapReduce options as well as the map and reduce functions. All options are delegated to the driver implementation. See [node-mongodb-native mapReduce() documentation](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#mapreduce) for more detail about options."," *"," * ####Example:"," *"," *     var o = {};"," *     o.map = function () { emit(this.name, 1) }"," *     o.reduce = function (k, vals) { return vals.length }"," *     User.mapReduce(o, function (err, results) {"," *       console.log(results)"," *     })"," *"," * ####Other options:"," *"," * - `query` {Object} query filter object."," * - `sort` {Object} sort input objects using this key"," * - `limit` {Number} max number of documents"," * - `keeptemp` {Boolean, default:false} keep temporary data"," * - `finalize` {Function} finalize function"," * - `scope` {Object} scope variables exposed to map/reduce/finalize during execution"," * - `jsMode` {Boolean, default:false} it is possible to make the execution stay in JS. Provided in MongoDB \u003e 2.0.X"," * - `verbose` {Boolean, default:false} provide statistics on job execution time."," * - `readPreference` {String}"," * - `out*` {Object, default: {inline:1}} sets the output target for the map reduce job."," *"," * ####* out options:"," *"," * - `{inline:1}` the results are returned in an array"," * - `{replace: 'collectionName'}` add the results to collectionName: the results replace the collection"," * - `{reduce: 'collectionName'}` add the results to collectionName: if dups are detected, uses the reducer / finalize functions"," * - `{merge: 'collectionName'}` add the results to collectionName: if dups exist the new docs overwrite the old"," *"," * If `options.out` is set to `replace`, `merge`, or `reduce`, a Model instance is returned that can be used for further querying. Queries run against this model are all executed with the `lean` option; meaning only the js object is returned and no Mongoose magic is applied (getters, setters, etc)."," *"," * ####Example:"," *"," *     var o = {};"," *     o.map = function () { emit(this.name, 1) }"," *     o.reduce = function (k, vals) { return vals.length }"," *     o.out = { replace: 'createdCollectionNameForResults' }"," *     o.verbose = true;"," *"," *     User.mapReduce(o, function (err, model, stats) {"," *       console.log('map reduce took %d ms', stats.processtime)"," *       model.find().where('value').gt(10).exec(function (err, docs) {"," *         console.log(docs);"," *       });"," *     })"," *"," *     // a promise is returned so you may instead write"," *     var promise = User.mapReduce(o);"," *     promise.then(function (model, stats) {"," *       console.log('map reduce took %d ms', stats.processtime)"," *       return model.find().where('value').gt(10).exec();"," *     }).then(function (docs) {"," *        console.log(docs);"," *     }).then(null, handleError).end()"," *"," * @param {Object} o an object specifying map-reduce options"," * @param {Function} [callback] optional callback"," * @see http://www.mongodb.org/display/DOCS/MapReduce"," * @return {Promise}"," * @api public"," */","","Model.mapReduce = function mapReduce(o, callback) {","        // returned a collection, convert to Model","        var model = Model.compile(","/**"," * geoNear support for Mongoose"," *"," * ####Options:"," * - `lean` {Boolean} return the raw object"," * - All options supported by the driver are also supported"," *"," * ####Example:"," *"," *     // Legacy point"," *     Model.geoNear([1,3], { maxDistance : 5, spherical : true }, function(err, results, stats) {"," *        console.log(results);"," *     });"," *"," *     // geoJson"," *     var point = { type : \"Point\", coordinates : [9,9] };"," *     Model.geoNear(point, { maxDistance : 5, spherical : true }, function(err, results, stats) {"," *        console.log(results);"," *     });"," *"," * @param {Object|Array} GeoJSON point or legacy coordinate pair [x,y] to search near"," * @param {Object} options for the qurery"," * @param {Function} [callback] optional callback for the query"," * @return {Promise}"," * @see http://docs.mongodb.org/manual/core/2dsphere/"," * @see http://mongodb.github.io/node-mongodb-native/api-generated/collection.html?highlight=geonear#geoNear"," * @api public"," */","","Model.geoNear = function(near, options, callback) {","      // if there are no results, fulfill the promise now","      if (count === 0) {","/**"," * Performs [aggregations](http://docs.mongodb.org/manual/applications/aggregation/) on the models collection."," *"," * If a `callback` is passed, the `aggregate` is executed and a `Promise` is returned. If a callback is not passed, the `aggregate` itself is returned."," *"," * ####Example:"," *"," *     // Find the max balance of all accounts"," *     Users.aggregate("," *         { $group: { _id: null, maxBalance: { $max: '$balance' }}}"," *       , { $project: { _id: 0, maxBalance: 1 }}"," *       , function (err, res) {"," *       if (err) return handleError(err);"," *       console.log(res); // [ { maxBalance: 98000 } ]"," *     });"," *"," *     // Or use the aggregation pipeline builder."," *     Users.aggregate()"," *       .group({ _id: null, maxBalance: { $max: '$balance' } })"," *       .select('-id maxBalance')"," *       .exec(function (err, res) {"," *         if (err) return handleError(err);"," *         console.log(res); // [ { maxBalance: 98 } ]"," *     });"," *"," * ####NOTE:"," *"," * - Arguments are not cast to the model's schema because `$project` operators allow redefining the \"shape\" of the documents at any stage of the pipeline, which may leave documents in an incompatible format."," * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned)."," * - Requires MongoDB \u003e= 2.1"," *"," * @see Aggregate #aggregate_Aggregate"," * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/"," * @param {Object|Array} [...] aggregation pipeline operator(s) or operator array"," * @param {Function} [callback]"," * @return {Aggregate|Promise}"," * @api public"," */","","Model.aggregate = function aggregate() {","/**"," * Implements `$geoSearch` functionality for Mongoose"," *"," * ####Example:"," *"," *     var options = { near: [10, 10], maxDistance: 5 };"," *     Locations.geoSearch({ type : \"house\" }, options, function(err, res) {"," *       console.log(res);"," *     });"," *"," * ####Options:"," * - `near` {Array} x,y point to search for"," * - `maxDistance` {Number} the maximum distance from the point near that a result can be"," * - `limit` {Number} The maximum number of results to return"," * - `lean` {Boolean} return the raw object instead of the Mongoose Model"," *"," * @param {Object} conditions an object that specifies the match condition (required)"," * @param {Object} options for the geoSearch, some (near, maxDistance) are required"," * @param {Function} [callback] optional callback"," * @return {Promise}"," * @see http://docs.mongodb.org/manual/reference/command/geoSearch/"," * @see http://docs.mongodb.org/manual/core/geohaystack/"," * @api public"," */","","Model.geoSearch = function(conditions, options, callback) {","    // send the conditions in the options object","    options.search = conditions;","      // have to deal with driver problem. Should be fixed in a soon-ish release","      // (7/8/2013)","      if (err) {","/**"," * Populates document references."," *"," * ####Available options:"," *"," * - path: space delimited path(s) to populate"," * - select: optional fields to select"," * - match: optional query conditions to match"," * - model: optional name of the model to use for population"," * - options: optional query options like sort, limit, etc"," *"," * ####Examples:"," *"," *     // populates a single object"," *     User.findById(id, function (err, user) {"," *       var opts = ["," *           { path: 'company', match: { x: 1 }, select: 'name' }"," *         , { path: 'notes', options: { limit: 10 }, model: 'override' }"," *       ]"," *"," *       User.populate(user, opts, function (err, user) {"," *         console.log(user);"," *       })"," *     })"," *"," *     // populates an array of objects"," *     User.find(match, function (err, users) {"," *       var opts = [{ path: 'company', match: { x: 1 }, select: 'name' }]"," *"," *       var promise = User.populate(users, opts);"," *       promise.then(console.log).end();"," *     })"," *"," *     // imagine a Weapon model exists with two saved documents:"," *     //   { _id: 389, name: 'whip' }"," *     //   { _id: 8921, name: 'boomerang' }"," *"," *     var user = { name: 'Indiana Jones', weapon: 389 }"," *     Weapon.populate(user, { path: 'weapon', model: 'Weapon' }, function (err, user) {"," *       console.log(user.weapon.name) // whip"," *     })"," *"," *     // populate many plain objects"," *     var users = [{ name: 'Indiana Jones', weapon: 389 }]"," *     users.push({ name: 'Batman', weapon: 8921 })"," *     Weapon.populate(users, { path: 'weapon' }, function (err, users) {"," *       users.forEach(function (user) {"," *         console.log('%s uses a %s', users.name, user.weapon.name)"," *         // Indiana Jones uses a whip"," *         // Batman uses a boomerang"," *       })"," *     })"," *     // Note that we didn't need to specify the Weapon model because"," *     // we were already using it's populate() method."," *"," * @param {Document|Array} docs Either a single document or array of documents to populate."," * @param {Object} options A hash of key/val (path, options) used for population."," * @param {Function} [callback(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`."," * @return {Promise}"," * @api public"," */","","Model.populate = function(docs, paths, callback) {","  // normalized paths","  var noPromise = paths \u0026\u0026 !!paths.__noPromise;","  // data that should persist across subPopulate calls","  var cache = {};","/*!"," * Populate helper"," *"," * @param {Model} model the model to use"," * @param {Document|Array} docs Either a single document or array of documents to populate."," * @param {Object} paths"," * @param {Function} [cb(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`."," * @return {Function}"," * @api private"," */","","function _populate(model, docs, paths, cache, callback) {","  // each path has its own query options and must be executed separately","  var i = pending;","/*!"," * Populates `docs`"," */","var excludeIdReg = /\\s?-_id\\s?/,","  // normalize single / multiple docs passed","  if (!Array.isArray(docs)) {","    // no need to include undefined values in our query","    return undefined !== item;","      // override the exclusion from the query so we can use the _id","      // for document matching during assignment. we'll delete the","      // _id back off before returning the result.","      if (typeof select === 'string') {","        // preserve original select conditions by copying","        select = utils.object.shallowCopy(select);","    // optimization:","    // record the document positions as returned by","    // the query result.","    for (var i = 0; i \u003c len; i++) {","        // flag each as result of population","        if (!lean) {","/*!"," * Assigns documents returned from a population query back"," * to the original document path."," */","","function assignVals(o) {","  // replace the original ids in our intermediate _ids structure","  // with the documents found by query","  assignRawDocsToIdStructure(o.rawIds, o.rawDocs, o.rawOrder, o.options,","  // now update the original documents being populated using the","  // result structure that contains real documents.","","  var docs = o.docs;","/*!"," * Assign `vals` returned by mongo query to the `rawIds`"," * structure returned from utils.getVals() honoring"," * query sort order if specified by user."," *"," * This can be optimized."," *"," * Rules:"," *"," *   if the value of the path is not an array, use findOne rules, else find."," *   for findOne the results are assigned directly to doc path (including null results)."," *   for find, if user specified sort order, results are assigned directly"," *   else documents are put back in original order of array if found in results"," *"," * @param {Array} rawIds"," * @param {Array} vals"," * @param {Boolean} sort"," * @api private"," */","","function assignRawDocsToIdStructure(rawIds, resultDocs, resultOrder, options, localFields, foreignFields, recursed) {","  // honor user specified sort order","  var newOrder = [];","      // handle [ [id0, id2], [id3] ]","      assignRawDocsToIdStructure(id, resultDocs, resultOrder, options, localFields, foreignFields, true);","      // keep nulls for findOne unless sorting, which always","      // removes them (backward compat)","      newOrder.push(id);","      // apply find behavior","","      // assign matching documents in original order unless sorting","      doc = resultDocs[sid];","      // apply findOne behavior - if document in results, assign, else assign null","      newOrder[i] = doc = resultDocs[sid] || null;","    // reassign the documents based on corrected order","","    // forEach skips over sparse entries in arrays so we","    // can safely use this to our advantage dealing with sorted","    // result sets too.","    newOrder.forEach(function(doc, i) {","        modelNames = [modelNameFromQuery];  // query options","      }","          // Assume only 1 localField + foreignField","          localField: localField,","/*!"," * Retrieve the _id of `val` if a Document or Array of Documents."," *"," * @param {Array|Document|Any} val"," * @return {Array|Document|Any}"," */","","function convertTo_id(val) {","/*!"," * 1) Apply backwards compatible find/findOne behavior to sub documents"," *"," *    find logic:"," *      a) filter out non-documents"," *      b) remove _id from sub docs when user specified"," *"," *    findOne"," *      a) if no doc found, set to null"," *      b) remove _id from sub docs when user specified"," *"," * 2) Remove _ids when specified by users query."," *"," * background:"," * _ids are left in the query even when user excludes them so"," * that population mapping can occur."," */","","function valueFilter(val, assignmentOpts) {","    // find logic","    var ret = [];","    // Since we don't want to have to create a new mongoosearray, make sure to","    // modify the array in place","    while (val.length \u003e ret.length) {","  // findOne","  if (isDoc(val)) {","/*!"," * Remove _id from `subdoc` if user specified \"lean\" query option"," */","","function maybeRemoveId(subdoc, assignmentOpts) {","/*!"," * Determine if `doc` is a document returned"," * by a populate query."," */","","function isDoc(doc) {","  // only docs","  return true;","/**"," * Finds the schema for `path`. This is different than"," * calling `schema.path` as it also resolves paths with"," * positional selectors (something.$.another.$.path)."," *"," * @param {String} path"," * @return {Schema}"," * @api private"," */","","Model._getSchema = function _getSchema(path) {","/*!"," * Compiler utility."," *"," * @param {String} name model name"," * @param {Schema} schema"," * @param {String} collectionName"," * @param {Connection} connection"," * @param {Mongoose} base mongoose instance"," */","","Model.compile = function compile(name, schema, collectionName, connection, base) {","    // add versioning to top level documents only","    var o = {};","  // generate new class","  function model(doc, fields, skipId) {","  // apply methods and statics","  applyMethods(model, schema);","  // Create custom query constructor","  model.Query = function() {","/*!"," * Register methods for this model"," *"," * @param {Model} model"," * @param {Schema} schema"," */","var applyMethods = function(model, schema) {","/*!"," * Register statics for this model"," * @param {Model} model"," * @param {Schema} schema"," */","var applyStatics = function(model, schema) {","/*!"," * Register custom query methods for this model"," *"," * @param {Model} model"," * @param {Schema} schema"," */","","function applyQueryMethods(model, methods) {","/*!"," * Subclass this model with `conn`, `schema`, and `collection` settings."," *"," * @param {Connection} conn"," * @param {Schema} [schema]"," * @param {String} [collection]"," * @return {Model}"," */","","Model.__subclass = function subclass(conn, schema, collection) {","  // subclass model using this connection and collection name","  var _this = this;","/*!"," * Module exports."," */","","module.exports = exports = Model;"],"Functions":["function Model(doc, fields, skipId) ","Model.prototype.$__handleSave = function(options, callback) ","      setTimeout(function() ","    this.collection.insert(obj, options.safe, function(err, ret) ","      this.collection.update(where, delta[1], options.safe, function(err, ret) ","Model.prototype.$__save = function(options, callback) ","  _this.$__handleSave(options, function(error, result) ","      return _this.schema.s.hooks.execPost('save:error', _this, [_this],  error: error }, function(error) {"," *     product.save(function (err, product, numAffected) "," *     product.save().then(function(product) ","Model.prototype.save = function(options, fn) ","  if (typeof options === 'function') ","function shouldSkipVersioning(self, path) ","function operand(self, where, delta, data, val, op) ","function handleAtomics(self, where, delta, data, value) ","  if (typeof value.$__getAtomics === 'function') ","    value.$__getAtomics().forEach(function(atomic) ","  function iter(mem) ","Model.prototype.$__delta = function() ","function checkDivergentArray(doc, path, array) ","Model.prototype.$__version = function(where, delta) "," *     Model.findById(id, function (err, doc) "," *       doc.save(function (err)  .. })","Model.prototype.increment = function increment() ","Model.prototype.$__where = function _where(where) "," *     product.remove(function (err, product) "," *       Product.findById(product._id, function (err, product) "," *     product.remove().then(function (product) "," *     }).onRejected(function (err) "," * @param function(err,product)} [fn] optional callback","Model.prototype.remove = function remove(options, fn) ","  if (typeof options === 'function') ","          function(res)  fn(null, res); },","          function(err)  fn(err); });","  this.$__.removing = new Promise.ES6(function(resolve, reject) ","    _this.collection.remove(where, options, function(err) ","Model.prototype.model = function model(name) "," *     function BaseSchema() ","Model.discriminator = function discriminator(name, schema) ","  function merge(schema, baseSchema) ","      set: function() ","Model.init = function init() "," *     Event.ensureIndexes(function (err) "," *     Event.on('index', function (err) ","Model.ensureIndexes = function ensureIndexes(options, callback) ","  if (typeof options === 'function') ","  return new Promise.ES6(function(resolve, reject) ","    _ensureIndexes(_this, function(error) ","function _ensureIndexes(model, callback) ","    setImmediate(function() ","  var done = function(err) ","  var indexSingleDone = function(err, fields, options, name) ","  var indexSingleStart = function(fields, options) ","  var create = function() ","    model.collection.ensureIndex(indexFields, options, tick(function(err, name) ","  setImmediate(function() ","function _handleSafe(options) "," *     Comment.remove( title: 'baby born from alien father' }, function (err) {","Model.remove = function remove(conditions, callback) ","  if (typeof conditions === 'function') "," *     MyModel.find( name: 'john', age: { $gte: 18 }}, function (err, docs) {});"," *     MyModel.find( name: /john/i }, 'name friends', function (err, docs) { })"," *     MyModel.find( name: /john/i }, null, { skip: 10 }, function (err, docs) {});"," *     query.exec(function (err, docs) });"," *     promise.addBack(function (err, docs) });","Model.find = function find(conditions, projection, options, callback) ","  if (typeof conditions === 'function') ","  } else if (typeof projection === 'function') ","  } else if (typeof options === 'function') "," *     Adventure.findById(id, function (err, adventure) });"," *     Adventure.findById(id, 'name length', function (err, adventure) });"," *     Adventure.findById(id, '-length').exec(function (err, adventure) });"," *     Adventure.findById(id, 'name',  lean: true }, function (err, doc) {});"," *     Adventure.findById(id, 'name').lean().exec(function (err, doc) });","Model.findById = function findById(id, projection, options, callback) "," *     Adventure.findOne( type: 'iphone' }, function (err, adventure) {});"," *     Adventure.findOne( type: 'iphone' }).exec(function (err, adventure) {});"," *     Adventure.findOne( type: 'iphone' }, 'name', function (err, adventure) {});"," *     Adventure.findOne( type: 'iphone' }, 'name').exec(function (err, adventure) {});","Model.findOne = function findOne(conditions, projection, options, callback) ","  if (typeof options === 'function') ","  } else if (typeof projection === 'function') ","  } else if (typeof conditions === 'function') "," *     Adventure.count( type: 'jungle' }, function (err, count) {","Model.count = function count(conditions, callback) ","  if (typeof conditions === 'function') "," *     Link.distinct('url',  clicks: {$gt: 100}}, function (err, result) {","Model.distinct = function distinct(field, conditions, callback) ","  if (typeof conditions === 'function') ","Model.where = function where(path, val) "," *     Blog.$where('this.username.indexOf(\"val\") !== -1').exec(function (err, docs) });"," * @param String|Function} argument is a javascript string or anonymous function","Model.$where = function $where() "," *     Model.findById(id, function (err, doc) ","Model.findOneAndUpdate = function(conditions, update, options, callback) ","  if (typeof options === 'function') ","    if (typeof conditions === 'function') ","      var msg = 'Model.findOneAndUpdate(): First argument must not be a function.\\n\\n'"," * This function triggers `findOneAndUpdate` middleware."," *     Model.findById(id, function (err, doc) ","Model.findByIdAndUpdate = function(id, update, options, callback) ","    if (typeof id === 'function') ","      var msg = 'Model.findByIdAndUpdate(): First argument must not be a function.\\n\\n'"," *     Model.findById(id, function (err, doc) ","Model.findOneAndRemove = function(conditions, options, callback) ","  if (arguments.length === 1 \u0026\u0026 typeof conditions === 'function') ","    var msg = 'Model.findOneAndRemove(): First argument must not be a function.\\n\\n'","  if (typeof options === 'function') ","Model.findByIdAndRemove = function(id, options, callback) ","  if (arguments.length === 1 \u0026\u0026 typeof id === 'function') ","    var msg = 'Model.findByIdAndRemove(): First argument must not be a function.\\n\\n'"," *     Candy.create( type: 'jelly bean' }, { type: 'snickers' }, function (err, jellybean, snickers) {"," *     Candy.create(array, function (err, candies) "," *     promise.then(function (jawbreaker) ","Model.create = function create(doc, callback) ","    if (typeof last === 'function') ","  var promise = new Promise.ES6(function(resolve, reject) ","      setImmediate(function() ","    args.forEach(function(doc) ","      toExecute.push(function(callback) ","        var callbackWrapper = function(error, doc) ","    async.parallel(toExecute, function(error, savedDocs) "," * MongoDB if they're all valid. This function is faster than `.create()`"," * This function does **not** trigger save middleware."," *     Movies.insertMany(arr, function(error, docs) });","Model.insertMany = function(arr, callback) ","  arr.forEach(function(doc) ","    toExecute.push(function(callback) ","      doc.validate( __noPromise: true }, function(error) {","  async.parallel(toExecute, function(error, docs) ","    var docObjects = docs.map(function(doc) ","    _this.collection.insertMany(docObjects, function(error) ","Model.hydrate = function(obj) "," *     MyModel.update( name: 'Tobi' }, { ferret: true }, { multi: true }, function (err, raw) {"," * The `callback` function receives `(err, rawResponse)`."," *     Model.findOne( name: 'borne' }, function (err, doc) {","Model.update = function update(conditions, doc, options, callback) ","  options = typeof options === 'function' ? options : utils.clone(options);"," * `o` is an object specifying all mapReduce options as well as the map and reduce functions. All options are delegated to the driver implementation. See [node-mongodb-native mapReduce() documentation](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#mapreduce) for more detail about options."," *     o.map = function ()  emit(this.name, 1) }"," *     o.reduce = function (k, vals)  return vals.length }"," *     User.mapReduce(o, function (err, results) "," * - `finalize` Function} finalize function"," * - `reduce: 'collectionName'}` add the results to collectionName: if dups are detected, uses the reducer / finalize functions"," *     o.map = function ()  emit(this.name, 1) }"," *     o.reduce = function (k, vals)  return vals.length }"," *     User.mapReduce(o, function (err, model, stats) "," *       model.find().where('value').gt(10).exec(function (err, docs) "," *     promise.then(function (model, stats) "," *     }).then(function (docs) ","Model.mapReduce = function mapReduce(o, callback) ","  return new Promise.ES6(function(resolve, reject) ","    _this.collection.mapReduce(null, null, o, function(err, ret, stats) "," *     Model.geoNear([1,3],  maxDistance : 5, spherical : true }, function(err, results, stats) {"," *     Model.geoNear(point,  maxDistance : 5, spherical : true }, function(err, results, stats) {","Model.geoNear = function(near, options, callback) ","  if (typeof options === 'function') ","    return new Promise.ES6(function(resolve, reject) ","  return new Promise.ES6(function(resolve, reject) ","    var handler = function(err, res) ","      function init(err) "," *       , function (err, res) "," *       .exec(function (err, res) ","Model.aggregate = function aggregate() ","  if (typeof args[args.length - 1] === 'function') "," * Implements `$geoSearch` functionality for Mongoose"," *     Locations.geoSearch( type : \"house\" }, options, function(err, res) {","Model.geoSearch = function(conditions, options, callback) ","  if (typeof options === 'function') ","  return new Promise.ES6(function(resolve, reject) ","    _this.collection.geoHaystackSearch(options.near[0], options.near[1], options, function(err, res) ","      function init(err) "," *     User.findById(id, function (err, user) "," *       User.populate(user, opts, function (err, user) "," *     User.find(match, function (err, users) "," *     Weapon.populate(user,  path: 'weapon', model: 'Weapon' }, function (err, user) {"," *     Weapon.populate(users,  path: 'weapon' }, function (err, users) {"," *       users.forEach(function (user) ","Model.populate = function(docs, paths, callback) ","    return new Promise.ES6(function(resolve, reject) ","      _populate(_this, docs, paths, cache, function(error, docs) ","function _populate(model, docs, paths, cache, callback) ","  function next(err) ","function populate(model, docs, options, callback) ","  function flatten(item) ","  function next(options, assignmentOpts, err, valsFromDb) ","  function _assign(err, vals, mod, assignmentOpts) ","function assignVals(o) ","  function setValue(val) ","function assignRawDocsToIdStructure(rawIds, resultDocs, resultOrder, options, localFields, foreignFields, recursed) ","    newOrder.forEach(function(doc, i) ","function getModelsMapForPopulate(model, docs, options) ","function convertTo_id(val) ","function valueFilter(val, assignmentOpts) ","function maybeRemoveId(subdoc, assignmentOpts) ","    if (typeof subdoc.setValue === 'function') ","function isDoc(doc) ","Model._getSchema = function _getSchema(path) ","Model.compile = function compile(name, schema, collectionName, connection, base) ","  function model(doc, fields, skipId) ","  model.Query = function() ","  model.insertMany = function(arr, callback) ","    return new Promise.ES6(function(resolve, reject) ","      model.$__insertMany(arr, function(error, result) ","var applyMethods = function(model, schema) ","  function apply(method, schema) ","      get: function() ","    if (typeof schema.methods[method] === 'function') ","var applyStatics = function(model, schema) ","function applyQueryMethods(model, methods) ","Model.__subclass = function subclass(conn, schema, collection) ","  var Model = function Model(doc, fields, skipId) ","Model.$wrapCallback = function(callback) ","  return function() "],"Dependencies":["./document","./error","./query","./aggregate","./schema","./utils","events","util","async","./promise_provider","./queryhelpers"]},{"FileName":"node_modules\\mongoose\\lib\\promise.js","LineCount":315,"CharCount":7877,"Comments":["/*!"," * Module dependencies"," */","","var MPromise = require('mpromise');","/**"," * Promise constructor."," *"," * Promises are returned from executed queries. Example:"," *"," *     var query = Candy.find({ bar: true });"," *     var promise = query.exec();"," *"," * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,"," * if native promises are not present) but still"," * support plugging in your own ES6-compatible promises library. Mongoose 5.0"," * will **not** support mpromise."," *"," * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature"," * @inherits mpromise https://github.com/aheckmann/mpromise"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `err`: Emits when the promise is rejected"," * @event `complete`: Emits when the promise is fulfilled"," * @api public"," * @deprecated"," */","","function Promise(fn) {","/**"," * ES6-style promise constructor wrapper around mpromise."," *"," * @param {Function} resolver"," * @return {Promise} new promise"," * @api public"," */","Promise.ES6 = function(resolver) {","  // No try/catch for backwards compatibility","  resolver(","/*!"," * Inherit from mpromise"," */","","Promise.prototype = Object.create(MPromise.prototype, {","/*!"," * ignore"," */","","Promise.prototype.then = util.deprecate(Promise.prototype.then,","  'http://mongoosejs.com/docs/promises.html');","","/**","/**"," * ES6-style `.catch()` shorthand"," *"," * @method catch"," * @memberOf Promise"," * @param {Function} onReject"," * @return {Promise}"," * @api public"," */","","Promise.prototype.catch = function(onReject) {","/*!"," * Override event names for backward compatibility."," */","","Promise.SUCCESS = 'complete';","/**"," * Adds `listener` to the `event`."," *"," * If `event` is either the success or failure event and the event has already been emitted, the`listener` is called immediately and passed the results of the original emitted event."," *"," * @see mpromise#on https://github.com/aheckmann/mpromise#on"," * @method on"," * @memberOf Promise"," * @param {String} event"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," */","","/**"," * Rejects this promise with `reason`."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * @see mpromise#reject https://github.com/aheckmann/mpromise#reject"," * @method reject"," * @memberOf Promise"," * @param {Object|String|Error} reason"," * @return {Promise} this"," * @api public"," */","","/**"," * Rejects this promise with `err`."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * Differs from [#reject](#promise_Promise-reject) by first casting `err` to an `Error` if it is not `instanceof Error`."," *"," * @api public"," * @param {Error|String} err"," * @return {Promise} this"," */","","Promise.prototype.error = function(err) {","/**"," * Resolves this promise to a rejected state if `err` is passed or a fulfilled state if no `err` is passed."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * `err` will be cast to an Error if not already instanceof Error."," *"," * _NOTE: overrides [mpromise#resolve](https://github.com/aheckmann/mpromise#resolve) to provide error casting._"," *"," * @param {Error} [err] error or null"," * @param {Object} [val] value to fulfill the promise with"," * @api public"," * @deprecated"," */","","Promise.prototype.resolve = function(err) {","/**"," * Adds a single function as a listener to both err and complete."," *"," * It will be executed with traditional node.js argument position when the promise is resolved."," *"," *     promise.addBack(function (err, args...) {"," *       if (err) return handleError(err);"," *       console.log('success');"," *     })"," *"," * Alias of [mpromise#onResolve](https://github.com/aheckmann/mpromise#onresolve)."," *"," * _Deprecated. Use `onResolve` instead._"," *"," * @method addBack"," * @param {Function} listener"," * @return {Promise} this"," * @deprecated"," */","","Promise.prototype.addBack = Promise.prototype.onResolve;","/**"," * Fulfills this promise with passed arguments."," *"," * @method fulfill"," * @receiver Promise"," * @see https://github.com/aheckmann/mpromise#fulfill"," * @param {any} args"," * @api public"," * @deprecated"," */","","/**"," * Fulfills this promise with passed arguments."," *"," * Alias of [mpromise#fulfill](https://github.com/aheckmann/mpromise#fulfill)."," *"," * _Deprecated. Use `fulfill` instead._"," *"," * @method complete"," * @receiver Promise"," * @param {any} args"," * @api public"," * @deprecated"," */","","Promise.prototype.complete = MPromise.prototype.fulfill;","/**"," * Adds a listener to the `complete` (success) event."," *"," * Alias of [mpromise#onFulfill](https://github.com/aheckmann/mpromise#onfulfill)."," *"," * _Deprecated. Use `onFulfill` instead._"," *"," * @method addCallback"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," * @deprecated"," */","","Promise.prototype.addCallback = Promise.prototype.onFulfill;","/**"," * Adds a listener to the `err` (rejected) event."," *"," * Alias of [mpromise#onReject](https://github.com/aheckmann/mpromise#onreject)."," *"," * _Deprecated. Use `onReject` instead._"," *"," * @method addErrback"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," * @deprecated"," */","","Promise.prototype.addErrback = Promise.prototype.onReject;","/**"," * Creates a new promise and returns it. If `onFulfill` or `onReject` are passed, they are added as SUCCESS/ERROR callbacks to this promise after the nextTick."," *"," * Conforms to [promises/A+](https://github.com/promises-aplus/promises-spec) specification."," *"," * ####Example:"," *"," *     var promise = Meetups.find({ tags: 'javascript' }).select('_id').exec();"," *     promise.then(function (meetups) {"," *       var ids = meetups.map(function (m) {"," *         return m._id;"," *       });"," *       return People.find({ meetups: { $in: ids }).exec();"," *     }).then(function (people) {"," *       if (people.length \u003c 10000) {"," *         throw new Error('Too few people!!!');"," *       } else {"," *         throw new Error('Still need more people!!!');"," *       }"," *     }).then(null, function (err) {"," *       assert.ok(err instanceof Error);"," *     });"," *"," * @see promises-A+ https://github.com/promises-aplus/promises-spec"," * @see mpromise#then https://github.com/aheckmann/mpromise#then"," * @method then"," * @memberOf Promise"," * @param {Function} onFulFill"," * @param {Function} onReject"," * @return {Promise} newPromise"," * @deprecated"," */","","/**"," * Signifies that this promise was the last in a chain of `then()s`: if a handler passed to the call to `then` which produced this promise throws, the exception will go uncaught."," *"," * ####Example:"," *"," *     var p = new Promise;"," *     p.then(function(){ throw new Error('shucks') });"," *     setTimeout(function () {"," *       p.fulfill();"," *       // error was caught and swallowed by the promise returned from"," *       // p.then(). we either have to always register handlers on"," *       // the returned promises or we can do the following..."," *     }, 10);"," *"," *     // this time we use .end() which prevents catching thrown errors"," *     var p = new Promise;"," *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () {"," *       p.fulfill(); // throws \"shucks\""," *     }, 10);"," *"," * @api public"," * @see mpromise#end https://github.com/aheckmann/mpromise#end"," * @method end"," * @memberOf Promise"," * @deprecated"," */","","/*!"," * expose"," */","","module.exports = Promise;"],"Functions":[" * @param Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature","function Promise(fn) ","Promise.ES6 = function(resolver) ","    function() ","    function(e) ","Promise.prototype.catch = function(onReject) ","Promise.prototype.error = function(err) ","Promise.prototype.resolve = function(err) "," * Adds a single function as a listener to both err and complete."," *     promise.addBack(function (err, args...) "," *     promise.then(function (meetups) "," *       var ids = meetups.map(function (m) "," *     }).then(function (people) "," *     }).then(null, function (err) "," *     p.then(function() throw new Error('shucks') });"," *     setTimeout(function () "," *     var p2 = p.then(function() throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () "],"Dependencies":["mpromise","util"]},{"FileName":"node_modules\\mongoose\\lib\\promise_provider.js","LineCount":52,"CharCount":696,"Comments":["/*!"," * Module dependencies."," */","","var MPromise = require('./promise');","/**"," * Helper for multiplexing promise implementations"," *"," * @api private"," */","","var Promise = {","/**"," * Get the current promise constructor"," *"," * @api private"," */","Promise.get = function() {","/**"," * Set the current promise constructor"," *"," * @api private"," */","","Promise.set = function(lib) {","/**"," * Resets to using mpromise"," *"," * @api private"," */","","Promise.reset = function() {"],"Functions":["Promise.get = function() ","Promise.set = function(lib) ","Promise.reset = function() "],"Dependencies":["./promise","./ES6Promise"]},{"FileName":"node_modules\\mongoose\\lib\\query.js","LineCount":3315,"CharCount":86390,"Comments":["/*!"," * Module dependencies."," */","","var PromiseProvider = require('./promise_provider');","/**"," * Query constructor used for building queries."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.setOptions({ lean : true });"," *     query.collection(model.collection);"," *     query.where('age').gte(21).exec(callback);"," *"," * @param {Object} [options]"," * @param {Object} [model]"," * @param {Object} [conditions]"," * @param {Object} [collection] Mongoose collection"," * @api private"," */","","function Query(conditions, options, model, collection) {","  // this stuff is for dealing with custom queries created by #toConstructor","  if (!this._mongooseOptions) {","  // this is the case where we have a CustomQuery, we need to check if we got","  // options passed in, and if we did, merge them in","  if (options) {","  // this is needed because map reduce returns a model that can be queried, but","  // all of the queries on said model should be lean","  if (this.model \u0026\u0026 this.model._mapreduce) {","  // inherit mquery","  mquery.call(this, this.mongooseCollection, options);","/*!"," * inherit mquery"," */","","Query.prototype = new mquery;","/**"," * Flag to opt out of using `$geoWithin`."," *"," *     mongoose.Query.use$geoWithin = false;"," *"," * MongoDB 2.4 deprecated the use of `$within`, replacing it with `$geoWithin`. Mongoose uses `$geoWithin` by default (which is 100% backward compatible with $within). If you are running an older version of MongoDB, set this flag to `false` so your `within()` queries continue to work."," *"," * @see http://docs.mongodb.org/manual/reference/operator/geoWithin/"," * @default true"," * @property use$geoWithin"," * @memberOf Query"," * @receiver Query"," * @api public"," */","","Query.use$geoWithin = mquery.use$geoWithin;","/**"," * Converts this query to a customized, reusable query constructor with all arguments and options retained."," *"," * ####Example"," *"," *     // Create a query for adventure movies and read from the primary"," *     // node in the replica-set unless it is down, in which case we'll"," *     // read from a secondary node."," *     var query = Movie.find({ tags: 'adventure' }).read('primaryPreferred');"," *"," *     // create a custom Query constructor based off these settings"," *     var Adventure = query.toConstructor();"," *"," *     // Adventure is now a subclass of mongoose.Query and works the same way but with the"," *     // default query parameters and options set."," *     Adventure().exec(callback)"," *"," *     // further narrow down our query results while still using the previous settings"," *     Adventure().where({ name: /^Life/ }).exec(callback);"," *"," *     // since Adventure is a stand-alone constructor we can also add our own"," *     // helper methods and getters without impacting global queries"," *     Adventure.prototype.startsWith = function (prefix) {"," *       this.where({ name: new RegExp('^' + prefix) })"," *       return this;"," *     }"," *     Object.defineProperty(Adventure.prototype, 'highlyRated', {"," *       get: function () {"," *         this.where({ rating: { $gt: 4.5 }});"," *         return this;"," *       }"," *     })"," *     Adventure().highlyRated.startsWith('Life').exec(callback)"," *"," * New in 3.7.3"," *"," * @return {Query} subclass-of-Query"," * @api public"," */","","Query.prototype.toConstructor = function toConstructor() {","  // set inherited defaults","  var p = CustomQuery.prototype;","/**"," * Specifies a javascript function or expression to pass to MongoDBs query system."," *"," * ####Example"," *"," *     query.$where('this.comments.length === 10 || this.name.length === 5')"," *"," *     // or"," *"," *     query.$where(function () {"," *       return this.comments.length === 10 || this.name.length === 5;"," *     })"," *"," * ####NOTE:"," *"," * Only use `$where` when you have a condition that cannot be met using other MongoDB operators like `$lt`."," * **Be sure to read about all of [its caveats](http://docs.mongodb.org/manual/reference/operator/where/) before using.**"," *"," * @see $where http://docs.mongodb.org/manual/reference/operator/where/"," * @method $where"," * @param {String|Function} js javascript string or function"," * @return {Query} this"," * @memberOf Query"," * @method $where"," * @api public"," */","","/**"," * Specifies a `path` for use with chaining."," *"," * ####Example"," *"," *     // instead of writing:"," *     User.find({age: {$gte: 21, $lte: 65}}, callback);"," *"," *     // we can instead write:"," *     User.where('age').gte(21).lte(65);"," *"," *     // passing query conditions is permitted"," *     User.find().where({ name: 'vonderful' })"," *"," *     // chaining"," *     User"," *     .where('age').gte(21).lte(65)"," *     .where('name', /^vonderful/i)"," *     .where('friends').slice(10)"," *     .exec(callback)"," *"," * @method where"," * @memberOf Query"," * @param {String|Object} [path]"," * @param {any} [val]"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies the complementary comparison value for paths specified with `where()`"," *"," * ####Example"," *"," *     User.where('age').equals(49);"," *"," *     // is the same as"," *"," *     User.where('age', 49);"," *"," * @method equals"," * @memberOf Query"," * @param {Object} val"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for an `$or` condition."," *"," * ####Example"," *"," *     query.or([{ color: 'red' }, { status: 'emergency' }])"," *"," * @see $or http://docs.mongodb.org/manual/reference/operator/or/"," * @method or"," * @memberOf Query"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for a `$nor` condition."," *"," * ####Example"," *"," *     query.nor([{ color: 'green' }, { status: 'ok' }])"," *"," * @see $nor http://docs.mongodb.org/manual/reference/operator/nor/"," * @method nor"," * @memberOf Query"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for a `$and` condition."," *"," * ####Example"," *"," *     query.and([{ color: 'green' }, { status: 'ok' }])"," *"," * @method and"," * @memberOf Query"," * @see $and http://docs.mongodb.org/manual/reference/operator/and/"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies a $gt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * ####Example"," *"," *     Thing.find().where('age').gt(21)"," *"," *     // or"," *     Thing.find().gt('age', 21)"," *"," * @method gt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $gt http://docs.mongodb.org/manual/reference/operator/gt/"," * @api public"," */","","/**"," * Specifies a $gte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method gte"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $gte http://docs.mongodb.org/manual/reference/operator/gte/"," * @api public"," */","","/**"," * Specifies a $lt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $lt http://docs.mongodb.org/manual/reference/operator/lt/"," * @api public"," */","","/**"," * Specifies a $lte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lte"," * @see $lte http://docs.mongodb.org/manual/reference/operator/lte/"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $ne query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $ne http://docs.mongodb.org/manual/reference/operator/ne/"," * @method ne"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $in query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $in http://docs.mongodb.org/manual/reference/operator/in/"," * @method in"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $nin query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $nin http://docs.mongodb.org/manual/reference/operator/nin/"," * @method nin"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $all query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $all http://docs.mongodb.org/manual/reference/operator/all/"," * @method all"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $size query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * ####Example"," *"," *     MyModel.where('tags').size(0).exec(function (err, docs) {"," *       if (err) return handleError(err);"," *"," *       assert(Array.isArray(docs));"," *       console.log('documents with 0 tags', docs);"," *     })"," *"," * @see $size http://docs.mongodb.org/manual/reference/operator/size/"," * @method size"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $regex query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $regex http://docs.mongodb.org/manual/reference/operator/regex/"," * @method regex"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $maxDistance query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," * @method maxDistance"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a `$mod` condition"," *"," * @method mod"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @see $mod http://docs.mongodb.org/manual/reference/operator/mod/"," * @api public"," */","","/**"," * Specifies an `$exists` condition"," *"," * ####Example"," *"," *     // { name: { $exists: true }}"," *     Thing.where('name').exists()"," *     Thing.where('name').exists(true)"," *     Thing.find().exists('name')"," *"," *     // { name: { $exists: false }}"," *     Thing.where('name').exists(false);"," *     Thing.find().exists('name', false);"," *"," * @method exists"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @see $exists http://docs.mongodb.org/manual/reference/operator/exists/"," * @api public"," */","","/**"," * Specifies an `$elemMatch` condition"," *"," * ####Example"," *"," *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})"," *"," *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})"," *"," *     query.elemMatch('comment', function (elem) {"," *       elem.where('author').equals('autobot');"," *       elem.where('votes').gte(5);"," *     })"," *"," *     query.where('comment').elemMatch(function (elem) {"," *       elem.where({ author: 'autobot' });"," *       elem.where('votes').gte(5);"," *     })"," *"," * @method elemMatch"," * @memberOf Query"," * @param {String|Object|Function} path"," * @param {Object|Function} criteria"," * @return {Query} this"," * @see $elemMatch http://docs.mongodb.org/manual/reference/operator/elemMatch/"," * @api public"," */","","/**"," * Defines a `$within` or `$geoWithin` argument for geo-spatial queries."," *"," * ####Example"," *"," *     query.where(path).within().box()"," *     query.where(path).within().circle()"," *     query.where(path).within().geometry()"," *"," *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });"," *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });"," *     query.where('loc').within({ polygon: [[],[],[],[]] });"," *"," *     query.where('loc').within([], [], []) // polygon"," *     query.where('loc').within([], []) // box"," *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry"," *"," * **MUST** be used after `where()`."," *"," * ####NOTE:"," *"," * As of Mongoose 3.7, `$geoWithin` is always used for queries. To change this behavior, see [Query.use$geoWithin](#query_Query-use%2524geoWithin)."," *"," * ####NOTE:"," *"," * In Mongoose 3.7, `within` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within)."," *"," * @method within"," * @see $polygon http://docs.mongodb.org/manual/reference/operator/polygon/"," * @see $box http://docs.mongodb.org/manual/reference/operator/box/"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see $center http://docs.mongodb.org/manual/reference/operator/center/"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @memberOf Query"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies a $slice projection for an array."," *"," * ####Example"," *"," *     query.slice('comments', 5)"," *     query.slice('comments', -5)"," *     query.slice('comments', [10, 5])"," *     query.where('comments').slice(5)"," *     query.where('comments').slice([-10, 5])"," *"," * @method slice"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val number/range of elements to slice"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements"," * @see $slice http://docs.mongodb.org/manual/reference/projection/slice/#prj._S_slice"," * @api public"," */","","/**"," * Specifies the maximum number of documents the query will return."," *"," * ####Example"," *"," *     query.limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method limit"," * @memberOf Query"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies the number of documents to skip."," *"," * ####Example"," *"," *     query.skip(100).limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method skip"," * @memberOf Query"," * @param {Number} val"," * @see cursor.skip http://docs.mongodb.org/manual/reference/method/cursor.skip/"," * @api public"," */","","/**"," * Specifies the maxScan option."," *"," * ####Example"," *"," *     query.maxScan(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method maxScan"," * @memberOf Query"," * @param {Number} val"," * @see maxScan http://docs.mongodb.org/manual/reference/operator/maxScan/"," * @api public"," */","","/**"," * Specifies the batchSize option."," *"," * ####Example"," *"," *     query.batchSize(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method batchSize"," * @memberOf Query"," * @param {Number} val"," * @see batchSize http://docs.mongodb.org/manual/reference/method/cursor.batchSize/"," * @api public"," */","","/**"," * Specifies the `comment` option."," *"," * ####Example"," *"," *     query.comment('login query')"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method comment"," * @memberOf Query"," * @param {Number} val"," * @see comment http://docs.mongodb.org/manual/reference/operator/comment/"," * @api public"," */","","/**"," * Specifies this query as a `snapshot` query."," *"," * ####Example"," *"," *     query.snapshot() // true"," *     query.snapshot(true)"," *     query.snapshot(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method snapshot"," * @memberOf Query"," * @see snapshot http://docs.mongodb.org/manual/reference/operator/snapshot/"," * @return {Query} this"," * @api public"," */","","/**"," * Sets query hints."," *"," * ####Example"," *"," *     query.hint({ indexA: 1, indexB: -1})"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method hint"," * @memberOf Query"," * @param {Object} val a hint object"," * @return {Query} this"," * @see $hint http://docs.mongodb.org/manual/reference/operator/hint/"," * @api public"," */","","/**"," * Specifies which document fields to include or exclude (also known as the query \"projection\")"," *"," * When using string syntax, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included. Lastly, if a path is prefixed with `+`, it forces inclusion of the path, which is useful for paths excluded at the [schema level](/docs/api.html#schematype_SchemaType-select)."," *"," * ####Example"," *"," *     // include a and b, exclude other fields"," *     query.select('a b');"," *"," *     // exclude c and d, include other fields"," *     query.select('-c -d');"," *"," *     // or you may use object notation, useful when"," *     // you have keys already prefixed with a \"-\""," *     query.select({ a: 1, b: 1 });"," *     query.select({ c: 0, d: 0 });"," *"," *     // force inclusion of field excluded at schema level"," *     query.select('+path')"," *"," * ####NOTE:"," *"," * Cannot be used with `distinct()`."," *"," * _v2 had slightly different syntax such as allowing arrays of field names. This support was removed in v3._"," *"," * @method select"," * @memberOf Query"," * @param {Object|String} arg"," * @return {Query} this"," * @see SchemaType"," * @api public"," */","","/**"," * _DEPRECATED_ Sets the slaveOk option."," *"," * **Deprecated** in MongoDB 2.2 in favor of [read preferences](#query_Query-read)."," *"," * ####Example:"," *"," *     query.slaveOk() // true"," *     query.slaveOk(true)"," *     query.slaveOk(false)"," *"," * @method slaveOk"," * @memberOf Query"," * @deprecated use read() preferences instead if on mongodb \u003e= 2.2"," * @param {Boolean} v defaults to true"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see slaveOk http://docs.mongodb.org/manual/reference/method/rs.slaveOk/"," * @see read() #query_Query-read"," * @return {Query} this"," * @api public"," */","","/**"," * Determines the MongoDB nodes from which to read."," *"," * ####Preferences:"," *"," *     primary - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags."," *     secondary            Read from secondary if available, otherwise error."," *     primaryPreferred     Read from primary if available, otherwise a secondary."," *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary."," *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection."," *"," * Aliases"," *"," *     p   primary"," *     pp  primaryPreferred"," *     s   secondary"," *     sp  secondaryPreferred"," *     n   nearest"," *"," * ####Example:"," *"," *     new Query().read('primary')"," *     new Query().read('p')  // same as primary"," *"," *     new Query().read('primaryPreferred')"," *     new Query().read('pp') // same as primaryPreferred"," *"," *     new Query().read('secondary')"," *     new Query().read('s')  // same as secondary"," *"," *     new Query().read('secondaryPreferred')"," *     new Query().read('sp') // same as secondaryPreferred"," *"," *     new Query().read('nearest')"," *     new Query().read('n')  // same as nearest"," *"," *     // read from secondaries with matching tags"," *     new Query().read('s', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }])"," *"," * Read more about how to use read preferrences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences)."," *"," * @method read"," * @memberOf Query"," * @param {String} pref one of the listed preference options or aliases"," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences"," * @return {Query} this"," * @api public"," */","","Query.prototype.read = function read(pref, tags) {","  // first cast into a ReadPreference object to support tags","  var read = readPref.call(readPref, pref, tags);","/**"," * Merges another Query or conditions object into this one."," *"," * When a Query is passed, conditions, field selection and options are merged."," *"," * New in 3.7.0"," *"," * @method merge"," * @memberOf Query"," * @param {Query|Object} source"," * @return {Query} this"," */","","/**"," * Sets query options."," *"," * ####Options:"," *"," * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *"," * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *"," * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *"," * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *"," * - [maxscan](https://docs.mongodb.org/v3.2/reference/operator/meta/maxScan/#metaOp._S_maxScan) *"," * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *"," * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *"," * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *"," * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *"," * - [readPreference](http://docs.mongodb.org/manual/applications/replication/#read-preference) **"," * - [lean](./api.html#query_Query-lean) *"," * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)"," *"," * _* denotes a query helper method is also available_"," * _** query helper method to set `readPreference` is `read()`_"," *"," * @param {Object} options"," * @api public"," */","","Query.prototype.setOptions = function(options, overwrite) {","  // overwrite is only for internal use","  if (overwrite) {","    // ensure that _mongooseOptions \u0026 options are two different objects","    this._mongooseOptions = (options \u0026\u0026 utils.clone(options)) || {};","/**"," * Returns the current query conditions as a JSON object."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.find({ a: 1 }).where('b').gt(2);"," *     query.getQuery(); // { a: 1, b: { $gt: 2 } }"," *"," * @return {Object} current query conditions"," * @api public"," */","","Query.prototype.getQuery = function() {","/**"," * Returns the current update operations as a JSON object."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.update({}, { $set: { a: 5 } });"," *     query.getUpdate(); // { $set: { a: 5 } }"," *"," * @return {Object} current update operations"," * @api public"," */","","Query.prototype.getUpdate = function() {","/**"," * Returns fields selection for this query."," *"," * @method _fieldsForExec"," * @return {Object}"," * @api private"," * @receiver Query"," */","","/**"," * Return an update document with corrected $set operations."," *"," * @method _updateForExec"," * @api private"," * @receiver Query"," */","","Query.prototype._updateForExec = function() {","      // fix up $set sugar","      if (!ret.$set) {","/**"," * Makes sure _path is set."," *"," * @method _ensurePath"," * @param {String} method"," * @api private"," * @receiver Query"," */","","/**"," * Determines if `conds` can be merged using `mquery().merge()`"," *"," * @method canMerge"," * @memberOf Query"," * @param {Object} conds"," * @return {Boolean}"," * @api private"," */","","/**"," * Returns default options for this query."," *"," * @param {Model} model"," * @api private"," */","","Query.prototype._optionsForExec = function(model) {","/**"," * Sets the lean option."," *"," * Documents returned from queries with the `lean` option enabled are plain javascript objects, not [MongooseDocuments](#document-js). They have no `save` method, getters/setters or other Mongoose magic applied."," *"," * ####Example:"," *"," *     new Query().lean() // true"," *     new Query().lean(true)"," *     new Query().lean(false)"," *"," *     Model.find().lean().exec(function (err, docs) {"," *       docs[0] instanceof mongoose.Document // false"," *     });"," *"," * This is a [great](https://groups.google.com/forum/#!topic/mongoose-orm/u2_DzDydcnA/discussion) option in high-performance read-only scenarios, especially when combined with [stream](#query_Query-stream)."," *"," * @param {Boolean} bool defaults to true"," * @return {Query} this"," * @api public"," */","","Query.prototype.lean = function(v) {","/**"," * Thunk around find()"," *"," * @param {Function} [callback]"," * @return {Query} this"," * @api private"," */","Query.prototype._find = function(callback) {","/**"," * Finds documents."," *"," * When no `callback` is passed, the query is not executed. When the query is executed, the result will be an array of documents."," *"," * ####Example"," *"," *     query.find({ name: 'Los Pollos Hermanos' }).find(callback)"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.find = function(conditions, callback) {","  // if we don't have a callback, then just return the query object","  if (!callback) {","/*!"," * hydrates many documents"," *"," * @param {Model} model"," * @param {Array} docs"," * @param {Object} fields"," * @param {Query} self"," * @param {Array} [pop] array of paths used in population"," * @param {Function} callback"," */","","function completeMany(model, docs, fields, self, pop, callback) {","/**"," * Thunk around findOne()"," *"," * @param {Function} [callback]"," * @see findOne http://docs.mongodb.org/manual/reference/method/db.collection.findOne/"," * @api private"," */","","Query.prototype._findOne = function(callback) {","  // don't pass in the conditions because we already merged them in","  Query.base.findOne.call(_this, {}, function(err, doc) {","/**"," * Declares the query a findOne operation. When executed, the first found document is passed to the callback."," *"," * Passing a `callback` executes the query. The result of the query is a single document."," *"," * ####Example"," *"," *     var query  = Kitten.where({ color: 'white' });"," *     query.findOne(function (err, kitten) {"," *       if (err) return handleError(err);"," *       if (kitten) {"," *         // doc may be null if no document matched"," *       }"," *     });"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Object} [projection] optional fields to return"," * @param {Function} [callback]"," * @return {Query} this"," * @see findOne http://docs.mongodb.org/manual/reference/method/db.collection.findOne/"," * @see Query.select #query_Query-select"," * @api public"," */","","Query.prototype.findOne = function(conditions, projection, options, callback) {","  // make sure we don't send in the whole Document to merge()","  conditions = utils.toObject(conditions);","    // already merged in the conditions, don't need to send them in.","    return Query.base.findOne.call(this);","/**"," * Thunk around count()"," *"," * @param {Function} [callback]"," * @see count http://docs.mongodb.org/manual/reference/method/db.collection.count/"," * @api private"," */","","Query.prototype._count = function(callback) {","/**"," * Specifying this query as a `count` query."," *"," * Passing a `callback` executes the query."," *"," * ####Example:"," *"," *     var countQuery = model.where({ 'color': 'black' }).count();"," *"," *     query.count({ color: 'black' }).count(callback)"," *"," *     query.count({ color: 'black' }, callback)"," *"," *     query.where('color', 'black').count(function (err, count) {"," *       if (err) return handleError(err);"," *       console.log('there are %d kittens', count);"," *     })"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @see count http://docs.mongodb.org/manual/reference/method/db.collection.count/"," * @api public"," */","","Query.prototype.count = function(conditions, callback) {","/**"," * Declares or executes a distict() operation."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     distinct(field, conditions, callback)"," *     distinct(field, conditions)"," *     distinct(field, callback)"," *     distinct(field)"," *     distinct(callback)"," *     distinct()"," *"," * @param {String} [field]"," * @param {Object|Query} [criteria]"," * @param {Function} [callback]"," * @return {Query} this"," * @see distinct http://docs.mongodb.org/manual/reference/method/db.collection.distinct/"," * @api public"," */","","Query.prototype.distinct = function(field, conditions, callback) {","/**"," * Sets the sort order"," *"," * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`."," *"," * If a string is passed, it must be a space delimited list of path names. The"," * sort order of each path is ascending unless the path name is prefixed with `-`"," * which will be treated as descending."," *"," * ####Example"," *"," *     // sort by \"field\" ascending and \"test\" descending"," *     query.sort({ field: 'asc', test: -1 });"," *"," *     // equivalent"," *     query.sort('field -test');"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Object|String} arg"," * @return {Query} this"," * @see cursor.sort http://docs.mongodb.org/manual/reference/method/cursor.sort/"," * @api public"," */","","Query.prototype.sort = function(arg) {","    // time to deal with the terrible syntax","    for (var i = 0; i \u003c arg.length; i++) {","/**"," * Declare and/or execute this query as a remove() operation."," *"," * ####Example"," *"," *     Model.remove({ artist: 'Anne Murray' }, callback)"," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback, you must first call `remove()` and then execute it by using the `exec()` method."," *"," *     // not executed"," *     var query = Model.find().remove({ name: 'Anne Murray' })"," *"," *     // executed"," *     query.remove({ name: 'Anne Murray' }, callback)"," *     query.remove({ name: 'Anne Murray' }).remove(callback)"," *"," *     // executed without a callback"," *     query.exec()"," *"," *     // summary"," *     query.remove(conds, fn); // executes"," *     query.remove(conds)"," *     query.remove(fn) // executes"," *     query.remove()"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @see remove http://docs.mongodb.org/manual/reference/method/db.collection.remove/"," * @api public"," */","","Query.prototype.remove = function(cond, callback) {","/*!"," * hydrates a document"," *"," * @param {Model} model"," * @param {Document} doc"," * @param {Object} res 3rd parameter to callback"," * @param {Object} fields"," * @param {Query} self"," * @param {Array} [pop] array of paths used in population"," * @param {Function} callback"," */","","function completeOne(model, doc, res, fields, self, pop, callback) {","/*!"," * If the model is a discriminator type and not root, then add the key \u0026 value to the criteria."," */","","function prepareDiscriminatorCriteria(query) {","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command."," *"," * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `fields`: {Object|String} - Field selection. Equivalent to `.select(fields).findOneAndUpdate()`"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb \u003e= 2.6.0"," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB \u003e= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false."," *"," * ####Callback Signature"," *     function(error, doc) {"," *       // error: any errors that occurred"," *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`"," *     }"," *"," * ####Examples"," *"," *     query.findOneAndUpdate(conditions, update, options, callback) // executes"," *     query.findOneAndUpdate(conditions, update, options)  // returns Query"," *     query.findOneAndUpdate(conditions, update, callback) // executes"," *     query.findOneAndUpdate(conditions, update)           // returns Query"," *     query.findOneAndUpdate(update, callback)             // returns Query"," *     query.findOneAndUpdate(update)                       // returns Query"," *     query.findOneAndUpdate(callback)                     // executes"," *     query.findOneAndUpdate()                             // returns Query"," *"," * @method findOneAndUpdate"," * @memberOf Query"," * @param {Object|Query} [query]"," * @param {Object} [doc]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @return {Query} this"," * @api public"," */","","Query.prototype.findOneAndUpdate = function(criteria, doc, options, callback) {","  // apply doc","  if (doc) {","/**"," * Thunk around findOneAndUpdate()"," *"," * @param {Function} [callback]"," * @api private"," */","","Query.prototype._findOneAndUpdate = function(callback) {","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb \u003e= 2.6.0"," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," *"," * ####Callback Signature"," *     function(error, doc, result) {"," *       // error: any errors that occurred"," *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`"," *       // result: [raw result from the MongoDB driver](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," *     }"," *"," * ####Examples"," *"," *     A.where().findOneAndRemove(conditions, options, callback) // executes"," *     A.where().findOneAndRemove(conditions, options)  // return Query"," *     A.where().findOneAndRemove(conditions, callback) // executes"," *     A.where().findOneAndRemove(conditions) // returns Query"," *     A.where().findOneAndRemove(callback)   // executes"," *     A.where().findOneAndRemove()           // returns Query"," *"," * @method findOneAndRemove"," * @memberOf Query"," * @param {Object} [conditions]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Query.prototype.findOneAndRemove = function(conditions, options, callback) {","/**"," * Thunk around findOneAndRemove()"," *"," * @param {Function} [callback]"," * @return {Query} this"," * @api private"," */","Query.prototype._findOneAndRemove = function(callback) {","/**"," * Override mquery.prototype._findAndModify to provide casting etc."," *"," * @param {String} type - either \"remove\" or \"update\""," * @param {Function} callback"," * @api private"," */","","Query.prototype._findAndModify = function(type, callback) {","        // still need to do the upsert to empty doc","        var doc = utils.clone(castedQuery);","      // In order to make MongoDB 2.6 happy (see","      // https://jira.mongodb.org/browse/SERVER-12266 and related issues)","      // if we have an actual update document but $set is empty, junk the $set.","      if (castedDoc.$set \u0026\u0026 Object.keys(castedDoc.$set).length === 0) {","/**"," * Override mquery.prototype._mergeUpdate to handle mongoose objects in"," * updates."," *"," * @param {Object} doc"," * @api private"," */","","Query.prototype._mergeUpdate = function(doc) {","/*!"," * The mongodb driver 1.3.23 only supports the nested array sort"," * syntax. We must convert it or sorting findAndModify will not work."," */","","function convertSortToArray(opts) {","/**"," * Internal thunk for .update()"," *"," * @param {Function} callback"," * @see Model.update #model_Model.update"," * @api private"," */","Query.prototype._execUpdate = function(callback) {","/**"," * Declare and/or execute this query as an update() operation."," *"," * _All paths passed that are not $atomic operations will become $set ops._"," *"," * ####Example"," *"," *     Model.where({ _id: id }).update({ title: 'words' })"," *"," *     // becomes"," *"," *     Model.where({ _id: id }).update({ $set: { title: 'words' }})"," *"," * ####Valid options:"," *"," *  - `safe` (boolean) safe mode (defaults to value set in schema (true))"," *  - `upsert` (boolean) whether to create the doc if it doesn't match (false)"," *  - `multi` (boolean) whether multiple documents should be updated (false)"," *  - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," *  - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB \u003e= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," *  - `strict` (boolean) overrides the `strict` option for this update"," *  - `overwrite` (boolean) disables update-only mode, allowing you to overwrite the doc (false)"," *  - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false."," *"," * ####Note"," *"," * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection."," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback, we must first call update() and then execute it by using the `exec()` method."," *"," *     var q = Model.where({ _id: id });"," *     q.update({ $set: { name: 'bob' }}).update(); // not executed"," *"," *     q.update({ $set: { name: 'bob' }}).exec(); // executed"," *"," *     // keys that are not $atomic ops become $set."," *     // this executes the same command as the previous example."," *     q.update({ name: 'bob' }).exec();"," *"," *     // overwriting with empty docs"," *     var q = Model.where({ _id: id }).setOptions({ overwrite: true })"," *     q.update({ }, callback); // executes"," *"," *     // multi update with overwrite to empty doc"," *     var q = Model.where({ _id: id });"," *     q.setOptions({ multi: true, overwrite: true })"," *     q.update({ });"," *     q.update(callback); // executed"," *"," *     // multi updates"," *     Model.where()"," *          .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)"," *"," *     // more multi updates"," *     Model.where()"," *          .setOptions({ multi: true })"," *          .update({ $set: { arr: [] }}, callback)"," *"," *     // single update by default"," *     Model.where({ email: 'address@example.com' })"," *          .update({ $inc: { counter: 1 }}, callback)"," *"," * API summary"," *"," *     update(criteria, doc, options, cb) // executes"," *     update(criteria, doc, options)"," *     update(criteria, doc, cb) // executes"," *     update(criteria, doc)"," *     update(doc, cb) // executes"," *     update(doc)"," *     update(cb) // executes"," *     update(true) // executes"," *     update()"," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query} this"," * @see Model.update #model_Model.update"," * @see update http://docs.mongodb.org/manual/reference/method/db.collection.update/"," * @api public"," */","","Query.prototype.update = function(conditions, doc, options, callback) {","    // .update(conditions, doc, callback)","    callback = options;","    // .update(doc, callback);","    callback = doc;","    // .update(callback)","    callback = conditions;","    // .update(doc)","    doc = conditions;","  // make sure we don't send in the whole Document to merge()","  conditions = utils.toObject(conditions);","  // strict is an option used in the update checking, make sure it gets set","  if (options) {","  // if doc is undefined at this point, this means this function is being","  // executed by exec(not always see below). Grab the update doc from here in","  // order to validate","  // This could also be somebody calling update() or update({}). Probably not a","  // common use case, check for _update to make sure we don't do anything bad","  if (!doc \u0026\u0026 this._update) {","  // validate the selector part of the query","  var castedQuery = castQuery(this);","  // validate the update part of the query","  var castedDoc;","    // Make sure promises know that this is still an update, see gh-2796","    this.op = 'update';","  // Hooks","  if (callback) {","/**"," * Executes the query"," *"," * ####Examples:"," *"," *     var promise = query.exec();"," *     var promise = query.exec('update');"," *"," *     query.exec(callback);"," *     query.exec('find', callback);"," *"," * @param {String|Function} [operation]"," * @param {Function} [callback]"," * @return {Promise}"," * @api public"," */","","Query.prototype.exec = function exec(op, callback) {","/**"," * Executes the query returning a `Promise` which will be"," * resolved with either the doc(s) or rejected with the error."," *"," * @param {Function} [resolve]"," * @param {Function} [reject]"," * @return {Promise}"," * @api public"," */","","Query.prototype.then = function(resolve, reject) {","/**"," * Executes the query returning a `Promise` which will be"," * resolved with either the doc(s) or rejected with the error."," * Like `.then()`, but only takes a rejection handler."," *"," * @param {Function} [reject]"," * @return {Promise}"," * @api public"," */","","Query.prototype.catch = function(reject) {","/**"," * Finds the schema for `path`. This is different than"," * calling `schema.path` as it also resolves paths with"," * positional selectors (something.$.another.$.path)."," *"," * @param {String} path"," * @api private"," */","","Query.prototype._getSchema = function _getSchema(path) {","/*!"," * These operators require casting docs"," * to real Documents for Update operations."," */","","var castOps = {","/*!"," * These operators should be cast to numbers instead"," * of their path schema type."," */","","var numberOps = {","/**"," * Casts obj for an update command."," *"," * @param {Object} obj"," * @return {Object} obj after casting its values"," * @api private"," */","","Query.prototype._castUpdate = function _castUpdate(obj, overwrite) {","    // if overwrite is set, don't do any of the special $set stuff","    if (op[0] !== '$' \u0026\u0026 !overwrite) {","      // fix up $set sugar","      if (!ret.$set) {","  // cast each value","  i = ops.length;","  // if we get passed {} for the update, we still need to respect that when it","  // is an overwrite scenario","  if (overwrite) {","      // if we are just using overwrite, cast the query and then we will","      // *always* return the value, even if it is an empty object. We need to","      // set hasKeys above because we need to account for the case where the","      // user passes {} and wants to clobber the whole document","      // Also, _walkUpdatePath expects an operation, so give it $set since that","      // is basically what we're doing","      this._walkUpdatePath(ret, '$set');","/**"," * Walk each path of obj and cast its values"," * according to its schema."," *"," * @param {Object} obj - part of a query"," * @param {String} op - the atomic operator ($pull, $set, etc)"," * @param {String} pref - path prefix (internal only)"," * @return {Bool} true if this path has keys to update"," * @api private"," */","","Query.prototype._walkUpdatePath = function _walkUpdatePath(obj, op, pref) {","      // watch for embedded doc schemas","      schema = this._getSchema(prefix + key);","        // embedded doc schema","        hasKeys = true;","        // $currentDate can take an object","        obj[key] = this._castUpdateVal(schema, val, op);","        // gh-2314","        // we should be able to set a schema-less field","        // to an empty object literal","        hasKeys |= this._walkUpdatePath(val, op, prefix + key) ||","        // gh-1845 temporary fix: ignore $rename. See gh-3027 for tracking","        // improving this.","        if (op === '$rename') {","/**"," * Casts `val` according to `schema` and atomic `op`."," *"," * @param {Schema} schema"," * @param {Object} val"," * @param {String} op - the atomic operator ($pull, $set, etc)"," * @param {String} [$conditional]"," * @api private"," */","","Query.prototype._castUpdateVal = function _castUpdateVal(schema, val, op, $conditional) {","    // non-existing schema path","    return op in numberOps","    // Cast values for ops that add data to MongoDB.","    // Ensures embedded documents get ObjectIds etc.","    var tmp = schema.cast(val);","/*!"," * castQuery"," * @api private"," */","","function castQuery(query) {","/*!"," * castDoc"," * @api private"," */","","function castDoc(query, overwrite) {","/**"," * Specifies paths which should be populated with other documents."," *"," * ####Example:"," *"," *     Kitten.findOne().populate('owner').exec(function (err, kitten) {"," *       console.log(kitten.owner.name) // Max"," *     })"," *"," *     Kitten.find().populate({"," *         path: 'owner'"," *       , select: 'name'"," *       , match: { color: 'black' }"," *       , options: { sort: { name: -1 }}"," *     }).exec(function (err, kittens) {"," *       console.log(kittens[0].owner.name) // Zoopa"," *     })"," *"," *     // alternatively"," *     Kitten.find().populate('owner', 'name', null, {sort: { name: -1 }}).exec(function (err, kittens) {"," *       console.log(kittens[0].owner.name) // Zoopa"," *     })"," *"," * Paths are populated after the query executes and a response is received. A separate query is then executed for each path specified for population. After a response for each query has also been returned, the results are passed to the callback."," *"," * @param {Object|String} path either the path to populate or an object specifying all parameters"," * @param {Object|String} [select] Field selection for the population query"," * @param {Model} [model] The model you wish to use for population. If not specified, populate will look up the model by the name in the Schema's `ref` field."," * @param {Object} [match] Conditions for the population query"," * @param {Object} [options] Options for the population query (sort, etc)"," * @see population ./populate.html"," * @see Query#select #query_Query-select"," * @see Model.populate #model_Model.populate"," * @return {Query} this"," * @api public"," */","","Query.prototype.populate = function() {","/**"," * Casts this query to the schema of `model`"," *"," * ####Note"," *"," * If `obj` is present, it is cast instead of this query."," *"," * @param {Model} model"," * @param {Object} [obj]"," * @return {Object}"," * @api public"," */","","Query.prototype.cast = function(model, obj) {","/**"," * Casts selected field arguments for field selection with mongo 2.2"," *"," *     query.select({ ids: { $elemMatch: { $in: [hexString] }})"," *"," * @param {Object} fields"," * @see https://github.com/Automattic/mongoose/issues/1091"," * @see http://docs.mongodb.org/manual/reference/projection/elemMatch/"," * @api private"," */","","Query.prototype._castFields = function _castFields(fields) {","    // collect $elemMatch args","    while (i--) {","    // they passed $elemMatch, cast em","    try {","    // apply the casted field args","    i = elemMatchKeys.length;","/**"," * Applies schematype selected options to this query."," * @api private"," */","","Query.prototype._applyPaths = function applyPaths() {","  // determine if query is selecting or excluding fields","","  var fields = this._fields,","  // if selecting, apply default schematype select:true fields","  // if excluding, apply schematype select:false fields","","  var selected = [],","      // forced inclusion","      delete fields[plusPath];","      // if there are other fields being included, add this one","      // if no other included fields, leave this out (implied inclusion)","      if (exclude === false \u0026\u0026 keys.length \u003e 1 \u0026\u0026 !~keys.indexOf(path)) {","    // check for parent exclusions","    var root = path.split('.')[0];","    // avoid recursion","    if (~seen.indexOf(schema)) return;","      // array of subdocs?","      if (type.schema) {","      // user didn't specify fields, implies returning all fields.","      // only need to apply excluded fields","      excluded.length \u0026\u0026 this.select('-' + excluded.join(' -'));","/**"," * Returns a Node.js 0.8 style [read stream](http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream) interface."," *"," * ####Example"," *"," *     // follows the nodejs 0.8 stream api"," *     Thing.find({ name: /^hello/ }).stream().pipe(res)"," *"," *     // manual streaming"," *     var stream = Thing.find({ name: /^hello/ }).stream();"," *"," *     stream.on('data', function (doc) {"," *       // do something with the mongoose document"," *     }).on('error', function (err) {"," *       // handle the error"," *     }).on('close', function () {"," *       // the stream is closed"," *     });"," *"," * ####Valid options"," *"," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`."," *"," * ####Example"," *"," *     // JSON.stringify all documents before emitting"," *     var stream = Thing.find().stream({ transform: JSON.stringify });"," *     stream.pipe(writeStream);"," *"," * @return {QueryStream}"," * @param {Object} [options]"," * @see QueryStream"," * @api public"," */","","Query.prototype.stream = function stream(opts) {","/**"," * Returns a wrapper around a [mongodb driver cursor](http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html)."," * A QueryCursor exposes a [Streams3](https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/)-compatible"," * interface, as well as a `.next()` function."," *"," * ####Example"," *"," *     // There are 2 ways to use a cursor. First, as a stream:"," *     Thing."," *       find({ name: /^hello/ })."," *       cursor()."," *       on('data', function(doc) { console.log(doc); })."," *       on('end', function() { console.log('Done!'); });"," *"," *     // Or you can use `.next()` to manually get the next doc in the stream."," *     // `.next()` returns a promise, so you can use promises or callbacks."," *     var cursor = Thing.find({ name: /^hello/ }).cursor();"," *     cursor.next(function(error, doc) {"," *       console.log(doc);"," *     });"," *"," *     // Because `.next()` returns a promise, you can use co"," *     // to easily iterate through all documents without loading them"," *     // all into memory."," *     co(function*() {"," *       const cursor = Thing.find({ name: /^hello/ }).cursor();"," *       for (let doc = yield cursor.next(); doc != null; doc = yield cursor.next()) {"," *         console.log(doc);"," *       }"," *     });"," *"," *"," * @return {QueryCursor}"," * @param {Object} [options]"," * @see QueryCursor"," * @api public"," */","","Query.prototype.cursor = function cursor(opts) {","// the rest of these are basically to support older Mongoose syntax with mquery","","/**","/**"," * _DEPRECATED_ Alias of `maxScan`"," *"," * @deprecated"," * @see maxScan #query_Query-maxScan"," * @method maxscan"," * @memberOf Query"," */","","Query.prototype.maxscan = Query.base.maxScan;","/**"," * Sets the tailable option (for use with capped collections)."," *"," * ####Example"," *"," *     query.tailable() // true"," *     query.tailable(true)"," *     query.tailable(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Boolean} bool defaults to true"," * @param {Object} [opts] options to set"," * @param {Number} [opts.numberOfRetries] if cursor is exhausted, retry this many times before giving up"," * @param {Number} [opts.tailableRetryInterval] if cursor is exhausted, wait this many milliseconds before retrying"," * @see tailable http://docs.mongodb.org/manual/tutorial/create-tailable-cursor/"," * @api public"," */","","Query.prototype.tailable = function(val, opts) {","  // we need to support the tailable({ awaitdata : true }) as well as the","  // tailable(true, {awaitdata :true}) syntax that mquery does not support","  if (val \u0026\u0026 val.constructor.name === 'Object') {","        // For backwards compatibility","        this.options[key] = !!opts[key];","/**"," * Declares an intersects query for `geometry()`."," *"," * ####Example"," *"," *     query.where('path').intersects().geometry({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," *     query.where('path').intersects({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," * ####NOTE:"," *"," * **MUST** be used after `where()`."," *"," * ####NOTE:"," *"," * In Mongoose 3.7, `intersects` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within)."," *"," * @method intersects"," * @memberOf Query"," * @param {Object} [arg]"," * @return {Query} this"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see geoIntersects http://docs.mongodb.org/manual/reference/operator/geoIntersects/"," * @api public"," */","","/**"," * Specifies a `$geometry` condition"," *"," * ####Example"," *"," *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]"," *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })"," *"," *     // or"," *     var polyB = [[ 0, 0 ], [ 1, 1 ]]"," *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })"," *"," *     // or"," *     var polyC = [ 0, 0 ]"," *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })"," *"," *     // or"," *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })"," *"," * The argument is assigned to the most recent path passed to `where()`."," *"," * ####NOTE:"," *"," * `geometry()` **must** come after either `intersects()` or `within()`."," *"," * The `object` argument must contain `type` and `coordinates` properties."," * - type {String}"," * - coordinates {Array}"," *"," * @method geometry"," * @memberOf Query"," * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples."," * @return {Query} this"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * Specifies a `$near` or `$nearSphere` condition"," *"," * These operators return documents sorted by distance."," *"," * ####Example"," *"," *     query.where('loc').near({ center: [10, 10] });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });"," *     query.near('loc', { center: [10, 10], maxDistance: 5 });"," *"," * @method near"," * @memberOf Query"," * @param {String} [path]"," * @param {Object} val"," * @return {Query} this"," * @see $near http://docs.mongodb.org/manual/reference/operator/near/"," * @see $nearSphere http://docs.mongodb.org/manual/reference/operator/nearSphere/"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/*!"," * Overwriting mquery is needed to support a couple different near() forms found in older"," * versions of mongoose"," * near([1,1])"," * near(1,1)"," * near(field, [1,2])"," * near(field, 1, 2)"," * In addition to all of the normal forms supported by mquery"," */","","Query.prototype.near = function() {","  // TODO refactor","","  if (arguments.length === 1) {","      // just passing a path","      params.push(arguments[0]);","/**"," * _DEPRECATED_ Specifies a `$nearSphere` condition"," *"," * ####Example"," *"," *     query.where('loc').nearSphere({ center: [10, 10], maxDistance: 5 });"," *"," * **Deprecated.** Use `query.near()` instead with the `spherical` option set to `true`."," *"," * ####Example"," *"," *     query.where('loc').near({ center: [10, 10], spherical: true });"," *"," * @deprecated"," * @see near() #query_Query-near"," * @see $near http://docs.mongodb.org/manual/reference/operator/near/"," * @see $nearSphere http://docs.mongodb.org/manual/reference/operator/nearSphere/"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," */","","Query.prototype.nearSphere = function() {","/**"," * Specifies a $polygon condition"," *"," * ####Example"," *"," *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])"," *     query.polygon('loc', [10,20], [13, 25], [7,15])"," *"," * @method polygon"," * @memberOf Query"," * @param {String|Array} [path]"," * @param {Array|Object} [coordinatePairs...]"," * @return {Query} this"," * @see $polygon http://docs.mongodb.org/manual/reference/operator/polygon/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * Specifies a $box condition"," *"," * ####Example"," *"," *     var lowerLeft = [40.73083, -73.99756]"," *     var upperRight= [40.741404,  -73.988135]"," *"," *     query.where('loc').within().box(lowerLeft, upperRight)"," *     query.box({ ll : lowerLeft, ur : upperRight })"," *"," * @method box"," * @memberOf Query"," * @see $box http://docs.mongodb.org/manual/reference/operator/box/"," * @see within() Query#within #query_Query-within"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @param {Object} val"," * @param [Array] Upper Right Coords"," * @return {Query} this"," * @api public"," */","","/*!"," * this is needed to support the mongoose syntax of:"," * box(field, { ll : [x,y], ur : [x2,y2] })"," * box({ ll : [x,y], ur : [x2,y2] })"," */","","Query.prototype.box = function(ll, ur) {","/**"," * Specifies a $center or $centerSphere condition."," *"," * ####Example"," *"," *     var area = { center: [50, 50], radius: 10, unique: true }"," *     query.where('loc').within().circle(area)"," *     // alternatively"," *     query.circle('loc', area);"," *"," *     // spherical calculations"," *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }"," *     query.where('loc').within().circle(area)"," *     // alternatively"," *     query.circle('loc', area);"," *"," * New in 3.7.0"," *"," * @method circle"," * @memberOf Query"," * @param {String} [path]"," * @param {Object} area"," * @return {Query} this"," * @see $center http://docs.mongodb.org/manual/reference/operator/center/"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @see $geoWithin http://docs.mongodb.org/manual/reference/operator/geoWithin/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * _DEPRECATED_ Alias for [circle](#query_Query-circle)"," *"," * **Deprecated.** Use [circle](#query_Query-circle) instead."," *"," * @deprecated"," * @method center"," * @memberOf Query"," * @api public"," */","","Query.prototype.center = Query.base.circle;","/**"," * _DEPRECATED_ Specifies a $centerSphere condition"," *"," * **Deprecated.** Use [circle](#query_Query-circle) instead."," *"," * ####Example"," *"," *     var area = { center: [50, 50], radius: 10 };"," *     query.where('loc').within().centerSphere(area);"," *"," * @deprecated"," * @param {String} [path]"," * @param {Object} val"," * @return {Query} this"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @api public"," */","","Query.prototype.centerSphere = function() {","/**"," * Determines if field selection has been made."," *"," * @method selected"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/**"," * Determines if inclusive field selection has been made."," *"," *     query.selectedInclusively() // false"," *     query.select('name')"," *     query.selectedInclusively() // true"," *"," * @method selectedInclusively"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/**"," * Determines if exclusive field selection has been made."," *"," *     query.selectedExclusively() // false"," *     query.select('-name')"," *     query.selectedExclusively() // true"," *     query.selectedInclusively() // false"," *"," * @method selectedExclusively"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/*!"," * Export"," */","","module.exports = Query;"],"Functions":["function Query(conditions, options, model, collection) "," *     Adventure.prototype.startsWith = function (prefix) "," *       get: function () ","Query.prototype.toConstructor = function toConstructor() ","  var CustomQuery = function(criteria, options) "," * Specifies a javascript function or expression to pass to MongoDBs query system."," *     query.$where(function () "," * @param String|Function} js javascript string or function"," *     MyModel.where('tags').size(0).exec(function (err, docs) "," *     query.elemMatch('comment', function (elem) "," *     query.where('comment').elemMatch(function (elem) "," * In Mongoose 3.7, `within` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within).","Query.prototype.read = function read(pref, tags) ","Query.prototype.setOptions = function(options, overwrite) ","Query.prototype.getQuery = function() ","Query.prototype.getUpdate = function() ","Query.prototype._updateForExec = function() ","Query.prototype._optionsForExec = function(model) "," *     Model.find().lean().exec(function (err, docs) ","Query.prototype.lean = function(v) ","Query.prototype._find = function(callback) ","  var cb = function(err, docs) ","    _this.model.populate(docs, pop, function(err, docs) ","Query.prototype.find = function(conditions, callback) ","  if (typeof conditions === 'function') ","function completeMany(model, docs, fields, self, pop, callback) ","  function init(err) ","Query.prototype._findOne = function(callback) ","  Query.base.findOne.call(_this, }, function(err, doc) {","    _this.model.populate(doc, pop, function(err, doc) "," *     query.findOne(function (err, kitten) ","Query.prototype.findOne = function(conditions, projection, options, callback) ","  if (typeof conditions === 'function') ","  } else if (typeof projection === 'function') ","  } else if (typeof options === 'function') ","Query.prototype._count = function(callback) ","    process.nextTick(function() "," *     query.where('color', 'black').count(function (err, count) ","Query.prototype.count = function(conditions, callback) ","  if (typeof conditions === 'function') ","Query.prototype.distinct = function(field, conditions, callback) ","    if (typeof conditions === 'function') ","    } else if (typeof field === 'function') ","Query.prototype.sort = function(arg) ","Query.prototype.remove = function(cond, callback) ","  if (typeof cond === 'function') ","  var cb = typeof callback === 'function';","function completeOne(model, doc, res, fields, self, pop, callback) ","  casted.init(doc, opts, function(err) ","function prepareDiscriminatorCriteria(query) "," * - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false."," *     function(error, doc) ","Query.prototype.findOneAndUpdate = function(criteria, doc, options, callback) ","      if (typeof options === 'function') ","      if (typeof doc === 'function') ","      if (typeof criteria === 'function') ","Query.prototype._findOneAndUpdate = function(callback) "," *     function(error, doc, result) ","Query.prototype.findOneAndRemove = function(conditions, options, callback) ","      if (typeof options === 'function') ","      if (typeof conditions === 'function') ","Query.prototype._findOneAndRemove = function(callback) ","Query.prototype._findAndModify = function(type, callback) ","  if (typeof callback !== 'function') ","  var cb = function(err, doc, res) ","    _this.model.populate(doc, pop, function(err, doc) ","    var _callback = function(error) ","      _this._collection.findAndModify(castedQuery, castedDoc, opts, utils.tick(function(error, res) ","    this._collection.findAndModify(castedQuery, castedDoc, opts, utils.tick(function(error, res) ","Query.prototype._mergeUpdate = function(doc) ","function convertSortToArray(opts) ","Query.prototype._execUpdate = function(callback) ","    var _callback = function(err) ","      process.nextTick(function() "," *  - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false.","Query.prototype.update = function(conditions, doc, options, callback) ","  if (typeof options === 'function') ","  } else if (typeof doc === 'function') ","  } else if (typeof conditions === 'function') ","    if (typeof oldCb === 'function') ","      callback = function(error, result) ","  // if doc is undefined at this point, this means this function is being","Query.prototype.exec = function exec(op, callback) ","  if (typeof op === 'function') ","  return new Promise.ES6(function(resolve, reject) ","    _this[_this.op].call(_this, function(error, res) ","Query.prototype.then = function(resolve, reject) ","Query.prototype.catch = function(reject) ","Query.prototype._getSchema = function _getSchema(path) ","Query.prototype._castUpdate = function _castUpdate(obj, overwrite) ","Query.prototype._walkUpdatePath = function _walkUpdatePath(obj, op, pref) ","Query.prototype._castUpdateVal = function _castUpdateVal(schema, val, op, $conditional) ","function castQuery(query) ","function castDoc(query, overwrite) "," *     Kitten.findOne().populate('owner').exec(function (err, kitten) "," *     }).exec(function (err, kittens) "," *     Kitten.find().populate('owner', 'name', null, sort: { name: -1 }}).exec(function (err, kittens) {","Query.prototype.populate = function() ","Query.prototype.cast = function(model, obj) ","Query.prototype._castFields = function _castFields(fields) ","Query.prototype._applyPaths = function applyPaths() ","  var analyzePath = function(path, type) ","  var analyzeSchema = function(schema, prefix) ","    schema.eachPath(function(path, type) "," *     stream.on('data', function (doc) "," *     }).on('error', function (err) "," *     }).on('close', function () "," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`.","Query.prototype.stream = function stream(opts) "," * interface, as well as a `.next()` function."," *       on('data', function(doc)  console.log(doc); })."," *       on('end', function()  console.log('Done!'); });"," *     cursor.next(function(error, doc) "," *     co(function*() ","Query.prototype.cursor = function cursor(opts) ","Query.prototype.tailable = function(val, opts) "," * In Mongoose 3.7, `intersects` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within).","Query.prototype.near = function() ","Query.prototype.nearSphere = function() ","Query.prototype.box = function(ll, ur) ","Query.prototype.centerSphere = function() "],"Dependencies":["./promise_provider","./querycursor","./querystream","./error/strict","./cast","./queryhelpers","mquery","./drivers","./services/setDefaultsOnInsert","./services/updateValidators","util","./utils"]},{"FileName":"node_modules\\mongoose\\lib\\querycursor.js","LineCount":263,"CharCount":6256,"Comments":["/*!"," * Module dependencies."," */","","var PromiseProvider = require('./promise_provider');","/**"," * A QueryCursor is a concurrency primitive for processing query results"," * one document at a time. A QueryCursor fulfills the [Node.js streams3 API](https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/),"," * in addition to several other mechanisms for loading documents from MongoDB"," * one at a time."," *"," * Unless you're an advanced user, do **not** instantiate this class directly."," * Use [`Query#cursor()`](/api.html#query_Query-cursor) instead."," *"," * @param {Query} query"," * @param {Object} options query options passed to `.find()`"," * @inherits Readable"," * @event `cursor`: Emitted when the cursor is created"," * @event `error`: Emitted when an error occurred"," * @event `data`: Emitted when the stream is flowing and the next doc is ready"," * @event `end`: Emitted when the stream is exhausted"," * @api public"," */","","function QueryCursor(query, options) {","/*!"," * Necessary to satisfy the Readable API"," */","","QueryCursor.prototype._read = function() {","/*!"," * Marks this cursor as errored"," */","","QueryCursor.prototype._markError = function(error) {","/**"," * Marks this cursor as closed. Will stop streaming and subsequent calls to"," * `next()` will error."," *"," * @param {Function} callback"," * @return {Promise}"," * @api public"," * @method close"," * @emits close"," * @see MongoDB driver cursor#close http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#close"," */","","QueryCursor.prototype.close = function(callback) {","/**"," * Get the next document from this cursor. Will return `null` when there are"," * no documents left."," *"," * @param {Function} callback"," * @return {Promise}"," * @api public"," * @method next"," */","","QueryCursor.prototype.next = function(callback) {","/**"," * Execute `fn` for every document in the cursor. If `fn` returns a promise,"," * will wait for the promise to resolve before iterating on to the next one."," * Returns a promise that resolves when done."," *"," * @param {Function} fn"," * @param {Function} [callback] executed when all docs have been processed"," * @return {Promise}"," * @api public"," * @method eachAsync"," */","","QueryCursor.prototype.eachAsync = function(fn, callback) {","/*!"," * Get the next doc from the underlying cursor and mongooseify it"," * (populate, etc.)"," */","","function _next(ctx, callback) {","/*!"," * Convert a raw doc into a full mongoose doc."," */","","function _create(ctx, doc, populatedIds, cb) {"],"Functions":["function QueryCursor(query, options) ","  model.collection.find(query._conditions, options, function(err, cursor) ","      cursor.close(function() });","QueryCursor.prototype._read = function() ","  _next(this, function(error, doc) ","      return _this.cursor.close(function(error) ","QueryCursor.prototype._markError = function(error) ","QueryCursor.prototype.close = function(callback) ","  return new Promise.ES6(function(resolve, reject) ","    _this.cursor.close(function(error) ","QueryCursor.prototype.next = function(callback) ","  return new Promise.ES6(function(resolve, reject) ","    _next(_this, function(error, doc) ","QueryCursor.prototype.eachAsync = function(fn, callback) ","  var handleNextResult = function(doc, callback) ","    if (promise \u0026\u0026 typeof promise.then === 'function') ","        function()  callback(null); },","        function(error)  callback(error); });","  var iterate = function(callback) ","    return _next(_this, function(error, doc) ","      handleNextResult(doc, function(error) ","  return new Promise.ES6(function(resolve, reject) ","    iterate(function(error) ","function _next(ctx, callback) ","    return process.nextTick(function() ","    ctx.cursor.next(function(error, doc) ","      pop.forEach(function(option) ","      ctx.query.model.populate(doc, pop, function(err, doc) ","    ctx.once('cursor', function() ","function _create(ctx, doc, populatedIds, cb) ","  instance.init(doc, opts, function(err) "],"Dependencies":["./promise_provider","stream","./queryhelpers","util"]},{"FileName":"node_modules\\mongoose\\lib\\queryhelpers.js","LineCount":79,"CharCount":1742,"Comments":["/*!"," * Module dependencies"," */","","var utils = require('./utils');","/*!"," * Prepare a set of path options for query population."," *"," * @param {Query} query"," * @param {Object} options"," * @return {Array}"," */","","exports.preparePopulationOptions = function preparePopulationOptions(query, options) {","  // lean options should trickle through all queries","  if (options.lean) pop.forEach(makeLean);","/*!"," * Prepare a set of path options for query population. This is the MongooseQuery"," * version"," *"," * @param {Query} query"," * @param {Object} options"," * @return {Array}"," */","","exports.preparePopulationOptionsMQ = function preparePopulationOptionsMQ(query, options) {","  // lean options should trickle through all queries","  if (options.lean) pop.forEach(makeLean);","/*!"," * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,"," * it returns an instance of the given model."," *"," * @param {Model}  model"," * @param {Object} doc"," * @param {Object} fields"," *"," * @return {Model}"," */","exports.createModel = function createModel(model, doc, fields) {","/*!"," * Set each path query option to lean"," *"," * @param {Object} option"," */","","function makeLean(option) {"],"Functions":["exports.preparePopulationOptions = function preparePopulationOptions(query, options) ","exports.preparePopulationOptionsMQ = function preparePopulationOptionsMQ(query, options) ","exports.createModel = function createModel(model, doc, fields) ","function makeLean(option) "],"Dependencies":["./utils"]},{"FileName":"node_modules\\mongoose\\lib\\querystream.js","LineCount":368,"CharCount":7905,"Comments":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var Stream = require('stream').Stream;","/**"," * Provides a Node.js 0.8 style [ReadStream](http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream) interface for Queries."," *"," *     var stream = Model.find().stream();"," *"," *     stream.on('data', function (doc) {"," *       // do something with the mongoose document"," *     }).on('error', function (err) {"," *       // handle the error"," *     }).on('close', function () {"," *       // the stream is closed"," *     });"," *"," *"," * The stream interface allows us to simply \"plug-in\" to other _Node.js 0.8_ style write streams."," *"," *     Model.where('created').gte(twoWeeksAgo).stream().pipe(writeStream);"," *"," * ####Valid options"," *"," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`."," *"," * ####Example"," *"," *     // JSON.stringify all documents before emitting"," *     var stream = Thing.find().stream({ transform: JSON.stringify });"," *     stream.pipe(writeStream);"," *"," * _NOTE: plugging into an HTTP response will *not* work out of the box. Those streams expect only strings or buffers to be emitted, so first formatting our documents as strings/buffers is necessary._"," *"," * _NOTE: these streams are Node.js 0.8 style read streams which differ from Node.js 0.10 style. Node.js 0.10 streams are not well tested yet and are not guaranteed to work._"," *"," * @param {Query} query"," * @param {Object} [options]"," * @inherits NodeJS Stream http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream"," * @event `data`: emits a single Mongoose document"," * @event `error`: emits when an error occurs during streaming. This will emit _before_ the `close` event."," * @event `close`: emits when the stream reaches the end of the cursor or an error occurs, or the stream is manually `destroy`ed. After this event, no more events are emitted."," * @api public"," */","","function QueryStream(query, options) {","  // give time to hook up events","  var _this = this;","/*!"," * Inherit from Stream"," */","","QueryStream.prototype.__proto__ = Stream.prototype;","/**"," * Flag stating whether or not this stream is readable."," *"," * @property readable"," * @api public"," */","","QueryStream.prototype.readable;","/**"," * Flag stating whether or not this stream is paused."," *"," * @property paused"," * @api public"," */","","QueryStream.prototype.paused;","// trampoline flags","var T_INIT = 0;","/**"," * Initializes the query."," *"," * @api private"," */","","QueryStream.prototype._init = function() {","/**"," * Trampoline for pulling the next doc from cursor."," *"," * @see QueryStream#__next #querystream_QueryStream-__next"," * @api private"," */","","QueryStream.prototype._next = function _next() {","    while (!this.paused \u0026\u0026 !this._destroyed \u0026\u0026 (arg = this._buffer.shift())) { // eslint-disable-line no-cond-assign","      this._onNextObject.apply(this, arg);","  // avoid stack overflows with large result sets.","  // trampoline instead of recursion.","  while (this.__next()) {","/**"," * Pulls the next doc from the cursor."," *"," * @see QueryStream#_next #querystream_QueryStream-_next"," * @api private"," */","","QueryStream.prototype.__next = function() {","  // if onNextObject() was already called in this tick","  // return ourselves to the trampoline.","  if (T_CONT === this._inline) {","  // onNextObject() hasn't fired yet. tell onNextObject","  // that its ok to call _next b/c we are not within","  // the trampoline anymore.","  this._inline = T_IDLE;","/**"," * Transforms raw `doc`s returned from the cursor into a model instance."," *"," * @param {Error|null} err"," * @param {Object} doc"," * @api private"," */","","QueryStream.prototype._onNextObject = function _onNextObject(err, doc) {","  // when doc is null we hit the end of the cursor","  if (!doc) {","  // Hack to work around gh-3108","  pop.forEach(function(option) {","/*!"," * Emit a data event and manage the trampoline state"," */","","function emit(self, doc) {","  // trampoline management","  if (T_IDLE === self._inline) {","    // no longer in trampoline. restart it.","    self._next();","    // in a trampoline. tell __next that its","    // ok to continue jumping.","    self._inline = T_CONT;","/**"," * Pauses this stream."," *"," * @api public"," */","","QueryStream.prototype.pause = function() {","/**"," * Resumes this stream."," *"," * @api public"," */","","QueryStream.prototype.resume = function() {","    // cannot start if not initialized","    return;","  // are we within the trampoline?","  if (T_INIT === this._inline) {","    // outside QueryStream control, need manual restart","    return this._next();","/**"," * Destroys the stream, closing the underlying cursor, which emits the close event. No more events will be emitted after the close event."," *"," * @param {Error} [err]"," * @api public"," */","","QueryStream.prototype.destroy = function(err) {","/**"," * Pipes this query stream into another stream. This method is inherited from NodeJS Streams."," *"," * ####Example:"," *"," *     query.stream().pipe(writeStream [, options])"," *"," * @method pipe"," * @memberOf QueryStream"," * @see NodeJS http://nodejs.org/api/stream.html"," * @api public"," */","","/*!"," * Module exports"," */","","module.exports = exports = QueryStream;"],"Functions":["var K = function(k) "," *     stream.on('data', function (doc) "," *     }).on('error', function (err) "," *     }).on('close', function () "," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`.","function QueryStream(query, options) ","  this._transform = options \u0026\u0026 typeof options.transform === 'function'","  process.nextTick(function() ","QueryStream.prototype._init = function() ","  model.collection.find(query._conditions, options, function(err, cursor) ","QueryStream.prototype._next = function _next() ","QueryStream.prototype.__next = function() ","  _this._cursor.nextObject(function cursorcb(err, doc) ","QueryStream.prototype._onNextObject = function _onNextObject(err, doc) ","  pop.forEach(function(option) ","  _this.query.model.populate(doc, pop, function(err, doc) ","function createAndEmit(self, populatedIds, doc) ","  instance.init(doc, opts, function(err) ","function emit(self, doc) ","QueryStream.prototype.pause = function() ","QueryStream.prototype.resume = function() ","QueryStream.prototype.destroy = function(err) "],"Dependencies":["stream","./utils","./queryhelpers"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\array.js","LineCount":306,"CharCount":6708,"Comments":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","/**"," * Array SchemaType constructor"," *"," * @param {String} key"," * @param {SchemaType} cast"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaArray(key, cast, options) {","        // support { type: Woot }","        castOptions = utils.clone(cast); // do not alter user arguments","        delete castOptions.type;","    // support { type: 'String' }","    var name = typeof cast === 'string'","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaArray.schemaName = 'Array';","/*!"," * Inherits from SchemaType."," */","SchemaArray.prototype = Object.create(SchemaType.prototype);","/**"," * Check if the given value satisfies a required validator. The given value"," * must be not null nor undefined, and have a non-zero length."," *"," * @param {Any} value"," * @return {Boolean}"," * @api public"," */","","SchemaArray.prototype.checkRequired = function(value) {","/**"," * Overrides the getters application for the population special-case"," *"," * @param {Object} value"," * @param {Object} scope"," * @api private"," */","","SchemaArray.prototype.applyGetters = function(value, scope) {","    // means the object id was populated","    return value;","/**"," * Casts values for set()."," *"," * @param {Object} value"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init whether this is an initialization cast"," * @api private"," */","","SchemaArray.prototype.cast = function(value, doc, init) {","        // rethrow","        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path, e);","  // gh-2442: if we're loading this from the db and its not an array, mark","  // the whole array as modified.","  if (!!doc \u0026\u0026 !!init) {","/**"," * Casts values for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaArray.prototype.castForQuery = function($conditional, value) {","/*!"," * Module exports."," */","","module.exports = SchemaArray;"],"Functions":["function SchemaArray(key, cast, options) ","    if (typeof caster === 'function') ","    fn = typeof defaultArr === 'function';","    this.default(function() "," * function names.","SchemaArray.prototype.checkRequired = function(value) ","SchemaArray.prototype.applyGetters = function(value, scope) ","SchemaArray.prototype.cast = function(value, doc, init) ","SchemaArray.prototype.castForQuery = function($conditional, value) ","      val = val.map(function(v) ","function cast$all(val) ","  val = val.map(function(v) ","function cast$elemMatch(val) ","handle.$or = handle.$and = function(val) "],"Dependencies":["../schematype","../types","../types","./mixed","../cast","util","../utils","./operators/helpers","./operators/geospatial"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\boolean.js","LineCount":104,"CharCount":1802,"Comments":["/*!"," * Module dependencies."," */","","var utils = require('../utils');","/**"," * Boolean SchemaType constructor."," *"," * @param {String} path"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaBoolean(path, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaBoolean.schemaName = 'Boolean';","/*!"," * Inherits from SchemaType."," */","SchemaBoolean.prototype = Object.create(SchemaType.prototype);","/**"," * Check if the given value satisfies a required validator. For a boolean"," * to satisfy a required validator, it must be strictly equal to true or to"," * false."," *"," * @param {Any} value"," * @return {Boolean}"," * @api public"," */","","SchemaBoolean.prototype.checkRequired = function(value) {","/**"," * Casts to boolean"," *"," * @param {Object} value"," * @api private"," */","","SchemaBoolean.prototype.cast = function(value) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} val"," * @api private"," */","","SchemaBoolean.prototype.castForQuery = function($conditional, val) {","/*!"," * Module exports."," */","","module.exports = SchemaBoolean;"],"Functions":["function SchemaBoolean(path, options) "," * function names.","SchemaBoolean.prototype.checkRequired = function(value) ","SchemaBoolean.prototype.cast = function(value) ","SchemaBoolean.prototype.castForQuery = function($conditional, val) "],"Dependencies":["../utils","../schematype"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\buffer.js","LineCount":189,"CharCount":4158,"Comments":["/*!"," * Module dependencies."," */","","var handleBitwiseOperator = require('./operators/bitwise');","/**"," * Buffer SchemaType constructor"," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaBuffer(key, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaBuffer.schemaName = 'Buffer';","/*!"," * Inherits from SchemaType."," */","SchemaBuffer.prototype = Object.create(SchemaType.prototype);","/**"," * Check if the given value satisfies a required validator. To satisfy a"," * required validator, a buffer must not be null or undefined and have"," * non-zero length."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaBuffer.prototype.checkRequired = function(value, doc) {","/**"," * Casts contents"," *"," * @param {Object} value"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init"," * @api private"," */","","SchemaBuffer.prototype.cast = function(value, doc, init) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","    // lazy load","    Document || (Document = require('./../document'));","    // setting a populated path","    if (Buffer.isBuffer(value)) {","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","  // documents","  if (value \u0026\u0026 value._id) {","/*!"," * ignore"," */","function handleSingle(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaBuffer.prototype.castForQuery = function($conditional, val) {","/*!"," * Module exports."," */","","module.exports = SchemaBuffer;"],"Functions":["function SchemaBuffer(key, options) "," * function names.","SchemaBuffer.prototype.checkRequired = function(value, doc) ","SchemaBuffer.prototype.cast = function(value, doc, init) ","function handleSingle(val) ","SchemaBuffer.prototype.castForQuery = function($conditional, val) "],"Dependencies":["./operators/bitwise","../utils","../types","../schematype","./../document"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\date.js","LineCount":293,"CharCount":7174,"Comments":["/*!"," * Module requirements."," */","","var MongooseError = require('../error');","/**"," * Date SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaDate(key, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaDate.schemaName = 'Date';","/*!"," * Inherits from SchemaType."," */","SchemaDate.prototype = Object.create(SchemaType.prototype);","/**"," * Declares a TTL index (rounded to the nearest second) for _Date_ types only."," *"," * This sets the `expireAfterSeconds` index option available in MongoDB \u003e= 2.1.2."," * This index type is only compatible with Date types."," *"," * ####Example:"," *"," *     // expire in 24 hours"," *     new Schema({ createdAt: { type: Date, expires: 60*60*24 }});"," *"," * `expires` utilizes the `ms` module from [guille](https://github.com/guille/) allowing us to use a friendlier syntax:"," *"," * ####Example:"," *"," *     // expire in 24 hours"," *     new Schema({ createdAt: { type: Date, expires: '24h' }});"," *"," *     // expire in 1.5 hours"," *     new Schema({ createdAt: { type: Date, expires: '1.5h' }});"," *"," *     // expire in 7 days"," *     var schema = new Schema({ createdAt: Date });"," *     schema.path('createdAt').expires('7d');"," *"," * @param {Number|String} when"," * @added 3.0.0"," * @return {SchemaType} this"," * @api public"," */","","SchemaDate.prototype.expires = function(when) {","/**"," * Check if the given value satisfies a required validator. To satisfy"," * a required validator, the given value must be an instance of `Date`."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaDate.prototype.checkRequired = function(value) {","/**"," * Sets a minimum date validator."," *"," * ####Example:"," *"," *     var s = new Schema({ d: { type: Date, min: Date('1970-01-01') })"," *     var M = db.model('M', s)"," *     var m = new M({ d: Date('1969-12-31') })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.d = Date('2014-12-08');"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MIN} token which will be replaced with the invalid value"," *     var min = [Date('1970-01-01'), 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];"," *     var schema = new Schema({ d: { type: Date, min: min })"," *     var M = mongoose.model('M', schema);"," *     var s= new M({ d: Date('1969-12-31') });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `d` (1969-12-31) is before the limit (1970-01-01)."," *     })"," *"," * @param {Date} value minimum date"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaDate.prototype.min = function(value, message) {","/**"," * Sets a maximum date validator."," *"," * ####Example:"," *"," *     var s = new Schema({ d: { type: Date, max: Date('2014-01-01') })"," *     var M = db.model('M', s)"," *     var m = new M({ d: Date('2014-12-08') })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.d = Date('2013-12-31');"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAX} token which will be replaced with the invalid value"," *     var max = [Date('2014-01-01'), 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];"," *     var schema = new Schema({ d: { type: Date, max: max })"," *     var M = mongoose.model('M', schema);"," *     var s= new M({ d: Date('2014-12-08') });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `d` (2014-12-08) exceeds the limit (2014-01-01)."," *     })"," *"," * @param {Date} maximum date"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaDate.prototype.max = function(value, message) {","/**"," * Casts to date"," *"," * @param {Object} value to cast"," * @api private"," */","","SchemaDate.prototype.cast = function(value) {","  // If null or undefined","  if (value === null || value === void 0 || value === '') {","    // support for timestamps","    date = new Date(Number(value));","    // support for moment.js","    date = new Date(value.valueOf());","/*!"," * Date Query casting."," *"," * @api private"," */","","function handleSingle(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaDate.prototype.castForQuery = function($conditional, val) {","/*!"," * Module exports."," */","","module.exports = SchemaDate;"],"Functions":["function SchemaDate(key, options) "," * function names.","SchemaDate.prototype.expires = function(when) ","SchemaDate.prototype.checkRequired = function(value) "," *     m.save(function (err) "," *     s.validate(function (err) ","SchemaDate.prototype.min = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.minValidator = function(val) "," *     m.save(function (err) "," *     s.validate(function (err) ","SchemaDate.prototype.max = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.maxValidator = function(val) ","SchemaDate.prototype.cast = function(value) ","function handleSingle(val) ","SchemaDate.prototype.castForQuery = function($conditional, val) "],"Dependencies":["../error","../utils","../schematype"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\documentarray.js","LineCount":305,"CharCount":7246,"Comments":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var ArrayType = require('./array');","/**"," * SubdocsArray SchemaType constructor"," *"," * @param {String} key"," * @param {Schema} schema"," * @param {Object} options"," * @inherits SchemaArray"," * @api public"," */","","function DocumentArray(key, schema, options) {","  // compile an embedded document for this schema","  function EmbeddedDocument() {","  // apply methods","  for (var i in schema.methods) {","  // apply statics","  for (i in schema.statics) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","DocumentArray.schemaName = 'DocumentArray';","/*!"," * Inherits from ArrayType."," */","DocumentArray.prototype = Object.create(ArrayType.prototype);","/**"," * Performs local validations first, then validations on each embedded doc"," *"," * @api private"," */","","DocumentArray.prototype.doValidate = function(array, fn, scope, options) {","    // handle sparse arrays, do not use array.forEach which does not","    // iterate over sparse elements yet reports array.length including","    // them :(","","    function callback(err) {","      // sidestep sparse entries","      var doc = array[i];","      // If you set the array index directly, the doc might not yet be","      // a full fledged mongoose subdoc, so make it into one.","      if (!(doc instanceof Subdocument)) {","      // HACK: use $__original_validate to avoid promises so bluebird doesn't","      // complain","      if (doc.$__original_validate) {","/**"," * Performs local validations first, then validations on each embedded doc."," *"," * ####Note:"," *"," * This method ignores the asynchronous validators."," *"," * @return {MongooseError|undefined}"," * @api private"," */","","DocumentArray.prototype.doValidateSync = function(array, scope) {","  // handle sparse arrays, do not use array.forEach which does not","  // iterate over sparse elements yet reports array.length including","  // them :(","","  for (var i = 0, len = count; i \u003c len; ++i) {","    // only first error","    if (resultError) {","    // sidestep sparse entries","    var doc = array[i];","/**"," * Casts contents"," *"," * @param {Object} value"," * @param {Document} document that triggers the casting"," * @api private"," */","","DocumentArray.prototype.cast = function(value, doc, init, prev, options) {","    // gh-2442 mark whole array as modified if we're initializing a doc from","    // the db and the path isn't an array in the document","    if (!!doc \u0026\u0026 init) {","    // Check if the document has a different schema (re gh-3701)","    if ((value[i] instanceof Subdocument) \u0026\u0026","          // handle resetting doc with existing id but differing data","          // doc.array = [{ doc: 'val' }]","          subdoc.set(value[i]);","          // if set() is hooked it will have no return value","          // see gh-746","          value[i] = subdoc;","            // if set() is hooked it will have no return value","            // see gh-746","            value[i] = subdoc;","/*!"," * Scopes paths selected in a query to this array."," * Necessary for proper default application of subdocument values."," *"," * @param {DocumentArray} array - the array to scope `fields` paths"," * @param {Object|undefined} fields - the root fields selected in the query"," * @param {Boolean|undefined} init - if we are being created part of a query result"," */","","function scopePaths(array, fields, init) {","/*!"," * Module exports."," */","","module.exports = DocumentArray;"],"Functions":["function DocumentArray(key, schema, options) ","  function EmbeddedDocument() ","    this.default(function() "," * function names.","DocumentArray.prototype.doValidate = function(array, fn, scope, options) ","  SchemaType.prototype.doValidate.call(this, array, function(err) ","    function callback(err) ","DocumentArray.prototype.doValidateSync = function(array, scope) ","DocumentArray.prototype.cast = function(value, doc, init, prev, options) ","function scopePaths(array, fields, init) "],"Dependencies":["./array","../error/cast","../types/documentarray","../schematype","../types/embedded","util"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\embedded.js","LineCount":171,"CharCount":3777,"Comments":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","/**"," * Sub-schema schematype constructor"," *"," * @param {Schema} schema"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function Embedded(schema, path, options) {","  // apply methods","  for (var i in schema.methods) {","  // apply statics","  for (i in schema.statics) {","/**"," * Special case for when users use a common location schema to represent"," * locations for use with $geoWithin."," * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/"," *"," * @param {Object} val"," * @api private"," */","","Embedded.prototype.$conditionalHandlers.$geoWithin = function(val) {","/*!"," * ignore"," */","","Embedded.prototype.$conditionalHandlers.$near =","/**"," * Casts contents"," *"," * @param {Object} value"," * @api private"," */","","Embedded.prototype.cast = function(val, doc, init) {","/**"," * Casts contents for query"," *"," * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)"," * @param {any} value"," * @api private"," */","","Embedded.prototype.castForQuery = function($conditional, val) {","/**"," * Async validation on this single nested doc."," *"," * @api private"," */","","Embedded.prototype.doValidate = function(value, fn) {","/**"," * Synchronously validate this single nested doc"," *"," * @api private"," */","","Embedded.prototype.doValidateSync = function(value) {"],"Functions":["function Embedded(schema, path, options) ","  var _embedded = function(value, path, parent) ","      parent.on('save', function() ","      parent.on('isNew', function(val) ","Embedded.prototype.$conditionalHandlers.$geoWithin = function(val) ","Embedded.prototype.cast = function(val, doc, init) ","Embedded.prototype.castForQuery = function($conditional, val) ","Embedded.prototype.doValidate = function(value, fn) ","  SchemaType.prototype.doValidate.call(this, value, function(error) ","Embedded.prototype.doValidateSync = function(value) "],"Dependencies":["../schematype","../types/subdocument","./operators/helpers","./operators/geospatial"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\index.js","LineCount":31,"CharCount":511,"Comments":["/*!"," * Module exports."," */","","exports.String = require('./string');","// alias","","exports.Oid = exports.ObjectId;"],"Functions":null,"Dependencies":["./string","./number","./boolean","./documentarray","./embedded","./array","./buffer","./date","./objectid","./mixed"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\mixed.js","LineCount":81,"CharCount":1395,"Comments":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","/**"," * Mixed SchemaType constructor."," *"," * @param {String} path"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function Mixed(path, options) {","      // make sure empty array defaults are handled","      options.default = Array;","      // prevent odd \"shared\" objects between documents","      options.default = function() {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","Mixed.schemaName = 'Mixed';","/*!"," * Inherits from SchemaType."," */","Mixed.prototype = Object.create(SchemaType.prototype);","/**"," * Casts `val` for Mixed."," *"," * _this is a no-op_"," *"," * @param {Object} value to cast"," * @api private"," */","","Mixed.prototype.cast = function(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $cond"," * @param {any} [val]"," * @api private"," */","","Mixed.prototype.castForQuery = function($cond, val) {","/*!"," * Module exports."," */","","module.exports = Mixed;"],"Functions":["function Mixed(path, options) ","      options.default = function() "," * function names.","Mixed.prototype.cast = function(val) ","Mixed.prototype.castForQuery = function($cond, val) "],"Dependencies":["../schematype","../utils"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\number.js","LineCount":291,"CharCount":7112,"Comments":["/*!"," * Module requirements."," */","","var SchemaType = require('../schematype');","/**"," * Number SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaNumber(key, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaNumber.schemaName = 'Number';","/*!"," * Inherits from SchemaType."," */","SchemaNumber.prototype = Object.create(SchemaType.prototype);","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {","/**"," * Sets a minimum number validator."," *"," * ####Example:"," *"," *     var s = new Schema({ n: { type: Number, min: 10 })"," *     var M = db.model('M', s)"," *     var m = new M({ n: 9 })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.n = 10;"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MIN} token which will be replaced with the invalid value"," *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];"," *     var schema = new Schema({ n: { type: Number, min: min })"," *     var M = mongoose.model('Measurement', schema);"," *     var s= new M({ n: 4 });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10)."," *     })"," *"," * @param {Number} value minimum number"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaNumber.prototype.min = function(value, message) {","/**"," * Sets a maximum number validator."," *"," * ####Example:"," *"," *     var s = new Schema({ n: { type: Number, max: 10 })"," *     var M = db.model('M', s)"," *     var m = new M({ n: 11 })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.n = 10;"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAX} token which will be replaced with the invalid value"," *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];"," *     var schema = new Schema({ n: { type: Number, max: max })"," *     var M = mongoose.model('Measurement', schema);"," *     var s= new M({ n: 4 });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10)."," *     })"," *"," * @param {Number} maximum number"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaNumber.prototype.max = function(value, message) {","/**"," * Casts to number"," *"," * @param {Object} value value to cast"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init"," * @api private"," */","","SchemaNumber.prototype.cast = function(value, doc, init) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","    // lazy load","    Document || (Document = require('./../document'));","    // setting a populated path","    if (typeof value === 'number') {","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","      ? value._id // documents","      : value;","/*!"," * ignore"," */","","function handleSingle(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaNumber.prototype.castForQuery = function($conditional, val) {","/*!"," * Module exports."," */","","module.exports = SchemaNumber;"],"Functions":["function SchemaNumber(key, options) "," * function names.","SchemaNumber.prototype.checkRequired = function checkRequired(value, doc) "," *     m.save(function (err) "," *     s.validate(function (err) ","SchemaNumber.prototype.min = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.minValidator = function(v) "," *     m.save(function (err) "," *     s.validate(function (err) ","SchemaNumber.prototype.max = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.maxValidator = function(v) ","SchemaNumber.prototype.cast = function(value, doc, init) ","function handleSingle(val) ","function handleArray(val) ","  return val.map(function(m) ","SchemaNumber.prototype.castForQuery = function($conditional, val) "],"Dependencies":["../schematype","./operators/bitwise","../error","../utils","./../document"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\objectid.js","LineCount":208,"CharCount":4128,"Comments":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype'),","/**"," * ObjectId SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function ObjectId(key, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","ObjectId.schemaName = 'ObjectId';","/*!"," * Inherits from SchemaType."," */","ObjectId.prototype = Object.create(SchemaType.prototype);","/**"," * Adds an auto-generated ObjectId default if turnOn is true."," * @param {Boolean} turnOn auto generated ObjectId defaults"," * @api public"," * @return {SchemaType} this"," */","","ObjectId.prototype.auto = function(turnOn) {","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","ObjectId.prototype.checkRequired = function checkRequired(value, doc) {","/**"," * Casts to ObjectId"," *"," * @param {Object} value"," * @param {Object} doc"," * @param {Boolean} init whether this is an initialization cast"," * @api private"," */","","ObjectId.prototype.cast = function(value, doc, init) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","    // lazy load","    Document || (Document = require('./../document'));","    // setting a populated path","    if (value instanceof oid) {","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","/*!"," * ignore"," */","","function handleSingle(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [val]"," * @api private"," */","","ObjectId.prototype.castForQuery = function($conditional, val) {","/*!"," * ignore"," */","","function defaultId() {","/*!"," * Module exports."," */","","module.exports = ObjectId;"],"Functions":["function ObjectId(key, options) "," * function names.","ObjectId.prototype.auto = function(turnOn) ","ObjectId.prototype.checkRequired = function checkRequired(value, doc) ","ObjectId.prototype.cast = function(value, doc, init) ","function handleSingle(val) ","ObjectId.prototype.castForQuery = function($conditional, val) ","function defaultId() ","function resetId(v) "],"Dependencies":["../schematype","../types/objectid","../utils","./../document"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\operators\\bitwise.js","LineCount":37,"CharCount":565,"Comments":["/*!"," * Module requirements."," */","","var CastError = require('../../error/cast');","/*!"," * ignore"," */","","function handleBitwiseOperator(val) {","  // Assume trying to cast to number","  return _castNumber(_this.path, val);","/*!"," * ignore"," */","","function _castNumber(path, num) {"],"Functions":["function handleBitwiseOperator(val) ","    return val.map(function(v) ","function _castNumber(path, num) "],"Dependencies":["../../error/cast"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\operators\\geospatial.js","LineCount":101,"CharCount":2101,"Comments":["/*!"," * Module requirements."," */","","var castArraysOfNumbers = require('./helpers').castArraysOfNumbers;","/*!"," * ignore"," */","","exports.cast$geoIntersects = cast$geoIntersects;","      // ignore unknowns","      break;"],"Functions":["function cast$near(val) ","function cast$geometry(val, self) ","function cast$within(val) ","    val[type].forEach(function(arr) ","      arr.forEach(function(v, i) ","    val[type].forEach(function(item, i) ","        item.forEach(function(v, j) ","function cast$geoIntersects(val) ","function _castMinMaxDistance(self, val) "],"Dependencies":["./helpers","./helpers","../array"]},{"FileName":"node_modules\\mongoose\\lib\\schema\\operators\\helpers.js","LineCount":35,"CharCount":485,"Comments":["/*!"," * Module requirements."," */","","var Types = {","/*!"," * @ignore"," */","","exports.castToNumber = castToNumber;","/*!"," * @ignore"," */","","function castToNumber(val) {"],"Functions":["function castToNumber(val) ","function castArraysOfNumbers(arr, self) ","  arr.forEach(function(v, i) "],"Dependencies":null},{"FileName":"node_modules\\mongoose\\lib\\schema\\string.js","LineCount":507,"CharCount":13204,"Comments":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","/**"," * String SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaString(key, options) {","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaString.schemaName = 'String';","/*!"," * Inherits from SchemaType."," */","SchemaString.prototype = Object.create(SchemaType.prototype);","/**"," * Adds an enum validator"," *"," * ####Example:"," *"," *     var states = 'opening open closing closed'.split(' ')"," *     var s = new Schema({ state: { type: String, enum: states }})"," *     var M = db.model('M', s)"," *     var m = new M({ state: 'invalid' })"," *     m.save(function (err) {"," *       console.error(String(err)) // ValidationError: `invalid` is not a valid enum value for path `state`."," *       m.state = 'open'"," *       m.save(callback) // success"," *     })"," *"," *     // or with custom error messages"," *     var enu = {"," *       values: 'opening open closing closed'.split(' '),"," *       message: 'enum validator failed for path `{PATH}` with value `{VALUE}`'"," *     }"," *     var s = new Schema({ state: { type: String, enum: enu })"," *     var M = db.model('M', s)"," *     var m = new M({ state: 'invalid' })"," *     m.save(function (err) {"," *       console.error(String(err)) // ValidationError: enum validator failed for path `state` with value `invalid`"," *       m.state = 'open'"," *       m.save(callback) // success"," *     })"," *"," * @param {String|Object} [args...] enumeration values"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.enum = function() {","/**"," * Adds a lowercase setter."," *"," * ####Example:"," *"," *     var s = new Schema({ email: { type: String, lowercase: true }})"," *     var M = db.model('M', s);"," *     var m = new M({ email: 'SomeEmail@example.COM' });"," *     console.log(m.email) // someemail@example.com"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.lowercase = function() {","/**"," * Adds an uppercase setter."," *"," * ####Example:"," *"," *     var s = new Schema({ caps: { type: String, uppercase: true }})"," *     var M = db.model('M', s);"," *     var m = new M({ caps: 'an example' });"," *     console.log(m.caps) // AN EXAMPLE"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.uppercase = function() {","/**"," * Adds a trim setter."," *"," * The string value will be trimmed when set."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, trim: true }})"," *     var M = db.model('M', s)"," *     var string = ' some name '"," *     console.log(string.length) // 11"," *     var m = new M({ name: string })"," *     console.log(m.name.length) // 9"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.trim = function() {","/**"," * Sets a minimum length validator."," *"," * ####Example:"," *"," *     var schema = new Schema({ postalCode: { type: String, minlength: 5 })"," *     var Address = db.model('Address', schema)"," *     var address = new Address({ postalCode: '9512' })"," *     address.save(function (err) {"," *       console.error(err) // validator error"," *       address.postalCode = '95125';"," *       address.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MINLENGTH} token which will be replaced with the minimum allowed length"," *     var minlength = [5, 'The value of path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).'];"," *     var schema = new Schema({ postalCode: { type: String, minlength: minlength })"," *     var Address = mongoose.model('Address', schema);"," *     var address = new Address({ postalCode: '9512' });"," *     address.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512`) is shorter than the minimum length (5)."," *     })"," *"," * @param {Number} value minimum string length"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.minlength = function(value, message) {","/**"," * Sets a maximum length validator."," *"," * ####Example:"," *"," *     var schema = new Schema({ postalCode: { type: String, maxlength: 9 })"," *     var Address = db.model('Address', schema)"," *     var address = new Address({ postalCode: '9512512345' })"," *     address.save(function (err) {"," *       console.error(err) // validator error"," *       address.postalCode = '95125';"," *       address.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAXLENGTH} token which will be replaced with the maximum allowed length"," *     var maxlength = [9, 'The value of path `{PATH}` (`{VALUE}`) exceeds the maximum allowed length ({MAXLENGTH}).'];"," *     var schema = new Schema({ postalCode: { type: String, maxlength: maxlength })"," *     var Address = mongoose.model('Address', schema);"," *     var address = new Address({ postalCode: '9512512345' });"," *     address.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512512345`) exceeds the maximum allowed length (9)."," *     })"," *"," * @param {Number} value maximum string length"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.maxlength = function(value, message) {","/**"," * Sets a regexp validator."," *"," * Any value that does not pass `regExp`.test(val) will fail validation."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, match: /^a/ }})"," *     var M = db.model('M', s)"," *     var m = new M({ name: 'I am invalid' })"," *     m.validate(function (err) {"," *       console.error(String(err)) // \"ValidationError: Path `name` is invalid (I am invalid).\""," *       m.name = 'apples'"," *       m.validate(function (err) {"," *         assert.ok(err) // success"," *       })"," *     })"," *"," *     // using a custom error message"," *     var match = [ /\\.html$/, \"That file doesn't end in .html ({VALUE})\" ];"," *     var s = new Schema({ file: { type: String, match: match }})"," *     var M = db.model('M', s);"," *     var m = new M({ file: 'invalid' });"," *     m.validate(function (err) {"," *       console.log(String(err)) // \"ValidationError: That file doesn't end in .html (invalid)\""," *     })"," *"," * Empty strings, `undefined`, and `null` values always pass the match validator. If you require these values, enable the `required` validator also."," *"," *     var s = new Schema({ name: { type: String, match: /^a/, required: true }})"," *"," * @param {RegExp} regExp regular expression to test against"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.match = function match(regExp, message) {","  // yes, we allow multiple match validators","","  var msg = message || MongooseError.messages.String.match;","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaString.prototype.checkRequired = function checkRequired(value, doc) {","/**"," * Casts to String"," *"," * @api private"," */","","SchemaString.prototype.cast = function(value, doc, init) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","    // lazy load","    Document || (Document = require('./../document'));","    // setting a populated path","    if (typeof value === 'string') {","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","  // If null or undefined","  if (value === null || value === undefined) {","    // handle documents being passed","    if (value._id \u0026\u0026 typeof value._id === 'string') {","    // Re: gh-647 and gh-3030, we're ok with casting using `toString()`","    // **unless** its the default Object.toString, because \"[object Object]\"","    // doesn't really qualify as useful data","    if (value.toString \u0026\u0026 value.toString !== Object.prototype.toString) {","/*!"," * ignore"," */","","function handleSingle(val) {","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [val]"," * @api private"," */","","SchemaString.prototype.castForQuery = function($conditional, val) {","/*!"," * Module exports."," */","","module.exports = SchemaString;"],"Functions":["function SchemaString(key, options) "," * function names."," *     m.save(function (err) "," *     m.save(function (err) ","SchemaString.prototype.enum = function() ","    this.validators = this.validators.filter(function(v) ","  this.enumValidator = function(v) ","SchemaString.prototype.lowercase = function() ","  return this.set(function(v, self) ","SchemaString.prototype.uppercase = function() ","  return this.set(function(v, self) ","SchemaString.prototype.trim = function() ","  return this.set(function(v, self) "," *     address.save(function (err) "," *     address.validate(function (err) ","SchemaString.prototype.minlength = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.minlengthValidator = function(v) "," *     address.save(function (err) "," *     address.validate(function (err) ","SchemaString.prototype.maxlength = function(value, message) ","    this.validators = this.validators.filter(function(v) ","      validator: this.maxlengthValidator = function(v) "," *     m.validate(function (err) "," *       m.validate(function (err) "," *     m.validate(function (err) ","SchemaString.prototype.match = function match(regExp, message) ","  var matchValidator = function(v) ","SchemaString.prototype.checkRequired = function checkRequired(value, doc) ","SchemaString.prototype.cast = function(value, doc, init) ","function handleSingle(val) ","function handleArray(val) ","  return val.map(function(m) ","SchemaString.prototype.castForQuery = function($conditional, val) "],"Dependencies":["../schematype","../error","../utils","./../document"]},{"FileName":"node_modules\\mongoose\\lib\\schema.js","LineCount":1606,"CharCount":39459,"Comments":["/*!"," * Module dependencies."," */","","var readPref = require('./drivers').ReadPreference;","/**"," * Schema constructor."," *"," * ####Example:"," *"," *     var child = new Schema({ name: String });"," *     var schema = new Schema({ name: String, age: Number, children: [child] });"," *     var Tree = mongoose.model('Tree', schema);"," *"," *     // setting schema options"," *     new Schema({ name: String }, { _id: false, autoIndex: false })"," *"," * ####Options:"," *"," * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)"," * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true"," * - [capped](/docs/guide.html#capped): bool - defaults to false"," * - [collection](/docs/guide.html#collection): string - no default"," * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false."," * - [id](/docs/guide.html#id): bool - defaults to true"," * - [_id](/docs/guide.html#_id): bool - defaults to true"," * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true"," * - [read](/docs/guide.html#read): string"," * - [safe](/docs/guide.html#safe): bool - defaults to true."," * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`"," * - [strict](/docs/guide.html#strict): bool - defaults to true"," * - [toJSON](/docs/guide.html#toJSON) - object - no default"," * - [toObject](/docs/guide.html#toObject) - object - no default"," * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'"," * - [useNestedStrict](/docs/guide.html#useNestedStrict) - boolean - defaults to false"," * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`"," * - [versionKey](/docs/guide.html#versionKey): string - defaults to \"__v\""," *"," * ####Note:"," *"," * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._"," *"," * @param {Object} definition"," * @param {Object} [options]"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted after the schema is compiled into a `Model`."," * @api public"," */","","function Schema(obj, options) {","  // build paths","  if (obj) {","  // check if _id's value is a subdocument (gh-2276)","  var _idSubDoc = obj \u0026\u0026 obj._id \u0026\u0026 utils.isObject(obj._id);","  // ensure the documents get an auto _id unless disabled","  var auto_id = !this.paths['_id'] \u0026\u0026","  // ensure the documents receive an id getter unless disabled","  var autoid = !this.paths['id'] \u0026\u0026","/*!"," * Returns this documents _id cast to a string."," */","","function idGetter() {","/*!"," * Inherit from EventEmitter."," */","Schema.prototype = Object.create(EventEmitter.prototype);","/**"," * Default middleware attached to a schema. Cannot be changed."," *"," * This field is used to make sure discriminators don't get multiple copies of"," * built-in middleware. Declared as a constant because changing this at runtime"," * may lead to instability with Model.prototype.discriminator()."," *"," * @api private"," * @property _defaultMiddleware"," */","Object.defineProperty(Schema.prototype, '_defaultMiddleware', {","        // Nested docs have their own presave","        if (this.ownerDocument) {","        // Validate","        if (shouldValidate) {","          // HACK: use $__original_validate to avoid promises so bluebird doesn't","          // complain","          if (this.$__original_validate) {","        // Hack to ensure that we always wrap validate() in a promise","        next();","/**"," * Schema as flat paths"," *"," * ####Example:"," *     {"," *         '_id'        : SchemaType,"," *       , 'nested.key' : SchemaType,"," *     }"," *"," * @api private"," * @property paths"," */","","Schema.prototype.paths;","/**"," * Schema as a tree"," *"," * ####Example:"," *     {"," *         '_id'     : ObjectId"," *       , 'nested'  : {"," *             'key' : String"," *         }"," *     }"," *"," * @api private"," * @property tree"," */","","Schema.prototype.tree;","/**"," * Returns default options for this schema, merged with `options`."," *"," * @param {Object} options"," * @return {Object}"," * @api private"," */","","Schema.prototype.defaultOptions = function(options) {","    // if you turn off safe writes, then versioning goes off as well","    options.versionKey = false;","    capped: false, // { size, max, autoIndexId }","    versionKey: '__v',","    // the following are only applied at construction time","    noId: false, // deprecated, use { _id: false }","    _id: true,","    noVirtualId: false, // deprecated, use { id: false }","    id: true,","/**"," * Adds key path / schema type pairs to this schema."," *"," * ####Example:"," *"," *     var ToySchema = new Schema;"," *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });"," *"," * @param {Object} obj"," * @param {String} prefix"," * @api public"," */","","Schema.prototype.add = function add(obj, prefix) {","        // nested object { last: { name: String }}","        this.nested[prefix + key] = true;","        this.path(prefix + key, obj[key]); // mixed type","      }","/**"," * Reserved document keys."," *"," * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error."," *"," *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject"," *"," * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on."," *"," *      var schema = new Schema(..);"," *      schema.methods.init = function () {} // potentially breaking"," */","","Schema.reserved = Object.create(null);","// EventEmitter","reserved.emit =","// document properties and functions","reserved.collection =","// hooks.js","reserved._pres = reserved._posts = 1;","/*!"," * Document keys to print warnings for"," */","","var warnings = {};","/**"," * Gets/sets schema paths."," *"," * Sets a path (if arity 2)"," * Gets a path (if arity 1)"," *"," * ####Example"," *"," *     schema.path('name') // returns a SchemaType"," *     schema.path('name', Number) // changes the schemaType of `name` to Number"," *"," * @param {String} path"," * @param {Object} constructor"," * @api public"," */","","Schema.prototype.path = function(path, obj) {","    // subpaths?","    return /\\.\\d+\\.?.*$/.test(path)","  // some path names conflict with document methods","  if (reserved[path]) {","  // update the tree","  var subpaths = path.split(/\\./),","/**"," * Converts type arguments into Mongoose Types."," *"," * @param {String} path"," * @param {Object} obj constructor"," * @api private"," */","","Schema.interpretAsType = function(path, obj, options) {","  // Get the type making sure to allow keys named \"type\"","  // and default to mixed if not specified.","  // { type: { type: String, default: 'freshcut' } }","  var type = obj[options.typeKey] \u0026\u0026 (options.typeKey !== 'type' || !obj.type.type)","    // if it was specified through { type } look for `cast`","    var cast = (Array === type || type === 'array')","      // The `minimize` and `typeKey` options propagate to child schemas","      // declared inline, like `{ arr: [{ val: { $type: String } }] }`.","      // See gh-3560","      var childSchemaOptions = {minimize: options.minimize};","      // If not string, `type` is a function. Outside of IE, function.name","      // gives you the function name. In IE, you need to compute it","        : type.schemaName || utils.getFunctionName(type);","/**"," * Iterates the schemas paths similar to Array#forEach."," *"," * The callback is passed the pathname and schemaType as arguments on each iteration."," *"," * @param {Function} fn callback function"," * @return {Schema} this"," * @api public"," */","","Schema.prototype.eachPath = function(fn) {","/**"," * Returns an Array of path strings that are required by this schema."," *"," * @api public"," * @param {Boolean} invalidate refresh the cache"," * @return {Array}"," */","","Schema.prototype.requiredPaths = function requiredPaths(invalidate) {","/**"," * Returns indexes from fields and schema-level indexes (cached)."," *"," * @api private"," * @return {Array}"," */","","Schema.prototype.indexedPaths = function indexedPaths() {","/**"," * Returns the pathType of `path` for this schema."," *"," * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path."," *"," * @param {String} path"," * @return {String}"," * @api public"," */","","Schema.prototype.pathType = function(path) {","/**"," * Returns true iff this path is a child of a mixed schema."," *"," * @param {String} path"," * @return {Boolean}"," * @api private"," */","","Schema.prototype.hasMixedParent = function(path) {","/**"," * Setup updatedAt and createdAt timestamps to documents if enabled"," *"," * @param {Boolean|Object} timestamps timestamps options"," * @api private"," */","Schema.prototype.setupTimestamp = function(timestamps) {","/*!"," * ignore"," */","","function applyTimestampsToChildren(query) {","/*!"," * ignore"," */","","function getPositionalPathType(self, path) {","        // StringSchema, NumberSchema, etc","        val = val.caster;","    // ignore if its just a position segment: path.0.subpath","    if (!/\\D/.test(subpath)) {","/*!"," * ignore"," */","","function getPositionalPath(self, path) {","/**"," * Adds a method call to the queue."," *"," * @param {String} name name of the document method to call later"," * @param {Array} args arguments to pass to the method"," * @api public"," */","","Schema.prototype.queue = function(name, args) {","/**"," * Defines a pre hook for the document."," *"," * ####Example"," *"," *     var toySchema = new Schema(..);"," *"," *     toySchema.pre('save', function (next) {"," *       if (!this.created) this.created = new Date;"," *       next();"," *     })"," *"," *     toySchema.pre('validate', function (next) {"," *       if (this.name !== 'Woody') this.name = 'Woody';"," *       next();"," *     })"," *"," * @param {String} method"," * @param {Function} callback"," * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3"," * @api public"," */","","Schema.prototype.pre = function() {","/**"," * Defines a post hook for the document"," *"," *     var schema = new Schema(..);"," *     schema.post('save', function (doc) {"," *       console.log('this fired after a document was saved');"," *     });"," *"," *     shema.post('find', function(docs) {"," *       console.log('this fired after you run a find query');"," *     });"," *"," *     var Model = mongoose.model('Model', schema);"," *"," *     var m = new Model(..);"," *     m.save(function(err) {"," *       console.log('this fires after the `post` hook');"," *     });"," *"," *     m.find(function(err, docs) {"," *       console.log('this fires after the post find hook');"," *     });"," *"," * @param {String} method name of the method to hook"," * @param {Function} fn callback"," * @see middleware http://mongoosejs.com/docs/middleware.html"," * @see hooks.js https://www.npmjs.com/package/hooks-fixed"," * @see kareem http://npmjs.org/package/kareem"," * @api public"," */","","Schema.prototype.post = function(method, fn) {","  // assuming that all callbacks with arity \u003c 2 are synchronous post hooks","  if (fn.length \u003c 2) {","    // wrap original function so that the callback goes last,","    // for compatibility with old code that is using synchronous post hooks","    var _this = this;","/**"," * Registers a plugin for this schema."," *"," * @param {Function} plugin callback"," * @param {Object} [opts]"," * @see plugins"," * @api public"," */","","Schema.prototype.plugin = function(fn, opts) {","/**"," * Adds an instance method to documents constructed from Models compiled from this schema."," *"," * ####Example"," *"," *     var schema = kittySchema = new Schema(..);"," *"," *     schema.method('meow', function () {"," *       console.log('meeeeeoooooooooooow');"," *     })"," *"," *     var Kitty = mongoose.model('Kitty', schema);"," *"," *     var fizz = new Kitty;"," *     fizz.meow(); // meeeeeooooooooooooow"," *"," * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods."," *"," *     schema.method({"," *         purr: function () {}"," *       , scratch: function () {}"," *     });"," *"," *     // later"," *     fizz.purr();"," *     fizz.scratch();"," *"," * @param {String|Object} method name"," * @param {Function} [fn]"," * @api public"," */","","Schema.prototype.method = function(name, fn) {","/**"," * Adds static \"class\" methods to Models compiled from this schema."," *"," * ####Example"," *"," *     var schema = new Schema(..);"," *     schema.static('findByName', function (name, callback) {"," *       return this.find({ name: name }, callback);"," *     });"," *"," *     var Drink = mongoose.model('Drink', schema);"," *     Drink.findByName('sanpellegrino', function (err, drinks) {"," *       //"," *     });"," *"," * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics."," *"," * @param {String|Object} name"," * @param {Function} [fn]"," * @api public"," */","","Schema.prototype.static = function(name, fn) {","/**"," * Defines an index (most likely compound) for this schema."," *"," * ####Example"," *"," *     schema.index({ first: 1, last: -1 })"," *"," * @param {Object} fields"," * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)"," * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link."," * @api public"," */","","Schema.prototype.index = function(fields, options) {","/**"," * Sets/gets a schema option."," *"," * ####Example"," *"," *     schema.set('strict'); // 'true' by default"," *     schema.set('strict', false); // Sets 'strict' to false"," *     schema.set('strict'); // 'false'"," *"," * @param {String} key option name"," * @param {Object} [value] if not passed, the current option value is returned"," * @see Schema ./"," * @api public"," */","","Schema.prototype.set = function(key, value, _tags) {","/**"," * Gets a schema option."," *"," * @param {String} key option name"," * @api public"," */","","Schema.prototype.get = function(key) {","/**"," * The allowed index types"," *"," * @static indexTypes"," * @receiver Schema"," * @api public"," */","","var indexTypes = '2d 2dsphere hashed text'.split(' ');","/**"," * Compiles indexes from fields and schema-level indexes"," *"," * @api public"," */","","Schema.prototype.indexes = function() {","  /*!","   * Checks for indexes added to subdocs using Schema.index().","   * These indexes need their paths prefixed properly.","   *","   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]","   */","","  function fixSubIndexPaths(schema, prefix) {","      // use forward iteration, order matters","      for (j = 0; j \u003c klen; ++j) {","/**"," * Creates a virtual type with the given name."," *"," * @param {String} name"," * @param {Object} [options]"," * @return {VirtualType}"," */","","Schema.prototype.virtual = function(name, options) {","/**"," * Returns the virtual type with the given `name`."," *"," * @param {String} name"," * @return {VirtualType}"," */","","Schema.prototype.virtualpath = function(name) {","/**"," * Removes the given `path` (or [`paths`])."," *"," * @param {String|Array} path"," *"," * @api public"," */","Schema.prototype.remove = function(path) {","/*!"," * ignore"," */","","Schema.prototype._getSchema = function(path) {","          // array of Mixed?","          if (foundschema.caster instanceof MongooseTypes.Mixed) {","          // Now that we found the array, we need to check if there","          // are remaining document paths to look up for casting.","          // Also we need to handle array.$.path since schema.path","          // doesn't work for that.","          // If there is no foundschema.schema we are dealing with","          // a path like array.$","          if (p !== parts.length \u0026\u0026 foundschema.schema) {","              // comments.$.comments.$.title","              return search(parts.slice(p + 1), foundschema.schema);","            // this is the last path of the selector","            return search(parts.slice(p), foundschema.schema);","  // look for arrays","  return search(path.split('.'), _this);","/*!"," * ignore"," */","","Schema.prototype._getPathType = function(path) {","          // array of Mixed?","          if (foundschema.caster instanceof MongooseTypes.Mixed) {","          // Now that we found the array, we need to check if there","          // are remaining document paths to look up for casting.","          // Also we need to handle array.$.path since schema.path","          // doesn't work for that.","          // If there is no foundschema.schema we are dealing with","          // a path like array.$","          if (p !== parts.length \u0026\u0026 foundschema.schema) {","              // comments.$.comments.$.title","              return search(parts.slice(p + 1), foundschema.schema);","            // this is the last path of the selector","            return search(parts.slice(p), foundschema.schema);","  // look for arrays","  return search(path.split('.'), _this);","/*!"," * Module exports."," */","","module.exports = exports = Schema;","// require down here because of reference issues","","/**","/**"," * The various built-in Mongoose Schema Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var ObjectId = mongoose.Schema.Types.ObjectId;"," *"," * ####Types:"," *"," * - [String](#schema-string-js)"," * - [Number](#schema-number-js)"," * - [Boolean](#schema-boolean-js) | Bool"," * - [Array](#schema-array-js)"," * - [Buffer](#schema-buffer-js)"," * - [Date](#schema-date-js)"," * - [ObjectId](#schema-objectid-js) | Oid"," * - [Mixed](#schema-mixed-js)"," *"," * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema."," *"," *     var Mixed = mongoose.Schema.Types.Mixed;"," *     new mongoose.Schema({ _user: Mixed })"," *"," * @api public"," */","","Schema.Types = MongooseTypes = require('./schema/index');","/*!"," * ignore"," */","","exports.ObjectId = MongooseTypes.ObjectId;"],"Functions":["function Schema(obj, options) ","function idGetter() ","      fn: function(next, options) ","            this.$__original_validate(__noPromise: true}, function(error) {","              return _this.schema.s.hooks.execPost('save:error', _this, [_this],  error: error }, function(error) {","            this.validate(__noPromise: true}, function(error) {","              return _this.schema.s.hooks.execPost('save:error', _this, [ _this],  error: error }, function(error) {","      fn: function(next, done) ","        async.each(subdocs, function(subdoc, cb) ","          subdoc.save(function(err) ","        }, function(error) ","            return _this.schema.s.hooks.execPost('save:error', _this, [_this],  error: error }, function(error) {","      fn: function(next, done) ","      fn: function(next, done) ","        async.each(subdocs, function(subdoc, cb) ","          subdoc.remove( noop: true }, function(err) {","        }, function(error) ","Schema.prototype.defaultOptions = function(options) ","Schema.prototype.add = function add(obj, prefix) "," * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error."," *      schema.methods.init = function () } // potentially breaking","// document properties and functions","Schema.prototype.path = function(path, obj) ","  subpaths.forEach(function(sub, i) ","Schema.interpretAsType = function(path, obj, options) ","      // If not string, `type` is a function. Outside of IE, function.name","      // gives you the function name. In IE, you need to compute it"," * @param Function} fn callback function","Schema.prototype.eachPath = function(fn) ","Schema.prototype.requiredPaths = function requiredPaths(invalidate) ","Schema.prototype.indexedPaths = function indexedPaths() ","Schema.prototype.pathType = function(path) ","Schema.prototype.hasMixedParent = function(path) ","Schema.prototype.setupTimestamp = function(timestamps) ","    this.pre('save', function(next) ","    var genUpdates = function() ","    this.methods.initializeTimestamps = function() ","    this.pre('findOneAndUpdate', function(next) ","    this.pre('update', function(next) ","function applyTimestampsToChildren(query) ","function getPositionalPathType(self, path) ","function getPositionalPath(self, path) ","Schema.prototype.queue = function(name, args) "," *     toySchema.pre('save', function (next) "," *     toySchema.pre('validate', function (next) ","Schema.prototype.pre = function() "," *     schema.post('save', function (doc) "," *     shema.post('find', function(docs) "," *     m.save(function(err) "," *     m.find(function(err, docs) ","Schema.prototype.post = function(method, fn) ","    return this.queue('on', [arguments[0], function(doc) ","  return this.queue('post', [arguments[0], function(next) ","    // wrap original function so that the callback goes last,","    fn.call(this, this, function(err) ","Schema.prototype.plugin = function(fn, opts) "," *     schema.method('meow', function () "," *         purr: function () }"," *       , scratch: function () }","Schema.prototype.method = function(name, fn) "," *     schema.static('findByName', function (name, callback) "," *     Drink.findByName('sanpellegrino', function (err, drinks) ","Schema.prototype.static = function(name, fn) "," * @param Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)","Schema.prototype.index = function(fields, options) ","Schema.prototype.set = function(key, value, _tags) ","Schema.prototype.get = function(key) ","  get: function() ","  set: function() ","Schema.prototype.indexes = function() ","  var collectIndexes = function(schema, prefix) ","      schema._indexes.forEach(function(index) ","  function fixSubIndexPaths(schema, prefix) ","Schema.prototype.virtual = function(name, options) ","    this.pre('init', function(next, obj) ","      get(function() ","      set(function(v) ","  virtuals[name] = parts.reduce(function(mem, part, i) ","Schema.prototype.virtualpath = function(name) ","Schema.prototype.remove = function(path) ","    path.forEach(function(name) ","Schema.prototype._getSchema = function(path) ","  function search(parts, schema) ","Schema.prototype._getPathType = function(path) ","  function search(parts, schema) "],"Dependencies":["./drivers","events","./virtualtype","./utils","kareem","async","mongoose","./schema/index"]},{"FileName":"node_modules\\mongoose\\lib\\schematype.js","LineCount":921,"CharCount":25284,"Comments":["/*!"," * Module dependencies."," */","","var utils = require('./utils');","/**"," * SchemaType constructor"," *"," * @param {String} path"," * @param {Object} [options]"," * @param {String} [instance]"," * @api public"," */","","function SchemaType(path, options, instance) {","      // { unique: true, index: true }","      if (i === 'index' \u0026\u0026 this._index) {","/**"," * Sets a default value for this SchemaType."," *"," * ####Example:"," *"," *     var schema = new Schema({ n: { type: Number, default: 10 })"," *     var M = db.model('M', schema)"," *     var m = new M;"," *     console.log(m.n) // 10"," *"," * Defaults can be either `functions` which return the value to use as the default or the literal value itself. Either way, the value will be cast based on its schema type before being set during document creation."," *"," * ####Example:"," *"," *     // values are cast:"," *     var schema = new Schema({ aNumber: { type: Number, default: 4.815162342 }})"," *     var M = db.model('M', schema)"," *     var m = new M;"," *     console.log(m.aNumber) // 4.815162342"," *"," *     // default unique objects for Mixed types:"," *     var schema = new Schema({ mixed: Schema.Types.Mixed });"," *     schema.path('mixed').default(function () {"," *       return {};"," *     });"," *"," *     // if we don't use a function to return object literals for Mixed defaults,"," *     // each document will receive a reference to the same object literal creating"," *     // a \"shared\" object instance:"," *     var schema = new Schema({ mixed: Schema.Types.Mixed });"," *     schema.path('mixed').default({});"," *     var M = db.model('M', schema);"," *     var m1 = new M;"," *     m1.mixed.added = 1;"," *     console.log(m1.mixed); // { added: 1 }"," *     var m2 = new M;"," *     console.log(m2.mixed); // { added: 1 }"," *"," * @param {Function|any} val the default value"," * @return {defaultValue}"," * @api public"," */","","SchemaType.prototype.default = function(val) {","/**"," * Declares the index options for this schematype."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, index: true })"," *     var s = new Schema({ loc: { type: [Number], index: 'hashed' })"," *     var s = new Schema({ loc: { type: [Number], index: '2d', sparse: true })"," *     var s = new Schema({ loc: { type: [Number], index: { type: '2dsphere', sparse: true }})"," *     var s = new Schema({ date: { type: Date, index: { unique: true, expires: '1d' }})"," *     Schema.path('my.path').index(true);"," *     Schema.path('my.date').index({ expires: 60 });"," *     Schema.path('my.path').index({ unique: true, sparse: true });"," *"," * ####NOTE:"," *"," * _Indexes are created in the background by default. Specify `background: false` to override._"," *"," * [Direction doesn't matter for single key indexes](http://www.mongodb.org/display/DOCS/Indexes#Indexes-CompoundKeysIndexes)"," *"," * @param {Object|Boolean|String} options"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.index = function(options) {","/**"," * Declares an unique index."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, unique: true }});"," *     Schema.path('name').index({ unique: true });"," *"," * _NOTE: violating the constraint returns an `E11000` error from MongoDB when saving, not a Mongoose validation error._"," *"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.unique = function(bool) {","/**"," * Declares a full text index."," *"," * ###Example:"," *"," *      var s = new Schema({name : {type: String, text : true })"," *      Schema.path('name').index({text : true});"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.text = function(bool) {","/**"," * Declares a sparse index."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, sparse: true })"," *     Schema.path('name').index({ sparse: true });"," *"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.sparse = function(bool) {","/**"," * Adds a setter to this schematype."," *"," * ####Example:"," *"," *     function capitalize (val) {"," *       if (typeof val !== 'string') val = '';"," *       return val.charAt(0).toUpperCase() + val.substring(1);"," *     }"," *"," *     // defining within the schema"," *     var s = new Schema({ name: { type: String, set: capitalize }})"," *"," *     // or by retreiving its SchemaType"," *     var s = new Schema({ name: String })"," *     s.path('name').set(capitalize)"," *"," * Setters allow you to transform the data before it gets to the raw mongodb document and is set as a value on an actual key."," *"," * Suppose you are implementing user registration for a website. Users provide an email and password, which gets saved to mongodb. The email is a string that you will want to normalize to lower case, in order to avoid one email having more than one account -- e.g., otherwise, avenue@q.com can be registered for 2 accounts via avenue@q.com and AvEnUe@Q.CoM."," *"," * You can set up email lower case normalization easily via a Mongoose setter."," *"," *     function toLower (v) {"," *       return v.toLowerCase();"," *     }"," *"," *     var UserSchema = new Schema({"," *       email: { type: String, set: toLower }"," *     })"," *"," *     var User = db.model('User', UserSchema)"," *"," *     var user = new User({email: 'AVENUE@Q.COM'})"," *     console.log(user.email); // 'avenue@q.com'"," *"," *     // or"," *     var user = new User"," *     user.email = 'Avenue@Q.com'"," *     console.log(user.email) // 'avenue@q.com'"," *"," * As you can see above, setters allow you to transform the data before it gets to the raw mongodb document and is set as a value on an actual key."," *"," * _NOTE: we could have also just used the built-in `lowercase: true` SchemaType option instead of defining our own function._"," *"," *     new Schema({ email: { type: String, lowercase: true }})"," *"," * Setters are also passed a second argument, the schematype on which the setter was defined. This allows for tailored behavior based on options passed in the schema."," *"," *     function inspector (val, schematype) {"," *       if (schematype.options.required) {"," *         return schematype.path + ' is required';"," *       } else {"," *         return val;"," *       }"," *     }"," *"," *     var VirusSchema = new Schema({"," *       name: { type: String, required: true, set: inspector },"," *       taxonomy: { type: String, set: inspector }"," *     })"," *"," *     var Virus = db.model('Virus', VirusSchema);"," *     var v = new Virus({ name: 'Parvoviridae', taxonomy: 'Parvovirinae' });"," *"," *     console.log(v.name);     // name is required"," *     console.log(v.taxonomy); // Parvovirinae"," *"," * @param {Function} fn"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.set = function(fn) {","/**"," * Adds a getter to this schematype."," *"," * ####Example:"," *"," *     function dob (val) {"," *       if (!val) return val;"," *       return (val.getMonth() + 1) + \"/\" + val.getDate() + \"/\" + val.getFullYear();"," *     }"," *"," *     // defining within the schema"," *     var s = new Schema({ born: { type: Date, get: dob })"," *"," *     // or by retreiving its SchemaType"," *     var s = new Schema({ born: Date })"," *     s.path('born').get(dob)"," *"," * Getters allow you to transform the representation of the data as it travels from the raw mongodb document to the value that you see."," *"," * Suppose you are storing credit card numbers and you want to hide everything except the last 4 digits to the mongoose user. You can do so by defining a getter in the following way:"," *"," *     function obfuscate (cc) {"," *       return '****-****-****-' + cc.slice(cc.length-4, cc.length);"," *     }"," *"," *     var AccountSchema = new Schema({"," *       creditCardNumber: { type: String, get: obfuscate }"," *     });"," *"," *     var Account = db.model('Account', AccountSchema);"," *"," *     Account.findById(id, function (err, found) {"," *       console.log(found.creditCardNumber); // '****-****-****-1234'"," *     });"," *"," * Getters are also passed a second argument, the schematype on which the getter was defined. This allows for tailored behavior based on options passed in the schema."," *"," *     function inspector (val, schematype) {"," *       if (schematype.options.required) {"," *         return schematype.path + ' is required';"," *       } else {"," *         return schematype.path + ' is not';"," *       }"," *     }"," *"," *     var VirusSchema = new Schema({"," *       name: { type: String, required: true, get: inspector },"," *       taxonomy: { type: String, get: inspector }"," *     })"," *"," *     var Virus = db.model('Virus', VirusSchema);"," *"," *     Virus.findById(id, function (err, virus) {"," *       console.log(virus.name);     // name is required"," *       console.log(virus.taxonomy); // taxonomy is not"," *     })"," *"," * @param {Function} fn"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.get = function(fn) {","/**"," * Adds validator(s) for this document path."," *"," * Validators always receive the value to validate as their first argument and must return `Boolean`. Returning `false` means validation failed."," *"," * The error message argument is optional. If not passed, the [default generic error message template](#error_messages_MongooseError-messages) will be used."," *"," * ####Examples:"," *"," *     // make sure every value is equal to \"something\""," *     function validator (val) {"," *       return val == 'something';"," *     }"," *     new Schema({ name: { type: String, validate: validator }});"," *"," *     // with a custom error message"," *"," *     var custom = [validator, 'Uh oh, {PATH} does not equal \"something\".']"," *     new Schema({ name: { type: String, validate: custom }});"," *"," *     // adding many validators at a time"," *"," *     var many = ["," *         { validator: validator, msg: 'uh oh' }"," *       , { validator: anotherValidator, msg: 'failed' }"," *     ]"," *     new Schema({ name: { type: String, validate: many }});"," *"," *     // or utilizing SchemaType methods directly:"," *"," *     var schema = new Schema({ name: 'string' });"," *     schema.path('name').validate(validator, 'validation of `{PATH}` failed with value `{VALUE}`');"," *"," * ####Error message templates:"," *"," * From the examples above, you may have noticed that error messages support basic templating. There are a few other template keywords besides `{PATH}` and `{VALUE}` too. To find out more, details are available [here](#error_messages_MongooseError-messages)"," *"," * ####Asynchronous validation:"," *"," * Passing a validator function that receives two arguments tells mongoose that the validator is an asynchronous validator. The first argument passed to the validator function is the value being validated. The second argument is a callback function that must called when you finish validating the value and passed either `true` or `false` to communicate either success or failure respectively."," *"," *     schema.path('name').validate(function (value, respond) {"," *       doStuff(value, function () {"," *         ..."," *         respond(false); // validation failed"," *       })"," *     }, '{PATH} failed validation.');"," *"," *     // or with dynamic message"," *"," *     schema.path('name').validate(function (value, respond) {"," *       doStuff(value, function () {"," *         ..."," *         respond(false, 'this message gets to the validation error');"," *       });"," *     }, 'this message does not matter');"," *"," * You might use asynchronous validators to retreive other documents from the database to validate against or to meet other I/O bound validation needs."," *"," * Validation occurs `pre('save')` or whenever you manually execute [document#validate](#document_Document-validate)."," *"," * If validation fails during `pre('save')` and no callback was passed to receive the error, an `error` event will be emitted on your Models associated db [connection](#connection_Connection), passing the validation error object along."," *"," *     var conn = mongoose.createConnection(..);"," *     conn.on('error', handleError);"," *"," *     var Product = conn.model('Product', yourSchema);"," *     var dvd = new Product(..);"," *     dvd.save(); // emits error on the `conn` above"," *"," * If you desire handling these errors at the Model level, attach an `error` listener to your Model and the event will instead be emitted there."," *"," *     // registering an error listener on the Model lets us handle errors more locally"," *     Product.on('error', handleError);"," *"," * @param {RegExp|Function|Object} obj validator"," * @param {String} [errorMsg] optional error message"," * @param {String} [type] optional validator type"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.validate = function(obj, message, type) {","          + '. See http://mongoosejs.com/docs/api.html#schematype_SchemaType-validate';","","      throw new Error(msg);","/**"," * Adds a required validator to this SchemaType. The validator gets added"," * to the front of this SchemaType's validators array using `unshift()`."," *"," * ####Example:"," *"," *     var s = new Schema({ born: { type: Date, required: true })"," *"," *     // or with custom error message"," *"," *     var s = new Schema({ born: { type: Date, required: '{PATH} is required!' })"," *"," *     // or through the path API"," *"," *     Schema.path('name').required(true);"," *"," *     // with custom error messaging"," *"," *     Schema.path('name').required(true, 'grrr :( ');"," *"," *     // or make a path conditionally required based on a function"," *     var isOver18 = function() { return this.age \u003e= 18; };"," *     Schema.path('voterRegistrationId').required(isOver18);"," *"," * The required validator uses the SchemaType's `checkRequired` function to"," * determine whether a given value satisfies the required validator. By default,"," * a value satisfies the required validator if `val != null` (that is, if"," * the value is not null nor undefined). However, most built-in mongoose schema"," * types override the default `checkRequired` function:"," *"," * @param {Boolean} required enable/disable the validator"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @see SchemaArray#checkRequired #schema_array_SchemaArray.checkRequired"," * @see SchemaBoolean#checkRequired #schema_boolean_SchemaBoolean-checkRequired"," * @see SchemaBuffer#checkRequired #schema_buffer_SchemaBuffer.schemaName"," * @see SchemaNumber#checkRequired #schema_number_SchemaNumber-min"," * @see SchemaObjectId#checkRequired #schema_objectid_ObjectId-auto"," * @see SchemaString#checkRequired #schema_string_SchemaString-checkRequired"," * @api public"," */","","SchemaType.prototype.required = function(required, message) {","    // in here, `this` refers to the validating document.","    // no validation when this path wasn't selected in the query.","    if ('isSelected' in this \u0026\u0026 !this.isSelected(_this.path) \u0026\u0026 !this.isModified(_this.path)) {","/**"," * Gets the default value"," *"," * @param {Object} scope the scope which callback are executed"," * @param {Boolean} init"," * @api private"," */","","SchemaType.prototype.getDefault = function(scope, init) {","/**"," * Applies setters"," *"," * @param {Object} value"," * @param {Object} scope"," * @param {Boolean} init"," * @api private"," */","","SchemaType.prototype.applySetters = function(value, scope, init, priorVal, options) {","  // do not cast until all setters are applied #665","  v = this.cast(v, scope, init, priorVal, options);","/**"," * Applies getters to a value"," *"," * @param {Object} value"," * @param {Object} scope"," * @api private"," */","","SchemaType.prototype.applyGetters = function(value, scope) {","/**"," * Sets default `select()` behavior for this path."," *"," * Set to `true` if this path should always be included in the results, `false` if it should be excluded by default. This setting can be overridden at the query level."," *"," * ####Example:"," *"," *     T = db.model('T', new Schema({ x: { type: String, select: true }}));"," *     T.find(..); // field x will always be selected .."," *     // .. unless overridden;"," *     T.find().select('-x').exec(callback);"," *"," * @param {Boolean} val"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.select = function select(val) {","/**"," * Performs a validation of `value` using the validators declared for this SchemaType."," *"," * @param {any} value"," * @param {Function} callback"," * @param {Object} scope"," * @api private"," */","","SchemaType.prototype.doValidate = function(value, fn, scope) {","/**"," * Performs a validation of `value` using the validators declared for this SchemaType."," *"," * ####Note:"," *"," * This method ignores the asynchronous validators."," *"," * @param {any} value"," * @param {Object} scope"," * @return {MongooseError|undefined}"," * @api private"," */","","SchemaType.prototype.doValidateSync = function(value, scope) {","      // if not async validators","      if (validator.length !== 2) {","/**"," * Determines if value is a valid Reference."," *"," * @param {SchemaType} self"," * @param {Object} value"," * @param {Document} doc"," * @param {Boolean} init"," * @return {Boolean}"," * @api private"," */","","SchemaType._isRef = function(self, value, doc, init) {","  // fast path","  var ref = init \u0026\u0026 self.options \u0026\u0026 self.options.ref;","    // checks for","    // - this populated with adhoc model and no ref was set in schema OR","    // - setting / pushing values after population","    var path = doc.$__fullPath(self.path);","    if (!Buffer.isBuffer(value) \u0026\u0026  // buffers are objects too","        value._bsontype !== 'Binary' // raw binary value from the db","        \u0026\u0026 utils.isObject(value)    // might have deselected _id in population query","    ) {","/*!"," * ignore"," */","","function handleSingle(val) {","/*!"," * ignore"," */","","function handleArray(val) {","/*!"," * ignore"," */","","SchemaType.prototype.$conditionalHandlers = {","/**"," * Cast the given value with the given optional query operator."," *"," * @param {String} [$conditional] query operator, like `$eq` or `$in`"," * @param {any} val"," * @api private"," */","","SchemaType.prototype.castForQuery = function($conditional, val) {","/**"," * Default check for if this path satisfies the `required` validator."," *"," * @param {any} val"," * @api private"," */","","SchemaType.prototype.checkRequired = function(val) {","/*!"," * Module exports."," */","","module.exports = exports = SchemaType;"],"Functions":["function SchemaType(path, options, instance) ","    if (this[i] \u0026\u0026 typeof this[i] === 'function') "," * Defaults can be either `functions` which return the value to use as the default or the literal value itself. Either way, the value will be cast based on its schema type before being set during document creation."," *     schema.path('mixed').default(function () "," *     // if we don't use a function to return object literals for Mixed defaults,","SchemaType.prototype.default = function(val) ","SchemaType.prototype.index = function(options) ","SchemaType.prototype.unique = function(bool) ","SchemaType.prototype.text = function(bool) ","SchemaType.prototype.sparse = function(bool) "," *     function capitalize (val) "," *     function toLower (v) "," * _NOTE: we could have also just used the built-in `lowercase: true` SchemaType option instead of defining our own function._"," *     function inspector (val, schematype) ","SchemaType.prototype.set = function(fn) ","  if (typeof fn !== 'function') ","    throw new TypeError('A setter must be a function.');"," *     function dob (val) "," *     function obfuscate (cc) "," *     Account.findById(id, function (err, found) "," *     function inspector (val, schematype) "," *     Virus.findById(id, function (err, virus) ","SchemaType.prototype.get = function(fn) ","  if (typeof fn !== 'function') ","    throw new TypeError('A getter must be a function.');"," *     function validator (val) "," * Passing a validator function that receives two arguments tells mongoose that the validator is an asynchronous validator. The first argument passed to the validator function is the value being validated. The second argument is a callback function that must called when you finish validating the value and passed either `true` or `false` to communicate either success or failure respectively."," *     schema.path('name').validate(function (value, respond) "," *       doStuff(value, function () "," *     schema.path('name').validate(function (value, respond) "," *       doStuff(value, function () ","SchemaType.prototype.validate = function(obj, message, type) ","  if (typeof obj === 'function' || obj \u0026\u0026 utils.getFunctionName(obj.constructor) === 'RegExp') "," *     // or make a path conditionally required based on a function"," *     var isOver18 = function()  return this.age \u003e= 18; };"," * The required validator uses the SchemaType's `checkRequired` function to"," * types override the default `checkRequired` function:","SchemaType.prototype.required = function(required, message) ","    this.validators = this.validators.filter(function(v) ","  this.requiredValidator = function(v) ","    return ((typeof required === 'function') \u0026\u0026 !required.apply(this)) ||","SchemaType.prototype.getDefault = function(scope, init) ","  var ret = typeof this.defaultValue === 'function'","SchemaType.prototype.applySetters = function(value, scope, init, priorVal, options) ","SchemaType.prototype.applyGetters = function(value, scope) ","SchemaType.prototype.select = function select(val) ","SchemaType.prototype.doValidate = function(value, fn, scope) ","  var validate = function(ok, validatorProperties) ","  this.validators.forEach(function(v) ","    } else if (typeof validator === 'function') ","        var returnVal = validator.call(scope, value, function(ok, customMsg) ","SchemaType.prototype.doValidateSync = function(value, scope) ","  var validate = function(ok, validatorProperties) ","  this.validators.forEach(function(v) ","    } else if (typeof validator === 'function') ","SchemaType._isRef = function(self, value, doc, init) ","function handleSingle(val) ","function handleArray(val) ","  return val.map(function(m) ","SchemaType.prototype.castForQuery = function($conditional, val) ","SchemaType.prototype.checkRequired = function(val) "],"Dependencies":["./utils","./error"]},{"FileName":"node_modules\\mongoose\\lib\\services\\common.js","LineCount":84,"CharCount":1570,"Comments":["/*!"," * Module dependencies."," */","","var ObjectId = require('../types/objectid');","/*!"," * ignore"," */","","function flatten(update, path, options) {","/*!"," * ignore"," */","","function modifiedPaths(update, path, result) {","/*!"," * ignore"," */","","function shouldFlatten(val) {"],"Functions":["function flatten(update, path, options) ","function modifiedPaths(update, path, result) ","function shouldFlatten(val) "],"Dependencies":["../types/objectid","../utils"]},{"FileName":"node_modules\\mongoose\\lib\\services\\setDefaultsOnInsert.js","LineCount":113,"CharCount":3479,"Comments":["/**"," * Applies defaults to update and findOneAndUpdate operations."," *"," * @param {Query} query"," * @param {Schema} schema"," * @param {Object} castedDoc"," * @param {Object} options"," * @method setDefaultsOnInsert"," * @api private"," */","","module.exports = function(query, schema, castedDoc, options) {","          // Ignore _id for now because it causes bugs in 2.4","          return;","          // Only handle nested schemas 1-level deep to avoid infinite","          // recursion re: https://github.com/mongodb-js/mongoose-autopopulate/issues/11","          schemaType.schema.eachPath(function(_path, _schemaType) {","              // Ignore _id for now because it causes bugs in 2.4","              return;"],"Functions":["module.exports = function(query, schema, castedDoc, options) ","      schema.eachPath(function(path, schemaType) ","          schemaType.schema.eachPath(function(_path, _schemaType) "],"Dependencies":["./common","./common"]},{"FileName":"node_modules\\mongoose\\lib\\services\\updateValidators.js","LineCount":102,"CharCount":2937,"Comments":["/*!"," * Module dependencies."," */","","var Mixed = require('../schema/mixed');","/**"," * Applies validators and defaults to update and findOneAndUpdate operations,"," * specifically passing a null doc as `this` to validators and defaults"," *"," * @param {Query} query"," * @param {Schema} schema"," * @param {Object} castedDoc"," * @param {Object} options"," * @method runValidatorsOnUpdate"," * @api private"," */","","module.exports = function(query, schema, castedDoc, options) {","      // gh-4305: `_getSchema()` will report all sub-fields of a 'Mixed' path","      // as 'Mixed', so avoid double validating them.","      if (schemaPath instanceof Mixed \u0026\u0026 schemaPath.path !== updates[i]) {"],"Functions":["module.exports = function(query, schema, castedDoc, options) ","  function iter(i) ","      validatorsToExecute.push(function(callback) ","            function(err) ","  return function(callback) ","    async.parallel(validatorsToExecute, function() "],"Dependencies":["../schema/mixed","../error/validation","async","./common","./common"]},{"FileName":"node_modules\\mongoose\\lib\\statemachine.js","LineCount":179,"CharCount":4208,"Comments":["/*!"," * Module dependencies."," */","","var utils = require('./utils');","/*!"," * StateMachine represents a minimal `interface` for the"," * constructors it builds via StateMachine.ctor(...)."," *"," * @api private"," */","","var StateMachine = module.exports = exports = function StateMachine() {","/*!"," * StateMachine.ctor('state1', 'state2', ...)"," * A factory method for subclassing StateMachine."," * The arguments are a list of states. For each state,"," * the constructor's prototype gets state transition"," * methods named after each state. These transition methods"," * place their path argument into the given state."," *"," * @param {String} state"," * @param {String} [state]"," * @return {Function} subclass constructor"," * @private"," */","","StateMachine.ctor = function() {","    // Changes the `path`'s state to `state`.","    ctor.prototype[state] = function(path) {","/*!"," * This function is wrapped by the state change functions:"," *"," * - `require(path)`"," * - `modify(path)`"," * - `init(path)`"," *"," * @api private"," */","","StateMachine.prototype._changeState = function _changeState(path, nextState) {","/*!"," * ignore"," */","","StateMachine.prototype.clear = function clear(state) {","/*!"," * Checks to see if at least one path is in the states passed in via `arguments`"," * e.g., this.some('required', 'inited')"," *"," * @param {String} state that we want to check for."," * @private"," */","","StateMachine.prototype.some = function some() {","/*!"," * This function builds the functions that get assigned to `forEach` and `map`,"," * since both of those methods share a lot of the same logic."," *"," * @param {String} iterMethod is either 'forEach' or 'map'"," * @return {Function}"," * @api private"," */","","StateMachine.prototype._iter = function _iter(iterMethod) {","/*!"," * Iterates over the paths that belong to one of the parameter states."," *"," * The function profile can look like:"," * this.forEach(state1, fn);         // iterates over all paths in state1"," * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2"," * this.forEach(fn);                 // iterates over all paths in all states"," *"," * @param {String} [state]"," * @param {String} [state]"," * @param {Function} callback"," * @private"," */","","StateMachine.prototype.forEach = function forEach() {","/*!"," * Maps over the paths that belong to one of the parameter states."," *"," * The function profile can look like:"," * this.forEach(state1, fn);         // iterates over all paths in state1"," * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2"," * this.forEach(fn);                 // iterates over all paths in all states"," *"," * @param {String} [state]"," * @param {String} [state]"," * @param {Function} callback"," * @return {Array}"," * @private"," */","","StateMachine.prototype.map = function map() {"],"Functions":["var StateMachine = module.exports = exports = function StateMachine() ","StateMachine.ctor = function() ","  var ctor = function() ","  states.forEach(function(state) ","    ctor.prototype[state] = function(path) "," * This function is wrapped by the state change functions:","StateMachine.prototype._changeState = function _changeState(path, nextState) ","StateMachine.prototype.clear = function clear(state) ","StateMachine.prototype.some = function some() ","  return Array.prototype.some.call(what, function(state) "," * This function builds the functions that get assigned to `forEach` and `map`,","StateMachine.prototype._iter = function _iter(iterMethod) ","  return function() ","    var paths = states.reduce(function(paths, state) ","    return paths[iterMethod](function(path, i, paths) "," * The function profile can look like:","StateMachine.prototype.forEach = function forEach() "," * The function profile can look like:","StateMachine.prototype.map = function map() "],"Dependencies":["./utils"]},{"FileName":"node_modules\\mongoose\\lib\\types\\array.js","LineCount":772,"CharCount":20055,"Comments":["/*!"," * Module dependencies."," */","","var EmbeddedDocument = require('./embedded');","/**"," * Mongoose Array constructor."," *"," * ####NOTE:"," *"," * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._"," *"," * @param {Array} values"," * @param {String} path"," * @param {Document} doc parent document"," * @api private"," * @inherits Array"," * @see http://bit.ly/f6CnZU"," */","","function MongooseArray(values, path, doc) {","  // Because doc comes from the context of another function, doc === global","  // can happen if there was a null somewhere up the chain (see #3020)","  // RB Jun 17, 2015 updated to check for presence of expected paths instead","  // to make more proof against unusual node environments","  if (doc \u0026\u0026 doc instanceof Document) {","  /**","   * Stores a queue of atomic operations to perform","   *","   * @property _atomics","   * @api private","   */","","  _atomics: undefined,","  /**","   * Parent owner document","   *","   * @property _parent","   * @api private","   * @receiver MongooseArray","   */","","  _parent: undefined,","  /**","   * Casts a member based on this arrays schema.","   *","   * @param {any} value","   * @return value the casted value","   * @method _cast","   * @api private","   * @receiver MongooseArray","   */","","  _cast: function(value) {","      // cast to the populated Models schema","      Model = populated.options.model;","      // only objects are permitted so we can safely assume that","      // non-objects are to be interpreted as _id","      if (Buffer.isBuffer(value) ||","      // gh-2399","      // we should cast model only when it's not a discriminator","      var isDisc = value.schema \u0026\u0026 value.schema.discriminatorMapping \u0026\u0026","  /**","   * Marks this array as modified.","   *","   * If it bubbles up from an embedded document change, then it takes the following arguments (otherwise, takes 0 arguments)","   *","   * @param {EmbeddedDocument} embeddedDoc the embedded doc that invoked this method on the Array","   * @param {String} embeddedPath the path which changed in the embeddedDoc","   * @method _markModified","   * @api private","   * @receiver MongooseArray","   */","","  _markModified: function(elem, embeddedPath) {","          // an embedded doc bubbled up the change","          dirtyPath = dirtyPath + '.' + this.indexOf(elem) + '.' + embeddedPath;","          // directly set an index","          dirtyPath = dirtyPath + '.' + elem;","  /**","   * Register an atomic operation with the parent.","   *","   * @param {Array} op operation","   * @param {any} val","   * @method _registerAtomic","   * @api private","   * @receiver MongooseArray","   */","","  _registerAtomic: function(op, val) {","      // $set takes precedence over all other ops.","      // mark entire array modified.","      this._atomics = {$set: val};","    // reset pop/shift after save","    if (op === '$pop' \u0026\u0026 !('$pop' in atomics)) {","    // check for impossible $atomic combos (Mongo denies more than one","    // $atomic op on a single path","    if (this._atomics.$set ||","      // a different op was previously registered.","      // save the entire thing.","      this._atomics = {$set: this};","  /**","   * Depopulates stored atomic operation values as necessary for direct insertion to MongoDB.","   *","   * If no atomics exist, we return all array values after conversion.","   *","   * @return {Array}","   * @method $__getAtomics","   * @memberOf MongooseArray","   * @api private","   */","","  $__getAtomics: function() {","      // the atomic values which are arrays are not MongooseArrays. we","      // need to convert their elements as if they were MongooseArrays","      // to handle populated arrays versus DocumentArrays properly.","      if (isMongooseObject(val)) {","  /**","   * Returns the number of pending atomic operations to send to the db for this array.","   *","   * @api private","   * @return {Number}","   * @method hasAtomics","   * @receiver MongooseArray","   */","","  hasAtomics: function hasAtomics() {","  /**","   * Internal helper for .map()","   *","   * @api private","   * @return {Number}","   * @method _mapCast","   * @receiver MongooseArray","   */","  _mapCast: function(val, index) {","  /**","   * Wraps [`Array#push`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push) with proper change tracking.","   *","   * @param {Object} [args...]","   * @api public","   * @method push","   * @receiver MongooseArray","   */","","  push: function() {","    // $pushAll might be fibbed (could be $push). But it makes it easier to","    // handle what could have been $push, $pushAll combos","    this._registerAtomic('$pushAll', values);","  /**","   * Pushes items to the array non-atomically.","   *","   * ####NOTE:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @param {any} [args...]","   * @api public","   * @method nonAtomicPush","   * @receiver MongooseArray","   */","","  nonAtomicPush: function() {","  /**","   * Pops the array atomically at most one time per document `save()`.","   *","   * #### NOTE:","   *","   * _Calling this mulitple times on an array before saving sends the same command as calling it once._","   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._","   *","   *      doc.array = [1,2,3];","   *","   *      var popped = doc.array.$pop();","   *      console.log(popped); // 3","   *      console.log(doc.array); // [1,2]","   *","   *      // no affect","   *      popped = doc.array.$pop();","   *      console.log(doc.array); // [1,2]","   *","   *      doc.save(function (err) {","   *        if (err) return handleError(err);","   *","   *        // we saved, now $pop works again","   *        popped = doc.array.$pop();","   *        console.log(popped); // 2","   *        console.log(doc.array); // [1]","   *      })","   *","   * @api public","   * @method $pop","   * @memberOf MongooseArray","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop","   * @method $pop","   * @receiver MongooseArray","   */","","  $pop: function() {","    // only allow popping once","    if (this._popped) {","  /**","   * Wraps [`Array#pop`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop) with proper change tracking.","   *","   * ####Note:","   *","   * _marks the entire array as modified which will pass the entire thing to $set potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @see MongooseArray#$pop #types_array_MongooseArray-%24pop","   * @api public","   * @method pop","   * @receiver MongooseArray","   */","","  pop: function() {","  /**","   * Atomically shifts the array at most one time per document `save()`.","   *","   * ####NOTE:","   *","   * _Calling this mulitple times on an array before saving sends the same command as calling it once._","   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._","   *","   *      doc.array = [1,2,3];","   *","   *      var shifted = doc.array.$shift();","   *      console.log(shifted); // 1","   *      console.log(doc.array); // [2,3]","   *","   *      // no affect","   *      shifted = doc.array.$shift();","   *      console.log(doc.array); // [2,3]","   *","   *      doc.save(function (err) {","   *        if (err) return handleError(err);","   *","   *        // we saved, now $shift works again","   *        shifted = doc.array.$shift();","   *        console.log(shifted ); // 2","   *        console.log(doc.array); // [3]","   *      })","   *","   * @api public","   * @memberOf MongooseArray","   * @method $shift","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop","   */","","  $shift: function $shift() {","    // only allow shifting once","    if (this._shifted) {","  /**","   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.","   *","   * ####Example:","   *","   *     doc.array = [2,3];","   *     var res = doc.array.shift();","   *     console.log(res) // 2","   *     console.log(doc.array) // [3]","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method shift","   * @receiver MongooseArray","   */","","  shift: function() {","  /**","   * Pulls items from the array atomically. Equality is determined by casting","   * the provided value to an embedded document and comparing using","   * [the `Document.equals()` function.](./api.html#document_Document-equals)","   *","   * ####Examples:","   *","   *     doc.array.pull(ObjectId)","   *     doc.array.pull({ _id: 'someId' })","   *     doc.array.pull(36)","   *     doc.array.pull('tag 1', 'tag 2')","   *","   * To remove a document from a subdocument array we may pass an object with a matching `_id`.","   *","   *     doc.subdocs.push({ _id: 4815162342 })","   *     doc.subdocs.pull({ _id: 4815162342 }) // removed","   *","   * Or we may passing the _id directly and let mongoose take care of it.","   *","   *     doc.subdocs.push({ _id: 4815162342 })","   *     doc.subdocs.pull(4815162342); // works","   *","   * The first pull call will result in a atomic operation on the database, if pull is called repeatedly without saving the document, a $set operation is used on the complete array instead, overwriting possible changes that happened on the database in the meantime.","   *","   * @param {any} [args...]","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull","   * @api public","   * @method pull","   * @receiver MongooseArray","   */","","  pull: function() {","  /**","   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method splice","   * @receiver MongooseArray","   */","","  splice: function splice() {","  /**","   * Wraps [`Array#unshift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method unshift","   * @receiver MongooseArray","   */","","  unshift: function() {","  /**","   * Wraps [`Array#sort`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort) with proper change tracking.","   *","   * ####NOTE:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method sort","   * @receiver MongooseArray","   */","","  sort: function() {","  /**","   * Adds values to the array if not already present.","   *","   * ####Example:","   *","   *     console.log(doc.array) // [2,3,4]","   *     var added = doc.array.addToSet(4,5);","   *     console.log(doc.array) // [2,3,4,5]","   *     console.log(added)     // [5]","   *","   * @param {any} [args...]","   * @return {Array} the values that were added","   * @receiver MongooseArray","   * @api public","   * @method addToSet","   */","","  addToSet: function addToSet() {","  /**","   * Sets the casted `val` at index `i` and marks the array modified.","   *","   * ####Example:","   *","   *     // given documents based on the following","   *     var Doc = mongoose.model('Doc', new Schema({ array: [Number] }));","   *","   *     var doc = new Doc({ array: [2,3,4] })","   *","   *     console.log(doc.array) // [2,3,4]","   *","   *     doc.array.set(1,\"5\");","   *     console.log(doc.array); // [2,5,4] // properly cast to number","   *     doc.save() // the change is saved","   *","   *     // VS not using array#set","   *     doc.array[1] = \"5\";","   *     console.log(doc.array); // [2,\"5\",4] // no casting","   *     doc.save() // change is not saved","   *","   * @return {Array} this","   * @api public","   * @method set","   * @receiver MongooseArray","   */","","  set: function set(i, val) {","  /**","   * Returns a native js Array.","   *","   * @param {Object} options","   * @return {Array}","   * @api public","   * @method toObject","   * @receiver MongooseArray","   */","","  toObject: function(options) {","  /**","   * Helper for console.log","   *","   * @api public","   * @method inspect","   * @receiver MongooseArray","   */","","  inspect: function() {","  /**","   * Return the index of `obj` or `-1` if not found.","   *","   * @param {Object} obj the item to look for","   * @return {Number}","   * @api public","   * @method indexOf","   * @receiver MongooseArray","   */","","  indexOf: function indexOf(obj) {","/**"," * Alias of [pull](#types_array_MongooseArray-pull)"," *"," * @see MongooseArray#pull #types_array_MongooseArray-pull"," * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull"," * @api public"," * @memberOf MongooseArray"," * @method remove"," */","","MongooseArray.mixin.remove = MongooseArray.mixin.pull;","/*!"," * Module exports."," */","","module.exports = exports = MongooseArray;"],"Functions":["function MongooseArray(values, path, doc) ","  // Because doc comes from the context of another function, doc === global","  _cast: function(value) ","  _markModified: function(elem, embeddedPath) ","  _registerAtomic: function(op, val) ","      this._parent.once('save', function() ","        Array.prototype.push.apply(selector, val.map(function(v) ","  $__getAtomics: function() ","  hasAtomics: function hasAtomics() ","  _mapCast: function(val, index) ","  push: function() ","  nonAtomicPush: function() ","   *      doc.save(function (err) ","  $pop: function() ","  pop: function() ","   *      doc.save(function (err) ","  $shift: function $shift() ","  shift: function() ","   * [the `Document.equals()` function.](./api.html#document_Document-equals)","  pull: function() ","        var some = values.some(function(v) ","      this._registerAtomic('$pullDocs', values.map(function(v) ","  splice: function splice() ","  unshift: function() ","  sort: function() ","  addToSet: function addToSet() ","    values.forEach(function(v) ","          found = this.some(function(doc) ","          found = this.some(function(d) ","  set: function set(i, val) ","  toObject: function(options) ","      return this.map(function(doc) ","  inspect: function() ","  indexOf: function indexOf(obj) "],"Dependencies":["./embedded","../document","./objectid","../utils"]},{"FileName":"node_modules\\mongoose\\lib\\types\\buffer.js","LineCount":274,"CharCount":5326,"Comments":["/*!"," * Module dependencies."," */","","var Binary = require('../drivers').Binary,","/**"," * Mongoose Buffer constructor."," *"," * Values always have to be passed to the constructor to initialize."," *"," * @param {Buffer} value"," * @param {String} encode"," * @param {Number} offset"," * @api private"," * @inherits Buffer"," * @see http://bit.ly/f6CnZU"," */","","function MongooseBuffer(value, encode, offset) {","    // internal casting","    path = encode[0];","  // make sure these internal props don't show up in Object.keys()","  Object.defineProperties(buf, {","/*!"," * Inherit from Buffer."," */","","// MongooseBuffer.prototype = new Buffer(0);","// MongooseBuffer.prototype = new Buffer(0);","","MongooseBuffer.mixin = {","  /**","   * Parent owner document","   *","   * @api private","   * @property _parent","   * @receiver MongooseBuffer","   */","","  _parent: undefined,","  /**","   * Default subtype for the Binary representing this Buffer","   *","   * @api private","   * @property _subtype","   * @receiver MongooseBuffer","   */","","  _subtype: undefined,","  /**","   * Marks this buffer as modified.","   *","   * @api private","   * @method _markModified","   * @receiver MongooseBuffer","   */","","  _markModified: function() {","  /**","   * Writes the buffer.","   *","   * @api public","   * @method write","   * @receiver MongooseBuffer","   */","","  write: function() {","  /**","   * Copies the buffer.","   *","   * ####Note:","   *","   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.","   *","   * @return {Number} The number of bytes copied.","   * @param {Buffer} target","   * @method copy","   * @receiver MongooseBuffer","   */","","  copy: function(target) {","/*!"," * Compile other Buffer methods marking this buffer as modified."," */","","(","// node \u003c 0.5","    'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' +","// node \u003e= 0.5","    'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +","/**"," * Converts this buffer to its Binary type representation."," *"," * ####SubTypes:"," *"," *   var bson = require('bson')"," *   bson.BSON_BINARY_SUBTYPE_DEFAULT"," *   bson.BSON_BINARY_SUBTYPE_FUNCTION"," *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY"," *   bson.BSON_BINARY_SUBTYPE_UUID"," *   bson.BSON_BINARY_SUBTYPE_MD5"," *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED"," *"," *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);"," *"," * @see http://bsonspec.org/#/specification"," * @param {Hex} [subtype]"," * @return {Binary}"," * @api public"," * @method toObject"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.toObject = function(options) {","/**"," * Determines if this buffer is equals to `other` buffer"," *"," * @param {Buffer} other"," * @return {Boolean}"," * @method equals"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.equals = function(other) {","/**"," * Sets the subtype option and marks the buffer modified."," *"," * ####SubTypes:"," *"," *   var bson = require('bson')"," *   bson.BSON_BINARY_SUBTYPE_DEFAULT"," *   bson.BSON_BINARY_SUBTYPE_FUNCTION"," *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY"," *   bson.BSON_BINARY_SUBTYPE_UUID"," *   bson.BSON_BINARY_SUBTYPE_MD5"," *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED"," *"," *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);"," *"," * @see http://bsonspec.org/#/specification"," * @param {Hex} subtype"," * @api public"," * @method subtype"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.subtype = function(subtype) {","/*!"," * Module exports."," */","","MongooseBuffer.Binary = Binary;"],"Functions":["function MongooseBuffer(value, encode, offset) ","  _markModified: function() ","  write: function() ","  copy: function(target) ",").split(' ').forEach(function(method) ","  MongooseBuffer.mixin[method] = function() ","MongooseBuffer.mixin.toObject = function(options) ","MongooseBuffer.mixin.equals = function(other) ","MongooseBuffer.mixin.subtype = function(subtype) "],"Dependencies":["../drivers","../utils","bson","bson"]},{"FileName":"node_modules\\mongoose\\lib\\types\\documentarray.js","LineCount":251,"CharCount":5951,"Comments":["/*!"," * Module dependencies."," */","","var MongooseArray = require('./array'),","/**"," * DocumentArray constructor"," *"," * @param {Array} values"," * @param {String} path the path to this array"," * @param {Document} doc parent document"," * @api private"," * @return {MongooseDocumentArray}"," * @inherits MongooseArray"," * @see http://bit.ly/f6CnZU"," */","","function MongooseDocumentArray(values, path, doc) {","  // Values always have to be passed to the constructor to initialize, since","  // otherwise MongooseArray#push will mark the array as modified to the parent.","  var keysMA = Object.keys(MongooseArray.mixin);","  // Because doc comes from the context of another function, doc === global","  // can happen if there was a null somewhere up the chain (see #3020 \u0026\u0026 #3034)","  // RB Jun 17, 2015 updated to check for presence of expected paths instead","  // to make more proof against unusual node environments","  if (doc \u0026\u0026 doc instanceof Document) {","/*!"," * Inherits from MongooseArray"," */","// MongooseDocumentArray.mixin = Object.create( MongooseArray.mixin );","// MongooseDocumentArray.mixin = Object.create( MongooseArray.mixin );","MongooseDocumentArray.mixin = {","  /**","   * Overrides MongooseArray#cast","   *","   * @method _cast","   * @api private","   * @receiver MongooseDocumentArray","   */","","  _cast: function(value, index) {","        // value may have been created using array.create()","        value.__parent = this._parent;","    // handle cast('string') or cast(ObjectId) etc.","    // only objects are permitted so we can safely assume that","    // non-objects are to be interpreted as _id","    if (Buffer.isBuffer(value) ||","  /**","   * Searches array items for the first document with a matching _id.","   *","   * ####Example:","   *","   *     var embeddedDoc = m.array.id(some_id);","   *","   * @return {EmbeddedDocument|null} the subdocument or null if not found.","   * @param {ObjectId|String|Number|Buffer} id","   * @TODO cast to the _id based on schema for proper comparison","   * @method id","   * @api public","   * @receiver MongooseDocumentArray","   */","","  id: function(id) {","  /**","   * Returns a native js Array of plain js objects","   *","   * ####NOTE:","   *","   * _Each sub-document is converted to a plain object by calling its `#toObject` method._","   *","   * @param {Object} [options] optional options to pass to each documents `toObject` method call during conversion","   * @return {Array}","   * @method toObject","   * @api public","   * @receiver MongooseDocumentArray","   */","","  toObject: function(options) {","  /**","   * Helper for console.log","   *","   * @method inspect","   * @api public","   * @receiver MongooseDocumentArray","   */","","  inspect: function() {","  /**","   * Creates a subdocument casted to this schema.","   *","   * This is the same subdocument constructor used for casting.","   *","   * @param {Object} obj the value to cast to this arrays SubDocument schema","   * @method create","   * @api public","   * @receiver MongooseDocumentArray","   */","","  create: function(obj) {","  /**","   * Creates a fn that notifies all child docs of `event`.","   *","   * @param {String} event","   * @return {Function}","   * @method notify","   * @api private","   * @receiver MongooseDocumentArray","   */","","  notify: function notify(event) {","          // only swap for save event for now, we may change this to all event types later","          case 'save':","            // NO-OP","            break;","/*!"," * Module exports."," */","","module.exports = MongooseDocumentArray;"],"Functions":["function MongooseDocumentArray(values, path, doc) ","  // Because doc comes from the context of another function, doc === global","  _cast: function(value, index) ","  id: function(id) ","  toObject: function(options) ","    return this.map(function(doc) ","  inspect: function() ","  create: function(obj) ","  notify: function notify(event) ","    return function notify(val) "],"Dependencies":["./array","./objectid","../schema/objectid","../utils","../document"]},{"FileName":"node_modules\\mongoose\\lib\\types\\embedded.js","LineCount":330,"CharCount":6723,"Comments":["/* eslint no-func-assign: 1 */","","/*!"," * Module dependencies."," */","","var Document = require('../document_provider')();","/**"," * EmbeddedDocument constructor."," *"," * @param {Object} obj js object returned from the db"," * @param {MongooseDocumentArray} parentArr the parent array of this document"," * @param {Boolean} skipId"," * @inherits Document"," * @api private"," */","","function EmbeddedDocument(obj, parentArr, skipId, fields, index) {","/*!"," * Inherit from Document"," */","EmbeddedDocument.prototype = Object.create(Document.prototype);","/**"," * Marks the embedded doc modified."," *"," * ####Example:"," *"," *     var doc = blogpost.comments.id(hexstring);"," *     doc.mixed.type = 'changed';"," *     doc.markModified('mixed.type');"," *"," * @param {String} path the path which changed"," * @api public"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.markModified = function(path) {","    // Mark the WHOLE parent array as modified","    // if this is a new document (i.e., we are initializing","    // a document),","    this.__parentArray._markModified();","/**"," * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)"," *"," * ####NOTE:"," *"," * _This is a no-op. Does not actually save the doc to the db._"," *"," * @param {Function} [fn]"," * @return {Promise} resolved Promise"," * @api private"," */","","EmbeddedDocument.prototype.save = function(fn) {","/*!"," * Registers remove event listeners for triggering"," * on subdocuments."," *"," * @param {EmbeddedDocument} sub"," * @api private"," */","","function registerRemoveListener(sub) {","/**"," * Removes the subdocument from its parent array."," *"," * @param {Object} [options]"," * @param {Function} [fn]"," * @api public"," */","","EmbeddedDocument.prototype.remove = function(options, fn) {","/**"," * Override #update method of parent documents."," * @api private"," */","","EmbeddedDocument.prototype.update = function() {","/**"," * Helper for console.log"," *"," * @api public"," */","","EmbeddedDocument.prototype.inspect = function() {","/**"," * Marks a path as invalid, causing validation to fail."," *"," * @param {String} path the field to invalidate"," * @param {String|Error} err error which states the reason `path` was invalid"," * @return {Boolean}"," * @api public"," */","","EmbeddedDocument.prototype.invalidate = function(path, err, val, first) {","/**"," * Marks a path as valid, removing existing validation errors."," *"," * @param {String} path the field to mark as valid"," * @api private"," * @method $markValid"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.$markValid = function(path) {","/**"," * Checks if a path is invalid"," *"," * @param {String} path the field to check"," * @api private"," * @method $isValid"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.$isValid = function(path) {","/**"," * Returns the top level document of this sub-document."," *"," * @return {Document}"," */","","EmbeddedDocument.prototype.ownerDocument = function() {","/**"," * Returns the full path to this document. If optional `path` is passed, it is appended to the full path."," *"," * @param {String} [path]"," * @return {String}"," * @api private"," * @method $__fullPath"," * @memberOf EmbeddedDocument"," */","","EmbeddedDocument.prototype.$__fullPath = function(path) {","    var parent = this; // eslint-disable-line consistent-this","    if (!parent.__parent) {","      // optimization","      this.$__.ownerDocument = parent;","/**"," * Returns this sub-documents parent document."," *"," * @api public"," */","","EmbeddedDocument.prototype.parent = function() {","/**"," * Returns this sub-documents parent array."," *"," * @api public"," */","","EmbeddedDocument.prototype.parentArray = function() {","/*!"," * Module exports."," */","","module.exports = EmbeddedDocument;"],"Functions":["function EmbeddedDocument(obj, parentArr, skipId, fields, index) ","  this.on('isNew', function(val) ","EmbeddedDocument.prototype.markModified = function(path) ","EmbeddedDocument.prototype.save = function(fn) ","  return new Promise.ES6(function(resolve) ","function registerRemoveListener(sub) ","  function emitRemove() ","EmbeddedDocument.prototype.remove = function(options, fn) ","  if ( typeof options === 'function' \u0026\u0026 !fn ) ","EmbeddedDocument.prototype.update = function() ","EmbeddedDocument.prototype.inspect = function() ","EmbeddedDocument.prototype.invalidate = function(path, err, val, first) ","EmbeddedDocument.prototype.$markValid = function(path) ","EmbeddedDocument.prototype.$isValid = function(path) ","EmbeddedDocument.prototype.ownerDocument = function() ","EmbeddedDocument.prototype.$__fullPath = function(path) ","EmbeddedDocument.prototype.parent = function() ","EmbeddedDocument.prototype.parentArray = function() "],"Dependencies":["../document_provider","../promise_provider"]},{"FileName":"node_modules\\mongoose\\lib\\types\\index.js","LineCount":16,"CharCount":308,"Comments":["/*!"," * Module exports."," */","","exports.Array = require('./array');","exports.Document = // @deprecate","exports.Embedded = require('./embedded');"],"Functions":null,"Dependencies":["./array","./buffer","./embedded","./documentarray","./objectid","./subdocument"]},{"FileName":"node_modules\\mongoose\\lib\\types\\objectid.js","LineCount":14,"CharCount":194,"Comments":["/**"," * ObjectId type constructor"," *"," * ####Example"," *"," *     var id = new mongoose.Types.ObjectId;"," *"," * @constructor ObjectId"," */","","var ObjectId = require('../drivers').ObjectId;"],"Functions":null,"Dependencies":["../drivers"]},{"FileName":"node_modules\\mongoose\\lib\\types\\subdocument.js","LineCount":134,"CharCount":2869,"Comments":["/**"," * Subdocument constructor."," *"," * @inherits Document"," * @api private"," */","","function Subdocument(value, fields) {","/**"," * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)"," *"," * ####NOTE:"," *"," * _This is a no-op. Does not actually save the doc to the db._"," *"," * @param {Function} [fn]"," * @return {Promise} resolved Promise"," * @api private"," */","","Subdocument.prototype.save = function(fn) {","/**"," * Returns the top level document of this sub-document."," *"," * @return {Document}"," */","","Subdocument.prototype.ownerDocument = function() {","/**"," * Null-out this subdoc"," *"," * @param {Object} [options]"," * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove"," */","","Subdocument.prototype.remove = function(options, callback) {","/*!"," * Registers remove event listeners for triggering"," * on subdocuments."," *"," * @param {EmbeddedDocument} sub"," * @api private"," */","","function registerRemoveListener(sub) {"],"Functions":["function Subdocument(value, fields) ","Subdocument.prototype.save = function(fn) ","  return new Promise.ES6(function(resolve) ","Subdocument.prototype.$isValid = function(path) ","Subdocument.prototype.markModified = function(path) ","Subdocument.prototype.$markValid = function(path) ","Subdocument.prototype.invalidate = function(path, err, val) ","Subdocument.prototype.ownerDocument = function() ","Subdocument.prototype.remove = function(options, callback) ","  if (typeof options === 'function') ","  if (typeof callback === 'function') ","function registerRemoveListener(sub) ","  function emitRemove() "],"Dependencies":["../document","../promise_provider"]},{"FileName":"node_modules\\mongoose\\lib\\utils.js","LineCount":848,"CharCount":16583,"Comments":["/*!"," * Module dependencies."," */","","var ObjectId = require('./types/objectid');","/*!"," * Produces a collection name from model `name`."," *"," * @param {String} name a model name"," * @return {String} a collection name"," * @api private"," */","","exports.toCollectionName = function(name, options) {","/**"," * Pluralization rules."," *"," * These rules are applied while processing the argument to `toCollectionName`."," *"," * @deprecated remove in 4.x gh-1350"," */","","exports.pluralization = [","/**"," * Uncountable words."," *"," * These words are applied while processing the argument to `toCollectionName`."," * @api public"," */","","exports.uncountables = [","/*!"," * Pluralize function."," *"," * @author TJ Holowaychuk (extracted from _ext.js_)"," * @param {String} string to pluralize"," * @api private"," */","","function pluralize(str) {","/*!"," * Determines if `a` and `b` are deep equal."," *"," * Modified from node/lib/assert.js"," *"," * @param {any} a a value to compare to `b`"," * @param {any} b a value to compare to `a`"," * @return {Boolean}"," * @api private"," */","","exports.deepEqual = function deepEqual(a, b) {","  // Handle MongooseNumbers","  if (a instanceof Number \u0026\u0026 b instanceof Number) {","    // happens when one is a string literal and the other isn't","    return false;","  // having the same number of owned properties (keys incorporates","  // hasOwnProperty)","  if (ka.length !== kb.length) {","  // the same set of keys (although not necessarily the same order),","  ka.sort();","  // ~~~cheap key test","  for (i = ka.length - 1; i \u003e= 0; i--) {","  // equivalent values for every corresponding key, and","  // ~~~possibly expensive deep test","  for (i = ka.length - 1; i \u003e= 0; i--) {","/*!"," * Object clone with Mongoose natives support."," *"," * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible."," *"," * Functions are never cloned."," *"," * @param {Object} obj the object to clone"," * @param {Object} options"," * @return {Object} the cloned object"," * @api private"," */","","exports.clone = function clone(obj, options) {","        // ignore","        break;","    // object created with Object.create(null)","    return cloneObject(obj, options);","/*!"," * ignore"," */","","function cloneObject(obj, options) {","    // faster","","    keys = Object.keys(obj);","/*!"," * Shallow copies defaults into options."," *"," * @param {Object} defaults"," * @param {Object} options"," * @return {Object} the merged object"," * @api private"," */","","exports.options = function(defaults, options) {","/*!"," * Generates a random string"," *"," * @api private"," */","","exports.random = function() {","/*!"," * Merges `from` into `to` without overwriting existing properties."," *"," * @param {Object} to"," * @param {Object} from"," * @api private"," */","","exports.merge = function merge(to, from) {","/*!"," * toString helper"," */","","var toString = Object.prototype.toString;","/*!"," * Applies toObject recursively."," *"," * @param {Document|Array|Object} obj"," * @return {Object}"," * @api private"," */","","exports.toObject = function toObject(obj) {","/*!"," * Determines if `arg` is an object."," *"," * @param {Object|Array|String|Function|RegExp|any} arg"," * @api private"," * @return {Boolean}"," */","","exports.isObject = function(arg) {","/*!"," * A faster Array.prototype.slice.call(arguments) alternative"," * @api private"," */","","exports.args = sliced;","/*!"," * process.nextTick helper."," *"," * Wraps `callback` in a try/catch + nextTick."," *"," * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback."," *"," * @param {Function} callback"," * @api private"," */","","exports.tick = function tick(callback) {","      // only nextTick on err to get out of","      // the event loop and avoid state corruption.","      process.nextTick(function() {","/*!"," * Returns if `v` is a mongoose object that has a `toObject()` method we can use."," *"," * This is for compatibility with libs like Date.js which do foolish things to Natives."," *"," * @param {any} v"," * @api private"," */","","exports.isMongooseObject = function(v) {","/*!"," * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB."," *"," * @param {Object} object"," * @api private"," */","","exports.expires = function expires(object) {","/*!"," * Populate options constructor"," */","","function PopulateOptions(path, select, match, options, model, subPopulate) {","// make it compatible with utils.clone","PopulateOptions.prototype.constructor = Object;","// expose","exports.PopulateOptions = PopulateOptions;","/*!"," * populate helper"," */","","exports.populate = function populate(path, select, model, match, options, subPopulate) {","  // The order of select/conditions args is opposite Model.find but","  // necessary to keep backward compatibility (select could be","  // an array, string, or object literal).","","  // might have passed an object specifying all arguments","  if (arguments.length === 1) {","/*!"," * Return the value of `obj` at the given `path`."," *"," * @param {String} path"," * @param {Object} obj"," */","","exports.getValue = function(path, obj, map) {","/*!"," * Sets the value of `obj` at the given `path`."," *"," * @param {String} path"," * @param {Anything} val"," * @param {Object} obj"," */","","exports.setValue = function(path, val, obj, map) {","/*!"," * Returns an array of values from object `o`."," *"," * @param {Object} o"," * @return {Array}"," * @private"," */","","exports.object = {};","/*!"," * @see exports.options"," */","","exports.object.shallowCopy = exports.options;","/*!"," * Safer helper for hasOwnProperty checks"," *"," * @param {Object} obj"," * @param {String} prop"," */","","var hop = Object.prototype.hasOwnProperty;","/*!"," * Determine if `val` is null or undefined"," *"," * @return {Boolean}"," */","","exports.isNullOrUndefined = function(val) {","/*!"," * ignore"," */","","exports.array = {};","/*!"," * Flattens an array."," *"," * [ 1, [ 2, 3, [4] ]] -\u003e [1,2,3,4]"," *"," * @param {Array} arr"," * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsey value, the item will not be included in the results."," * @return {Array}"," * @private"," */","","exports.array.flatten = function flatten(arr, filter, ret) {","/*!"," * Removes duplicate values from an array"," *"," * [1, 2, 3, 3, 5] =\u003e [1, 2, 3, 5]"," * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]"," *    =\u003e [ObjectId(\"550988ba0c19d57f697dc45e\")]"," *"," * @param {Array} arr"," * @return {Array}"," * @private"," */","","exports.array.unique = function(arr) {","/*!"," * Determines if two buffers are equal."," *"," * @param {Buffer} a"," * @param {Object} b"," */","","exports.buffer = {};","/**"," * merges to with a copy of from"," *"," * @param {Object} to"," * @param {Object} fromObj"," * @api private"," */","","exports.mergeClone = function(to, fromObj) {","      // make sure to retain key order here because of a bug handling the $each","      // operator in mongodb 2.4.4","      to[key] = exports.clone(fromObj[key], {retainKeyOrder: 1});","        // make sure to retain key order here because of a bug handling the","        // $each operator in mongodb 2.4.4","        to[key] = exports.clone(fromObj[key], {retainKeyOrder: 1});","/**"," * Executes a function on each element of an array (like _.each)"," *"," * @param {Array} arr"," * @param {Function} fn"," * @api private"," */","","exports.each = function(arr, fn) {"],"Functions":["exports.toCollectionName = function(name, options) "," * Pluralize function.","function pluralize(str) ","    found = rules.filter(function(rule) ","exports.deepEqual = function deepEqual(a, b) ","exports.clone = function clone(obj, options) ","    if (options \u0026\u0026 options.json \u0026\u0026 typeof obj.toJSON === 'function') ","function cloneObject(obj, options) ","function cloneArray(arr, options) ","exports.options = function(defaults, options) ","exports.random = function() ","exports.merge = function merge(to, from) ","exports.toObject = function toObject(obj) ","exports.isObject = function(arg) ","exports.tick = function tick(callback) ","  if (typeof callback !== 'function') ","  return function() ","      process.nextTick(function() ","exports.isMongooseObject = function(v) ","exports.expires = function expires(object) ","function PopulateOptions(path, select, match, options, model, subPopulate) ","exports.populate = function populate(path, select, model, match, options, subPopulate) ","      return path.map(function(o) ","  } else if (typeof model !== 'string' \u0026\u0026 typeof model !== 'function') ","exports.getValue = function(path, obj, map) ","exports.setValue = function(path, val, obj, map) ","exports.object.vals = function vals(o) ","exports.object.hasOwnProperty = function(obj, prop) ","exports.isNullOrUndefined = function(val) ","exports.array.flatten = function flatten(arr, filter, ret) ","  arr.forEach(function(item) ","exports.array.unique = function(arr) ","exports.buffer.areEqual = function(a, b) ","exports.getFunctionName = function(fn) ","  return (fn.toString().trim().match(/^function\\s*([^\\s(]+)/) || [])[1];","exports.decorate = function(destination, source) ","exports.mergeClone = function(to, fromObj) "," * Executes a function on each element of an array (like _.each)","exports.each = function(arr, fn) "],"Dependencies":["./types/objectid","regexp-clone","sliced","mpath","ms","./document","./document","./types","./types"]},{"FileName":"node_modules\\mongoose\\lib\\virtualtype.js","LineCount":104,"CharCount":1929,"Comments":["/**"," * VirtualType constructor"," *"," * This is what mongoose uses to define virtual attributes via `Schema.prototype.virtual`."," *"," * ####Example:"," *"," *     var fullname = schema.virtual('fullname');"," *     fullname instanceof mongoose.VirtualType // true"," *"," * @parma {Object} options"," * @api public"," */","","function VirtualType(options, name) {","/**"," * Defines a getter."," *"," * ####Example:"," *"," *     var virtual = schema.virtual('fullname');"," *     virtual.get(function () {"," *       return this.name.first + ' ' + this.name.last;"," *     });"," *"," * @param {Function} fn"," * @return {VirtualType} this"," * @api public"," */","","VirtualType.prototype.get = function(fn) {","/**"," * Defines a setter."," *"," * ####Example:"," *"," *     var virtual = schema.virtual('fullname');"," *     virtual.set(function (v) {"," *       var parts = v.split(' ');"," *       this.name.first = parts[0];"," *       this.name.last = parts[1];"," *     });"," *"," * @param {Function} fn"," * @return {VirtualType} this"," * @api public"," */","","VirtualType.prototype.set = function(fn) {","/**"," * Applies getters to `value` using optional `scope`."," *"," * @param {Object} value"," * @param {Object} scope"," * @return {any} the value after applying all getters"," * @api public"," */","","VirtualType.prototype.applyGetters = function(value, scope) {","/**"," * Applies setters to `value` using optional `scope`."," *"," * @param {Object} value"," * @param {Object} scope"," * @return {any} the value after applying all setters"," * @api public"," */","","VirtualType.prototype.applySetters = function(value, scope) {","/*!"," * exports"," */","","module.exports = VirtualType;"],"Functions":["function VirtualType(options, name) "," *     virtual.get(function () ","VirtualType.prototype.get = function(fn) "," *     virtual.set(function (v) ","VirtualType.prototype.set = function(fn) ","VirtualType.prototype.applyGetters = function(value, scope) ","VirtualType.prototype.applySetters = function(value, scope) "],"Dependencies":null},{"FileName":"node_modules\\mongoose\\static.js","LineCount":25,"CharCount":528,"Comments":["console.error('now listening on http://localhost:8088');",""],"Functions":["require('http').createServer(function(req, res) ","  req.on('end', function() ","    server.serve(req, res, function(err) "],"Dependencies":["node-static"]},{"FileName":"node_modules\\mongoose\\website.js","LineCount":88,"CharCount":2176,"Comments":["// add custom jade filters","require('./docs/helpers/filters')(jade);","// use last release","package.version = getVersion();"],"Functions":["function getVersion() ","function getUnstable(ver) ","  spl = spl.map(function(i) ","function jadeify(filename, options, newfile) ","  jade.renderFile(filename, options, function(err, str) ","    fs.writeFile(newfile, str, function(err) ","files.forEach(function(file) ","    fs.watchFile(filename, interval: 1000}, function(cur, prev) {","acquitFiles.forEach(function(file) "],"Dependencies":["fs","jade","./package","./docs/helpers/highlight","./docs/helpers/linktype","./docs/helpers/href","./docs/helpers/klass","./docs/source","./docs/source/acquit"]},{"FileName":"node_modules\\mpath\\bench.js","LineCount":110,"CharCount":3193,"Comments":["  /**","   * test doc creator","   */","","  function doc () {"],"Functions":["var sha = require('child_process').exec(\"git log --pretty=format:'%h' -n 1\", function (err, sha) ","  function doc () ","  s.add('mpath.get(\"first\", obj)', function () ","  s.add('mpath.get(\"first.second\", obj)', function () ","  s.add('mpath.get(\"first.second.third.1.name\", obj)', function () ","  s.add('mpath.get(\"comments\", obj)', function () ","  s.add('mpath.get(\"comments.1\", obj)', function () ","  s.add('mpath.get(\"comments.2.name\", obj)', function () ","  s.add('mpath.get(\"comments.2.comments.1.comments.0.val\", obj)', function () ","  s.add('mpath.get(\"comments.name\", obj)', function () ","  s.add('mpath.set(\"first\", obj, val)', function () ","  s.add('mpath.set(\"first.second\", obj, val)', function () ","  s.add('mpath.set(\"first.second.third.1.name\", obj, val)', function () ","  s.add('mpath.set(\"comments\", obj, val)', function () ","  s.add('mpath.set(\"comments.1\", obj, val)', function () ","  s.add('mpath.set(\"comments.2.name\", obj, val)', function () ","  s.add('mpath.set(\"comments.2.comments.1.comments.0.val\", obj, val)', function () ","  s.add('mpath.set(\"comments.name\", obj, val)', function () ","  s.on('start', function () ","  s.on('cycle', function (e) ","  s.on('complete', function () "],"Dependencies":["./","benchmark","child_process","fs"]},{"FileName":"node_modules\\mpath\\index.js","LineCount":2,"CharCount":44,"Comments":[],"Functions":null,"Dependencies":["./lib"]},{"FileName":"node_modules\\mpath\\lib\\index.js","LineCount":216,"CharCount":5072,"Comments":["/**"," * Returns the value of object `o` at the given `path`."," *"," * ####Example:"," *"," *     var obj = {"," *         comments: ["," *             { title: 'exciting!', _doc: { title: 'great!' }}"," *           , { title: 'number dos' }"," *         ]"," *     }"," *"," *     mpath.get('comments.0.title', o)         // 'exciting!'"," *     mpath.get('comments.0.title', o, '_doc') // 'great!'"," *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']"," *"," *     // summary"," *     mpath.get(path, o)"," *     mpath.get(path, o, special)"," *     mpath.get(path, o, map)"," *     mpath.get(path, o, special, map)"," *"," * @param {String} path"," * @param {Object} o"," * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property."," * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place."," */","","exports.get = function (path, o, special, map) {","      // reading a property from the array items","      var paths = parts.slice(i);","/**"," * Sets the `val` at the given `path` of object `o`."," *"," * @param {String} path"," * @param {Anything} val"," * @param {Object} o"," * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property."," * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place."," */","","exports.set = function (path, val, o, special, map, _copying) {","  // the existance of $ in a path tells us if the user desires","  // the copying of an array instead of setting each value of","  // the array to the one by one to matching positions of the","  // current array.","  var copy = _copying || /\\$/.test(path)","          // assignment of single values of array","          exports.set(paths, val[j], obj[j], special || lookup, map, copy);","          // assignment of entire value","          exports.set(paths, val, obj[j], special || lookup, map, copy);","  // process the last property of the path","","  part = parts[len];","  // use the special property if exists","  if (special \u0026\u0026 obj[special]) {","  // set the value on the last branch","  if (Array.isArray(obj) \u0026\u0026 !/^\\d+$/.test(part)) {","/*!"," * Returns the value passed to it."," */","","function K (v) {"],"Functions":[" * @param Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.","exports.get = function (path, o, special, map) ","  if ('function' == typeof special) ","      return obj.map(function (item) "," * @param Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.","exports.set = function (path, val, o, special, map, _copying) ","  if ('function' == typeof special) ","function K (v) "],"Dependencies":null},{"FileName":"node_modules\\mpath\\test\\index.js","LineCount":1791,"CharCount":59004,"Comments":["/**"," * Test dependencies."," */","","var mpath = require('../')","/**"," * logging helper"," */","","function log (o) {","/**"," * special path for override tests"," */","","var special = '_doc';","/**"," * Tests"," */","","describe('mpath', function(){","  /**","   * test doc creator","   */","","  function doc () {","            , [2, undefined, 'i'] // undocumented feature (string indexing)","            , [null, 1]","            , [2, 0, 'i'] // undocumented feature (string indexing)","            , [null, 1]","          // test","          mpath.set('arr.arr.e', 47, o, function (v) {","            // add _doc to first element","            o.arr[0]._doc = { yep: 46, arr: [{ a: { b: 47 }}, { a: { c: 48 }}, { d: 'yep' }] }","          // test","          mpath.set('arr.arr.e', 47, o, special);"],"Functions":["function log (o) ","describe('mpath', function()","  function doc () ","  describe('get', function()","    it('`path` must be a string or array', function(done)","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","        mpath.get(function()}, o);","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","      assert.doesNotThrow(function () ","      assert.doesNotThrow(function () ","    describe('without `special`', function()","      it('works', function(done)","      it('handles array.property dot-notation', function(done)","      it('handles array.array notation', function(done)","      it('handles prop.prop.prop.arrayProperty notation', function(done)","          , mpath.get('first.second.third.name', o, function (v) ","      it('handles array.prop.array', function(done)","      it('handles array.prop.array.index', function(done)","      it('handles array.prop.array.index.prop', function(done)","      it('handles array.prop.array.prop', function(done)","      it('handles array.prop.array.prop.prop', function(done)","      it('handles array.prop.array.prop.prop.index', function(done)","          , mpath.get('array.o.array.x.b.1', o, function (v) ","      it('handles array.index.prop.prop', function(done)","          , mpath.get('array.1.o.array', o, function (v) ","              return v.map(function (val) ","      it('handles array.array.index', function(done)","          , mpath.get('arr.arr.1', o, function (v) ","      it('handles array.array.index.prop', function(done)","          , mpath.get('arr.arr.1.a', o, function (v) ","      it('handles array.array.index.prop.prop', function(done)","          , mpath.get('arr.arr.1.a.c', o, function (v) ","    describe('with `special`', function()","      describe('that is a string', function()","        it('works', function(done)","            , mpath.get('first.second.third.0', o, special, function (v) ","          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function (v) ","        it('handles array.property dot-notation', function(done)","            , mpath.get('comments.name', o, special, function (v) ","        it('handles array.array notation', function(done)","        it('handles array.array.index.array', function(done)","        it('handles array.array.index.array.prop', function(done)","            , mpath.get('comments.comments.1.comments.val', o, special, function (v) ","      describe('that is a function', function()","        var special = function (obj, key) ","        it('works', function(done)","            , mpath.get('first.second.third.0', o, special, function (v) ","          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function (v) ","          assert.deepEqual('twoo', mpath.get('comments.8.comments.1.comments.0.val', o, function (obj, path) ","        it('in combination with map', function(done)","          var special = function (obj, key) ","          var map = function (val) ","  describe('set', function()","    describe('without `special`', function()","      it('works', function(done)","        mpath.set('name', 'a new val', o, function (v) ","      describe('array.path', function()","        describe('with single non-array value', function()","          it('works', function(done)","            mpath.set('arr.yep', false, o, function (v) ","        describe('with array of values', function()","          it('that are equal in length', function(done)","            mpath.set('arr.yep', ['one',2], o, function (v) ","          it('that is less than length', function(done)","            mpath.set('arr.yep', [47], o, function (v) ","          it('that is greater than length', function(done)","            mpath.set('arr.yep', [5,6,7], o, function (v) ","      describe('array.$.path', function()","        describe('with single non-array value', function()","          it('copies the value to each item in array', function(done)","            mpath.set('arr.$.yep', xtra: 'double good'}, o, function (v) {","        describe('with array of values', function()","          it('copies the value to each item in array', function(done)","            mpath.set('arr.$.yep', [15], o, function (v) ","      describe('array.index.path', function()","        it('works', function(done)","          mpath.set('arr.1.yep', 0, o, function (v) ","      describe('array.index.array.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.e', 35, o, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.e', ['a','b'], o, function (v) ","      describe('array.index.array.path.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.a.b', 36, o, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.a.b', [1,2,3,4], o, function (v) ","      describe('array.index.array.$.path.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.$.a.b', '$', o, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.$.a.b', [1], o, function (v) ","      describe('array.array.index.path', function()","        it('with single value', function(done)","          mpath.set('arr.arr.0.a', 'single', o, function (v) ","        it('with array', function(done)","          mpath.set('arr.arr.0.a', [4,8,15,16,23,42], o, function (v) ","      describe('array.array.$.index.path', function()","        it('with single value', function(done)","          mpath.set('arr.arr.$.0.a', 'singles', o, function (v) ","        it('with array', function(done)","          mpath.set('arr.arr.$.0.a', [4,8,15,16,23,42], o, function (v) ","      describe('array.array.path.index', function()","        it('with single value', function(done)","          mpath.set('arr.arr.a.7', 47, o, function (v) ","        it('with array', function(done)","      describe('handles array.array.path', function()","        it('with single', function(done)","          mpath.set('arr.arr.e', 47, o, function (v) ","        it('with arrays', function(done)","          mpath.set('arr.arr.e', [[1,2,3],[4,5],null,[],[6], [7,8,9]], o, function (v) ","    describe('with `special`', function()","      it('works', function(done)","        mpath.set('name', 'chan', o, special, function (v) ","        mpath.set('comments.2.comments.1.comments.0.expander', 'adder', o, special, function (v) ","      describe('array.path', function()","        describe('with single non-array value', function()","          it('works', function(done)","            mpath.set('arr.yep', false, o, special, function (v) ","        describe('with array of values', function()","          it('that are equal in length', function(done)","            mpath.set('arr.yep', ['one',2], o, special, function (v) ","          it('that is less than length', function(done)","            mpath.set('arr.yep', [47], o, special, function (v) ","          it('that is greater than length', function(done)","            mpath.set('arr.yep', [5,6,7], o, special, function () ","      describe('array.$.path', function()","        describe('with single non-array value', function()","          it('copies the value to each item in array', function(done)","            mpath.set('arr.$.yep', xtra: 'double good'}, o, special, function (v) {","        describe('with array of values', function()","          it('copies the value to each item in array', function(done)","            mpath.set('arr.$.yep', [15], o, special, function (v) ","      describe('array.index.path', function()","        it('works', function(done)","          mpath.set('arr.1.yep', 0, o, special, function (v) ","      describe('array.index.array.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.e', 35, o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.e', ['a','b'], o, special, function (v) ","      describe('array.index.array.path.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.a.b', 36, o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.a.b', [1,2,3,4], o, special, function (v) ","      describe('array.index.array.$.path.path', function()","        it('with single value', function(done)","          mpath.set('arr.0.arr.$.a.b', '$', o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.0.arr.$.a.b', [1], o, special, function (v) ","      describe('array.array.index.path', function()","        it('with single value', function(done)","          mpath.set('arr.arr.0.a', 'single', o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.arr.0.a', [4,8,15,16,23,42], o, special, function (v) ","      describe('array.array.$.index.path', function()","        it('with single value', function(done)","          mpath.set('arr.arr.$.0.a', 'singles', o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.arr.$.0.a', [4,8,15,16,23,42], o, special, function (v) ","      describe('array.array.path.index', function()","        it('with single value', function(done)","          mpath.set('arr.arr.a.7', 47, o, special, function (v) ","        it('with array', function(done)","          mpath.set('arr.arr.a.7', [[null,46], [undefined, 'woot']], o, special, function (v) ","      describe('handles array.array.path', function()","        it('with single', function(done)","        it('with arrays', function(done)","      describe('that is a function', function()","        describe('without map', function()","          it('works on array value', function(done)","            var special = function (obj, key, val) ","          it('works on non-array value', function(done)","            var special = function (obj, key, val) ","        it('works with map', function(done)","          var special = function (obj, key, val) ","          var map = function (val) ","    describe('get/set integration', function()","      it('works', function(done)","      it('array.prop', function(done)","    describe('multiple $ use', function()","      it('is ok', function(done)","        assert.doesNotThrow(function () ","    it('ignores setting a nested path that doesnt exist', function(done)","      assert.doesNotThrow(function()"],"Dependencies":["../","assert"]},{"FileName":"node_modules\\mpromise\\lib\\promise.js","LineCount":446,"CharCount":10933,"Comments":["/**"," * MPromise constructor."," *"," * _NOTE: The success and failure event names can be overridden by setting `Promise.SUCCESS` and `Promise.FAILURE` respectively._"," *"," * @param {Function} back a function that accepts `fn(err, ...){}` as signature"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `reject`: Emits when the promise is rejected (event name may be overridden)"," * @event `fulfill`: Emits when the promise is fulfilled (event name may be overridden)"," * @api public"," */","function Promise(back) {","/*"," * Module exports."," */","module.exports = Promise;","/*!"," * event names"," */","Promise.SUCCESS = 'fulfill';","/**"," * Adds `listener` to the `event`."," *"," * If `event` is either the success or failure event and the event has already been emitted, the`listener` is called immediately and passed the results of the original emitted event."," *"," * @param {String} event"," * @param {Function} callback"," * @return {MPromise} this"," * @api private"," */","Promise.prototype.on = function (event, callback) {","/**"," * Keeps track of emitted events to run them on `on`."," *"," * @api private"," */","Promise.prototype.safeEmit = function (event) {","  // ensures a promise can't be fulfill() or reject() more than once","  if (event == Promise.SUCCESS || event == Promise.FAILURE) {","/**"," * @api private"," */","Promise.prototype.hasRejectListeners = function () {","/**"," * Fulfills this promise with passed arguments."," *"," * If this promise has already been fulfilled or rejected, no action is taken."," *"," * @api public"," */","Promise.prototype.fulfill = function () {","/**"," * Rejects this promise with `reason`."," *"," * If this promise has already been fulfilled or rejected, no action is taken."," *"," * @api public"," * @param {Object|String} reason"," * @return {MPromise} this"," */","Promise.prototype.reject = function (reason) {","/**"," * Resolves this promise to a rejected state if `err` is passed or"," * fulfilled state if no `err` is passed."," *"," * @param {Error} [err] error or null"," * @param {Object} [val] value to fulfill the promise with"," * @api public"," */","Promise.prototype.resolve = function (err, val) {","/**"," * Adds a listener to the SUCCESS event."," *"," * @return {MPromise} this"," * @api public"," */","Promise.prototype.onFulfill = function (fn) {","/**"," * Adds a listener to the FAILURE event."," *"," * @return {MPromise} this"," * @api public"," */","Promise.prototype.onReject = function (fn) {","/**"," * Adds a single function as a listener to both SUCCESS and FAILURE."," *"," * It will be executed with traditional node.js argument position:"," * function (err, args...) {}"," *"," * Also marks the promise as `end`ed, since it's the common use-case, and yet has no"," * side effects unless `fn` is undefined or null."," *"," * @param {Function} fn"," * @return {MPromise} this"," */","Promise.prototype.onResolve = function (fn) {","/**"," * Creates a new promise and returns it. If `onFulfill` or"," * `onReject` are passed, they are added as SUCCESS/ERROR callbacks"," * to this promise after the next tick."," *"," * Conforms to [promises/A+](https://github.com/promises-aplus/promises-spec) specification. Read for more detail how to use this method."," *"," * ####Example:"," *"," *     var p = new Promise;"," *     p.then(function (arg) {"," *       return arg + 1;"," *     }).then(function (arg) {"," *       throw new Error(arg + ' is an error!');"," *     }).then(null, function (err) {"," *       assert.ok(err instanceof Error);"," *       assert.equal('2 is an error', err.message);"," *     });"," *     p.complete(1);"," *"," * @see promises-A+ https://github.com/promises-aplus/promises-spec"," * @param {Function} onFulfill"," * @param {Function} [onReject]"," * @return {MPromise} newPromise"," */","Promise.prototype.then = function (onFulfill, onReject) {","/**"," * Signifies that this promise was the last in a chain of `then()s`: if a handler passed to the call to `then` which produced this promise throws, the exception will go uncaught."," *"," * ####Example:"," *"," *     var p = new Promise;"," *     p.then(function(){ throw new Error('shucks') });"," *     setTimeout(function () {"," *       p.fulfill();"," *       // error was caught and swallowed by the promise returned from"," *       // p.then(). we either have to always register handlers on"," *       // the returned promises or we can do the following..."," *     }, 10);"," *"," *     // this time we use .end() which prevents catching thrown errors"," *     var p = new Promise;"," *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () {"," *       p.fulfill(); // throws \"shucks\""," *     }, 10);"," *"," * @api public"," * @param {Function} [onReject]"," * @return {MPromise} this"," */","Promise.prototype.end = Promise.prototype['catch'] = function (onReject) {","/**"," * A debug utility function that adds handlers to a promise that will log some output to the `console`"," *"," * ####Example:"," *"," *     var p = new Promise;"," *     p.then(function(){ throw new Error('shucks') });"," *     setTimeout(function () {"," *       p.fulfill();"," *       // error was caught and swallowed by the promise returned from"," *       // p.then(). we either have to always register handlers on"," *       // the returned promises or we can do the following..."," *     }, 10);"," *"," *     // this time we use .end() which prevents catching thrown errors"," *     var p = new Promise;"," *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () {"," *       p.fulfill(); // throws \"shucks\""," *     }, 10);"," *"," * @api public"," * @param {MPromise} p"," * @param {String} name"," * @return {MPromise} this"," */","Promise.trace = function (p, name) {","/* This is for the A+ tests, but it's very useful as well */","Promise.fulfilled = function fulfilled() { var p = new Promise; p.fulfill.apply(p, arguments); return p; };","/* End A+ tests adapter bit */",""],"Functions":["function toArray(arr, start, end) ","function strongUnshift(x, arrLike) "," * @param Function} back a function that accepts `fn(err, ...){}` as signature","function Promise(back) ","  if ('function' == typeof back) ","Promise.prototype.on = function (event, callback) ","Promise.prototype.safeEmit = function (event) ","Promise.prototype.hasRejectListeners = function () ","Promise.prototype.fulfill = function () ","Promise.prototype.reject = function (reason) ","Promise.prototype.resolve = function (err, val) ","Promise.prototype.onFulfill = function (fn) ","  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");","Promise.prototype.onReject = function (fn) ","  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");"," * Adds a single function as a listener to both SUCCESS and FAILURE."," * function (err, args...) }","Promise.prototype.onResolve = function (fn) ","  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");","  this.on(Promise.FAILURE, function (err)  fn.call(this, err); });","  this.on(Promise.SUCCESS, function ()  fn.apply(this, strongUnshift(null, arguments)); });"," *     p.then(function (arg) "," *     }).then(function (arg) "," *     }).then(null, function (err) ","Promise.prototype.then = function (onFulfill, onReject) ","  if ('function' == typeof onFulfill) ","  if ('function' == typeof onReject) ","function handler(promise, fn) ","  function newTickHandler() ","  function boundHandler() ","function resolve(promise, x) ","  function fulfillOnce() ","  function rejectOnce(reason) ","  if ('undefined' == type || null == x || !('object' == type || 'function' == type)) ","  if ('function' != typeof theThen) "," *     p.then(function() throw new Error('shucks') });"," *     setTimeout(function () "," *     var p2 = p.then(function() throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () ","Promise.prototype.end = Promise.prototype['catch'] = function (onReject) ","    onReject = function idRejector(e)  throw e; };"," * A debug utility function that adds handlers to a promise that will log some output to the `console`"," *     p.then(function() throw new Error('shucks') });"," *     setTimeout(function () "," *     var p2 = p.then(function() throw new Error('shucks') }).end(); // \u003c--"," *     setTimeout(function () ","Promise.trace = function (p, name) ","    function () ","    function () ","Promise.prototype.chain = function (p2) ","Promise.prototype.all = function (promiseOfArr) ","    function (promiseArr) ","      promiseArr.forEach(function (promise, index) ","          function (val) ","          function (err) ","Promise.hook = function (arr) ","  var signalP = function () ","  arr.forEach(function (hook) ","      function () ","Promise.fulfilled = function fulfilled()  var p = new Promise; p.fulfill.apply(p, arguments); return p; };","Promise.rejected = function rejected(reason)  return new Promise().reject(reason); };","Promise.deferred = function deferred() "],"Dependencies":["util","events"]},{"FileName":"node_modules\\mpromise\\test\\promise.domain.test.js","LineCount":29,"CharCount":616,"Comments":[],"Functions":["describe(\"domains\", function () ","  it(\"exceptions should not breakout of domain boundaries\", function (done) ","    d.on('error', function (err) ","    d.run(function () ","        function () }","        function ()  throw new Error('gaga'); }","    process.nextTick(function () "],"Dependencies":["../","domain","assert"]},{"FileName":"node_modules\\mpromise\\test\\promise.test.js","LineCount":555,"CharCount":12275,"Comments":["/*global describe,it */","/**"," * Module dependencies."," */","","var assert = require('assert');","/**"," * Test."," */","","describe('promise', function () {"],"Functions":["describe('promise', function () ","  it('events fire right after fulfill()', function (done) ","    promise.on('fulfill', function (a, b) ","    promise.on('fulfill', function (a, b) ","  it('events fire right after reject()', function (done) ","    promise.on('reject', function (err) ","    promise.on('reject', function (err) ","  describe('onResolve()', function () ","    it('from constructor works', function (done) ","      var promise = new MPromise(function (err) ","    it('after fulfill()', function (done) ","      promise.onResolve(function (err, data) ","      promise.onResolve(function (err) ","  describe('onFulfill shortcut', function () ","    it('works', function (done) ","      promise.onFulfill(function (woot) ","  describe('onReject shortcut', function () ","    it('works', function (done) ","      promise.onReject(function (err) ","  describe('return values', function () ","    it('on()', function (done) ","      assert.ok(promise.on('jump', function () }) instanceof MPromise);","    it('onFulfill()', function (done) ","      assert.ok(promise.onFulfill(function () }) instanceof MPromise);","    it('onReject()', function (done) ","      assert.ok(promise.onReject(function () }) instanceof MPromise);","    it('onResolve()', function (done) ","      assert.ok(promise.onResolve(function () }) instanceof MPromise);","  describe('casting errors', function () ","    describe('reject()', function () ","      it('does not cast arguments to Error', function (done) ","        var p = new MPromise(function (err) ","  describe('then', function () ","    describe('catching', function () ","      it('should not catch returned promise fulfillments', function (done) ","        p.then(function ()  throw errorSentinal = new Error(\"boo!\") });","      it('should not catch returned promise fulfillments even async', function (done) ","        p.then(function ()  throw errorSentinal = new Error(\"boo!\") });","        setTimeout(function () ","      it('can be disabled using .end()', function (done) ","        domain.once('error', function (err) ","        domain.run(function () ","          var p2 = p.then(function () ","        overTimeout = setTimeout(function ()  done(new Error('error was swallowed')); }, 10);","      it('can be disabled using .end() even when async', function (done) ","        domain.on('error', function (err) ","        domain.run(function () ","          var p2 = p.then(function () ","          setTimeout(function () p.fulfill();}, 10);","        overTimeout = setTimeout(function ()  done(new Error('error was swallowed')); }, 20);","      it('can be handled using .end() so no throwing', function (done) ","        domain.run(function () ","          var p2 = p.then(function () ","          p2.end(function (err) ","          setTimeout(function () p.fulfill();}, 10);","        overTimeout = setTimeout(function ()  done(new Error('error was swallowed')); }, 20);","    it('persistent', function (done) ","      function ensure(val) ","      function guard() ","    it('accepts multiple completion values', function (done) ","      p.then(function (a, b) ","  describe('fulfill values and splats', function () ","    it('should handle multiple values', function (done) ","      p.onFulfill(function (a, b, c) ","    it('should handle multiple values from a then', function (done) ","        function () ","            function () ","        function (a, b, c) ","    it('should work with `fulfilled` convenience method', function (done) ","      MPromise.fulfilled('a', 'b', 'c').then(function (a, b, c) ","  describe('end', function () ","    it(\"should return the promise\", function (done) ","    it(\"should throw for chain\", function (done) ","    it(\"should not throw for chain with reject handler\", function (done) ","      p.then().then().then().then().end(function () ","  describe('chain', function () ","    it('should propagate fulfillment', function (done) ","      p1.chain(new MPromise(function (err, doc) ","    it('should propagate rejection', function (done) ","      p1.chain(new MPromise(function (err) ","    it('should propagate resolution err', function (done) ","      p1.chain(new MPromise(function (err) ","    it('should propagate resolution val', function (done) ","      p1.chain(new MPromise(function (err, val) ","  describe(\"all\", function () ","    it(\"works\", function (done) ","      var p2 = p.all(function () ","          (function () ","          , (function () ","      p2.then(function () ","    it(\"handles rejects\", function (done) ","      var p2 = p.all(function () ","          (function () ","          , (function () ","      p2.onReject(function (err) ","  describe(\"deferred\", function () ","    it(\"works\", function (done) ","  describe(\"hook\", function () ","    it(\"works\", function (done) ","      var l1 = function (ser, par) ","      MPromise.hook([l1, l1, l1]).then(function () ","    it(\"works with async serial hooks\", function (done) ","      var l1 = function (ser, par) ","        setTimeout(function () ser();}, 200);","      MPromise.hook([l1, l1, l1]).then(function () ","    it(\"works with async parallel hooks\", function (done) ","      var l1 = function (ser, par) ","        setTimeout(function () par();}, 200);","      MPromise.hook([l1, l1, l1]).then(function () ","    it(\"catches errors in hook logic\", function (done) ","      var l1 = function (ser, par) ","      var l2 = function (ser, par) ","      MPromise.hook([l1, l2, l1]).end(function (err) "],"Dependencies":["assert","../","domain","domain","domain"]},{"FileName":"node_modules\\mpromise\\test\\promises.Aplus.js","LineCount":16,"CharCount":276,"Comments":["/**"," * Module dependencies."," */","var Promise = require('../lib/promise');","// tests","describe(\"run A+ suite\", function () {"],"Functions":["describe(\"run A+ suite\", function () "],"Dependencies":["../lib/promise","promises-aplus-tests"]},{"FileName":"node_modules\\mquery\\lib\\collection\\collection.js","LineCount":43,"CharCount":678,"Comments":["/**"," * methods a collection must implement"," */","","var methods = [","/**"," * Collection base class from which implementations inherit"," */","","function Collection () {}","/**"," * creates a function which throws an implementation error"," */","","function notImplemented (method) {"],"Functions":["function Collection () }"," * creates a function which throws an implementation error","function notImplemented (method) ","  return function () "],"Dependencies":null},{"FileName":"node_modules\\mquery\\lib\\collection\\index.js","LineCount":14,"CharCount":226,"Comments":[],"Functions":null,"Dependencies":["../env"]},{"FileName":"node_modules\\mquery\\lib\\collection\\node.js","LineCount":109,"CharCount":2190,"Comments":["/**"," * Module dependencies"," */","","var Collection = require('./collection');","/**"," * inherit from collection base class"," */","","utils.inherits(NodeCollection, Collection);","/**"," * find(match, options, function(err, docs))"," */","","NodeCollection.prototype.find = function (match, options, cb) {","/**"," * findOne(match, options, function(err, doc))"," */","","NodeCollection.prototype.findOne = function (match, options, cb) {","/**"," * count(match, options, function(err, count))"," */","","NodeCollection.prototype.count = function (match, options, cb) {","/**"," * distinct(prop, match, options, function(err, count))"," */","","NodeCollection.prototype.distinct  = function (prop, match, options, cb) {","/**"," * update(match, update, options, function(err[, result]))"," */","","NodeCollection.prototype.update = function (match, update, options, cb) {","/**"," * remove(match, options, function(err[, result])"," */","","NodeCollection.prototype.remove = function (match, options, cb) {","/**"," * findAndModify(match, update, options, function(err, doc))"," */","","NodeCollection.prototype.findAndModify = function (match, update, options, cb) {","/**"," * var stream = findStream(match, findOptions, streamOptions)"," */","","NodeCollection.prototype.findStream = function(match, findOptions, streamOptions) {","/**"," * var cursor = findCursor(match, findOptions)"," */","","NodeCollection.prototype.findCursor = function(match, findOptions) {","/**"," * aggregation(operators..., function(err, doc))"," * TODO"," */","","/**"," * Expose"," */","","module.exports = exports = NodeCollection;"],"Functions":["function NodeCollection (col) "," * find(match, options, function(err, docs))","NodeCollection.prototype.find = function (match, options, cb) ","  this.collection.find(match, options, function (err, cursor) "," * findOne(match, options, function(err, doc))","NodeCollection.prototype.findOne = function (match, options, cb) "," * count(match, options, function(err, count))","NodeCollection.prototype.count = function (match, options, cb) "," * distinct(prop, match, options, function(err, count))","NodeCollection.prototype.distinct  = function (prop, match, options, cb) "," * update(match, update, options, function(err[, result]))","NodeCollection.prototype.update = function (match, update, options, cb) "," * remove(match, options, function(err[, result])","NodeCollection.prototype.remove = function (match, options, cb) "," * findAndModify(match, update, options, function(err, doc))","NodeCollection.prototype.findAndModify = function (match, update, options, cb) ","NodeCollection.prototype.findStream = function(match, findOptions, streamOptions) ","NodeCollection.prototype.findCursor = function(match, findOptions) "," * aggregation(operators..., function(err, doc))"],"Dependencies":["./collection","../utils"]},{"FileName":"node_modules\\mquery\\lib\\env.js","LineCount":23,"CharCount":632,"Comments":[],"Functions":["           \u0026\u0026 'function' == typeof Buffer","           \u0026\u0026 'function' == typeof printjson","           \u0026\u0026 'function' == typeof ObjectId","           \u0026\u0026 'function' == typeof rs","           \u0026\u0026 'function' == typeof sh;"],"Dependencies":null},{"FileName":"node_modules\\mquery\\lib\\mquery.js","LineCount":2729,"CharCount":64615,"Comments":["/**"," * Dependencies"," */","","var slice = require('sliced')","/**"," * Query constructor used for building queries."," *"," * ####Example:"," *"," *     var query = new Query({ name: 'mquery' });"," *     query.setOptions({ collection: moduleCollection })"," *     query.where('age').gte(21).exec(callback);"," *"," * @param {Object} [criteria]"," * @param {Object} [options]"," * @api public"," */","","function Query (criteria, options) {","      // quack quack!","      this.collection(criteria);","/**"," * This is a parameter that the user can set which determines if mquery"," * uses $within or $geoWithin for queries. It defaults to true which"," * means $geoWithin will be used. If using MongoDB \u003c 2.4 you should"," * set this to false."," *"," * @api public"," * @property use$geoWithin"," */","","var $withinCmd = '$geoWithin';","        // mongodb \u003e= 2.4","        $withinCmd = '$geoWithin';","/**"," * Converts this query to a constructor function with all arguments and options retained."," *"," * ####Example"," *"," *     // Create a query that will read documents with a \"video\" category from"," *     // `aCollection` on the primary node in the replica-set unless it is down,"," *     // in which case we'll read from a secondary node."," *     var query = mquery({ category: 'video' })"," *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });"," *"," *     // create a constructor based off these settings"," *     var Video = query.toConstructor();"," *"," *     // Video is now a subclass of mquery() and works the same way but with the"," *     // default query parameters and options set."," *"," *     // run a query with the previous settings but filter for movies with names"," *     // that start with \"Life\"."," *     Video().where({ name: /^Life/ }).exec(cb);"," *"," * @return {Query} new Query"," * @api public"," */","","Query.prototype.toConstructor = function toConstructor () {","  // set inherited defaults","  var p = CustomQuery.prototype;","/**"," * Sets query options."," *"," * ####Options:"," *"," * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *"," * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *"," * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *"," * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *"," * - [maxScan](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan) *"," * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *"," * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *"," * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *"," * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *"," * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *"," * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *"," * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)"," * - collection the collection to query against"," *"," * _* denotes a query helper method is also available_"," *"," * @param {Object} options"," * @api public"," */","","Query.prototype.setOptions = function (options) {","  // set arbitrary options","  var methods = utils.keys(options)","    // use methods if exist (safer option manipulation)","    if ('function' == typeof this[method]) {","/**"," * Sets this Querys collection."," *"," * @param {Collection} coll"," * @return {Query} this"," */","","Query.prototype.collection = function collection (coll) {","/**"," * Specifies a `$where` condition"," *"," * Use `$where` when you need to select documents using a JavaScript expression."," *"," * ####Example"," *"," *     query.$where('this.comments.length \u003e 10 || this.name.length \u003e 5')"," *"," *     query.$where(function () {"," *       return this.comments.length \u003e 10 || this.name.length \u003e 5;"," *     })"," *"," * @param {String|Function} js javascript string or function"," * @return {Query} this"," * @memberOf Query"," * @method $where"," * @api public"," */","","Query.prototype.$where = function (js) {","/**"," * Specifies a `path` for use with chaining."," *"," * ####Example"," *"," *     // instead of writing:"," *     User.find({age: {$gte: 21, $lte: 65}}, callback);"," *"," *     // we can instead write:"," *     User.where('age').gte(21).lte(65);"," *"," *     // passing query conditions is permitted"," *     User.find().where({ name: 'vonderful' })"," *"," *     // chaining"," *     User"," *     .where('age').gte(21).lte(65)"," *     .where('name', /^vonderful/i)"," *     .where('friends').slice(10)"," *     .exec(callback)"," *"," * @param {String} [path]"," * @param {Object} [val]"," * @return {Query} this"," * @api public"," */","","Query.prototype.where = function () {","/**"," * Specifies the complementary comparison value for paths specified with `where()`"," *"," * ####Example"," *"," *     User.where('age').equals(49);"," *"," *     // is the same as"," *"," *     User.where('age', 49);"," *"," * @param {Object} val"," * @return {Query} this"," * @api public"," */","","Query.prototype.equals = function equals (val) {","/**"," * Specifies the complementary comparison value for paths specified with `where()`"," * This is alias of `equals`"," *"," * ####Example"," *"," *     User.where('age').eq(49);"," *"," *     // is the same as"," *"," *     User.shere('age').equals(49);"," *"," *     // is the same as"," *"," *     User.where('age', 49);"," *"," * @param {Object} val"," * @return {Query} this"," * @api public"," */","","Query.prototype.eq = function eq (val) {","/**"," * Specifies arguments for an `$or` condition."," *"," * ####Example"," *"," *     query.or([{ color: 'red' }, { status: 'emergency' }])"," *"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","Query.prototype.or = function or (array) {","/**"," * Specifies arguments for a `$nor` condition."," *"," * ####Example"," *"," *     query.nor([{ color: 'green' }, { status: 'ok' }])"," *"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","Query.prototype.nor = function nor (array) {","/**"," * Specifies arguments for a `$and` condition."," *"," * ####Example"," *"," *     query.and([{ color: 'green' }, { status: 'ok' }])"," *"," * @see $and http://docs.mongodb.org/manual/reference/operator/and/"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","Query.prototype.and = function and (array) {","/**"," * Specifies a $gt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * ####Example"," *"," *     Thing.find().where('age').gt(21)"," *"," *     // or"," *     Thing.find().gt('age', 21)"," *"," * @method gt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $gte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method gte"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $lt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $lte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lte"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $ne query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method ne"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $in query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method in"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $nin query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method nin"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $all query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method all"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $size query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method size"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $regex query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method regex"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $maxDistance query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method maxDistance"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/*!"," * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance"," *"," *     Thing.where('type').nin(array)"," */","","'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function ($conditional) {","/**"," * Specifies a `$mod` condition"," *"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @api public"," */","","Query.prototype.mod = function () {","/**"," * Specifies an `$exists` condition"," *"," * ####Example"," *"," *     // { name: { $exists: true }}"," *     Thing.where('name').exists()"," *     Thing.where('name').exists(true)"," *     Thing.find().exists('name')"," *"," *     // { name: { $exists: false }}"," *     Thing.where('name').exists(false);"," *     Thing.find().exists('name', false);"," *"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @api public"," */","","Query.prototype.exists = function () {","/**"," * Specifies an `$elemMatch` condition"," *"," * ####Example"," *"," *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})"," *"," *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})"," *"," *     query.elemMatch('comment', function (elem) {"," *       elem.where('author').equals('autobot');"," *       elem.where('votes').gte(5);"," *     })"," *"," *     query.where('comment').elemMatch(function (elem) {"," *       elem.where({ author: 'autobot' });"," *       elem.where('votes').gte(5);"," *     })"," *"," * @param {String|Object|Function} path"," * @param {Object|Function} criteria"," * @return {Query} this"," * @api public"," */","","Query.prototype.elemMatch = function () {","// Spatial queries","","/**","/**"," * Sugar for geo-spatial queries."," *"," * ####Example"," *"," *     query.within().box()"," *     query.within().circle()"," *     query.within().geometry()"," *"," *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });"," *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });"," *     query.where('loc').within({ polygon: [[],[],[],[]] });"," *"," *     query.where('loc').within([], [], []) // polygon"," *     query.where('loc').within([], []) // box"," *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry"," *"," * ####NOTE:"," *"," * Must be used after `where()`."," *"," * @memberOf Query"," * @return {Query} this"," * @api public"," */","","Query.prototype.within = function within () {","  // opinionated, must be used after where","  this._ensurePath('within');","/**"," * Specifies a $box condition"," *"," * ####Example"," *"," *     var lowerLeft = [40.73083, -73.99756]"," *     var upperRight= [40.741404,  -73.988135]"," *"," *     query.where('loc').within().box(lowerLeft, upperRight)"," *     query.box('loc', lowerLeft, upperRight )"," *"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @see Query#within #query_Query-within"," * @param {String} path"," * @param {Object} val"," * @return {Query} this"," * @api public"," */","","Query.prototype.box = function () {","    // box('loc', [], [])","    path = arguments[0];","    // box([], [])","    this._ensurePath('box');","/**"," * Specifies a $polygon condition"," *"," * ####Example"," *"," *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])"," *     query.polygon('loc', [10,20], [13, 25], [7,15])"," *"," * @param {String|Array} [path]"," * @param {Array|Object} [val]"," * @return {Query} this"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","Query.prototype.polygon = function () {","    // polygon('loc', [],[],[])","    path = arguments[0];","    // polygon([],[],[])","    this._ensurePath('polygon');","/**"," * Specifies a $center or $centerSphere condition."," *"," * ####Example"," *"," *     var area = { center: [50, 50], radius: 10, unique: true }"," *     query.where('loc').within().circle(area)"," *     query.center('loc', area);"," *"," *     // for spherical calculations"," *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }"," *     query.where('loc').within().circle(area)"," *     query.center('loc', area);"," *"," * @param {String} [path]"," * @param {Object} area"," * @return {Query} this"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","Query.prototype.circle = function () {","/**"," * Specifies a `$near` or `$nearSphere` condition"," *"," * These operators return documents sorted by distance."," *"," * ####Example"," *"," *     query.where('loc').near({ center: [10, 10] });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });"," *     query.near('loc', { center: [10, 10], maxDistance: 5 });"," *     query.near({ center: { type: 'Point', coordinates: [..] }})"," *     query.near().geometry({ type: 'Point', coordinates: [..] })"," *"," * @param {String} [path]"," * @param {Object} val"," * @return {Query} this"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","Query.prototype.near = function near () {","  // center could be a GeoJSON object or an Array","  if (Array.isArray(val.center)) {","    // GeoJSON?","    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {","    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere","    if ('maxDistance' in val) {","/**"," * Declares an intersects query for `geometry()`."," *"," * ####Example"," *"," *     query.where('path').intersects().geometry({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," *     query.where('path').intersects({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," * @param {Object} [arg]"," * @return {Query} this"," * @api public"," */","","Query.prototype.intersects = function intersects () {","  // opinionated, must be used after where","  this._ensurePath('intersects');","/**"," * Specifies a `$geometry` condition"," *"," * ####Example"," *"," *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]"," *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })"," *"," *     // or"," *     var polyB = [[ 0, 0 ], [ 1, 1 ]]"," *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })"," *"," *     // or"," *     var polyC = [ 0, 0 ]"," *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })"," *"," *     // or"," *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })"," *"," * ####NOTE:"," *"," * `geometry()` **must** come after either `intersects()` or `within()`."," *"," * The `object` argument must contain `type` and `coordinates` properties."," * - type {String}"," * - coordinates {Array}"," *"," * The most recent path passed to `where()` is used."," *"," * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples."," * @return {Query} this"," * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @api public"," */","","Query.prototype.geometry = function geometry () {","// end spatial","","/**","/**"," * Specifies which document fields to include or exclude"," *"," * ####String syntax"," *"," * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included."," *"," * ####Example"," *"," *     // include a and b, exclude c"," *     query.select('a b -c');"," *"," *     // or you may use object notation, useful when"," *     // you have keys already prefixed with a \"-\""," *     query.select({a: 1, b: 1, c: 0});"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Object|String} arg"," * @return {Query} this"," * @see SchemaType"," * @api public"," */","","Query.prototype.select = function select () {","/**"," * Specifies a $slice condition for a `path`"," *"," * ####Example"," *"," *     query.slice('comments', 5)"," *     query.slice('comments', -5)"," *     query.slice('comments', [10, 5])"," *     query.where('comments').slice(5)"," *     query.where('comments').slice([-10, 5])"," *"," * @param {String} [path]"," * @param {Number} val number/range of elements to slice"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements"," * @api public"," */","","Query.prototype.slice = function () {","/**"," * Sets the sort order"," *"," * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1."," *"," * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending."," *"," * ####Example"," *"," *     // these are equivalent"," *     query.sort({ field: 'asc', test: -1 });"," *     query.sort('field -test');"," *     query.sort([['field', 1], ['test', -1]]);"," *"," * ####Note"," *"," *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver \u003e= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15)."," *  - Cannot be used with `distinct()`"," *"," * @param {Object|String|Array} arg"," * @return {Query} this"," * @api public"," */","","Query.prototype.sort = function (arg) {","  // .sort([['field', 1], ['test', -1]])","  if (Array.isArray(arg)) {","  // .sort('field -test')","  if (1 === arguments.length \u0026\u0026 'string' == type) {","  // .sort({ field: 1, test: -1 })","  if (utils.isObject(arg)) {","/*!"," * @ignore"," */","","function push (opts, field, value) {","  // store `sort` in a sane format","  var s = opts.sort || (opts.sort = {});","/**"," * Specifies the limit option."," *"," * ####Example"," *"," *     query.limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method limit"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D"," * @api public"," */","/**"," * Specifies the skip option."," *"," * ####Example"," *"," *     query.skip(100).limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method skip"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D"," * @api public"," */","/**"," * Specifies the maxScan option."," *"," * ####Example"," *"," *     query.maxScan(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method maxScan"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan"," * @api public"," */","/**"," * Specifies the batchSize option."," *"," * ####Example"," *"," *     query.batchSize(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method batchSize"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D"," * @api public"," */","/**"," * Specifies the `comment` option."," *"," * ####Example"," *"," *     query.comment('login query')"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method comment"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment"," * @api public"," */","","/*!"," * limit, skip, maxScan, batchSize, comment"," *"," * Sets these associated options."," *"," *     query.comment('feed query');"," */","",";['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) {","/**"," * Specifies the maxTimeMS option."," *"," * ####Example"," *"," *     query.maxTime(100)"," *"," * @method maxTime"," * @memberOf Query"," * @param {Number} val"," * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS"," * @api public"," */","","Query.prototype.maxTime = function (v) {","/**"," * Specifies this query as a `snapshot` query."," *"," * ####Example"," *"," *     mquery().snapshot() // true"," *     mquery().snapshot(true)"," *     mquery().snapshot(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D"," * @return {Query} this"," * @api public"," */","","Query.prototype.snapshot = function () {","/**"," * Sets query hints."," *"," * ####Example"," *"," *     query.hint({ indexA: 1, indexB: -1})"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Object} val a hint object"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint"," * @api public"," */","","Query.prototype.hint = function () {","    // must keep object keys in order so don't use Object.keys()","    for (var k in arg) {","/**"," * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences."," *"," * ####Example:"," *"," *     query.slaveOk() // true"," *     query.slaveOk(true)"," *     query.slaveOk(false)"," *"," * @deprecated use read() preferences instead if on mongodb \u003e= 2.2"," * @param {Boolean} v defaults to true"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see read()"," * @return {Query} this"," * @api public"," */","","Query.prototype.slaveOk = function (v) {","/**"," * Sets the readPreference option for the query."," *"," * ####Example:"," *"," *     new Query().read('primary')"," *     new Query().read('p')  // same as primary"," *"," *     new Query().read('primaryPreferred')"," *     new Query().read('pp') // same as primaryPreferred"," *"," *     new Query().read('secondary')"," *     new Query().read('s')  // same as secondary"," *"," *     new Query().read('secondaryPreferred')"," *     new Query().read('sp') // same as secondaryPreferred"," *"," *     new Query().read('nearest')"," *     new Query().read('n')  // same as nearest"," *"," *     // you can also use mongodb.ReadPreference class to also specify tags"," *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))"," *"," * ####Preferences:"," *"," *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags."," *     secondary            Read from secondary if available, otherwise error."," *     primaryPreferred     Read from primary if available, otherwise a secondary."," *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary."," *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection."," *"," * Aliases"," *"," *     p   primary"," *     pp  primaryPreferred"," *     s   secondary"," *     sp  secondaryPreferred"," *     n   nearest"," *"," * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences)."," *"," * @param {String|ReadPreference} pref one of the listed preference options or their aliases"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences"," * @return {Query} this"," * @api public"," */","","Query.prototype.read = function (pref) {","/**"," * Sets tailable option."," *"," * ####Example"," *"," *     query.tailable() \u003c== true"," *     query.tailable(true)"," *     query.tailable(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Boolean} v defaults to true"," * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors"," * @api public"," */","","Query.prototype.tailable = function () {","/**"," * Merges another Query or conditions object into this one."," *"," * When a Query is passed, conditions, field selection and options are merged."," *"," * @param {Query|Object} source"," * @return {Query} this"," */","","Query.prototype.merge = function (source) {","    // if source has a feature, apply it to ourselves","","    if (source._conditions) {","  // plain object","  utils.merge(this._conditions, source);","/**"," * Finds documents."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     query.find()"," *     query.find(callback)"," *     query.find({ name: 'Burning Lights' }, callback)"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.find = function (criteria, callback) {","/**"," * Returns the query cursor"," *"," * ####Examples"," *"," *     query.find().cursor();"," *     query.cursor({ name: 'Burning Lights' });"," *"," * @param {Object} [criteria] mongodb selector"," * @return {Object} cursor"," * @api public"," */","","Query.prototype.cursor = function cursor (criteria) {","/**"," * Executes the query as a findOne() operation."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     query.findOne().where('name', /^Burning/);"," *"," *     query.findOne({ name: /^Burning/ })"," *"," *     query.findOne({ name: /^Burning/ }, callback); // executes"," *"," *     query.findOne(function (err, doc) {"," *       if (err) return handleError(err);"," *       if (doc) {"," *         // doc may be null if no document matched"," *"," *       }"," *     });"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.findOne = function (criteria, callback) {","/**"," * Exectues the query as a count() operation."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     query.count().where('color', 'black').exec(callback);"," *"," *     query.count({ color: 'black' }).count(callback)"," *"," *     query.count({ color: 'black' }, callback)"," *"," *     query.where('color', 'black').count(function (err, count) {"," *       if (err) return handleError(err);"," *       console.log('there are %d kittens', count);"," *     })"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count"," * @api public"," */","","Query.prototype.count = function (criteria, callback) {","/**"," * Declares or executes a distinct() operation."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     distinct(criteria, field, fn)"," *     distinct(criteria, field)"," *     distinct(field, fn)"," *     distinct(field)"," *     distinct(fn)"," *     distinct()"," *"," * @param {Object|Query} [criteria]"," * @param {String} [field]"," * @param {Function} [callback]"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct"," * @api public"," */","","Query.prototype.distinct = function (criteria, field, callback) {","/**"," * Declare and/or execute this query as an update() operation."," *"," * _All paths passed that are not $atomic operations will become $set ops._"," *"," * ####Example"," *"," *     mquery({ _id: id }).update({ title: 'words' }, ...)"," *"," * becomes"," *"," *     collection.update({ _id: id }, { $set: { title: 'words' }}, ...)"," *"," * ####Note"," *"," * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection."," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call update() and then execute it by using the `exec()` method."," *"," *     var q = mquery(collection).where({ _id: id });"," *     q.update({ $set: { name: 'bob' }}).update(); // not executed"," *"," *     var q = mquery(collection).where({ _id: id });"," *     q.update({ $set: { name: 'bob' }}).exec(); // executed as unsafe"," *"," *     // keys that are not $atomic ops become $set."," *     // this executes the same command as the previous example."," *     q.update({ name: 'bob' }).where({ _id: id }).exec();"," *"," *     var q = mquery(collection).update(); // not executed"," *"," *     // overwriting with empty docs"," *     var q.where({ _id: id }).setOptions({ overwrite: true })"," *     q.update({ }, callback); // executes"," *"," *     // multi update with overwrite to empty doc"," *     var q = mquery(collection).where({ _id: id });"," *     q.setOptions({ multi: true, overwrite: true })"," *     q.update({ });"," *     q.update(callback); // executed"," *"," *     // multi updates"," *     mquery()"," *       .collection(coll)"," *       .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)"," *     // more multi updates"," *     mquery({ })"," *       .collection(coll)"," *       .setOptions({ multi: true })"," *       .update({ $set: { arr: [] }}, callback)"," *"," *     // single update by default"," *     mquery({ email: 'address@example.com' })"," *      .collection(coll)"," *      .update({ $inc: { counter: 1 }}, callback)"," *"," *     // summary"," *     update(criteria, doc, opts, cb) // executes"," *     update(criteria, doc, opts)"," *     update(criteria, doc, cb) // executes"," *     update(criteria, doc)"," *     update(doc, cb) // executes"," *     update(doc)"," *     update(cb) // executes"," *     update(true) // executes (unsafe write)"," *     update()"," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.update = function update (criteria, doc, options, callback) {","          // execution with no callback (unsafe write)","          force = criteria;","    // { overwrite: true }","    this.setOptions(options);","  // we are done if we don't have callback and they are","  // not forcing an unsafe write.","  if (!(force || callback))","/**"," * Declare and/or execute this query as a remove() operation."," *"," * ####Example"," *"," *     mquery(collection).remove({ artist: 'Anne Murray' }, callback)"," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call remove() and then execute it by using the `exec()` method."," *"," *     // not executed"," *     var query = mquery(collection).remove({ name: 'Anne Murray' })"," *"," *     // executed"," *     mquery(collection).remove({ name: 'Anne Murray' }, callback)"," *     mquery(collection).remove({ name: 'Anne Murray' }).remove(callback)"," *"," *     // executed without a callback (unsafe write)"," *     query.exec()"," *"," *     // summary"," *     query.remove(conds, fn); // executes"," *     query.remove(conds)"," *     query.remove(fn) // executes"," *     query.remove()"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.remove = function (criteria, callback) {","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command."," *"," * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `new`: bool - true to return the modified document rather than the original. defaults to true"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," *"," * ####Examples"," *"," *     query.findOneAndUpdate(conditions, update, options, callback) // executes"," *     query.findOneAndUpdate(conditions, update, options)  // returns Query"," *     query.findOneAndUpdate(conditions, update, callback) // executes"," *     query.findOneAndUpdate(conditions, update)           // returns Query"," *     query.findOneAndUpdate(update, callback)             // returns Query"," *     query.findOneAndUpdate(update)                       // returns Query"," *     query.findOneAndUpdate(callback)                     // executes"," *     query.findOneAndUpdate()                             // returns Query"," *"," * @param {Object|Query} [query]"," * @param {Object} [doc]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @return {Query} this"," * @api public"," */","","Query.prototype.findOneAndUpdate = function (criteria, doc, options, callback) {","  // apply doc","  if (doc) {","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," *"," * ####Examples"," *"," *     A.where().findOneAndRemove(conditions, options, callback) // executes"," *     A.where().findOneAndRemove(conditions, options)  // return Query"," *     A.where().findOneAndRemove(conditions, callback) // executes"," *     A.where().findOneAndRemove(conditions) // returns Query"," *     A.where().findOneAndRemove(callback)   // executes"," *     A.where().findOneAndRemove()           // returns Query"," *"," * @param {Object} [conditions]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Query.prototype.findOneAndRemove = function (conditions, options, callback) {","  // apply conditions","  if (Query.canMerge(conditions)) {","  // apply options","  options \u0026\u0026 this.setOptions(options);","/**"," * _findAndModify"," *"," * @param {String} type - either \"remove\" or \"update\""," * @param {Function} callback"," * @api private"," */","","Query.prototype._findAndModify = function (type, callback) {","        // still need to do the upsert to empty doc","        doc = { $set: {} };","/**"," * Wrap callback to add tracing"," *"," * @param {Function} callback"," * @param {Object} [queryInfo]"," * @api private"," */","Query.prototype._wrapCallback = function (method, callback, queryInfo) {","/**"," * Add trace function that gets called when the query is executed."," * The function will be called with (method, queryInfo, query) and"," * should return a callback function which will be called"," * with (err, result, millis) when the query is complete."," *"," * queryInfo is an object containing: {"," *   collectionName: \u003cname of the collection\u003e,"," *   conditions: \u003cquery criteria\u003e,"," *   options: \u003ccomment, fields, readPreference, etc\u003e,"," *   doc: [document to update, if applicable]"," * }"," *"," * NOTE: Does not trace stream queries."," *"," * @param {Function} traceFunction"," * @return {Query} this"," * @api public"," */","Query.prototype.setTraceFunction = function (traceFunction) {","/**"," * Executes the query"," *"," * ####Examples"," *"," *     query.exec();"," *     query.exec(callback);"," *     query.exec('update');"," *     query.exec('find', callback);"," *"," * @param {String|Function} [operation]"," * @param {Function} [callback]"," * @api public"," */","","Query.prototype.exec = function exec (op, callback) {","/**"," * Returns a thunk which when called runs this.exec()"," *"," * The thunk receives a callback function which will be"," * passed to `this.exec()`"," *"," * @return {Function}"," * @api public"," */","","Query.prototype.thunk = function() {","/**"," * Executes the query returning a `Promise` which will be"," * resolved with either the doc(s) or rejected with the error."," *"," * @param {Function} [resolve]"," * @param {Function} [reject]"," * @return {Promise}"," * @api public"," */","","Query.prototype.then = function(resolve, reject) {","/**"," * Returns a stream for the given find query."," *"," * @throws Error if operation is not a find"," * @returns {Stream} Node 0.8 style"," */","","Query.prototype.stream = function(streamOptions) {","/**"," * Determines if field selection has been made."," *"," * @return {Boolean}"," * @api public"," */","","Query.prototype.selected = function selected () {","/**"," * Determines if inclusive field selection has been made."," *"," *     query.selectedInclusively() // false"," *     query.select('name')"," *     query.selectedInclusively() // true"," *     query.selectedExlusively() // false"," *"," * @returns {Boolean}"," */","","Query.prototype.selectedInclusively = function selectedInclusively () {","/**"," * Determines if exclusive field selection has been made."," *"," *     query.selectedExlusively() // false"," *     query.select('-name')"," *     query.selectedExlusively() // true"," *     query.selectedInclusively() // false"," *"," * @returns {Boolean}"," */","","Query.prototype.selectedExclusively = function selectedExclusively () {","/**"," * Merges `doc` with the current update object."," *"," * @param {Object} doc"," */","","Query.prototype._mergeUpdate = function (doc) {","/**"," * Returns default options."," *"," * @return {Object}"," * @api private"," */","","Query.prototype._optionsForExec = function () {","/**"," * Returns fields selection for this query."," *"," * @return {Object}"," * @api private"," */","","Query.prototype._fieldsForExec = function () {","/**"," * Return an update document with corrected $set operations."," *"," * @api private"," */","","Query.prototype._updateForExec = function () {","      // fix up $set sugar","      if (!ret.$set) {","/**"," * Make sure _path is set."," *"," * @parmam {String} method"," */","","Query.prototype._ensurePath = function (method) {","/*!"," * Permissions"," */","","Query.permissions = require('./permissions');","/**"," * Determines if `conds` can be merged using `mquery().merge()`"," *"," * @param {Object} conds"," * @return {Boolean}"," */","","Query.canMerge = function (conds) {","/**"," * Set a trace function that will get called whenever a"," * query is executed."," *"," * See `setTraceFunction()` for details."," *"," * @param {Object} conds"," * @return {Boolean}"," */","Query.setGlobalTraceFunction = function (traceFunction) {","/*!"," * Exports."," */","","Query.utils = utils;","// TODO","// test utils",""],"Functions":["function Query (criteria, options) ","    get: function ( )  return $withinCmd == '$geoWithin' }","  , set: function (v) "," * Converts this query to a constructor function with all arguments and options retained.","Query.prototype.toConstructor = function toConstructor () ","  function CustomQuery (criteria, options) ","Query.prototype.setOptions = function (options) ","    if ('function' == typeof this[method]) ","Query.prototype.collection = function collection (coll) "," *     query.$where(function () "," * @param String|Function} js javascript string or function","Query.prototype.$where = function (js) ","Query.prototype.where = function () ","Query.prototype.equals = function equals (val) ","Query.prototype.eq = function eq (val) ","Query.prototype.or = function or (array) ","Query.prototype.nor = function nor (array) ","Query.prototype.and = function and (array) ","'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function ($conditional) ","  Query.prototype[$conditional] = function () ","Query.prototype.mod = function () ","Query.prototype.exists = function () "," *     query.elemMatch('comment', function (elem) "," *     query.where('comment').elemMatch(function (elem) ","Query.prototype.elemMatch = function () ","  if ('function' === typeof arguments[0]) ","  } else if ('function' === typeof arguments[1]) ","Query.prototype.within = function within () ","Query.prototype.box = function () ","Query.prototype.polygon = function () ","Query.prototype.circle = function () ","Query.prototype.near = function near () ","Query.prototype.intersects = function intersects () ","Query.prototype.geometry = function geometry () ","Query.prototype.select = function select () ","Query.prototype.slice = function () ","Query.prototype.sort = function (arg) ","function push (opts, field, value) ","function _pushArr (opts, field, value) ",";['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) ","  Query.prototype[method] = function (v) ","Query.prototype.maxTime = function (v) ","Query.prototype.snapshot = function () ","Query.prototype.hint = function () ","Query.prototype.slaveOk = function (v) ","Query.prototype.read = function (pref) ","Query.prototype.tailable = function () ","Query.prototype.merge = function (source) ","Query.prototype.find = function (criteria, callback) ","  if ('function' === typeof criteria) ","Query.prototype.cursor = function cursor (criteria) "," *     query.findOne(function (err, doc) ","Query.prototype.findOne = function (criteria, callback) ","  if ('function' === typeof criteria) "," *     query.where('color', 'black').count(function (err, count) ","Query.prototype.count = function (criteria, callback) ","  if ('function' === typeof criteria) ","Query.prototype.distinct = function (criteria, field, callback) ","      case 'function':","        throw new TypeError('Invalid `field` argument. Must be string or function')","      case 'function':","Query.prototype.update = function update (criteria, doc, options, callback) ","      if ('function' == typeof options) ","      if ('function' == typeof doc) ","        case 'function':","Query.prototype.remove = function (criteria, callback) ","  if ('function' === typeof criteria) ","Query.prototype.findOneAndUpdate = function (criteria, doc, options, callback) ","      if ('function' == typeof options) ","      if ('function' == typeof doc) ","      if ('function' == typeof criteria) ","Query.prototype.findOneAndRemove = function (conditions, options, callback) ","  if ('function' == typeof options) ","  } else if ('function' == typeof conditions) ","Query.prototype._findAndModify = function (type, callback) ","  assert.equal('function', typeof callback);","Query.prototype._wrapCallback = function (method, callback, queryInfo) ","    return function wrapperCallback (err, result) "," * Add trace function that gets called when the query is executed."," * The function will be called with (method, queryInfo, query) and"," * should return a callback function which will be called","Query.prototype.setTraceFunction = function (traceFunction) ","Query.prototype.exec = function exec (op, callback) ","    case 'function':","  if ('function' == typeof callback) ","    return new Query.Promise(function(success, error) ","      self[self.op](function(err, val) "," * The thunk receives a callback function which will be","Query.prototype.thunk = function() ","  return function(cb) ","Query.prototype.then = function(resolve, reject) ","  var promise = new Query.Promise(function(success, error) ","    self.exec(function(err, val) ","Query.prototype.stream = function(streamOptions) ","Query.prototype.selected = function selected () ","Query.prototype.selectedInclusively = function selectedInclusively () ","Query.prototype.selectedExclusively = function selectedExclusively () ","Query.prototype._mergeUpdate = function (doc) ","Query.prototype._optionsForExec = function () ","Query.prototype._fieldsForExec = function () ","Query.prototype._updateForExec = function () ","Query.prototype._ensurePath = function (method) ","Query._isPermitted = function (a, b) ","Query.prototype._validate = function (action) ","    if ('function' != typeof validator) return true;","Query.canMerge = function (conds) "," * Set a trace function that will get called whenever a","Query.setGlobalTraceFunction = function (traceFunction) "],"Dependencies":["sliced","assert","util","./utils","debug\")(\"mquery","./permissions","./env","./collection","./collection/collection","bluebird"]},{"FileName":"node_modules\\mquery\\lib\\permissions.js","LineCount":89,"CharCount":1661,"Comments":["// aggregation integration","","","denied.findOneAndUpdate ="],"Functions":["denied.distinct = function (self) ","  keys.every(function (option) ","denied.findOneAndRemove = function (self) ","  keys.every(function (option) ","denied.count = function (self) ","  keys.every(function (option) "],"Dependencies":null},{"FileName":"node_modules\\mquery\\lib\\utils.js","LineCount":343,"CharCount":7011,"Comments":["/*!"," * Module dependencies."," */","","var RegExpClone = require('regexp-clone')","/**"," * Clones objects"," *"," * @param {Object} obj the object to clone"," * @param {Object} options"," * @return {Object} the cloned object"," * @api private"," */","","var clone = exports.clone = function clone (obj, options) {","/*!"," * ignore"," */","","var cloneObject = exports.cloneObject = function cloneObject (obj, options) {","    // faster","","    keys = Object.keys(obj);","/**"," * process.nextTick helper."," *"," * Wraps the given `callback` in a try/catch. If an error is"," * caught it will be thrown on nextTick."," *"," * node-mongodb-native had a habit of state corruption when"," * an error was immediately thrown from within a collection"," * method (find, update, etc) callback."," *"," * @param {Function} [callback]"," * @api private"," */","","var tick = exports.tick = function tick (callback) {","    // callbacks should always be fired on the next","    // turn of the event loop. A side benefit is","    // errors thrown from executing the callback","    // will not cause drivers state to be corrupted","    // which has historically been a problem.","    var args = arguments;","/**"," * Merges `from` into `to` without overwriting existing properties."," *"," * @param {Object} to"," * @param {Object} from"," * @api private"," */","","var merge = exports.merge = function merge (to, from) {","/**"," * Same as merge but clones the assigned values."," *"," * @param {Object} to"," * @param {Object} from"," * @api private"," */","","var mergeClone = exports.mergeClone = function mergeClone (to, from) {","      // make sure to retain key order here because of a bug handling the $each","      // operator in mongodb 2.4.4","      to[key] = clone(from[key], { retainKeyOrder : 1});","        // make sure to retain key order here because of a bug handling the","        // $each operator in mongodb 2.4.4","        to[key] = clone(from[key], { retainKeyOrder : 1});","/**"," * Read pref helper (mongo 2.2 drivers support this)"," *"," * Allows using aliases instead of full preference names:"," *"," *     p   primary"," *     pp  primaryPreferred"," *     s   secondary"," *     sp  secondaryPreferred"," *     n   nearest"," *"," * @param {String} pref"," */","","exports.readPref = function readPref (pref) {","/**"," * Object.prototype.toString.call helper"," */","","var _toString = Object.prototype.toString;","/**"," * Determines if `arg` is an object."," *"," * @param {Object|Array|String|Function|RegExp|any} arg"," * @return {Boolean}"," */","","var isObject = exports.isObject = function (arg) {","/**"," * Determines if `arg` is an array."," *"," * @param {Object}"," * @return {Boolean}"," * @see nodejs utils"," */","","var isArray = exports.isArray = function (arg) {","/**"," * Object.keys helper"," */","","exports.keys = Object.keys || function (obj) {","/**"," * Basic Object.create polyfill."," * Only one argument is supported."," *"," * Based on https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/create"," */","","exports.create = 'function' == typeof Object.create","/**"," * inheritance"," */","","exports.inherits = function (ctor, superCtor) {","/**"," * nextTick helper"," * compat with node 0.10 which behaves differently than previous versions"," */","","var soon = exports.soon = 'function' == typeof setImmediate","/**"," * Clones the contents of a buffer."," *"," * @param {Buffer} buff"," * @return {Buffer}"," */","","exports.cloneBuffer = function (buff) {","/**"," * Check if this object is an arguments object"," *"," * @param {Any} v"," * @return {Boolean}"," */","","exports.isArgumentsObject = function(v) {"],"Functions":["var clone = exports.clone = function clone (obj, options) ","      return 'function' == typeof obj.clone","      return 'function' == typeof obj.clone","      return 'function' == typeof obj.clone","var cloneObject = exports.cloneObject = function cloneObject (obj, options) ","var cloneArray = exports.cloneArray = function cloneArray (arr, options) ","var tick = exports.tick = function tick (callback) ","  if ('function' !== typeof callback) return;","  return function () ","    soon(function()","var merge = exports.merge = function merge (to, from) ","var mergeClone = exports.mergeClone = function mergeClone (to, from) ","exports.readPref = function readPref (pref) ","var toString = exports.toString = function (arg) ","var isObject = exports.isObject = function (arg) ","var isArray = exports.isArray = function (arg) ","exports.keys = Object.keys || function (obj) ","exports.create = 'function' == typeof Object.create","function create (proto) ","  function F () }","exports.inherits = function (ctor, superCtor) ","var soon = exports.soon = 'function' == typeof setImmediate","exports.cloneBuffer = function (buff) ","exports.isArgumentsObject = function(v) "],"Dependencies":["regexp-clone"]},{"FileName":"node_modules\\mquery\\node_modules\\sliced\\bench.js","LineCount":96,"CharCount":3068,"Comments":["/**"," * Output:"," *"," * Array.prototype.slice.call x 1,289,592 ops/sec ±2.88% (87 runs sampled)"," * [].slice.call x 1,345,451 ops/sec ±1.68% (97 runs sampled)"," * cached slice.call x 10,719,886 ops/sec ±1.04% (99 runs sampled)"," * sliced x 15,809,545 ops/sec ±1.46% (93 runs sampled)"," * fastest is sliced"," *"," */",""],"Functions":["s.add('Array.prototype.slice.call', function () ","}).add('[].slice.call', function () ","}).add('cached slice.call', function () ","}).add('sliced', function () ","}).on('cycle', function (evt) ","}).on('complete', function () ","s.add('Array.prototype.slice.call(arguments, 1)', function () ","}).add('[].slice.call(arguments, 1)', function () ","}).add('cached slice.call(arguments, 1)', function () ","}).add('sliced(arguments, 1)', function () ","}).on('cycle', function (evt) ","}).on('complete', function () ","s.add('Array.prototype.slice.call(arguments, -1)', function () ","}).add('[].slice.call(arguments, -1)', function () ","}).add('cached slice.call(arguments, -1)', function () ","}).add('sliced(arguments, -1)', function () ","}).on('cycle', function (evt) ","}).on('complete', function () ","s.add('Array.prototype.slice.call(arguments, -2, -10)', function () ","}).add('[].slice.call(arguments, -2, -10)', function () ","}).add('cached slice.call(arguments, -2, -10)', function () ","}).add('sliced(arguments, -2, -10)', function () ","}).on('cycle', function (evt) ","}).on('complete', function () ","s.add('Array.prototype.slice.call(arguments, -2, -1)', function () ","}).add('[].slice.call(arguments, -2, -1)', function () ","}).add('cached slice.call(arguments, -2, -1)', function () ","}).add('sliced(arguments, -2, -1)', function () ","}).on('cycle', function (evt) ","}).on('complete', function () "],"Dependencies":["./","benchmark"]},{"FileName":"node_modules\\mquery\\node_modules\\sliced\\index.js","LineCount":2,"CharCount":51,"Comments":[],"Functions":null,"Dependencies":["./lib/sliced"]},{"FileName":"node_modules\\mquery\\node_modules\\sliced\\lib\\sliced.js","LineCount":34,"CharCount":532,"Comments":["/**"," * An Array.prototype.slice.call(arguments) alternative"," *"," * @param {Object} args something with a length"," * @param {Number} slice"," * @param {Number} sliceEnd"," * @api public"," */","","module.exports = function (args, slice, sliceEnd) {"],"Functions":["module.exports = function (args, slice, sliceEnd) "],"Dependencies":null},{"FileName":"node_modules\\mquery\\node_modules\\sliced\\test\\index.js","LineCount":81,"CharCount":2290,"Comments":[],"Functions":["describe('sliced', function()","  it('exports a function', function()","    assert.equal('function', typeof sliced);","  describe('with 1 arg', function()","    it('returns an array of the arg', function()","  describe('with 2 args', function()","    it('returns an array of the arg starting at the 2nd arg', function()","  describe('with 3 args', function()","    it('returns an array of the arg from the 2nd to the 3rd arg', function()","  describe('with negative start and no end', function()","    it('begins at an offset from the end and includes all following elements', function()","  describe('with negative start and positive end', function()","    it('begins at an offset from the end and includes `end` elements', function()","  describe('with negative start and negative end', function()","    it('begins at `start` offset from the end and includes all elements up to `end` offset from the end', function()"],"Dependencies":["../","assert"]},{"FileName":"node_modules\\mquery\\test\\collection\\browser.js","LineCount":1,"CharCount":0,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\mquery\\test\\collection\\mongo.js","LineCount":1,"CharCount":0,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\mquery\\test\\collection\\node.js","LineCount":30,"CharCount":595,"Comments":["var uri = process.env.MQUERY_URI || 'mongodb://localhost/mquery';","var db;","    // clean test db before starting","    db.dropDatabase(function () {"],"Functions":["exports.getCollection = function (cb) ","  mongo.Db.connect(uri, function (err, db_) ","    db.dropDatabase(function () ","exports.dropCollection = function (cb) ","  db.dropDatabase(function () "],"Dependencies":["assert","sliced","mongodb","../../"]},{"FileName":"node_modules\\mquery\\test\\env.js","LineCount":21,"CharCount":432,"Comments":[],"Functions":null,"Dependencies":["assert","../","./collection/node","./collection/mongo","./collection/browser"]},{"FileName":"node_modules\\mquery\\test\\index.js","LineCount":2892,"CharCount":85880,"Comments":["    // get the env specific collection interface","    require('./env').getCollection(function (err, collection) {","    // within + intersects","    var point = { type: 'Point', coordinates: [[0,0],[1,1]] };","    // near nearSphere","    describe('with 0 args', function(){","  // fields","","  describe('select', function(){","  // options","","  describe('sort', function(){","          // ignore","        }","  // query utilities","","  describe('merge', function(){","  // queries","","  describe('find', function(){","        // unsafe write","        m.exec();","      // hack for testing","      mquery.Promise = function P() {","  // query internal","","  describe('_updateForExec', function(){","      // capture original key order","      var order = [];","      // compare output","      var doc = q._updateForExec();"],"Functions":["describe('mquery', function()","  before(function(done)","    require('./env').getCollection(function (err, collection) ","  after(function(done)","  describe('mquery', function()","    it('is a function', function()","      assert.equal('function', typeof mquery);","    it('creates instances with the `new` keyword', function()","    describe('defaults', function()","      it('are set', function()","    describe('criteria', function()","      it('if collection-like is used as collection', function()","      it('non-collection-like is used as criteria', function()","    describe('options', function()","      it('are merged when passed', function()","  describe('toConstructor', function()","    it('creates subclasses of mquery', function()","  describe('setOptions', function()","    it('calls associated methods', function()","    it('directly sets option when no method exists', function()","    it('is chainable', function()","  describe('collection', function()","    it('sets the _collection', function()","    it('is chainable', function()","  describe('$where', function()","    it('sets the $where condition', function()","      function go () }","    it('is chainable', function()","  describe('where', function()","    it('without arguments', function()","    it('with non-string/object argument', function()","      assert.throws(function()","    describe('with one argument', function()","      it('that is an object', function()","      it('that is a query', function()","      it('that is a string', function()","    it('with two arguments', function()","    it('is chainable', function()","  describe('equals', function()","    it('must be called after where()', function()","      assert.throws(function () ","    it('sets value of path set with where()', function()","    it('is chainable', function()","  describe('eq', function()","    it('is alias of equals', function()","  describe('or', function()","    it('pushes onto the internal $or condition', function()","    it('allows passing arrays', function()","    it('allows calling multiple times', function()","    it('is chainable', function()","  describe('nor', function()","    it('pushes onto the internal $nor condition', function()","    it('allows passing arrays', function()","    it('allows calling multiple times', function()","    it('is chainable', function()","  describe('and', function()","    it('pushes onto the internal $and condition', function()","    it('allows passing arrays', function()","    it('allows calling multiple times', function()","    it('is chainable', function()","  function generalCondition (type) ","    return function () ","      it('accepts 2 args', function()","      it('uses previously set `where` path if 1 arg passed', function()","      it('throws if 1 arg was passed but no previous `where` was used', function()","        assert.throws(function()","      it('is chainable', function()","      it('overwrites previous value', function()","  'gt gte lt lte ne in nin regex size maxDistance minDistance'.split(' ').forEach(function (type) ","  describe('mod', function () ","    describe('with 1 argument', function()","      it('requires a previous where()', function()","        assert.throws(function () ","      it('works', function()","    describe('with 2 arguments and second is non-Array', function()","      it('requires a previous where()', function()","        assert.throws(function () ","      it('works', function()","    it('with 2 arguments and second is an array', function()","    it('with 3 arguments', function()","    it('is chainable', function()","  describe('exists', function()","    it('with 0 args', function()","      it('throws if not used after where()', function()","        assert.throws(function () ","      it('works', function()","    describe('with 1 arg', function()","      describe('that is boolean', function()","        it('throws if not used after where()', function()","          assert.throws(function () ","        it('works', function()","      describe('that is not boolean', function()","        it('sets the value to `true`', function()","    describe('with 2 args', function()","      it('works', function()","    it('is chainable', function()","  describe('elemMatch', function()","    describe('with null/undefined first argument', function()","      assert.throws(function () ","      assert.throws(function () ","      assert.doesNotThrow(function () ","    describe('with 1 argument', function()","      it('throws if not a function or object', function()","        assert.throws(function () ","      describe('that is an object', function()","        it('throws if no previous `where` was used', function()","          assert.throws(function () ","        it('works', function()","      describe('that is a function', function()","        it('throws if no previous `where` was used', function()","          assert.throws(function () ","            mquery().elemMatch(function()});","        it('works', function()","          var m = mquery().where('comment').elemMatch(function (query) ","    describe('with 2 arguments', function()","      describe('and the 2nd is an object', function()","        it('works', function()","      describe('and the 2nd is a function', function()","        it('works', function()","          var m = mquery().elemMatch('comment', function (query) ","      it('and the 2nd is not a function or object', function()","        assert.throws(function () ","  describe('within', function()","    it('is chainable', function()","    describe('when called with arguments', function()","      it('must follow where()', function()","        assert.throws(function () ","      describe('of length 1', function()","        it('throws if not a recognized shape', function()","          assert.throws(function () ","          assert.throws(function () ","        it('delegates to circle when center exists', function()","        it('delegates to box when exists', function()","        it('delegates to polygon when exists', function()","        it('delegates to geometry when exists', function()","      describe('of length 2', function()","        it('delegates to box()', function()","      describe('of length \u003e 2', function()","        it('delegates to polygon()', function()","  describe('geoWithin', function()","    before(function()","    after(function()","    describe('when called with arguments', function()","      describe('of length 1', function()","        it('delegates to circle when center exists', function()","        it('delegates to box when exists', function()","        it('delegates to polygon when exists', function()","        it('delegates to geometry when exists', function()","      describe('of length 2', function()","        it('delegates to box()', function()","      describe('of length \u003e 2', function()","        it('delegates to polygon()', function()","  describe('box', function()","    describe('with 1 argument', function()","      it('throws', function()","        assert.throws(function () ","    describe('with \u003e 3 arguments', function()","      it('throws', function()","        assert.throws(function () ","    describe('with 2 arguments', function()","      it('throws if not used after where()', function()","        assert.throws(function () ","      it('works', function()","    describe('with 3 arguments', function()","      it('works', function()","  describe('polygon', function()","    describe('when first argument is not a string', function()","      it('throws if not used after where()', function()","        assert.throws(function () ","        assert.doesNotThrow(function () ","      it('assigns arguments to within polygon condition', function()","    describe('when first arg is a string', function()","      it('assigns remaining arguments to within polygon condition', function()","  describe('circle', function()","    describe('with one arg', function()","      it('must follow where()', function()","        assert.throws(function () ","        assert.doesNotThrow(function () ","      it('works', function()","    describe('with 3 args', function()","      it('throws', function()","        assert.throws(function () ","    describe('requires radius and center', function()","      assert.throws(function () ","      assert.throws(function () ","      assert.doesNotThrow(function () ","  describe('geometry', function()","    it('must be called after within or intersects', function(done)","      assert.throws(function () ","      assert.doesNotThrow(function () ","      assert.doesNotThrow(function () ","    describe('when called with one argument', function()","      describe('after within()', function()","        it('and arg quacks like geoJSON', function(done)","      describe('after intersects()', function()","        it('and arg quacks like geoJSON', function(done)","      it('and arg does not quack like geoJSON', function(done)","        assert.throws(function () ","    describe('when called with zero arguments', function()","      it('throws', function(done)","        assert.throws(function () ","    describe('when called with more than one arguments', function()","      it('throws', function(done)","        assert.throws(function () ","  describe('intersects', function()","    it('must be used after where()', function(done)","      assert.throws(function () ","    it('sets geo comparison to \"$intersects\"', function(done)","    it('is chainable', function()","    it('calls geometry if argument quacks like geojson', function(done)","      m.geometry = function (arg) ","    it('throws if argument is not geometry-like', function(done)","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","        m.intersects(function()});","      assert.throws(function () ","  describe('near', function()","    describe('with 0 args', function()","      it('is compatible with geometry()', function(done)","    describe('with 1 arg', function()","      it('throws if not used after where()', function()","        assert.throws(function () ","      it('does not throw if used after where()', function()","        assert.doesNotThrow(function () ","    describe('with \u003e 2 args', function()","      it('throws', function()","        assert.throws(function () ","    it('creates $geometry args for GeoJSON', function()","    it('expects `center`', function()","      assert.throws(function () ","      assert.doesNotThrow(function () ","    it('accepts spherical conditions', function()","    it('is non-spherical by default', function()","    it('supports maxDistance', function()","    it('supports minDistance', function()","    it('is chainable', function()","    describe('supports passing GeoJSON, gh-13', function()","      it('with center', function()","  describe('select', function()","    describe('with 0 args', function()","      it('is chainable', function()","    it('accepts an object', function()","    it('accepts a string', function()","    it('does not accept an array', function(done)","      assert.throws(function () ","    it('merges previous arguments', function()","    it('rejects non-string, object, arrays', function()","      assert.throws(function () ","        mquery().select(function()});","    it('accepts arguments objects', function()","      function t () ","  describe('selected', function() ","    it('returns true when fields have been selected', function(done) ","    it('returns false when no fields have been selected', function(done) ","  describe('selectedInclusively', function() ","    describe('returns false', function()","      it('when no fields have been selected', function(done) ","      it('when any fields have been excluded', function(done) ","      it('when using $meta', function(done) ","    describe('returns true', function() ","      it('when fields have been included', function(done) ","  describe('selectedExclusively', function() ","    describe('returns false', function()","      it('when no fields have been selected', function(done) ","      it('when fields have only been included', function(done) ","    describe('returns true', function() ","      it('when any field has been excluded', function(done) ","  describe('slice', function()","    describe('with 0 args', function()","      it('is chainable', function()","      it('is a noop', function()","    describe('with 1 arg', function()","      it('throws if not called after where()', function()","        assert.throws(function () ","        assert.doesNotThrow(function () ","      it('that is a number', function()","      it('that is an array', function()","      it('that is an object', function() ","    describe('with 2 args', function()","      describe('and first is a number', function()","        it('throws if not called after where', function()","          assert.throws(function () ","        it('does not throw if used after where', function()","      it('and first is not a number', function()","    describe('with 3 args', function()","      it('works', function()","  describe('sort', function()","    describe('with 0 args', function()","      it('chains', function()","      it('has no affect', function()","    it('works', function()","    it('handles $meta sort options', function()","    it('array syntax', function()","    it('throws with mixed array/object syntax', function()","      assert.throws(function() ","      assert.throws(function() ","  function simpleOption (type, options) ","    describe(type, function()","      it('sets the ' + type + ' option', function()","      it('is chainable', function()","  Object.keys(negated).forEach(function (key) ","  describe('snapshot', function()","    it('works', function()","  describe('hint', function()","    it('accepts an object', function()","    it('rejects everything else', function()","      assert.throws(function()","      assert.throws(function()","      assert.throws(function()","    describe('does not have side affects', function()","      it('on invalid arg', function()","      it('on missing arg', function()","  describe('slaveOk', function()","    it('works', function()","  describe('read', function()","    it('sets associated readPreference option', function()","    it('is chainable', function()","  describe('tailable', function()","    it('works', function()","    it('is chainable', function()","  describe('merge', function()","    describe('with falsy arg', function()","      it('returns itself', function()","    describe('with an argument', function()","      describe('that is not a query or plain object', function()","        it('throws', function()","          assert.throws(function () ","          assert.throws(function () ","          assert.doesNotThrow(function () ","      describe('that is a query', function()","        it('merges conditions, field selection, and options', function()","        it('clones update arguments', function(done)","        it('is chainable', function()","      describe('that is an object', function()","        it('merges', function()","        it('clones update arguments', function(done)","        it('is chainable', function()","  describe('find', function()","    describe('with no callback', function()","      it('does not execute', function()","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","    it('is chainable', function()","    it('merges other queries', function()","    describe('executes', function()","      before(function (done) ","      after(function(done)","      it('when criteria is passed with a callback', function(done)","        mquery(col).find( name: 'mquery' }, function (err, docs) {","      it('when Query is passed with a callback', function(done)","        mquery(col).find(m, function (err, docs) ","      it('when just a callback is passed', function(done)","        mquery( name: 'mquery' }).collection(col).find(function (err, docs) {","  describe('findOne', function()","    describe('with no callback', function()","      it('does not execute', function()","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","    it('is chainable', function()","    it('merges other queries', function()","    describe('executes', function()","      before(function (done) ","      after(function(done)","      it('when criteria is passed with a callback', function(done)","        mquery(col).findOne( name: 'mquery findone' }, function (err, doc) {","      it('when Query is passed with a callback', function(done)","        mquery(col).findOne(m, function (err, doc) ","      it('when just a callback is passed', function(done)","        mquery( name: 'mquery findone' }).collection(col).findOne(function (err, doc) {","  describe('count', function()","    describe('with no callback', function()","      it('does not execute', function()","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","    it('is chainable', function()","    it('merges other queries', function()","    describe('executes', function()","      before(function (done) ","      after(function(done)","      it('when criteria is passed with a callback', function(done)","        mquery(col).count( name: 'mquery count' }, function (err, count) {","      it('when Query is passed with a callback', function(done)","        mquery(col).count(m, function (err, count) ","      it('when just a callback is passed', function(done)","        mquery( name: 'mquery count' }).collection(col).count(function (err, count) {","    describe('validates its option', function()","      it('sort', function(done)","        assert.doesNotThrow(function()","      it('select', function(done)","        assert.throws(function()","      it('slice', function(done)","        assert.throws(function()","      it('limit', function(done)","        assert.doesNotThrow(function()","      it('skip', function(done)","        assert.doesNotThrow(function()","      it('batchSize', function(done)","        assert.throws(function()","      it('comment', function(done)","        assert.throws(function()","      it('maxScan', function(done)","        assert.throws(function()","      it('snapshot', function(done)","        assert.throws(function()","      it('tailable', function(done)","        assert.throws(function()","  describe('distinct', function()","    describe('with no callback', function()","      it('does not execute', function()","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","    it('is chainable', function()","    it('overwrites field', function()","    it('merges other queries', function()","    describe('executes', function()","      before(function (done) ","      after(function(done)","      it('when distinct arg is passed with a callback', function(done)","        mquery(col).distinct('distinct', function (err, doc) ","      describe('when criteria is passed with a callback', function()","        it('if distinct arg was declared', function(done)","          mquery(col).distinct('age').distinct( name: 'mquery distinct' }, function (err, doc) {","        it('but not if distinct arg was not declared', function()","          assert.throws(function()","            mquery(col).distinct( name: 'mquery distinct' }, function(){})","      describe('when Query is passed with a callback', function()","        it('if distinct arg was declared', function(done)","          mquery(col).distinct('age').distinct(m, function (err, doc) ","        it('but not if distinct arg was not declared', function()","          assert.throws(function()","            mquery(col).distinct(m, function()})","      describe('when just a callback is passed', function(done)","        it('if distinct arg was declared', function(done)","          m.distinct(function (err, doc) ","        it('but not if no distinct arg was declared', function()","          assert.throws(function () ","            m.distinct(function()});","    describe('validates its option', function()","      it('sort', function(done)","        assert.throws(function()","      it('select', function(done)","        assert.throws(function()","      it('slice', function(done)","        assert.throws(function()","      it('limit', function(done)","        assert.throws(function()","      it('skip', function(done)","        assert.throws(function()","      it('batchSize', function(done)","        assert.throws(function()","      it('comment', function(done)","        assert.throws(function()","      it('maxScan', function(done)","        assert.throws(function()","      it('snapshot', function(done)","        assert.throws(function()","      it('hint', function(done)","        assert.throws(function()","      it('tailable', function(done)","        assert.throws(function()","  describe('update', function()","    describe('with no callback', function()","      it('does not execute', function()","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","        assert.doesNotThrow(function () ","    it('is chainable', function()","    it('merges update doc arg', function()","    it('merges other options', function()","    describe('executes', function()","      before(function (done) ","        col.insert( name: 'mquery update', age: 1 }, { safe: true }, function (err, docs) {","      after(function(done)","      describe('when conds + doc + opts + callback passed', function()","        it('works', function(done)","          m.update(}, { name: 'Sparky' }, { safe: true }, function (err, num) {","            m.findOne(function (err, doc) ","      describe('when conds + doc + callback passed', function()","        it('works', function (done) ","          var m = mquery(col).update( _id: id }, { name: 'fairgrounds' }, function (err, num, doc) {","            m.findOne(function (err, doc) ","      describe('when doc + callback passed', function()","        it('works', function (done) ","          var m = mquery(col).where( _id: id }).update({ name: 'changed' }, function (err, num, doc) {","            m.findOne(function (err, doc) ","      describe('when just callback passed', function()","        it('works', function (done) ","          m.update(function (err, num) ","            m.findOne(function (err, doc) ","      describe('without a callback', function()","        it('when forced by exec()', function(done)","          m._collection.update = function (conds, doc, opts, cb) ","      describe('except when update doc is empty and missing overwrite flag', function()","        it('works', function (done) ","          m.update( }, function (err, num) {","            setTimeout(function()","              m.findOne(function (err, doc) ","      describe('when update doc is set with overwrite flag', function()","        it('works', function (done) ","          m.update( all: 'yep', two: 2 }, function (err, num) {","            m.findOne(function (err, doc) ","      describe('when update doc is empty with overwrite flag', function()","        it('works', function (done) ","          m.update( }, function (err, num) {","            m.findOne(function (err, doc) ","      describe('when boolean (true) - exec()', function()","        it('works', function(done)","          setTimeout(function () ","            m.findOne(function (err, doc) ","  describe('remove', function()","    describe('with 0 args', function()","      before(function(done)","      after(function(done)","      it('does not execute', function(done)","        col.remove = function () ","        setTimeout(function () ","      it('chains', function()","    describe('with 1 argument', function()","      before(function(done)","      after(function(done)","      describe('that is a', function()","        it('plain object', function()","        it('query', function()","        it('function', function(done)","          mquery(col,  safe: true }).where({name: name}).remove(function (err) {","            mquery(col).findOne( name: name }, function (err, doc) {","        it('boolean (true) - execute', function(done)","          col.insert( name: name }, { safe: true }, function (err) {","            mquery(col).findOne( name: name }, function (err, doc) {","              setTimeout(function () ","                mquery(col).find(function (err, docs) ","    describe('with 2 arguments', function()","      beforeEach(function(done)","        col.remove(}, { safe: true }, function (err) {","          col.insert([ name: 'shelly' }, { name: name }], { safe: true }, function (err) {","            mquery(col).find(function (err, docs) ","      describe('plain object + callback', function()","        it('works', function(done)","          mquery(col).remove( name: name }, function (err) {","            mquery(col).find(function (err, docs) ","      describe('mquery + callback', function()","        it('works', function(done)","          mquery(col).remove(m, function (err) ","            mquery(col).find(function (err, docs) ","  function validateFindAndModifyOptions (method) ","    describe('validates its option', function()","      it('sort', function(done)","        assert.doesNotThrow(function()","      it('select', function(done)","        assert.doesNotThrow(function()","      it('limit', function(done)","        assert.throws(function()","      it('skip', function(done)","        assert.throws(function()","      it('batchSize', function(done)","        assert.throws(function()","      it('maxScan', function(done)","        assert.throws(function()","      it('snapshot', function(done)","        assert.throws(function()","      it('hint', function(done)","        assert.throws(function()","      it('tailable', function(done)","        assert.throws(function()","      it('comment', function(done)","        assert.throws(function()","  describe('findOneAndUpdate', function()","    describe('with 0 args', function()","      it('makes no changes', function()","    describe('with 1 arg', function()","      describe('that is an object', function()","        it('updates the doc', function()","      describe('that is a query', function()","        it('updates the doc', function()","      it('that is a function', function(done)","        col.insert( name: name }, { safe: true }, function (err) {","          n.findOneAndUpdate(function (err, doc) ","    describe('with 2 args', function()","      it('conditions + update', function()","      it('query + update', function()","      it('update + callback', function(done)","        m.findOneAndUpdate( $inc: { age: 10 }}, function (err, doc) {","    describe('with 3 args', function()","      it('conditions + update + options', function()","      it('conditions + update + callback', function(done)","        m.findOneAndUpdate( name: name }, { works: true }, function (err, doc) {","    describe('with 4 args', function()","      it('conditions + update + options + callback', function(done)","        m.findOneAndUpdate( name: name }, { works: false }, { new: false },  function (err, doc) {","  describe('findOneAndRemove', function()","    describe('with 0 args', function()","      it('makes no changes', function()","    describe('with 1 arg', function()","      describe('that is an object', function()","        it('updates the doc', function()","      describe('that is a query', function()","        it('updates the doc', function()","      it('that is a function', function(done)","        col.insert( name: name }, { safe: true }, function (err) {","          m.findOneAndRemove(function (err, doc) ","    describe('with 2 args', function()","      it('conditions + options', function()","      it('query + options', function()","      it('conditions + callback', function(done)","        col.insert( name: name }, { safe: true }, function (err) {","          m.findOneAndRemove( name: name }, function (err, doc) {","      it('query + callback', function(done)","        col.insert( name: name }, { safe: true }, function (err) {","          m.findOneAndRemove(n, function (err, doc) ","    describe('with 3 args', function()","      it('conditions + options + callback', function(done)","        col.insert([ name: name }, { name: 'a' }], { safe: true }, function (err) {","          m.findOneAndRemove( name: name }, { sort: { name: 1 }}, function (err, doc) {","  describe('exec', function()","    beforeEach(function(done)","    afterEach(function(done)","    it('requires an op', function()","      assert.throws(function () ","    describe('find', function() ","      it('works', function(done)","        m.exec(function (err, docs) ","      it('works with readPreferences', function (done) ","        m.exec(function (err, docs) ","    it('findOne', function(done)","      m.exec(function (err, doc) ","    it('count', function(done)","      m.exec(function (err, count) ","    it('distinct', function(done)","      m.exec(function (err, array) ","    describe('update', function()","      it('with a callback', function(done)","        m.count(function (err, _num) ","          m.exec(function (err, res) ","            mquery(col).find( name: 'exec + update' }, function (err, docs) {","      it('without a callback', function(done)","        setTimeout(function () ","          mquery(col).find( name: 'exec' }, function (err, docs) {","      it('preserves key ordering', function(done) ","    describe('remove', function()","      it('with a callback', function(done)","        m.exec(function (err, num) ","      it('without a callback', function(done)","        setTimeout(function () ","          mquery(col).where('name', 'exec').count(function(err, num) ","    describe('findOneAndUpdate', function()","      it('with a callback', function(done)","        m.exec(function (err, doc) ","    describe('findOneAndRemove', function()","      it('with a callback', function(done)","        m.exec(function (err, doc) ","          mquery(col).count( name: 'exec' }, function (err, num) {","  describe('setTraceFunction', function() ","    beforeEach(function(done)","    it('calls trace function when executing query', function(done) ","      m.setTraceFunction(function (method, queryInfo) ","        return function(err, result, millis) ","      m.findOne(name: 'trace'}, function (err, doc) {","    it('inherits trace function when calling toConstructor', function(done) ","      function traceFunction ()  return function() {} };","  describe('thunk', function() ","    it('returns a function', function(done) ","      assert.equal('function', typeof mquery().thunk());","    it('passes the fn arg to `exec`', function(done) ","      function cb() }","      m.exec = function testing(fn) ","  describe('then', function() ","    before(function(done)","    after(function(done)","    it('returns a promise A+ compat object', function(done) ","      assert.equal('function', typeof m.then);","    it('creates a promise that is resolved on success', function(done) ","      promise.then(function(count)","    it('supports exec() cb being called synchronously #66', function(done) ","      query.exec = function(cb) ","      function success(count)","    it('supports other Promise libs', function(done) ","      mquery.Promise = function P() ","        this.then = function(x, y) ","  describe('stream', function() ","    before(function(done)","    after(function(done)","    describe('throws', function() ","      describe('if used with non-find operations', function() ","        ops.forEach(function(op) ","          assert.throws(function()","    it('returns a stream', function(done) ","      stream.on('data', function(doc)","      stream.on('error', function(er) ","      stream.on('close', function()","    it('supports find options', function(done) ","      function xform(doc) ","      stream.on('data', function(doc)","      stream.on('error', function(er) ","      stream.on('close', function()","  function noDistinct (type) ","    it('cannot be used with distinct()', function(done)","      assert.throws(function () ","  function no (method, type) ","    it('cannot be used with ' + method + '()', function(done)","      assert.throws(function () ","  describe('_updateForExec', function()","    it('returns a clone of the update object with same key order #19', function(done)"],"Dependencies":["../","assert"]},{"FileName":"node_modules\\mquery\\test\\utils.test.js","LineCount":144,"CharCount":3377,"Comments":[],"Functions":["describe('lib/utils', function() ","  describe('clone', function() ","    it('clones constructors named ObjectId', function(done) ","      function ObjectId (id) ","    it('clones constructors named ObjectID', function(done) ","      function ObjectID (id) ","    it('does not clone constructors named ObjectIdd', function(done) ","      function ObjectIdd (id) ","    it('optionally clones ObjectId constructors using its clone method', function(done) ","      function ObjectID (id) ","      ObjectID.prototype.clone = function () ","    it('clones mongodb.ReadPreferences', function (done) ","    it('clones mongodb.Binary', function(done)","    it('handles objects with no constructor', function(done) ","      assert.doesNotThrow(function() ","    it('handles buffers', function(done)"],"Dependencies":["../lib/utils","assert"]},{"FileName":"node_modules\\ms\\index.js","LineCount":126,"CharCount":2207,"Comments":["/**"," * Helpers."," */","","var s = 1000;","/**"," * Parse or format the given `val`."," *"," * Options:"," *"," *  - `long` verbose formatting [false]"," *"," * @param {String|Number} val"," * @param {Object} options"," * @return {String|Number}"," * @api public"," */","","module.exports = function(val, options){","/**"," * Parse the given `str` and return milliseconds."," *"," * @param {String} str"," * @return {Number}"," * @api private"," */","","function parse(str) {","/**"," * Short format for `ms`."," *"," * @param {Number} ms"," * @return {String}"," * @api private"," */","","function short(ms) {","/**"," * Long format for `ms`."," *"," * @param {Number} ms"," * @return {String}"," * @api private"," */","","function long(ms) {","/**"," * Pluralization helper."," */","","function plural(ms, n, name) {"],"Functions":["module.exports = function(val, options)","function parse(str) ","function short(ms) ","function long(ms) ","function plural(ms, n, name) "],"Dependencies":null},{"FileName":"node_modules\\muri\\index.js","LineCount":2,"CharCount":44,"Comments":[],"Functions":null,"Dependencies":["./lib"]},{"FileName":"node_modules\\muri\\lib\\index.js","LineCount":242,"CharCount":4024,"Comments":["// muri","","/**","/**"," * MongoDB URI parser as described here:"," * http://www.mongodb.org/display/DOCS/Connections"," */","","/**"," * Module dependencies"," */","","var qs = require('querystring');","/**"," * Defaults"," */","","var DEFAULT_PORT = 27017;","/**"," * Muri"," */","","module.exports = exports = function muri (str) {","  if (!/^mongodb:\\/\\//.test(str)) {","    throw new Error('Invalid mongodb uri. Must begin with \"mongodb://\"'","                  + '\\n  Received: ' + str);","      db = parts[0].replace(/^\\//, '');","    } else {","      // deal with ipc formats","      db = /\\/([^\\.]+)$/.exec(match[1]);","/**"," * Parse str into key/val pairs casting values appropriately."," */","","function options (str) {","  // do not use require('url').parse b/c it can't handle # in username or pwd","  // mongo uris are strange","","  var uri = uriString;","  // skip protocol","  uri = uri.replace(/^mongodb:\\/\\//, '');","","  // auth","  if (/@/.test(uri)) {","  // unix domain sockets","  if (ipcRgx.test(uri)) {","    // included a database?","    if (ipcs[1]) {","      // strip leading / from database name","      ipcs[1] = ipcs[1].replace(/^\\//, '');","","      if (ipcs[1]) {","  // database name","  parts = uri.split('/');","  // ipv6, [ip]:host","  if (/^\\[[^\\]]+\\]:\\d+/.test(parts[0])) {","    // host:port","    parts = parts[0].split(':');","/**"," * Version"," */","","module.exports.version = JSON.parse("],"Functions":["module.exports = exports = function muri (str) ","  uris.split(',').forEach(function (uri) ","function options (str) ","  Object.keys(ret).forEach(function (key) ","function format (val) ","function readPref (val) ","  pair.forEach(function (kv) ","function parse (uriString) "],"Dependencies":["querystring"]},{"FileName":"node_modules\\muri\\test\\index.js","LineCount":322,"CharCount":11869,"Comments":["  it('must begin with mongodb://', function(done){","    assert.throws(function () {","      muri('mongodb://localhost:27017');","    })","      var uri = 'mongodb://local:27017';","      var val = muri(uri);","      var uri = 'mongodb://user:password@local:27017';","      var val = muri(uri);","      var uri = 'mongodb://us#er:password@local:27017';","      var val = muri(uri);","      var uri = 'mongodb://user:pa#ssword@local:27017';","      var val = muri(uri);","        muri('mongodb://');","      }, /Missing host/)","        muri('mongodb:///fake');","      }, /Missing host/)","        muri('mongodb://?yep');","      }, /Missing host/)","        muri('mongodb:///?yep');","      }, /Missing host/)","      var val = muri('mongodb://local');","      assert.ok(Array.isArray(val.hosts));","      var val = muri('mongodb://local:27017,remote:27018,japan:99999');","      assert.ok(Array.isArray(val.hosts));","        var val = muri('mongodb://local/');","        assert.equal(27017, val.hosts[0].port);","        var val = muri('mongodb://local:27018');","        assert.equal(27018, val.hosts[0].port);","        val = muri('mongodb://local,remote:27018,another');","      })","      var val = muri('mongodb://localhost/');","      assert.equal('test', val.db);","      var val = muri('mongodb://localhost');","      assert.equal('test', val.db);","      var val = muri('mongodb://localhost,a,x:34343,b/muri');","      assert.equal('muri', val.db);","      var uri = 'mongodb://localhost:27020/testing,mongodb://localhost:27019,mongodb://localhost:27018'","      var val = muri(uri);","      var val = muri('mongodb://muri/?replicaSet=myreplset;slaveOk=true;x=1');","      assert.ok(val.options);","      var val = muri('mongodb://muri/?replicaSet=myreplset\u0026slaveOk=true\u0026x=1');","      assert.ok(val.options);","      it('mongodb://localhost/?readPreferenceTags=dc:ny', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny');","        assert.equal('test', val.db);","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1');","        assert.deepEqual([{ dc: 'ny', rack: 1 }], val.options.readPreferenceTags);","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);","      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2\u0026readPreferenceTags=', function(done){","        var val = muri('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2\u0026readPreferenceTags=');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:ny\u0026readPreferenceTags=', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:ny\u0026readPreferenceTags=');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'ny' }], val.options.readPreferenceTags);","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);","      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2;readPreferenceTags=', function(done){","        var val = muri('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2;readPreferenceTags=');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags=', function(done){","        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags=');","        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'ny' }], val.options.readPreferenceTags);","      var val = muri('mongodb:///tmp/mongodb-27017.sock?safe=false');","      assert.equal(val.db, 'test')","      var val = muri('mongodb:///tmp/mongodb-27017.sock/tester?safe=false');","      assert.equal(val.db, 'tester')","      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock?safe=false');","      assert.equal(val.db, 'admin')","      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock/tester?safe=false');","      assert.equal(val.db, 'tester')","      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock,/tmp/another-27018.sock?safe=false');","      assert.equal(val.db, 'admin')","      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock,/tmp/another-27018.sock/tester?safe=false');","      assert.equal(val.db, 'tester')","    var uri = 'mongodb://u#ser:pas#s@local,remote:27018,japan:27019/neatdb'","    uri +=    '?replicaSet=myreplset\u0026journal=true\u0026w=2\u0026wtimeoutMS=50'","    var uri = 'mongodb://[::1]:27017/test';","    var val = muri(uri);"],"Functions":["describe('muri', function()","  it('must begin with mongodb://', function(done)","    assert.throws(function () ","    assert.doesNotThrow(function () ","  describe('user:password', function(done)","    it('is optional', function(done)","    it('parses properly', function(done)","    it('handles # in the username', function(done)","    it('handles # in the password', function(done)","  describe('host', function()","    it('must be specified', function(done)","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","      assert.throws(function () ","    it('supports replica sets', function(done)","  describe('port', function()","    describe('with single host', function()","      it('defaults to 27017 if not specified', function(done)","      it('uses what is specified', function(done)","    describe('with replica sets', function()","      before(function()","      it('defaults to 27017 if not specified', function(done)","      it('uses what is specified', function(done)","  describe('database', function()","    it('default', function(done)","    it('is overridable', function(done)","    it('works with multiple specified protocols', function(done)","  describe('querystring separator', function()","    it('can be ; ', function(done)","    it('can be \u0026 ', function(done)","  describe('readPref tags', function()","    describe('with \u0026 ', function()","      it('mongodb://localhost/?readPreferenceTags=dc:ny', function(done)","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1', function(done)","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2', function(done)","      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:sf,rack:2\u0026readPreferenceTags=', function(done)","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1\u0026readPreferenceTags=dc:ny\u0026readPreferenceTags=', function(done)","    describe('with ; ', function()","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2', function(done)","      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2;readPreferenceTags=', function(done)","      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags=', function(done)","  describe('unix domain sockets', function()","    it('without auth', function(done)","    it('without auth with a database name', function(done)","    it('with auth', function(done)","    it('with auth with a db name', function(done)","    it('with auth + repl sets', function(done)","    it('with auth + repl sets with a db name', function(done)","  it('all together now', function(done)","  it('ipv6', function(done) ","  it('has a version', function(done)"],"Dependencies":["../","assert"]},{"FileName":"node_modules\\negotiator\\index.js","LineCount":125,"CharCount":3220,"Comments":["/*!"," * negotiator"," * Copyright(c) 2012 Federico Romero"," * Copyright(c) 2012-2014 Isaac Z. Schlueter"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Cached loaded submodules."," * @private"," */","","var modules = Object.create(null);","/**"," * Module exports."," * @public"," */","","module.exports = Negotiator;","/**"," * Create a Negotiator instance from a request."," * @param {object} request"," * @public"," */","","function Negotiator(request) {","// Backwards compatibility","Negotiator.prototype.preferredCharset = Negotiator.prototype.charset;","/**"," * Load the given module."," * @private"," */","","function loadModule(moduleName) {","  // This uses a switch for static require analysis","  switch (moduleName) {","  // Store to prevent invoking require()","  modules[moduleName] = module;"],"Functions":["function Negotiator(request) ","Negotiator.prototype.charset = function charset(available) ","Negotiator.prototype.charsets = function charsets(available) ","Negotiator.prototype.encoding = function encoding(available) ","Negotiator.prototype.encodings = function encodings(available) ","Negotiator.prototype.language = function language(available) ","Negotiator.prototype.languages = function languages(available) ","Negotiator.prototype.mediaType = function mediaType(available) ","Negotiator.prototype.mediaTypes = function mediaTypes(available) ","function loadModule(moduleName) "],"Dependencies":["./lib/charset","./lib/encoding","./lib/language","./lib/mediaType"]},{"FileName":"node_modules\\negotiator\\lib\\charset.js","LineCount":170,"CharCount":2913,"Comments":["/**"," * negotiator"," * Copyright(c) 2012 Isaac Z. Schlueter"," * Copyright(c) 2014 Federico Romero"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","module.exports = preferredCharsets;","/**"," * Module variables."," * @private"," */","","var simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;","/**"," * Parse the Accept-Charset header."," * @private"," */","","function parseAcceptCharset(accept) {","  // trim accepts","  accepts.length = j;","/**"," * Parse a charset from the Accept-Charset header."," * @private"," */","","function parseCharset(str, i) {","/**"," * Get the priority of a charset."," * @private"," */","","function getCharsetPriority(charset, accepted, index) {","/**"," * Get the specificity of the charset."," * @private"," */","","function specify(charset, spec, index) {","/**"," * Get the preferred charsets from an Accept-Charset header."," * @public"," */","","function preferredCharsets(accept, provided) {","  // RFC 2616 sec 14.2: no header = *","  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');","    // sorted list of all charsets","    return accepts","  // sorted list of accepted charsets","  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {","/**"," * Compare two specs."," * @private"," */","","function compareSpecs(a, b) {","/**"," * Get full charset string."," * @private"," */","","function getFullCharset(spec) {","/**"," * Check if a spec has any quality."," * @private"," */","","function isQuality(spec) {"],"Functions":["function parseAcceptCharset(accept) ","function parseCharset(str, i) ","function getCharsetPriority(charset, accepted, index) ","function specify(charset, spec, index) ","function preferredCharsets(accept, provided) ","  var priorities = provided.map(function getPriority(type, index) ","  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) ","function compareSpecs(a, b) ","function getFullCharset(spec) ","function isQuality(spec) "],"Dependencies":null},{"FileName":"node_modules\\negotiator\\lib\\encoding.js","LineCount":185,"CharCount":3323,"Comments":["/**"," * negotiator"," * Copyright(c) 2012 Isaac Z. Schlueter"," * Copyright(c) 2014 Federico Romero"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","module.exports = preferredEncodings;","/**"," * Module variables."," * @private"," */","","var simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;","/**"," * Parse the Accept-Encoding header."," * @private"," */","","function parseAcceptEncoding(accept) {","    /*","     * If identity doesn't explicitly appear in the accept-encoding header,","     * it's added to the list of acceptable encoding with the lowest q","     */","    accepts[j++] = {","  // trim accepts","  accepts.length = j;","/**"," * Parse an encoding from the Accept-Encoding header."," * @private"," */","","function parseEncoding(str, i) {","/**"," * Get the priority of an encoding."," * @private"," */","","function getEncodingPriority(encoding, accepted, index) {","/**"," * Get the specificity of the encoding."," * @private"," */","","function specify(encoding, spec, index) {","/**"," * Get the preferred encodings from an Accept-Encoding header."," * @public"," */","","function preferredEncodings(accept, provided) {","    // sorted list of all encodings","    return accepts","  // sorted list of accepted encodings","  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {","/**"," * Compare two specs."," * @private"," */","","function compareSpecs(a, b) {","/**"," * Get full encoding string."," * @private"," */","","function getFullEncoding(spec) {","/**"," * Check if a spec has any quality."," * @private"," */","","function isQuality(spec) {"],"Functions":["function parseAcceptEncoding(accept) ","function parseEncoding(str, i) ","function getEncodingPriority(encoding, accepted, index) ","function specify(encoding, spec, index) ","function preferredEncodings(accept, provided) ","  var priorities = provided.map(function getPriority(type, index) ","  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) ","function compareSpecs(a, b) ","function getFullEncoding(spec) ","function isQuality(spec) "],"Dependencies":null},{"FileName":"node_modules\\negotiator\\lib\\language.js","LineCount":180,"CharCount":3234,"Comments":["/**"," * negotiator"," * Copyright(c) 2012 Isaac Z. Schlueter"," * Copyright(c) 2014 Federico Romero"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","module.exports = preferredLanguages;","/**"," * Module variables."," * @private"," */","","var simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;","/**"," * Parse the Accept-Language header."," * @private"," */","","function parseAcceptLanguage(accept) {","  // trim accepts","  accepts.length = j;","/**"," * Parse a language from the Accept-Language header."," * @private"," */","","function parseLanguage(str, i) {","/**"," * Get the priority of a language."," * @private"," */","","function getLanguagePriority(language, accepted, index) {","/**"," * Get the specificity of the language."," * @private"," */","","function specify(language, spec, index) {","/**"," * Get the preferred languages from an Accept-Language header."," * @public"," */","","function preferredLanguages(accept, provided) {","  // RFC 2616 sec 14.4: no header = *","  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');","    // sorted list of all languages","    return accepts","  // sorted list of accepted languages","  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {","/**"," * Compare two specs."," * @private"," */","","function compareSpecs(a, b) {","/**"," * Get full language string."," * @private"," */","","function getFullLanguage(spec) {","/**"," * Check if a spec has any quality."," * @private"," */","","function isQuality(spec) {"],"Functions":["function parseAcceptLanguage(accept) ","function parseLanguage(str, i) ","function getLanguagePriority(language, accepted, index) ","function specify(language, spec, index) ","function preferredLanguages(accept, provided) ","  var priorities = provided.map(function getPriority(type, index) ","  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) ","function compareSpecs(a, b) ","function getFullLanguage(spec) ","function isQuality(spec) "],"Dependencies":null},{"FileName":"node_modules\\negotiator\\lib\\mediaType.js","LineCount":295,"CharCount":5064,"Comments":["/**"," * negotiator"," * Copyright(c) 2012 Isaac Z. Schlueter"," * Copyright(c) 2014 Federico Romero"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," * @public"," */","","module.exports = preferredMediaTypes;","/**"," * Module variables."," * @private"," */","","var simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;","/**"," * Parse the Accept header."," * @private"," */","","function parseAccept(accept) {","  // trim accepts","  accepts.length = j;","/**"," * Parse a media type from the Accept header."," * @private"," */","","function parseMediaType(str, i) {","      // get the value, unwrapping quotes","      var value = val \u0026\u0026 val[0] === '\"' \u0026\u0026 val[val.length - 1] === '\"'","      // store parameter","      params[key] = value;","/**"," * Get the priority of a media type."," * @private"," */","","function getMediaTypePriority(type, accepted, index) {","/**"," * Get the specificity of the media type."," * @private"," */","","function specify(type, spec, index) {","/**"," * Get the preferred media types from an Accept header."," * @public"," */","","function preferredMediaTypes(accept, provided) {","  // RFC 2616 sec 14.2: no header = */*","  // RFC 2616 sec 14.2: no header = */*","  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');","  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');","","  if (!provided) {","    // sorted list of all types","    return accepts","  // sorted list of accepted types","  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {","/**"," * Compare two specs."," * @private"," */","","function compareSpecs(a, b) {","/**"," * Get full type string."," * @private"," */","","function getFullType(spec) {","/**"," * Check if a spec has any quality."," * @private"," */","","function isQuality(spec) {","/**"," * Count the number of quotes in a string."," * @private"," */","","function quoteCount(string) {","/**"," * Split a key value pair."," * @private"," */","","function splitKeyValuePair(str) {","/**"," * Split an Accept header into media types."," * @private"," */","","function splitMediaTypes(accept) {","  // trim accepts","  accepts.length = j + 1;","/**"," * Split a string of parameters."," * @private"," */","","function splitParameters(str) {","  // trim parameters","  parameters.length = j + 1;"],"Functions":["function parseAccept(accept) ","function parseMediaType(str, i) ","function getMediaTypePriority(type, accepted, index) ","function specify(type, spec, index) ","    if (keys.every(function (k) ","function preferredMediaTypes(accept, provided) ","  var priorities = provided.map(function getPriority(type, index) ","  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) ","function compareSpecs(a, b) ","function getFullType(spec) ","function isQuality(spec) ","function quoteCount(string) ","function splitKeyValuePair(str) ","function splitMediaTypes(accept) ","function splitParameters(str) "],"Dependencies":null},{"FileName":"node_modules\\number-is-nan\\index.js","LineCount":5,"CharCount":78,"Comments":[],"Functions":["module.exports = Number.isNaN || function (x) "],"Dependencies":null},{"FileName":"node_modules\\object-assign\\index.js","LineCount":38,"CharCount":636,"Comments":[],"Functions":["function ToObject(val) ","module.exports = Object.assign || function (target, source) "],"Dependencies":null},{"FileName":"node_modules\\on-finished\\index.js","LineCount":197,"CharCount":3490,"Comments":["/*!"," * on-finished"," * Copyright(c) 2013 Jonathan Ong"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = onFinished","/**"," * Module dependencies."," * @private"," */","","var first = require('ee-first')","/**"," * Variables."," * @private"," */","","/* istanbul ignore next */","var defer = typeof setImmediate === 'function'","/**"," * Invoke callback when the response has finished, useful for"," * cleaning up resources afterwards."," *"," * @param {object} msg"," * @param {function} listener"," * @return {object}"," * @public"," */","","function onFinished(msg, listener) {","  // attach the listener to the message","  attachListener(msg, listener)","/**"," * Determine if message is already finished."," *"," * @param {object} msg"," * @return {boolean}"," * @public"," */","","function isFinished(msg) {","    // OutgoingMessage","    return Boolean(msg.finished || (socket \u0026\u0026 !socket.writable))","    // IncomingMessage","    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete \u0026\u0026 !msg.readable))","  // don't know","  return undefined","/**"," * Attach a finished listener to the message."," *"," * @param {object} msg"," * @param {function} callback"," * @private"," */","","function attachFinishedListener(msg, callback) {","  // finished on first message event","  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)","    // remove listener","    msg.removeListener('socket', onSocket)","    // finished on first socket event","    eeSocket = first([[socket, 'error', 'close']], onFinish)","    // socket already assigned","    onSocket(msg.socket)","  // wait for socket to be assigned","  msg.on('socket', onSocket)","    // node.js 0.8 patch","    patchAssignSocket(msg, onSocket)","/**"," * Attach the listener to the message."," *"," * @param {object} msg"," * @return {function}"," * @private"," */","","function attachListener(msg, listener) {","  // create a private single listener with queue","  if (!attached || !attached.queue) {","/**"," * Create listener on message."," *"," * @param {object} msg"," * @return {function}"," * @private"," */","","function createListener(msg) {","/**"," * Patch ServerResponse.prototype.assignSocket for node.js 0.8."," *"," * @param {ServerResponse} res"," * @param {function} callback"," * @private"," */","","function patchAssignSocket(res, callback) {","  // res.on('socket', callback) is broken in 0.8","  res.assignSocket = function _assignSocket(socket) {"],"Functions":["var defer = typeof setImmediate === 'function'","  : function(fn) process.nextTick(fn.bind.apply(fn, arguments)) }"," * @param function} listener","function onFinished(msg, listener) ","function isFinished(msg) "," * @param function} callback","function attachFinishedListener(msg, callback) ","  function onFinish(error) ","  function onSocket(socket) "," * @return function}","function attachListener(msg, listener) "," * @return function}","function createListener(msg) ","  function listener(err) "," * @param function} callback","function patchAssignSocket(res, callback) ","  if (typeof assignSocket !== 'function') return","  res.assignSocket = function _assignSocket(socket) "],"Dependencies":["ee-first"]},{"FileName":"node_modules\\parseurl\\index.js","LineCount":139,"CharCount":2287,"Comments":["/*!"," * parseurl"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2014 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," */","","var url = require('url')","/**"," * Pattern for a simple path case."," * See: https://github.com/joyent/node/pull/7878"," */","","var simplePathRegExp = /^(\\/\\/?(?!\\/)[^\\?#\\s]*)(\\?[^#\\s]*)?$/","/**"," * Exports."," */","","module.exports = parseurl","/**"," * Parse the `req` url with memoization."," *"," * @param {ServerRequest} req"," * @return {Object}"," * @api public"," */","","function parseurl(req) {","    // URL is undefined","    return undefined","    // Return cached URL parse","    return parsed","  // Parse the URL","  parsed = fastparse(url)","/**"," * Parse the `req` original url with fallback and memoization."," *"," * @param {ServerRequest} req"," * @return {Object}"," * @api public"," */","","function originalurl(req) {","    // Fallback","    return parseurl(req)","    // Return cached URL parse","    return parsed","  // Parse the URL","  parsed = fastparse(url)","/**"," * Parse the `str` url with fast-path short-cut."," *"," * @param {string} str"," * @return {Object}"," * @api private"," */","","function fastparse(str) {","  // Try fast path regexp","  // See: https://github.com/joyent/node/pull/7878","  var simplePath = typeof str === 'string' \u0026\u0026 simplePathRegExp.exec(str)","  // Construct simple URL","  if (simplePath) {","/**"," * Determine if parsed is still fresh for url."," *"," * @param {string} url"," * @param {object} parsedUrl"," * @return {boolean}"," * @api private"," */","","function fresh(url, parsedUrl) {"],"Functions":["function parseurl(req) ","function originalurl(req) ","function fastparse(str) ","function fresh(url, parsedUrl) "],"Dependencies":["url"]},{"FileName":"node_modules\\path-to-regexp\\index.js","LineCount":130,"CharCount":3199,"Comments":["/**"," * Expose `pathtoRegexp`."," */","","module.exports = pathtoRegexp;","/**"," * Match matching groups in a regular expression."," */","var MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;","/**"," * Normalize the given path string,"," * returning a regular expression."," *"," * An empty array should be passed,"," * which will contain the placeholder"," * key names. For example \"/user/:id\" will"," * then contain [\"id\"]."," *"," * @param  {String|RegExp|Array} path"," * @param  {Array} keys"," * @param  {Object} options"," * @return {RegExp}"," * @api private"," */","","function pathtoRegexp(path, keys, options) {","    // Map array parts into regexps and return their source. We also pass","    // the same keys and options instance into every generation to get","    // consistent matching groups before we join the sources together.","    path = path.map(function (value) {","        keys[len].offset += 3; // Replacement length minus asterisk length.","      }","  // This is a workaround for handling unnamed matching groups.","  while (m = MATCHING_GROUP_REGEXP.exec(path)) {","    // It's possible to escape the bracket.","    if (escapeCount % 2 === 1) {","        name: name++, // Unnamed matching groups must be consistently linear.","        optional: false,","  // If the path is non-ending, match until the end or a slash.","  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));"],"Functions":["function pathtoRegexp(path, keys, options) ","    path = path.map(function (value) ","    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) ","    .replace(/\\*/g, function (star, index) "],"Dependencies":null},{"FileName":"node_modules\\proxy-addr\\index.js","LineCount":322,"CharCount":5655,"Comments":["/*!"," * proxy-addr"," * Copyright(c) 2014-2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," */","","module.exports = proxyaddr;","/**"," * Module dependencies."," */","","var forwarded = require('forwarded');","/**"," * Variables."," */","","var digitre = /^[0-9]+$/;","/**"," * Pre-defined IP ranges."," */","","var ipranges = {","/**"," * Get all addresses in the request, optionally stopping"," * at the first untrusted."," *"," * @param {Object} request"," * @param {Function|Array|String} [trust]"," * @api public"," */","","function alladdrs(req, trust) {","  // get addresses","  var addrs = forwarded(req);","    // Return all addresses","    return addrs;","/**"," * Compile argument into trust function."," *"," * @param {Array|String} val"," * @api private"," */","","function compile(val) {","    // Splice in pre-defined range","    val = ipranges[val];","/**"," * Compile `arr` elements into range subnets."," *"," * @param {Array} arr"," * @api private"," */","","function compileRangeSubnets(arr) {","/**"," * Compile range subnet array into trust function."," *"," * @param {Array} rangeSubnets"," * @api private"," */","","function compileTrust(rangeSubnets) {","  // Return optimized function based on length","  var len = rangeSubnets.length;","/**"," * Parse IP notation string into range subnet."," *"," * @param {String} note"," * @api private"," */","","function parseipNotation(note) {","    // Store as IPv4","    ip = ip.toIPv4Address();","/**"," * Parse netmask string into CIDR range."," *"," * @param {String} netmask"," * @api private"," */","","function parseNetmask(netmask) {","/**"," * Determine address of proxied request."," *"," * @param {Object} request"," * @param {Function|Array|String} trust"," * @api public"," */","","function proxyaddr(req, trust) {","/**"," * Static trust function to trust nothing."," *"," * @api private"," */","","function trustNone() {","/**"," * Compile trust function for multiple subnets."," *"," * @param {Array} subnets"," * @api private"," */","","function trustMulti(subnets) {","          // Incompatible IP addresses","          continue;","          // Convert IP to match subnet IP kind","          ipconv = subnetkind === 'ipv4'","/**"," * Compile trust function for single subnet."," *"," * @param {Object} subnet"," * @api private"," */","","function trustSingle(subnet) {","        // Incompatible IP addresses","        return false;","      // Convert IP to match subnet IP kind","      ip = subnetisipv4"],"Functions":["function alladdrs(req, trust) ","  if (typeof trust !== 'function') "," * Compile argument into trust function.","function compile(val) ","function compileRangeSubnets(arr) "," * Compile range subnet array into trust function.","function compileTrust(rangeSubnets) ","  // Return optimized function based on length","function parseipNotation(note) ","function parseNetmask(netmask) ","function proxyaddr(req, trust) "," * Static trust function to trust nothing.","function trustNone() "," * Compile trust function for multiple subnets.","function trustMulti(subnets) ","  return function trust(addr) "," * Compile trust function for single subnet.","function trustSingle(subnet) ","  return function trust(addr) "],"Dependencies":["forwarded","ipaddr.js"]},{"FileName":"node_modules\\qs\\dist\\qs.js","LineCount":487,"CharCount":14632,"Comments":["    // Transform dot notation to bracket notation","    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;","    // The regex chunks","","    var parent = /^([^\\[\\]]*)/;","    // Get the parent","","    var segment = parent.exec(key);","    // Stash the parent if it exists","","    var keys = [];","        // If we aren't using plain objects, optionally prefix keys","        // that would overwrite object prototype properties","        if (!options.plainObjects \u0026\u0026 Object.prototype.hasOwnProperty(segment[1])) {","    // Loop through children appending to the array until we hit depth","","    var i = 0;","    // If there's a remainder, just add whatever is left","","    if (segment) {","    // Iterate over the keys and setup the new object","","    var keys = Object.keys(tempObj);","    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.","    // It has been adapted here for stricter adherence to RFC 3986","    if (str.length === 0) {","            c === 0x2D || // -","            c === 0x2E || // .","            c === 0x5F || // _","            c === 0x7E || // ~","            (c \u003e= 0x30 \u0026\u0026 c \u003c= 0x39) || // 0-9","            (c \u003e= 0x41 \u0026\u0026 c \u003c= 0x5A) || // a-z","            (c \u003e= 0x61 \u0026\u0026 c \u003c= 0x7A) // A-Z","        ) {"],"Functions":["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Qs = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(require,module,exports){","},\"./parse\":2,\"./stringify\":3}],2:[function(require,module,exports){","var parseValues = function parseValues(str, options) ","var parseObject = function parseObject(chain, val, options) ","var parseKeys = function parseKeys(givenKey, val, options) ","module.exports = function (str, opts) ","    if (options.decoder !== null \u0026\u0026 options.decoder !== undefined \u0026\u0026 typeof options.decoder !== 'function') ","        throw new TypeError('Decoder has to be a function.');","    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;","},\"./utils\":4}],3:[function(require,module,exports){","    brackets: function brackets(prefix) ","    indices: function indices(prefix, key) ","    repeat: function repeat(prefix) ","var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) ","    if (typeof filter === 'function') ","module.exports = function (object, opts) ","    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;","    var sort = typeof options.sort === 'function' ? options.sort : null;","    if (options.encoder !== null \u0026\u0026 options.encoder !== undefined \u0026\u0026 typeof options.encoder !== 'function') ","        throw new TypeError('Encoder has to be a function.');","    if (typeof options.filter === 'function') ","},\"./utils\":4}],4:[function(require,module,exports){","var hexTable = (function () ","exports.arrayToObject = function (source, options) ","exports.merge = function (target, source, options) ","    return Object.keys(source).reduce(function (acc, key) ","exports.decode = function (str) ","exports.encode = function (str) ","exports.compact = function (obj, references) ","exports.isRegExp = function (obj) ","exports.isBuffer = function (obj) "],"Dependencies":["./stringify","./parse","./utils","./utils"]},{"FileName":"node_modules\\qs\\lib\\index.js","LineCount":10,"CharCount":144,"Comments":[],"Functions":null,"Dependencies":["./stringify","./parse"]},{"FileName":"node_modules\\qs\\lib\\parse.js","LineCount":168,"CharCount":5312,"Comments":["    // Transform dot notation to bracket notation","    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;","    // The regex chunks","","    var parent = /^([^\\[\\]]*)/;","    // Get the parent","","    var segment = parent.exec(key);","    // Stash the parent if it exists","","    var keys = [];","        // If we aren't using plain objects, optionally prefix keys","        // that would overwrite object prototype properties","        if (!options.plainObjects \u0026\u0026 Object.prototype.hasOwnProperty(segment[1])) {","    // Loop through children appending to the array until we hit depth","","    var i = 0;","    // If there's a remainder, just add whatever is left","","    if (segment) {","    // Iterate over the keys and setup the new object","","    var keys = Object.keys(tempObj);"],"Functions":["var parseValues = function parseValues(str, options) ","var parseObject = function parseObject(chain, val, options) ","var parseKeys = function parseKeys(givenKey, val, options) ","module.exports = function (str, opts) ","    if (options.decoder !== null \u0026\u0026 options.decoder !== undefined \u0026\u0026 typeof options.decoder !== 'function') ","        throw new TypeError('Decoder has to be a function.');","    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;"],"Dependencies":["./utils"]},{"FileName":"node_modules\\qs\\lib\\stringify.js","LineCount":138,"CharCount":4049,"Comments":[],"Functions":["    brackets: function brackets(prefix) ","    indices: function indices(prefix, key) ","    repeat: function repeat(prefix) ","var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) ","    if (typeof filter === 'function') ","module.exports = function (object, opts) ","    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;","    var sort = typeof options.sort === 'function' ? options.sort : null;","    if (options.encoder !== null \u0026\u0026 options.encoder !== undefined \u0026\u0026 typeof options.encoder !== 'function') ","        throw new TypeError('Encoder has to be a function.');","    if (typeof options.filter === 'function') "],"Dependencies":["./utils"]},{"FileName":"node_modules\\qs\\lib\\utils.js","LineCount":165,"CharCount":4090,"Comments":["    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.","    // It has been adapted here for stricter adherence to RFC 3986","    if (str.length === 0) {","            c === 0x2D || // -","            c === 0x2E || // .","            c === 0x5F || // _","            c === 0x7E || // ~","            (c \u003e= 0x30 \u0026\u0026 c \u003c= 0x39) || // 0-9","            (c \u003e= 0x41 \u0026\u0026 c \u003c= 0x5A) || // a-z","            (c \u003e= 0x61 \u0026\u0026 c \u003c= 0x7A) // A-Z","        ) {"],"Functions":["var hexTable = (function () ","exports.arrayToObject = function (source, options) ","exports.merge = function (target, source, options) ","    return Object.keys(source).reduce(function (acc, key) ","exports.decode = function (str) ","exports.encode = function (str) ","exports.compact = function (obj, references) ","exports.isRegExp = function (obj) ","exports.isBuffer = function (obj) "],"Dependencies":null},{"FileName":"node_modules\\qs\\test\\index.js","LineCount":6,"CharCount":61,"Comments":[],"Functions":null,"Dependencies":null},{"FileName":"node_modules\\qs\\test\\parse.js","LineCount":424,"CharCount":16661,"Comments":[],"Functions":["test('parse()', function (t) ","    t.test('parses a simple string', function (st) ","    t.test('allows enabling dot notation', function (st) ","    t.test('only parses one level when depth = 1', function (st) ","    t.test('parses an explicit array', function (st) ","    t.test('parses a mix of simple and explicit arrays', function (st) ","    t.test('parses a nested array', function (st) ","    t.test('allows to specify array indices', function (st) ","    t.test('limits specific array indices to 20', function (st) ","    t.test('supports encoded = signs', function (st) ","    t.test('is ok with url encoded strings', function (st) ","    t.test('allows brackets in the value', function (st) ","    t.test('allows empty values', function (st) ","    t.test('transforms arrays to objects', function (st) ","    t.test('transforms arrays to objects (dot notation)', function (st) ","    t.test('correctly prunes undefined values when converting an array to an object', function (st) ","    t.test('supports malformed uri characters', function (st) ","    t.test('doesn\\'t produce empty keys', function (st) ","    t.test('cannot access Object prototype', function (st) ","    t.test('parses arrays of objects', function (st) ","    t.test('allows for empty strings in arrays', function (st) ","    t.test('compacts sparse arrays', function (st) ","    t.test('parses semi-parsed strings', function (st) ","    t.test('parses buffers correctly', function (st) ","    t.test('continues parsing when no parent is found', function (st) ","    t.test('does not error when parsing a very long array', function (st) ","        st.doesNotThrow(function ()  qs.parse(str); });","    t.test('should not throw when a native prototype has an enumerable property',  parallel: false }, function (st) {","    t.test('parses a string with an alternative string delimiter', function (st) ","    t.test('parses a string with an alternative RegExp delimiter', function (st) ","    t.test('does not use non-splittable objects as delimiters', function (st) ","    t.test('allows overriding parameter limit', function (st) ","    t.test('allows setting the parameter limit to Infinity', function (st) ","    t.test('allows overriding array limit', function (st) ","    t.test('allows disabling array parsing', function (st) ","    t.test('parses an object', function (st) ","    t.test('parses an object in dot notation', function (st) ","    t.test('parses an object and not child values', function (st) ","    t.test('does not blow up when Buffer global is missing', function (st) ","    t.test('does not crash when parsing circular references', function (st) ","        st.doesNotThrow(function () ","    t.test('parses plain objects correctly', function (st) ","    t.test('parses dates correctly', function (st) ","    t.test('parses regular expressions correctly', function (st) ","    t.test('can allow overwriting prototype properties', function (st) ","    t.test('can return plain objects', function (st) ","    t.test('can parse with custom encoding', function (st) ","            decoder: function (str) ","    t.test('throws error with wrong decoder', function (st) ","        st.throws(function () ","        }, new TypeError('Decoder has to be a function.'));"],"Dependencies":["tape","../","iconv-lite"]},{"FileName":"node_modules\\qs\\test\\stringify.js","LineCount":306,"CharCount":11746,"Comments":[],"Functions":["test('stringify()', function (t) ","    t.test('stringifies a querystring object', function (st) ","    t.test('stringifies a nested object', function (st) ","    t.test('stringifies a nested object with dots notation', function (st) ","    t.test('stringifies an array value', function (st) ","    t.test('omits nulls when asked', function (st) ","    t.test('omits nested nulls when asked', function (st) ","    t.test('omits array indices when asked', function (st) ","    t.test('stringifies a nested array value', function (st) ","    t.test('stringifies a nested array value with dots notation', function (st) ","    t.test('stringifies an object inside an array', function (st) ","    t.test('stringifies an array with mixed objects and primitives', function (st) ","    t.test('stringifies an object inside an array with dots notation', function (st) ","    t.test('does not omit object keys when indices = false', function (st) ","    t.test('uses indices notation for arrays when indices=true', function (st) ","    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) ","    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) ","    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) ","    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) ","    t.test('stringifies a complicated object', function (st) ","    t.test('stringifies an empty value', function (st) ","    t.test('stringifies an empty object', function (st) ","    t.test('returns an empty string for invalid input', function (st) ","    t.test('stringifies an object with an empty object as a child', function (st) ","    t.test('drops keys with a value of undefined', function (st) ","    t.test('url encodes values', function (st) ","    t.test('stringifies a date', function (st) ","    t.test('stringifies the weird object from qs', function (st) ","    t.test('skips properties that are part of the object prototype', function (st) ","    t.test('stringifies boolean values', function (st) ","    t.test('stringifies buffer values', function (st) ","    t.test('stringifies an object using an alternative delimiter', function (st) ","    t.test('doesn\\'t blow up when Buffer global is missing', function (st) ","    t.test('selects properties when filter=array', function (st) ","    t.test('supports custom representations when filter=function', function (st) ","        var filterFunc = function (prefix, value) ","    t.test('can disable uri encoding', function (st) ","    t.test('can sort the keys', function (st) ","        var sort = function (a, b)  return a.localeCompare(b); };","    t.test('can sort the keys at depth 3 or more too', function (st) ","        var sort = function (a, b)  return a.localeCompare(b); };","    t.test('can stringify with custom encoding', function (st) ","            encoder: function (str) ","    t.test('throws error with wrong encoder', function (st) ","        st.throws(function () ","        }, new TypeError('Encoder has to be a function.'));","    }, function (st) ","            encoder: function (buffer) "],"Dependencies":["tape","../","iconv-lite"]},{"FileName":"node_modules\\qs\\test\\utils.js","LineCount":10,"CharCount":233,"Comments":[],"Functions":["test('merge()', function (t) "],"Dependencies":["tape","../lib/utils"]},{"FileName":"node_modules\\range-parser\\index.js","LineCount":159,"CharCount":2647,"Comments":["/*!"," * range-parser"," * Copyright(c) 2012-2014 TJ Holowaychuk"," * Copyright(c) 2015-2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = rangeParser","/**"," * Parse \"Range\" header `str` relative to the given file `size`."," *"," * @param {Number} size"," * @param {String} str"," * @param {Object} [options]"," * @return {Array}"," * @public"," */","","function rangeParser (size, str, options) {","  // split the range string","  var arr = str.slice(index + 1).split(',')","  // add ranges type","  ranges.type = str.slice(0, index)","  // parse all ranges","  for (var i = 0; i \u003c arr.length; i++) {","    // -nnn","    if (isNaN(start)) {","    // nnn-","    } else if (isNaN(end)) {","    // limit last-byte-pos to current length","    if (end \u003e size - 1) {","    // invalid or unsatisifiable","    if (isNaN(start) || isNaN(end) || start \u003e end || start \u003c 0) {","    // add range","    ranges.push({","    // unsatisifiable","    return -1","/**"," * Combine overlapping \u0026 adjacent ranges."," * @private"," */","","function combineRanges (ranges) {","      // next range","      ordered[++j] = range","      // extend range","      current.end = range.end","  // trim ordered array","  ordered.length = j + 1","  // generate combined range","  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)","  // copy ranges type","  combined.type = ranges.type","/**"," * Map function to add index value to ranges."," * @private"," */","","function mapWithIndex (range, index) {","/**"," * Map function to remove index value from ranges."," * @private"," */","","function mapWithoutIndex (range) {","/**"," * Sort function to sort ranges by index."," * @private"," */","","function sortByRangeIndex (a, b) {","/**"," * Sort function to sort ranges by start position."," * @private"," */","","function sortByRangeStart (a, b) {"],"Functions":["function rangeParser (size, str, options) ","function combineRanges (ranges) "," * Map function to add index value to ranges.","function mapWithIndex (range, index) "," * Map function to remove index value from ranges.","function mapWithoutIndex (range) "," * Sort function to sort ranges by index.","function sortByRangeIndex (a, b) "," * Sort function to sort ranges by start position.","function sortByRangeStart (a, b) "],"Dependencies":null},{"FileName":"node_modules\\raw-body\\index.js","LineCount":321,"CharCount":6439,"Comments":["/*!"," * raw-body"," * Copyright(c) 2013-2014 Jonathan Ong"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var bytes = require('bytes')","/**"," * Module exports."," * @public"," */","","module.exports = getRawBody","/**"," * Module variables."," * @private"," */","","var iconvEncodingMessageRegExp = /^Encoding not recognized: /","/**"," * Get the decoder for a given encoding."," *"," * @param {string} encoding"," * @private"," */","","function getDecoder (encoding) {","    // error getting decoder","    if (!iconvEncodingMessageRegExp.test(e.message)) throw e","    // the encoding was not found","    throw createError(415, 'specified encoding unsupported', 'encoding.unsupported', {","/**"," * Get the raw body of a stream (typically HTTP)."," *"," * @param {object} stream"," * @param {object|string|function} [options]"," * @param {function} [callback]"," * @public"," */","","function getRawBody (stream, options, callback) {","    // short cut for encoding","    opts = {","  // validate callback is a function, if provided","  if (done !== undefined \u0026\u0026 typeof done !== 'function') {","  // require the callback without promises","  if (!done \u0026\u0026 !global.Promise) {","  // get encoding","  var encoding = opts.encoding !== true","  // convert the limit to an integer","  var limit = bytes.parse(opts.limit)","  // convert the expected length to an integer","  var length = opts.length != null \u0026\u0026 !isNaN(opts.length)","    // classic callback style","    return readStream(stream, encoding, length, limit, done)","/**"," * Halt a stream."," *"," * @param {Object} stream"," * @private"," */","","function halt (stream) {","  // unpipe everything from the stream","  unpipe(stream)","  // pause stream","  if (typeof stream.pause === 'function') {","/**"," * Make a serializable error object."," *"," * To create serializable errors you must re-set message so"," * that it is enumerable and you must re configure the type"," * property so that is writable and enumerable."," *"," * @param {number} status"," * @param {string} message"," * @param {string} type"," * @param {object} props"," * @private"," */","","function createError (status, message, type, props) {","  // capture stack trace","  Error.captureStackTrace(error, createError)","  // set free-form properties","  for (var prop in props) {","  // set message","  error.message = message","  // set status","  error.status = status","  // set type","  Object.defineProperty(error, 'type', {","/**"," * Read the data from the stream."," *"," * @param {object} stream"," * @param {string} encoding"," * @param {number} length"," * @param {number} limit"," * @param {function} callback"," * @public"," */","","function readStream (stream, encoding, length, limit, callback) {","  // check the length and limit options.","  // note: we intentionally leave the stream paused,","  // so users should handle the stream themselves.","  if (limit !== null \u0026\u0026 length !== null \u0026\u0026 length \u003e limit) {","  // streams1: assert request encoding is buffer.","  // streams2+: assert the stream encoding is buffer.","  //   stream._decoder: streams1","  //   state.encoding: streams2","  //   state.decoder: streams2, specifically \u003c 0.10.6","  var state = stream._readableState","    // developer error","    return done(createError(500, 'stream encoding should not be set', 'stream.encoding.set'))","  // attach listeners","  stream.on('aborted', onAborted)","  // mark sync section complete","  sync = false","    // copy arguments","    for (var i = 0; i \u003c args.length; i++) {","    // mark complete","    complete = true","        // halt the stream on error","        halt(stream)"],"Functions":["function getDecoder (encoding) "," * @param object|string|function} [options]"," * @param function} [callback]","function getRawBody (stream, options, callback) ","  if (typeof options === 'function') ","  // validate callback is a function, if provided","  if (done !== undefined \u0026\u0026 typeof done !== 'function') ","    throw new TypeError('argument callback must be a function')","  return new Promise(function executor (resolve, reject) ","    readStream(stream, encoding, length, limit, function onRead (err, buf) ","function halt (stream) ","  if (typeof stream.pause === 'function') ","function createError (status, message, type, props) "," * @param function} callback","function readStream (stream, encoding, length, limit, callback) ","  function done () ","    function invokeCallback () ","  function onAborted () ","  function onData (chunk) ","  function onEnd (err) ","  function cleanup () "],"Dependencies":["bytes","iconv-lite","unpipe"]},{"FileName":"node_modules\\readable-stream\\duplex.js","LineCount":2,"CharCount":51,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_duplex.js"]},{"FileName":"node_modules\\readable-stream\\lib\\_stream_duplex.js","LineCount":90,"CharCount":2722,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// a duplex stream is just a stream that is both readable and writable.","// Since JS doesn't have multiple prototypal inheritance, this class","// prototypally inherits from Readable, and then parasitically from","// Writable.","","module.exports = Duplex;","/*\u003creplacement\u003e*/","var objectKeys = Object.keys || function (obj) {","/*\u003c/replacement\u003e*/","","","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var Readable = require('./_stream_readable');","// the no-half-open enforcer","function onend() {","  // if we allow half-open state, or if the writable side ended,","  // then we're ok.","  if (this.allowHalfOpen || this._writableState.ended)","  // no more data can be written.","  // But allow more writes to happen in this tick.","  process.nextTick(this.end.bind(this));"],"Functions":["var objectKeys = Object.keys || function (obj) ","forEach(objectKeys(Writable.prototype), function(method) ","function Duplex(options) ","function onend() ","function forEach (xs, f) "],"Dependencies":["core-util-is","inherits","./_stream_readable","./_stream_writable"]},{"FileName":"node_modules\\readable-stream\\lib\\_stream_passthrough.js","LineCount":47,"CharCount":1681,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// a passthrough stream.","// basically just the most minimal sort of Transform stream.","// Every written chunk gets output as-is.","","module.exports = PassThrough;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","util.inherits(PassThrough, Transform);"],"Functions":["function PassThrough(options) ","PassThrough.prototype._transform = function(chunk, encoding, cb) "],"Dependencies":["./_stream_transform","core-util-is","inherits"]},{"FileName":"node_modules\\readable-stream\\lib\\_stream_readable.js","LineCount":952,"CharCount":25008,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","module.exports = Readable;","/*\u003creplacement\u003e*/","var isArray = require('isarray');","/*\u003c/replacement\u003e*/","","","/*\u003creplacement\u003e*/","var Buffer = require('buffer').Buffer;","/*\u003c/replacement\u003e*/","","Readable.ReadableState = ReadableState;","/*\u003creplacement\u003e*/","if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {","/*\u003c/replacement\u003e*/","","var Stream = require('stream');","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var StringDecoder;","/*\u003creplacement\u003e*/","var debug = require('util');","/*\u003c/replacement\u003e*/","","","util.inherits(Readable, Stream);","  // the point at which it stops calling _read() to fill the buffer","  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"","  var hwm = options.highWaterMark;","  // cast to ints.","  this.highWaterMark = ~~this.highWaterMark;","  // a flag to be able to tell if the onwrite cb is called immediately,","  // or on a later tick.  We set this to true at first, because any","  // actions that shouldn't happen until \"later\" should generally also","  // not happen before the first write call.","  this.sync = true;","  // whenever we return null, then we set a flag to say","  // that we're awaiting a 'readable' event emission.","  this.needReadable = false;","  // object stream flag. Used to make read(n) ignore n and to","  // make all the buffer merging and length checks go away","  this.objectMode = !!options.objectMode;","  // Crypto is kind of old and crusty.  Historically, its default string","  // encoding is 'binary' so we have to make this configurable.","  // Everything else in the universe uses 'utf8', though.","  this.defaultEncoding = options.defaultEncoding || 'utf8';","  // when piping, we only care about 'readable' events that happen","  // after read()ing all the bytes and not getting any pushback.","  this.ranOut = false;","  // the number of writers that are awaiting a drain event in .pipe()s","  this.awaitDrain = 0;","  // if true, a maybeReadMore has been scheduled","  this.readingMore = false;","  // legacy","  this.readable = true;","// Manually shove something into the read() buffer.","// This returns true if the highWaterMark has not been hit yet,","// similar to how Writable.write() returns true if you should","// write() some more.","Readable.prototype.push = function(chunk, encoding) {","// Unshift should *always* be something directly out of read()","Readable.prototype.unshift = function(chunk) {","      // if we want the data now, just emit it.","      if (state.flowing \u0026\u0026 state.length === 0 \u0026\u0026 !state.sync) {","        // update the buffer info.","        state.length += state.objectMode ? 1 : chunk.length;","// if it's past the high water mark, we can push in some more.","// Also, if we have no data yet, we can stand some","// more bytes.  This is to work around cases where hwm=0,","// such as the repl.  Also, if the push() triggered a","// readable event, and the user called read(largeNumber) such that","// needReadable was set, then we ought to push more, so that another","// 'readable' event will be triggered.","function needMoreData(state) {","// backwards compatibility.","Readable.prototype.setEncoding = function(enc) {","// Don't raise the hwm \u003e 128MB","var MAX_HWM = 0x800000;","    // Get the next highest power of 2","    n--;","    // only flow one buffer at a time","    if (state.flowing \u0026\u0026 state.buffer.length)","  // If we're asking for more than the target buffer level,","  // then raise the water mark.  Bump up to the next highest","  // power of 2, to prevent increasing it excessively in tiny","  // amounts.","  if (n \u003e state.highWaterMark)","  // don't have that much.  return null, unless we've ended.","  if (n \u003e state.length) {","// you can override either this method, or the async _read(n) below.","Readable.prototype.read = function(n) {","  // if we're doing read(0) to trigger a readable event, but we","  // already have a bunch of data in the buffer, then just trigger","  // the 'readable' event and move on.","  if (n === 0 \u0026\u0026","  // if we've ended, and we're now clear, then finish it up.","  if (n === 0 \u0026\u0026 state.ended) {","  // All the actual chunk generation logic needs to be","  // *below* the call to _read.  The reason is that in certain","  // synthetic stream cases, such as passthrough streams, _read","  // may be a completely synchronous operation which may change","  // the state of the read buffer, providing enough data when","  // before there was *not* enough.","  //","  // So, the steps are:","  // 1. Figure out what the state of things will be after we do","  // a read from the buffer.","  //","  // 2. If that resulting state will trigger a _read, then call _read.","  // Note that this may be asynchronous, or synchronous.  Yes, it is","  // deeply ugly to write APIs this way, but that still doesn't mean","  // that the Readable class should behave improperly, as streams are","  // designed to be sync/async agnostic.","  // Take note if the _read call is sync or async (ie, if the read call","  // has returned yet), so that we know whether or not it's safe to emit","  // 'readable' etc.","  //","  // 3. Actually pull the requested chunks out of the buffer and return.","","  // if we need a readable event, then we need to do some reading.","  var doRead = state.needReadable;","  // if we currently have less than the highWaterMark, then also read some","  if (state.length === 0 || state.length - n \u003c state.highWaterMark) {","  // however, if we've ended, then there's no point, and if we're already","  // reading, then it's unnecessary.","  if (state.ended || state.reading) {","    // if the length is currently zero, then we *need* a readable event.","    if (state.length === 0)","    // call internal read method","    this._read(state.highWaterMark);","  // If _read pushed data synchronously, then `reading` will be false,","  // and we need to re-evaluate how much data we can return to the user.","  if (doRead \u0026\u0026 !state.reading)","  // If we have nothing in the buffer, then we want to know","  // as soon as we *do* get something into the buffer.","  if (state.length === 0 \u0026\u0026 !state.ended)","  // If we tried to read() past the EOF, then emit end on the next tick.","  if (nOrig !== n \u0026\u0026 state.ended \u0026\u0026 state.length === 0)","  // emit 'readable' now to make sure it gets picked up.","  emitReadable(stream);","// Don't emit readable right away in sync mode, because this can trigger","// another read() call =\u003e stack overflow.  This way, it might trigger","// a nextTick recursion warning, but that's not so bad.","function emitReadable(stream) {","// at this point, the user has presumably seen the 'readable' event,","// and called read() to consume some data.  that may have triggered","// in turn another _read(n) call, in which case reading = true if","// it's in progress.","// However, if we're not ended, or reading, and the length \u003c hwm,","// then go ahead and try to read some more preemptively.","function maybeReadMore(stream, state) {","      // didn't get any data, stop spinning.","      break;","// abstract method.  to be overridden in specific implementation classes.","// call cb(er, data) where data is \u003c= n in length.","// for virtual (non-string, non-buffer) streams, \"length\" is somewhat","// arbitrary, and perhaps not very meaningful.","Readable.prototype._read = function(n) {","  // when the dest drains, it reduces the awaitDrain counter","  // on the source.  This would be more elegant with a .once()","  // handler in flow(), but adding and removing repeatedly is","  // too slow.","  var ondrain = pipeOnDrain(src);","    // cleanup event handlers once the pipe is broken","    dest.removeListener('close', onclose);","    // if the reader is waiting for a drain event from this","    // specific writer, then it would cause it to never start","    // flowing again.","    // So, if this is awaiting a drain, then we just call it now.","    // If we don't know, then assume that we are waiting for one.","    if (state.awaitDrain \u0026\u0026","  // if the dest has an error, then stop piping into it.","  // however, don't suppress the throwing behavior for this.","  function onerror(er) {","  // This is a brutally ugly hack to make sure that our error handler","  // is attached before any userland ones.  NEVER DO THIS.","  if (!dest._events || !dest._events.error)","  // Both close and finish should trigger unpipe, but only once.","  function onclose() {","  // tell the dest that it's being piped to","  dest.emit('pipe', src);","  // start the flow if it hasn't been started already.","  if (!state.flowing) {","  // if we're not piping anywhere, then do nothing.","  if (state.pipesCount === 0)","  // just one destination.  most common case.","  if (state.pipesCount === 1) {","    // passed in one, but it's not the right one.","    if (dest \u0026\u0026 dest !== state.pipes)","    // got a match.","    state.pipes = null;","  // slow case. multiple pipe destinations.","","  if (!dest) {","    // remove all.","    var dests = state.pipes;","  // try to find the right one.","  var i = indexOf(state.pipes, dest);","// set up data events if they are asked for","// Ensure readable listeners eventually get something","Readable.prototype.on = function(ev, fn) {","  // If listening to data, and it has not explicitly been paused,","  // then call resume to start the flow of data on the next tick.","  if (ev === 'data' \u0026\u0026 false !== this._readableState.flowing) {","// pause() and resume() are remnants of the legacy readable stream API","// If the user uses them, then switch into old mode.","Readable.prototype.resume = function() {","// wrap an old-style stream as the async data source.","// This is *not* part of the readable stream interface.","// It is an ugly unfortunate mess of history.","Readable.prototype.wrap = function(stream) {","  // proxy all the other methods.","  // important when wrapping filters and duplexes.","  for (var i in stream) {","  // proxy certain important events.","  var events = ['error', 'close', 'destroy', 'pause', 'resume'];","  // when we try to consume some more bytes, simply unpause the","  // underlying stream.","  self._read = function(n) {","// exposed for testing purposes only.","Readable._fromList = fromList;","// Pluck off n bytes from an array of buffers.","// Length is the combined lengths of all the buffers in the list.","function fromList(n, state) {","  // nothing in the list, definitely empty.","  if (list.length === 0)","    // read it all, truncate the array.","    if (stringMode)","    // read just some of it.","    if (n \u003c list[0].length) {","      // just take a part of the first list item.","      // slice is the same for buffers and strings.","      var buf = list[0];","      // first list is a perfect match","      ret = list.shift();","      // complex case.","      // we have enough to cover it, but it spans past the first buffer.","      if (stringMode)","  // If we get here before consuming all the bytes, then that is a","  // bug in node.  Should never happen.","  if (state.length \u003e 0)","      // Check that we didn't get one last unshift.","      if (!state.endEmitted \u0026\u0026 state.length === 0) {"],"Functions":["if (!EE.listenerCount) EE.listenerCount = function(emitter, type) ","  debug = function () };","function ReadableState(options, stream) ","function Readable(options) ","Readable.prototype.push = function(chunk, encoding) ","Readable.prototype.unshift = function(chunk) ","function readableAddChunk(stream, state, chunk, encoding, addToFront) ","function needMoreData(state) ","Readable.prototype.setEncoding = function(enc) ","function roundUpToNextPowerOf2(n) ","function howMuchToRead(n, state) ","Readable.prototype.read = function(n) ","function chunkInvalid(state, chunk) ","function onEofChunk(stream, state) ","function emitReadable(stream) ","      process.nextTick(function() ","function emitReadable_(stream) ","function maybeReadMore(stream, state) ","    process.nextTick(function() ","function maybeReadMore_(stream, state) ","Readable.prototype._read = function(n) ","Readable.prototype.pipe = function(dest, pipeOpts) ","  function onunpipe(readable) ","  function onend() ","  function cleanup() ","  function ondata(chunk) ","  function onerror(er) ","  function onclose() ","  function onfinish() ","  function unpipe() ","function pipeOnDrain(src) ","  return function() ","Readable.prototype.unpipe = function(dest) ","Readable.prototype.on = function(ev, fn) ","        process.nextTick(function() ","Readable.prototype.resume = function() ","function resume(stream, state) ","    process.nextTick(function() ","function resume_(stream, state) ","Readable.prototype.pause = function() ","function flow(stream) ","Readable.prototype.wrap = function(stream) ","  stream.on('end', function() ","  stream.on('data', function(chunk) ","      this[i] = function(method)  return function() {","  forEach(events, function(ev) ","  self._read = function(n) ","function fromList(n, state) ","function endReadable(stream) ","    process.nextTick(function() ","function forEach (xs, f) ","function indexOf (xs, x) "],"Dependencies":["isarray","buffer","events","stream","core-util-is","inherits","util","./_stream_duplex","string_decoder/","./_stream_duplex","string_decoder/"]},{"FileName":"node_modules\\readable-stream\\lib\\_stream_transform.js","LineCount":210,"CharCount":7141,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","","// a transform stream is a readable/writable stream where you do","// something with the data.  Sometimes it's called a \"filter\",","// but that's not a great name for it, since that implies a thing where","// some bits pass through, and others are simply ignored.  (That would","// be a valid example of a transform, of course.)","//","// While the output is causally related to the input, it's not a","// necessarily symmetric or synchronous transformation.  For example,","// a zlib stream might take multiple plain-text writes(), and then","// emit a single compressed chunk some time in the future.","//","// Here's how this works:","//","// The Transform stream has all the aspects of the readable and writable","// stream classes.  When you write(chunk), that calls _write(chunk,cb)","// internally, and returns false if there's a lot of pending writes","// buffered up.  When you call read(), that calls _read(n) until","// there's enough pending readable data buffered up.","//","// In a transform stream, the written data is placed in a buffer.  When","// _read(n) is called, it transforms the queued up data, calling the","// buffered _write cb's as it consumes chunks.  If consuming a single","// written chunk would result in multiple output chunks, then the first","// outputted bit calls the readcb, and subsequent chunks just go into","// the read buffer, and will cause it to emit 'readable' if necessary.","//","// This way, back-pressure is actually determined by the reading side,","// since _read has to be called to start processing a new chunk.  However,","// a pathological inflate type of transform can cause excessive buffering","// here.  For example, imagine a stream where every byte of input is","// interpreted as an integer from 0-255, and then results in that many","// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in","// 1kb of data being output.  In this case, you could write a very small","// amount of input, and end up with a very large amount of output.  In","// such a pathological inflating mechanism, there'd be no way to tell","// the system to stop doing the transform.  A single 4MB write could","// cause the system to run out of memory.","//","// However, even in such a pathological case, only a single written chunk","// would be consumed, and then the rest would wait (un-transformed) until","// the results of the previous transformed chunk were consumed.","","module.exports = Transform;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","util.inherits(Transform, Duplex);","  // when the writable side finishes, then flush out anything remaining.","  var stream = this;","  // start out asking for a readable event once data is transformed.","  this._readableState.needReadable = true;","  // we have implemented the _read method, and done the other things","  // that Readable wants before the first _read call, so unset the","  // sync guard flag.","  this._readableState.sync = false;","// This is the part where you do stuff!","// override this function in implementation classes.","// 'chunk' is an input chunk.","//","// Call `push(newChunk)` to pass along transformed output","// to the readable side.  You may call 'push' zero or more times.","//","// Call `cb(err)` when you are done with this chunk.  If you pass","// an error, then that'll put the hurt on the whole operation.  If you","// never call cb(), then you'll never get another chunk.","Transform.prototype._transform = function(chunk, encoding, cb) {","// Doesn't matter what the args are here.","// _transform does all the work.","// That we got here means that the readable side wants more data.","Transform.prototype._read = function(n) {","    // mark that we need a transform, so that any data that comes in","    // will get processed, now that we've asked for it.","    ts.needTransform = true;","  // if there's nothing in the write buffer, then that means","  // that nothing more will ever be provided","  var ws = stream._writableState;"],"Functions":["function TransformState(options, stream) ","  this.afterTransform = function(er, data) ","function afterTransform(stream, er, data) ","function Transform(options) ","  this.once('prefinish', function() ","      this._flush(function(er) ","Transform.prototype.push = function(chunk, encoding) ","// override this function in implementation classes.","Transform.prototype._transform = function(chunk, encoding, cb) ","Transform.prototype._write = function(chunk, encoding, cb) ","Transform.prototype._read = function(n) ","function done(stream, er) "],"Dependencies":["./_stream_duplex","core-util-is","inherits"]},{"FileName":"node_modules\\readable-stream\\lib\\_stream_writable.js","LineCount":478,"CharCount":12592,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","// A bit simpler than readable streams.","// Implement an async ._write(chunk, cb), and it'll handle all","// the drain event emission and buffering.","","module.exports = Writable;","/*\u003creplacement\u003e*/","var Buffer = require('buffer').Buffer;","/*\u003c/replacement\u003e*/","","Writable.WritableState = WritableState;","/*\u003creplacement\u003e*/","var util = require('core-util-is');","/*\u003c/replacement\u003e*/","","var Stream = require('stream');","  // the point at which write() starts returning false","  // Note: 0 is a valid value, means that we always return false if","  // the entire buffer is not flushed immediately on write()","  var hwm = options.highWaterMark;","  // object stream flag to indicate whether or not this stream","  // contains buffers or objects.","  this.objectMode = !!options.objectMode;","  // cast to ints.","  this.highWaterMark = ~~this.highWaterMark;","  // at the start of calling end()","  this.ending = false;","  // when end() has been called, and returned","  this.ended = false;","  // when 'finish' is emitted","  this.finished = false;","  // should we decode strings into buffers before passing to _write?","  // this is here so that some node-core streams can optimize string","  // handling at a lower level.","  var noDecode = options.decodeStrings === false;","  // Crypto is kind of old and crusty.  Historically, its default string","  // encoding is 'binary' so we have to make this configurable.","  // Everything else in the universe uses 'utf8', though.","  this.defaultEncoding = options.defaultEncoding || 'utf8';","  // not an actual buffer we keep track of, but a measurement","  // of how much we're waiting to get pushed to some underlying","  // socket or file.","  this.length = 0;","  // a flag to see when we're in the middle of a write.","  this.writing = false;","  // when true all writes will be buffered until .uncork() call","  this.corked = 0;","  // a flag to be able to tell if the onwrite cb is called immediately,","  // or on a later tick.  We set this to true at first, because any","  // actions that shouldn't happen until \"later\" should generally also","  // not happen before the first write call.","  this.sync = true;","  // a flag to know if we're processing previously buffered items, which","  // may call the _write() callback in the same tick, so that we don't","  // end up in an overlapped onwrite situation.","  this.bufferProcessing = false;","  // the callback that's passed to _write(chunk,cb)","  this.onwrite = function(er) {","  // the callback that the user supplies to write(chunk,encoding,cb)","  this.writecb = null;","  // the amount that is being written when _write is called.","  this.writelen = 0;","  // number of pending user-supplied write callbacks","  // this must be 0 before 'finish' can be emitted","  this.pendingcb = 0;","  // emit prefinish if the only thing we're waiting for is _write cbs","  // This is relevant for synchronous Transform streams","  this.prefinished = false;","  // True if the error was already emitted and should not be thrown again","  this.errorEmitted = false;","  // Writable ctor is applied to Duplexes, though they're not","  // instanceof Writable, they're instanceof Readable.","  if (!(this instanceof Writable) \u0026\u0026 !(this instanceof Duplex))","  // legacy.","  this.writable = true;","// Otherwise people can pipe Writable streams, which is just wrong.","Writable.prototype.pipe = function() {","  // TODO: defer error events consistently everywhere, not just the cb","  stream.emit('error', er);","// If we get something that is not a buffer, string, null, or undefined,","// and we're not in objectMode, then that's an error.","// Otherwise stream chunks are all considered to be of length=1, and the","// watermarks determine how many objects to keep in the buffer, rather than","// how many bytes or characters.","function validChunk(stream, state, chunk, cb) {","// if we're already writing something, then just put this","// in the queue, and wait our turn.  Otherwise, call _write","// If we return false, then we need a drain event, so set that flag.","function writeOrBuffer(stream, state, chunk, encoding, cb) {","  // we must ensure that previous needDrain will not be reset to false.","  if (!ret)","    // Check if we're actually ready to finish, but don't emit yet","    var finished = needFinish(stream, state);","// Must force callback to be called on nextTick, so that we don't","// emit 'drain' before the write() consumer gets the 'false' return","// value, and has a chance to attach a 'drain' listener.","function onwriteDrain(stream, state) {","// if there's something in the buffer waiting, then process it","function clearBuffer(stream, state) {","    // Fast case, write everything using _writev()","    var cbs = [];","    // count the one we are adding, as well.","    // TODO(isaacs) clean this up","    state.pendingcb++;","    // Clear buffer","    state.buffer = [];","    // Slow case, write chunks one-by-one","    for (var c = 0; c \u003c state.buffer.length; c++) {","      // if we didn't call the onwrite immediately, then","      // it means that we need to wait until it does.","      // also, that means that the chunk and cb are currently","      // being processed, so move the buffer counter past them.","      if (state.writing) {","  // .end() fully uncorks","  if (state.corked) {","  // ignore unnecessary end() calls.","  if (!state.ending \u0026\u0026 !state.finished)"],"Functions":["function WriteReq(chunk, encoding, cb) ","function WritableState(options, stream) ","  this.onwrite = function(er) ","function Writable(options) ","Writable.prototype.pipe = function() ","function writeAfterEnd(stream, state, cb) ","  process.nextTick(function() ","function validChunk(stream, state, chunk, cb) ","    process.nextTick(function() ","Writable.prototype.write = function(chunk, encoding, cb) ","    cb = function() };","Writable.prototype.cork = function() ","Writable.prototype.uncork = function() ","function decodeChunk(state, chunk, encoding) ","function writeOrBuffer(stream, state, chunk, encoding, cb) ","function doWrite(stream, state, writev, len, chunk, encoding, cb) ","function onwriteError(stream, state, sync, er, cb) ","    process.nextTick(function() ","function onwriteStateUpdate(state) ","function onwrite(stream, er) ","      process.nextTick(function() ","function afterWrite(stream, state, finished, cb) ","function onwriteDrain(stream, state) ","function clearBuffer(stream, state) ","    doWrite(stream, state, true, state.length, state.buffer, '', function(err) ","Writable.prototype._write = function(chunk, encoding, cb) ","Writable.prototype.end = function(chunk, encoding, cb) ","function needFinish(stream, state) ","function prefinish(stream, state) ","function finishMaybe(stream, state) ","function endWritable(stream, state, cb) "],"Dependencies":["buffer","core-util-is","inherits","stream","./_stream_duplex","./_stream_duplex"]},{"FileName":"node_modules\\readable-stream\\passthrough.js","LineCount":2,"CharCount":56,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_passthrough.js"]},{"FileName":"node_modules\\readable-stream\\readable.js","LineCount":11,"CharCount":460,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_readable.js","stream","./lib/_stream_writable.js","./lib/_stream_duplex.js","./lib/_stream_transform.js","./lib/_stream_passthrough.js","stream"]},{"FileName":"node_modules\\readable-stream\\transform.js","LineCount":2,"CharCount":54,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_transform.js"]},{"FileName":"node_modules\\readable-stream\\writable.js","LineCount":2,"CharCount":53,"Comments":[],"Functions":null,"Dependencies":["./lib/_stream_writable.js"]},{"FileName":"node_modules\\regexp-clone\\index.js","LineCount":21,"CharCount":443,"Comments":[],"Functions":["function isRegExp (o) ","module.exports = exports = function (regexp) "],"Dependencies":null},{"FileName":"node_modules\\regexp-clone\\test\\index.js","LineCount":113,"CharCount":2204,"Comments":[],"Functions":["describe('regexp-clone', function()","  function hasEqualSource (a, b) ","  function isInsensitive (a) ","  function isGlobal (a) ","  function isMultiline (a) ","  function insensitiveFlag (a) ","  function globalFlag (a) ","  function multilineFlag (a) ","  describe('literals', function()","    it('insensitive flag', function(done)","    it('global flag', function(done)","    it('multiline flag', function(done)","    it('no flags', function(done)","    it('all flags', function(done)","  describe('instances', function()","    it('insensitive flag', function(done)","    it('global flag', function(done)","    it('multiline flag', function(done)","    it('no flags', function(done)","    it('all flags', function(done)"],"Dependencies":["assert","../"]},{"FileName":"node_modules\\repeating\\cli.js","LineCount":37,"CharCount":638,"Comments":[],"Functions":["function help() "],"Dependencies":["./package.json","./"]},{"FileName":"node_modules\\repeating\\index.js","LineCount":25,"CharCount":372,"Comments":[],"Functions":["module.exports = function (str, n) "],"Dependencies":["is-finite"]},{"FileName":"node_modules\\require_optional\\index.js","LineCount":110,"CharCount":3196,"Comments":["  // Current location","  var location = __dirname;","  // Check if we have a parent","  if(module.parent) {","  // Locate this module's package.json file","  var location = find_package_json(location);","  // Read the package.json file","  var object = JSON.parse(fs.readFileSync(f('%s/package.json', location)));","  // Is the name defined by interal file references","  var parts = name.split(/\\//);","","  // Optional dependencies exist","  if(!object.peerOptionalDependencies) {","  // Unpack the expected version","  var expectedVersions = object.peerOptionalDependencies[parts[0]];","  // The resolved package","  var moduleEntry = undefined;","  // Module file","  var moduleEntryFile = name;","    // Validate if it's possible to read the module","    moduleEntry = require(moduleEntryFile);","    // Attempt to resolve in top level package","    try {","      // Get the module entry file","      moduleEntryFile = resolveFrom(process.cwd(), name);","      // Attempt to resolve the module","      moduleEntry = require(moduleEntryFile);","  // Resolve the location of the module's package.json file","  var location = find_package_json(require.resolve(moduleEntryFile));","  // Read the module file","  var dependentOnModule = JSON.parse(fs.readFileSync(f('%s/package.json', location)));","  // Get the version","  var version = dependentOnModule.version;","  // Validate if the found module satisfies the version id","  if(semver.satisfies(version, expectedVersions) == false","  // Satifies the module requirement","  return moduleEntry;"],"Functions":["var find_package_json = function(location) ","var require_optional = function(name, options) ","require_optional.exists = function(name) "],"Dependencies":["path","fs","util","resolve-from","semver"]},{"FileName":"node_modules\\require_optional\\test\\require_optional_tests.js","LineCount":43,"CharCount":1256,"Comments":[],"Functions":["describe('Require Optional', function() ","  describe('top level require', function() ","    it('should correctly require co library', function() ","    it('should fail to require es6-promise library', function() ","    it('should ignore optional library not defined', function() ","  describe('internal module file require', function() ","    it('should correctly require co library', function() ","  describe('top level resolve', function() ","    it('should correctly use exists method', function() "],"Dependencies":["assert","../"]},{"FileName":"node_modules\\resolve-from\\index.js","LineCount":24,"CharCount":509,"Comments":[],"Functions":["module.exports = function (fromDir, moduleId) "],"Dependencies":["path","module"]},{"FileName":"node_modules\\semver\\semver.js","LineCount":1204,"CharCount":31763,"Comments":["// The debug function is excluded entirely from the minified version.","/* nomin */ var debug;","/* nomin */ var debug;","/* nomin */ if (typeof process === 'object' \u0026\u0026","    /* nomin */ process.env \u0026\u0026","    /* nomin */ process.env.NODE_DEBUG \u0026\u0026","    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))","  /* nomin */ debug = function() {","    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);","    /* nomin */ args.unshift('SEMVER');","    /* nomin */ console.log.apply(console, args);","    /* nomin */ };","/* nomin */ else","  /* nomin */ debug = function() {};","","// Note: this is the semver.org version of the spec that it implements","// Note: this is the semver.org version of the spec that it implements","// Not necessarily the package version of this code.","exports.SEMVER_SPEC_VERSION = '2.0.0';","// The actual regexps go on exports.re","var re = exports.re = [];","// The following Regular Expressions can be used for tokenizing,","// validating, and parsing SemVer version strings.","","// ## Numeric Identifier","// A single `0`, or a non-zero digit followed by zero or more digits.","","var NUMERICIDENTIFIER = R++;","// ## Non-numeric Identifier","// Zero or more digits, followed by a letter or hyphen, and then zero or","// more letters, digits, or hyphens.","","var NONNUMERICIDENTIFIER = R++;","// ## Main Version","// Three dot-separated numeric identifiers.","","var MAINVERSION = R++;","// ## Pre-release Version Identifier","// A numeric identifier, or a non-numeric identifier.","","var PRERELEASEIDENTIFIER = R++;","// ## Pre-release Version","// Hyphen, followed by one or more dot-separated pre-release version","// identifiers.","","var PRERELEASE = R++;","// ## Build Metadata Identifier","// Any combination of digits, letters, or hyphens.","","var BUILDIDENTIFIER = R++;","// ## Build Metadata","// Plus sign, followed by one or more period-separated build metadata","// identifiers.","","var BUILD = R++;","// ## Full Version String","// A main version, followed optionally by a pre-release version and","// build metadata.","","// Note that the only major, minor, patch, and pre-release sections of","// the version string are capturing groups.  The build metadata is not a","// capturing group, because it should not ever be used in version","// comparison.","","var FULL = R++;","// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.","// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty","// common in the npm registry.","var LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +","// Something like \"2.*\" or \"1.2.x\".","// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"","// Only the first item is strictly required.","var XRANGEIDENTIFIERLOOSE = R++;","// Tilde ranges.","// Meaning is \"reasonably at or greater than\"","var LONETILDE = R++;","// Caret ranges.","// Meaning is \"at least and backwards compatible with\"","var LONECARET = R++;","// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"","var COMPARATORLOOSE = R++;","// An expression to strip any whitespace between the gtlt and the thing","// it modifies, so that `\u003e 1.2.3` ==\u003e `\u003e1.2.3`","var COMPARATORTRIM = R++;","// this one has to use the /g flag","re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');","// Something like `1.2.3 - 1.2.4`","// Note that these all use the loose form, because they'll be","// checked against either the strict or loose comparator form","// later.","var HYPHENRANGE = R++;","// Star ranges basically just allow anything at all.","var STAR = R++;","// Compile to actual regexp objects.","// All are flag-free, unless they were created above with a flag.","for (var i = 0; i \u003c R; i++) {","  // these are actually numbers","  this.major = +m[1];","  // numberify any prerelease numeric ids","  if (!m[4])","  // NOT having a prerelease is \u003e having one","  if (this.prerelease.length \u0026\u0026 !other.prerelease.length)","// preminor will bump the version up to the next minor release, and immediately","// down to pre-release. premajor and prepatch work the same way.","SemVer.prototype.inc = function(release, identifier) {","      // If this is already a prerelease, it will bump to the next version","      // drop any prereleases that might already exist, since they are not","      // relevant at this point.","      this.prerelease.length = 0;","    // If the input is a non-prerelease version, this acts the same as","    // prepatch.","    case 'prerelease':","      // If this is a pre-major version, bump up to the same major version.","      // Otherwise increment major.","      // 1.0.0-5 bumps to 1.0.0","      // 1.1.0 bumps to 2.0.0","      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)","      // If this is a pre-minor version, bump up to the same minor version.","      // Otherwise increment minor.","      // 1.2.0-5 bumps to 1.2.0","      // 1.2.1 bumps to 1.3.0","      if (this.patch !== 0 || this.prerelease.length === 0)","      // If this is not a pre-release version, it will increment the patch.","      // If it is a pre-release it will bump up to the same patch version.","      // 1.2.0-5 patches to 1.2.0","      // 1.2.0 patches to 1.2.1","      if (this.prerelease.length === 0)","    // This probably shouldn't be used publicly.","    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.","    case 'pre':","        if (i === -1) // didn't increment anything","          this.prerelease.push(0);","        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,","        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0","        if (this.prerelease[0] === identifier) {","  // if it literally is just '\u003e' or '' then allow anything.","  if (!m[2])","  // First, split based on boolean or ||","  this.raw = range;","    // throw out any that are not relevant for whatever reason","    return c.length;","  // `1.2.3 - 1.2.4` =\u003e `\u003e=1.2.3 \u003c=1.2.4`","  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];","  // `\u003e 1.2.3 \u003c 1.2.5` =\u003e `\u003e1.2.3 \u003c1.2.5`","  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);","  // `~ 1.2.3` =\u003e `~1.2.3`","  range = range.replace(re[TILDETRIM], tildeTrimReplace);","  // `^ 1.2.3` =\u003e `^1.2.3`","  range = range.replace(re[CARETTRIM], caretTrimReplace);","  // normalize spaces","  range = range.split(/\\s+/).join(' ');","  // At this point, the range is completely trimmed and","  // ready to be split into comparators.","","  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];","    // in loose mode, throw out any that are not valid comparators","    set = set.filter(function(comp) {","// Mostly just for testing and legacy API reasons","exports.toComparators = toComparators;","// comprised of xranges, tildes, stars, and gtlt's at this point.","// already replaced the hyphen ranges","// turn into a set of JUST comparators.","function parseComparator(comp, loose) {","// ~, ~\u003e --\u003e * (any, kinda silly)","// ~2, ~2.x, ~2.x.x, ~\u003e2, ~\u003e2.x ~\u003e2.x.x --\u003e \u003e=2.0.0 \u003c3.0.0","// ~2.0, ~2.0.x, ~\u003e2.0, ~\u003e2.0.x --\u003e \u003e=2.0.0 \u003c2.1.0","// ~1.2, ~1.2.x, ~\u003e1.2, ~\u003e1.2.x --\u003e \u003e=1.2.0 \u003c1.3.0","// ~1.2.3, ~\u003e1.2.3 --\u003e \u003e=1.2.3 \u003c1.3.0","// ~1.2.0, ~\u003e1.2.0 --\u003e \u003e=1.2.0 \u003c1.3.0","function replaceTildes(comp, loose) {","      // ~1.2 == \u003e=1.2.0 \u003c1.3.0","      ret = '\u003e=' + M + '.' + m + '.0 \u003c' + M + '.' + (+m + 1) + '.0';","      // ~1.2.3 == \u003e=1.2.3 \u003c1.3.0","      ret = '\u003e=' + M + '.' + m + '.' + p +","// ^ --\u003e * (any, kinda silly)","// ^2, ^2.x, ^2.x.x --\u003e \u003e=2.0.0 \u003c3.0.0","// ^2.0, ^2.0.x --\u003e \u003e=2.0.0 \u003c3.0.0","// ^1.2, ^1.2.x --\u003e \u003e=1.2.0 \u003c2.0.0","// ^1.2.3 --\u003e \u003e=1.2.3 \u003c2.0.0","// ^1.2.0 --\u003e \u003e=1.2.0 \u003c2.0.0","function replaceCarets(comp, loose) {","        // nothing is allowed","        ret = '\u003c0.0.0';","        // nothing is forbidden","        ret = '*';","      // replace X with 0","      if (xm)","        // \u003e1 =\u003e \u003e=2.0.0","        // \u003e1.2 =\u003e \u003e=1.3.0","        // \u003e1.2.3 =\u003e \u003e= 1.2.4","        gtlt = '\u003e=';","        // \u003c=0.7.x is actually \u003c0.8.0, since any 0.7.x should","        // pass.  Similarly, \u003c=7.x is actually \u003c8.0.0, etc.","        gtlt = '\u003c';","// Because * is AND-ed with everything else in the comparator,","// and '' means \"any version\", just remove the *s entirely.","function replaceStars(comp, loose) {","  // Looseness is ignored here.  star is always as loose as it gets!","  return comp.trim().replace(re[STAR], '');","// This function is passed to string.replace(re[HYPHENRANGE])","// M, m, patch, prerelease, build","// 1.2 - 3.4.5 =\u003e \u003e=1.2.0 \u003c=3.4.5","// 1.2.3 - 3.4 =\u003e \u003e=1.2.0 \u003c3.5.0 Any 3.4.x will do","// 1.2 - 3.4 =\u003e \u003e=1.2.0 \u003c3.5.0","function hyphenReplace($0,","// if ANY of the sets match ALL of its comparators, then pass","Range.prototype.test = function(version) {","    // Find the set of versions that are allowed to have prereleases","    // For example, ^1.2.3-pr.1 desugars to \u003e=1.2.3-pr.1 \u003c2.0.0","    // That should allow `1.2.3-pr.2` to pass.","    // However, `1.2.4-alpha.notready` should NOT be allowed,","    // even though it's within the range set by the comparators.","    for (var i = 0; i \u003c set.length; i++) {","    // Version has a -pre, but it's not one of the ones we like.","    return false;","    // Return '*' instead of '' so that truthiness works.","    // This will throw if it's invalid anyway","    return new Range(range, loose).range || '*';","// Determine if version is less than all the versions possible in the range","exports.ltr = ltr;","// Determine if version is greater than all the versions possible in the range.","exports.gtr = gtr;","  // If it satisifes the range it is not outside","  if (satisfies(version, range, loose)) {","  // From now on, variable terms are as if we're in \"gtr\" mode.","  // but note that everything is flipped for the \"ltr\" function.","","  for (var i = 0; i \u003c range.set.length; ++i) {","    // If the edge version comparator has a operator then our version","    // isn't outside it","    if (high.operator === comp || high.operator === ecomp) {","    // If the lowest version comparator has an operator and our version","    // is less than it then it isn't higher than the range","    if ((!low.operator || low.operator === comp) \u0026\u0026"],"Functions":["// The debug function is excluded entirely from the minified version.","  /* nomin */ debug = function() ","  /* nomin */ debug = function() };","function parse(version, loose) ","function valid(version, loose) ","function clean(version, loose) ","function SemVer(version, loose) ","    this.prerelease = m[4].split('.').map(function(id) ","SemVer.prototype.format = function() ","SemVer.prototype.toString = function() ","SemVer.prototype.compare = function(other) ","SemVer.prototype.compareMain = function(other) ","SemVer.prototype.comparePre = function(other) ","SemVer.prototype.inc = function(release, identifier) ","function inc(version, release, loose, identifier) ","function diff(version1, version2) ","function compareIdentifiers(a, b) ","function rcompareIdentifiers(a, b) ","function major(a, loose) ","function minor(a, loose) ","function patch(a, loose) ","function compare(a, b, loose) ","function compareLoose(a, b) ","function rcompare(a, b, loose) ","function sort(list, loose) ","  return list.sort(function(a, b) ","function rsort(list, loose) ","  return list.sort(function(a, b) ","function gt(a, b, loose) ","function lt(a, b, loose) ","function eq(a, b, loose) ","function neq(a, b, loose) ","function gte(a, b, loose) ","function lte(a, b, loose) ","function cmp(a, op, b, loose) ","function Comparator(comp, loose) ","Comparator.prototype.parse = function(comp) ","Comparator.prototype.toString = function() ","Comparator.prototype.test = function(version) ","function Range(range, loose) ","  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) ","  }, this).filter(function(c) ","Range.prototype.format = function() ","  this.range = this.set.map(function(comps) ","Range.prototype.toString = function() ","Range.prototype.parseRange = function(range) ","  var set = range.split(' ').map(function(comp) ","    set = set.filter(function(comp) ","  set = set.map(function(comp) ","function toComparators(range, loose) ","  return new Range(range, loose).set.map(function(comp) ","    return comp.map(function(c) ","function parseComparator(comp, loose) ","function isX(id) ","function replaceTildes(comp, loose) ","  return comp.trim().split(/\\s+/).map(function(comp) ","function replaceTilde(comp, loose) ","  return comp.replace(r, function(_, M, m, p, pr) ","function replaceCarets(comp, loose) ","  return comp.trim().split(/\\s+/).map(function(comp) ","function replaceCaret(comp, loose) ","  return comp.replace(r, function(_, M, m, p, pr) ","function replaceXRanges(comp, loose) ","  return comp.split(/\\s+/).map(function(comp) ","function replaceXRange(comp, loose) ","  return comp.replace(r, function(ret, gtlt, M, m, p, pr) ","function replaceStars(comp, loose) ","// This function is passed to string.replace(re[HYPHENRANGE])","function hyphenReplace($0,","Range.prototype.test = function(version) ","function testSet(set, version) ","function satisfies(version, range, loose) ","function maxSatisfying(versions, range, loose) ","  return versions.filter(function(version) ","  }).sort(function(a, b) ","function minSatisfying(versions, range, loose) ","  return versions.filter(function(version) ","  }).sort(function(a, b) ","function validRange(range, loose) ","function ltr(version, range, loose) ","function gtr(version, range, loose) ","function outside(version, range, hilo, loose) ","  // but note that everything is flipped for the \"ltr\" function.","    comparators.forEach(function(comparator) ","function prerelease(version, loose) "],"Dependencies":null},{"FileName":"node_modules\\send\\index.js","LineCount":949,"CharCount":18650,"Comments":["/*!"," * send"," * Copyright(c) 2012 TJ Holowaychuk"," * Copyright(c) 2014-2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var createError = require('http-errors')","/**"," * Path function references."," * @private"," */","","var extname = path.extname","/**"," * Regular expression for identifying a bytes Range header."," * @private"," */","","var BYTES_RANGE_REGEXP = /^ *bytes=/","/**"," * Maximum value allowed for the max age."," * @private"," */","","var MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year","var MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year","","/**","/**"," * Regular expression to match a path with a directory up component."," * @private"," */","","var UP_PATH_REGEXP = /(?:^|[\\\\\\/])\\.\\.(?:[\\\\\\/]|$)/","/**"," * Module exports."," * @public"," */","","module.exports = send","/**"," * Shim EventEmitter.listenerCount for node.js \u003c 0.10"," */","","/* istanbul ignore next */","var listenerCount = EventEmitter.listenerCount ||","/**"," * Return a `SendStream` for `req` and `path`."," *"," * @param {object} req"," * @param {string} path"," * @param {object} [options]"," * @return {SendStream}"," * @public"," */","","function send (req, path, options) {","/**"," * Initialize a `SendStream` with the given `path`."," *"," * @param {Request} req"," * @param {String} path"," * @param {object} [options]"," * @private"," */","","function SendStream (req, path, options) {","  // legacy support","  if (opts.dotfiles === undefined) {","/**"," * Inherits from `Stream`."," */","","util.inherits(SendStream, Stream)","/**"," * Enable or disable etag generation."," *"," * @param {Boolean} val"," * @return {SendStream}"," * @api public"," */","","SendStream.prototype.etag = deprecate.function(function etag (val) {","/**"," * Enable or disable \"hidden\" (dot) files."," *"," * @param {Boolean} path"," * @return {SendStream}"," * @api public"," */","","SendStream.prototype.hidden = deprecate.function(function hidden (val) {","/**"," * Set index `paths`, set to a falsy"," * value to disable index support."," *"," * @param {String|Boolean|Array} paths"," * @return {SendStream}"," * @api public"," */","","SendStream.prototype.index = deprecate.function(function index (paths) {","/**"," * Set root `path`."," *"," * @param {String} path"," * @return {SendStream}"," * @api public"," */","","SendStream.prototype.root = function root (path) {","/**"," * Set max-age to `maxAge`."," *"," * @param {Number} maxAge"," * @return {SendStream}"," * @api public"," */","","SendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {","/**"," * Emit error with `status`."," *"," * @param {number} status"," * @param {Error} [error]"," * @private"," */","","SendStream.prototype.error = function error (status, error) {","  // emit if listeners instead of responding","  if (listenerCount(this, 'error') !== 0) {","  // clear existing headers","  clearHeaders(res)","  // add error headers","  if (error \u0026\u0026 error.headers) {","  // send basic response","  res.statusCode = status","/**"," * Check if the pathname ends with \"/\"."," *"," * @return {Boolean}"," * @api private"," */","","SendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {","/**"," * Check if this is a conditional GET request."," *"," * @return {Boolean}"," * @api private"," */","","SendStream.prototype.isConditionalGET = function isConditionalGET () {","/**"," * Strip content-* header fields."," *"," * @private"," */","","SendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {","/**"," * Respond with 304 not modified."," *"," * @api private"," */","","SendStream.prototype.notModified = function notModified () {","/**"," * Raise error that headers already sent."," *"," * @api private"," */","","SendStream.prototype.headersAlreadySent = function headersAlreadySent () {","/**"," * Check if the request is cacheable, aka"," * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6})."," *"," * @return {Boolean}"," * @api private"," */","","SendStream.prototype.isCachable = function isCachable () {","/**"," * Handle stat() error."," *"," * @param {Error} error"," * @private"," */","","SendStream.prototype.onStatError = function onStatError (error) {","/**"," * Check if the cache is fresh."," *"," * @return {Boolean}"," * @api private"," */","","SendStream.prototype.isFresh = function isFresh () {","/**"," * Check if the range is fresh."," *"," * @return {Boolean}"," * @api private"," */","","SendStream.prototype.isRangeFresh = function isRangeFresh () {","/**"," * Redirect to path."," *"," * @param {string} path"," * @private"," */","","SendStream.prototype.redirect = function redirect (path) {","  // redirect","  res.statusCode = 301","/**"," * Pipe to `res."," *"," * @param {Stream} res"," * @return {Stream} res"," * @api public"," */","","SendStream.prototype.pipe = function pipe (res) {","  // root path","  var root = this._root","  // references","  this.res = res","  // decode the path","  var path = decode(this.path)","  // null byte(s)","  if (~path.indexOf('\\0')) {","    // malicious path","    if (UP_PATH_REGEXP.test(normalize('.' + sep + path))) {","    // join / normalize from optional root dir","    path = normalize(join(root, path))","    // explode path parts","    parts = path.substr(root.length).split(sep)","    // \"..\" is malicious without \"root\"","    if (UP_PATH_REGEXP.test(path)) {","    // explode path parts","    parts = normalize(path).split(sep)","    // resolve the path","    path = resolve(path)","  // dotfile handling","  if (containsDotFile(parts)) {","    // legacy support","    if (access === undefined) {","  // index file support","  if (this._index.length \u0026\u0026 this.path[this.path.length - 1] === '/') {","/**"," * Transfer `path`."," *"," * @param {String} path"," * @api public"," */","","SendStream.prototype.send = function send (path, stat) {","    // impossible to send now","    this.headersAlreadySent()","  // set header fields","  this.setHeader(path, stat)","  // set content-type","  this.type(path)","  // conditional GET support","  if (this.isConditionalGET() \u0026\u0026 this.isCachable() \u0026\u0026 this.isFresh()) {","  // adjust len to start/end options","  len = Math.max(0, len - offset)","  // Range support","  if (this._acceptRanges \u0026\u0026 BYTES_RANGE_REGEXP.test(ranges)) {","    // parse","    ranges = parseRange(len, ranges, {","    // If-Range support","    if (!this.isRangeFresh()) {","    // unsatisfiable","    if (ranges === -1) {","      // Content-Range","      res.setHeader('Content-Range', contentRange('bytes', len))","      // 416 Requested Range Not Satisfiable","      return this.error(416, {","    // valid (syntactically invalid/multiple ranges are treated as a regular response)","    if (ranges !== -2 \u0026\u0026 ranges.length === 1) {","      // Content-Range","      res.statusCode = 206","      // adjust for requested range","      offset += ranges[0].start","  // clone options","  for (var prop in options) {","  // set read options","  opts.start = offset","  // content-length","  res.setHeader('Content-Length', len)","  // HEAD support","  if (req.method === 'HEAD') {","/**"," * Transfer file for `path`."," *"," * @param {String} path"," * @api private"," */","SendStream.prototype.sendFile = function sendFile (path) {","      // not found, check extensions","      return next(err)","/**"," * Transfer index for `path`."," *"," * @param {String} path"," * @api private"," */","SendStream.prototype.sendIndex = function sendIndex (path) {","/**"," * Stream `path` to the response."," *"," * @param {String} path"," * @param {Object} options"," * @api private"," */","","SendStream.prototype.stream = function stream (path, options) {","  // TODO: this is all lame, refactor meeee","  var finished = false","  // pipe","  var stream = fs.createReadStream(path, options)","  // response finished, done with the fd","  onFinished(res, function onfinished () {","  // error handling code-smell","  stream.on('error', function onerror (err) {","    // request already finished","    if (finished) return","    // clean up stream","    finished = true","    // error","    self.onStatError(err)","  // end","  stream.on('end', function onend () {","/**"," * Set content-type based on `path`"," * if it hasn't been explicitly set."," *"," * @param {String} path"," * @api private"," */","","SendStream.prototype.type = function type (path) {","/**"," * Set response header fields, most"," * fields may be pre-defined."," *"," * @param {String} path"," * @param {Object} stat"," * @api private"," */","","SendStream.prototype.setHeader = function setHeader (path, stat) {","/**"," * Clear all headers from a response."," *"," * @param {object} res"," * @private"," */","","function clearHeaders (res) {","/**"," * Collapse all leading slashes into a single slash"," *"," * @param {string} str"," * @private"," */","function collapseLeadingSlashes (str) {","/**"," * Determine if path parts contain a dotfile."," *"," * @api private"," */","","function containsDotFile (parts) {","/**"," * Create a Content-Range header."," *"," * @param {string} type"," * @param {number} size"," * @param {array} [range]"," */","","function contentRange (type, size, range) {","/**"," * decodeURIComponent."," *"," * Allows V8 to only deoptimize this fn instead of all"," * of send()."," *"," * @param {String} path"," * @api private"," */","","function decode (path) {","/**"," * Normalize the index option into an array."," *"," * @param {boolean|string|array} val"," * @param {string} name"," * @private"," */","","function normalizeList (val, name) {","/**"," * Set an object of headers on a response."," *"," * @param {object} res"," * @param {object} headers"," * @private"," */","","function setHeaders (res, headers) {"],"Functions":[" * Path function references.","  function (emitter, type)  return emitter.listeners(type).length }","function send (req, path, options) ","function SendStream (req, path, options) ","SendStream.prototype.etag = deprecate.function(function etag (val) ","SendStream.prototype.hidden = deprecate.function(function hidden (val) ","SendStream.prototype.index = deprecate.function(function index (paths) ","SendStream.prototype.root = function root (path) ","SendStream.prototype.from = deprecate.function(SendStream.prototype.root,","SendStream.prototype.root = deprecate.function(SendStream.prototype.root,","SendStream.prototype.maxage = deprecate.function(function maxage (maxAge) ","SendStream.prototype.error = function error (status, error) ","SendStream.prototype.hasTrailingSlash = function hasTrailingSlash () ","SendStream.prototype.isConditionalGET = function isConditionalGET () ","SendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () ","SendStream.prototype.notModified = function notModified () ","SendStream.prototype.headersAlreadySent = function headersAlreadySent () ","SendStream.prototype.isCachable = function isCachable () ","SendStream.prototype.onStatError = function onStatError (error) ","SendStream.prototype.isFresh = function isFresh () ","SendStream.prototype.isRangeFresh = function isRangeFresh () ","SendStream.prototype.redirect = function redirect (path) ","SendStream.prototype.pipe = function pipe (res) ","SendStream.prototype.send = function send (path, stat) ","SendStream.prototype.sendFile = function sendFile (path) ","  fs.stat(path, function onstat (err, stat) ","  function next (err) ","    fs.stat(p, function (err, stat) ","SendStream.prototype.sendIndex = function sendIndex (path) ","  function next (err) ","    fs.stat(p, function (err, stat) ","SendStream.prototype.stream = function stream (path, options) ","  onFinished(res, function onfinished () ","  stream.on('error', function onerror (err) ","  stream.on('end', function onend () ","SendStream.prototype.type = function type (path) ","SendStream.prototype.setHeader = function setHeader (path, stat) ","function clearHeaders (res) ","function collapseLeadingSlashes (str) ","function containsDotFile (parts) ","function contentRange (type, size, range) ","function decode (path) ","function normalizeList (val, name) ","function setHeaders (res, headers) "],"Dependencies":["http-errors","debug\")(\"send","depd\")(\"send","destroy","encodeurl","escape-html","etag","events","fresh","fs","mime","ms","on-finished","range-parser","path","statuses","stream","util"]},{"FileName":"node_modules\\serve-static\\index.js","LineCount":189,"CharCount":3871,"Comments":["/*!"," * serve-static"," * Copyright(c) 2010 Sencha Inc."," * Copyright(c) 2011 TJ Holowaychuk"," * Copyright(c) 2014-2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var encodeUrl = require('encodeurl')","/**"," * Module exports."," * @public"," */","","module.exports = serveStatic","/**"," * @param {string} root"," * @param {object} [options]"," * @return {function}"," * @public"," */","","function serveStatic (root, options) {","  // copy options object","  var opts = Object.create(options || null)","  // fall-though","  var fallthrough = opts.fallthrough !== false","  // default redirect","  var redirect = opts.redirect !== false","  // headers listener","  var setHeaders = opts.setHeaders","  // setup options for send","  opts.maxage = opts.maxage || opts.maxAge || 0","  // construct directory listener","  var onDirectory = redirect","      // method not allowed","      res.statusCode = 405","    // make sure redirect occurs at mount","    if (path === '/' \u0026\u0026 originalUrl.pathname.substr(-1) !== '/') {","    // create send stream","    var stream = send(req, path, opts)","    // add directory handler","    stream.on('directory', onDirectory)","    // add headers listener","    if (setHeaders) {","    // add file listener for fallthrough","    if (fallthrough) {","        // once file is determined, always forward error","        forwardError = true","    // forward errors","    stream.on('error', function error (err) {","    // pipe","    stream.pipe(res)","/**"," * Collapse all leading slashes into a single slash"," * @private"," */","function collapseLeadingSlashes (str) {","/**"," * Create a directory listener that just 404s."," * @private"," */","","function createNotFoundDirectoryListener () {","/**"," * Create a directory listener that performs a redirect."," * @private"," */","","function createRedirectDirectoryListener () {","    // get original URL","    var originalUrl = parseUrl.original(this.req)","    // append trailing slash","    originalUrl.path = null","    // reformat the URL","    var loc = encodeUrl(url.format(originalUrl))","    // send redirect response","    res.statusCode = 301"],"Functions":[" * @return function}","function serveStatic (root, options) ","  if (setHeaders \u0026\u0026 typeof setHeaders !== 'function') ","    throw new TypeError('option setHeaders must be function')","  return function serveStatic (req, res, next) ","      stream.on('file', function onFile () ","    stream.on('error', function error (err) ","function collapseLeadingSlashes (str) ","function createNotFoundDirectoryListener () ","  return function notFound () ","function createRedirectDirectoryListener () ","  return function redirect () "],"Dependencies":["encodeurl","escape-html","parseurl","path","send","url"]},{"FileName":"node_modules\\setprototypeof\\index.js","LineCount":12,"CharCount":257,"Comments":[],"Functions":["function setProtoOf(obj, proto) ","function mixinProperties(obj, proto) "],"Dependencies":null},{"FileName":"node_modules\\sliced\\index.js","LineCount":34,"CharCount":532,"Comments":["/**"," * An Array.prototype.slice.call(arguments) alternative"," *"," * @param {Object} args something with a length"," * @param {Number} slice"," * @param {Number} sliceEnd"," * @api public"," */","","module.exports = function (args, slice, sliceEnd) {"],"Functions":["module.exports = function (args, slice, sliceEnd) "],"Dependencies":null},{"FileName":"node_modules\\statuses\\index.js","LineCount":111,"CharCount":1919,"Comments":["/*!"," * statuses"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2016 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var codes = require('./codes.json')","/**"," * Module exports."," * @public"," */","","module.exports = status","// array of status codes","status.codes = populateStatusesMap(status, codes)","// status codes for redirects","status.redirect = {","// status codes for empty bodies","status.empty = {","// status codes for when you should retry the request","status.retry = {","/**"," * Populate the statuses map for given codes."," * @private"," */","","function populateStatusesMap (statuses, codes) {","    // Populate properties","    statuses[status] = message","    // Add to array","    arr.push(status)","/**"," * Get the status code."," *"," * Given a number, this will throw if it is not a known status"," * code, otherwise the code will be returned. Given a string,"," * the string will be parsed for a number and return the code"," * if valid, otherwise will lookup the code assuming this is"," * the status message."," *"," * @param {string|number} code"," * @returns {string}"," * @public"," */","","function status (code) {","  // '403'","  var n = parseInt(code, 10)"],"Functions":["function populateStatusesMap (statuses, codes) ","  Object.keys(codes).forEach(function forEachCode (code) ","function status (code) "],"Dependencies":["./codes.json"]},{"FileName":"node_modules\\string_decoder\\index.js","LineCount":222,"CharCount":7575,"Comments":["// Copyright Joyent, Inc. and other Node contributors.","//","// Permission is hereby granted, free of charge, to any person obtaining a","// copy of this software and associated documentation files (the","// \"Software\"), to deal in the Software without restriction, including","// without limitation the rights to use, copy, modify, merge, publish,","// distribute, sublicense, and/or sell copies of the Software, and to permit","// persons to whom the Software is furnished to do so, subject to the","// following conditions:","//","// The above copyright notice and this permission notice shall be included","// in all copies or substantial portions of the Software.","//","// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS","// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN","// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR","// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE","// USE OR OTHER DEALINGS IN THE SOFTWARE.","","var Buffer = require('buffer').Buffer;","// StringDecoder provides an interface for efficiently splitting a series of","// buffers into a series of JS strings without breaking apart multi-byte","// characters. CESU-8 is handled as part of the UTF-8 encoding.","//","// @TODO Handling all encodings inside a single object makes it very difficult","// to reason about this code, so it should be split up in the future.","// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code","// points as used by CESU-8.","var StringDecoder = exports.StringDecoder = function(encoding) {","      // CESU-8 represents each of Surrogate Pair by 3-bytes","      this.surrogateSize = 3;","      // UTF-16 represents each of Surrogate Pair by 2-bytes","      this.surrogateSize = 2;","      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.","      this.surrogateSize = 3;","  // Enough space to store all bytes of a single character. UTF-8 needs 4","  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).","  this.charBuffer = new Buffer(6);","  // Number of bytes received for the current incomplete multi-byte character.","  this.charReceived = 0;","  // Number of bytes expected for the current incomplete multi-byte character.","  this.charLength = 0;","// write decodes the given buffer and returns it as JS string that is","// guaranteed to not contain any partial multi-byte characters. Any partial","// character found at the end of the buffer is buffered up, and will be","// returned when calling write again with the remaining bytes.","//","// Note: Converting a Buffer containing an orphan surrogate to a String","// currently works, but converting a String to a Buffer (via `new Buffer`, or","// Buffer#write) will replace incomplete surrogates with the unicode","// replacement character. See https://codereview.chromium.org/121173009/ .","StringDecoder.prototype.write = function(buffer) {","  // if our last write ended with an incomplete multibyte character","  while (this.charLength) {","    // determine how many remaining bytes this buffer has to offer for this char","    var available = (buffer.length \u003e= this.charLength - this.charReceived) ?","    // add the new bytes to the char buffer","    buffer.copy(this.charBuffer, this.charReceived, 0, available);","      // still not enough chars in this buffer? wait for more ...","      return '';","    // remove bytes belonging to the current character from the buffer","    buffer = buffer.slice(available, buffer.length);","    // get the character that was split","    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);","    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character","    var charCode = charStr.charCodeAt(charStr.length - 1);","    // if there are no more bytes in this buffer, just emit our char","    if (buffer.length === 0) {","  // determine and set charLength / charReceived","  this.detectIncompleteChar(buffer);","    // buffer the incomplete character bytes we got","    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);","  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character","  if (charCode \u003e= 0xD800 \u0026\u0026 charCode \u003c= 0xDBFF) {","  // or just emit the charStr","  return charStr;","// detectIncompleteChar determines if there is an incomplete UTF-8 character at","// the end of the given buffer. If so, it sets this.charLength to the byte","// length that character, and sets this.charReceived to the number of bytes","// that are available for this character.","StringDecoder.prototype.detectIncompleteChar = function(buffer) {","  // determine how many bytes we have to check at the end of this buffer","  var i = (buffer.length \u003e= 3) ? 3 : buffer.length;","  // Figure out if one of the last i bytes of our buffer announces an","  // incomplete char.","  for (; i \u003e 0; i--) {","    // See http://en.wikipedia.org/wiki/UTF-8#Description","","    // 110XXXXX","    if (i == 1 \u0026\u0026 c \u003e\u003e 5 == 0x06) {","    // 1110XXXX","    if (i \u003c= 2 \u0026\u0026 c \u003e\u003e 4 == 0x0E) {","    // 11110XXX","    if (i \u003c= 3 \u0026\u0026 c \u003e\u003e 3 == 0x1E) {"],"Functions":["  || function(encoding) ","function assertEncoding(encoding) ","var StringDecoder = exports.StringDecoder = function(encoding) ","StringDecoder.prototype.write = function(buffer) ","StringDecoder.prototype.detectIncompleteChar = function(buffer) ","StringDecoder.prototype.end = function(buffer) ","function passThroughWrite(buffer) ","function utf16DetectIncompleteChar(buffer) ","function base64DetectIncompleteChar(buffer) "],"Dependencies":["buffer"]},{"FileName":"node_modules\\topo\\lib\\index.js","LineCount":232,"CharCount":5744,"Comments":["// Load modules","","var Hoek = require('hoek');","// Declare internals","","var internals = {};","    // Validate rules","","    var before = [].concat(options.before || []);","    var sort = options.sort || 0;                   // Used for merging only","","    Hoek.assert(before.indexOf(group) === -1, 'Item cannot come before itself:', group);","    // Insert event","","    var error = this._sort();","    // Sort items","","    this._items.sort(internals.mergeSort);","    // Construct graph","","    var groups = {};","        var seq = item.seq;                         // Unique across all items","        var group = item.group;","        // Determine Groups","","        groups[group] = groups[group] || [];","        // Build intermediary graph using 'before'","","        graph[seq] = item.before;","        // Build second intermediary graph with 'after'","","        var after = item.after;","    // Expand intermediary graph","","    var graphNodes = Object.keys(graph);","    // Merge intermediary graph using graphAfters into final graph","","    var afterNodes = Object.keys(graphAfters);","    // Compile ancestors","","    var children;","    // Topo sort","","    var visited = {};","            next = next.toString();         // Normalize to string TODO: replace with seq","            visited[next] = true;"],"Functions":["exports = module.exports = internals.Topo = function () ","internals.Topo.prototype.add = function (nodes, options) ","    ([].concat(nodes)).forEach(function (node, i) ","internals.Topo.prototype.merge = function (others) ","internals.mergeSort = function (a, b) ","internals.Topo.prototype._sort = function () ","    this._items = sorted.map(function (value) "],"Dependencies":["hoek"]},{"FileName":"node_modules\\topo\\test\\index.js","LineCount":267,"CharCount":7926,"Comments":["// Load modules","","var Code = require('code');","// Declare internals","","var internals = {};","// Test shortcuts","","var lab = exports.lab = Lab.script();","        // Use Fisher-Yates for shuffling","","        var fisherYates = function (array) {"],"Functions":["describe('Topo', function () ","    var testDeps = function (scenario) ","        scenario.forEach(function (record, i) ","    it('sorts dependencies', function (done) ","    it('sorts dependencies (before as array)', function (done) ","    it('sorts dependencies (after as array)', function (done) ","    it('sorts dependencies (seq)', function (done) ","    it('sorts dependencies (explicitly using after or before)', function (done) ","        var fisherYates = function (array) ","    it('throws on circular dependency', function (done) ","        expect(function () ","    describe('merge()', function () ","        it('merges objects', function (done) ","        it('merges objects (explicit sort)', function (done) ","        it('merges objects (mixed sort)', function (done) ","        it('merges objects (multiple)', function (done) ","        it('throws on circular dependency', function (done) ","            expect(function () "],"Dependencies":["code","lab","hoek",".."]},{"FileName":"node_modules\\type-is\\index.js","LineCount":263,"CharCount":5263,"Comments":["/*!"," * type-is"," * Copyright(c) 2014 Jonathan Ong"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module dependencies."," * @private"," */","","var typer = require('media-typer')","/**"," * Module exports."," * @public"," */","","module.exports = typeofrequest","/**"," * Compare a `value` content-type with `types`."," * Each `type` can be an extension like `html`,"," * a special shortcut like `multipart` or `urlencoded`,"," * or a mime type."," *"," * If no types match, `false` is returned."," * Otherwise, the first `type` that matches is returned."," *"," * @param {String} value"," * @param {Array} types"," * @public"," */","","function typeis (value, types_) {","  // remove parameters and normalize","  var val = tryNormalizeType(value)","  // no type or invalid","  if (!val) {","  // support flattened arguments","  if (types \u0026\u0026 !Array.isArray(types)) {","  // no types, return the content type","  if (!types || !types.length) {","  // no matches","  return false","/**"," * Check if a request has a request body."," * A request with a body __must__ either have `transfer-encoding`"," * or `content-length` headers set."," * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3"," *"," * @param {Object} request"," * @return {Boolean}"," * @public"," */","","function hasbody (req) {","/**"," * Check if the incoming request contains the \"Content-Type\""," * header field, and it contains any of the give mime `type`s."," * If there is no request body, `null` is returned."," * If there is no content type, `false` is returned."," * Otherwise, it returns the first `type` that matches."," *"," * Examples:"," *"," *     // With Content-Type: text/html; charset=utf-8"," *     this.is('html'); // =\u003e 'html'"," *     this.is('text/html'); // =\u003e 'text/html'"," *     this.is('text/*', 'application/json'); // =\u003e 'text/html'"," *"," *     // When Content-Type is application/json"," *     this.is('json', 'urlencoded'); // =\u003e 'json'"," *     this.is('application/json'); // =\u003e 'application/json'"," *     this.is('html', 'application/*'); // =\u003e 'application/json'"," *"," *     this.is('html'); // =\u003e false"," *"," * @param {String|Array} types..."," * @return {String|false|null}"," * @public"," */","","function typeofrequest (req, types_) {","  // no body","  if (!hasbody(req)) {","  // support flattened arguments","  if (arguments.length \u003e 2) {","  // request content type","  var value = req.headers['content-type']","/**"," * Normalize a mime type."," * If it's a shorthand, expand it to a valid mime type."," *"," * In general, you probably want:"," *"," *   var type = is(req, ['urlencoded', 'json', 'multipart']);"," *"," * Then use the appropriate body parsers."," * These three are the most common request body types"," * and are thus ensured to work."," *"," * @param {String} type"," * @private"," */","","function normalize (type) {","    // invalid type","    return false","      return 'multipart/*'","  }","","  if (type[0] === '+') {","    // \"+json\" -\u003e \"*/*+json\" expando","    // \"+json\" -\u003e \"*/*+json\" expando","    return '*/*' + type","    return '*/*' + type","  }","/**"," * Check if `expected` mime type"," * matches `actual` mime type with"," * wildcard and +suffix support."," *"," * @param {String} expected"," * @param {String} actual"," * @return {Boolean}"," * @private"," */","","function mimeMatch (expected, actual) {","  // invalid type","  if (expected === false) {","  // split types","  var actualParts = actual.split('/')","  // invalid format","  if (actualParts.length !== 2 || expectedParts.length !== 2) {","  // validate type","  if (expectedParts[0] !== '*' \u0026\u0026 expectedParts[0] !== actualParts[0]) {","  // validate suffix wildcard","  if (expectedParts[1].substr(0, 2) === '*+') {","  // validate subtype","  if (expectedParts[1] !== '*' \u0026\u0026 expectedParts[1] !== actualParts[1]) {","/**"," * Normalize a type and remove parameters."," *"," * @param {string} value"," * @return {string}"," * @private"," */","","function normalizeType (value) {","  // parse the type","  var type = typer.parse(value)","  // remove the parameters","  type.parameters = undefined","  // reformat it","  return typer.format(type)","/**"," * Try to normalize a type and remove parameters."," *"," * @param {string} value"," * @return {string}"," * @private"," */","","function tryNormalizeType (value) {"],"Functions":["function typeis (value, types_) ","function hasbody (req) ","function typeofrequest (req, types_) ","function normalize (type) ","function mimeMatch (expected, actual) ","function normalizeType (value) ","function tryNormalizeType (value) "],"Dependencies":["media-typer","mime-types"]},{"FileName":"node_modules\\typedarray\\example\\tarray.js","LineCount":5,"CharCount":106,"Comments":[],"Functions":null,"Dependencies":["../"]},{"FileName":"node_modules\\typedarray\\index.js","LineCount":631,"CharCount":20695,"Comments":["var undefined = (void 0); // Paranoia","","// Beyond this value, index getters/setters (i.e. array[0], array[1]) are so slow to","// create, and consume so much memory, that the browser appears frozen.","var MAX_ARRAY_LENGTH = 1e5;","// Approximations of internal ECMAScript conversion functions","var ECMAScript = (function() {","  // Stash a copy in case other scripts modify these","  var opts = Object.prototype.toString,","    // Class returns internal [[Class]] property, used to avoid cross-frame instanceof issues:","    Class: function(v) { return opts.call(v).replace(/^\\[object *|\\]$/g, ''); },","// Snapshot intrinsics","var LN2 = Math.LN2,","// ES5: lock down object properties","function configureProperties(obj) {","// emulate ES5 getter/setter API using legacy APIs","// http://blogs.msdn.com/b/ie/archive/2010/09/07/transitioning-existing-code-to-the-es5-getter-setter-apis.aspx","// (second clause tests for Object.defineProperty() in IE\u003c9 that only supports extending DOM prototypes, but","// note that IE\u003c9 does not support __defineGetter__ or __defineSetter__ so it just renders the method harmless)","var defineProp","// ES5: Make obj[index] an alias for obj._getter(index)/obj._setter(index, value)","// for index in 0 ... obj.length","function makeArrayAccessors(obj) {","// Internal conversion functions:","//    pack\u003cType\u003e()   - take a number (interpreted as Type), output a byte array","//    unpack\u003cType\u003e() - take a byte array, output a Type-like number","","function as_signed(value, bits) { var s = 32 - bits; return (value \u003c\u003c s) \u003e\u003e s; }","  // Compute sign, exponent, fraction","  if (v !== v) {","    // NaN","    // http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping","    e = (1 \u003c\u003c ebits) - 1; f = pow(2, fbits - 1); s = 0;","        // Overflow","        e = (1 \u003c\u003c ebits) - 1;","        // Normalized","        e = e + bias;","      // Denormalized","      e = 0;","  // Pack sign, exponent, fraction","  bits = [];","  // Bits to bytes","  bytes = [];","  // Bytes to bits","  var bits = [], i, j, b, str,","  // Unpack sign, exponent, fraction","  bias = (1 \u003c\u003c (ebits - 1)) - 1;","  // Produce number","  if (e === (1 \u003c\u003c ebits) - 1) {","    // Normalized","    return s * pow(2, e - bias) * (1 + f / pow(2, fbits));","    // Denormalized","    return s * pow(2, -(bias - 1)) * (f / pow(2, fbits));","//","// 3 The ArrayBuffer Type","//","","(function() {","  /** @constructor */","  var ArrayBuffer = function ArrayBuffer(length) {","  //","  // 4 The ArrayBufferView Type","  //","","  // NOTE: this constructor is not exported","  /** @constructor */","  /** @constructor */","  var ArrayBufferView = function ArrayBufferView() {","    //this.buffer = null;","    //this.byteOffset = 0;","    //this.byteLength = 0;","  };","  //","  // 5 The Typed Array View Types","  //","","  function makeConstructor(bytesPerElement, pack, unpack) {","    // Each TypedArray type requires a distinct constructor instance with","    // identical logic, which this produces.","","    var ctor;","        // Constructor(unsigned long length)","        this.length = ECMAScript.ToInt32(arguments[0]);","        // Constructor(TypedArray array)","        array = arguments[0];","        // Constructor(sequence\u003ctype\u003e array)","        sequence = arguments[0];","        // Constructor(ArrayBuffer buffer,","        //             optional unsigned long byteOffset, optional unsigned long length)","        this.buffer = buffer;","          // The given byteOffset must be a multiple of the element","          // size of the specific type, otherwise an exception is raised.","          throw new RangeError(\"ArrayBuffer length minus the byteOffset is not a multiple of the element size.\");","    // getter type (unsigned long index);","    ctor.prototype._getter = function(index) {","    // NONSTANDARD: convenience alias for getter: type get(unsigned long index);","    ctor.prototype.get = ctor.prototype._getter;","    // setter void (unsigned long index, type value);","    ctor.prototype._setter = function(index, value) {","    // void set(TypedArray array, optional unsigned long offset);","    // void set(sequence\u003ctype\u003e array, optional unsigned long offset);","    ctor.prototype.set = function(index, value) {","        // void set(TypedArray array, optional unsigned long offset);","        array = arguments[0];","        // void set(sequence\u003ctype\u003e array, optional unsigned long offset);","        sequence = arguments[0];","    // TypedArray subarray(long begin, optional long end);","    ctor.prototype.subarray = function(start, end) {","//","// 6 The DataView View Type","//","","(function() {","  // Constructor(ArrayBuffer buffer,","  //             optional unsigned long byteOffset,","  //             optional unsigned long byteLength)","  /** @constructor */","  /** @constructor */","  var DataView = function DataView(buffer, byteOffset, byteLength) {","      // Get bytes","      var typeArray = new arrayType([value]),","      // Flip if necessary","      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {","      // Write them","      byteView = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT);"],"Functions":["// Approximations of internal ECMAScript conversion functions","var ECMAScript = (function() ","    Class: function(v)  return opts.call(v).replace(/^\\[object *|\\]$/g, ''); },","    HasProperty: function(o, p)  return p in o; },","    HasOwnProperty: function(o, p)  return ophop.call(o, p); },","    IsCallable: function(o)  return typeof o === 'function'; },","    ToInt32: function(v)  return v \u003e\u003e 0; },","    ToUint32: function(v)  return v \u003e\u003e\u003e 0; }","function configureProperties(obj) ","if (Object.defineProperty \u0026\u0026 (function() ","  defineProp = function(o, p, desc) ","var getOwnPropNames = Object.getOwnPropertyNames || function (o) ","function makeArrayAccessors(obj) ","  function makeArrayAccessor(index) ","      'get': function()  return obj._getter(index); },","      'set': function(v)  obj._setter(index, v); },","// Internal conversion functions:","function as_signed(value, bits)  var s = 32 - bits; return (value \u003c\u003c s) \u003e\u003e s; }","function as_unsigned(value, bits)  var s = 32 - bits; return (value \u003c\u003c s) \u003e\u003e\u003e s; }","function packI8(n)  return [n \u0026 0xff]; }","function unpackI8(bytes)  return as_signed(bytes[0], 8); }","function packU8(n)  return [n \u0026 0xff]; }","function unpackU8(bytes)  return as_unsigned(bytes[0], 8); }","function packU8Clamped(n)  n = round(Number(n)); return [n \u003c 0 ? 0 : n \u003e 0xff ? 0xff : n \u0026 0xff]; }","function packI16(n)  return [(n \u003e\u003e 8) \u0026 0xff, n \u0026 0xff]; }","function unpackI16(bytes)  return as_signed(bytes[0] \u003c\u003c 8 | bytes[1], 16); }","function packU16(n)  return [(n \u003e\u003e 8) \u0026 0xff, n \u0026 0xff]; }","function unpackU16(bytes)  return as_unsigned(bytes[0] \u003c\u003c 8 | bytes[1], 16); }","function packI32(n)  return [(n \u003e\u003e 24) \u0026 0xff, (n \u003e\u003e 16) \u0026 0xff, (n \u003e\u003e 8) \u0026 0xff, n \u0026 0xff]; }","function unpackI32(bytes)  return as_signed(bytes[0] \u003c\u003c 24 | bytes[1] \u003c\u003c 16 | bytes[2] \u003c\u003c 8 | bytes[3], 32); }","function packU32(n)  return [(n \u003e\u003e 24) \u0026 0xff, (n \u003e\u003e 16) \u0026 0xff, (n \u003e\u003e 8) \u0026 0xff, n \u0026 0xff]; }","function unpackU32(bytes)  return as_unsigned(bytes[0] \u003c\u003c 24 | bytes[1] \u003c\u003c 16 | bytes[2] \u003c\u003c 8 | bytes[3], 32); }","function packIEEE754(v, ebits, fbits) ","  function roundToEven(n) ","function unpackIEEE754(bytes, ebits, fbits) ","function unpackF64(b)  return unpackIEEE754(b, 11, 52); }","function packF64(v)  return packIEEE754(v, 11, 52); }","function unpackF32(b)  return unpackIEEE754(b, 8, 23); }","function packF32(v)  return packIEEE754(v, 8, 23); }","(function() ","  var ArrayBuffer = function ArrayBuffer(length) ","  var ArrayBufferView = function ArrayBufferView() ","  function makeConstructor(bytesPerElement, pack, unpack) ","    ctor = function(buffer, byteOffset, length) ","    ctor.prototype._getter = function(index) ","    ctor.prototype._setter = function(index, value) ","    ctor.prototype.set = function(index, value) ","    ctor.prototype.subarray = function(start, end) ","      function clamp(v, min, max)  return v \u003c min ? min : v \u003e max ? max : v; }","(function() ","  function r(array, index) ","  var IS_BIG_ENDIAN = (function() ","  var DataView = function DataView(buffer, byteOffset, byteLength) ","  function makeGetter(arrayType) ","    return function(byteOffset, littleEndian) ","  function makeSetter(arrayType) ","    return function(byteOffset, value, littleEndian) "],"Dependencies":null},{"FileName":"node_modules\\typedarray\\test\\server\\undef_globals.js","LineCount":20,"CharCount":449,"Comments":[],"Functions":["test('u8a without globals', function (t) "],"Dependencies":["tape","vm","fs"]},{"FileName":"node_modules\\typedarray\\test\\tarray.js","LineCount":11,"CharCount":207,"Comments":[],"Functions":["test('tiny u8a test', function (t) "],"Dependencies":["../","tape"]},{"FileName":"node_modules\\unpipe\\index.js","LineCount":70,"CharCount":1049,"Comments":["/*!"," * unpipe"," * Copyright(c) 2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict'","/**"," * Module exports."," * @public"," */","","module.exports = unpipe","/**"," * Determine if there are Node.js pipe-like data listeners."," * @private"," */","","function hasPipeDataListeners(stream) {","/**"," * Unpipe a stream from all destinations."," *"," * @param {object} stream"," * @public"," */","","function unpipe(stream) {","    // new-style","    stream.unpipe()","  // Node.js 0.8 hack","  if (!hasPipeDataListeners(stream)) {","    // invoke the listener","    listener.call(stream)"],"Functions":["function hasPipeDataListeners(stream) ","function unpipe(stream) ","  if (typeof stream.unpipe === 'function') "],"Dependencies":null},{"FileName":"node_modules\\utils-merge\\index.js","LineCount":24,"CharCount":358,"Comments":["/**"," * Merge object b with object a."," *"," *     var a = { foo: 'bar' }"," *       , b = { bar: 'baz' };"," *"," *     merge(a, b);"," *     // =\u003e { foo: 'bar', bar: 'baz' }"," *"," * @param {Object} a"," * @param {Object} b"," * @return {Object}"," * @api public"," */","","exports = module.exports = function(a, b){"],"Functions":["exports = module.exports = function(a, b)"],"Dependencies":null},{"FileName":"node_modules\\vary\\index.js","LineCount":125,"CharCount":2359,"Comments":["/*!"," * vary"," * Copyright(c) 2014-2015 Douglas Christopher Wilson"," * MIT Licensed"," */","","'use strict';","/**"," * Module exports."," */","","module.exports = vary;","/**"," * RegExp to match field-name in RFC 7230 sec 3.2"," *"," * field-name    = token"," * token         = 1*tchar"," * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"\u0026\" / \"'\" / \"*\""," *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\""," *               / DIGIT / ALPHA"," *               ; any VCHAR, except delimiters"," */","","var fieldNameRegExp = /^[!#$%\u0026'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+$/","/**"," * Append a field to a vary header."," *"," * @param {String} header"," * @param {String|Array} field"," * @return {String}"," * @api public"," */","","function append(header, field) {","  // get fields array","  var fields = !Array.isArray(field)","  // assert on invalid field names","  for (var i = 0; i \u003c fields.length; i++) {","  // existing, unspecified vary","  if (header === '*') {","  // enumerate current values","  var val = header;","  // unspecified vary","  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {","    // append value (case-preserving)","    if (vals.indexOf(fld) === -1) {","/**"," * Parse a vary header into an array."," *"," * @param {String} header"," * @return {Array}"," * @api private"," */","","function parse(header) {","/**"," * Mark that a request is varied on a header field."," *"," * @param {Object} res"," * @param {String|Array} field"," * @api public"," */","","function vary(res, field) {","    // quack quack","    throw new TypeError('res argument is required');","  // get existing header","  var val = res.getHeader('Vary') || ''","  // set new header","  if ((val = append(header, field))) {"],"Functions":["function append(header, field) ","function parse(header) ","function vary(res, field) "],"Dependencies":null},{"FileName":"node_modules\\xtend\\immutable.js","LineCount":20,"CharCount":365,"Comments":[],"Functions":["function extend() "],"Dependencies":null},{"FileName":"node_modules\\xtend\\mutable.js","LineCount":18,"CharCount":352,"Comments":[],"Functions":["function extend(target) "],"Dependencies":null},{"FileName":"node_modules\\xtend\\test.js","LineCount":84,"CharCount":1677,"Comments":[],"Functions":["test(\"merge\", function(assert) ","test(\"replace\", function(assert) ","test(\"undefined\", function(assert) ","test(\"handle 0\", function(assert) ","test(\"is immutable\", function (assert) ","test(\"null as argument\", function (assert) ","test(\"mutable\", function (assert) ","test(\"null prototype\", function(assert) ","test(\"null prototype mutable\", function (assert) "],"Dependencies":["tape","./","./mutable"]},{"FileName":"server.js","LineCount":60,"CharCount":1796,"Comments":["// app.post(\"/api/v1/fileupload\",function(req,res){","//     console.log(\"Inside file upload api call\");","//     console.log(\"Form data received:\"+req.body);","//     var form = new formidable.IncomingForm();","//     form.on('file',function(name,file){","//       console.log(\"inside file\");","//       console.log(file);","//       // fs.readFile(file, function(err, data){","//       //     // Do something with the data (which holds the file information)","//       //     console.log(\"inside fs.readfile\",data);","//       //   });","//     })","//     form.parse(req,function(err,fields,files){","//         console.log(\"After parsing\");","//     });","//","// //     form.parse(req, function(err, fields, files) {","// //       console.log(\"inside form parse\");","// //   res.writeHead(200, {'content-type': 'text/plain'});","// //   res.write('received upload:\\n\\n');","// //   res.end(util.inspect({fields: fields, files: files}));","// // });","//","//","// });","","var port = config.port;"],"Functions":["db.once('open',function()","// app.post(\"/api/v1/fileupload\",function(req,res)","//     form.on('file',function(name,file)","//       // fs.readFile(file, function(err, data)","//     form.parse(req,function(err,fields,files)","// //     form.parse(req, function(err, fields, files) ","app.listen(port, function()"],"Dependencies":["express","body-parser","fs","path","./config/config.json","./api/routing","formidable","util","mongoose","./api/routing.js"]}]}