{
	"projectName": "app1",
	"projectVersion": "v1.0",
	"totalNoOfLines": 35635,
	"totalNoOfChars": 1186787,
	"totalNoOfFiles": 112,
	"fileTakenOn": "2016-08-16 18:06:47.1659722 +0530 IST",
	"files": [{
		"FileName": "node_modules\\accepts\\index.js",
		"LineCount": 232,
		"CharCount": 4963,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Create a new Accepts object for the given req.", "-----------------------------------", "/**", " * Check if the given `type(s)` is acceptable, returning", "-----------------------------------", " *     // Accept: text/html", " *     this.types('html');", "-----------------------------------", " *     // =\u003e \"html\"", " *", "-----------------------------------", " *     // Accept: text/*, application/json", " *     this.types('html');", "-----------------------------------", " *     // =\u003e \"html\"", " *     this.types('text/html');", "-----------------------------------", " *     // =\u003e \"text/html\"", " *     this.types('json', 'text');", "-----------------------------------", " *     // =\u003e \"json\"", " *     this.types('application/json');", "-----------------------------------", " *     // =\u003e \"application/json\"", " *", "-----------------------------------", " *     // Accept: text/*, application/json", " *     this.types('image/png');", "-----------------------------------", " *     // =\u003e undefined", " *", "-----------------------------------", " *     // Accept: text/*;q=.5, application/json", " *     this.types(['html', 'json']);", "-----------------------------------", " *     // =\u003e \"json\"", " *", "-----------------------------------", "  // support flattened arguments", "  if (types \u0026\u0026 !Array.isArray(types)) ", "-----------------------------------", "  // no types, return all requested types", "  if (!types || types.length === 0) ", "-----------------------------------", "/**", " * Return accepted encodings or best fit based on `encodings`.", "-----------------------------------", "  // support flattened arguments", "  if (encodings \u0026\u0026 !Array.isArray(encodings)) ", "-----------------------------------", "  // no encodings, return all requested encodings", "  if (!encodings || encodings.length === 0) ", "-----------------------------------", "/**", " * Return accepted charsets or best fit based on `charsets`.", "-----------------------------------", "  // support flattened arguments", "  if (charsets \u0026\u0026 !Array.isArray(charsets)) ", "-----------------------------------", "  // no charsets, return all requested charsets", "  if (!charsets || charsets.length === 0) ", "-----------------------------------", "/**", " * Return accepted languages or best fit based on `langs`.", "-----------------------------------", "  // support flattened arguments", "  if (languages \u0026\u0026 !Array.isArray(languages)) ", "-----------------------------------", "  // no languages, return all requested languages", "  if (!languages || languages.length === 0) ", "-----------------------------------", "/**", " * Convert extnames to mime.", "-----------------------------------", "/**", " * Check if mime is valid.", "-----------------------------------"],
		"Functions": ["function Accepts(req) ", "Accepts.prototype.types = function (types_) ", "Accepts.prototype.encodings = function (encodings_) ", "Accepts.prototype.charsets = function (charsets_) ", "Accepts.prototype.languages = function (languages_) ", "function extToMime(type) ", "function validMime(type) "],
		"Dependencies": ["negotiator", "mime-types"]
	}, {
		"FileName": "node_modules\\acorn\\bin\\build-acorn.js",
		"LineCount": 83,
		"CharCount": 2530,
		"Comments": ["var fs = require(\"fs\"), path = require(\"path\")", "-----------------------------------", "    // Make bin/acorn executable", "    if (process.platform === 'win32')", "-----------------------------------"],
		"Functions": ["  .on(\"error\", function (err)  console.log(\"Error: \" + err.message) })", "var ACORN_PLACEHOLDER = \"this_function_call_should_be_replaced_with_a_call_to_load_acorn()\";", "function acornShimPrepare(file) ", "    tr._transform = function(chunk, _, callback) ", "    tr._transform = function(chunk, _, callback)  callback(null, chunk) }", "function acornShimComplete() ", "  tr._transform = function(chunk, _, callback) ", "  tr._flush = function (callback) ", "  .on(\"error\", function (err)  console.log(\"Error: \" + err.message) })", "  .on(\"error\", function (err)  console.log(\"Error: \" + err.message) })", "babel.transformFile(\"./src/bin/acorn.js\", function (err, result) ", "  fs.writeFile(\"bin/acorn\", result.code, function (err) "],
		"Dependencies": ["fs\"),path=require(\"path", "stream", "browserify", "babel-core", "babelify"]
	}, {
		"FileName": "node_modules\\acorn\\bin\\generate-identifier-regex.js",
		"LineCount": 48,
		"CharCount": 1538,
		"Comments": ["// Note: run `npm install unicode-7.0.0` first.", "", "// Which Unicode version should be used?", "var version = '7.0.0';", "-----------------------------------"],
		"Functions": ["    .filter(function(ch)  return ch \u003e 127; });", "    .filter(function(ch)  return ch \u003e 127 \u0026\u0026 start.indexOf(ch) == -1; }));", "function pad(str, width) ", "function esc(code) ", "function generate(chars) "],
		"Dependencies": ["unicode-\"+version+\"/properties/ID_Start/code-points"]
	}, {
		"FileName": "node_modules\\acorn\\dist\\acorn.js",
		"LineCount": 3340,
		"CharCount": 118690,
		"Comments": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.acorn = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "-----------------------------------", "// A recursive descent parser operates by defining functions for all", "// syntactic elements, and recursively calling those, each function", "// advancing the input stream and returning an AST node. Precedence", "// of constructs (for example, the fact that `!x[1]` means `!(x[1])`", "// instead of `(!x)[1]` is handled by the fact that the parser", "// function that parses unary prefix operators is called first, and", "// in turn calls the function that parses `[]` subscripts — that", "// way, it'll receive the node for `x[1]` already parsed, and wraps", "// *that* in the unary operator node.", "//", "// Acorn uses an [operator precedence parser][opp] to handle binary", "// operator precedence, because it is much more compact than using", "// the technique outlined above, which uses different, nesting", "// functions to specify precedence, for all of the ten binary", "// precedence levels that JavaScript defines.", "//", "// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser", "", "\"use strict\";", "-----------------------------------", "// Check if property name clashes with already added.", "// Object/class getters and setters are not allowed to clash —", "// either with each other or with an init property — and in", "// strict mode, init properties are also not allowed to be repeated.", "", "pp.checkPropClash = function (prop, propHash) ", "-----------------------------------", "// ### Expression parsing", "", "// These nest, from the most general expression type at the top to", "// 'atomic', nondivisible expression types at the bottom. Most of", "// the functions will simply let the function(s) below them parse,", "// and, *if* the syntactic construct they handle is present, wrap", "// the AST node that the inner parser gave them in another node.", "", "// Parse a full expression. The optional arguments are used to", "// forbid the `in` operator (in for loops initalization expressions)", "// and provide reference for storing '=' operator inside shorthand", "// property assignment in contexts where both object expression", "// and object pattern might appear (so it's possible to raise", "// delayed syntax error at correct position).", "", "pp.parseExpression = function (noIn, refDestructuringErrors) ", "-----------------------------------", "// Parse an assignment expression. This includes applications of", "// operators like `+=`.", "", "pp.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) ", "-----------------------------------", "    refDestructuringErrors.shorthandAssign = 0; // reset because shorthand default was used correctly", "    this.checkLVal(left);", "-----------------------------------", "// Parse a ternary conditional (`?:`) operator.", "", "pp.parseMaybeConditional = function (noIn, refDestructuringErrors) ", "-----------------------------------", "// Start the precedence parser.", "", "pp.parseExprOps = function (noIn, refDestructuringErrors) ", "-----------------------------------", "// Parse binary operators with the operator precedence parsing", "// algorithm. `left` is the left-hand side of the operator.", "// `minPrec` provides context that allows the function to stop and", "// defer further parser to one of its callers when it encounters an", "// operator that has a lower precedence than the set it is parsing.", "", "pp.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) ", "-----------------------------------", "// Parse unary operators, both prefix and postfix.", "", "pp.parseMaybeUnary = function (refDestructuringErrors) ", "-----------------------------------", "// Parse call, dot, and `[]`-subscript expressions.", "", "pp.parseExprSubscripts = function (refDestructuringErrors) ", "-----------------------------------", "// Parse an atomic expression — either a single token that is an", "// expression, an expression started by a keyword like `function` or", "// `new`, or an expression wrapped in punctuation like `()`, `[]`,", "// or `{}`.", "", "pp.parseExprAtom = function (refDestructuringErrors) ", "-----------------------------------", "      // check whether this is array comprehension or regular array", "      if (this.options.ecmaVersion \u003e= 7 \u0026\u0026 this.type === _tokentype.types._for) ", "-----------------------------------", "// New's precedence is slightly tricky. It must allow its argument to", "// be a `[]` or dot subscript expression, but not a call — at least,", "// not without wrapping it in parentheses. Thus, it uses the noCalls", "// argument to parseSubscripts to prevent it from consuming the", "// argument list.", "", "var empty = [];", "-----------------------------------", "// Parse template expression.", "", "pp.parseTemplateElement = function () ", "-----------------------------------", "// Parse an object literal or binding pattern.", "", "pp.parseObj = function (isPattern, refDestructuringErrors) ", "-----------------------------------", "// Initialize empty function node.", "", "pp.initFunction = function (node) ", "-----------------------------------", "// Parse object or class method.", "", "pp.parseMethod = function (isGenerator) ", "-----------------------------------", "// Parse arrow function expression with given parameters.", "", "pp.parseArrowExpression = function (node, params) ", "-----------------------------------", "// Parse function body and check parameters.", "", "pp.parseFunctionBody = function (node, isArrowFunction) ", "-----------------------------------", "    // Start a new scope with regard to labels and the `inFunction`", "    // flag (restore them to their old value afterwards).", "    var oldInFunc = this.inFunction,", "-----------------------------------", "  // If this is a strict mode function, verify that argument names", "  // are not repeated, and it does not try to bind the words `eval`", "  // or `arguments`.", "  if (this.strict || !isExpression \u0026\u0026 node.body.body.length \u0026\u0026 this.isUseStrict(node.body.body[0])) ", "-----------------------------------", "// Checks function params for various disallowed patterns such as using \"eval\"", "// or \"arguments\" and duplicate parameters.", "", "pp.checkParams = function (node) ", "-----------------------------------", "// Parses a comma-separated list of expressions, and returns them as", "// an array. `close` is the token type that ends the list, and", "// `allowEmpty` can be turned on to allow subsequent commas with", "// nothing in between them to be parsed as `null` (which is needed", "// for array literals).", "", "pp.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) ", "-----------------------------------", "// Parse the next token as an identifier. If `liberal` is true (used", "// when parsing properties), it will also convert keywords into", "// identifiers.", "", "pp.parseIdent = function (liberal) ", "-----------------------------------", "// Parses yield expression inside generator.", "", "pp.parseYield = function () ", "-----------------------------------", "// Parses array and generator comprehensions.", "", "pp.parseComprehension = function (node, isGenerator) ", "-----------------------------------", "// This is a trick taken from Esprima. It turns out that, on", "// non-Chrome browsers, to check whether a string is in a set, a", "// predicate containing a big ugly `switch` statement is faster than", "// a regular expression, and on Chrome the two are about on par.", "// This function uses `eval` (non-lexical) to produce such a", "// predicate from a space-separated string of words.", "//", "// It starts by sorting the words by length.", "", "// Reserved word lists for various dialects of the language", "", "\"use strict\";", "-----------------------------------", "// And the keywords", "", "var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";", "-----------------------------------", "// ## Character categories", "", "// Big ugly regular expressions that match characters in the", "// whitespace, identifier, and identifier-start categories. These", "// are only applied when a character is found to actually have a", "// code point above 128.", "// Generated by `bin/generate-identifier-regex.js`.", "", "var nonASCIIidentifierStartChars = \"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢲऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\";", "-----------------------------------", "// These are a run-length and offset encoded representation of the", "// \u003e0xffff code points that are a valid part of identifiers. The", "// offset starts at 0x10000, and each pair of numbers represents an", "// offset to the next range, and then a size of the range. They were", "// generated by tools/generate-identifier-regex.js", "var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 98, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 955, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 38, 17, 2, 24, 133, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 32, 4, 287, 47, 21, 1, 2, 0, 185, 46, 82, 47, 21, 0, 60, 42, 502, 63, 32, 0, 449, 56, 1288, 920, 104, 110, 2962, 1070, 13266, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 16355, 541];", "-----------------------------------", "// This has a complexity linear to the value of the code. The", "// assumption is that looking up astral identifier characters is", "// rare.", "function isInAstralSet(code, set) ", "-----------------------------------", "// Test whether a given character code starts an identifier.", "", "function isIdentifierStart(code, astral) ", "-----------------------------------", "// Test whether a given character is part of an identifier.", "", "function isIdentifierChar(code, astral) ", "-----------------------------------", "// Acorn is a tiny, fast JavaScript parser written in JavaScript.", "//", "// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and", "// various contributors and released under an MIT license.", "//", "// Git repositories for Acorn are available at", "//", "//     http://marijnhaverbeke.nl/git/acorn", "//     https://github.com/ternjs/acorn.git", "//", "// Please use the [github bug tracker][ghbt] to report issues.", "//", "// [ghbt]: https://github.com/ternjs/acorn/issues", "//", "// This file defines the main parser interface. The library also comes", "// with a [error-tolerant parser][dammit] and an", "// [abstract syntax tree walker][walk], defined in other files.", "//", "// [dammit]: acorn_loose.js", "// [walk]: util/walk.js", "", "\"use strict\";", "-----------------------------------", "// The main exported interface (under `self.acorn` when in the", "// browser) is a `parse` function that takes a code string and", "// returns an abstract syntax tree as specified by [Mozilla parser", "// API][api].", "//", "// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API", "", "function parse(input, options) ", "-----------------------------------", "// This function tries to parse a single expression at a given", "// offset in a string. Useful for parsing mixed-language formats", "// that embed JavaScript expressions.", "", "function parseExpressionAt(input, pos, options) ", "-----------------------------------", "// Acorn is organized as a tokenizer and a recursive-descent parser.", "// The `tokenizer` export provides an interface to the tokenizer.", "", "function tokenizer(input, options) ", "-----------------------------------", "// This function is used to raise exceptions on parse errors. It", "// takes an offset integer (into the current `input`) to indicate", "// the location of the error, attaches the position to the end", "// of the error message, and then raises a `SyntaxError` with that", "// message.", "", "pp.raise = function (pos, message) ", "-----------------------------------", "// These are used when `options.locations` is on, for the", "// `startLoc` and `endLoc` properties.", "", "var Position = (function () ", "-----------------------------------", "// The `getLineInfo` function is mostly useful when the", "// `locations` option is off (for performance reasons) and you", "// want to find the line/column position for a given character", "// offset. `input` should be the code string that the offset refers", "// into.", "", ";", "-----------------------------------", "// Convert existing expression atom to assignable pattern", "// if possible.", "", "pp.toAssignable = function (node, isBinding) ", "-----------------------------------", "          // falls through to AssignmentPattern", "        } else ", "-----------------------------------", "// Convert list of expression atoms to binding list.", "", "pp.toAssignableList = function (exprList, isBinding) ", "-----------------------------------", "// Parses spread element.", "", "pp.parseSpread = function (refDestructuringErrors) ", "-----------------------------------", "  // RestElement inside of a function parameter must be an identifier", "  if (allowNonIdent) node.argument = this.type === _tokentype.types.name ? this.parseIdent() : this.unexpected();else node.argument = this.type === _tokentype.types.name || this.type === _tokentype.types.bracketL ? this.parseBindingAtom() : this.unexpected();", "-----------------------------------", "// Parses lvalue (assignable) atom.", "", "pp.parseBindingAtom = function () ", "-----------------------------------", "// Parses assignment pattern around given atom if possible.", "", "pp.parseMaybeDefault = function (startPos, startLoc, left) ", "-----------------------------------", "// Verify that a node is an lval — something that can be assigned", "// to.", "", "pp.checkLVal = function (expr, isBinding, checkClashes) ", "-----------------------------------", "// Start an AST node, attaching a start offset.", "", ";", "-----------------------------------", "// Finish an AST node, adding `type` and `end` properties.", "", "function finishNodeAt(node, type, pos, loc) ", "-----------------------------------", "// Finish node at given position", "", "pp.finishNodeAt = function (node, type, pos, loc) ", "-----------------------------------", "// A second optional argument can be given to further configure", "// the parser process. These options are recognized:", "", "var defaultOptions = ", "-----------------------------------", "  // `ecmaVersion` indicates the ECMAScript version to parse. Must", "  // be either 3, or 5, or 6. This influences support for strict", "  // mode, the set of reserved words, support for getters and", "  // setters and other features.", "  ecmaVersion: 5,", "-----------------------------------", "  // Source type (\"script\" or \"module\") for different semantics", "  sourceType: \"script\",", "-----------------------------------", "  // `onInsertedSemicolon` can be a callback that will be called", "  // when a semicolon is automatically inserted. It will be passed", "  // th position of the comma as an offset, and if `locations` is", "  // enabled, it is given the location as a `{line, column}` object", "  // as second argument.", "  onInsertedSemicolon: null,", "-----------------------------------", "  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for", "  // trailing commas.", "  onTrailingComma: null,", "-----------------------------------", "  // By default, reserved words are only enforced if ecmaVersion \u003e= 5.", "  // Set `allowReserved` to a boolean value to explicitly turn this on", "  // an off. When this option has the value \"never\", reserved words", "  // and keywords can also not be used as property names.", "  allowReserved: null,", "-----------------------------------", "  // When enabled, a return at the top level is not considered an", "  // error.", "  allowReturnOutsideFunction: false,", "-----------------------------------", "  // When enabled, import/export statements are not constrained to", "  // appearing at the top of the program.", "  allowImportExportEverywhere: false,", "-----------------------------------", "  // When enabled, hashbang directive in the beginning of file", "  // is allowed and treated as a line comment.", "  allowHashBang: false,", "-----------------------------------", "  // When `locations` is on, `loc` properties holding objects with", "  // `start` and `end` properties in `{line, column}` form (with", "  // line being 1-based and column 0-based) will be attached to the", "  // nodes.", "  locations: false,", "-----------------------------------", "  // A function can be passed as `onToken` option, which will", "  // cause Acorn to call that function with object in the same", "  // format as tokens returned from `tokenizer().getToken()`. Note", "  // that you are not allowed to call the parser from the", "  // callback—that will corrupt its internal state.", "  onToken: null,", "-----------------------------------", "  // A function can be passed as `onComment` option, which will", "  // cause Acorn to call that function with `(block, text, start,", "  // end)` parameters whenever a comment is skipped. `block` is a", "  // boolean indicating whether this is a block (`/* */`) comment,", "  // `text` is the content of the comment, and `start` and `end` are", "  // character offsets that denote the start and end of the comment.", "  // When the `locations` option is on, two more parameters are", "  // passed, the full `{line, column}` locations of the start and", "  // end of the comments. Note that you are not allowed to call the", "  // parser from the callback—that will corrupt its internal state.", "  onComment: null,", "-----------------------------------", "  // Nodes have their start and end characters offsets recorded in", "  // `start` and `end` properties (directly on the node, rather than", "  // the `loc` object, which holds line/column data. To also add a", "  // [semi-standardized][range] `range` property holding a `[start,", "  // end]` array with the same numbers, set the `ranges` option to", "  // `true`.", "  //", "  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678", "  ranges: false,", "-----------------------------------", "  // It is possible to parse multiple files into a single AST by", "  // passing the tree produced by parsing the first file as", "  // `program` option in subsequent parses. This will add the", "  // toplevel forms of the parsed file to the `Program` (top) node", "  // of an existing parse tree.", "  program: null,", "-----------------------------------", "  // When `locations` is on, you can pass this to record the source", "  // file in every node's `loc` object.", "  sourceFile: null,", "-----------------------------------", "  // This value, if given, is stored in every node, whether", "  // `locations` is on or off.", "  directSourceFile: null,", "-----------------------------------", "  // When enabled, parenthesized expressions are represented by", "  // (non-standard) ParenthesizedExpression nodes", "  preserveParens: false,", "-----------------------------------", "// Interpret and default an options object", "", "function getOptions(opts) ", "-----------------------------------", "// ## Parser utilities", "", "// Test whether a statement node is the string literal `\"use strict\"`.", "", "pp.isUseStrict = function (stmt) ", "-----------------------------------", "// Predicate that tests whether the next token is of the given", "// type, and if yes, consumes it as a side effect.", "", "pp.eat = function (type) ", "-----------------------------------", "// Tests whether parsed token is a contextual keyword.", "", "pp.isContextual = function (name) ", "-----------------------------------", "// Consumes contextual keyword if possible.", "", "pp.eatContextual = function (name) ", "-----------------------------------", "// Asserts that following token is given contextual keyword.", "", "pp.expectContextual = function (name) ", "-----------------------------------", "// Test whether a semicolon can be inserted at the current position.", "", "pp.canInsertSemicolon = function () ", "-----------------------------------", "// Consume a semicolon, or, failing that, see if we are allowed to", "// pretend that there is a semicolon at this position.", "", "pp.semicolon = function () ", "-----------------------------------", "// Expect a token of a given type. If found, consume it, otherwise,", "// raise an unexpected token error.", "", "pp.expect = function (type) ", "-----------------------------------", "// Raise an unexpected token error.", "", "pp.unexpected = function (pos) ", "-----------------------------------", "// Registered plugins", "var plugins = };", "-----------------------------------", "    // Used to signal to callers of `readWord1` whether the word", "    // contained any escape sequences. This is needed because words with", "    // escape sequences must not be interpreted as keywords.", "    this.containsEsc = false;", "-----------------------------------", "    // Load plugins", "    this.loadPlugins(options.plugins);", "-----------------------------------", "    // Set up token state", "", "    // The current position of the tokenizer in the input.", "    if (startPos) ", "-----------------------------------", "    // Properties of the current token:", "    // Its type", "    this.type = _tokentype.types.eof;", "-----------------------------------", "    // For tokens that include more information than their type, the value", "    this.value = null;", "-----------------------------------", "    // Its start and end offset", "    this.start = this.end = this.pos;", "-----------------------------------", "    // And, if locations are used, the {line, column} object", "    // corresponding to those offsets", "    this.startLoc = this.endLoc = this.curPosition();", "-----------------------------------", "    // Position information for the previous token", "    this.lastTokEndLoc = this.lastTokStartLoc = null;", "-----------------------------------", "    // The context stack is used to superficially track syntactic", "    // context to predict whether a regular expression is allowed in a", "    // given position.", "    this.context = this.initialContext();", "-----------------------------------", "    // Figure out if it's a module code.", "    this.strict = this.inModule = options.sourceType === \"module\";", "-----------------------------------", "    // Used to signify the start of a potential arrow function", "    this.potentialArrowAt = -1;", "-----------------------------------", "    // Flags to track whether we are in a function, a generator.", "    this.inFunction = this.inGenerator = false;", "-----------------------------------", "    // Labels in scope.", "    this.labels = [];", "-----------------------------------", "    // If enabled, skip leading hashbang line.", "    if (this.pos === 0 \u0026\u0026 options.allowHashBang \u0026\u0026 this.input.slice(0, 2) === '#!') this.skipLineComment(2);", "-----------------------------------", "  // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them", "", "  Parser.prototype.isKeyword = function isKeyword(word) ", "-----------------------------------", "// ### Statement parsing", "", "// Parse a program. Initializes the parser, reads any number of", "// statements, and wraps them in a Program node.  Optionally takes a", "// `program` argument.  If present, the statements will be appended", "// to its body instead of creating a new node.", "", "pp.parseTopLevel = function (node) ", "-----------------------------------", "// Parse a single statement.", "//", "// If expecting a statement and finding a slash operator, parse a", "// regular expression literal. This is to handle cases like", "// `if (foo) /blah/.exec(foo)`, where looking at the previous token", "// does not help.", "", "pp.parseStatement = function (declaration, topLevel) ", "-----------------------------------", "  // Most types of statements are recognized by the keyword they", "  // start with. Many are trivial to parse, some require a bit of", "  // complexity.", "", "  switch (starttype) ", "-----------------------------------", "      if (!declaration) this.unexpected(); // NOTE: falls through to _var", "    case _tokentype.types._var:", "-----------------------------------", "    // If the statement does not start with a statement keyword or a", "    // brace, it's an ExpressionStatement or LabeledStatement. We", "    // simply start parsing an expression, and afterwards, if the", "    // next token is a colon and the expression was a simple", "    // Identifier node, we switch to interpreting it as a label.", "    default:", "-----------------------------------", "  // Verify that there is an actual destination to break or", "  // continue to.", "  for (var i = 0; i \u003c this.labels.length; ++i) ", "-----------------------------------", "// Disambiguating between a `for` and a `for`/`in` or `for`/`of`", "// loop is non-trivial. Basically, we have to parse the init `var`", "// statement or expression, disallowing the `in` operator (see", "// the second parameter to `parseExpression`), and then check", "// whether the next token is `in` or `of`. When there is no init", "// part (semicolon immediately after the opening parenthesis), it", "// is a regular `for` loop.", "", "pp.parseForStatement = function (node) ", "-----------------------------------", "  // In `return` (and `break`/`continue`), the keywords with", "  // optional arguments, we eagerly look for a semicolon or the", "  // possibility to insert one.", "", "  if (this.eat(_tokentype.types.semi) || this.insertSemicolon()) node.argument = null;else ", "-----------------------------------", "  // Statements under must be grouped (by label) in SwitchCase", "  // nodes. `cur` is used to keep the node that we are currently", "  // adding statements to.", "", "  for (var cur, sawDefault = false; this.type != _tokentype.types.braceR;) ", "-----------------------------------", "  this.next(); // Closing brace", "  this.labels.pop();", "-----------------------------------", "// Reused empty array added for node fields that are always empty.", "", "var empty = [];", "-----------------------------------", "// Parse a semicolon-enclosed block of statements, handling `\"use", "// strict\"` declarations when `allowStrict` is true (used for", "// function bodies).", "", "pp.parseBlock = function (allowStrict) ", "-----------------------------------", "// Parse a regular `for` loop. The disambiguation code in", "// `parseStatement` will already have parsed the init statement or", "// expression.", "", "pp.parseFor = function (node, init) ", "-----------------------------------", "// Parse a `for`/`in` and `for`/`of` loop, which are almost", "// same from parser's perspective.", "", "pp.parseForIn = function (node, init) ", "-----------------------------------", "// Parse a list of variable declarations.", "", "pp.parseVar = function (node, isFor, kind) ", "-----------------------------------", "// Parse a function declaration or literal (depending on the", "// `isStatement` parameter).", "", "pp.parseFunction = function (node, isStatement, allowExpressionBody) ", "-----------------------------------", "// Parse a class declaration or literal (depending on the", "// `isStatement` parameter).", "", "pp.parseClass = function (node, isStatement) ", "-----------------------------------", "// Parses module export declaration.", "", "pp.parseExport = function (node) ", "-----------------------------------", "  // export * from '...'", "  if (this.eat(_tokentype.types.star)) ", "-----------------------------------", "    // export default ...", "    var expr = this.parseMaybeAssign();", "-----------------------------------", "  // export var|const|let|function|class ...", "  if (this.shouldParseExportStatement()) ", "-----------------------------------", "    // export { x, y as z } [from '...']", "    node.declaration = null;", "-----------------------------------", "      // check for keywords used as local names", "      for (var i = 0; i \u003c node.specifiers.length; i++) ", "-----------------------------------", "// Parses a comma-separated list of module exports.", "", "pp.parseExportSpecifiers = function () ", "-----------------------------------", "  // export { x, y as z } [from '...']", "  this.expect(_tokentype.types.braceL);", "-----------------------------------", "// Parses import declaration.", "", "pp.parseImport = function (node) ", "-----------------------------------", "  // import '...'", "  if (this.type === _tokentype.types.string) ", "-----------------------------------", "// Parses a comma-separated list of module imports.", "", "pp.parseImportSpecifiers = function () ", "-----------------------------------", "    // import defaultObj, { x, y as z } from '...'", "    var node = this.startNode();", "-----------------------------------", "// The algorithm used to determine whether a regexp can appear at a", "// given point in the program is loosely based on sweet.js' approach.", "// See https://github.com/mozilla/sweet.js/wiki/design", "", "\"use strict\";", "-----------------------------------", "// Token-specific context update code", "", "_tokentype.types.parenR.updateContext = _tokentype.types.braceR.updateContext = function () ", "-----------------------------------", "  // tokExprAllowed stays unchanged", "};", "-----------------------------------", "// Object type used to represent tokens. Note that normally, tokens", "// simply exist as properties on the parser object. This is only", "// used for the onToken callback and the external tokenizer.", "", "var Token = function Token(p) ", "-----------------------------------", "// ## Tokenizer", "", ";", "-----------------------------------", "// Are we running under Rhino?", "var isRhino = typeof Packages == \"object\" \u0026\u0026 Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";", "-----------------------------------", "// Move to the next token", "", "pp.next = function () ", "-----------------------------------", "// If we're in an ES6 environment, make parsers iterable", "if (typeof Symbol !== \"undefined\") pp[Symbol.iterator] = function () ", "-----------------------------------", "// Toggle strict mode. Re-reads the next number or string to please", "// pedantic tests (`\"use strict\"; 010;` should fail).", "", "pp.setStrict = function (strict) ", "-----------------------------------", "// Read a single token, updating the parser object's token-related", "// properties.", "", "pp.nextToken = function () ", "-----------------------------------", "  // Identifier or keyword. '\\uXXXX' sequences are allowed in", "  // identifiers, so '\\' also dispatches to that.", "  if (_identifier.isIdentifierStart(code, this.options.ecmaVersion \u003e= 6) || code === 92 /* '\\' */) return this.readWord();", "-----------------------------------", "// Called at the start of the parse and after every token. Skips", "// whitespace and comments, and.", "", "pp.skipSpace = function () ", "-----------------------------------", "        // ' '", "        ++this.pos;", "-----------------------------------", "        // '/'", "        switch (this.input.charCodeAt(this.pos + 1)) ", "-----------------------------------", "            // '*'", "            this.skipBlockComment();", "-----------------------------------", "// Called at the end of every token. Sets `end`, `val`, and", "// maintains `context` and `exprAllowed`, and skips the space after", "// the token, so that the next one's `start` will point at the", "// right position.", "", "pp.finishToken = function (type, val) ", "-----------------------------------", "// ### Token reading", "", "// This is the function that is called to fetch the next token. It", "// is somewhat obscure, because it works in character codes rather", "// than characters, and because operator parsing has been inlined", "// into it.", "//", "// All in the name of speed.", "//", "pp.readToken_dot = function () ", "-----------------------------------", "    // 46 = dot '.'", "    this.pos += 3;", "-----------------------------------", "  // '/'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "  // '%*'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "  // '|\u0026'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "  // '^'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "  // '+-'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "      // A `--\u003e` line comment", "      this.skipLineComment(3);", "-----------------------------------", "  // '\u003c\u003e'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "    // `\u003c!--`, an XML-style comment that should be interpreted as a line comment", "    this.skipLineComment(4);", "-----------------------------------", "  // '=!'", "  var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "    // '=\u003e'", "    this.pos += 2;", "-----------------------------------", "    // The interpretation of a dot depends on whether it is followed", "    // by a digit or another two dots.", "    case 46:", "-----------------------------------", "      // '.'", "      return this.readToken_dot();", "-----------------------------------", "    // Punctuation tokens.", "    case 40:", "-----------------------------------", "      // '`'", "      if (this.options.ecmaVersion \u003c 6) break;", "-----------------------------------", "      // '0'", "      var next = this.input.charCodeAt(this.pos + 1);", "-----------------------------------", "      if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number", "      if (this.options.ecmaVersion \u003e= 6) ", "-----------------------------------", "        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number", "        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number", "      }", "-----------------------------------", "    // Anything else beginning with a digit is an integer, octal", "    // number, or float.", "    case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:", "-----------------------------------", "      // 1-9", "      return this.readNumber(false);", "-----------------------------------", "    // Quotes produce strings.", "    case 34:case 39:", "-----------------------------------", "      // '\"', \"'\"", "      return this.readString(code);", "-----------------------------------", "    // Operators are parsed inline in tiny state machines. '=' (61) is", "    // often referred to. `finishOp` simply skips the amount of", "    // characters it is given as second argument, and returns a token", "    // of the type given by its first argument.", "", "    case 47:", "-----------------------------------", "      // '/'", "      return this.readToken_slash();", "-----------------------------------", "      // '%*'", "      return this.readToken_mult_modulo(code);", "-----------------------------------", "      // '|\u0026'", "      return this.readToken_pipe_amp(code);", "-----------------------------------", "      // '^'", "      return this.readToken_caret();", "-----------------------------------", "      // '+-'", "      return this.readToken_plus_min(code);", "-----------------------------------", "      // '\u003c\u003e'", "      return this.readToken_lt_gt(code);", "-----------------------------------", "      // '=!'", "      return this.readToken_eq_excl(code);", "-----------------------------------", "      // '~'", "      return this.finishOp(_tokentype.types.prefix, 1);", "-----------------------------------", "// Parse a regular expression. Some context-awareness is necessary,", "// since a '/' inside a '[]' set does not end the expression.", "", "function tryCreateRegexp(src, flags, throwErrorAt, parser) ", "-----------------------------------", "  // Need to use `readWord1` because '\\uXXXX' sequences are allowed", "  // here (don't ask).", "  var mods = this.readWord1();", "-----------------------------------", "      // Replace each astral symbol and every Unicode escape sequence that", "      // possibly represents an astral symbol or a paired surrogate with a", "      // single ASCII symbol to avoid throwing on regular expressions that", "      // are only valid in combination with the `/u` flag.", "      // Note: replacing with the ASCII symbol `x` might cause false", "      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a", "      // perfectly valid pattern that is equivalent to `[a-b]`, but it would", "      // be replaced by `[x-b]` which throws an error.", "      tmp = tmp.replace(/\\\\u\\([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {", "-----------------------------------", "  // Detect invalid regular expressions.", "  var value = null;", "-----------------------------------", "  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,", "  // so don't do detection if we are running under Rhino", "  if (!isRhino) ", "-----------------------------------", "    // Get a regular expression object for this pattern-flag pair, or `null` in", "    // case the current environment doesn't support the flags it uses.", "    value = tryCreateRegexp(content, mods);", "-----------------------------------", "// Read an integer in the given radix. Return null if zero digits", "// were read, the integer value otherwise. When `len` is given, this", "// will return `null` unless the integer has exactly `len` digits.", "", "pp.readInt = function (radix, len) ", "-----------------------------------", "    if (code \u003e= 97) val = code - 97 + 10; // a", "    else if (code \u003e= 65) val = code - 65 + 10; // A", "      else if (code \u003e= 48 \u0026\u0026 code \u003c= 57) val = code - 48; // 0-9", "        else val = Infinity;", "-----------------------------------", "  this.pos += 2; // 0x", "  var val = this.readInt(radix);", "-----------------------------------", "// Read an integer, octal integer, or floating-point number.", "", "pp.readNumber = function (startsWithDot) ", "-----------------------------------", "    // '.'", "    ++this.pos;", "-----------------------------------", "    // 'eE'", "    next = this.input.charCodeAt(++this.pos);", "-----------------------------------", "    if (next === 43 || next === 45) ++this.pos; // '+-'", "    if (this.readInt(10) === null) this.raise(start, \"Invalid number\");", "-----------------------------------", "// Read a string value, interpreting backslash-escapes.", "", "pp.readCodePoint = function () ", "-----------------------------------", "  // UTF-16 Decoding", "  if (code \u003c= 0xFFFF) return String.fromCharCode(code);", "-----------------------------------", "      // '\\'", "      out += this.input.slice(chunkStart, this.pos);", "-----------------------------------", "// Reads template string tokens.", "", "pp.readTmplToken = function () ", "-----------------------------------", "      // '`', '${'", "      if (this.pos === this.start \u0026\u0026 this.type === _tokentype.types.template) ", "-----------------------------------", "      // '\\'", "      out += this.input.slice(chunkStart, this.pos);", "-----------------------------------", "// Used to read escaped characters", "", "pp.readEscapedChar = function (inTemplate) ", "-----------------------------------", "      return \"\\n\"; // 'n' -\u003e '\\n'", "    case 114:", "-----------------------------------", "      return \"\\r\"; // 'r' -\u003e '\\r'", "    case 120:", "-----------------------------------", "      return String.fromCharCode(this.readHexChar(2)); // 'x'", "    case 117:", "-----------------------------------", "      return codePointToString(this.readCodePoint()); // 'u'", "    case 116:", "-----------------------------------", "      return \"\\t\"; // 't' -\u003e '\\t'", "    case 98:", "-----------------------------------", "      return \"\\b\"; // 'b' -\u003e '\\b'", "    case 118:", "-----------------------------------", "      return \"\\u000b\"; // 'v' -\u003e '\\u000b'", "    case 102:", "-----------------------------------", "      return \"\\f\"; // 'f' -\u003e '\\f'", "    case 13:", "-----------------------------------", "      if (this.input.charCodeAt(this.pos) === 10) ++this.pos; // '\\r\\n'", "    case 10:", "-----------------------------------", "      // ' \\n'", "      if (this.options.locations) ", "-----------------------------------", "// Used to read character escape sequences ('\\x', '\\u', '\\U').", "", "pp.readHexChar = function (len) ", "-----------------------------------", "// Read an identifier, and return it as a string. Sets `this.containsEsc`", "// to whether the word contained a '\\u' escape.", "//", "// Incrementally adds only escaped chars, adding other chunks as-is", "// as a micro-optimization.", "", "pp.readWord1 = function () ", "-----------------------------------", "      // \"\\\"", "      this.containsEsc = true;", "-----------------------------------", "      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"", "        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");", "-----------------------------------", "// Read an identifier or keyword token. Will check for reserved", "// words when necessary.", "", "pp.readWord = function () ", "-----------------------------------", "// ## Token types", "", "// The assignment of fine-grained, information-carrying type objects", "// allows the tokenizer to store the information it has about a", "// token in a way that is very cheap for the parser to look up.", "", "// All token type variables start with an underscore, to make them", "// easy to recognize.", "", "// The `beforeExpr` property is used to disambiguate between regular", "// expressions and divisions. It is set on all token types that can", "// be followed by an expression (thus, a slash after them would be a", "// regular expression).", "//", "// The `startsExpr` property is used to check if the token ends a", "// `yield` expression. It is set on all token types that either can", "// directly start an expression (like a quotation mark) or can", "// continue an expression (like the body of a string).", "//", "// `isLoop` marks a keyword as starting a loop, which is important", "// to know when parsing a label, in order to allow or disallow", "// continue jumps to that label.", "", "\"use strict\";", "-----------------------------------", "  // Punctuation token types.", "  bracketL: new TokenType(\"[\",  beforeExpr: true, startsExpr: true }),", "-----------------------------------", "  // Operators. These carry several kinds of properties to help the", "  // parser use them properly (the presence of these properties is", "  // what categorizes them as operators).", "  //", "  // `binop`, when present, specifies that this operator is a binary", "  // operator, and will refer to its precedence.", "  //", "  // `prefix` and `postfix` mark the operator as a prefix or postfix", "  // unary operator.", "  //", "  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as", "  // binary operators with a very low precedence, that should result", "  // in AssignmentExpression nodes.", "", "  eq: new TokenType(\"=\",  beforeExpr: true, isAssign: true }),", "-----------------------------------", "// Map keyword names to token types.", "", "var keywords = };", "-----------------------------------", "// Succinct definitions of keyword token types", "function kw(name) ", "-----------------------------------", "// Checks if an object has a property.", "", "function has(obj, propName) ", "-----------------------------------", "// Matches a whole line break (where CRLF is considered a single", "// line break). Used to count lines.", "", "\"use strict\";", "-----------------------------------"],
		"Functions": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.acorn = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "// A recursive descent parser operates by defining functions for all", "// syntactic elements, and recursively calling those, each function", "// function that parses unary prefix operators is called first, and", "// in turn calls the function that parses `[]` subscripts — that", "// functions to specify precedence, for all of the ten binary", "pp.checkPropClash = function (prop, propHash) ", "// the functions will simply let the function(s) below them parse,", "pp.parseExpression = function (noIn, refDestructuringErrors) ", "pp.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) ", "pp.parseMaybeConditional = function (noIn, refDestructuringErrors) ", "pp.parseExprOps = function (noIn, refDestructuringErrors) ", "// `minPrec` provides context that allows the function to stop and", "pp.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) ", "pp.parseMaybeUnary = function (refDestructuringErrors) ", "pp.parseExprSubscripts = function (refDestructuringErrors) ", "pp.parseSubscripts = function (base, startPos, startLoc, noCalls) ", "// expression, an expression started by a keyword like `function` or", "pp.parseExprAtom = function (refDestructuringErrors) ", "      if (!this.inFunction) this.raise(this.start, \"'super' outside of function or class\");", "    case _tokentype.types._function:", "pp.parseLiteral = function (value) ", "pp.parseParenExpression = function () ", "pp.parseParenAndDistinguishExpression = function (canBeArrow) ", "pp.parseParenItem = function (item) ", "pp.parseParenArrowList = function (startPos, startLoc, exprList) ", "pp.parseNew = function () ", "    if (!this.inFunction) this.raise(node.start, \"new.target can only be used in functions\");", "pp.parseTemplateElement = function () ", "pp.parseTemplate = function () ", "pp.parseObj = function (isPattern, refDestructuringErrors) ", "pp.parsePropertyValue = function (prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) ", "pp.parsePropertyName = function (prop) ", "// Initialize empty function node.", "pp.initFunction = function (node) ", "pp.parseMethod = function (isGenerator) ", "// Parse arrow function expression with given parameters.", "pp.parseArrowExpression = function (node, params) ", "// Parse function body and check parameters.", "pp.parseFunctionBody = function (node, isArrowFunction) ", "  // If this is a strict mode function, verify that argument names", "// Checks function params for various disallowed patterns such as using \"eval\"", "pp.checkParams = function (node) ", "pp.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) ", "pp.parseIdent = function (liberal) ", "pp.parseYield = function () ", "pp.parseComprehension = function (node, isGenerator) ", "},\"./state\":10,\"./tokentype\":14}],2:[function(_dereq_,module,exports){", "// This function uses `eval` (non-lexical) to produce such a", "var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";", "function isInAstralSet(code, set) ", "function isIdentifierStart(code, astral) ", "function isIdentifierChar(code, astral) ", "},}],3:[function(_dereq_,module,exports){", "// browser) is a `parse` function that takes a code string and", "function parse(input, options) ", "// This function tries to parse a single expression at a given", "function parseExpressionAt(input, pos, options) ", "function tokenizer(input, options) ", "},\"./expression\":1,\"./identifier\":2,\"./location\":4,\"./locutil\":5,\"./lval\":6,\"./node\":7,\"./options\":8,\"./parseutil\":9,\"./state\":10,\"./statement\":11,\"./tokencontext\":12,\"./tokenize\":13,\"./tokentype\":14,\"./whitespace\":16}],4:[function(_dereq_,module,exports){", "// This function is used to raise exceptions on parse errors. It", "pp.raise = function (pos, message) ", "pp.curPosition = function () ", "},\"./locutil\":5,\"./state\":10}],5:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var Position = (function () ", "  function Position(line, col) ", "  Position.prototype.offset = function offset(n) ", "var SourceLocation = function SourceLocation(p, start, end) ", "// The `getLineInfo` function is mostly useful when the", "function getLineInfo(input, offset) ", "},\"./whitespace\":16}],6:[function(_dereq_,module,exports){", "pp.toAssignable = function (node, isBinding) ", "pp.toAssignableList = function (exprList, isBinding) ", "pp.parseSpread = function (refDestructuringErrors) ", "pp.parseRest = function (allowNonIdent) ", "  // RestElement inside of a function parameter must be an identifier", "pp.parseBindingAtom = function () ", "pp.parseBindingList = function (close, allowEmpty, allowTrailingComma, allowNonIdent) ", "pp.parseBindingListItem = function (param) ", "pp.parseMaybeDefault = function (startPos, startLoc, left) ", "pp.checkLVal = function (expr, isBinding, checkClashes) ", "},\"./state\":10,\"./tokentype\":14,\"./util\":15}],7:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var Node = function Node(parser, pos, loc) ", "pp.startNode = function () ", "pp.startNodeAt = function (pos, loc) ", "function finishNodeAt(node, type, pos, loc) ", "pp.finishNode = function (node, type) ", "pp.finishNodeAt = function (node, type, pos, loc) ", "},\"./locutil\":5,\"./state\":10}],8:[function(_dereq_,module,exports){", "  // A function can be passed as `onToken` option, which will", "  // cause Acorn to call that function with object in the same", "  // A function can be passed as `onComment` option, which will", "  // cause Acorn to call that function with `(block, text, start,", "function getOptions(opts) ", "    (function () ", "      options.onToken = function (token) ", "function pushComment(options, array) ", "  return function (block, text, start, end, startLoc, endLoc) ", "},\"./locutil\":5,\"./util\":15}],9:[function(_dereq_,module,exports){", "pp.isUseStrict = function (stmt) ", "pp.eat = function (type) ", "pp.isContextual = function (name) ", "pp.eatContextual = function (name) ", "pp.expectContextual = function (name) ", "pp.canInsertSemicolon = function () ", "pp.insertSemicolon = function () ", "pp.semicolon = function () ", "pp.afterTrailingComma = function (tokType) ", "pp.expect = function (type) ", "pp.unexpected = function (pos) ", "pp.checkPatternErrors = function (refDestructuringErrors, andThrow) ", "pp.checkExpressionErrors = function (refDestructuringErrors, andThrow) ", "},\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],10:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "function keywordRegexp(words) ", "var Parser = (function () ", "  function Parser(options, input, startPos) ", "    // Used to signify the start of a potential arrow function", "    // Flags to track whether we are in a function, a generator.", "  Parser.prototype.isKeyword = function isKeyword(word) ", "  Parser.prototype.isReservedWord = function isReservedWord(word) ", "  Parser.prototype.extend = function extend(name, f) ", "  Parser.prototype.loadPlugins = function loadPlugins(pluginConfigs) ", "  Parser.prototype.parse = function parse() ", "},\"./identifier\":2,\"./options\":8,\"./tokentype\":14,\"./whitespace\":16}],11:[function(_dereq_,module,exports){", "pp.parseTopLevel = function (node) ", "pp.parseStatement = function (declaration, topLevel) ", "    case _tokentype.types._function:", "pp.parseBreakContinueStatement = function (node, keyword) ", "pp.parseDebuggerStatement = function (node) ", "pp.parseDoStatement = function (node) ", "pp.parseForStatement = function (node) ", "pp.parseFunctionStatement = function (node) ", "pp.parseIfStatement = function (node) ", "pp.parseReturnStatement = function (node) ", "  if (!this.inFunction \u0026\u0026 !this.options.allowReturnOutsideFunction) this.raise(this.start, \"'return' outside of function\");", "pp.parseSwitchStatement = function (node) ", "pp.parseThrowStatement = function (node) ", "pp.parseTryStatement = function (node) ", "pp.parseVarStatement = function (node, kind) ", "pp.parseWhileStatement = function (node) ", "pp.parseWithStatement = function (node) ", "pp.parseEmptyStatement = function (node) ", "pp.parseLabeledStatement = function (node, maybeName, expr) ", "pp.parseExpressionStatement = function (node, expr) ", "// function bodies).", "pp.parseBlock = function (allowStrict) ", "pp.parseFor = function (node, init) ", "pp.parseForIn = function (node, init) ", "pp.parseVar = function (node, isFor, kind) ", "pp.parseVarId = function (decl) ", "// Parse a function declaration or literal (depending on the", "pp.parseFunction = function (node, isStatement, allowExpressionBody) ", "pp.parseFunctionParams = function (node) ", "pp.parseClass = function (node, isStatement) ", "pp.parseClassMethod = function (classBody, method, isGenerator) ", "pp.parseClassId = function (node, isStatement) ", "pp.parseClassSuper = function (node) ", "pp.parseExport = function (node) ", "  // export var|const|let|function|class ...", "pp.shouldParseExportStatement = function () ", "pp.parseExportSpecifiers = function () ", "pp.parseImport = function (node) ", "pp.parseImportSpecifiers = function () ", "},\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],12:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var TokContext = function TokContext(token, isExpr, preserveSpace, override) ", "  q_tmpl: new TokContext(\"`\", true, true, function (p) ", "  f_expr: new TokContext(\"function\", true)", "pp.initialContext = function () ", "pp.braceIsBlock = function (prevType) ", "pp.updateContext = function (prevType) ", "_tokentype.types.parenR.updateContext = _tokentype.types.braceR.updateContext = function () ", "_tokentype.types.braceL.updateContext = function (prevType) ", "_tokentype.types.dollarBraceL.updateContext = function () ", "_tokentype.types.parenL.updateContext = function (prevType) ", "_tokentype.types.incDec.updateContext = function () ", "_tokentype.types._function.updateContext = function () ", "_tokentype.types.backQuote.updateContext = function () ", "},\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],13:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var Token = function Token(p) ", "pp.next = function () ", "pp.getToken = function () ", "if (typeof Symbol !== \"undefined\") pp[Symbol.iterator] = function () ", "  return  next: function next() {", "pp.setStrict = function (strict) ", "pp.curContext = function () ", "pp.nextToken = function () ", "pp.readToken = function (code) ", "pp.fullCharCodeAtPos = function () ", "pp.skipBlockComment = function () ", "pp.skipLineComment = function (startSkip) ", "pp.skipSpace = function () ", "pp.finishToken = function (type, val) ", "// This is the function that is called to fetch the next token. It", "pp.readToken_dot = function () ", "pp.readToken_slash = function () ", "pp.readToken_mult_modulo = function (code) ", "pp.readToken_pipe_amp = function (code) ", "pp.readToken_caret = function () ", "pp.readToken_plus_min = function (code) ", "pp.readToken_lt_gt = function (code) ", "pp.readToken_eq_excl = function (code) ", "pp.getTokenFromCode = function (code) ", "pp.finishOp = function (type, size) ", "function tryCreateRegexp(src, flags, throwErrorAt, parser) ", "pp.readRegexp = function () ", "      tmp = tmp.replace(/\\\\u\\([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {", "pp.readInt = function (radix, len) ", "pp.readRadixNumber = function (radix) ", "pp.readNumber = function (startsWithDot) ", "pp.readCodePoint = function () ", "function codePointToString(code) ", "pp.readString = function (quote) ", "pp.readTmplToken = function () ", "pp.readEscapedChar = function (inTemplate) ", "pp.readHexChar = function (len) ", "pp.readWord1 = function () ", "pp.readWord = function () ", "},\"./identifier\":2,\"./locutil\":5,\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],14:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var TokenType = function TokenType(label) ", "function binop(name, prec) ", "function kw(name) ", "kw(\"function\", startsExpr);", "},}],15:[function(_dereq_,module,exports){", "function isArray(obj) ", "function has(obj, propName) ", "},}],16:[function(_dereq_,module,exports){", "function isNewLine(code) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\dist\\acorn_loose.js",
		"LineCount": 1300,
		"CharCount": 44064,
		"Comments": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).loose = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start;", "-----------------------------------", "// Convert existing expression atom to assignable pattern", "// if possible.", "", "lp.toAssignable = function (node, binding) ", "-----------------------------------", "    // Okay", "  } else if (node.type == \"ParenthesizedExpression\") ", "-----------------------------------", "  this.next(); // Opening bracket", "  while (!this.closes(close, indent + 1, line)) ", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start;", "-----------------------------------", "// Acorn: Loose parser", "//", "// This module provides an alternative parser (`parse_dammit`) that", "// exposes that same interface as `parse`, but will try to parse", "// anything as JavaScript, repairing syntax error the best it can.", "// There are circumstances in which it will raise an error and give", "// up, but they are very rare. The resulting AST will be a mostly", "// valid JavaScript AST (as per the [Mozilla parser API][api], except", "// that:", "//", "// - Return outside functions is allowed", "//", "// - Label consistency (no conflicts, break only to existing labels)", "//   is not enforced.", "//", "// - Bogus Identifier nodes with a name of `\"✖\"` are inserted whenever", "//   the parser got too confused to return anything meaningful.", "//", "// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API", "//", "// The expected use for this is to *first* try `acorn.parse`, and only", "// if that fails switch to `parse_dammit`. The loose parser might", "// parse badly indented code incorrectly, so **don't** use it as", "// your default parser.", "//", "// Quite a lot of acorn.js is duplicated here. The alternative was to", "// add a *lot* of extra cruft to that file, making it less readable", "// and slower. Copying and editing the code allowed me to make", "// invasive changes and simplifications without creating a complicated", "// tangle.", "", "\"use strict\";", "-----------------------------------", "// Registered plugins", "var pluginsLoose = };", "-----------------------------------", "    this.ahead = []; // Tokens ahead", "    this.context = []; // Indentation contexted", "    this.curIndent = 0;", "-----------------------------------", "    // Load plugins", "    this.options.pluginsLoose = options.pluginsLoose || };", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start;", "-----------------------------------", "      // Try to skip some text, based on the error message, and then continue", "      var msg = e.message,", "-----------------------------------"],
		"Functions": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).loose = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "},}],2:[function(_dereq_,module,exports){", "lp.checkLVal = function (expr) ", "lp.parseExpression = function (noIn) ", "lp.parseParenExpression = function () ", "lp.parseMaybeAssign = function (noIn) ", "lp.parseMaybeConditional = function (noIn) ", "lp.parseExprOps = function (noIn) ", "lp.parseExprOp = function (left, start, minPrec, noIn, indent, line) ", "lp.parseMaybeUnary = function (noIn) ", "lp.parseExprSubscripts = function () ", "lp.parseSubscripts = function (base, start, noCalls, startIndent, line) ", "lp.parseExprAtom = function () ", "    case _.tokTypes._function:", "lp.parseNew = function () ", "lp.parseTemplateElement = function () ", "lp.parseTemplate = function () ", "lp.parseObj = function () ", "lp.parsePropertyName = function (prop) ", "lp.parsePropertyAccessor = function () ", "lp.parseIdent = function () ", "lp.initFunction = function (node) ", "lp.toAssignable = function (node, binding) ", "lp.toAssignableList = function (exprList, binding) ", "lp.parseFunctionParams = function (params) ", "lp.parseMethod = function (isGenerator) ", "lp.parseArrowExpression = function (node, params) ", "lp.parseExprList = function (close, allowEmpty) ", "},\"..\":1,\"./parseutil\":4,\"./state\":5}],3:[function(_dereq_,module,exports){", "// - Return outside functions is allowed", "function _interopRequireWildcard(obj)  if (obj \u0026\u0026 obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }", "function parse_dammit(input, options) ", "},\"..\":1,\"./expression\":2,\"./state\":5,\"./statement\":6,\"./tokenize\":7}],4:[function(_dereq_,module,exports){", "function isDummy(node) ", "},}],5:[function(_dereq_,module,exports){", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "var LooseParser = (function () ", "  function LooseParser(input, options) ", "  LooseParser.prototype.startNode = function startNode() ", "  LooseParser.prototype.storeCurrentPos = function storeCurrentPos() ", "  LooseParser.prototype.startNodeAt = function startNodeAt(pos) ", "  LooseParser.prototype.finishNode = function finishNode(node, type) ", "  LooseParser.prototype.dummyNode = function dummyNode(type) ", "  LooseParser.prototype.dummyIdent = function dummyIdent() ", "  LooseParser.prototype.dummyString = function dummyString() ", "  LooseParser.prototype.eat = function eat(type) ", "  LooseParser.prototype.isContextual = function isContextual(name) ", "  LooseParser.prototype.eatContextual = function eatContextual(name) ", "  LooseParser.prototype.canInsertSemicolon = function canInsertSemicolon() ", "  LooseParser.prototype.semicolon = function semicolon() ", "  LooseParser.prototype.expect = function expect(type) ", "  LooseParser.prototype.pushCx = function pushCx() ", "  LooseParser.prototype.popCx = function popCx() ", "  LooseParser.prototype.lineEnd = function lineEnd(pos) ", "  LooseParser.prototype.indentationAfter = function indentationAfter(pos) ", "  LooseParser.prototype.closes = function closes(closeTok, indent, line, blockHeuristic) ", "  LooseParser.prototype.tokenStartsLine = function tokenStartsLine() ", "  LooseParser.prototype.extend = function extend(name, f) ", "  LooseParser.prototype.loadPlugins = function loadPlugins(pluginConfigs) ", "},\"..\":1}],6:[function(_dereq_,module,exports){", "lp.parseTopLevel = function () ", "lp.parseStatement = function () ", "    case _.tokTypes._function:", "lp.parseBlock = function () ", "lp.parseFor = function (node, init) ", "lp.parseForIn = function (node, init) ", "lp.parseVar = function (noIn) ", "lp.parseClass = function (isStatement) ", "lp.parseFunction = function (node, isStatement) ", "lp.parseExport = function () ", "lp.parseImport = function () ", "lp.parseImportSpecifierList = function () ", "lp.parseExportSpecifierList = function () ", "},\"..\":1,\"./parseutil\":4,\"./state\":5}],7:[function(_dereq_,module,exports){", "function isSpace(ch) ", "lp.next = function () ", "lp.readToken = function () ", "lp.resetTo = function (pos) ", "lp.lookAhead = function (n) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\dist\\walk.js",
		"LineCount": 377,
		"CharCount": 12950,
		"Comments": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).walk = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "-----------------------------------", "// AST walker module for Mozilla Parser API compatible trees", "", "// A simple walk is one where you simply specify callbacks to be", "// called on specific nodes. The last two arguments are optional. A", "// simple use would be", "//", "//     walk.simple(myTree, {", "//         Expression: function(node) { ... }", "//     });", "//", "// to do something with all expressions. All Parser API node types", "// can be used to identify node types, as well as Expression,", "// Statement, and ScopeBody, which denote categories of nodes.", "//", "// The base argument can be used to pass a custom (recursive)", "// walker, and state can be used to give this walked an initial", "// state.", "", "\"use strict\";", "-----------------------------------", "// An ancestor walk builds up an array of ancestor nodes (including", "// the current node) and passes them to the callback as the state parameter.", "", "function ancestor(node, visitors, base, state) ", "-----------------------------------", "// A recursive walk is one where your functions override the default", "// walkers. They can modify and replace the state parameter that's", "// threaded through the walk, and can opt how and whether to walk", "// their child nodes (by calling their third argument on these", "// nodes).", "", "function recursive(node, state, funcs, base, override) ", "-----------------------------------", "// Find a node with a given start, end, and type (all are optional,", "// null can be used as wildcard). Returns a {node, state} object, or", "// undefined when it doesn't find a matching node.", ";", "-----------------------------------", "// Find the innermost node of a given type that contains the given", "// position. Interface similar to findNodeAt.", "", "function findNodeAround(node, pos, test, base, state) ", "-----------------------------------", "// Find the outermost matching node after a given position.", "", "function findNodeAfter(node, pos, test, base, state) ", "-----------------------------------", "// Find the outermost matching node before a given position.", "", "function findNodeBefore(node, pos, test, base, state) ", "-----------------------------------", "// Used to create a custom walker. Will fill in all missing node", "// type properties with the defaults.", "", "function make(funcs, base) ", "-----------------------------------", "// Node walkers.", "", "var base = };", "-----------------------------------", "// FIXME drop these node types in next major version", "// (They are awkward, and in ES6 every block can be a scope.)", "base.ScopeBody = function (node, st, c) ", "-----------------------------------"],
		"Functions": ["(function(f)if(typeof exports===\"object\"\u0026\u0026typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"\u0026\u0026define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).walk = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"\u0026\u0026require;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"\u0026\u0026require;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "//         Expression: function(node)  ... }", "function _classCallCheck(instance, Constructor)  if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }", "function simple(node, visitors, base, state, override) ", "  if (!base) base = exports.base;(function c(node, st, override) ", "function ancestor(node, visitors, base, state) ", "  if (!state) state = [];(function c(node, st, override) ", "// A recursive walk is one where your functions override the default", "function recursive(node, state, funcs, base, override) ", "  var visitor = funcs ? exports.make(funcs, base) : base;(function c(node, st, override) ", "function makeTest(test) ", "  if (typeof test == \"string\") return function (type) ", "  };else if (!test) return function () ", "var Found = function Found(node, state) ", "function findNodeAt(node, start, end, test, base, state) ", "    ;(function c(node, st, override) ", "function findNodeAround(node, pos, test, base, state) ", "    ;(function c(node, st, override) ", "function findNodeAfter(node, pos, test, base, state) ", "    ;(function c(node, st, override) ", "function findNodeBefore(node, pos, test, base, state) ", "  var max = undefined;(function c(node, st, override) ", "function make(funcs, base) ", "function skipThrough(node, st, c) ", "function ignore(_node, _st, _c) }", "base.Program = base.BlockStatement = function (node, st, c) ", "base.ExpressionStatement = base.ParenthesizedExpression = function (node, st, c) ", "base.IfStatement = function (node, st, c) ", "base.LabeledStatement = function (node, st, c) ", "base.WithStatement = function (node, st, c) ", "base.SwitchStatement = function (node, st, c) ", "base.ReturnStatement = base.YieldExpression = function (node, st, c) ", "base.ThrowStatement = base.SpreadElement = function (node, st, c) ", "base.TryStatement = function (node, st, c) ", "base.WhileStatement = base.DoWhileStatement = function (node, st, c) ", "base.ForStatement = function (node, st, c) ", "base.ForInStatement = base.ForOfStatement = function (node, st, c) ", "base.ForInit = function (node, st, c) ", "base.FunctionDeclaration = function (node, st, c) ", "base.VariableDeclaration = function (node, st, c) ", "base.VariableDeclarator = function (node, st, c) ", "base.Function = function (node, st, c) ", "base.ScopeBody = function (node, st, c) ", "base.ScopeExpression = function (node, st, c) ", "base.Pattern = function (node, st, c) ", "base.RestElement = function (node, st, c) ", "base.ArrayPattern = function (node, st, c) ", "base.ObjectPattern = function (node, st, c) ", "base.ArrayExpression = function (node, st, c) ", "base.ObjectExpression = function (node, st, c) ", "base.SequenceExpression = base.TemplateLiteral = function (node, st, c) ", "base.UnaryExpression = base.UpdateExpression = function (node, st, c) ", "base.BinaryExpression = base.LogicalExpression = function (node, st, c) ", "base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) ", "base.ConditionalExpression = function (node, st, c) ", "base.NewExpression = base.CallExpression = function (node, st, c) ", "base.MemberExpression = function (node, st, c) ", "base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) ", "base.ExportAllDeclaration = function (node, st, c) ", "base.ImportDeclaration = function (node, st, c) ", "base.TaggedTemplateExpression = function (node, st, c) ", "base.ClassDeclaration = base.ClassExpression = function (node, st, c) ", "base.Class = function (node, st, c) ", "base.MethodDefinition = base.Property = function (node, st, c) ", "base.ComprehensionExpression = function (node, st, c) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\bin\\acorn.js",
		"LineCount": 60,
		"CharCount": 2021,
		"Comments": ["#!/usr/bin/env node", "-----------------------------------"],
		"Functions": ["function help(status) ", "function run(code) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\expression.js",
		"LineCount": 708,
		"CharCount": 24657,
		"Comments": ["// A recursive descent parser operates by defining functions for all", "// syntactic elements, and recursively calling those, each function", "// advancing the input stream and returning an AST node. Precedence", "// of constructs (for example, the fact that `!x[1]` means `!(x[1])`", "// instead of `(!x)[1]` is handled by the fact that the parser", "// function that parses unary prefix operators is called first, and", "// in turn calls the function that parses `[]` subscripts — that", "// way, it'll receive the node for `x[1]` already parsed, and wraps", "// *that* in the unary operator node.", "//", "// Acorn uses an [operator precedence parser][opp] to handle binary", "// operator precedence, because it is much more compact than using", "// the technique outlined above, which uses different, nesting", "// functions to specify precedence, for all of the ten binary", "// precedence levels that JavaScript defines.", "//", "// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser", "", "import types as tt} from \"./tokentype\"", "-----------------------------------", "// Check if property name clashes with already added.", "// Object/class getters and setters are not allowed to clash —", "// either with each other or with an init property — and in", "// strict mode, init properties are also not allowed to be repeated.", "", "pp.checkPropClash = function(prop, propHash) ", "-----------------------------------", "// ### Expression parsing", "", "// These nest, from the most general expression type at the top to", "// 'atomic', nondivisible expression types at the bottom. Most of", "// the functions will simply let the function(s) below them parse,", "// and, *if* the syntactic construct they handle is present, wrap", "// the AST node that the inner parser gave them in another node.", "", "// Parse a full expression. The optional arguments are used to", "// forbid the `in` operator (in for loops initalization expressions)", "// and provide reference for storing '=' operator inside shorthand", "// property assignment in contexts where both object expression", "// and object pattern might appear (so it's possible to raise", "// delayed syntax error at correct position).", "", "pp.parseExpression = function(noIn, refDestructuringErrors) ", "-----------------------------------", "// Parse an assignment expression. This includes applications of", "// operators like `+=`.", "", "pp.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) ", "-----------------------------------", "    refDestructuringErrors.shorthandAssign = 0 // reset because shorthand default was used correctly", "    this.checkLVal(left)", "-----------------------------------", "// Parse a ternary conditional (`?:`) operator.", "", "pp.parseMaybeConditional = function(noIn, refDestructuringErrors) ", "-----------------------------------", "// Start the precedence parser.", "", "pp.parseExprOps = function(noIn, refDestructuringErrors) ", "-----------------------------------", "// Parse binary operators with the operator precedence parsing", "// algorithm. `left` is the left-hand side of the operator.", "// `minPrec` provides context that allows the function to stop and", "// defer further parser to one of its callers when it encounters an", "// operator that has a lower precedence than the set it is parsing.", "", "pp.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) ", "-----------------------------------", "// Parse unary operators, both prefix and postfix.", "", "pp.parseMaybeUnary = function(refDestructuringErrors) ", "-----------------------------------", "// Parse call, dot, and `[]`-subscript expressions.", "", "pp.parseExprSubscripts = function(refDestructuringErrors) ", "-----------------------------------", "// Parse an atomic expression — either a single token that is an", "// expression, an expression started by a keyword like `function` or", "// `new`, or an expression wrapped in punctuation like `()`, `[]`,", "// or `{}`.", "", "pp.parseExprAtom = function(refDestructuringErrors) ", "-----------------------------------", "    // check whether this is array comprehension or regular array", "    if (this.options.ecmaVersion \u003e= 7 \u0026\u0026 this.type === tt._for) ", "-----------------------------------", "// New's precedence is slightly tricky. It must allow its argument to", "// be a `[]` or dot subscript expression, but not a call — at least,", "// not without wrapping it in parentheses. Thus, it uses the noCalls", "// argument to parseSubscripts to prevent it from consuming the", "// argument list.", "", "const empty = []", "-----------------------------------", "// Parse template expression.", "", "pp.parseTemplateElement = function() ", "-----------------------------------", "// Parse an object literal or binding pattern.", "", "pp.parseObj = function(isPattern, refDestructuringErrors) ", "-----------------------------------", "// Initialize empty function node.", "", "pp.initFunction = function(node) ", "-----------------------------------", "// Parse object or class method.", "", "pp.parseMethod = function(isGenerator) ", "-----------------------------------", "// Parse arrow function expression with given parameters.", "", "pp.parseArrowExpression = function(node, params) ", "-----------------------------------", "// Parse function body and check parameters.", "", "pp.parseFunctionBody = function(node, isArrowFunction) ", "-----------------------------------", "    // Start a new scope with regard to labels and the `inFunction`", "    // flag (restore them to their old value afterwards).", "    let oldInFunc = this.inFunction, oldInGen = this.inGenerator, oldLabels = this.labels", "-----------------------------------", "  // If this is a strict mode function, verify that argument names", "  // are not repeated, and it does not try to bind the words `eval`", "  // or `arguments`.", "  if (this.strict || !isExpression \u0026\u0026 node.body.body.length \u0026\u0026 this.isUseStrict(node.body.body[0])) ", "-----------------------------------", "// Checks function params for various disallowed patterns such as using \"eval\"", "// or \"arguments\" and duplicate parameters.", "", "pp.checkParams = function(node) ", "-----------------------------------", "// Parses a comma-separated list of expressions, and returns them as", "// an array. `close` is the token type that ends the list, and", "// `allowEmpty` can be turned on to allow subsequent commas with", "// nothing in between them to be parsed as `null` (which is needed", "// for array literals).", "", "pp.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) ", "-----------------------------------", "// Parse the next token as an identifier. If `liberal` is true (used", "// when parsing properties), it will also convert keywords into", "// identifiers.", "", "pp.parseIdent = function(liberal) ", "-----------------------------------", "// Parses yield expression inside generator.", "", "pp.parseYield = function() ", "-----------------------------------", "// Parses array and generator comprehensions.", "", "pp.parseComprehension = function(node, isGenerator) ", "-----------------------------------"],
		"Functions": ["// A recursive descent parser operates by defining functions for all", "// syntactic elements, and recursively calling those, each function", "// function that parses unary prefix operators is called first, and", "// in turn calls the function that parses `[]` subscripts — that", "// functions to specify precedence, for all of the ten binary", "pp.checkPropClash = function(prop, propHash) ", "// the functions will simply let the function(s) below them parse,", "pp.parseExpression = function(noIn, refDestructuringErrors) ", "pp.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) ", "pp.parseMaybeConditional = function(noIn, refDestructuringErrors) ", "pp.parseExprOps = function(noIn, refDestructuringErrors) ", "// `minPrec` provides context that allows the function to stop and", "pp.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) ", "pp.parseMaybeUnary = function(refDestructuringErrors) ", "pp.parseExprSubscripts = function(refDestructuringErrors) ", "pp.parseSubscripts = function(base, startPos, startLoc, noCalls) ", "// expression, an expression started by a keyword like `function` or", "pp.parseExprAtom = function(refDestructuringErrors) ", "      this.raise(this.start, \"'super' outside of function or class\")", "  case tt._function:", "pp.parseLiteral = function(value) ", "pp.parseParenExpression = function() ", "pp.parseParenAndDistinguishExpression = function(canBeArrow) ", "pp.parseParenItem = function(item) ", "pp.parseParenArrowList = function(startPos, startLoc, exprList) ", "pp.parseNew = function() ", "      this.raise(node.start, \"new.target can only be used in functions\")", "pp.parseTemplateElement = function() ", "pp.parseTemplate = function() ", "pp.parseObj = function(isPattern, refDestructuringErrors) ", "pp.parsePropertyValue = function(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) ", "pp.parsePropertyName = function(prop) ", "// Initialize empty function node.", "pp.initFunction = function(node) ", "pp.parseMethod = function(isGenerator) ", "// Parse arrow function expression with given parameters.", "pp.parseArrowExpression = function(node, params) ", "// Parse function body and check parameters.", "pp.parseFunctionBody = function(node, isArrowFunction) ", "  // If this is a strict mode function, verify that argument names", "// Checks function params for various disallowed patterns such as using \"eval\"", "pp.checkParams = function(node) ", "pp.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) ", "pp.parseIdent = function(liberal) ", "pp.parseYield = function() ", "pp.parseComprehension = function(node, isGenerator) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\identifier.js",
		"LineCount": 91,
		"CharCount": 11529,
		"Comments": ["// This is a trick taken from Esprima. It turns out that, on", "// non-Chrome browsers, to check whether a string is in a set, a", "// predicate containing a big ugly `switch` statement is faster than", "// a regular expression, and on Chrome the two are about on par.", "// This function uses `eval` (non-lexical) to produce such a", "// predicate from a space-separated string of words.", "//", "// It starts by sorting the words by length.", "", "// Reserved word lists for various dialects of the language", "", "export const reservedWords = ", "-----------------------------------", "// And the keywords", "", "var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"", "-----------------------------------", "// ## Character categories", "", "// Big ugly regular expressions that match characters in the", "// whitespace, identifier, and identifier-start categories. These", "// are only applied when a character is found to actually have a", "// code point above 128.", "// Generated by `bin/generate-identifier-regex.js`.", "", "let nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b2\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"", "-----------------------------------", "// These are a run-length and offset encoded representation of the", "// \u003e0xffff code points that are a valid part of identifiers. The", "// offset starts at 0x10000, and each pair of numbers represents an", "// offset to the next range, and then a size of the range. They were", "// generated by tools/generate-identifier-regex.js", "var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,99,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,98,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,955,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,38,17,2,24,133,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,32,4,287,47,21,1,2,0,185,46,82,47,21,0,60,42,502,63,32,0,449,56,1288,920,104,110,2962,1070,13266,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,16481,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,1340,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,16355,541]", "-----------------------------------", "// This has a complexity linear to the value of the code. The", "// assumption is that looking up astral identifier characters is", "// rare.", "function isInAstralSet(code, set) ", "-----------------------------------", "// Test whether a given character code starts an identifier.", "", "export function isIdentifierStart(code, astral) ", "-----------------------------------", "// Test whether a given character is part of an identifier.", "", "export function isIdentifierChar(code, astral) ", "-----------------------------------"],
		"Functions": ["// This function uses `eval` (non-lexical) to produce such a", "var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"", "function isInAstralSet(code, set) ", "export function isIdentifierStart(code, astral) ", "export function isIdentifierChar(code, astral) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\index.js",
		"LineCount": 68,
		"CharCount": 2150,
		"Comments": ["// Acorn is a tiny, fast JavaScript parser written in JavaScript.", "//", "// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and", "// various contributors and released under an MIT license.", "//", "// Git repositories for Acorn are available at", "//", "//     http://marijnhaverbeke.nl/git/acorn", "//     https://github.com/ternjs/acorn.git", "//", "// Please use the [github bug tracker][ghbt] to report issues.", "//", "// [ghbt]: https://github.com/ternjs/acorn/issues", "//", "// This file defines the main parser interface. The library also comes", "// with a [error-tolerant parser][dammit] and an", "// [abstract syntax tree walker][walk], defined in other files.", "//", "// [dammit]: acorn_loose.js", "// [walk]: util/walk.js", "", "import Parser} from \"./state\"", "-----------------------------------", "// The main exported interface (under `self.acorn` when in the", "// browser) is a `parse` function that takes a code string and", "// returns an abstract syntax tree as specified by [Mozilla parser", "// API][api].", "//", "// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API", "", "export function parse(input, options) ", "-----------------------------------", "// This function tries to parse a single expression at a given", "// offset in a string. Useful for parsing mixed-language formats", "// that embed JavaScript expressions.", "", "export function parseExpressionAt(input, pos, options) ", "-----------------------------------", "// Acorn is organized as a tokenizer and a recursive-descent parser.", "// The `tokenizer` export provides an interface to the tokenizer.", "", "export function tokenizer(input, options) ", "-----------------------------------"],
		"Functions": ["// browser) is a `parse` function that takes a code string and", "export function parse(input, options) ", "// This function tries to parse a single expression at a given", "export function parseExpressionAt(input, pos, options) ", "export function tokenizer(input, options) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\location.js",
		"LineCount": 25,
		"CharCount": 731,
		"Comments": ["import Parser} from \"./state\"", "-----------------------------------", "// This function is used to raise exceptions on parse errors. It", "// takes an offset integer (into the current `input`) to indicate", "// the location of the error, attaches the position to the end", "// of the error message, and then raises a `SyntaxError` with that", "// message.", "", "pp.raise = function(pos, message) ", "-----------------------------------"],
		"Functions": ["// This function is used to raise exceptions on parse errors. It", "pp.raise = function(pos, message) ", "pp.curPosition = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\locutil.js",
		"LineCount": 43,
		"CharCount": 1013,
		"Comments": ["import lineBreakG} from \"./whitespace\"", "-----------------------------------", "// These are used when `options.locations` is on, for the", "// `startLoc` and `endLoc` properties.", "", "export class Position ", "-----------------------------------", "// The `getLineInfo` function is mostly useful when the", "// `locations` option is off (for performance reasons) and you", "// want to find the line/column position for a given character", "// offset. `input` should be the code string that the offset refers", "// into.", "", "export function getLineInfo(input, offset) ", "-----------------------------------"],
		"Functions": ["// The `getLineInfo` function is mostly useful when the", "export function getLineInfo(input, offset) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\acorn_loose.js",
		"LineCount": 1,
		"CharCount": 0,
		"Comments": [""],
		"Functions": null,
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\expression.js",
		"LineCount": 502,
		"CharCount": 15426,
		"Comments": ["import LooseParser} from \"./state\"", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start", "-----------------------------------", "// Convert existing expression atom to assignable pattern", "// if possible.", "", "lp.toAssignable = function(node, binding) ", "-----------------------------------", "    // Okay", "  } else if (node.type == \"ParenthesizedExpression\") ", "-----------------------------------", "  this.next(); // Opening bracket", "  while (!this.closes(close, indent + 1, line)) ", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start", "-----------------------------------"],
		"Functions": ["lp.checkLVal = function(expr) ", "lp.parseExpression = function(noIn) ", "lp.parseParenExpression = function() ", "lp.parseMaybeAssign = function(noIn) ", "lp.parseMaybeConditional = function(noIn) ", "lp.parseExprOps = function(noIn) ", "lp.parseExprOp = function(left, start, minPrec, noIn, indent, line) ", "lp.parseMaybeUnary = function(noIn) ", "lp.parseExprSubscripts = function() ", "lp.parseSubscripts = function(base, start, noCalls, startIndent, line) ", "lp.parseExprAtom = function() ", "  case tt._function:", "lp.parseNew = function() ", "lp.parseTemplateElement = function() ", "lp.parseTemplate = function() ", "lp.parseObj = function() ", "lp.parsePropertyName = function(prop) ", "lp.parsePropertyAccessor = function() ", "lp.parseIdent = function() ", "lp.initFunction = function(node) ", "lp.toAssignable = function(node, binding) ", "lp.toAssignableList = function(exprList, binding) ", "lp.parseFunctionParams = function(params) ", "lp.parseMethod = function(isGenerator) ", "lp.parseArrowExpression = function(node, params) ", "lp.parseExprList = function(close, allowEmpty) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\index.js",
		"LineCount": 51,
		"CharCount": 1718,
		"Comments": ["// Acorn: Loose parser", "//", "// This module provides an alternative parser (`parse_dammit`) that", "// exposes that same interface as `parse`, but will try to parse", "// anything as JavaScript, repairing syntax error the best it can.", "// There are circumstances in which it will raise an error and give", "// up, but they are very rare. The resulting AST will be a mostly", "// valid JavaScript AST (as per the [Mozilla parser API][api], except", "// that:", "//", "// - Return outside functions is allowed", "//", "// - Label consistency (no conflicts, break only to existing labels)", "//   is not enforced.", "//", "// - Bogus Identifier nodes with a name of `\"✖\"` are inserted whenever", "//   the parser got too confused to return anything meaningful.", "//", "// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API", "//", "// The expected use for this is to *first* try `acorn.parse`, and only", "// if that fails switch to `parse_dammit`. The loose parser might", "// parse badly indented code incorrectly, so **don't** use it as", "// your default parser.", "//", "// Quite a lot of acorn.js is duplicated here. The alternative was to", "// add a *lot* of extra cruft to that file, making it less readable", "// and slower. Copying and editing the code allowed me to make", "// invasive changes and simplifications without creating a complicated", "// tangle.", "", "import * as acorn from \"..\"", "-----------------------------------"],
		"Functions": ["// - Return outside functions is allowed", "export function parse_dammit(input, options) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\parseutil.js",
		"LineCount": 1,
		"CharCount": 59,
		"Comments": ["export function isDummy(node)  return node.name == \"✖\" }", "-----------------------------------"],
		"Functions": ["export function isDummy(node)  return node.name == \"✖\" }"],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\state.js",
		"LineCount": 161,
		"CharCount": 3932,
		"Comments": ["import tokenizer, SourceLocation, tokTypes as tt, Node, lineBreak, isNewLine} from \"..\"", "-----------------------------------", "// Registered plugins", "export const pluginsLoose = }", "-----------------------------------", "    this.ahead = []; // Tokens ahead", "    this.context = []; // Indentation contexted", "    this.curIndent = 0", "-----------------------------------", "    // Load plugins", "    this.options.pluginsLoose = options.pluginsLoose || }", "-----------------------------------"],
		"Functions": null,
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\statement.js",
		"LineCount": 421,
		"CharCount": 13539,
		"Comments": ["import LooseParser} from \"./state\"", "-----------------------------------", "    // If there is no closing brace, make the node span to the start", "    // of the next token (this is useful for Tern)", "    this.last.end = this.tok.start", "-----------------------------------"],
		"Functions": ["lp.parseTopLevel = function() ", "lp.parseStatement = function() ", "  case tt._function:", "lp.parseBlock = function() ", "lp.parseFor = function(node, init) ", "lp.parseForIn = function(node, init) ", "lp.parseVar = function(noIn) ", "lp.parseClass = function(isStatement) ", "lp.parseFunction = function(node, isStatement) ", "lp.parseExport = function() ", "lp.parseImport = function() ", "lp.parseImportSpecifierList = function() ", "lp.parseExportSpecifierList = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\loose\\tokenize.js",
		"LineCount": 109,
		"CharCount": 3565,
		"Comments": ["import tokTypes as tt, Token, isNewLine, SourceLocation, getLineInfo, lineBreakG} from \"..\"", "-----------------------------------", "      // Try to skip some text, based on the error message, and then continue", "      let msg = e.message, pos = e.raisedAt, replace = true", "-----------------------------------"],
		"Functions": ["function isSpace(ch) ", "lp.next = function() ", "lp.readToken = function() ", "lp.resetTo = function(pos) ", "lp.lookAhead = function(n) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\lval.js",
		"LineCount": 216,
		"CharCount": 5962,
		"Comments": ["import types as tt} from \"./tokentype\"", "-----------------------------------", "// Convert existing expression atom to assignable pattern", "// if possible.", "", "pp.toAssignable = function(node, isBinding) ", "-----------------------------------", "        // falls through to AssignmentPattern", "      } else ", "-----------------------------------", "// Convert list of expression atoms to binding list.", "", "pp.toAssignableList = function(exprList, isBinding) ", "-----------------------------------", "// Parses spread element.", "", "pp.parseSpread = function(refDestructuringErrors) ", "-----------------------------------", "  // RestElement inside of a function parameter must be an identifier", "  if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()", "-----------------------------------", "// Parses lvalue (assignable) atom.", "", "pp.parseBindingAtom = function() ", "-----------------------------------", "// Parses assignment pattern around given atom if possible.", "", "pp.parseMaybeDefault = function(startPos, startLoc, left) ", "-----------------------------------", "// Verify that a node is an lval — something that can be assigned", "// to.", "", "pp.checkLVal = function(expr, isBinding, checkClashes) ", "-----------------------------------"],
		"Functions": ["pp.toAssignable = function(node, isBinding) ", "pp.toAssignableList = function(exprList, isBinding) ", "pp.parseSpread = function(refDestructuringErrors) ", "pp.parseRest = function(allowNonIdent) ", "  // RestElement inside of a function parameter must be an identifier", "pp.parseBindingAtom = function() ", "pp.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) ", "pp.parseBindingListItem = function(param) ", "pp.parseMaybeDefault = function(startPos, startLoc, left) ", "pp.checkLVal = function(expr, isBinding, checkClashes) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\node.js",
		"LineCount": 51,
		"CharCount": 1144,
		"Comments": ["import Parser} from \"./state\"", "-----------------------------------", "// Start an AST node, attaching a start offset.", "", "const pp = Parser.prototype", "-----------------------------------", "// Finish an AST node, adding `type` and `end` properties.", "", "function finishNodeAt(node, type, pos, loc) ", "-----------------------------------", "// Finish node at given position", "", "pp.finishNodeAt = function(node, type, pos, loc) ", "-----------------------------------"],
		"Functions": ["pp.startNode = function() ", "pp.startNodeAt = function(pos, loc) ", "function finishNodeAt(node, type, pos, loc) ", "pp.finishNode = function(node, type) ", "pp.finishNodeAt = function(node, type, pos, loc) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\options.js",
		"LineCount": 122,
		"CharCount": 4887,
		"Comments": ["import has, isArray} from \"./util\"", "-----------------------------------", "// A second optional argument can be given to further configure", "// the parser process. These options are recognized:", "", "export const defaultOptions = ", "-----------------------------------", "  // `ecmaVersion` indicates the ECMAScript version to parse. Must", "  // be either 3, or 5, or 6. This influences support for strict", "  // mode, the set of reserved words, support for getters and", "  // setters and other features.", "  ecmaVersion: 5,", "-----------------------------------", "  // Source type (\"script\" or \"module\") for different semantics", "  sourceType: \"script\",", "-----------------------------------", "  // `onInsertedSemicolon` can be a callback that will be called", "  // when a semicolon is automatically inserted. It will be passed", "  // th position of the comma as an offset, and if `locations` is", "  // enabled, it is given the location as a `{line, column}` object", "  // as second argument.", "  onInsertedSemicolon: null,", "-----------------------------------", "  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for", "  // trailing commas.", "  onTrailingComma: null,", "-----------------------------------", "  // By default, reserved words are only enforced if ecmaVersion \u003e= 5.", "  // Set `allowReserved` to a boolean value to explicitly turn this on", "  // an off. When this option has the value \"never\", reserved words", "  // and keywords can also not be used as property names.", "  allowReserved: null,", "-----------------------------------", "  // When enabled, a return at the top level is not considered an", "  // error.", "  allowReturnOutsideFunction: false,", "-----------------------------------", "  // When enabled, import/export statements are not constrained to", "  // appearing at the top of the program.", "  allowImportExportEverywhere: false,", "-----------------------------------", "  // When enabled, hashbang directive in the beginning of file", "  // is allowed and treated as a line comment.", "  allowHashBang: false,", "-----------------------------------", "  // When `locations` is on, `loc` properties holding objects with", "  // `start` and `end` properties in `{line, column}` form (with", "  // line being 1-based and column 0-based) will be attached to the", "  // nodes.", "  locations: false,", "-----------------------------------", "  // A function can be passed as `onToken` option, which will", "  // cause Acorn to call that function with object in the same", "  // format as tokens returned from `tokenizer().getToken()`. Note", "  // that you are not allowed to call the parser from the", "  // callback—that will corrupt its internal state.", "  onToken: null,", "-----------------------------------", "  // A function can be passed as `onComment` option, which will", "  // cause Acorn to call that function with `(block, text, start,", "  // end)` parameters whenever a comment is skipped. `block` is a", "  // boolean indicating whether this is a block (`/* */`) comment,", "  // `text` is the content of the comment, and `start` and `end` are", "  // character offsets that denote the start and end of the comment.", "  // When the `locations` option is on, two more parameters are", "  // passed, the full `{line, column}` locations of the start and", "  // end of the comments. Note that you are not allowed to call the", "  // parser from the callback—that will corrupt its internal state.", "  onComment: null,", "-----------------------------------", "  // Nodes have their start and end characters offsets recorded in", "  // `start` and `end` properties (directly on the node, rather than", "  // the `loc` object, which holds line/column data. To also add a", "  // [semi-standardized][range] `range` property holding a `[start,", "  // end]` array with the same numbers, set the `ranges` option to", "  // `true`.", "  //", "  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678", "  ranges: false,", "-----------------------------------", "  // It is possible to parse multiple files into a single AST by", "  // passing the tree produced by parsing the first file as", "  // `program` option in subsequent parses. This will add the", "  // toplevel forms of the parsed file to the `Program` (top) node", "  // of an existing parse tree.", "  program: null,", "-----------------------------------", "  // When `locations` is on, you can pass this to record the source", "  // file in every node's `loc` object.", "  sourceFile: null,", "-----------------------------------", "  // This value, if given, is stored in every node, whether", "  // `locations` is on or off.", "  directSourceFile: null,", "-----------------------------------", "  // When enabled, parenthesized expressions are represented by", "  // (non-standard) ParenthesizedExpression nodes", "  preserveParens: false,", "-----------------------------------", "// Interpret and default an options object", "", "export function getOptions(opts) ", "-----------------------------------"],
		"Functions": ["  // A function can be passed as `onToken` option, which will", "  // cause Acorn to call that function with object in the same", "  // A function can be passed as `onComment` option, which will", "  // cause Acorn to call that function with `(block, text, start,", "export function getOptions(opts) ", "function pushComment(options, array) ", "  return function (block, text, start, end, startLoc, endLoc) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\parseutil.js",
		"LineCount": 103,
		"CharCount": 2783,
		"Comments": ["import types as tt} from \"./tokentype\"", "-----------------------------------", "// ## Parser utilities", "", "// Test whether a statement node is the string literal `\"use strict\"`.", "", "pp.isUseStrict = function(stmt) ", "-----------------------------------", "// Predicate that tests whether the next token is of the given", "// type, and if yes, consumes it as a side effect.", "", "pp.eat = function(type) ", "-----------------------------------", "// Tests whether parsed token is a contextual keyword.", "", "pp.isContextual = function(name) ", "-----------------------------------", "// Consumes contextual keyword if possible.", "", "pp.eatContextual = function(name) ", "-----------------------------------", "// Asserts that following token is given contextual keyword.", "", "pp.expectContextual = function(name) ", "-----------------------------------", "// Test whether a semicolon can be inserted at the current position.", "", "pp.canInsertSemicolon = function() ", "-----------------------------------", "// Consume a semicolon, or, failing that, see if we are allowed to", "// pretend that there is a semicolon at this position.", "", "pp.semicolon = function() ", "-----------------------------------", "// Expect a token of a given type. If found, consume it, otherwise,", "// raise an unexpected token error.", "", "pp.expect = function(type) ", "-----------------------------------", "// Raise an unexpected token error.", "", "pp.unexpected = function(pos) ", "-----------------------------------"],
		"Functions": ["pp.isUseStrict = function(stmt) ", "pp.eat = function(type) ", "pp.isContextual = function(name) ", "pp.eatContextual = function(name) ", "pp.expectContextual = function(name) ", "pp.canInsertSemicolon = function() ", "pp.insertSemicolon = function() ", "pp.semicolon = function() ", "pp.afterTrailingComma = function(tokType) ", "pp.expect = function(type) ", "pp.unexpected = function(pos) ", "pp.checkPatternErrors = function(refDestructuringErrors, andThrow) ", "pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\state.js",
		"LineCount": 105,
		"CharCount": 3487,
		"Comments": ["import reservedWords, keywords} from \"./identifier\"", "-----------------------------------", "// Registered plugins", "export const plugins = }", "-----------------------------------", "    // Used to signal to callers of `readWord1` whether the word", "    // contained any escape sequences. This is needed because words with", "    // escape sequences must not be interpreted as keywords.", "    this.containsEsc = false;", "-----------------------------------", "    // Load plugins", "    this.loadPlugins(options.plugins)", "-----------------------------------", "    // Set up token state", "", "    // The current position of the tokenizer in the input.", "    if (startPos) ", "-----------------------------------", "    // Properties of the current token:", "    // Its type", "    this.type = tt.eof", "-----------------------------------", "    // For tokens that include more information than their type, the value", "    this.value = null", "-----------------------------------", "    // Its start and end offset", "    this.start = this.end = this.pos", "-----------------------------------", "    // And, if locations are used, the {line, column} object", "    // corresponding to those offsets", "    this.startLoc = this.endLoc = this.curPosition()", "-----------------------------------", "    // Position information for the previous token", "    this.lastTokEndLoc = this.lastTokStartLoc = null", "-----------------------------------", "    // The context stack is used to superficially track syntactic", "    // context to predict whether a regular expression is allowed in a", "    // given position.", "    this.context = this.initialContext()", "-----------------------------------", "    // Figure out if it's a module code.", "    this.strict = this.inModule = options.sourceType === \"module\"", "-----------------------------------", "    // Used to signify the start of a potential arrow function", "    this.potentialArrowAt = -1", "-----------------------------------", "    // Flags to track whether we are in a function, a generator.", "    this.inFunction = this.inGenerator = false", "-----------------------------------", "    // Labels in scope.", "    this.labels = []", "-----------------------------------", "    // If enabled, skip leading hashbang line.", "    if (this.pos === 0 \u0026\u0026 options.allowHashBang \u0026\u0026 this.input.slice(0, 2) === '#!')", "-----------------------------------", "  // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them", "  isKeyword(word)  return this.keywords.test(word) }", "-----------------------------------"],
		"Functions": ["function keywordRegexp(words) ", "    // Used to signify the start of a potential arrow function", "    // Flags to track whether we are in a function, a generator."],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\statement.js",
		"LineCount": 627,
		"CharCount": 20821,
		"Comments": ["import types as tt} from \"./tokentype\"", "-----------------------------------", "// ### Statement parsing", "", "// Parse a program. Initializes the parser, reads any number of", "// statements, and wraps them in a Program node.  Optionally takes a", "// `program` argument.  If present, the statements will be appended", "// to its body instead of creating a new node.", "", "pp.parseTopLevel = function(node) ", "-----------------------------------", "// Parse a single statement.", "//", "// If expecting a statement and finding a slash operator, parse a", "// regular expression literal. This is to handle cases like", "// `if (foo) /blah/.exec(foo)`, where looking at the previous token", "// does not help.", "", "pp.parseStatement = function(declaration, topLevel) ", "-----------------------------------", "  // Most types of statements are recognized by the keyword they", "  // start with. Many are trivial to parse, some require a bit of", "  // complexity.", "", "  switch (starttype) ", "-----------------------------------", "  case tt._let: case tt._const: if (!declaration) this.unexpected() // NOTE: falls through to _var", "  case tt._var: return this.parseVarStatement(node, starttype)", "-----------------------------------", "    // If the statement does not start with a statement keyword or a", "    // brace, it's an ExpressionStatement or LabeledStatement. We", "    // simply start parsing an expression, and afterwards, if the", "    // next token is a colon and the expression was a simple", "    // Identifier node, we switch to interpreting it as a label.", "  default:", "-----------------------------------", "  // Verify that there is an actual destination to break or", "  // continue to.", "  for (var i = 0; i \u003c this.labels.length; ++i) ", "-----------------------------------", "// Disambiguating between a `for` and a `for`/`in` or `for`/`of`", "// loop is non-trivial. Basically, we have to parse the init `var`", "// statement or expression, disallowing the `in` operator (see", "// the second parameter to `parseExpression`), and then check", "// whether the next token is `in` or `of`. When there is no init", "// part (semicolon immediately after the opening parenthesis), it", "// is a regular `for` loop.", "", "pp.parseForStatement = function(node) ", "-----------------------------------", "  // In `return` (and `break`/`continue`), the keywords with", "  // optional arguments, we eagerly look for a semicolon or the", "  // possibility to insert one.", "", "  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null", "-----------------------------------", "  // Statements under must be grouped (by label) in SwitchCase", "  // nodes. `cur` is used to keep the node that we are currently", "  // adding statements to.", "", "  for (var cur, sawDefault = false; this.type != tt.braceR;) ", "-----------------------------------", "  this.next() // Closing brace", "  this.labels.pop()", "-----------------------------------", "// Reused empty array added for node fields that are always empty.", "", "const empty = []", "-----------------------------------", "// Parse a semicolon-enclosed block of statements, handling `\"use", "// strict\"` declarations when `allowStrict` is true (used for", "// function bodies).", "", "pp.parseBlock = function(allowStrict) ", "-----------------------------------", "// Parse a regular `for` loop. The disambiguation code in", "// `parseStatement` will already have parsed the init statement or", "// expression.", "", "pp.parseFor = function(node, init) ", "-----------------------------------", "// Parse a `for`/`in` and `for`/`of` loop, which are almost", "// same from parser's perspective.", "", "pp.parseForIn = function(node, init) ", "-----------------------------------", "// Parse a list of variable declarations.", "", "pp.parseVar = function(node, isFor, kind) ", "-----------------------------------", "// Parse a function declaration or literal (depending on the", "// `isStatement` parameter).", "", "pp.parseFunction = function(node, isStatement, allowExpressionBody) ", "-----------------------------------", "// Parse a class declaration or literal (depending on the", "// `isStatement` parameter).", "", "pp.parseClass = function(node, isStatement) ", "-----------------------------------", "// Parses module export declaration.", "", "pp.parseExport = function(node) ", "-----------------------------------", "  // export * from '...'", "  if (this.eat(tt.star)) ", "-----------------------------------", "  if (this.eat(tt._default)) { // export default ...", "    let expr = this.parseMaybeAssign()", "-----------------------------------", "  // export var|const|let|function|class ...", "  if (this.shouldParseExportStatement()) ", "-----------------------------------", "  } else { // export { x, y as z } [from '...']", "    node.declaration = null", "-----------------------------------", "      // check for keywords used as local names", "      for (let i = 0; i \u003c node.specifiers.length; i++) ", "-----------------------------------", "// Parses a comma-separated list of module exports.", "", "pp.parseExportSpecifiers = function() ", "-----------------------------------", "  // export { x, y as z } [from '...']", "  this.expect(tt.braceL)", "-----------------------------------", "// Parses import declaration.", "", "pp.parseImport = function(node) ", "-----------------------------------", "  // import '...'", "  if (this.type === tt.string) ", "-----------------------------------", "// Parses a comma-separated list of module imports.", "", "pp.parseImportSpecifiers = function() ", "-----------------------------------", "    // import defaultObj, { x, y as z } from '...'", "    let node = this.startNode()", "-----------------------------------"],
		"Functions": ["pp.parseTopLevel = function(node) ", "pp.parseStatement = function(declaration, topLevel) ", "  case tt._function:", "pp.parseBreakContinueStatement = function(node, keyword) ", "pp.parseDebuggerStatement = function(node) ", "pp.parseDoStatement = function(node) ", "pp.parseForStatement = function(node) ", "pp.parseFunctionStatement = function(node) ", "pp.parseIfStatement = function(node) ", "pp.parseReturnStatement = function(node) ", "    this.raise(this.start, \"'return' outside of function\")", "pp.parseSwitchStatement = function(node) ", "pp.parseThrowStatement = function(node) ", "pp.parseTryStatement = function(node) ", "pp.parseVarStatement = function(node, kind) ", "pp.parseWhileStatement = function(node) ", "pp.parseWithStatement = function(node) ", "pp.parseEmptyStatement = function(node) ", "pp.parseLabeledStatement = function(node, maybeName, expr) ", "pp.parseExpressionStatement = function(node, expr) ", "// function bodies).", "pp.parseBlock = function(allowStrict) ", "pp.parseFor = function(node, init) ", "pp.parseForIn = function(node, init) ", "pp.parseVar = function(node, isFor, kind) ", "pp.parseVarId = function(decl) ", "// Parse a function declaration or literal (depending on the", "pp.parseFunction = function(node, isStatement, allowExpressionBody) ", "pp.parseFunctionParams = function(node) ", "pp.parseClass = function(node, isStatement) ", "pp.parseClassMethod = function(classBody, method, isGenerator) ", "pp.parseClassId = function(node, isStatement) ", "pp.parseClassSuper = function(node) ", "pp.parseExport = function(node) ", "  // export var|const|let|function|class ...", "pp.shouldParseExportStatement = function() ", "pp.parseExportSpecifiers = function() ", "pp.parseImport = function(node) ", "pp.parseImportSpecifiers = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\tokencontext.js",
		"LineCount": 110,
		"CharCount": 2987,
		"Comments": ["// The algorithm used to determine whether a regexp can appear at a", "// given point in the program is loosely based on sweet.js' approach.", "// See https://github.com/mozilla/sweet.js/wiki/design", "", "import Parser} from \"./state\"", "-----------------------------------", "// Token-specific context update code", "", "tt.parenR.updateContext = tt.braceR.updateContext = function() ", "-----------------------------------", "  // tokExprAllowed stays unchanged", "}", "-----------------------------------"],
		"Functions": ["  f_expr: new TokContext(\"function\", true)", "pp.initialContext = function() ", "pp.braceIsBlock = function(prevType) ", "pp.updateContext = function(prevType) ", "tt.parenR.updateContext = tt.braceR.updateContext = function() ", "tt.braceL.updateContext = function(prevType) ", "tt.dollarBraceL.updateContext = function() ", "tt.parenL.updateContext = function(prevType) ", "tt.incDec.updateContext = function() ", "tt._function.updateContext = function() ", "tt.backQuote.updateContext = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\tokenize.js",
		"LineCount": 683,
		"CharCount": 22037,
		"Comments": ["import isIdentifierStart, isIdentifierChar} from \"./identifier\"", "-----------------------------------", "// Object type used to represent tokens. Note that normally, tokens", "// simply exist as properties on the parser object. This is only", "// used for the onToken callback and the external tokenizer.", "", "export class Token ", "-----------------------------------", "// ## Tokenizer", "", "const pp = Parser.prototype", "-----------------------------------", "// Are we running under Rhino?", "const isRhino = typeof Packages == \"object\" \u0026\u0026 Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"", "-----------------------------------", "// Move to the next token", "", "pp.next = function() ", "-----------------------------------", "// If we're in an ES6 environment, make parsers iterable", "if (typeof Symbol !== \"undefined\")", "-----------------------------------", "// Toggle strict mode. Re-reads the next number or string to please", "// pedantic tests (`\"use strict\"; 010;` should fail).", "", "pp.setStrict = function(strict) ", "-----------------------------------", "// Read a single token, updating the parser object's token-related", "// properties.", "", "pp.nextToken = function() ", "-----------------------------------", "  // Identifier or keyword. '\\uXXXX' sequences are allowed in", "  // identifiers, so '\\' also dispatches to that.", "  if (isIdentifierStart(code, this.options.ecmaVersion \u003e= 6) || code === 92 /* '\\' */)", "-----------------------------------", "// Called at the start of the parse and after every token. Skips", "// whitespace and comments, and.", "", "pp.skipSpace = function() ", "-----------------------------------", "      case 32: case 160: // ' '", "        ++this.pos", "-----------------------------------", "      case 47: // '/'", "        switch (this.input.charCodeAt(this.pos + 1)) ", "-----------------------------------", "          case 42: // '*'", "            this.skipBlockComment()", "-----------------------------------", "// Called at the end of every token. Sets `end`, `val`, and", "// maintains `context` and `exprAllowed`, and skips the space after", "// the token, so that the next one's `start` will point at the", "// right position.", "", "pp.finishToken = function(type, val) ", "-----------------------------------", "// ### Token reading", "", "// This is the function that is called to fetch the next token. It", "// is somewhat obscure, because it works in character codes rather", "// than characters, and because operator parsing has been inlined", "// into it.", "//", "// All in the name of speed.", "//", "pp.readToken_dot = function() ", "-----------------------------------", "  if (this.options.ecmaVersion \u003e= 6 \u0026\u0026 next === 46 \u0026\u0026 next2 === 46) { // 46 = dot '.'", "    this.pos += 3", "-----------------------------------", "pp.readToken_slash = function() { // '/'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "pp.readToken_mult_modulo = function(code) { // '%*'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "pp.readToken_pipe_amp = function(code) { // '|\u0026'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "pp.readToken_caret = function() { // '^'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "pp.readToken_plus_min = function(code) { // '+-'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "      // A `--\u003e` line comment", "      this.skipLineComment(3)", "-----------------------------------", "pp.readToken_lt_gt = function(code) { // '\u003c\u003e'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "    // `\u003c!--`, an XML-style comment that should be interpreted as a line comment", "    this.skipLineComment(4)", "-----------------------------------", "pp.readToken_eq_excl = function(code) { // '=!'", "  let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "  if (code === 61 \u0026\u0026 next === 62 \u0026\u0026 this.options.ecmaVersion \u003e= 6) { // '=\u003e'", "    this.pos += 2", "-----------------------------------", "    // The interpretation of a dot depends on whether it is followed", "    // by a digit or another two dots.", "  case 46: // '.'", "    return this.readToken_dot()", "-----------------------------------", "    // Punctuation tokens.", "  case 40: ++this.pos; return this.finishToken(tt.parenL)", "-----------------------------------", "  case 96: // '`'", "    if (this.options.ecmaVersion \u003c 6) break", "-----------------------------------", "  case 48: // '0'", "    let next = this.input.charCodeAt(this.pos + 1)", "-----------------------------------", "    if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number", "    if (this.options.ecmaVersion \u003e= 6) ", "-----------------------------------", "      if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number", "      if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number", "    }", "-----------------------------------", "    // Anything else beginning with a digit is an integer, octal", "    // number, or float.", "  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9", "    return this.readNumber(false)", "-----------------------------------", "    // Quotes produce strings.", "  case 34: case 39: // '\"', \"'\"", "    return this.readString(code)", "-----------------------------------", "    // Operators are parsed inline in tiny state machines. '=' (61) is", "    // often referred to. `finishOp` simply skips the amount of", "    // characters it is given as second argument, and returns a token", "    // of the type given by its first argument.", "", "  case 47: // '/'", "    return this.readToken_slash()", "-----------------------------------", "  case 37: case 42: // '%*'", "    return this.readToken_mult_modulo(code)", "-----------------------------------", "  case 124: case 38: // '|\u0026'", "    return this.readToken_pipe_amp(code)", "-----------------------------------", "  case 94: // '^'", "    return this.readToken_caret()", "-----------------------------------", "  case 43: case 45: // '+-'", "    return this.readToken_plus_min(code)", "-----------------------------------", "  case 60: case 62: // '\u003c\u003e'", "    return this.readToken_lt_gt(code)", "-----------------------------------", "  case 61: case 33: // '=!'", "    return this.readToken_eq_excl(code)", "-----------------------------------", "  case 126: // '~'", "    return this.finishOp(tt.prefix, 1)", "-----------------------------------", "// Parse a regular expression. Some context-awareness is necessary,", "// since a '/' inside a '[]' set does not end the expression.", "", "function tryCreateRegexp(src, flags, throwErrorAt, parser) ", "-----------------------------------", "  // Need to use `readWord1` because '\\uXXXX' sequences are allowed", "  // here (don't ask).", "  let mods = this.readWord1()", "-----------------------------------", "      // Replace each astral symbol and every Unicode escape sequence that", "      // possibly represents an astral symbol or a paired surrogate with a", "      // single ASCII symbol to avoid throwing on regular expressions that", "      // are only valid in combination with the `/u` flag.", "      // Note: replacing with the ASCII symbol `x` might cause false", "      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a", "      // perfectly valid pattern that is equivalent to `[a-b]`, but it would", "      // be replaced by `[x-b]` which throws an error.", "      tmp = tmp.replace(/\\\\u\\([0-9a-fA-F]+)\\}/g, (_match, code, offset) =\u003e {", "-----------------------------------", "  // Detect invalid regular expressions.", "  let value = null", "-----------------------------------", "  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,", "  // so don't do detection if we are running under Rhino", "  if (!isRhino) ", "-----------------------------------", "    // Get a regular expression object for this pattern-flag pair, or `null` in", "    // case the current environment doesn't support the flags it uses.", "    value = tryCreateRegexp(content, mods)", "-----------------------------------", "// Read an integer in the given radix. Return null if zero digits", "// were read, the integer value otherwise. When `len` is given, this", "// will return `null` unless the integer has exactly `len` digits.", "", "pp.readInt = function(radix, len) ", "-----------------------------------", "    if (code \u003e= 97) val = code - 97 + 10; // a", "    else if (code \u003e= 65) val = code - 65 + 10; // A", "    else if (code \u003e= 48 \u0026\u0026 code \u003c= 57) val = code - 48; // 0-9", "    else val = Infinity", "-----------------------------------", "  this.pos += 2; // 0x", "  let val = this.readInt(radix)", "-----------------------------------", "// Read an integer, octal integer, or floating-point number.", "", "pp.readNumber = function(startsWithDot) ", "-----------------------------------", "  if (next === 46) { // '.'", "    ++this.pos", "-----------------------------------", "  if (next === 69 || next === 101) { // 'eE'", "    next = this.input.charCodeAt(++this.pos)", "-----------------------------------", "    if (next === 43 || next === 45) ++this.pos; // '+-'", "    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")", "-----------------------------------", "// Read a string value, interpreting backslash-escapes.", "", "pp.readCodePoint = function() ", "-----------------------------------", "  // UTF-16 Decoding", "  if (code \u003c= 0xFFFF) return String.fromCharCode(code)", "-----------------------------------", "    if (ch === 92) { // '\\'", "      out += this.input.slice(chunkStart, this.pos)", "-----------------------------------", "// Reads template string tokens.", "", "pp.readTmplToken = function() ", "-----------------------------------", "    if (ch === 96 || ch === 36 \u0026\u0026 this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'", "      if (this.pos === this.start \u0026\u0026 this.type === tt.template) ", "-----------------------------------", "    if (ch === 92) { // '\\'", "      out += this.input.slice(chunkStart, this.pos)", "-----------------------------------", "// Used to read escaped characters", "", "pp.readEscapedChar = function(inTemplate) ", "-----------------------------------", "  case 110: return \"\\n\"; // 'n' -\u003e '\\n'", "  case 114: return \"\\r\"; // 'r' -\u003e '\\r'", "  case 120: return String.fromCharCode(this.readHexChar(2)); // 'x'", "  case 117: return codePointToString(this.readCodePoint()); // 'u'", "  case 116: return \"\\t\"; // 't' -\u003e '\\t'", "  case 98: return \"\\b\"; // 'b' -\u003e '\\b'", "  case 118: return \"\\u000b\"; // 'v' -\u003e '\\u000b'", "  case 102: return \"\\f\"; // 'f' -\u003e '\\f'", "  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos; // '\\r\\n'", "  case 10: // ' \\n'", "    if (this.options.locations)  this.lineStart = this.pos; ++this.curLine }", "-----------------------------------", "// Used to read character escape sequences ('\\x', '\\u', '\\U').", "", "pp.readHexChar = function(len) ", "-----------------------------------", "// Read an identifier, and return it as a string. Sets `this.containsEsc`", "// to whether the word contained a '\\u' escape.", "//", "// Incrementally adds only escaped chars, adding other chunks as-is", "// as a micro-optimization.", "", "pp.readWord1 = function() ", "-----------------------------------", "    } else if (ch === 92) { // \"\\\"", "      this.containsEsc = true", "-----------------------------------", "      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"", "        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")", "-----------------------------------", "// Read an identifier or keyword token. Will check for reserved", "// words when necessary.", "", "pp.readWord = function() ", "-----------------------------------"],
		"Functions": ["pp.next = function() ", "pp.getToken = function() ", "  pp[Symbol.iterator] = function () ", "    return next: function () {", "pp.setStrict = function(strict) ", "pp.curContext = function() ", "pp.nextToken = function() ", "pp.readToken = function(code) ", "pp.fullCharCodeAtPos = function() ", "pp.skipBlockComment = function() ", "pp.skipLineComment = function(startSkip) ", "pp.skipSpace = function() ", "pp.finishToken = function(type, val) ", "// This is the function that is called to fetch the next token. It", "pp.readToken_dot = function() ", "pp.readToken_slash = function()  // '/'", "pp.readToken_mult_modulo = function(code)  // '%*'", "pp.readToken_pipe_amp = function(code)  // '|\u0026'", "pp.readToken_caret = function()  // '^'", "pp.readToken_plus_min = function(code)  // '+-'", "pp.readToken_lt_gt = function(code)  // '\u003c\u003e'", "pp.readToken_eq_excl = function(code)  // '=!'", "pp.getTokenFromCode = function(code) ", "pp.finishOp = function(type, size) ", "function tryCreateRegexp(src, flags, throwErrorAt, parser) ", "pp.readRegexp = function() ", "pp.readInt = function(radix, len) ", "pp.readRadixNumber = function(radix) ", "pp.readNumber = function(startsWithDot) ", "pp.readCodePoint = function() ", "function codePointToString(code) ", "pp.readString = function(quote) ", "pp.readTmplToken = function() ", "pp.readEscapedChar = function(inTemplate) ", "pp.readHexChar = function(len) ", "pp.readWord1 = function() ", "pp.readWord = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\tokentype.js",
		"LineCount": 148,
		"CharCount": 4850,
		"Comments": ["// ## Token types", "", "// The assignment of fine-grained, information-carrying type objects", "// allows the tokenizer to store the information it has about a", "// token in a way that is very cheap for the parser to look up.", "", "// All token type variables start with an underscore, to make them", "// easy to recognize.", "", "// The `beforeExpr` property is used to disambiguate between regular", "// expressions and divisions. It is set on all token types that can", "// be followed by an expression (thus, a slash after them would be a", "// regular expression).", "//", "// The `startsExpr` property is used to check if the token ends a", "// `yield` expression. It is set on all token types that either can", "// directly start an expression (like a quotation mark) or can", "// continue an expression (like the body of a string).", "//", "// `isLoop` marks a keyword as starting a loop, which is important", "// to know when parsing a label, in order to allow or disallow", "// continue jumps to that label.", "", "export class TokenType ", "-----------------------------------", "  // Punctuation token types.", "  bracketL: new TokenType(\"[\", beforeExpr: true, startsExpr: true}),", "-----------------------------------", "  // Operators. These carry several kinds of properties to help the", "  // parser use them properly (the presence of these properties is", "  // what categorizes them as operators).", "  //", "  // `binop`, when present, specifies that this operator is a binary", "  // operator, and will refer to its precedence.", "  //", "  // `prefix` and `postfix` mark the operator as a prefix or postfix", "  // unary operator.", "  //", "  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as", "  // binary operators with a very low precedence, that should result", "  // in AssignmentExpression nodes.", "", "  eq: new TokenType(\"=\", beforeExpr: true, isAssign: true}),", "-----------------------------------", "// Map keyword names to token types.", "", "export const keywords = }", "-----------------------------------", "// Succinct definitions of keyword token types", "function kw(name, options = }) {", "-----------------------------------"],
		"Functions": ["function binop(name, prec) ", "function kw(name, options = }) {", "kw(\"function\", startsExpr)"],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\util.js",
		"LineCount": 10,
		"CharCount": 231,
		"Comments": ["export function isArray(obj) ", "-----------------------------------", "// Checks if an object has a property.", "", "export function has(obj, propName) ", "-----------------------------------"],
		"Functions": ["export function isArray(obj) ", "export function has(obj, propName) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\walk\\index.js",
		"LineCount": 341,
		"CharCount": 11084,
		"Comments": ["// AST walker module for Mozilla Parser API compatible trees", "", "// A simple walk is one where you simply specify callbacks to be", "// called on specific nodes. The last two arguments are optional. A", "// simple use would be", "//", "//     walk.simple(myTree, {", "//         Expression: function(node) { ... }", "//     });", "//", "// to do something with all expressions. All Parser API node types", "// can be used to identify node types, as well as Expression,", "// Statement, and ScopeBody, which denote categories of nodes.", "//", "// The base argument can be used to pass a custom (recursive)", "// walker, and state can be used to give this walked an initial", "// state.", "", "export function simple(node, visitors, base, state, override) ", "-----------------------------------", "// An ancestor walk builds up an array of ancestor nodes (including", "// the current node) and passes them to the callback as the state parameter.", "export function ancestor(node, visitors, base, state) ", "-----------------------------------", "// A recursive walk is one where your functions override the default", "// walkers. They can modify and replace the state parameter that's", "// threaded through the walk, and can opt how and whether to walk", "// their child nodes (by calling their third argument on these", "// nodes).", "export function recursive(node, state, funcs, base, override) ", "-----------------------------------", "// Find a node with a given start, end, and type (all are optional,", "// null can be used as wildcard). Returns a {node, state} object, or", "// undefined when it doesn't find a matching node.", "export function findNodeAt(node, start, end, test, base, state) ", "-----------------------------------", "// Find the innermost node of a given type that contains the given", "// position. Interface similar to findNodeAt.", "export function findNodeAround(node, pos, test, base, state) ", "-----------------------------------", "// Find the outermost matching node after a given position.", "export function findNodeAfter(node, pos, test, base, state) ", "-----------------------------------", "// Find the outermost matching node before a given position.", "export function findNodeBefore(node, pos, test, base, state) ", "-----------------------------------", "// Used to create a custom walker. Will fill in all missing node", "// type properties with the defaults.", "export function make(funcs, base) ", "-----------------------------------", "// Node walkers.", "", "export const base = }", "-----------------------------------", "// FIXME drop these node types in next major version", "// (They are awkward, and in ES6 every block can be a scope.)", "base.ScopeBody = (node, st, c) =\u003e c(node, st, \"Statement\")", "-----------------------------------"],
		"Functions": ["//         Expression: function(node)  ... }", "export function simple(node, visitors, base, state, override) ", "  ;(function c(node, st, override) ", "export function ancestor(node, visitors, base, state) ", "  ;(function c(node, st, override) ", "// A recursive walk is one where your functions override the default", "export function recursive(node, state, funcs, base, override) ", "  ;(function c(node, st, override) ", "function makeTest(test) ", "export function findNodeAt(node, start, end, test, base, state) ", "    ;(function c(node, st, override) ", "export function findNodeAround(node, pos, test, base, state) ", "    ;(function c(node, st, override) ", "export function findNodeAfter(node, pos, test, base, state) ", "    ;(function c(node, st, override) ", "export function findNodeBefore(node, pos, test, base, state) ", "  ;(function c(node, st, override) ", "export function make(funcs, base) ", "function skipThrough(node, st, c)  c(node, st) }", "function ignore(_node, _st, _c) }"],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn\\src\\whitespace.js",
		"LineCount": 13,
		"CharCount": 401,
		"Comments": ["// Matches a whole line break (where CRLF is considered a single", "// line break). Used to count lines.", "", "export const lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/", "-----------------------------------"],
		"Functions": ["export function isNewLine(code) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\acorn-globals\\index.js",
		"LineCount": 181,
		"CharCount": 5222,
		"Comments": ["'use strict';", "-----------------------------------", "  // istanbul ignore else", "  if (typeof source === 'string') ", "-----------------------------------", "  // istanbul ignore if", "  if (!(ast \u0026\u0026 typeof ast === 'object' \u0026\u0026 ast.type === 'Program')) ", "-----------------------------------", "      // istanbul ignore next", "      default:", "-----------------------------------"],
		"Functions": ["function isScope(node) ", "function isBlockScope(node) ", "function declaresArguments(node) ", "function declaresThis(node) ", "function reallyParse(source) ", "function findGlobals(source) ", "  var declareFunction = function (node) ", "    node.params.forEach(function (node) ", "  var declarePattern = function (node, parent) ", "        node.properties.forEach(function (node) ", "        node.elements.forEach(function (node) ", "  var declareModuleSpecifier = function (node, parents) ", "    'VariableDeclaration': function (node, parents) ", "      node.declarations.forEach(function (declaration) ", "    'FunctionDeclaration': function (node, parents) ", "    'ClassDeclaration': function (node, parents) ", "    'TryStatement': function (node) ", "  function identifier(node, parents) ", "    'ThisExpression': function (node, parents) ", "  globals.forEach(function (node) ", "  return Object.keys(groupedGlobals).sort().map(function (name) "],
		"Dependencies": ["acorn", "acorn/dist/walk"]
	}, {
		"FileName": "node_modules\\align-text\\index.js",
		"LineCount": 53,
		"CharCount": 1191,
		"Comments": ["/*!", "-----------------------------------", " * align-text \u003chttps://github.com/jonschlinkert/align-text\u003e", " *", "-----------------------------------"],
		"Functions": ["module.exports = function alignText(val, fn) ", "    if (fnType === 'function') "],
		"Dependencies": ["kind-of", "repeat-string", "longest"]
	}, {
		"FileName": "node_modules\\amdefine\\amdefine.js",
		"LineCount": 302,
		"CharCount": 9615,
		"Comments": ["/** vim: et:ts=4:sw=4:sts=4", " * @license amdefine 1.0.0 Copyright (c) 2011-2015, The Dojo Foundation All Rights Reserved.", "-----------------------------------", " * see: http://github.com/jrburke/amdefine for details", " */", "-----------------------------------", "/**", " * Creates a define for node.", "-----------------------------------", "    /**", "     * Trims the . and .. from an array of path segments.", "-----------------------------------", "                    //End of the line. Keep at least one non-dot", "                    //path segment at the front so it can be mapped", "                    //correctly to disk. Otherwise, there is likely", "                    //no path mapping for a path starting with '..'.", "                    //This can still fail, but catches the most reasonable", "                    //uses of ..", "                    break;", "-----------------------------------", "        //Adjust any relative paths.", "        if (name \u0026\u0026 name.charAt(0) === '.') ", "-----------------------------------", "            //If have a base name, try to normalize against it,", "            //otherwise, assume it is a top-level require that will", "            //be relative to baseUrl in the end.", "            if (baseName) ", "-----------------------------------", "    /**", "     * Create the normalize() function passed to a loader plugin's", "-----------------------------------", "            //This one is difficult because the text can/probably uses", "            //define, and any relative paths and requires should be relative", "            //to that id was it would be found on disk. But this would require", "            //bootstrapping a module/require fairly deeply from node core.", "            //Not sure how best to go about that yet.", "            throw new Error('amdefine does not implement load.fromText');", "-----------------------------------", "                //Synchronous, single module require('')", "                return stringRequire(systemRequire, exports, module, deps, relId);", "-----------------------------------", "                //Array of dependencies with a callback.", "", "                //Convert the dependencies to modules.", "                deps = deps.map(function (depName) ", "-----------------------------------", "                //Wait for next tick to call back the require call.", "                if (callback) ", "-----------------------------------", "    //Favor explicit value, passed in if the module wants to support Node 0.4.", "    requireFn = requireFn || function req() ", "-----------------------------------", "            //Only support one define call per file", "            if (alreadyCalled) ", "-----------------------------------", "            //Use the real variables from node", "            //Use module.exports for exports, since", "            //the exports in here is amdefine exports.", "            e = module.exports;", "-----------------------------------", "        //If there are dependencies, they are strings, so need", "        //to convert them to dependency values.", "        if (deps) ", "-----------------------------------", "        //Call the factory with the right dependencies.", "        if (typeof factory === 'function') ", "-----------------------------------", "        //Split the ID by a ! so that", "        var index = id.indexOf('!'),", "-----------------------------------", "            //Straight module lookup. If it is one of the special dependencies,", "            //deal with it, otherwise, delegate to node.", "            if (id === 'require') ", "-----------------------------------", "            //There is a plugin in play.", "            prefix = id.substring(0, index);", "-----------------------------------", "                //Normalize the ID normally.", "                id = normalize(id, relId);", "-----------------------------------", "    //Create a define function specific to the module asking for amdefine.", "    function define(id, deps, factory) ", "-----------------------------------", "        //Set up properties for this module. If an ID, then use", "        //internal cache. If no ID, then use the external variables", "        //for this node module.", "        if (id) ", "-----------------------------------", "            //Put the module in deep freeze until there is a", "            //require call for it.", "            defineCache[id] = [id, deps, factory];", "-----------------------------------", "    //define.require, which has access to all the values in the", "    //cache. Useful for AMD modules that all have IDs in the file,", "    //but need to finally export a value to node based on one of those", "    //IDs.", "    define.require = function (id) ", "-----------------------------------"],
		"Functions": [" * @param Function} [requireFn]. Node's require function for the current module.", " * @returns Function} a define function that is usable for the current node", "function amdefine(module, requireFn) ", "     * all paths that use this function should look normalized.", "    function trimDots(ary) ", "    function normalize(name, baseName) ", "     * Create the normalize() function passed to a loader plugin's", "    function makeNormalize(relName) ", "        return function (name) ", "    function makeLoad(id) ", "        function load(value) ", "        load.fromText = function (id, text) ", "    makeRequire = function (systemRequire, exports, module, relId) ", "        function amdRequire(deps, callback) ", "                deps = deps.map(function (depName) ", "                    process.nextTick(function () ", "        amdRequire.toUrl = function (filePath) ", "    requireFn = requireFn || function req() ", "    function runFactory(id, deps, factory) ", "            deps = deps.map(function (depName) ", "        if (typeof factory === 'function') ", "    stringRequire = function (systemRequire, exports, module, id, relId) ", "    //Create a define function specific to the module asking for amdefine.", "    function define(id, deps, factory) ", "    define.require = function (id) "],
		"Dependencies": ["path"]
	}, {
		"FileName": "node_modules\\amdefine\\intercept.js",
		"LineCount": 37,
		"CharCount": 1032,
		"Comments": ["/*jshint node: true */", "-----------------------------------", "//From the node/lib/module.js source:", "function stripBOM(content) ", "-----------------------------------", "    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)", "    // because the buffer-to-string conversion in `fs.readFileSync()`", "    // translates it to FEFF, the UTF-16 BOM.", "    if (content.charCodeAt(0) === 0xFEFF) ", "-----------------------------------", "//Also adapted from the node/lib/module.js source:", "function intercept(module, filename) ", "-----------------------------------"],
		"Functions": ["inserted  = \"if (typeof define !== 'function') var define = require('amdefine')(module)}\";", "function stripBOM(content) ", "function intercept(module, filename) "],
		"Dependencies": ["module", "fs", "amdefine"]
	}, {
		"FileName": "node_modules\\array-flatten\\array-flatten.js",
		"LineCount": 65,
		"CharCount": 1131,
		"Comments": ["'use strict'", "-----------------------------------", "/**", " * Expose `arrayFlatten`.", "-----------------------------------", "/**", " * Recursive flatten function with depth.", "-----------------------------------", "/**", " * Recursive flatten function. Omitting depth is slightly faster.", "-----------------------------------", "/**", " * Flatten an array, with the ability to define a depth.", "-----------------------------------"],
		"Functions": [" * Recursive flatten function with depth.", "function flattenWithDepth (array, result, depth) ", " * Recursive flatten function. Omitting depth is slightly faster.", "function flattenForever (array, result) ", "function arrayFlatten (array, depth) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\asap\\asap.js",
		"LineCount": 114,
		"CharCount": 2760,
		"Comments": ["", "// Use the fastest possible means to execute a task in a future turn", "// of the event loop.", "", "// linked list of tasks (single, with head node)", "var head = task: void 0, next: null};", "-----------------------------------", "                // In node, uncaught exceptions are considered fatal errors.", "                // Re-throw them synchronously to interrupt flushing!", "", "                // Ensure continuation if the uncaught exception is suppressed", "                // listening \"uncaughtException\" events (as domains does).", "                // Continue in next event to avoid tick recursion.", "                if (domain) ", "-----------------------------------", "                // In browsers, uncaught exceptions are not fatal.", "                // Re-throw them asynchronously to avoid slow-downs.", "                setTimeout(function() ", "-----------------------------------", "    // Node.js before 0.9. Note that some fake-Node environments, like the", "    // Mocha test runner, introduce a `process` global without a `nextTick`.", "    isNodeJS = true;", "-----------------------------------", "    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate", "    if (typeof window !== \"undefined\") ", "-----------------------------------", "    // modern browsers", "    // http://www.nonblocking.io/2011/06/windownexttick.html", "    var channel = new MessageChannel();", "-----------------------------------", "    // old browsers", "    requestFlush = function () ", "-----------------------------------"],
		"Functions": ["function flush() ", "                setTimeout(function() ", "    requestFlush = function () ", "} else if (typeof setImmediate === \"function\") ", "        requestFlush = function () ", "    requestFlush = function () ", "    requestFlush = function () ", "function asap(task) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\assertion-error\\index.js",
		"LineCount": 117,
		"CharCount": 2322,
		"Comments": ["/*!", "-----------------------------------", "/**", " * ### AssertionError", "-----------------------------------", "  // default values", "  this.message = message || 'Unspecified AssertionError';", "-----------------------------------", "  // copy from properties", "  for (var key in props) ", "-----------------------------------", "  // capture stack trace", "  ssf = ssf || arguments.callee;", "-----------------------------------", "/**", " * Allow errors to be converted to JSON for static transfer.", "-----------------------------------", "  // include stack if exists and not turned off", "  if (false !== stack \u0026\u0026 this.stack) ", "-----------------------------------"],
		"Functions": [" * Return a function that will copy properties from", " * listed. Returned function will create a new `}`.", "function exclude () ", "  function excludeProps (res, obj) ", "    Object.keys(obj).forEach(function (key) ", "  return function extendExclude () ", " * @param callee} start stack function (optional)", "function AssertionError (message, _props, ssf) ", "AssertionError.prototype.toJSON = function (stack) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\async\\lib\\async.js",
		"LineCount": 959,
		"CharCount": 28443,
		"Comments": ["/*global setImmediate: false, setTimeout: false, console: false */", "-----------------------------------", "    // global on the server, window in the browser", "    var root, previous_async;", "-----------------------------------", "    //// cross-browser compatiblity functions ////", "", "    var _each = function (arr, iterator) ", "-----------------------------------", "    //// exported async module functions ////", "", "    //// nextTick implementation with browser-compatible fallback ////", "    if (typeof process === 'undefined' || !(process.nextTick)) ", "-----------------------------------", "                // not a direct alias for IE10 compatibility", "                setImmediate(fn);", "-----------------------------------", "              // not a direct alias for IE10 compatibility", "              setImmediate(fn);", "-----------------------------------", "    // reduce only has a series version, as doing reduce in parallel won't", "    // work in many situations.", "    async.reduce = function (arr, memo, iterator, callback) ", "-----------------------------------", "    // inject alias", "    async.inject = async.reduce;", "-----------------------------------", "    // foldl alias", "    async.foldl = async.reduce;", "-----------------------------------", "    // foldr alias", "    async.foldr = async.reduceRight;", "-----------------------------------", "    // select alias", "    async.select = async.filter;", "-----------------------------------", "    // any alias", "    async.any = async.some;", "-----------------------------------", "    // all alias", "    async.all = async.every;", "-----------------------------------", "                    // stop subsequent errors hitting callback multiple times", "                    callback = function () };", "-----------------------------------", "    // AMD / RequireJS", "    if (typeof define !== 'undefined' \u0026\u0026 define.amd) ", "-----------------------------------", "    // Node.js", "    else if (typeof module !== 'undefined' \u0026\u0026 module.exports) ", "-----------------------------------", "    // included directly via \u003cscript\u003e tag", "    else ", "-----------------------------------"],
		"Functions": ["(function () ", "    async.noConflict = function () ", "    function only_once(fn) ", "        return function() ", "    //// cross-browser compatiblity functions ////", "    var _each = function (arr, iterator) ", "    var _map = function (arr, iterator) ", "        _each(arr, function (x, i, a) ", "    var _reduce = function (arr, iterator, memo) ", "        _each(arr, function (x, i, a) ", "    var _keys = function (obj) ", "    //// exported async module functions ////", "        if (typeof setImmediate === 'function') ", "            async.nextTick = function (fn) ", "            async.nextTick = function (fn) ", "            async.setImmediate = function (fn) ", "    async.each = function (arr, iterator, callback) ", "        callback = callback || function () };", "        _each(arr, function (x) ", "            iterator(x, only_once(function (err) ", "                    callback = function () };", "    async.eachSeries = function (arr, iterator, callback) ", "        callback = callback || function () };", "        var iterate = function () ", "            iterator(arr[completed], function (err) ", "                    callback = function () };", "    async.eachLimit = function (arr, limit, iterator, callback) ", "    var _eachLimit = function (limit) ", "        return function (arr, iterator, callback) ", "            callback = callback || function () };", "            (function replenish () ", "                    iterator(arr[started - 1], function (err) ", "                            callback = function () };", "    var doParallel = function (fn) ", "        return function () ", "    var doParallelLimit = function(limit, fn) ", "        return function () ", "    var doSeries = function (fn) ", "        return function () ", "    var _asyncMap = function (eachfn, arr, iterator, callback) ", "        arr = _map(arr, function (x, i) ", "        eachfn(arr, function (x, callback) ", "            iterator(x.value, function (err, v) ", "        }, function (err) ", "    async.mapLimit = function (arr, limit, iterator, callback) ", "    var _mapLimit = function(limit) ", "    async.reduce = function (arr, memo, iterator, callback) ", "        async.eachSeries(arr, function (x, callback) ", "            iterator(memo, x, function (err, v) ", "        }, function (err) ", "    async.reduceRight = function (arr, memo, iterator, callback) ", "        var reversed = _map(arr, function (x) ", "    var _filter = function (eachfn, arr, iterator, callback) ", "        arr = _map(arr, function (x, i) ", "        eachfn(arr, function (x, callback) ", "            iterator(x.value, function (v) ", "        }, function (err) ", "            callback(_map(results.sort(function (a, b) ", "            }), function (x) ", "    var _reject = function (eachfn, arr, iterator, callback) ", "        arr = _map(arr, function (x, i) ", "        eachfn(arr, function (x, callback) ", "            iterator(x.value, function (v) ", "        }, function (err) ", "            callback(_map(results.sort(function (a, b) ", "            }), function (x) ", "    var _detect = function (eachfn, arr, iterator, main_callback) ", "        eachfn(arr, function (x, callback) ", "            iterator(x, function (result) ", "                    main_callback = function () };", "        }, function (err) ", "    async.some = function (arr, iterator, main_callback) ", "        async.each(arr, function (x, callback) ", "            iterator(x, function (v) ", "                    main_callback = function () };", "        }, function (err) ", "    async.every = function (arr, iterator, main_callback) ", "        async.each(arr, function (x, callback) ", "            iterator(x, function (v) ", "                    main_callback = function () };", "        }, function (err) ", "    async.sortBy = function (arr, iterator, callback) ", "        async.map(arr, function (x, callback) ", "            iterator(x, function (err, criteria) ", "        }, function (err, results) ", "                var fn = function (left, right) ", "                callback(null, _map(results.sort(fn), function (x) ", "    async.auto = function (tasks, callback) ", "        callback = callback || function () };", "        var addListener = function (fn) ", "        var removeListener = function (fn) ", "        var taskComplete = function () ", "            _each(listeners.slice(0), function (fn) ", "        addListener(function () ", "                callback = function () };", "        _each(keys, function (k) ", "            var taskCallback = function (err) ", "                    _each(_keys(results), function(rkey) ", "                    callback = function () };", "            var ready = function () ", "                return _reduce(requires, function (a, x) ", "                var listener = function () ", "    async.waterfall = function (tasks, callback) ", "        callback = callback || function () };", "          var err = new Error('First argument to waterfall must be an array of functions');", "        var wrapIterator = function (iterator) ", "            return function (err) ", "                    callback = function () };", "                    async.setImmediate(function () ", "    var _parallel = function(eachfn, tasks, callback) ", "        callback = callback || function () };", "            eachfn.map(tasks, function (fn, callback) ", "                    fn(function (err) ", "            eachfn.each(_keys(tasks), function (k, callback) ", "                tasks[k](function (err) ", "            }, function (err) ", "    async.parallel = function (tasks, callback) ", "    async.parallelLimit = function(tasks, limit, callback) ", "    async.series = function (tasks, callback) ", "        callback = callback || function () };", "            async.mapSeries(tasks, function (fn, callback) ", "                    fn(function (err) ", "            async.eachSeries(_keys(tasks), function (k, callback) ", "                tasks[k](function (err) ", "            }, function (err) ", "    async.iterator = function (tasks) ", "        var makeCallback = function (index) ", "            var fn = function () ", "            fn.next = function () ", "    async.apply = function (fn) ", "        return function () ", "    var _concat = function (eachfn, arr, fn, callback) ", "        eachfn(arr, function (x, cb) ", "            fn(x, function (err, y) ", "        }, function (err) ", "    async.whilst = function (test, iterator, callback) ", "            iterator(function (err) ", "    async.doWhilst = function (iterator, test, callback) ", "        iterator(function (err) ", "    async.until = function (test, iterator, callback) ", "            iterator(function (err) ", "    async.doUntil = function (iterator, test, callback) ", "        iterator(function (err) ", "    async.queue = function (worker, concurrency) ", "        function _insert(q, data, pos, callback) ", "          _each(data, function(task) ", "                  callback: typeof callback === 'function' ? callback : null", "            push: function (data, callback) ", "            unshift: function (data, callback) ", "            process: function () ", "                    var next = function () ", "            length: function () ", "            running: function () ", "    async.cargo = function (worker, payload) ", "            push: function (data, callback) ", "                _each(data, function(task) ", "                        callback: typeof callback === 'function' ? callback : null", "            process: function process() ", "                var ds = _map(ts, function (task) ", "                worker(ds, function () ", "                    _each(ts, function (data) ", "            length: function () ", "            running: function () ", "    var _console_fn = function (name) ", "        return function (fn) ", "            fn.apply(null, args.concat([function (err) ", "                        _each(args, function (x) ", "    async.memoize = function (fn, hasher) ", "        hasher = hasher || function (x) ", "        var memoized = function () ", "                fn.apply(null, args.concat([function () ", "    async.unmemoize = function (fn) ", "      return function () ", "    async.times = function (count, iterator, callback) ", "    async.timesSeries = function (count, iterator, callback) ", "    async.compose = function (/* functions... */) ", "        return function () ", "            async.reduce(fns, args, function (newargs, fn, cb) ", "                fn.apply(that, newargs.concat([function () ", "            function (err, results) ", "    var _applyEach = function (eachfn, fns /*args...*/) ", "        var go = function () ", "            return eachfn(fns, function (fn, cb) ", "    async.forever = function (fn, callback) ", "        function next(err) ", "        define([], function () "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\basic-auth\\index.js",
		"LineCount": 109,
		"CharCount": 1888,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * RegExp for basic auth credentials", "-----------------------------------", "/**", " * RegExp for basic auth user/pass", "-----------------------------------", "/**", " * Parse the Authorization header field of a request.", "-----------------------------------", "  // get header", "  var header = getAuthorization(req.req || req)", "-----------------------------------", "  // parse header", "  var match = credentialsRegExp.exec(header || '')", "-----------------------------------", "  // decode user pass", "  var userPass = userPassRegExp.exec(decodeBase64(match[1]))", "-----------------------------------", "  // return credentials object", "  return new Credentials(userPass[1], userPass[2])", "-----------------------------------", "/**", " * Decode base64 string.", "-----------------------------------", "/**", " * Get the Authorization header from request object.", "-----------------------------------", "/**", " * Object to represent user credentials.", "-----------------------------------"],
		"Functions": ["function auth(req) ", "function decodeBase64(str) ", "function getAuthorization(req) ", "function Credentials(name, pass) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\browser\\bluebird.js",
		"LineCount": 4887,
		"CharCount": 147898,
		"Comments": ["/* @preserve", "-----------------------------------", "/**", " * bluebird build version 2.10.2", "-----------------------------------", "        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");", "    }", "-----------------------------------", "        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");", "        return errorObj;", "-----------------------------------", "        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/DT1qyG\\u000a\");", "    }", "-----------------------------------", "                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/4Y4pDk\\u000a\\u000a\".replace(\"%s\", value) +", "                        \"From coroutine:\\u000a\" +", "-----------------------------------", "        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    }", "-----------------------------------", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    yieldHandlers.push(fn);", "-----------------------------------", "        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    }", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "", "    return map(this, fn, options, null).promise();", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    return map(promises, fn, options, _filter).promise();", "-----------------------------------", "        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------", "        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------", "    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/LhFpo0\\u000a\");", "};", "-----------------------------------", "        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/KsIlge\\u000a\");", "    }", "-----------------------------------", "                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));", "            }", "-----------------------------------", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    var prev = async._schedule;", "-----------------------------------", "    // Complete slack tracking, opt out of field-type tracking and           ", "    // stabilize map                                                         ", "    fillTypes(a: 1});                                                       ", "-----------------------------------", "                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");", "                this.__hardReject__(err);", "-----------------------------------", "        this._promise._reject(apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\")._reason());", "        return;", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------", "                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/iWrZbw\\u000a\"", "                        .replace(\"%s\", suffix));", "-----------------------------------", "        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");", "    }", "-----------------------------------", "        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/8FZo5V\\u000a\");", "    }", "-----------------------------------", "        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/OsFKC8\\u000a\");", "    } else if (castValue instanceof Promise) ", "-----------------------------------", "        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");", "    }", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);", "-----------------------------------", "    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");", "};", "-----------------------------------", "        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/1wAmHx\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");", "    }", "-----------------------------------", "        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "", "        var input;", "-----------------------------------"],
		"Functions": ["!function(e)if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self\u0026\u0026(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"\u0026\u0026_dereq_;if(!u\u0026\u0026a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"\u0026\u0026_dereq_;for(var o=0;o\u003cr.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "function any(promises) ", "Promise.any = function (promises) ", "Promise.prototype.any = function () ", "},}],2:[function(_dereq_,module,exports){", "function Async() ", "    this.drainQueues = function () ", "Async.prototype.disableTrampolineIfNecessary = function() ", "Async.prototype.enableTrampoline = function() ", "        this._schedule = function(fn) ", "Async.prototype.haveItemsQueued = function () ", "Async.prototype.throwLater = function(fn, arg) ", "        fn = function ()  throw arg; };", "        setTimeout(function() ", "        this._schedule(function() ", "function AsyncInvokeLater(fn, receiver, arg) ", "function AsyncInvoke(fn, receiver, arg) ", "function AsyncSettlePromises(promise) ", "        schedule = function(fn)  setTimeout(fn, 0); };", "    Async.prototype.invokeLater = function (fn, receiver, arg) ", "            this._schedule(function() ", "                setTimeout(function() ", "    Async.prototype.invoke = function (fn, receiver, arg) ", "            this._schedule(function() ", "    Async.prototype.settlePromises = function(promise) ", "            this._schedule(function() ", "Async.prototype.invokeFirst = function (fn, receiver, arg) ", "Async.prototype._drainQueue = function(queue) ", "        if (typeof fn !== \"function\") ", "Async.prototype._drainQueues = function () ", "Async.prototype._queueTick = function () ", "Async.prototype._reset = function () ", "},\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL, tryConvertToPromise) ", "var rejectThis = function(_, e) ", "var targetRejected = function(e, context) ", "var bindingResolved = function(thisArg, context) ", "var bindingRejected = function(e, context) ", "Promise.prototype.bind = function (thisArg) ", "Promise.prototype._setBoundTo = function (obj) ", "Promise.prototype._isBound = function () ", "Promise.bind = function (thisArg, value) ", "        maybePromise._then(function() ", "},}],4:[function(_dereq_,module,exports){", "function noConflict() ", "},\"./promise.js\":23}],5:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "var makeMethodCaller = function (methodName) ", "        return function(obj)                                                \\n\\", "var makeGetter = function (propertyName) ", "var getCompiled = function(name, compiler, cache) ", "    if (typeof ret !== \"function\") ", "getMethodCaller = function(name) ", "getGetter = function(name) ", "function ensureMethod(obj, methodName) ", "    if (typeof fn !== \"function\") ", "function caller(obj) ", "Promise.prototype.call = function (methodName) ", "function namedGetter(obj) ", "function indexedGetter(obj) ", "Promise.prototype.get = function (propertyName) ", "},\"./util.js\":38}],6:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "Promise.prototype._cancel = function (reason) ", "Promise.prototype.cancel = function (reason) ", "Promise.prototype.cancellable = function () ", "Promise.prototype.uncancellable = function () ", "Promise.prototype.fork = function (didFulfill, didReject, didProgress) ", "},\"./async.js\":2,\"./errors.js\":13}],7:[function(_dereq_,module,exports){", "module.exports = function() ", "function CapturedTrace(parent) ", "CapturedTrace.prototype.uncycle = function() ", "CapturedTrace.prototype.parent = function() ", "CapturedTrace.prototype.hasParent = function() ", "CapturedTrace.prototype.attachExtraTrace = function(error) ", "function reconstructStack(message, stacks) ", "function removeDuplicateOrEmptyJumps(stacks) ", "function removeCommonRoots(stacks) ", "function cleanStack(stack) ", "function stackFramesAsArray(error) ", "CapturedTrace.parseStackAndMessage = function(error) ", "CapturedTrace.formatAndLogError = function(error, title) ", "        if (typeof error === \"object\" || typeof error === \"function\") ", "        if (typeof warn === \"function\") ", "        } else if (typeof console.log === \"function\" ||", "CapturedTrace.unhandledRejection = function (reason) ", "CapturedTrace.isSupported = function () ", "    return typeof captureStackTrace === \"function\";", "function(name, localHandler, reason, promise) ", "        if (typeof localHandler === \"function\") ", "function formatNonError(obj) ", "    if (typeof obj === \"function\") ", "        str = \"[function \" +", "function snip(str) ", "var shouldIgnore = function()  return false; };", "function parseLineInfo(line) ", "CapturedTrace.setBounds = function(firstLineError, lastLineError) ", "    shouldIgnore = function(line) ", "var captureStackTrace = (function stackDetection() ", "    var v8stackFormatter = function(stack, error) ", "        typeof Error.captureStackTrace === \"function\") ", "        shouldIgnore = function(line) ", "        return function(receiver, ignoreUntil) ", "        return function captureStackTrace(o) ", "        return function captureStackTrace(o) ", "    formatStack = function(stack, error) ", "            typeof error === \"function\") \u0026\u0026", "var fireGlobalEvent = (function() ", "        return function(name, reason, promise) ", "            fireDomEvent = function(type, detail) ", "        return function(name, reason, promise) ", "    warn = function (message) ", "        warn = function(message) ", "        warn = function(message) ", "},\"./async.js\":2,\"./util.js\":38}],8:[function(_dereq_,module,exports){", "module.exports = function(NEXT_FILTER) ", "function CatchFilter(instances, callback, promise) ", "function safePredicate(predicate, e) ", "        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");", "CatchFilter.prototype.doFilter = function (e) ", "        } else if (typeof item === \"function\" \u0026\u0026 !itemIsErrorType) ", "},\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(_dereq_,module,exports){", "module.exports = function(Promise, CapturedTrace, isDebugging) ", "function Context() ", "Context.prototype._pushContext = function () ", "Context.prototype._popContext = function () ", "function createContext() ", "function peekContext() ", "},}],10:[function(_dereq_,module,exports){", "module.exports = function(Promise, CapturedTrace) ", "Promise.prototype._ignoreRejections = function() ", "Promise.prototype._ensurePossibleRejectionHandled = function () ", "Promise.prototype._notifyUnhandledRejectionIsHandled = function () ", "Promise.prototype._notifyUnhandledRejection = function () ", "Promise.prototype._setUnhandledRejectionIsNotified = function () ", "Promise.prototype._unsetUnhandledRejectionIsNotified = function () ", "Promise.prototype._isUnhandledRejectionNotified = function () ", "Promise.prototype._setRejectionIsUnhandled = function () ", "Promise.prototype._unsetRejectionIsUnhandled = function () ", "Promise.prototype._isRejectionUnhandled = function () ", "Promise.prototype._setCarriedStackTrace = function (capturedTrace) ", "Promise.prototype._isCarryingStackTrace = function () ", "Promise.prototype._getCarriedStackTrace = function () ", "Promise.prototype._captureStackTrace = function () ", "Promise.prototype._attachExtraTrace = function (error, ignoreSelf) ", "Promise.prototype._warn = function(message) ", "Promise.onPossiblyUnhandledRejection = function (fn) ", "        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))", "Promise.onUnhandledRejectionHandled = function (fn) ", "        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))", "Promise.longStackTraces = function () ", "Promise.hasLongStackTraces = function () ", "    Promise.longStackTraces = function()};", "return function() ", "},\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "var returner = function () ", "var thrower = function () ", "var returnUndefined = function() };", "var throwUndefined = function() ", "var wrapper = function (value, action) ", "        return function () ", "        return function () ", "Promise.prototype.thenReturn = function (value) ", "Promise.prototype.thenThrow = function (reason) ", "},\"./util.js\":38}],12:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL) ", "Promise.prototype.each = function (fn) ", "Promise.each = function (promises, fn) ", "},}],13:[function(_dereq_,module,exports){", "function subError(nameProperty, defaultMessage) ", "    function SubError(message) ", "    if (typeof Array.prototype[methods[i]] === \"function\") ", "AggregateError.prototype.toString = function() ", "function OperationalError(message) ", "},\"./es5.js\":14,\"./util.js\":38}],14:[function(_dereq_,module,exports){", "var isES5 = (function()", "        propertyIsWritable: function(obj, prop) ", "    var ObjectKeys = function (o) ", "    var ObjectGetDescriptor = function(o, key) ", "    var ObjectDefineProperty = function (o, key, desc) ", "    var ObjectFreeze = function (obj) ", "    var ObjectGetPrototypeOf = function (obj) ", "    var ArrayIsArray = function (obj) ", "        propertyIsWritable: function() ", "},}],15:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL) ", "Promise.prototype.filter = function (fn, options) ", "Promise.filter = function (promises, fn, options) ", "},}],16:[function(_dereq_,module,exports){", "module.exports = function(Promise, NEXT_FILTER, tryConvertToPromise) ", "function returnThis() ", "function throwThis() ", "function return$(r) ", "    return function() ", "function throw$(r) ", "    return function() ", "function promisedFinally(ret, reasonOrValue, isFulfilled) ", "function finallyHandler(reasonOrValue) ", "function tapHandler(value) ", "Promise.prototype._passThroughHandler = function (handler, isFinally) ", "    if (typeof handler !== \"function\") return this.then();", "Promise.prototype[\"finally\"] = function (handler) ", "Promise.prototype.tap = function (handler) ", "},\"./util.js\":38}],17:[function(_dereq_,module,exports){", "module.exports = function(Promise,", "function promiseFromYieldHandler(value, yieldHandlers, traceParent) ", "function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) ", "    this._yieldHandlers = typeof yieldHandler === \"function\"", "PromiseSpawn.prototype.promise = function () ", "PromiseSpawn.prototype._run = function () ", "PromiseSpawn.prototype._continue = function (result) ", "PromiseSpawn.prototype._throw = function (reason) ", "PromiseSpawn.prototype._next = function (value) ", "Promise.coroutine = function (generatorFunction, options) ", "    if (typeof generatorFunction !== \"function\") ", "        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    return function () ", "Promise.coroutine.addYieldHandler = function(fn) ", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.spawn = function (generatorFunction) ", "    if (typeof generatorFunction !== \"function\") ", "        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "},\"./errors.js\":13,\"./util.js\":38}],18:[function(_dereq_,module,exports){", "function(Promise, PromiseArray, tryConvertToPromise, INTERNAL) ", "    var thenCallback = function(i) ", "    var caller = function(count) ", "    var Holder = function(total, fn) ", "    Holder.prototype.checkFulfillment = function(promise) ", "    var reject = function (reason) ", "Promise.join = function () ", "    if (last \u003e 0 \u0026\u0026 typeof arguments[last] === \"function\") ", "},\"./util.js\":38}],19:[function(_dereq_,module,exports){", "module.exports = function(Promise,", "function MappingPromiseArray(promises, fn, limit, _filter) ", "function init() this._init$(undefined, -2);}", "MappingPromiseArray.prototype._init = function () };", "MappingPromiseArray.prototype._promiseFulfilled = function (value, index) ", "MappingPromiseArray.prototype._drainQueue = function () ", "MappingPromiseArray.prototype._filter = function (booleans, values) ", "MappingPromiseArray.prototype.preservedValues = function () ", "function map(promises, fn, options, _filter) ", "Promise.prototype.map = function (fn, options) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.map = function (promises, fn, options, _filter) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "},\"./async.js\":2,\"./util.js\":38}],20:[function(_dereq_,module,exports){", "function(Promise, INTERNAL, tryConvertToPromise, apiRejection) ", "Promise.method = function (fn) ", "    if (typeof fn !== \"function\") ", "        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    return function () ", "Promise.attempt = Promise[\"try\"] = function (fn, args, ctx) ", "    if (typeof fn !== \"function\") ", "        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype._resolveFromSyncValue = function (value) ", "},\"./util.js\":38}],21:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "function spreadAdapter(val, nodeback) ", "function successAdapter(val, nodeback) ", "function errorAdapter(reason, nodeback) ", "Promise.prototype.nodeify = function (nodeback, options) ", "    if (typeof nodeback == \"function\") ", "},\"./async.js\":2,\"./util.js\":38}],22:[function(_dereq_,module,exports){", "module.exports = function(Promise, PromiseArray) ", "Promise.prototype.progressed = function (handler) ", "Promise.prototype._progress = function (progressValue) ", "Promise.prototype._progressHandlerAt = function (index) ", "Promise.prototype._doProgressWith = function (progression) ", "Promise.prototype._progressUnchecked = function (progressValue) ", "            if (typeof handler === \"function\") ", "        if (typeof handler === \"function\") ", "},\"./async.js\":2,\"./util.js\":38}],23:[function(_dereq_,module,exports){", "module.exports = function() ", "var makeSelfResolutionError = function () ", "var reflect = function() ", "var apiRejection = function(msg) ", "    getDomain = function() ", "    getDomain = function() ", "var INTERNAL = function()};", "function Promise(resolver) ", "    if (typeof resolver !== \"function\") ", "        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");", "Promise.prototype.toString = function () ", "Promise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) ", "            if (typeof item === \"function\") ", "                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));", "Promise.prototype.reflect = function () ", "Promise.prototype.then = function (didFulfill, didReject, didProgress) ", "        typeof didFulfill !== \"function\" \u0026\u0026", "        typeof didReject !== \"function\") ", "        var msg = \".then() only accepts functions but was passed: \" +", "Promise.prototype.done = function (didFulfill, didReject, didProgress) ", "Promise.prototype.spread = function (didFulfill, didReject) ", "Promise.prototype.isCancellable = function () ", "Promise.prototype.toJSON = function () ", "Promise.prototype.all = function () ", "Promise.prototype.error = function (fn) ", "Promise.is = function (val) ", "Promise.fromNode = function(fn) ", "Promise.all = function (promises) ", "Promise.defer = Promise.pending = function () ", "Promise.cast = function (obj) ", "Promise.reject = Promise.rejected = function (reason) ", "Promise.setScheduler = function(fn) ", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype._then = function (", "Promise.prototype._settlePromiseAtPostResolution = function (index) ", "Promise.prototype._length = function () ", "Promise.prototype._isFollowingOrFulfilledOrRejected = function () ", "Promise.prototype._isFollowing = function () ", "Promise.prototype._setLength = function (len) ", "Promise.prototype._setFulfilled = function () ", "Promise.prototype._setRejected = function () ", "Promise.prototype._setFollowing = function () ", "Promise.prototype._setIsFinal = function () ", "Promise.prototype._isFinal = function () ", "Promise.prototype._cancellable = function () ", "Promise.prototype._setCancellable = function () ", "Promise.prototype._unsetCancellable = function () ", "Promise.prototype._setIsMigrated = function () ", "Promise.prototype._unsetIsMigrated = function () ", "Promise.prototype._isMigrated = function () ", "Promise.prototype._receiverAt = function (index) ", "Promise.prototype._promiseAt = function (index) ", "Promise.prototype._fulfillmentHandlerAt = function (index) ", "Promise.prototype._rejectionHandlerAt = function (index) ", "Promise.prototype._boundValue = function() ", "Promise.prototype._migrateCallbacks = function (follower, index) ", "Promise.prototype._addCallbacks = function (", "        if (typeof fulfill === \"function\" \u0026\u0026 !this._isCarryingStackTrace()) ", "        if (typeof reject === \"function\") ", "        if (typeof progress === \"function\") ", "        if (typeof fulfill === \"function\") ", "        if (typeof reject === \"function\") ", "        if (typeof progress === \"function\") ", "Promise.prototype._setProxyHandlers = function (receiver, promiseSlotValue) ", "Promise.prototype._proxyPromiseArray = function (promiseArray, index) ", "Promise.prototype._resolveCallback = function(value, shouldBind) ", "function(reason, synchronous, shouldNotMarkOriginatingFromRejection) ", "Promise.prototype._resolveFromResolver = function (resolver) ", "    var r = tryCatch(resolver)(function(value) ", "    }, function (reason) ", "Promise.prototype._settlePromiseFromHandler = function (", "Promise.prototype._target = function() ", "Promise.prototype._followee = function() ", "Promise.prototype._setFollowee = function(promise) ", "Promise.prototype._cleanValues = function () ", "Promise.prototype._propagateFrom = function (parent, flags) ", "Promise.prototype._fulfill = function (value) ", "Promise.prototype._reject = function (reason, carriedStackTrace) ", "Promise.prototype._settlePromiseAt = function (index) ", "    if (typeof handler === \"function\") ", "Promise.prototype._clearCallbackDataAtIndex = function(index) ", "Promise.prototype._isSettlePromisesQueued = function () ", "Promise.prototype._setSettlePromisesQueued = function () ", "Promise.prototype._unsetSettlePromisesQueued = function () ", "Promise.prototype._queueSettlePromises = function() ", "Promise.prototype._fulfillUnchecked = function (value) ", "Promise.prototype._rejectUncheckedCheckError = function (reason) ", "Promise.prototype._rejectUnchecked = function (reason, trace) ", "        async.throwLater(function(e) ", "Promise.prototype._settlePromises = function () ", "    function fillTypes(value)                                               ", "    fillTypes(function()});                                                 ", "},\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL, tryConvertToPromise,", "function toResolutionValue(val) ", "function PromiseArray(values) ", "PromiseArray.prototype.length = function () ", "PromiseArray.prototype.promise = function () ", "PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) ", "PromiseArray.prototype._isResolved = function () ", "PromiseArray.prototype._resolve = function (value) ", "PromiseArray.prototype._reject = function (reason) ", "PromiseArray.prototype._promiseProgressed = function (progressValue, index) ", "PromiseArray.prototype._promiseFulfilled = function (value, index) ", "PromiseArray.prototype._promiseRejected = function (reason, index) ", "PromiseArray.prototype.shouldCopyValues = function () ", "PromiseArray.prototype.getActualLength = function (len) ", "},\"./util.js\":38}],25:[function(_dereq_,module,exports){", "function isUntypedError(obj) ", "function wrapAsOperationalError(obj) ", "function nodebackForPromise(promise) ", "    return function(err, value) ", "    PromiseResolver = function (promise) ", "    PromiseResolver = function (promise) ", "        get: function() ", "PromiseResolver.prototype.toString = function () ", "PromiseResolver.prototype.fulfill = function (value) ", "PromiseResolver.prototype.reject = function (reason) ", "PromiseResolver.prototype.progress = function (value) ", "PromiseResolver.prototype.cancel = function (err) ", "PromiseResolver.prototype.timeout = function () ", "PromiseResolver.prototype.isResolved = function () ", "PromiseResolver.prototype.toJSON = function () ", "},\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL) ", "var defaultFilter = function(name) ", "function propsFilter(key) ", "function isPromisified(fn) ", "function hasPromisified(obj, key, suffix) ", "function checkValid(ret, suffix, suffixRegexp) ", "function promisifiableMethods(obj, suffix, suffixRegexp, filter) ", "        if (typeof value === \"function\" \u0026\u0026", "var escapeIdentRegex = function(str) ", "var switchCaseArgumentOrder = function(likelyArgumentCount) ", "var argumentSequence = function(argumentCount) ", "var parameterDeclaration = function(parameterCount) ", "var parameterCount = function(fn) ", "function(callback, receiver, originalName, fn) ", "    function generateCallForArgumentCount(count) ", "    function generateArgumentSwitchCase() ", "        var ret = function (Parameters)                                     \\n\\", "function makeNodePromisifiedClosure(callback, receiver, _, fn) ", "    var defaultThis = (function() return this;})();", "    function promisified() ", "function promisifyAll(obj, suffix, filter, promisifier) ", "            var promisified = promisifier(fn, function() ", "function promisify(callback, receiver) ", "Promise.promisify = function (fn, receiver) ", "    if (typeof fn !== \"function\") ", "        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.promisifyAll = function (target, options) ", "    if (typeof target !== \"function\" \u0026\u0026 typeof target !== \"object\") ", "        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");", "    if (typeof filter !== \"function\") filter = defaultFilter;", "    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;", "},\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(_dereq_,module,exports){", "module.exports = function(", "function PropertiesPromiseArray(obj) ", "PropertiesPromiseArray.prototype._init = function () ", "PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) ", "PropertiesPromiseArray.prototype._promiseProgressed = function (value, index) ", "PropertiesPromiseArray.prototype.shouldCopyValues = function () ", "PropertiesPromiseArray.prototype.getActualLength = function (len) ", "function props(promises) ", "Promise.prototype.props = function () ", "Promise.props = function (promises) ", "},\"./es5.js\":14,\"./util.js\":38}],28:[function(_dereq_,module,exports){", "function arrayMove(src, srcIndex, dst, dstIndex, len) ", "function Queue(capacity) ", "Queue.prototype._willBeOverCapacity = function (size) ", "Queue.prototype._pushOne = function (arg) ", "Queue.prototype._unshiftOne = function(value) ", "Queue.prototype.unshift = function(fn, receiver, arg) ", "Queue.prototype.push = function (fn, receiver, arg) ", "Queue.prototype.shift = function () ", "Queue.prototype.length = function () ", "Queue.prototype._checkCapacity = function (size) ", "Queue.prototype._resizeTo = function (capacity) ", "},}],29:[function(_dereq_,module,exports){", "module.exports = function(", "var raceLater = function (promise) ", "    return promise.then(function(array) ", "function race(promises, parent) ", "Promise.race = function (promises) ", "Promise.prototype.race = function () ", "},\"./util.js\":38}],30:[function(_dereq_,module,exports){", "module.exports = function(Promise,", "function ReductionPromiseArray(promises, fn, accum, _each) ", "function init() ", "ReductionPromiseArray.prototype._init = function () };", "ReductionPromiseArray.prototype._resolveEmptyArray = function () ", "ReductionPromiseArray.prototype._promiseFulfilled = function (value, index) ", "function reduce(promises, fn, initialValue, _each) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype.reduce = function (fn, initialValue) ", "Promise.reduce = function (promises, fn, initialValue, _each) ", "},\"./async.js\":2,\"./util.js\":38}],31:[function(_dereq_,module,exports){", "var noAsyncScheduler = function() ", "                ? function(fn)  GlobalSetImmediate.call(global, fn); }", "                : function(fn)  ProcessNextTick.call(process, fn); };", "    schedule = function(fn) ", "        return function()  div.classList.toggle(\"foo\"); };", "    schedule = function (fn) ", "    schedule = function (fn) ", "},\"./util\":38}],32:[function(_dereq_,module,exports){", "    function(Promise, PromiseArray) ", "function SettledPromiseArray(values) ", "SettledPromiseArray.prototype._promiseResolved = function (index, inspection) ", "SettledPromiseArray.prototype._promiseFulfilled = function (value, index) ", "SettledPromiseArray.prototype._promiseRejected = function (reason, index) ", "Promise.settle = function (promises) ", "Promise.prototype.settle = function () ", "},\"./util.js\":38}],33:[function(_dereq_,module,exports){", "function(Promise, PromiseArray, apiRejection) ", "function SomePromiseArray(values) ", "SomePromiseArray.prototype._init = function () ", "SomePromiseArray.prototype.init = function () ", "SomePromiseArray.prototype.setUnwrap = function () ", "SomePromiseArray.prototype.howMany = function () ", "SomePromiseArray.prototype.setHowMany = function (count) ", "SomePromiseArray.prototype._promiseFulfilled = function (value) ", "SomePromiseArray.prototype._promiseRejected = function (reason) ", "SomePromiseArray.prototype._fulfilled = function () ", "SomePromiseArray.prototype._rejected = function () ", "SomePromiseArray.prototype._addRejected = function (reason) ", "SomePromiseArray.prototype._addFulfilled = function (value) ", "SomePromiseArray.prototype._canPossiblyFulfill = function () ", "SomePromiseArray.prototype._getRangeError = function (count) ", "SomePromiseArray.prototype._resolveEmptyArray = function () ", "function some(promises, howMany) ", "Promise.some = function (promises, howMany) ", "Promise.prototype.some = function (howMany) ", "},\"./errors.js\":13,\"./util.js\":38}],34:[function(_dereq_,module,exports){", "module.exports = function(Promise) ", "function PromiseInspection(promise) ", "PromiseInspection.prototype.value = function () ", "PromiseInspection.prototype.reason = function () ", "Promise.prototype._isFulfilled = function () ", "Promise.prototype._isRejected = function () ", "Promise.prototype._isPending = function () ", "Promise.prototype._isResolved = function () ", "Promise.prototype.isPending = function() ", "Promise.prototype.isRejected = function() ", "Promise.prototype.isFulfilled = function() ", "Promise.prototype.isResolved = function() ", "Promise.prototype._value = function() ", "Promise.prototype._reason = function() ", "Promise.prototype.value = function() ", "Promise.prototype.reason = function() ", "},}],35:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL) ", "function tryConvertToPromise(obj, context) ", "        } else if (typeof then === \"function\") ", "function getThen(obj) ", "function isAnyBluebirdPromise(obj) ", "function doThenable(x, then, context) ", "    function resolveFromThenable(value) ", "    function rejectFromThenable(reason) ", "    function progressFromThenable(value) ", "        if (typeof promise._progress === \"function\") ", "},\"./util.js\":38}],36:[function(_dereq_,module,exports){", "module.exports = function(Promise, INTERNAL) ", "var afterTimeout = function (promise, message) ", "var afterValue = function(value)  return delay(+this).thenReturn(value); };", "var delay = Promise.delay = function (value, ms) ", "        setTimeout(function()  ret._fulfill(); }, ms);", "Promise.prototype.delay = function (ms) ", "function successClear(value) ", "function failureClear(reason) ", "Promise.prototype.timeout = function (ms, message) ", "    var handle = setTimeout(function timeoutTimeout() ", "},\"./util.js\":38}],37:[function(_dereq_,module,exports){", "module.exports = function (Promise, apiRejection, tryConvertToPromise,", "    function inspectionMapper(inspections) ", "    function thrower(e) ", "        setTimeout(function()throw e;}, 0);", "    function castPreservingDisposable(thenable) ", "            typeof thenable._isDisposable === \"function\" \u0026\u0026", "            typeof thenable._getDisposer === \"function\" \u0026\u0026", "    function dispose(resources, inspection) ", "        function iterator() ", "    function disposerSuccess(value) ", "    function disposerFail(reason) ", "    function Disposer(data, promise, context) ", "    Disposer.prototype.data = function () ", "    Disposer.prototype.promise = function () ", "    Disposer.prototype.resource = function () ", "    Disposer.prototype.tryDispose = function(inspection) ", "    Disposer.isDisposer = function (d) ", "                typeof d.resource === \"function\" \u0026\u0026", "                typeof d.tryDispose === \"function\");", "    function FunctionDisposer(fn, promise, context) ", "    FunctionDisposer.prototype.doDispose = function (resource, inspection) ", "    function maybeUnwrapDisposer(value) ", "    Promise.using = function () ", "        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "            .then(function(vals) ", "    Promise.prototype._setDisposable = function (disposer) ", "    Promise.prototype._isDisposable = function () ", "    Promise.prototype._getDisposer = function () ", "    Promise.prototype._unsetDisposable = function () ", "    Promise.prototype.disposer = function (fn) ", "        if (typeof fn === \"function\") ", "},\"./errors.js\":13,\"./util.js\":38}],38:[function(_dereq_,module,exports){", "var haveGetters = (function()", "            get: function () ", "function tryCatcher() ", "function tryCatch(fn) ", "var inherits = function(Child, Parent) ", "    function T() ", "function isPrimitive(val) ", "function isObject(value) ", "function maybeWrapAsError(maybeError) ", "function withAppended(target, appendee) ", "function getDataPropertyOrDefault(obj, key, defaultValue) ", "function notEnumerableProp(obj, name, value) ", "function thrower(r) ", "var inheritedDataKeys = (function() ", "    var isExcludedProto = function(val) ", "        return function(obj) ", "        return function(obj) ", "function isClass(fn) ", "        if (typeof fn === \"function\") ", "function toFastProperties(obj) ", "    function f() }", "function isIdentifier(str) ", "function filledRange(count, prefix, suffix) ", "function safeToString(obj) ", "function markAsOriginatingFromRejection(e) ", "function originatesFromRejection(e) ", "function canAttachTrace(obj) ", "var ensureErrorObject = (function() ", "        return function(value) ", "        return function(value) ", "function classString(obj) ", "function copyDescriptors(from, to, filter) ", "                 typeof chrome.loadTimes === \"function\",", "ret.isRecentNode = ret.isNode \u0026\u0026 (function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\browser\\bluebird.min.js",
		"LineCount": 31,
		"CharCount": 70044,
		"Comments": ["/* @preserve", "-----------------------------------", "/**", " * bluebird build version 2.10.2", "-----------------------------------", "!function(t){if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],t);else{var e;\"undefined\"!=typeof window?e=window:\"undefined\"!=typeof global?e=global:\"undefined\"!=typeof self\u0026\u0026(e=self),e.Promise=t()}}(function(){var t,e,r;return function n(t,e,r){function i(s,a){if(!e[s]){if(!t[s]){var u=\"function\"==typeof _dereq_\u0026\u0026_dereq_;if(!a\u0026\u0026u)return u(s,!0);if(o)return o(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var r=t[s][1][e];return i(r?r:e)},l,l.exports,n,t,e,r)}return e[s].exports}for(var o=\"function\"==typeof _dereq_\u0026\u0026_dereq_,s=0;s\u003cr.length;s++)i(r[s]);return i}({1:[function(t,e){\"use strict\";e.exports=function(t){function e(t){var e=new r(t),n=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),n}var r=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e){\"use strict\";function r(){this._isTickUsed=!1,this._lateQueue=new c(16),this._normalQueue=new c(16),this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=u.isStatic?u(this.drainQueues):u}function n(t,e,r){this._lateQueue.push(t,e,r),this._queueTick()}function i(t,e,r){this._normalQueue.push(t,e,r),this._queueTick()}function o(t){this._normalQueue._pushOne(t),this._queueTick()}var s;try{throw new Error}catch(a){s=a}var u=t(\"./schedule.js\"),c=t(\"./queue.js\"),l=t(\"./util.js\");r.prototype.disableTrampolineIfNecessary=function(){l.hasDevTools\u0026\u0026(this._trampolineEnabled=!1)},r.prototype.enableTrampoline=function(){this._trampolineEnabled||(this._trampolineEnabled=!0,this._schedule=function(t){setTimeout(t,0)})},r.prototype.haveItemsQueued=function(){return this._normalQueue.length()\u003e0},r.prototype.throwLater=function(t,e){if(1===arguments.length\u0026\u0026(e=t,t=function(){throw e}),\"undefined\"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(r){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")}},l.hasDevTools?(u.isStatic\u0026\u0026(u=function(t){setTimeout(t,0)}),r.prototype.invokeLater=function(t,e,r){this._trampolineEnabled?n.call(this,t,e,r):this._schedule(function(){setTimeout(function(){t.call(e,r)},100)})},r.prototype.invoke=function(t,e,r){this._trampolineEnabled?i.call(this,t,e,r):this._schedule(function(){t.call(e,r)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?o.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=n,r.prototype.invoke=i,r.prototype.settlePromises=o),r.prototype.invokeFirst=function(t,e,r){this._normalQueue.unshift(t,e,r),this._queueTick()},r.prototype._drainQueue=function(t){for(;t.length()\u003e0;){var e=t.shift();if(\"function\"==typeof e){var r=t.shift(),n=t.shift();e.call(r,n)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=new r,e.exports.firstLineError=s},{\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(t,e){\"use strict\";e.exports=function(t,e,r){var n=function(t,e){this._reject(e)},i=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(n,n,null,this,t)},o=function(t,e){this._isPending()\u0026\u0026this._resolveCallback(e.target)},s=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(n){var a=r(n),u=new t(e);u._propagateFrom(this,1);var c=this._target();if(u._setBoundTo(a),a instanceof t){var l={promiseRejectionQueued:!1,promise:u,target:c,bindingPromise:a};c._then(e,i,u._progress,u,l),a._then(o,s,u._progress,u,l)}else u._resolveCallback(c);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=131072|this._bitField,this._boundTo=t):this._bitField=-131073\u0026this._bitField},t.prototype._isBound=function(){return 131072===(131072\u0026this._bitField)},t.bind=function(n,i){var o=r(n),s=new t(e);return s._setBoundTo(o),o instanceof t?o._then(function(){s._resolveCallback(i)},s._reject,s._progress,s,null):s._resolveCallback(i),s}}},{}],4:[function(t,e){\"use strict\";function r(){try{Promise===i\u0026\u0026(Promise=n)}catch(t){}return i}var n;\"undefined\"!=typeof Promise\u0026\u0026(n=Promise);var i=t(\"./promise.js\")();i.noConflict=r,e.exports=i},{\"./promise.js\":23}],5:[function(t,e){\"use strict\";var r=Object.create;if(r){var n=r(null),i=r(null);n[\" size\"]=i[\" size\"]=0}e.exports=function(e){function r(t,r){var n;if(null!=t\u0026\u0026(n=t[r]),\"function\"!=typeof n){var i=\"Object \"+a.classString(t)+\" has no method '\"+a.toString(r)+\"'\";throw new e.TypeError(i)}return n}function n(t){var e=this.pop(),n=r(t,e);return n.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0\u003ee\u0026\u0026(e=Math.max(0,e+t.length)),t[e]}{var s,a=t(\"./util.js\"),u=a.canEvaluate;a.isIdentifier}e.prototype.call=function(t){for(var e=arguments.length,r=new Array(e-1),i=1;e\u003ei;++i)r[i-1]=arguments[i];return r.push(t),this._then(n,void 0,void 0,r,void 0)},e.prototype.get=function(t){var e,r=\"number\"==typeof t;if(r)e=o;else if(u){var n=s(t);e=null!==n?n:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],6:[function(t,e){\"use strict\";e.exports=function(e){var r=t(\"./errors.js\"),n=t(\"./async.js\"),i=r.CancellationError;e.prototype._cancel=function(t){if(!this.isCancellable())return this;for(var e,r=this;void 0!==(e=r._cancellationParent)\u0026\u0026e.isCancellable();)r=e;this._unsetCancellable(),r._target()._rejectCallback(t,!1,!0)},e.prototype.cancel=function(t){return this.isCancellable()?(void 0===t\u0026\u0026(t=new i),n.invokeLater(this._cancel,this,t),this):this},e.prototype.cancellable=function(){return this._cancellable()?this:(n.enableTrampoline(),this._setCancellable(),this._cancellationParent=void 0,this)},e.prototype.uncancellable=function(){var t=this.then();return t._unsetCancellable(),t},e.prototype.fork=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);return n._setCancellable(),n._cancellationParent=void 0,n}}},{\"./async.js\":2,\"./errors.js\":13}],7:[function(t,e){\"use strict\";e.exports=function(){function e(t){this._parent=t;var r=this._length=1+(void 0===t?0:t._length);j(this,e),r\u003e32\u0026\u0026this.uncycle()}function r(t,e){for(var r=0;r\u003ce.length-1;++r)e[r].push(\"From previous event:\"),e[r]=e[r].join(\"\\n\");return r\u003ce.length\u0026\u0026(e[r]=e[r].join(\"\\n\")),t+\"\\n\"+e.join(\"\\n\")}function n(t){for(var e=0;e\u003ct.length;++e)(0===t[e].length||e+1\u003ct.length\u0026\u0026t[e][0]===t[e+1][0])\u0026\u0026(t.splice(e,1),e--)}function i(t){for(var e=t[0],r=1;r\u003ct.length;++r){for(var n=t[r],i=e.length-1,o=e[i],s=-1,a=n.length-1;a\u003e=0;--a)if(n[a]===o){s=a;break}for(var a=s;a\u003e=0;--a){var u=n[a];if(e[i]!==u)break;e.pop(),i--}e=n}}function o(t){for(var e=[],r=0;r\u003ct.length;++r){var n=t[r],i=_.test(n)||\"    (No stack trace)\"===n,o=i\u0026\u0026y(n);i\u0026\u0026!o\u0026\u0026(v\u0026\u0026\" \"!==n.charAt(0)\u0026\u0026(n=\"    \"+n),e.push(n))}return e}function s(t){for(var e=t.stack.replace(/\\s+$/g,\"\").split(\"\\n\"),r=0;r\u003ce.length;++r){var n=e[r];if(\"    (No stack trace)\"===n||_.test(n))break}return r\u003e0\u0026\u0026(e=e.slice(r)),e}function a(t){var e;if(\"function\"==typeof t)e=\"[function \"+(t.name||\"anonymous\")+\"]\";else{e=t.toString();var r=/\\[object [a-zA-Z0-9$_]+\\]/;if(r.test(e))try{var n=JSON.stringify(t);e=n}catch(i){}0===e.length\u0026\u0026(e=\"(empty array)\")}return\"(\u003c\"+u(e)+\"\u003e, no stack trace)\"}function u(t){var e=41;return t.length\u003ce?t:t.substr(0,e-3)+\"...\"}function c(t){var e=t.match(g);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}var l,h=t(\"./async.js\"),p=t(\"./util.js\"),f=/[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo|instrumented)/,_=null,d=null,v=!1;p.inherits(e,Error),e.prototype.uncycle=function(){var t=this._length;if(!(2\u003et)){for(var e=[],r={},n=0,i=this;void 0!==i;++n)e.push(i),i=i._parent;t=this._length=n;for(var n=t-1;n\u003e=0;--n){var o=e[n].stack;void 0===r[o]\u0026\u0026(r[o]=n)}for(var n=0;t\u003en;++n){var s=e[n].stack,a=r[s];if(void 0!==a\u0026\u0026a!==n){a\u003e0\u0026\u0026(e[a-1]._parent=void 0,e[a-1]._length=1),e[n]._parent=void 0,e[n]._length=1;var u=n\u003e0?e[n-1]:this;t-1\u003ea?(u._parent=e[a+1],u._parent.uncycle(),u._length=u._parent._length+1):(u._parent=void 0,u._length=1);for(var c=u._length+1,l=n-2;l\u003e=0;--l)e[l]._length=c,c++;return}}}},e.prototype.parent=function(){return this._parent},e.prototype.hasParent=function(){return void 0!==this._parent},e.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var s=e.parseStackAndMessage(t),a=s.message,u=[s.stack],c=this;void 0!==c;)u.push(o(c.stack.split(\"\\n\"))),c=c._parent;i(u),n(u),p.notEnumerableProp(t,\"stack\",r(a,u)),p.notEnumerableProp(t,\"__stackCleaned__\",!0)}},e.parseStackAndMessage=function(t){var e=t.stack,r=t.toString();return e=\"string\"==typeof e\u0026\u0026e.length\u003e0?s(t):[\"    (No stack trace)\"],{message:r,stack:o(e)}},e.formatAndLogError=function(t,e){if(\"undefined\"!=typeof console){var r;if(\"object\"==typeof t||\"function\"==typeof t){var n=t.stack;r=e+d(n,t)}else r=e+String(t);\"function\"==typeof l?l(r):(\"function\"==typeof console.log||\"object\"==typeof console.log)\u0026\u0026console.log(r)}},e.unhandledRejection=function(t){e.formatAndLogError(t,\"^--- With additional stack trace: \")},e.isSupported=function(){return\"function\"==typeof j},e.fireRejectionEvent=function(t,r,n,i){var o=!1;try{\"function\"==typeof r\u0026\u0026(o=!0,\"rejectionHandled\"===t?r(i):r(n,i))}catch(s){h.throwLater(s)}var a=!1;try{a=b(t,n,i)}catch(s){a=!0,h.throwLater(s)}var u=!1;if(m)try{u=m(t.toLowerCase(),{reason:n,promise:i})}catch(s){u=!0,h.throwLater(s)}a||o||u||\"unhandledRejection\"!==t||e.formatAndLogError(n,\"Unhandled rejection \")};var y=function(){return!1},g=/[\\/\u003c\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;e.setBounds=function(t,r){if(e.isSupported()){for(var n,i,o=t.stack.split(\"\\n\"),s=r.stack.split(\"\\n\"),a=-1,u=-1,l=0;l\u003co.length;++l){var h=c(o[l]);if(h){n=h.fileName,a=h.line;break}}for(var l=0;l\u003cs.length;++l){var h=c(s[l]);if(h){i=h.fileName,u=h.line;break}}0\u003ea||0\u003eu||!n||!i||n!==i||a\u003e=u||(y=function(t){if(f.test(t))return!0;var e=c(t);return e\u0026\u0026e.fileName===n\u0026\u0026a\u003c=e.line\u0026\u0026e.line\u003c=u?!0:!1})}};var m,j=function(){var t=/^\\s*at\\s*/,e=function(t,e){return\"string\"==typeof t?t:void 0!==e.name\u0026\u0026void 0!==e.message?e.toString():a(e)};if(\"number\"==typeof Error.stackTraceLimit\u0026\u0026\"function\"==typeof Error.captureStackTrace){Error.stackTraceLimit=Error.stackTraceLimit+6,_=t,d=e;var r=Error.captureStackTrace;return y=function(t){return f.test(t)},function(t,e){Error.stackTraceLimit=Error.stackTraceLimit+6,r(t,e),Error.stackTraceLimit=Error.stackTraceLimit-6}}var n=new Error;if(\"string\"==typeof n.stack\u0026\u0026n.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\")\u003e=0)return _=/@/,d=e,v=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i=\"stack\"in o}return\"stack\"in n||!i||\"number\"!=typeof Error.stackTraceLimit?(d=function(t,e){return\"string\"==typeof t?t:\"object\"!=typeof e\u0026\u0026\"function\"!=typeof e||void 0===e.name||void 0===e.message?a(e):e.toString()},null):(_=t,d=e,function(t){Error.stackTraceLimit=Error.stackTraceLimit+6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit=Error.stackTraceLimit-6})}([]),b=function(){if(p.isNode)return function(t,e,r){return\"rejectionHandled\"===t?process.emit(t,r):process.emit(t,e,r)};var t=!1,e=!0;try{var r=new self.CustomEvent(\"test\");t=r instanceof CustomEvent}catch(n){}if(!t)try{var i=document.createEvent(\"CustomEvent\");i.initCustomEvent(\"testingtheevent\",!1,!0,{}),self.dispatchEvent(i)}catch(n){e=!1}e\u0026\u0026(m=function(e,r){var n;return t?n=new self.CustomEvent(e,{detail:r,bubbles:!1,cancelable:!0}):self.dispatchEvent\u0026\u0026(n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,!1,!0,r)),n?!self.dispatchEvent(n):!1});var o={};return o.unhandledRejection=\"onunhandledRejection\".toLowerCase(),o.rejectionHandled=\"onrejectionHandled\".toLowerCase(),function(t,e,r){var n=o[t],i=self[n];return i?(\"rejectionHandled\"===t?i.call(self,r):i.call(self,e,r),!0):!1}}();return\"undefined\"!=typeof console\u0026\u0026\"undefined\"!=typeof console.warn\u0026\u0026(l=function(t){console.warn(t)},p.isNode\u0026\u0026process.stderr.isTTY?l=function(t){process.stderr.write(\"\u001b[31m\"+t+\"\u001b[39m\\n\")}:p.isNode||\"string\"!=typeof(new Error).stack||(l=function(t){console.warn(\"%c\"+t,\"color: red\")})),e}},{\"./async.js\":2,\"./util.js\":38}],8:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e,r){this._instances=t,this._callback=e,this._promise=r}function n(t,e){var r={},n=s(t).call(r,e);if(n===a)return n;var i=u(r);return i.length?(a.e=new c(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"),a):n}var i=t(\"./util.js\"),o=t(\"./errors.js\"),s=i.tryCatch,a=i.errorObj,u=t(\"./es5.js\").keys,c=o.TypeError;return r.prototype.doFilter=function(t){for(var r=this._callback,i=this._promise,o=i._boundValue(),u=0,c=this._instances.length;c\u003eu;++u){var l=this._instances[u],h=l===Error||null!=l\u0026\u0026l.prototype instanceof Error;if(h\u0026\u0026t instanceof l){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}if(\"function\"==typeof l\u0026\u0026!h){var f=n(l,t);if(f===a){t=a.e;break}if(f){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}}}return e.e=t,e},r}},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(t,e){\"use strict\";e.exports=function(t,e,r){function n(){this._trace=new e(o())}function i(){return r()?new n:void 0}function o(){var t=s.length-1;return t\u003e=0?s[t]:void 0}var s=[];return n.prototype._pushContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.push(this._trace)},n.prototype._popContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.pop()},t.prototype._peekContext=o,t.prototype._pushContext=n.prototype._pushContext,t.prototype._popContext=n.prototype._popContext,i}},{}],10:[function(t,e){\"use strict\";e.exports=function(e,r){var n,i,o=e._getDomain,s=t(\"./async.js\"),a=t(\"./errors.js\").Warning,u=t(\"./util.js\"),c=u.canAttachTrace,l=!1||u.isNode\u0026\u0026(!!process.env.BLUEBIRD_DEBUG||\"development\"===process.env.NODE_ENV);return u.isNode\u0026\u00260==process.env.BLUEBIRD_DEBUG\u0026\u0026(l=!1),l\u0026\u0026s.disableTrampolineIfNecessary(),e.prototype._ignoreRejections=function(){this._unsetRejectionIsUnhandled(),this._bitField=16777216|this._bitField},e.prototype._ensurePossibleRejectionHandled=function(){0===(16777216\u0026this._bitField)\u0026\u0026(this._setRejectionIsUnhandled(),s.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){r.fireRejectionEvent(\"rejectionHandled\",n,void 0,this)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._getCarriedStackTrace()||this._settledValue;this._setUnhandledRejectionIsNotified(),r.fireRejectionEvent(\"unhandledRejection\",i,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=524288|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-524289\u0026this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(524288\u0026this._bitField)\u003e0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=2097152|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-2097153\u0026this._bitField,this._isUnhandledRejectionNotified()\u0026\u0026(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(2097152\u0026this._bitField)\u003e0},e.prototype._setCarriedStackTrace=function(t){this._bitField=1048576|this._bitField,this._fulfillmentHandler0=t},e.prototype._isCarryingStackTrace=function(){return(1048576\u0026this._bitField)\u003e0},e.prototype._getCarriedStackTrace=function(){return this._isCarryingStackTrace()?this._fulfillmentHandler0:void 0},e.prototype._captureStackTrace=function(){return l\u0026\u0026(this._trace=new r(this._peekContext())),this},e.prototype._attachExtraTrace=function(t,e){if(l\u0026\u0026c(t)){var n=this._trace;if(void 0!==n\u0026\u0026e\u0026\u0026(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var i=r.parseStackAndMessage(t);u.notEnumerableProp(t,\"stack\",i.message+\"\\n\"+i.stack.join(\"\\n\")),u.notEnumerableProp(t,\"__stackCleaned__\",!0)}}},e.prototype._warn=function(t){var e=new a(t),n=this._peekContext();if(n)n.attachExtraTrace(e);else{var i=r.parseStackAndMessage(e);e.stack=i.message+\"\\n\"+i.stack.join(\"\\n\")}r.formatAndLogError(e,\"\")},e.onPossiblyUnhandledRejection=function(t){var e=o();i=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.onUnhandledRejectionHandled=function(t){var e=o();n=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.longStackTraces=function(){if(s.haveItemsQueued()\u0026\u0026l===!1)throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/DT1qyG\\n\");l=r.isSupported(),l\u0026\u0026s.disableTrampolineIfNecessary()},e.hasLongStackTraces=function(){return l\u0026\u0026r.isSupported()},r.isSupported()||(e.longStackTraces=function(){},l=!1),function(){return l}}},{\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(t,e){\"use strict\";var r=t(\"./util.js\"),n=r.isPrimitive;e.exports=function(t){var e=function(){return this},r=function(){throw this},i=function(){},o=function(){throw void 0},s=function(t,e){return 1===e?function(){throw t}:2===e?function(){return t}:void 0};t.prototype[\"return\"]=t.prototype.thenReturn=function(r){return void 0===r?this.then(i):n(r)?this._then(s(r,2),void 0,void 0,void 0,void 0):(r instanceof t\u0026\u0026r._ignoreRejections(),this._then(e,void 0,void 0,r,void 0))},t.prototype[\"throw\"]=t.prototype.thenThrow=function(t){return void 0===t?this.then(o):n(t)?this._then(s(t,1),void 0,void 0,void 0,void 0):this._then(r,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],12:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.reduce;t.prototype.each=function(t){return r(this,t,null,e)},t.each=function(t,n){return r(t,n,null,e)}}},{}],13:[function(t,e){\"use strict\";function r(t,e){function r(n){return this instanceof r?(l(this,\"message\",\"string\"==typeof n?n:e),l(this,\"name\",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new r(n)}return c(r,Error),r}function n(t){return this instanceof n?(l(this,\"name\",\"OperationalError\"),l(this,\"message\",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(l(this,\"message\",t.message),l(this,\"stack\",t.stack)):Error.captureStackTrace\u0026\u0026Error.captureStackTrace(this,this.constructor))):new n(t)}var i,o,s=t(\"./es5.js\"),a=s.freeze,u=t(\"./util.js\"),c=u.inherits,l=u.notEnumerableProp,h=r(\"Warning\",\"warning\"),p=r(\"CancellationError\",\"cancellation error\"),f=r(\"TimeoutError\",\"timeout error\"),_=r(\"AggregateError\",\"aggregate error\");try{i=TypeError,o=RangeError}catch(d){i=r(\"TypeError\",\"type error\"),o=r(\"RangeError\",\"range error\")}for(var v=\"join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse\".split(\" \"),y=0;y\u003cv.length;++y)\"function\"==typeof Array.prototype[v[y]]\u0026\u0026(_.prototype[v[y]]=Array.prototype[v[y]]);s.defineProperty(_.prototype,\"length\",{value:0,configurable:!1,writable:!0,enumerable:!0}),_.prototype.isOperational=!0;var g=0;_.prototype.toString=function(){var t=Array(4*g+1).join(\" \"),e=\"\\n\"+t+\"AggregateError of:\\n\";g++,t=Array(4*g+1).join(\" \");for(var r=0;r\u003cthis.length;++r){for(var n=this[r]===this?\"[Circular AggregateError]\":this[r]+\"\",i=n.split(\"\\n\"),o=0;o\u003ci.length;++o)i[o]=t+i[o];n=i.join(\"\\n\"),e+=n+\"\\n\"}return g--,e},c(n,Error);var m=Error.__BluebirdErrorTypes__;m||(m=a({CancellationError:p,TimeoutError:f,OperationalError:n,RejectionError:n,AggregateError:_}),l(Error,\"__BluebirdErrorTypes__\",m)),e.exports={Error:Error,TypeError:i,RangeError:o,CancellationError:m.CancellationError,OperationalError:m.OperationalError,TimeoutError:m.TimeoutError,AggregateError:m.AggregateError,Warning:h}},{\"./es5.js\":14,\"./util.js\":38}],14:[function(t,e){var r=function(){\"use strict\";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var r=Object.getOwnPropertyDescriptor(t,e);return!(r\u0026\u0026!r.writable\u0026\u0026!r.set)}};else{var n={}.hasOwnProperty,i={}.toString,o={}.constructor.prototype,s=function(t){var e=[];for(var r in t)n.call(t,r)\u0026\u0026e.push(r);return e},a=function(t,e){return{value:t[e]}},u=function(t,e,r){return t[e]=r.value,t},c=function(t){return t},l=function(t){try{return Object(t).constructor.prototype}catch(e){return o}},h=function(t){try{return\"[object Array]\"===i.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:s,names:s,defineProperty:u,getDescriptor:a,freeze:c,getPrototypeOf:l,isES5:r,propertyIsWritable:function(){return!0}}}},{}],15:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.map;t.prototype.filter=function(t,n){return r(this,t,n,e)},t.filter=function(t,n,i){return r(t,n,i,e)}}},{}],16:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(){return this}function o(){throw this}function s(t){return function(){return t}}function a(t){return function(){throw t}}function u(t,e,r){var n;return n=p(e)?r?s(e):a(e):r?i:o,t._then(n,f,void 0,e,void 0)}function c(t){var i=this.promise,o=this.handler,s=i._isBound()?o.call(i._boundValue()):o();if(void 0!==s){var a=n(s,i);if(a instanceof e)return a=a._target(),u(a,t,i.isFulfilled())}return i.isRejected()?(r.e=t,r):t}function l(t){var r=this.promise,i=this.handler,o=r._isBound()?i.call(r._boundValue(),t):i(t);if(void 0!==o){var s=n(o,r);if(s instanceof e)return s=s._target(),u(s,t,!0)}return t}var h=t(\"./util.js\"),p=h.isPrimitive,f=h.thrower;e.prototype._passThroughHandler=function(t,e){if(\"function\"!=typeof t)return this.then();var r={promise:this,handler:t};return this._then(e?c:l,e?c:void 0,void 0,r,void 0)},e.prototype.lastly=e.prototype[\"finally\"]=function(t){return this._passThroughHandler(t,!0)},e.prototype.tap=function(t){return this._passThroughHandler(t,!1)}}},{\"./util.js\":38}],17:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,r,n){for(var o=0;o\u003cr.length;++o){n._pushContext();var s=h(r[o])(t);if(n._popContext(),s===l){n._pushContext();var a=e.reject(l.e);return n._popContext(),a}var u=i(s,n);if(u instanceof e)return u}return null}function s(t,r,i,o){var s=this._promise=new e(n);s._captureStackTrace(),this._stack=o,this._generatorFunction=t,this._receiver=r,this._generator=void 0,this._yieldHandlers=\"function\"==typeof i?[i].concat(p):p}var a=t(\"./errors.js\"),u=a.TypeError,c=t(\"./util.js\"),l=c.errorObj,h=c.tryCatch,p=[];s.prototype.promise=function(){return this._promise},s.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._next(void 0)},s.prototype._continue=function(t){if(t===l)return this._promise._rejectCallback(t.e,!1,!0);var r=t.value;if(t.done===!0)this._promise._resolveCallback(r);else{var n=i(r,this._promise);if(!(n instanceof e)\u0026\u0026(n=o(n,this._yieldHandlers,this._promise),null===n))return void this._throw(new u(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/4Y4pDk\\n\\n\".replace(\"%s\",r)+\"From coroutine:\\n\"+this._stack.split(\"\\n\").slice(1,-7).join(\"\\n\")));n._then(this._next,this._throw,void 0,this,null)}},s.prototype._throw=function(t){this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator[\"throw\"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},s.prototype._next=function(t){this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},e.coroutine=function(t,e){if(\"function\"!=typeof t)throw new u(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var r=Object(e).yieldHandler,n=s,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new n(void 0,void 0,r,i);return o._generator=e,o._next(void 0),o.promise()}},e.coroutine.addYieldHandler=function(t){if(\"function\"!=typeof t)throw new u(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");p.push(t)},e.spawn=function(t){if(\"function\"!=typeof t)return r(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var n=new s(t,this),i=n.promise();return n._run(e.spawn),i}}},{\"./errors.js\":13,\"./util.js\":38}],18:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){{var o=t(\"./util.js\");o.canEvaluate,o.tryCatch,o.errorObj}e.join=function(){var t,e=arguments.length-1;if(e\u003e0\u0026\u0026\"function\"==typeof arguments[e]){t=arguments[e];var n}for(var i=arguments.length,o=new Array(i),s=0;i\u003es;++s)o[s]=arguments[s];t\u0026\u0026o.pop();var n=new r(o).promise();return void 0!==t?n.spread(t):n}}},{\"./util.js\":38}],19:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,e,r,n){this.constructor$(t),this._promise._captureStackTrace();var i=c();this._callback=null===i?e:i.bind(e),this._preservedValues=n===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=r\u003e=1?[]:d,l.invoke(a,this,void 0)}function a(){this._init$(void 0,-2)}function u(t,e,r,n){var i=\"object\"==typeof r\u0026\u0026null!==r?r.concurrency:0;return i=\"number\"==typeof i\u0026\u0026isFinite(i)\u0026\u0026i\u003e=1?i:0,new s(t,e,i,n)}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj,_={},d=[];h.inherits(s,r),s.prototype._init=function(){},s.prototype._promiseFulfilled=function(t,r){var n=this._values,o=this.length(),s=this._preservedValues,a=this._limit;if(n[r]===_){if(n[r]=t,a\u003e=1\u0026\u0026(this._inFlight--,this._drainQueue(),this._isResolved()))return}else{if(a\u003e=1\u0026\u0026this._inFlight\u003e=a)return n[r]=t,void this._queue.push(r);null!==s\u0026\u0026(s[r]=t);var u=this._callback,c=this._promise._boundValue();this._promise._pushContext();var l=p(u).call(c,t,r,o);if(this._promise._popContext(),l===f)return this._reject(l.e);var h=i(l,this._promise);if(h instanceof e){if(h=h._target(),h._isPending())return a\u003e=1\u0026\u0026this._inFlight++,n[r]=_,h._proxyPromiseArray(this,r);if(!h._isFulfilled())return this._reject(h._reason());l=h._value()}n[r]=l}var d=++this._totalResolved;d\u003e=o\u0026\u0026(null!==s?this._filter(n,s):this._resolve(n))},s.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,r=this._values;t.length\u003e0\u0026\u0026this._inFlight\u003ce;){if(this._isResolved())return;var n=t.pop();this._promiseFulfilled(r[n],n)}},s.prototype._filter=function(t,e){for(var r=e.length,n=new Array(r),i=0,o=0;r\u003eo;++o)t[o]\u0026\u0026(n[i++]=e[o]);n.length=i,this._resolve(n)},s.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return\"function\"!=typeof t?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(this,t,e,null).promise()},e.map=function(t,e,r,i){return\"function\"!=typeof e?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(t,e,r,i).promise()}}},{\"./async.js\":2,\"./util.js\":38}],20:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){var o=t(\"./util.js\"),s=o.tryCatch;e.method=function(t){if(\"function\"!=typeof t)throw new e.TypeError(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");return function(){var n=new e(r);n._captureStackTrace(),n._pushContext();var i=s(t).apply(this,arguments);return n._popContext(),n._resolveFromSyncValue(i),n}},e.attempt=e[\"try\"]=function(t,n,a){if(\"function\"!=typeof t)return i(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var u=new e(r);u._captureStackTrace(),u._pushContext();var c=o.isArray(n)?s(t).apply(a,n):s(t).call(a,n);return u._popContext(),u._resolveFromSyncValue(c),u},e.prototype._resolveFromSyncValue=function(t){t===o.errorObj?this._rejectCallback(t.e,!1,!0):this._resolveCallback(t,!0)}}},{\"./util.js\":38}],21:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e){var r=this;if(!o.isArray(t))return n.call(r,t,e);var i=a(e).apply(r._boundValue(),[null].concat(t));i===u\u0026\u0026s.throwLater(i.e)}function n(t,e){var r=this,n=r._boundValue(),i=void 0===t?a(e).call(n,null):a(e).call(n,null,t);i===u\u0026\u0026s.throwLater(i.e)}function i(t,e){var r=this;if(!t){var n=r._target(),i=n._getCarriedStackTrace();i.cause=t,t=i}var o=a(e).call(r._boundValue(),t);o===u\u0026\u0026s.throwLater(o.e)}var o=t(\"./util.js\"),s=t(\"./async.js\"),a=o.tryCatch,u=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if(\"function\"==typeof t){var o=n;void 0!==e\u0026\u0026Object(e).spread\u0026\u0026(o=r),this._then(o,i,void 0,this,t)}return this}}},{\"./async.js\":2,\"./util.js\":38}],22:[function(t,e){\"use strict\";e.exports=function(e,r){var n=t(\"./util.js\"),i=t(\"./async.js\"),o=n.tryCatch,s=n.errorObj;e.prototype.progressed=function(t){return this._then(void 0,void 0,t,void 0,void 0)},e.prototype._progress=function(t){this._isFollowingOrFulfilledOrRejected()||this._target()._progressUnchecked(t)},e.prototype._progressHandlerAt=function(t){return 0===t?this._progressHandler0:this[(t\u003c\u003c2)+t-5+2]},e.prototype._doProgressWith=function(t){var r=t.value,i=t.handler,a=t.promise,u=t.receiver,c=o(i).call(u,r);if(c===s){if(null!=c.e\u0026\u0026\"StopProgressPropagation\"!==c.e.name){var l=n.canAttachTrace(c.e)?c.e:new Error(n.toString(c.e));a._attachExtraTrace(l),a._progress(c.e)}}else c instanceof e?c._then(a._progress,null,null,a,void 0):a._progress(c)},e.prototype._progressUnchecked=function(t){for(var n=this._length(),o=this._progress,s=0;n\u003es;s++){var a=this._progressHandlerAt(s),u=this._promiseAt(s);if(u instanceof e)\"function\"==typeof a?i.invoke(this._doProgressWith,this,{handler:a,promise:u,receiver:this._receiverAt(s),value:t}):i.invoke(o,u,t);else{var c=this._receiverAt(s);\"function\"==typeof a?a.call(c,t,u):c instanceof r\u0026\u0026!c._isResolved()\u0026\u0026c._promiseProgressed(t,u)}}}}},{\"./async.js\":2,\"./util.js\":38}],23:[function(t,e){\"use strict\";e.exports=function(){function e(t){if(\"function\"!=typeof t)throw new h(\"the promise constructor requires a resolver function\\n\\n    See http://goo.gl/EC22Yn\\n\");if(this.constructor!==e)throw new h(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/KsIlge\\n\");this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._progressHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._settledValue=void 0,t!==p\u0026\u0026this._resolveFromResolver(t)}function r(t){var r=new e(p);r._fulfillmentHandler0=t,r._rejectionHandler0=t,r._progressHandler0=t,r._promise0=t,r._receiver0=t,r._settledValue=t}var n,i=function(){return new h(\"circular promise resolution chain\\n\\n    See http://goo.gl/LhFpo0\\n\")},o=function(){return new e.PromiseInspection(this._target())},s=function(t){return e.reject(new h(t))},a=t(\"./util.js\");n=a.isNode?function(){var t=process.domain;return void 0===t\u0026\u0026(t=null),t}:function(){return null},a.notEnumerableProp(e,\"_getDomain\",n);var u={},c=t(\"./async.js\"),l=t(\"./errors.js\"),h=e.TypeError=l.TypeError;e.RangeError=l.RangeError,e.CancellationError=l.CancellationError,e.TimeoutError=l.TimeoutError,e.OperationalError=l.OperationalError,e.RejectionError=l.OperationalError,e.AggregateError=l.AggregateError;var p=function(){},f={},_={e:null},d=t(\"./thenables.js\")(e,p),v=t(\"./promise_array.js\")(e,p,d,s),y=t(\"./captured_trace.js\")(),g=t(\"./debuggability.js\")(e,y),m=t(\"./context.js\")(e,y,g),j=t(\"./catch_filter.js\")(_),b=t(\"./promise_resolver.js\"),w=b._nodebackForPromise,k=a.errorObj,E=a.tryCatch;return e.prototype.toString=function(){return\"[object Promise]\"},e.prototype.caught=e.prototype[\"catch\"]=function(t){var r=arguments.length;if(r\u003e1){var n,i=new Array(r-1),o=0;for(n=0;r-1\u003en;++n){var s=arguments[n];if(\"function\"!=typeof s)return e.reject(new h(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"));i[o++]=s}i.length=o,t=arguments[n];var a=new j(i,t,this);return this._then(void 0,a.doFilter,void 0,a,void 0)}return this._then(void 0,t,void 0,void 0,void 0)},e.prototype.reflect=function(){return this._then(o,o,void 0,this,void 0)},e.prototype.then=function(t,e,r){if(g()\u0026\u0026arguments.length\u003e0\u0026\u0026\"function\"!=typeof t\u0026\u0026\"function\"!=typeof e){var n=\".then() only accepts functions but was passed: \"+a.classString(t);arguments.length\u003e1\u0026\u0026(n+=\", \"+a.classString(e)),this._warn(n)}return this._then(t,e,r,void 0,void 0)},e.prototype.done=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);", "n._setIsFinal()},e.prototype.spread=function(t,e){return this.all()._then(t,e,void 0,f,void 0)},e.prototype.isCancellable=function(){return!this.isResolved()\u0026\u0026this._cancellable()},e.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()\u0026\u0026(t.rejectionReason=this.reason(),t.isRejected=!0),t},e.prototype.all=function(){return new v(this).promise()},e.prototype.error=function(t){return this.caught(a.originatesFromRejection,t)},e.is=function(t){return t instanceof e},e.fromNode=function(t){var r=new e(p),n=E(t)(w(r));return n===k\u0026\u0026r._rejectCallback(n.e,!0,!0),r},e.all=function(t){return new v(t).promise()},e.defer=e.pending=function(){var t=new e(p);return new b(t)},e.cast=function(t){var r=d(t);if(!(r instanceof e)){var n=r;r=new e(p),r._fulfillUnchecked(n)}return r},e.resolve=e.fulfilled=e.cast,e.reject=e.rejected=function(t){var r=new e(p);return r._captureStackTrace(),r._rejectCallback(t,!0),r},e.setScheduler=function(t){if(\"function\"!=typeof t)throw new h(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var e=c._schedule;return c._schedule=t,e},e.prototype._then=function(t,r,i,o,s){var a=void 0!==s,u=a?s:new e(p);a||(u._propagateFrom(this,5),u._captureStackTrace());var l=this._target();l!==this\u0026\u0026(void 0===o\u0026\u0026(o=this._boundTo),a||u._setIsMigrated());var h=l._addCallbacks(t,r,i,u,o,n());return l._isResolved()\u0026\u0026!l._isSettlePromisesQueued()\u0026\u0026c.invoke(l._settlePromiseAtPostResolution,l,h),u},e.prototype._settlePromiseAtPostResolution=function(t){this._isRejectionUnhandled()\u0026\u0026this._unsetRejectionIsUnhandled(),this._settlePromiseAt(t)},e.prototype._length=function(){return 131071\u0026this._bitField},e.prototype._isFollowingOrFulfilledOrRejected=function(){return(939524096\u0026this._bitField)\u003e0},e.prototype._isFollowing=function(){return 536870912===(536870912\u0026this._bitField)},e.prototype._setLength=function(t){this._bitField=-131072\u0026this._bitField|131071\u0026t},e.prototype._setFulfilled=function(){this._bitField=268435456|this._bitField},e.prototype._setRejected=function(){this._bitField=134217728|this._bitField},e.prototype._setFollowing=function(){this._bitField=536870912|this._bitField},e.prototype._setIsFinal=function(){this._bitField=33554432|this._bitField},e.prototype._isFinal=function(){return(33554432\u0026this._bitField)\u003e0},e.prototype._cancellable=function(){return(67108864\u0026this._bitField)\u003e0},e.prototype._setCancellable=function(){this._bitField=67108864|this._bitField},e.prototype._unsetCancellable=function(){this._bitField=-67108865\u0026this._bitField},e.prototype._setIsMigrated=function(){this._bitField=4194304|this._bitField},e.prototype._unsetIsMigrated=function(){this._bitField=-4194305\u0026this._bitField},e.prototype._isMigrated=function(){return(4194304\u0026this._bitField)\u003e0},e.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[5*t-5+4];return e===u?void 0:void 0===e\u0026\u0026this._isBound()?this._boundValue():e},e.prototype._promiseAt=function(t){return 0===t?this._promise0:this[5*t-5+3]},e.prototype._fulfillmentHandlerAt=function(t){return 0===t?this._fulfillmentHandler0:this[5*t-5+0]},e.prototype._rejectionHandlerAt=function(t){return 0===t?this._rejectionHandler0:this[5*t-5+1]},e.prototype._boundValue=function(){var t=this._boundTo;return void 0!==t\u0026\u0026t instanceof e?t.isFulfilled()?t.value():void 0:t},e.prototype._migrateCallbacks=function(t,r){var n=t._fulfillmentHandlerAt(r),i=t._rejectionHandlerAt(r),o=t._progressHandlerAt(r),s=t._promiseAt(r),a=t._receiverAt(r);s instanceof e\u0026\u0026s._setIsMigrated(),void 0===a\u0026\u0026(a=u),this._addCallbacks(n,i,o,s,a,null)},e.prototype._addCallbacks=function(t,e,r,n,i,o){var s=this._length();if(s\u003e=131066\u0026\u0026(s=0,this._setLength(0)),0===s)this._promise0=n,void 0!==i\u0026\u0026(this._receiver0=i),\"function\"!=typeof t||this._isCarryingStackTrace()||(this._fulfillmentHandler0=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this._rejectionHandler0=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this._progressHandler0=null===o?r:o.bind(r));else{var a=5*s-5;this[a+3]=n,this[a+4]=i,\"function\"==typeof t\u0026\u0026(this[a+0]=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this[a+1]=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this[a+2]=null===o?r:o.bind(r))}return this._setLength(s+1),s},e.prototype._setProxyHandlers=function(t,e){var r=this._length();if(r\u003e=131066\u0026\u0026(r=0,this._setLength(0)),0===r)this._promise0=e,this._receiver0=t;else{var n=5*r-5;this[n+3]=e,this[n+4]=t}this._setLength(r+1)},e.prototype._proxyPromiseArray=function(t,e){this._setProxyHandlers(t,e)},e.prototype._resolveCallback=function(t,r){if(!this._isFollowingOrFulfilledOrRejected()){if(t===this)return this._rejectCallback(i(),!1,!0);var n=d(t,this);if(!(n instanceof e))return this._fulfill(t);var o=1|(r?4:0);this._propagateFrom(n,o);var s=n._target();if(s._isPending()){for(var a=this._length(),u=0;a\u003eu;++u)s._migrateCallbacks(this,u);this._setFollowing(),this._setLength(0),this._setFollowee(s)}else s._isFulfilled()?this._fulfillUnchecked(s._value()):this._rejectUnchecked(s._reason(),s._getCarriedStackTrace())}},e.prototype._rejectCallback=function(t,e,r){r||a.markAsOriginatingFromRejection(t);var n=a.ensureErrorObject(t),i=n===t;this._attachExtraTrace(n,e?i:!1),this._reject(t,i?void 0:n)},e.prototype._resolveFromResolver=function(t){var e=this;this._captureStackTrace(),this._pushContext();var r=!0,n=E(t)(function(t){null!==e\u0026\u0026(e._resolveCallback(t),e=null)},function(t){null!==e\u0026\u0026(e._rejectCallback(t,r),e=null)});r=!1,this._popContext(),void 0!==n\u0026\u0026n===k\u0026\u0026null!==e\u0026\u0026(e._rejectCallback(n.e,!0,!0),e=null)},e.prototype._settlePromiseFromHandler=function(t,e,r,n){if(!n._isRejected()){n._pushContext();var o;if(o=e!==f||this._isRejected()?E(t).call(e,r):E(t).apply(this._boundValue(),r),n._popContext(),o===k||o===n||o===_){var s=o===n?i():o.e;n._rejectCallback(s,!1,!0)}else n._resolveCallback(o)}},e.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},e.prototype._followee=function(){return this._rejectionHandler0},e.prototype._setFollowee=function(t){this._rejectionHandler0=t},e.prototype._cleanValues=function(){this._cancellable()\u0026\u0026(this._cancellationParent=void 0)},e.prototype._propagateFrom=function(t,e){(1\u0026e)\u003e0\u0026\u0026t._cancellable()\u0026\u0026(this._setCancellable(),this._cancellationParent=t),(4\u0026e)\u003e0\u0026\u0026t._isBound()\u0026\u0026this._setBoundTo(t._boundTo)},e.prototype._fulfill=function(t){this._isFollowingOrFulfilledOrRejected()||this._fulfillUnchecked(t)},e.prototype._reject=function(t,e){this._isFollowingOrFulfilledOrRejected()||this._rejectUnchecked(t,e)},e.prototype._settlePromiseAt=function(t){var r=this._promiseAt(t),n=r instanceof e;if(n\u0026\u0026r._isMigrated())return r._unsetIsMigrated(),c.invoke(this._settlePromiseAt,this,t);var i=this._isFulfilled()?this._fulfillmentHandlerAt(t):this._rejectionHandlerAt(t),o=this._isCarryingStackTrace()?this._getCarriedStackTrace():void 0,s=this._settledValue,a=this._receiverAt(t);this._clearCallbackDataAtIndex(t),\"function\"==typeof i?n?this._settlePromiseFromHandler(i,a,s,r):i.call(a,s,r):a instanceof v?a._isResolved()||(this._isFulfilled()?a._promiseFulfilled(s,r):a._promiseRejected(s,r)):n\u0026\u0026(this._isFulfilled()?r._fulfill(s):r._reject(s,o)),t\u003e=4\u0026\u00264===(31\u0026t)\u0026\u0026c.invokeLater(this._setLength,this,0)},e.prototype._clearCallbackDataAtIndex=function(t){if(0===t)this._isCarryingStackTrace()||(this._fulfillmentHandler0=void 0),this._rejectionHandler0=this._progressHandler0=this._receiver0=this._promise0=void 0;else{var e=5*t-5;this[e+3]=this[e+4]=this[e+0]=this[e+1]=this[e+2]=void 0}},e.prototype._isSettlePromisesQueued=function(){return-1073741824===(-1073741824\u0026this._bitField)},e.prototype._setSettlePromisesQueued=function(){this._bitField=-1073741824|this._bitField},e.prototype._unsetSettlePromisesQueued=function(){this._bitField=1073741823\u0026this._bitField},e.prototype._queueSettlePromises=function(){c.settlePromises(this),this._setSettlePromisesQueued()},e.prototype._fulfillUnchecked=function(t){if(t===this){var e=i();return this._attachExtraTrace(e),this._rejectUnchecked(e,void 0)}this._setFulfilled(),this._settledValue=t,this._cleanValues(),this._length()\u003e0\u0026\u0026this._queueSettlePromises()},e.prototype._rejectUncheckedCheckError=function(t){var e=a.ensureErrorObject(t);this._rejectUnchecked(t,e===t?void 0:e)},e.prototype._rejectUnchecked=function(t,e){if(t===this){var r=i();return this._attachExtraTrace(r),this._rejectUnchecked(r)}return this._setRejected(),this._settledValue=t,this._cleanValues(),this._isFinal()?void c.throwLater(function(t){throw\"stack\"in t\u0026\u0026c.invokeFirst(y.unhandledRejection,void 0,t),t},void 0===e?t:e):(void 0!==e\u0026\u0026e!==t\u0026\u0026this._setCarriedStackTrace(e),void(this._length()\u003e0?this._queueSettlePromises():this._ensurePossibleRejectionHandled()))},e.prototype._settlePromises=function(){this._unsetSettlePromisesQueued();for(var t=this._length(),e=0;t\u003ee;e++)this._settlePromiseAt(e)},a.notEnumerableProp(e,\"_makeSelfResolutionError\",i),t(\"./progress.js\")(e,v),t(\"./method.js\")(e,p,d,s),t(\"./bind.js\")(e,p,d),t(\"./finally.js\")(e,_,d),t(\"./direct_resolve.js\")(e),t(\"./synchronous_inspection.js\")(e),t(\"./join.js\")(e,v,d,p),e.Promise=e,t(\"./map.js\")(e,v,s,d,p),t(\"./cancel.js\")(e),t(\"./using.js\")(e,s,d,m),t(\"./generators.js\")(e,s,p,d),t(\"./nodeify.js\")(e),t(\"./call_get.js\")(e),t(\"./props.js\")(e,v,d,s),t(\"./race.js\")(e,p,d,s),t(\"./reduce.js\")(e,v,s,d,p),t(\"./settle.js\")(e,v),t(\"./some.js\")(e,v,s),t(\"./promisify.js\")(e,p),t(\"./any.js\")(e),t(\"./each.js\")(e,p),t(\"./timers.js\")(e,p),t(\"./filter.js\")(e,p),a.toFastProperties(e),a.toFastProperties(e.prototype),r({a:1}),r({b:2}),r({c:3}),r(1),r(function(){}),r(void 0),r(!1),r(new e(p)),y.setBounds(c.firstLineError,a.lastLineError),e}},{\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){switch(t){case-2:return[];case-3:return{}}}function s(t){var n,i=this._promise=new e(r);t instanceof e\u0026\u0026(n=t,i._propagateFrom(n,5)),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var a=t(\"./util.js\"),u=a.isArray;return s.prototype.length=function(){return this._length},s.prototype.promise=function(){return this._promise},s.prototype._init=function c(t,r){var s=n(this._values,this._promise);if(s instanceof e){if(s=s._target(),this._values=s,!s._isFulfilled())return s._isPending()?void s._then(c,this._reject,void 0,this,r):void this._reject(s._reason());if(s=s._value(),!u(s)){var a=new e.TypeError(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");return void this.__hardReject__(a)}}else if(!u(s))return void this._promise._reject(i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\")._reason());if(0===s.length)return void(-5===r?this._resolveEmptyArray():this._resolve(o(r)));var l=this.getActualLength(s.length);this._length=l,this._values=this.shouldCopyValues()?new Array(l):this._values;for(var h=this._promise,p=0;l\u003ep;++p){var f=this._isResolved(),_=n(s[p],h);_ instanceof e?(_=_._target(),f?_._ignoreRejections():_._isPending()?_._proxyPromiseArray(this,p):_._isFulfilled()?this._promiseFulfilled(_._value(),p):this._promiseRejected(_._reason(),p)):f||this._promiseFulfilled(_,p)}},s.prototype._isResolved=function(){return null===this._values},s.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},s.prototype.__hardReject__=s.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1,!0)},s.prototype._promiseProgressed=function(t,e){this._promise._progress({index:e,value:t})},s.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},s.prototype._promiseRejected=function(t){this._totalResolved++,this._reject(t)},s.prototype.shouldCopyValues=function(){return!0},s.prototype.getActualLength=function(t){return t},s}},{\"./util.js\":38}],25:[function(t,e){\"use strict\";function r(t){return t instanceof Error\u0026\u0026p.getPrototypeOf(t)===Error.prototype}function n(t){var e;if(r(t)){e=new l(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=p.keys(t),i=0;i\u003cn.length;++i){var o=n[i];f.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function i(t){return function(e,r){if(null!==t){if(e){var i=n(a(e));t._attachExtraTrace(i),t._reject(i)}else if(arguments.length\u003e2){for(var o=arguments.length,s=new Array(o-1),u=1;o\u003eu;++u)s[u-1]=arguments[u];t._fulfill(s)}else t._fulfill(r);t=null}}}var o,s=t(\"./util.js\"),a=s.maybeWrapAsError,u=t(\"./errors.js\"),c=u.TimeoutError,l=u.OperationalError,h=s.haveGetters,p=t(\"./es5.js\"),f=/^(?:name|message|stack|cause)$/;if(o=h?function(t){this.promise=t}:function(t){this.promise=t,this.asCallback=i(t),this.callback=this.asCallback},h){var _={get:function(){return i(this.promise)}};p.defineProperty(o.prototype,\"asCallback\",_),p.defineProperty(o.prototype,\"callback\",_)}o._nodebackForPromise=i,o.prototype.toString=function(){return\"[object PromiseResolver]\"},o.prototype.resolve=o.prototype.fulfill=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._resolveCallback(t)},o.prototype.reject=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._rejectCallback(t)},o.prototype.progress=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._progress(t)},o.prototype.cancel=function(t){this.promise.cancel(t)},o.prototype.timeout=function(){this.reject(new c(\"timeout\"))},o.prototype.isResolved=function(){return this.promise.isResolved()},o.prototype.toJSON=function(){return this.promise.toJSON()},e.exports=o},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){return!w.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,r){var n=f.getDataPropertyOrDefault(t,e+r,j);return n?i(n):!1}function s(t,e,r){for(var n=0;n\u003ct.length;n+=2){var i=t[n];if(r.test(i))for(var o=i.replace(r,\"\"),s=0;s\u003ct.length;s+=2)if(t[s]===o)throw new g(\"Cannot promisify an API that has normal methods with '%s'-suffix\\n\\n    See http://goo.gl/iWrZbw\\n\".replace(\"%s\",e))}}function a(t,e,r,n){for(var a=f.inheritedDataKeys(t),u=[],c=0;c\u003ca.length;++c){var l=a[c],h=t[l],p=n===k?!0:k(l,h,t);\"function\"!=typeof h||i(h)||o(t,l,e)||!n(l,h,t,p)||u.push(l,h)}return s(u,e,r),u}function u(t,n,i,o){function s(){var i=n;n===p\u0026\u0026(i=this);var o=new e(r);o._captureStackTrace();var s=\"string\"==typeof u\u0026\u0026this!==a?this[u]:t,c=_(o);try{s.apply(i,d(arguments,c))}catch(l){o._rejectCallback(v(l),!0,!0)}return o}var a=function(){return this}(),u=t;return\"string\"==typeof u\u0026\u0026(t=o),f.notEnumerableProp(s,\"__isPromisified__\",!0),s}function c(t,e,r,n){for(var i=new RegExp(E(e)+\"$\"),o=a(t,e,i,r),s=0,u=o.length;u\u003es;s+=2){var c=o[s],l=o[s+1],h=c+e;if(n===F)t[h]=F(c,p,c,l,e);else{var _=n(l,function(){return F(c,p,c,l,e)});f.notEnumerableProp(_,\"__isPromisified__\",!0),t[h]=_}}return f.toFastProperties(t),t}function l(t,e){return F(t,e,void 0,t)}var h,p={},f=t(\"./util.js\"),_=t(\"./promise_resolver.js\")._nodebackForPromise,d=f.withAppended,v=f.maybeWrapAsError,y=f.canEvaluate,g=t(\"./errors\").TypeError,m=\"Async\",j={__isPromisified__:!0},b=[\"arity\",\"length\",\"name\",\"arguments\",\"caller\",\"callee\",\"prototype\",\"__isPromisified__\"],w=new RegExp(\"^(?:\"+b.join(\"|\")+\")$\"),k=function(t){return f.isIdentifier(t)\u0026\u0026\"_\"!==t.charAt(0)\u0026\u0026\"constructor\"!==t},E=function(t){return t.replace(/([$])/,\"\\\\$\")},F=y?h:u;e.promisify=function(t,e){if(\"function\"!=typeof t)throw new g(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");if(i(t))return t;var r=l(t,arguments.length\u003c2?p:e);return f.copyDescriptors(t,r,n),r},e.promisifyAll=function(t,e){if(\"function\"!=typeof t\u0026\u0026\"object\"!=typeof t)throw new g(\"the target of promisifyAll must be an object or a function\\n\\n    See http://goo.gl/9ITlV0\\n\");e=Object(e);var r=e.suffix;\"string\"!=typeof r\u0026\u0026(r=m);var n=e.filter;\"function\"!=typeof n\u0026\u0026(n=k);var i=e.promisifier;if(\"function\"!=typeof i\u0026\u0026(i=F),!f.isIdentifier(r))throw new RangeError(\"suffix must be a valid identifier\\n\\n    See http://goo.gl/8FZo5V\\n\");for(var o=f.inheritedDataKeys(t),s=0;s\u003co.length;++s){var a=t[o[s]];\"constructor\"!==o[s]\u0026\u0026f.isClass(a)\u0026\u0026(c(a.prototype,r,n,i),c(a,r,n,i))}return c(t,r,n,i)}}},{\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var e=c.keys(t),r=e.length,n=new Array(2*r),i=0;r\u003ei;++i){var o=e[i];n[i]=t[o],n[i+r]=o}this.constructor$(n)}function s(t){var r,s=n(t);return u(s)?(r=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e\u0026\u0026r._propagateFrom(s,4),r):i(\"cannot await properties of a non-object\\n\\n    See http://goo.gl/OsFKC8\\n\")}var a=t(\"./util.js\"),u=a.isObject,c=t(\"./es5.js\");a.inherits(o,r),o.prototype._init=function(){this._init$(void 0,-3)},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;if(r\u003e=this._length){for(var n={},i=this.length(),o=0,s=this.length();s\u003eo;++o)n[this._values[o+i]]=this._values[o];this._resolve(n)}},o.prototype._promiseProgressed=function(t,e){this._promise._progress({key:this._values[e+this.length()],value:t})},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t\u003e\u003e1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{\"./es5.js\":14,\"./util.js\":38}],28:[function(t,e){\"use strict\";function r(t,e,r,n,i){for(var o=0;i\u003eo;++o)r[o+n]=t[o+e],t[o+e]=void 0}function n(t){this._capacity=t,this._length=0,this._front=0}n.prototype._willBeOverCapacity=function(t){return this._capacity\u003ct},n.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var r=this._front+e\u0026this._capacity-1;this[r]=t,this._length=e+1},n.prototype._unshiftOne=function(t){var e=this._capacity;this._checkCapacity(this.length()+1);var r=this._front,n=(r-1\u0026e-1^e)-e;this[n]=t,this._front=n,this._length=this.length()+1},n.prototype.unshift=function(t,e,r){this._unshiftOne(r),this._unshiftOne(e),this._unshiftOne(t)},n.prototype.push=function(t,e,r){var n=this.length()+3;if(this._willBeOverCapacity(n))return this._pushOne(t),this._pushOne(e),void this._pushOne(r);var i=this._front+n-3;this._checkCapacity(n);var o=this._capacity-1;this[i+0\u0026o]=t,this[i+1\u0026o]=e,this[i+2\u0026o]=r,this._length=n},n.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1\u0026this._capacity-1,this._length--,e},n.prototype.length=function(){return this._length},n.prototype._checkCapacity=function(t){this._capacity\u003ct\u0026\u0026this._resizeTo(this._capacity\u003c\u003c1)},n.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i\u0026e-1;r(this,0,this,e,o)},e.exports=n},{}],29:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,o){var u=n(t);if(u instanceof e)return a(u);if(!s(t))return i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");var c=new e(r);void 0!==o\u0026\u0026c._propagateFrom(o,5);for(var l=c._fulfill,h=c._reject,p=0,f=t.length;f\u003ep;++p){var _=t[p];(void 0!==_||p in t)\u0026\u0026e.cast(_)._then(l,h,void 0,c,null)}return c}var s=t(\"./util.js\").isArray,a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{\"./util.js\":38}],30:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,r,n,s){this.constructor$(t),this._promise._captureStackTrace(),this._preservedValues=s===o?[]:null,this._zerothIsAccum=void 0===n,this._gotAccum=!1,this._reducingIndex=this._zerothIsAccum?1:0,this._valuesPhase=void 0;var u=i(n,this._promise),h=!1,p=u instanceof e;p\u0026\u0026(u=u._target(),u._isPending()?u._proxyPromiseArray(this,-1):u._isFulfilled()?(n=u._value(),this._gotAccum=!0):(this._reject(u._reason()),h=!0)),p||this._zerothIsAccum||(this._gotAccum=!0);var f=c();this._callback=null===f?r:f.bind(r),this._accum=n,h||l.invoke(a,this,void 0)}function a(){this._init$(void 0,-5)}function u(t,e,r,i){if(\"function\"!=typeof e)return n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var o=new s(t,e,r,i);return o.promise()}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj;h.inherits(s,r),s.prototype._init=function(){},s.prototype._resolveEmptyArray=function(){(this._gotAccum||this._zerothIsAccum)\u0026\u0026this._resolve(null!==this._preservedValues?[]:this._accum)},s.prototype._promiseFulfilled=function(t,r){var n=this._values;n[r]=t;var o,s=this.length(),a=this._preservedValues,u=null!==a,c=this._gotAccum,l=this._valuesPhase;if(!l)for(l=this._valuesPhase=new Array(s),o=0;s\u003eo;++o)l[o]=0;if(o=l[r],0===r\u0026\u0026this._zerothIsAccum?(this._accum=t,this._gotAccum=c=!0,l[r]=0===o?1:2):-1===r?(this._accum=t,this._gotAccum=c=!0):0===o?l[r]=1:(l[r]=2,this._accum=t),c){for(var h,_=this._callback,d=this._promise._boundValue(),v=this._reducingIndex;s\u003ev;++v)if(o=l[v],2!==o){if(1!==o)return;if(t=n[v],this._promise._pushContext(),u?(a.push(t),h=p(_).call(d,t,v,s)):h=p(_).call(d,this._accum,t,v,s),this._promise._popContext(),h===f)return this._reject(h.e);var y=i(h,this._promise);if(y instanceof e){if(y=y._target(),y._isPending())return l[v]=4,y._proxyPromiseArray(this,v);if(!y._isFulfilled())return this._reject(y._reason());h=y._value()}this._reducingIndex=v+1,this._accum=h}else this._reducingIndex=v+1;this._resolve(u?a:this._accum)}},e.prototype.reduce=function(t,e){return u(this,t,e,null)},e.reduce=function(t,e,r,n){return u(t,e,r,n)}}},{\"./async.js\":2,\"./util.js\":38}],31:[function(t,e){\"use strict\";var r,n=t(\"./util\"),i=function(){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")};if(n.isNode\u0026\u0026\"undefined\"==typeof MutationObserver){var o=global.setImmediate,s=process.nextTick;r=n.isRecentNode?function(t){o.call(global,t)}:function(t){s.call(process,t)}}else\"undefined\"==typeof MutationObserver||\"undefined\"!=typeof window\u0026\u0026window.navigator\u0026\u0026window.navigator.standalone?r=\"undefined\"!=typeof setImmediate?function(t){setImmediate(t)}:\"undefined\"!=typeof setTimeout?function(t){setTimeout(t,0)}:i:(r=function(t){var e=document.createElement(\"div\"),r=new MutationObserver(t);return r.observe(e,{attributes:!0}),function(){e.classList.toggle(\"foo\")}},r.isStatic=!0);e.exports=r},{\"./util\":38}],32:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){this.constructor$(t)}var i=e.PromiseInspection,o=t(\"./util.js\");o.inherits(n,r),n.prototype._promiseResolved=function(t,e){this._values[t]=e;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},n.prototype._promiseFulfilled=function(t,e){var r=new i;r._bitField=268435456,r._settledValue=t,this._promiseResolved(e,r)},n.prototype._promiseRejected=function(t,e){var r=new i;r._bitField=134217728,r._settledValue=t,this._promiseResolved(e,r)},e.settle=function(t){return new n(t).promise()},e.prototype.settle=function(){return new n(this).promise()}}},{\"./util.js\":38}],33:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(t){this.constructor$(t),this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0\u003ee)return n(\"expecting a positive integer\\n\\n    See http://goo.gl/1wAmHx\\n\");var r=new i(t),o=r.promise();return r.setHowMany(e),r.init(),o}var s=t(\"./util.js\"),a=t(\"./errors.js\").RangeError,u=t(\"./errors.js\").AggregateError,c=s.isArray;s.inherits(i,r),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=c(this._values);!this._isResolved()\u0026\u0026t\u0026\u0026this._howMany\u003ethis._canPossiblyFulfill()\u0026\u0026this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){this._addFulfilled(t),this._fulfilled()===this.howMany()\u0026\u0026(this._values.length=this.howMany(),this._resolve(1===this.howMany()\u0026\u0026this._unwrap?this._values[0]:this._values))},i.prototype._promiseRejected=function(t){if(this._addRejected(t),this.howMany()\u003ethis._canPossiblyFulfill()){for(var e=new u,r=this.length();r\u003cthis._values.length;++r)e.push(this._values[r]);this._reject(e)}},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e=\"Input array must contain at least \"+this._howMany+\" items but contains only \"+t+\" items\";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{\"./errors.js\":13,\"./util.js\":38}],34:[function(t,e){\"use strict\";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValue=t._settledValue):(this._bitField=0,this._settledValue=void 0)}e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return this._settledValue},e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return this._settledValue},e.prototype.isFulfilled=t.prototype._isFulfilled=function(){return(268435456\u0026this._bitField)\u003e0},e.prototype.isRejected=t.prototype._isRejected=function(){return(134217728\u0026this._bitField)\u003e0},e.prototype.isPending=t.prototype._isPending=function(){return 0===(402653184\u0026this._bitField)},e.prototype.isResolved=t.prototype._isResolved=function(){return(402653184\u0026this._bitField)\u003e0},t.prototype.isPending=function(){return this._target()._isPending()},t.prototype.isRejected=function(){return this._target()._isRejected()},t.prototype.isFulfilled=function(){return this._target()._isFulfilled()},t.prototype.isResolved=function(){return this._target()._isResolved()},t.prototype._value=function(){return this._settledValue},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue},t.prototype.value=function(){var t=this._target();if(!t.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return t._settledValue},t.prototype.reason=function(){var t=this._target();if(!t.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return t._unsetRejectionIsUnhandled(),t._settledValue},t.PromiseInspection=e}},{}],35:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t,n){if(c(t)){if(t instanceof e)return t;if(o(t)){var l=new e(r);return t._then(l._fulfillUnchecked,l._rejectUncheckedCheckError,l._progressUnchecked,l,null),l}var h=a.tryCatch(i)(t);if(h===u){n\u0026\u0026n._pushContext();var l=e.reject(h.e);return n\u0026\u0026n._popContext(),l}if(\"function\"==typeof h)return s(t,h,n)}return t}function i(t){return t.then}function o(t){return l.call(t,\"_promise0\")}function s(t,n,i){function o(t){l\u0026\u0026(l._resolveCallback(t),l=null)}function s(t){l\u0026\u0026(l._rejectCallback(t,p,!0),l=null)}function c(t){l\u0026\u0026\"function\"==typeof l._progress\u0026\u0026l._progress(t)}var l=new e(r),h=l;i\u0026\u0026i._pushContext(),l._captureStackTrace(),i\u0026\u0026i._popContext();var p=!0,f=a.tryCatch(n).call(t,o,s,c);return p=!1,l\u0026\u0026f===u\u0026\u0026(l._rejectCallback(f.e,!0,!0),l=null),h}var a=t(\"./util.js\"),u=a.errorObj,c=a.isObject,l={}.hasOwnProperty;return n}},{\"./util.js\":38}],36:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){var e=this;return e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}function i(t){var e=this;throw e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}var o=t(\"./util.js\"),s=e.TimeoutError,a=function(t,e){if(t.isPending()){var r;!o.isPrimitive(e)\u0026\u0026e instanceof Error?r=e:(\"string\"!=typeof e\u0026\u0026(e=\"operation timed out\"),r=new s(e)),o.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._cancel(r)}},u=function(t){return c(+this).thenReturn(t)},c=e.delay=function(t,n){if(void 0===n){n=t,t=void 0;var i=new e(r);return setTimeout(function(){i._fulfill()},n),i}return n=+n,e.resolve(t)._then(u,null,null,n,void 0)};e.prototype.delay=function(t){return c(this,t)},e.prototype.timeout=function(t,e){t=+t;var r=this.then().cancellable();r._cancellationParent=this;var o=setTimeout(function(){a(r,e)},t);return r._then(n,i,void 0,o,void 0)}}},{\"./util.js\":38}],37:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var r=t.length,n=0;r\u003en;++n){var i=t[n];if(i.isRejected())return e.reject(i.error());t[n]=i._settledValue}return t}function s(t){setTimeout(function(){throw t},0)}function a(t){var e=n(t);return e!==t\u0026\u0026\"function\"==typeof t._isDisposable\u0026\u0026\"function\"==typeof t._getDisposer\u0026\u0026t._isDisposable()\u0026\u0026e._setDisposable(t._getDisposer()),e}function u(t,r){function i(){if(o\u003e=u)return c.resolve();var l=a(t[o++]);if(l instanceof e\u0026\u0026l._isDisposable()){try{l=n(l._getDisposer().tryDispose(r),t.promise)}catch(h){return s(h)}if(l instanceof e)return l._then(i,s,null,null,null)}i()}var o=0,u=t.length,c=e.defer();return i(),c.promise}function c(t){var e=new v;return e._settledValue=t,e._bitField=268435456,u(this,e).thenReturn(t)}function l(t){var e=new v;return e._settledValue=t,e._bitField=134217728,u(this,e).thenThrow(t)}function h(t,e,r){this._data=t,this._promise=e,this._context=r}function p(t,e,r){this.constructor$(t,e,r)}function f(t){return h.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}var _=t(\"./errors.js\").TypeError,d=t(\"./util.js\").inherits,v=e.PromiseInspection;h.prototype.data=function(){return this._data},h.prototype.promise=function(){return this._promise},h.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():null},h.prototype.tryDispose=function(t){var e=this.resource(),r=this._context;void 0!==r\u0026\u0026r._pushContext();var n=null!==e?this.doDispose(e,t):null;return void 0!==r\u0026\u0026r._popContext(),this._promise._unsetDisposable(),this._data=null,n},h.isDisposer=function(t){return null!=t\u0026\u0026\"function\"==typeof t.resource\u0026\u0026\"function\"==typeof t.tryDispose},d(p,h),p.prototype.doDispose=function(t,e){var r=this.data();return r.call(t,t,e)},e.using=function(){var t=arguments.length;if(2\u003et)return r(\"you must pass at least 2 arguments to Promise.using\");var i=arguments[t-1];if(\"function\"!=typeof i)return r(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var s,a=!0;2===t\u0026\u0026Array.isArray(arguments[0])?(s=arguments[0],t=s.length,a=!1):(s=arguments,t--);for(var u=new Array(t),p=0;t\u003ep;++p){var _=s[p];if(h.isDisposer(_)){var d=_;_=_.promise(),_._setDisposable(d)", "}elsevar v=n(_);v instanceof e\u0026\u0026(_=v._then(f,null,null,{resources:u,index:p},void 0))}u[p]=_}var y=e.settle(u).then(o).then(function(t){y._pushContext();var e;try{e=a?i.apply(void 0,t):i.call(void 0,t)}finally{y._popContext()}return e})._then(c,l,void 0,u,void 0);return u.promise=y,y},e.prototype._setDisposable=function(t){this._bitField=262144|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(262144\u0026this._bitField)\u003e0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-262145\u0026this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if(\"function\"==typeof t)return new p(t,this,i());throw new _}}},{\"./errors.js\":13,\"./util.js\":38}],38:[function(t,e,r){\"use strict\";function n(){try{var t=C;return C=null,t.apply(this,arguments)}catch(e){return F.e=e,F}}function i(t){return C=t,n}function o(t){return null==t||t===!0||t===!1||\"string\"==typeof t||\"number\"==typeof t}function s(t){return!o(t)}function a(t){return o(t)?new Error(v(t)):t}function u(t,e){var r,n=t.length,i=new Array(n+1);for(r=0;n\u003er;++r)i[r]=t[r];return i[r]=e,i}function c(t,e,r){if(!w.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var n=Object.getOwnPropertyDescriptor(t,e);return null!=n?null==n.get\u0026\u0026null==n.set?n.value:r:void 0}function l(t,e,r){if(o(t))return t;var n={value:r,configurable:!0,enumerable:!1,writable:!0};return w.defineProperty(t,e,n),t}function h(t){throw t}function p(t){try{if(\"function\"==typeof t){var e=w.names(t.prototype),r=w.isES5\u0026\u0026e.length\u003e1,n=e.length\u003e0\u0026\u0026!(1===e.length\u0026\u0026\"constructor\"===e[0]),i=x.test(t+\"\")\u0026\u0026w.names(t).length\u003e0;if(r||n||i)return!0}return!1}catch(o){return!1}}function f(t){function e(){}e.prototype=t;for(var r=8;r--;)new e;return t}function _(t){return R.test(t)}function d(t,e,r){for(var n=new Array(t),i=0;t\u003ei;++i)n[i]=e+i+r;return n}function v(t){try{return t+\"\"}catch(e){return\"[no string representation]\"}}function y(t){try{l(t,\"isOperational\",!0)}catch(e){}}function g(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function m(t){return t instanceof Error\u0026\u0026w.propertyIsWritable(t,\"stack\")}function j(t){return{}.toString.call(t)}function b(t,e,r){for(var n=w.names(t),i=0;i\u003cn.length;++i){var o=n[i];if(r(o))try{w.defineProperty(e,o,w.getDescriptor(t,o))}catch(s){}}}var w=t(\"./es5.js\"),k=\"undefined\"==typeof navigator,E=function(){try{var t={};return w.defineProperty(t,\"f\",{get:function(){return 3}}),3===t.f}catch(e){return!1}}(),F={e:{}},C,P=function(t,e){function r(){this.constructor=t,this.constructor$=e;for(var r in e.prototype)n.call(e.prototype,r)\u0026\u0026\"$\"!==r.charAt(r.length-1)\u0026\u0026(this[r+\"$\"]=e.prototype[r])}var n={}.hasOwnProperty;return r.prototype=e.prototype,t.prototype=new r,t.prototype},T=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var r=0;r\u003ct.length;++r)if(t[r]===e)return!0;return!1};if(w.isES5){var r=Object.getOwnPropertyNames;return function(t){for(var n=[],i=Object.create(null);null!=t\u0026\u0026!e(t);){var o;try{o=r(t)}catch(s){return n}for(var a=0;a\u003co.length;++a){var u=o[a];if(!i[u]){i[u]=!0;var c=Object.getOwnPropertyDescriptor(t,u);null!=c\u0026\u0026null==c.get\u0026\u0026null==c.set\u0026\u0026n.push(u)}}t=w.getPrototypeOf(t)}return n}}var n={}.hasOwnProperty;return function(r){if(e(r))return[];var i=[];t:for(var o in r)if(n.call(r,o))i.push(o);else{for(var s=0;s\u003ct.length;++s)if(n.call(t[s],o))continue t;i.push(o)}return i}}(),x=/this\\s*\\.\\s*\\S+\\s*=/,R=/^[a-z$_][a-z$_0-9]*$/i,S=function(){return\"stack\"in new Error?function(t){return m(t)?t:new Error(v(t))}:function(t){if(m(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),A={isClass:p,isIdentifier:_,inheritedDataKeys:T,getDataPropertyOrDefault:c,thrower:h,isArray:w.isArray,haveGetters:E,notEnumerableProp:l,isPrimitive:o,isObject:s,canEvaluate:k,errorObj:F,tryCatch:i,inherits:P,withAppended:u,maybeWrapAsError:a,toFastProperties:f,filledRange:d,toString:v,canAttachTrace:m,ensureErrorObject:S,originatesFromRejection:g,markAsOriginatingFromRejection:y,classString:j,copyDescriptors:b,hasDevTools:\"undefined\"!=typeof chrome\u0026\u0026chrome\u0026\u0026\"function\"==typeof chrome.loadTimes,isNode:\"undefined\"!=typeof process\u0026\u0026\"[object process]\"===j(process).toLowerCase()};A.isRecentNode=A.isNode\u0026\u0026function(){var t=process.versions.node.split(\".\").map(Number);return 0===t[0]\u0026\u0026t[1]\u003e10||t[0]\u003e0}(),A.isNode\u0026\u0026A.toFastProperties(process);try{throw new Error}catch(O){A.lastLineError=O}e.exports=A},{\"./es5.js\":14}]},{},[4])(4)}),\"undefined\"!=typeof window\u0026\u0026null!==window?window.P=window.Promise:\"undefined\"!=typeof self\u0026\u0026null!==self\u0026\u0026(self.P=self.Promise);", "-----------------------------------"],
		"Functions": ["!function(t)if(\"object\"==typeof exports\u0026\u0026\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define\u0026\u0026define.amd)define([],t);else{var e;\"undefined\"!=typeof window?e=window:\"undefined\"!=typeof global?e=global:\"undefined\"!=typeof self\u0026\u0026(e=self),e.Promise=t()}}(function(){var t,e,r;return function n(t,e,r){function i(s,a){if(!e[s]){if(!t[s]){var u=\"function\"==typeof _dereq_\u0026\u0026_dereq_;if(!a\u0026\u0026u)return u(s,!0);if(o)return o(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var r=t[s][1][e];return i(r?r:e)},l,l.exports,n,t,e,r)}return e[s].exports}for(var o=\"function\"==typeof _dereq_\u0026\u0026_dereq_,s=0;s\u003cr.length;s++)i(r[s]);return i}({1:[function(t,e){\"use strict\";e.exports=function(t){function e(t){var e=new r(t),n=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),n}var r=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e){\"use strict\";function r(){this._isTickUsed=!1,this._lateQueue=new c(16),this._normalQueue=new c(16),this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=u.isStatic?u(this.drainQueues):u}function n(t,e,r){this._lateQueue.push(t,e,r),this._queueTick()}function i(t,e,r){this._normalQueue.push(t,e,r),this._queueTick()}function o(t){this._normalQueue._pushOne(t),this._queueTick()}var s;try{throw new Error}catch(a){s=a}var u=t(\"./schedule.js\"),c=t(\"./queue.js\"),l=t(\"./util.js\");r.prototype.disableTrampolineIfNecessary=function(){l.hasDevTools\u0026\u0026(this._trampolineEnabled=!1)},r.prototype.enableTrampoline=function(){this._trampolineEnabled||(this._trampolineEnabled=!0,this._schedule=function(t){setTimeout(t,0)})},r.prototype.haveItemsQueued=function(){return this._normalQueue.length()\u003e0},r.prototype.throwLater=function(t,e){if(1===arguments.length\u0026\u0026(e=t,t=function(){throw e}),\"undefined\"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(r){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")}},l.hasDevTools?(u.isStatic\u0026\u0026(u=function(t){setTimeout(t,0)}),r.prototype.invokeLater=function(t,e,r){this._trampolineEnabled?n.call(this,t,e,r):this._schedule(function(){setTimeout(function(){t.call(e,r)},100)})},r.prototype.invoke=function(t,e,r){this._trampolineEnabled?i.call(this,t,e,r):this._schedule(function(){t.call(e,r)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?o.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=n,r.prototype.invoke=i,r.prototype.settlePromises=o),r.prototype.invokeFirst=function(t,e,r){this._normalQueue.unshift(t,e,r),this._queueTick()},r.prototype._drainQueue=function(t){for(;t.length()\u003e0;){var e=t.shift();if(\"function\"==typeof e){var r=t.shift(),n=t.shift();e.call(r,n)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=new r,e.exports.firstLineError=s},{\"./queue.js\":28,\"./schedule.js\":31,\"./util.js\":38}],3:[function(t,e){\"use strict\";e.exports=function(t,e,r){var n=function(t,e){this._reject(e)},i=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(n,n,null,this,t)},o=function(t,e){this._isPending()\u0026\u0026this._resolveCallback(e.target)},s=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(n){var a=r(n),u=new t(e);u._propagateFrom(this,1);var c=this._target();if(u._setBoundTo(a),a instanceof t){var l={promiseRejectionQueued:!1,promise:u,target:c,bindingPromise:a};c._then(e,i,u._progress,u,l),a._then(o,s,u._progress,u,l)}else u._resolveCallback(c);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=131072|this._bitField,this._boundTo=t):this._bitField=-131073\u0026this._bitField},t.prototype._isBound=function(){return 131072===(131072\u0026this._bitField)},t.bind=function(n,i){var o=r(n),s=new t(e);return s._setBoundTo(o),o instanceof t?o._then(function(){s._resolveCallback(i)},s._reject,s._progress,s,null):s._resolveCallback(i),s}}},{}],4:[function(t,e){\"use strict\";function r(){try{Promise===i\u0026\u0026(Promise=n)}catch(t){}return i}var n;\"undefined\"!=typeof Promise\u0026\u0026(n=Promise);var i=t(\"./promise.js\")();i.noConflict=r,e.exports=i},{\"./promise.js\":23}],5:[function(t,e){\"use strict\";var r=Object.create;if(r){var n=r(null),i=r(null);n[\" size\"]=i[\" size\"]=0}e.exports=function(e){function r(t,r){var n;if(null!=t\u0026\u0026(n=t[r]),\"function\"!=typeof n){var i=\"Object \"+a.classString(t)+\" has no method '\"+a.toString(r)+\"'\";throw new e.TypeError(i)}return n}function n(t){var e=this.pop(),n=r(t,e);return n.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0\u003ee\u0026\u0026(e=Math.max(0,e+t.length)),t[e]}{var s,a=t(\"./util.js\"),u=a.canEvaluate;a.isIdentifier}e.prototype.call=function(t){for(var e=arguments.length,r=new Array(e-1),i=1;e\u003ei;++i)r[i-1]=arguments[i];return r.push(t),this._then(n,void 0,void 0,r,void 0)},e.prototype.get=function(t){var e,r=\"number\"==typeof t;if(r)e=o;else if(u){var n=s(t);e=null!==n?n:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],6:[function(t,e){\"use strict\";e.exports=function(e){var r=t(\"./errors.js\"),n=t(\"./async.js\"),i=r.CancellationError;e.prototype._cancel=function(t){if(!this.isCancellable())return this;for(var e,r=this;void 0!==(e=r._cancellationParent)\u0026\u0026e.isCancellable();)r=e;this._unsetCancellable(),r._target()._rejectCallback(t,!1,!0)},e.prototype.cancel=function(t){return this.isCancellable()?(void 0===t\u0026\u0026(t=new i),n.invokeLater(this._cancel,this,t),this):this},e.prototype.cancellable=function(){return this._cancellable()?this:(n.enableTrampoline(),this._setCancellable(),this._cancellationParent=void 0,this)},e.prototype.uncancellable=function(){var t=this.then();return t._unsetCancellable(),t},e.prototype.fork=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);return n._setCancellable(),n._cancellationParent=void 0,n}}},{\"./async.js\":2,\"./errors.js\":13}],7:[function(t,e){\"use strict\";e.exports=function(){function e(t){this._parent=t;var r=this._length=1+(void 0===t?0:t._length);j(this,e),r\u003e32\u0026\u0026this.uncycle()}function r(t,e){for(var r=0;r\u003ce.length-1;++r)e[r].push(\"From previous event:\"),e[r]=e[r].join(\"\\n\");return r\u003ce.length\u0026\u0026(e[r]=e[r].join(\"\\n\")),t+\"\\n\"+e.join(\"\\n\")}function n(t){for(var e=0;e\u003ct.length;++e)(0===t[e].length||e+1\u003ct.length\u0026\u0026t[e][0]===t[e+1][0])\u0026\u0026(t.splice(e,1),e--)}function i(t){for(var e=t[0],r=1;r\u003ct.length;++r){for(var n=t[r],i=e.length-1,o=e[i],s=-1,a=n.length-1;a\u003e=0;--a)if(n[a]===o){s=a;break}for(var a=s;a\u003e=0;--a){var u=n[a];if(e[i]!==u)break;e.pop(),i--}e=n}}function o(t){for(var e=[],r=0;r\u003ct.length;++r){var n=t[r],i=_.test(n)||\"    (No stack trace)\"===n,o=i\u0026\u0026y(n);i\u0026\u0026!o\u0026\u0026(v\u0026\u0026\" \"!==n.charAt(0)\u0026\u0026(n=\"    \"+n),e.push(n))}return e}function s(t){for(var e=t.stack.replace(/\\s+$/g,\"\").split(\"\\n\"),r=0;r\u003ce.length;++r){var n=e[r];if(\"    (No stack trace)\"===n||_.test(n))break}return r\u003e0\u0026\u0026(e=e.slice(r)),e}function a(t){var e;if(\"function\"==typeof t)e=\"[function \"+(t.name||\"anonymous\")+\"]\";else{e=t.toString();var r=/\\[object [a-zA-Z0-9$_]+\\]/;if(r.test(e))try{var n=JSON.stringify(t);e=n}catch(i){}0===e.length\u0026\u0026(e=\"(empty array)\")}return\"(\u003c\"+u(e)+\"\u003e, no stack trace)\"}function u(t){var e=41;return t.length\u003ce?t:t.substr(0,e-3)+\"...\"}function c(t){var e=t.match(g);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}var l,h=t(\"./async.js\"),p=t(\"./util.js\"),f=/[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo|instrumented)/,_=null,d=null,v=!1;p.inherits(e,Error),e.prototype.uncycle=function(){var t=this._length;if(!(2\u003et)){for(var e=[],r={},n=0,i=this;void 0!==i;++n)e.push(i),i=i._parent;t=this._length=n;for(var n=t-1;n\u003e=0;--n){var o=e[n].stack;void 0===r[o]\u0026\u0026(r[o]=n)}for(var n=0;t\u003en;++n){var s=e[n].stack,a=r[s];if(void 0!==a\u0026\u0026a!==n){a\u003e0\u0026\u0026(e[a-1]._parent=void 0,e[a-1]._length=1),e[n]._parent=void 0,e[n]._length=1;var u=n\u003e0?e[n-1]:this;t-1\u003ea?(u._parent=e[a+1],u._parent.uncycle(),u._length=u._parent._length+1):(u._parent=void 0,u._length=1);for(var c=u._length+1,l=n-2;l\u003e=0;--l)e[l]._length=c,c++;return}}}},e.prototype.parent=function(){return this._parent},e.prototype.hasParent=function(){return void 0!==this._parent},e.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var s=e.parseStackAndMessage(t),a=s.message,u=[s.stack],c=this;void 0!==c;)u.push(o(c.stack.split(\"\\n\"))),c=c._parent;i(u),n(u),p.notEnumerableProp(t,\"stack\",r(a,u)),p.notEnumerableProp(t,\"__stackCleaned__\",!0)}},e.parseStackAndMessage=function(t){var e=t.stack,r=t.toString();return e=\"string\"==typeof e\u0026\u0026e.length\u003e0?s(t):[\"    (No stack trace)\"],{message:r,stack:o(e)}},e.formatAndLogError=function(t,e){if(\"undefined\"!=typeof console){var r;if(\"object\"==typeof t||\"function\"==typeof t){var n=t.stack;r=e+d(n,t)}else r=e+String(t);\"function\"==typeof l?l(r):(\"function\"==typeof console.log||\"object\"==typeof console.log)\u0026\u0026console.log(r)}},e.unhandledRejection=function(t){e.formatAndLogError(t,\"^--- With additional stack trace: \")},e.isSupported=function(){return\"function\"==typeof j},e.fireRejectionEvent=function(t,r,n,i){var o=!1;try{\"function\"==typeof r\u0026\u0026(o=!0,\"rejectionHandled\"===t?r(i):r(n,i))}catch(s){h.throwLater(s)}var a=!1;try{a=b(t,n,i)}catch(s){a=!0,h.throwLater(s)}var u=!1;if(m)try{u=m(t.toLowerCase(),{reason:n,promise:i})}catch(s){u=!0,h.throwLater(s)}a||o||u||\"unhandledRejection\"!==t||e.formatAndLogError(n,\"Unhandled rejection \")};var y=function(){return!1},g=/[\\/\u003c\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;e.setBounds=function(t,r){if(e.isSupported()){for(var n,i,o=t.stack.split(\"\\n\"),s=r.stack.split(\"\\n\"),a=-1,u=-1,l=0;l\u003co.length;++l){var h=c(o[l]);if(h){n=h.fileName,a=h.line;break}}for(var l=0;l\u003cs.length;++l){var h=c(s[l]);if(h){i=h.fileName,u=h.line;break}}0\u003ea||0\u003eu||!n||!i||n!==i||a\u003e=u||(y=function(t){if(f.test(t))return!0;var e=c(t);return e\u0026\u0026e.fileName===n\u0026\u0026a\u003c=e.line\u0026\u0026e.line\u003c=u?!0:!1})}};var m,j=function(){var t=/^\\s*at\\s*/,e=function(t,e){return\"string\"==typeof t?t:void 0!==e.name\u0026\u0026void 0!==e.message?e.toString():a(e)};if(\"number\"==typeof Error.stackTraceLimit\u0026\u0026\"function\"==typeof Error.captureStackTrace){Error.stackTraceLimit=Error.stackTraceLimit+6,_=t,d=e;var r=Error.captureStackTrace;return y=function(t){return f.test(t)},function(t,e){Error.stackTraceLimit=Error.stackTraceLimit+6,r(t,e),Error.stackTraceLimit=Error.stackTraceLimit-6}}var n=new Error;if(\"string\"==typeof n.stack\u0026\u0026n.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\")\u003e=0)return _=/@/,d=e,v=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i=\"stack\"in o}return\"stack\"in n||!i||\"number\"!=typeof Error.stackTraceLimit?(d=function(t,e){return\"string\"==typeof t?t:\"object\"!=typeof e\u0026\u0026\"function\"!=typeof e||void 0===e.name||void 0===e.message?a(e):e.toString()},null):(_=t,d=e,function(t){Error.stackTraceLimit=Error.stackTraceLimit+6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit=Error.stackTraceLimit-6})}([]),b=function(){if(p.isNode)return function(t,e,r){return\"rejectionHandled\"===t?process.emit(t,r):process.emit(t,e,r)};var t=!1,e=!0;try{var r=new self.CustomEvent(\"test\");t=r instanceof CustomEvent}catch(n){}if(!t)try{var i=document.createEvent(\"CustomEvent\");i.initCustomEvent(\"testingtheevent\",!1,!0,{}),self.dispatchEvent(i)}catch(n){e=!1}e\u0026\u0026(m=function(e,r){var n;return t?n=new self.CustomEvent(e,{detail:r,bubbles:!1,cancelable:!0}):self.dispatchEvent\u0026\u0026(n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,!1,!0,r)),n?!self.dispatchEvent(n):!1});var o={};return o.unhandledRejection=\"onunhandledRejection\".toLowerCase(),o.rejectionHandled=\"onrejectionHandled\".toLowerCase(),function(t,e,r){var n=o[t],i=self[n];return i?(\"rejectionHandled\"===t?i.call(self,r):i.call(self,e,r),!0):!1}}();return\"undefined\"!=typeof console\u0026\u0026\"undefined\"!=typeof console.warn\u0026\u0026(l=function(t){console.warn(t)},p.isNode\u0026\u0026process.stderr.isTTY?l=function(t){process.stderr.write(\"\u001b[31m\"+t+\"\u001b[39m\\n\")}:p.isNode||\"string\"!=typeof(new Error).stack||(l=function(t){console.warn(\"%c\"+t,\"color: red\")})),e}},{\"./async.js\":2,\"./util.js\":38}],8:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e,r){this._instances=t,this._callback=e,this._promise=r}function n(t,e){var r={},n=s(t).call(r,e);if(n===a)return n;var i=u(r);return i.length?(a.e=new c(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"),a):n}var i=t(\"./util.js\"),o=t(\"./errors.js\"),s=i.tryCatch,a=i.errorObj,u=t(\"./es5.js\").keys,c=o.TypeError;return r.prototype.doFilter=function(t){for(var r=this._callback,i=this._promise,o=i._boundValue(),u=0,c=this._instances.length;c\u003eu;++u){var l=this._instances[u],h=l===Error||null!=l\u0026\u0026l.prototype instanceof Error;if(h\u0026\u0026t instanceof l){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}if(\"function\"==typeof l\u0026\u0026!h){var f=n(l,t);if(f===a){t=a.e;break}if(f){var p=s(r).call(o,t);return p===a?(e.e=p.e,e):p}}}return e.e=t,e},r}},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],9:[function(t,e){\"use strict\";e.exports=function(t,e,r){function n(){this._trace=new e(o())}function i(){return r()?new n:void 0}function o(){var t=s.length-1;return t\u003e=0?s[t]:void 0}var s=[];return n.prototype._pushContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.push(this._trace)},n.prototype._popContext=function(){r()\u0026\u0026void 0!==this._trace\u0026\u0026s.pop()},t.prototype._peekContext=o,t.prototype._pushContext=n.prototype._pushContext,t.prototype._popContext=n.prototype._popContext,i}},{}],10:[function(t,e){\"use strict\";e.exports=function(e,r){var n,i,o=e._getDomain,s=t(\"./async.js\"),a=t(\"./errors.js\").Warning,u=t(\"./util.js\"),c=u.canAttachTrace,l=!1||u.isNode\u0026\u0026(!!process.env.BLUEBIRD_DEBUG||\"development\"===process.env.NODE_ENV);return u.isNode\u0026\u00260==process.env.BLUEBIRD_DEBUG\u0026\u0026(l=!1),l\u0026\u0026s.disableTrampolineIfNecessary(),e.prototype._ignoreRejections=function(){this._unsetRejectionIsUnhandled(),this._bitField=16777216|this._bitField},e.prototype._ensurePossibleRejectionHandled=function(){0===(16777216\u0026this._bitField)\u0026\u0026(this._setRejectionIsUnhandled(),s.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){r.fireRejectionEvent(\"rejectionHandled\",n,void 0,this)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._getCarriedStackTrace()||this._settledValue;this._setUnhandledRejectionIsNotified(),r.fireRejectionEvent(\"unhandledRejection\",i,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=524288|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-524289\u0026this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(524288\u0026this._bitField)\u003e0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=2097152|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-2097153\u0026this._bitField,this._isUnhandledRejectionNotified()\u0026\u0026(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(2097152\u0026this._bitField)\u003e0},e.prototype._setCarriedStackTrace=function(t){this._bitField=1048576|this._bitField,this._fulfillmentHandler0=t},e.prototype._isCarryingStackTrace=function(){return(1048576\u0026this._bitField)\u003e0},e.prototype._getCarriedStackTrace=function(){return this._isCarryingStackTrace()?this._fulfillmentHandler0:void 0},e.prototype._captureStackTrace=function(){return l\u0026\u0026(this._trace=new r(this._peekContext())),this},e.prototype._attachExtraTrace=function(t,e){if(l\u0026\u0026c(t)){var n=this._trace;if(void 0!==n\u0026\u0026e\u0026\u0026(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var i=r.parseStackAndMessage(t);u.notEnumerableProp(t,\"stack\",i.message+\"\\n\"+i.stack.join(\"\\n\")),u.notEnumerableProp(t,\"__stackCleaned__\",!0)}}},e.prototype._warn=function(t){var e=new a(t),n=this._peekContext();if(n)n.attachExtraTrace(e);else{var i=r.parseStackAndMessage(e);e.stack=i.message+\"\\n\"+i.stack.join(\"\\n\")}r.formatAndLogError(e,\"\")},e.onPossiblyUnhandledRejection=function(t){var e=o();i=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.onUnhandledRejectionHandled=function(t){var e=o();n=\"function\"==typeof t?null===e?t:e.bind(t):void 0},e.longStackTraces=function(){if(s.haveItemsQueued()\u0026\u0026l===!1)throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/DT1qyG\\n\");l=r.isSupported(),l\u0026\u0026s.disableTrampolineIfNecessary()},e.hasLongStackTraces=function(){return l\u0026\u0026r.isSupported()},r.isSupported()||(e.longStackTraces=function(){},l=!1),function(){return l}}},{\"./async.js\":2,\"./errors.js\":13,\"./util.js\":38}],11:[function(t,e){\"use strict\";var r=t(\"./util.js\"),n=r.isPrimitive;e.exports=function(t){var e=function(){return this},r=function(){throw this},i=function(){},o=function(){throw void 0},s=function(t,e){return 1===e?function(){throw t}:2===e?function(){return t}:void 0};t.prototype[\"return\"]=t.prototype.thenReturn=function(r){return void 0===r?this.then(i):n(r)?this._then(s(r,2),void 0,void 0,void 0,void 0):(r instanceof t\u0026\u0026r._ignoreRejections(),this._then(e,void 0,void 0,r,void 0))},t.prototype[\"throw\"]=t.prototype.thenThrow=function(t){return void 0===t?this.then(o):n(t)?this._then(s(t,1),void 0,void 0,void 0,void 0):this._then(r,void 0,void 0,t,void 0)}}},{\"./util.js\":38}],12:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.reduce;t.prototype.each=function(t){return r(this,t,null,e)},t.each=function(t,n){return r(t,n,null,e)}}},{}],13:[function(t,e){\"use strict\";function r(t,e){function r(n){return this instanceof r?(l(this,\"message\",\"string\"==typeof n?n:e),l(this,\"name\",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new r(n)}return c(r,Error),r}function n(t){return this instanceof n?(l(this,\"name\",\"OperationalError\"),l(this,\"message\",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(l(this,\"message\",t.message),l(this,\"stack\",t.stack)):Error.captureStackTrace\u0026\u0026Error.captureStackTrace(this,this.constructor))):new n(t)}var i,o,s=t(\"./es5.js\"),a=s.freeze,u=t(\"./util.js\"),c=u.inherits,l=u.notEnumerableProp,h=r(\"Warning\",\"warning\"),p=r(\"CancellationError\",\"cancellation error\"),f=r(\"TimeoutError\",\"timeout error\"),_=r(\"AggregateError\",\"aggregate error\");try{i=TypeError,o=RangeError}catch(d){i=r(\"TypeError\",\"type error\"),o=r(\"RangeError\",\"range error\")}for(var v=\"join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse\".split(\" \"),y=0;y\u003cv.length;++y)\"function\"==typeof Array.prototype[v[y]]\u0026\u0026(_.prototype[v[y]]=Array.prototype[v[y]]);s.defineProperty(_.prototype,\"length\",{value:0,configurable:!1,writable:!0,enumerable:!0}),_.prototype.isOperational=!0;var g=0;_.prototype.toString=function(){var t=Array(4*g+1).join(\" \"),e=\"\\n\"+t+\"AggregateError of:\\n\";g++,t=Array(4*g+1).join(\" \");for(var r=0;r\u003cthis.length;++r){for(var n=this[r]===this?\"[Circular AggregateError]\":this[r]+\"\",i=n.split(\"\\n\"),o=0;o\u003ci.length;++o)i[o]=t+i[o];n=i.join(\"\\n\"),e+=n+\"\\n\"}return g--,e},c(n,Error);var m=Error.__BluebirdErrorTypes__;m||(m=a({CancellationError:p,TimeoutError:f,OperationalError:n,RejectionError:n,AggregateError:_}),l(Error,\"__BluebirdErrorTypes__\",m)),e.exports={Error:Error,TypeError:i,RangeError:o,CancellationError:m.CancellationError,OperationalError:m.OperationalError,TimeoutError:m.TimeoutError,AggregateError:m.AggregateError,Warning:h}},{\"./es5.js\":14,\"./util.js\":38}],14:[function(t,e){var r=function(){\"use strict\";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var r=Object.getOwnPropertyDescriptor(t,e);return!(r\u0026\u0026!r.writable\u0026\u0026!r.set)}};else{var n={}.hasOwnProperty,i={}.toString,o={}.constructor.prototype,s=function(t){var e=[];for(var r in t)n.call(t,r)\u0026\u0026e.push(r);return e},a=function(t,e){return{value:t[e]}},u=function(t,e,r){return t[e]=r.value,t},c=function(t){return t},l=function(t){try{return Object(t).constructor.prototype}catch(e){return o}},h=function(t){try{return\"[object Array]\"===i.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:s,names:s,defineProperty:u,getDescriptor:a,freeze:c,getPrototypeOf:l,isES5:r,propertyIsWritable:function(){return!0}}}},{}],15:[function(t,e){\"use strict\";e.exports=function(t,e){var r=t.map;t.prototype.filter=function(t,n){return r(this,t,n,e)},t.filter=function(t,n,i){return r(t,n,i,e)}}},{}],16:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(){return this}function o(){throw this}function s(t){return function(){return t}}function a(t){return function(){throw t}}function u(t,e,r){var n;return n=p(e)?r?s(e):a(e):r?i:o,t._then(n,f,void 0,e,void 0)}function c(t){var i=this.promise,o=this.handler,s=i._isBound()?o.call(i._boundValue()):o();if(void 0!==s){var a=n(s,i);if(a instanceof e)return a=a._target(),u(a,t,i.isFulfilled())}return i.isRejected()?(r.e=t,r):t}function l(t){var r=this.promise,i=this.handler,o=r._isBound()?i.call(r._boundValue(),t):i(t);if(void 0!==o){var s=n(o,r);if(s instanceof e)return s=s._target(),u(s,t,!0)}return t}var h=t(\"./util.js\"),p=h.isPrimitive,f=h.thrower;e.prototype._passThroughHandler=function(t,e){if(\"function\"!=typeof t)return this.then();var r={promise:this,handler:t};return this._then(e?c:l,e?c:void 0,void 0,r,void 0)},e.prototype.lastly=e.prototype[\"finally\"]=function(t){return this._passThroughHandler(t,!0)},e.prototype.tap=function(t){return this._passThroughHandler(t,!1)}}},{\"./util.js\":38}],17:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,r,n){for(var o=0;o\u003cr.length;++o){n._pushContext();var s=h(r[o])(t);if(n._popContext(),s===l){n._pushContext();var a=e.reject(l.e);return n._popContext(),a}var u=i(s,n);if(u instanceof e)return u}return null}function s(t,r,i,o){var s=this._promise=new e(n);s._captureStackTrace(),this._stack=o,this._generatorFunction=t,this._receiver=r,this._generator=void 0,this._yieldHandlers=\"function\"==typeof i?[i].concat(p):p}var a=t(\"./errors.js\"),u=a.TypeError,c=t(\"./util.js\"),l=c.errorObj,h=c.tryCatch,p=[];s.prototype.promise=function(){return this._promise},s.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._next(void 0)},s.prototype._continue=function(t){if(t===l)return this._promise._rejectCallback(t.e,!1,!0);var r=t.value;if(t.done===!0)this._promise._resolveCallback(r);else{var n=i(r,this._promise);if(!(n instanceof e)\u0026\u0026(n=o(n,this._yieldHandlers,this._promise),null===n))return void this._throw(new u(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/4Y4pDk\\n\\n\".replace(\"%s\",r)+\"From coroutine:\\n\"+this._stack.split(\"\\n\").slice(1,-7).join(\"\\n\")));n._then(this._next,this._throw,void 0,this,null)}},s.prototype._throw=function(t){this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator[\"throw\"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},s.prototype._next=function(t){this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},e.coroutine=function(t,e){if(\"function\"!=typeof t)throw new u(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var r=Object(e).yieldHandler,n=s,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new n(void 0,void 0,r,i);return o._generator=e,o._next(void 0),o.promise()}},e.coroutine.addYieldHandler=function(t){if(\"function\"!=typeof t)throw new u(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");p.push(t)},e.spawn=function(t){if(\"function\"!=typeof t)return r(\"generatorFunction must be a function\\n\\n    See http://goo.gl/6Vqhm0\\n\");var n=new s(t,this),i=n.promise();return n._run(e.spawn),i}}},{\"./errors.js\":13,\"./util.js\":38}],18:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){{var o=t(\"./util.js\");o.canEvaluate,o.tryCatch,o.errorObj}e.join=function(){var t,e=arguments.length-1;if(e\u003e0\u0026\u0026\"function\"==typeof arguments[e]){t=arguments[e];var n}for(var i=arguments.length,o=new Array(i),s=0;i\u003es;++s)o[s]=arguments[s];t\u0026\u0026o.pop();var n=new r(o).promise();return void 0!==t?n.spread(t):n}}},{\"./util.js\":38}],19:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,e,r,n){this.constructor$(t),this._promise._captureStackTrace();var i=c();this._callback=null===i?e:i.bind(e),this._preservedValues=n===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=r\u003e=1?[]:d,l.invoke(a,this,void 0)}function a(){this._init$(void 0,-2)}function u(t,e,r,n){var i=\"object\"==typeof r\u0026\u0026null!==r?r.concurrency:0;return i=\"number\"==typeof i\u0026\u0026isFinite(i)\u0026\u0026i\u003e=1?i:0,new s(t,e,i,n)}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj,_={},d=[];h.inherits(s,r),s.prototype._init=function(){},s.prototype._promiseFulfilled=function(t,r){var n=this._values,o=this.length(),s=this._preservedValues,a=this._limit;if(n[r]===_){if(n[r]=t,a\u003e=1\u0026\u0026(this._inFlight--,this._drainQueue(),this._isResolved()))return}else{if(a\u003e=1\u0026\u0026this._inFlight\u003e=a)return n[r]=t,void this._queue.push(r);null!==s\u0026\u0026(s[r]=t);var u=this._callback,c=this._promise._boundValue();this._promise._pushContext();var l=p(u).call(c,t,r,o);if(this._promise._popContext(),l===f)return this._reject(l.e);var h=i(l,this._promise);if(h instanceof e){if(h=h._target(),h._isPending())return a\u003e=1\u0026\u0026this._inFlight++,n[r]=_,h._proxyPromiseArray(this,r);if(!h._isFulfilled())return this._reject(h._reason());l=h._value()}n[r]=l}var d=++this._totalResolved;d\u003e=o\u0026\u0026(null!==s?this._filter(n,s):this._resolve(n))},s.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,r=this._values;t.length\u003e0\u0026\u0026this._inFlight\u003ce;){if(this._isResolved())return;var n=t.pop();this._promiseFulfilled(r[n],n)}},s.prototype._filter=function(t,e){for(var r=e.length,n=new Array(r),i=0,o=0;r\u003eo;++o)t[o]\u0026\u0026(n[i++]=e[o]);n.length=i,this._resolve(n)},s.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return\"function\"!=typeof t?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(this,t,e,null).promise()},e.map=function(t,e,r,i){return\"function\"!=typeof e?n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\"):u(t,e,r,i).promise()}}},{\"./async.js\":2,\"./util.js\":38}],20:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){var o=t(\"./util.js\"),s=o.tryCatch;e.method=function(t){if(\"function\"!=typeof t)throw new e.TypeError(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");return function(){var n=new e(r);n._captureStackTrace(),n._pushContext();var i=s(t).apply(this,arguments);return n._popContext(),n._resolveFromSyncValue(i),n}},e.attempt=e[\"try\"]=function(t,n,a){if(\"function\"!=typeof t)return i(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var u=new e(r);u._captureStackTrace(),u._pushContext();var c=o.isArray(n)?s(t).apply(a,n):s(t).call(a,n);return u._popContext(),u._resolveFromSyncValue(c),u},e.prototype._resolveFromSyncValue=function(t){t===o.errorObj?this._rejectCallback(t.e,!1,!0):this._resolveCallback(t,!0)}}},{\"./util.js\":38}],21:[function(t,e){\"use strict\";e.exports=function(e){function r(t,e){var r=this;if(!o.isArray(t))return n.call(r,t,e);var i=a(e).apply(r._boundValue(),[null].concat(t));i===u\u0026\u0026s.throwLater(i.e)}function n(t,e){var r=this,n=r._boundValue(),i=void 0===t?a(e).call(n,null):a(e).call(n,null,t);i===u\u0026\u0026s.throwLater(i.e)}function i(t,e){var r=this;if(!t){var n=r._target(),i=n._getCarriedStackTrace();i.cause=t,t=i}var o=a(e).call(r._boundValue(),t);o===u\u0026\u0026s.throwLater(o.e)}var o=t(\"./util.js\"),s=t(\"./async.js\"),a=o.tryCatch,u=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if(\"function\"==typeof t){var o=n;void 0!==e\u0026\u0026Object(e).spread\u0026\u0026(o=r),this._then(o,i,void 0,this,t)}return this}}},{\"./async.js\":2,\"./util.js\":38}],22:[function(t,e){\"use strict\";e.exports=function(e,r){var n=t(\"./util.js\"),i=t(\"./async.js\"),o=n.tryCatch,s=n.errorObj;e.prototype.progressed=function(t){return this._then(void 0,void 0,t,void 0,void 0)},e.prototype._progress=function(t){this._isFollowingOrFulfilledOrRejected()||this._target()._progressUnchecked(t)},e.prototype._progressHandlerAt=function(t){return 0===t?this._progressHandler0:this[(t\u003c\u003c2)+t-5+2]},e.prototype._doProgressWith=function(t){var r=t.value,i=t.handler,a=t.promise,u=t.receiver,c=o(i).call(u,r);if(c===s){if(null!=c.e\u0026\u0026\"StopProgressPropagation\"!==c.e.name){var l=n.canAttachTrace(c.e)?c.e:new Error(n.toString(c.e));a._attachExtraTrace(l),a._progress(c.e)}}else c instanceof e?c._then(a._progress,null,null,a,void 0):a._progress(c)},e.prototype._progressUnchecked=function(t){for(var n=this._length(),o=this._progress,s=0;n\u003es;s++){var a=this._progressHandlerAt(s),u=this._promiseAt(s);if(u instanceof e)\"function\"==typeof a?i.invoke(this._doProgressWith,this,{handler:a,promise:u,receiver:this._receiverAt(s),value:t}):i.invoke(o,u,t);else{var c=this._receiverAt(s);\"function\"==typeof a?a.call(c,t,u):c instanceof r\u0026\u0026!c._isResolved()\u0026\u0026c._promiseProgressed(t,u)}}}}},{\"./async.js\":2,\"./util.js\":38}],23:[function(t,e){\"use strict\";e.exports=function(){function e(t){if(\"function\"!=typeof t)throw new h(\"the promise constructor requires a resolver function\\n\\n    See http://goo.gl/EC22Yn\\n\");if(this.constructor!==e)throw new h(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/KsIlge\\n\");this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._progressHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._settledValue=void 0,t!==p\u0026\u0026this._resolveFromResolver(t)}function r(t){var r=new e(p);r._fulfillmentHandler0=t,r._rejectionHandler0=t,r._progressHandler0=t,r._promise0=t,r._receiver0=t,r._settledValue=t}var n,i=function(){return new h(\"circular promise resolution chain\\n\\n    See http://goo.gl/LhFpo0\\n\")},o=function(){return new e.PromiseInspection(this._target())},s=function(t){return e.reject(new h(t))},a=t(\"./util.js\");n=a.isNode?function(){var t=process.domain;return void 0===t\u0026\u0026(t=null),t}:function(){return null},a.notEnumerableProp(e,\"_getDomain\",n);var u={},c=t(\"./async.js\"),l=t(\"./errors.js\"),h=e.TypeError=l.TypeError;e.RangeError=l.RangeError,e.CancellationError=l.CancellationError,e.TimeoutError=l.TimeoutError,e.OperationalError=l.OperationalError,e.RejectionError=l.OperationalError,e.AggregateError=l.AggregateError;var p=function(){},f={},_={e:null},d=t(\"./thenables.js\")(e,p),v=t(\"./promise_array.js\")(e,p,d,s),y=t(\"./captured_trace.js\")(),g=t(\"./debuggability.js\")(e,y),m=t(\"./context.js\")(e,y,g),j=t(\"./catch_filter.js\")(_),b=t(\"./promise_resolver.js\"),w=b._nodebackForPromise,k=a.errorObj,E=a.tryCatch;return e.prototype.toString=function(){return\"[object Promise]\"},e.prototype.caught=e.prototype[\"catch\"]=function(t){var r=arguments.length;if(r\u003e1){var n,i=new Array(r-1),o=0;for(n=0;r-1\u003en;++n){var s=arguments[n];if(\"function\"!=typeof s)return e.reject(new h(\"Catch filter must inherit from Error or be a simple predicate function\\n\\n    See http://goo.gl/o84o68\\n\"));i[o++]=s}i.length=o,t=arguments[n];var a=new j(i,t,this);return this._then(void 0,a.doFilter,void 0,a,void 0)}return this._then(void 0,t,void 0,void 0,void 0)},e.prototype.reflect=function(){return this._then(o,o,void 0,this,void 0)},e.prototype.then=function(t,e,r){if(g()\u0026\u0026arguments.length\u003e0\u0026\u0026\"function\"!=typeof t\u0026\u0026\"function\"!=typeof e){var n=\".then() only accepts functions but was passed: \"+a.classString(t);arguments.length\u003e1\u0026\u0026(n+=\", \"+a.classString(e)),this._warn(n)}return this._then(t,e,r,void 0,void 0)},e.prototype.done=function(t,e,r){var n=this._then(t,e,r,void 0,void 0);", "n._setIsFinal()},e.prototype.spread=function(t,e)return this.all()._then(t,e,void 0,f,void 0)},e.prototype.isCancellable=function(){return!this.isResolved()\u0026\u0026this._cancellable()},e.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()\u0026\u0026(t.rejectionReason=this.reason(),t.isRejected=!0),t},e.prototype.all=function(){return new v(this).promise()},e.prototype.error=function(t){return this.caught(a.originatesFromRejection,t)},e.is=function(t){return t instanceof e},e.fromNode=function(t){var r=new e(p),n=E(t)(w(r));return n===k\u0026\u0026r._rejectCallback(n.e,!0,!0),r},e.all=function(t){return new v(t).promise()},e.defer=e.pending=function(){var t=new e(p);return new b(t)},e.cast=function(t){var r=d(t);if(!(r instanceof e)){var n=r;r=new e(p),r._fulfillUnchecked(n)}return r},e.resolve=e.fulfilled=e.cast,e.reject=e.rejected=function(t){var r=new e(p);return r._captureStackTrace(),r._rejectCallback(t,!0),r},e.setScheduler=function(t){if(\"function\"!=typeof t)throw new h(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var e=c._schedule;return c._schedule=t,e},e.prototype._then=function(t,r,i,o,s){var a=void 0!==s,u=a?s:new e(p);a||(u._propagateFrom(this,5),u._captureStackTrace());var l=this._target();l!==this\u0026\u0026(void 0===o\u0026\u0026(o=this._boundTo),a||u._setIsMigrated());var h=l._addCallbacks(t,r,i,u,o,n());return l._isResolved()\u0026\u0026!l._isSettlePromisesQueued()\u0026\u0026c.invoke(l._settlePromiseAtPostResolution,l,h),u},e.prototype._settlePromiseAtPostResolution=function(t){this._isRejectionUnhandled()\u0026\u0026this._unsetRejectionIsUnhandled(),this._settlePromiseAt(t)},e.prototype._length=function(){return 131071\u0026this._bitField},e.prototype._isFollowingOrFulfilledOrRejected=function(){return(939524096\u0026this._bitField)\u003e0},e.prototype._isFollowing=function(){return 536870912===(536870912\u0026this._bitField)},e.prototype._setLength=function(t){this._bitField=-131072\u0026this._bitField|131071\u0026t},e.prototype._setFulfilled=function(){this._bitField=268435456|this._bitField},e.prototype._setRejected=function(){this._bitField=134217728|this._bitField},e.prototype._setFollowing=function(){this._bitField=536870912|this._bitField},e.prototype._setIsFinal=function(){this._bitField=33554432|this._bitField},e.prototype._isFinal=function(){return(33554432\u0026this._bitField)\u003e0},e.prototype._cancellable=function(){return(67108864\u0026this._bitField)\u003e0},e.prototype._setCancellable=function(){this._bitField=67108864|this._bitField},e.prototype._unsetCancellable=function(){this._bitField=-67108865\u0026this._bitField},e.prototype._setIsMigrated=function(){this._bitField=4194304|this._bitField},e.prototype._unsetIsMigrated=function(){this._bitField=-4194305\u0026this._bitField},e.prototype._isMigrated=function(){return(4194304\u0026this._bitField)\u003e0},e.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[5*t-5+4];return e===u?void 0:void 0===e\u0026\u0026this._isBound()?this._boundValue():e},e.prototype._promiseAt=function(t){return 0===t?this._promise0:this[5*t-5+3]},e.prototype._fulfillmentHandlerAt=function(t){return 0===t?this._fulfillmentHandler0:this[5*t-5+0]},e.prototype._rejectionHandlerAt=function(t){return 0===t?this._rejectionHandler0:this[5*t-5+1]},e.prototype._boundValue=function(){var t=this._boundTo;return void 0!==t\u0026\u0026t instanceof e?t.isFulfilled()?t.value():void 0:t},e.prototype._migrateCallbacks=function(t,r){var n=t._fulfillmentHandlerAt(r),i=t._rejectionHandlerAt(r),o=t._progressHandlerAt(r),s=t._promiseAt(r),a=t._receiverAt(r);s instanceof e\u0026\u0026s._setIsMigrated(),void 0===a\u0026\u0026(a=u),this._addCallbacks(n,i,o,s,a,null)},e.prototype._addCallbacks=function(t,e,r,n,i,o){var s=this._length();if(s\u003e=131066\u0026\u0026(s=0,this._setLength(0)),0===s)this._promise0=n,void 0!==i\u0026\u0026(this._receiver0=i),\"function\"!=typeof t||this._isCarryingStackTrace()||(this._fulfillmentHandler0=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this._rejectionHandler0=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this._progressHandler0=null===o?r:o.bind(r));else{var a=5*s-5;this[a+3]=n,this[a+4]=i,\"function\"==typeof t\u0026\u0026(this[a+0]=null===o?t:o.bind(t)),\"function\"==typeof e\u0026\u0026(this[a+1]=null===o?e:o.bind(e)),\"function\"==typeof r\u0026\u0026(this[a+2]=null===o?r:o.bind(r))}return this._setLength(s+1),s},e.prototype._setProxyHandlers=function(t,e){var r=this._length();if(r\u003e=131066\u0026\u0026(r=0,this._setLength(0)),0===r)this._promise0=e,this._receiver0=t;else{var n=5*r-5;this[n+3]=e,this[n+4]=t}this._setLength(r+1)},e.prototype._proxyPromiseArray=function(t,e){this._setProxyHandlers(t,e)},e.prototype._resolveCallback=function(t,r){if(!this._isFollowingOrFulfilledOrRejected()){if(t===this)return this._rejectCallback(i(),!1,!0);var n=d(t,this);if(!(n instanceof e))return this._fulfill(t);var o=1|(r?4:0);this._propagateFrom(n,o);var s=n._target();if(s._isPending()){for(var a=this._length(),u=0;a\u003eu;++u)s._migrateCallbacks(this,u);this._setFollowing(),this._setLength(0),this._setFollowee(s)}else s._isFulfilled()?this._fulfillUnchecked(s._value()):this._rejectUnchecked(s._reason(),s._getCarriedStackTrace())}},e.prototype._rejectCallback=function(t,e,r){r||a.markAsOriginatingFromRejection(t);var n=a.ensureErrorObject(t),i=n===t;this._attachExtraTrace(n,e?i:!1),this._reject(t,i?void 0:n)},e.prototype._resolveFromResolver=function(t){var e=this;this._captureStackTrace(),this._pushContext();var r=!0,n=E(t)(function(t){null!==e\u0026\u0026(e._resolveCallback(t),e=null)},function(t){null!==e\u0026\u0026(e._rejectCallback(t,r),e=null)});r=!1,this._popContext(),void 0!==n\u0026\u0026n===k\u0026\u0026null!==e\u0026\u0026(e._rejectCallback(n.e,!0,!0),e=null)},e.prototype._settlePromiseFromHandler=function(t,e,r,n){if(!n._isRejected()){n._pushContext();var o;if(o=e!==f||this._isRejected()?E(t).call(e,r):E(t).apply(this._boundValue(),r),n._popContext(),o===k||o===n||o===_){var s=o===n?i():o.e;n._rejectCallback(s,!1,!0)}else n._resolveCallback(o)}},e.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},e.prototype._followee=function(){return this._rejectionHandler0},e.prototype._setFollowee=function(t){this._rejectionHandler0=t},e.prototype._cleanValues=function(){this._cancellable()\u0026\u0026(this._cancellationParent=void 0)},e.prototype._propagateFrom=function(t,e){(1\u0026e)\u003e0\u0026\u0026t._cancellable()\u0026\u0026(this._setCancellable(),this._cancellationParent=t),(4\u0026e)\u003e0\u0026\u0026t._isBound()\u0026\u0026this._setBoundTo(t._boundTo)},e.prototype._fulfill=function(t){this._isFollowingOrFulfilledOrRejected()||this._fulfillUnchecked(t)},e.prototype._reject=function(t,e){this._isFollowingOrFulfilledOrRejected()||this._rejectUnchecked(t,e)},e.prototype._settlePromiseAt=function(t){var r=this._promiseAt(t),n=r instanceof e;if(n\u0026\u0026r._isMigrated())return r._unsetIsMigrated(),c.invoke(this._settlePromiseAt,this,t);var i=this._isFulfilled()?this._fulfillmentHandlerAt(t):this._rejectionHandlerAt(t),o=this._isCarryingStackTrace()?this._getCarriedStackTrace():void 0,s=this._settledValue,a=this._receiverAt(t);this._clearCallbackDataAtIndex(t),\"function\"==typeof i?n?this._settlePromiseFromHandler(i,a,s,r):i.call(a,s,r):a instanceof v?a._isResolved()||(this._isFulfilled()?a._promiseFulfilled(s,r):a._promiseRejected(s,r)):n\u0026\u0026(this._isFulfilled()?r._fulfill(s):r._reject(s,o)),t\u003e=4\u0026\u00264===(31\u0026t)\u0026\u0026c.invokeLater(this._setLength,this,0)},e.prototype._clearCallbackDataAtIndex=function(t){if(0===t)this._isCarryingStackTrace()||(this._fulfillmentHandler0=void 0),this._rejectionHandler0=this._progressHandler0=this._receiver0=this._promise0=void 0;else{var e=5*t-5;this[e+3]=this[e+4]=this[e+0]=this[e+1]=this[e+2]=void 0}},e.prototype._isSettlePromisesQueued=function(){return-1073741824===(-1073741824\u0026this._bitField)},e.prototype._setSettlePromisesQueued=function(){this._bitField=-1073741824|this._bitField},e.prototype._unsetSettlePromisesQueued=function(){this._bitField=1073741823\u0026this._bitField},e.prototype._queueSettlePromises=function(){c.settlePromises(this),this._setSettlePromisesQueued()},e.prototype._fulfillUnchecked=function(t){if(t===this){var e=i();return this._attachExtraTrace(e),this._rejectUnchecked(e,void 0)}this._setFulfilled(),this._settledValue=t,this._cleanValues(),this._length()\u003e0\u0026\u0026this._queueSettlePromises()},e.prototype._rejectUncheckedCheckError=function(t){var e=a.ensureErrorObject(t);this._rejectUnchecked(t,e===t?void 0:e)},e.prototype._rejectUnchecked=function(t,e){if(t===this){var r=i();return this._attachExtraTrace(r),this._rejectUnchecked(r)}return this._setRejected(),this._settledValue=t,this._cleanValues(),this._isFinal()?void c.throwLater(function(t){throw\"stack\"in t\u0026\u0026c.invokeFirst(y.unhandledRejection,void 0,t),t},void 0===e?t:e):(void 0!==e\u0026\u0026e!==t\u0026\u0026this._setCarriedStackTrace(e),void(this._length()\u003e0?this._queueSettlePromises():this._ensurePossibleRejectionHandled()))},e.prototype._settlePromises=function(){this._unsetSettlePromisesQueued();for(var t=this._length(),e=0;t\u003ee;e++)this._settlePromiseAt(e)},a.notEnumerableProp(e,\"_makeSelfResolutionError\",i),t(\"./progress.js\")(e,v),t(\"./method.js\")(e,p,d,s),t(\"./bind.js\")(e,p,d),t(\"./finally.js\")(e,_,d),t(\"./direct_resolve.js\")(e),t(\"./synchronous_inspection.js\")(e),t(\"./join.js\")(e,v,d,p),e.Promise=e,t(\"./map.js\")(e,v,s,d,p),t(\"./cancel.js\")(e),t(\"./using.js\")(e,s,d,m),t(\"./generators.js\")(e,s,p,d),t(\"./nodeify.js\")(e),t(\"./call_get.js\")(e),t(\"./props.js\")(e,v,d,s),t(\"./race.js\")(e,p,d,s),t(\"./reduce.js\")(e,v,s,d,p),t(\"./settle.js\")(e,v),t(\"./some.js\")(e,v,s),t(\"./promisify.js\")(e,p),t(\"./any.js\")(e),t(\"./each.js\")(e,p),t(\"./timers.js\")(e,p),t(\"./filter.js\")(e,p),a.toFastProperties(e),a.toFastProperties(e.prototype),r({a:1}),r({b:2}),r({c:3}),r(1),r(function(){}),r(void 0),r(!1),r(new e(p)),y.setBounds(c.firstLineError,a.lastLineError),e}},{\"./any.js\":1,\"./async.js\":2,\"./bind.js\":3,\"./call_get.js\":5,\"./cancel.js\":6,\"./captured_trace.js\":7,\"./catch_filter.js\":8,\"./context.js\":9,\"./debuggability.js\":10,\"./direct_resolve.js\":11,\"./each.js\":12,\"./errors.js\":13,\"./filter.js\":15,\"./finally.js\":16,\"./generators.js\":17,\"./join.js\":18,\"./map.js\":19,\"./method.js\":20,\"./nodeify.js\":21,\"./progress.js\":22,\"./promise_array.js\":24,\"./promise_resolver.js\":25,\"./promisify.js\":26,\"./props.js\":27,\"./race.js\":29,\"./reduce.js\":30,\"./settle.js\":32,\"./some.js\":33,\"./synchronous_inspection.js\":34,\"./thenables.js\":35,\"./timers.js\":36,\"./using.js\":37,\"./util.js\":38}],24:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){switch(t){case-2:return[];case-3:return{}}}function s(t){var n,i=this._promise=new e(r);t instanceof e\u0026\u0026(n=t,i._propagateFrom(n,5)),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var a=t(\"./util.js\"),u=a.isArray;return s.prototype.length=function(){return this._length},s.prototype.promise=function(){return this._promise},s.prototype._init=function c(t,r){var s=n(this._values,this._promise);if(s instanceof e){if(s=s._target(),this._values=s,!s._isFulfilled())return s._isPending()?void s._then(c,this._reject,void 0,this,r):void this._reject(s._reason());if(s=s._value(),!u(s)){var a=new e.TypeError(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");return void this.__hardReject__(a)}}else if(!u(s))return void this._promise._reject(i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\")._reason());if(0===s.length)return void(-5===r?this._resolveEmptyArray():this._resolve(o(r)));var l=this.getActualLength(s.length);this._length=l,this._values=this.shouldCopyValues()?new Array(l):this._values;for(var h=this._promise,p=0;l\u003ep;++p){var f=this._isResolved(),_=n(s[p],h);_ instanceof e?(_=_._target(),f?_._ignoreRejections():_._isPending()?_._proxyPromiseArray(this,p):_._isFulfilled()?this._promiseFulfilled(_._value(),p):this._promiseRejected(_._reason(),p)):f||this._promiseFulfilled(_,p)}},s.prototype._isResolved=function(){return null===this._values},s.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},s.prototype.__hardReject__=s.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1,!0)},s.prototype._promiseProgressed=function(t,e){this._promise._progress({index:e,value:t})},s.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},s.prototype._promiseRejected=function(t){this._totalResolved++,this._reject(t)},s.prototype.shouldCopyValues=function(){return!0},s.prototype.getActualLength=function(t){return t},s}},{\"./util.js\":38}],25:[function(t,e){\"use strict\";function r(t){return t instanceof Error\u0026\u0026p.getPrototypeOf(t)===Error.prototype}function n(t){var e;if(r(t)){e=new l(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=p.keys(t),i=0;i\u003cn.length;++i){var o=n[i];f.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function i(t){return function(e,r){if(null!==t){if(e){var i=n(a(e));t._attachExtraTrace(i),t._reject(i)}else if(arguments.length\u003e2){for(var o=arguments.length,s=new Array(o-1),u=1;o\u003eu;++u)s[u-1]=arguments[u];t._fulfill(s)}else t._fulfill(r);t=null}}}var o,s=t(\"./util.js\"),a=s.maybeWrapAsError,u=t(\"./errors.js\"),c=u.TimeoutError,l=u.OperationalError,h=s.haveGetters,p=t(\"./es5.js\"),f=/^(?:name|message|stack|cause)$/;if(o=h?function(t){this.promise=t}:function(t){this.promise=t,this.asCallback=i(t),this.callback=this.asCallback},h){var _={get:function(){return i(this.promise)}};p.defineProperty(o.prototype,\"asCallback\",_),p.defineProperty(o.prototype,\"callback\",_)}o._nodebackForPromise=i,o.prototype.toString=function(){return\"[object PromiseResolver]\"},o.prototype.resolve=o.prototype.fulfill=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._resolveCallback(t)},o.prototype.reject=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._rejectCallback(t)},o.prototype.progress=function(t){if(!(this instanceof o))throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\n\\n    See http://goo.gl/sdkXL9\\n\");this.promise._progress(t)},o.prototype.cancel=function(t){this.promise.cancel(t)},o.prototype.timeout=function(){this.reject(new c(\"timeout\"))},o.prototype.isResolved=function(){return this.promise.isResolved()},o.prototype.toJSON=function(){return this.promise.toJSON()},e.exports=o},{\"./errors.js\":13,\"./es5.js\":14,\"./util.js\":38}],26:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){return!w.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,r){var n=f.getDataPropertyOrDefault(t,e+r,j);return n?i(n):!1}function s(t,e,r){for(var n=0;n\u003ct.length;n+=2){var i=t[n];if(r.test(i))for(var o=i.replace(r,\"\"),s=0;s\u003ct.length;s+=2)if(t[s]===o)throw new g(\"Cannot promisify an API that has normal methods with '%s'-suffix\\n\\n    See http://goo.gl/iWrZbw\\n\".replace(\"%s\",e))}}function a(t,e,r,n){for(var a=f.inheritedDataKeys(t),u=[],c=0;c\u003ca.length;++c){var l=a[c],h=t[l],p=n===k?!0:k(l,h,t);\"function\"!=typeof h||i(h)||o(t,l,e)||!n(l,h,t,p)||u.push(l,h)}return s(u,e,r),u}function u(t,n,i,o){function s(){var i=n;n===p\u0026\u0026(i=this);var o=new e(r);o._captureStackTrace();var s=\"string\"==typeof u\u0026\u0026this!==a?this[u]:t,c=_(o);try{s.apply(i,d(arguments,c))}catch(l){o._rejectCallback(v(l),!0,!0)}return o}var a=function(){return this}(),u=t;return\"string\"==typeof u\u0026\u0026(t=o),f.notEnumerableProp(s,\"__isPromisified__\",!0),s}function c(t,e,r,n){for(var i=new RegExp(E(e)+\"$\"),o=a(t,e,i,r),s=0,u=o.length;u\u003es;s+=2){var c=o[s],l=o[s+1],h=c+e;if(n===F)t[h]=F(c,p,c,l,e);else{var _=n(l,function(){return F(c,p,c,l,e)});f.notEnumerableProp(_,\"__isPromisified__\",!0),t[h]=_}}return f.toFastProperties(t),t}function l(t,e){return F(t,e,void 0,t)}var h,p={},f=t(\"./util.js\"),_=t(\"./promise_resolver.js\")._nodebackForPromise,d=f.withAppended,v=f.maybeWrapAsError,y=f.canEvaluate,g=t(\"./errors\").TypeError,m=\"Async\",j={__isPromisified__:!0},b=[\"arity\",\"length\",\"name\",\"arguments\",\"caller\",\"callee\",\"prototype\",\"__isPromisified__\"],w=new RegExp(\"^(?:\"+b.join(\"|\")+\")$\"),k=function(t){return f.isIdentifier(t)\u0026\u0026\"_\"!==t.charAt(0)\u0026\u0026\"constructor\"!==t},E=function(t){return t.replace(/([$])/,\"\\\\$\")},F=y?h:u;e.promisify=function(t,e){if(\"function\"!=typeof t)throw new g(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");if(i(t))return t;var r=l(t,arguments.length\u003c2?p:e);return f.copyDescriptors(t,r,n),r},e.promisifyAll=function(t,e){if(\"function\"!=typeof t\u0026\u0026\"object\"!=typeof t)throw new g(\"the target of promisifyAll must be an object or a function\\n\\n    See http://goo.gl/9ITlV0\\n\");e=Object(e);var r=e.suffix;\"string\"!=typeof r\u0026\u0026(r=m);var n=e.filter;\"function\"!=typeof n\u0026\u0026(n=k);var i=e.promisifier;if(\"function\"!=typeof i\u0026\u0026(i=F),!f.isIdentifier(r))throw new RangeError(\"suffix must be a valid identifier\\n\\n    See http://goo.gl/8FZo5V\\n\");for(var o=f.inheritedDataKeys(t),s=0;s\u003co.length;++s){var a=t[o[s]];\"constructor\"!==o[s]\u0026\u0026f.isClass(a)\u0026\u0026(c(a.prototype,r,n,i),c(a,r,n,i))}return c(t,r,n,i)}}},{\"./errors\":13,\"./promise_resolver.js\":25,\"./util.js\":38}],27:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var e=c.keys(t),r=e.length,n=new Array(2*r),i=0;r\u003ei;++i){var o=e[i];n[i]=t[o],n[i+r]=o}this.constructor$(n)}function s(t){var r,s=n(t);return u(s)?(r=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e\u0026\u0026r._propagateFrom(s,4),r):i(\"cannot await properties of a non-object\\n\\n    See http://goo.gl/OsFKC8\\n\")}var a=t(\"./util.js\"),u=a.isObject,c=t(\"./es5.js\");a.inherits(o,r),o.prototype._init=function(){this._init$(void 0,-3)},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var r=++this._totalResolved;if(r\u003e=this._length){for(var n={},i=this.length(),o=0,s=this.length();s\u003eo;++o)n[this._values[o+i]]=this._values[o];this._resolve(n)}},o.prototype._promiseProgressed=function(t,e){this._promise._progress({key:this._values[e+this.length()],value:t})},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t\u003e\u003e1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{\"./es5.js\":14,\"./util.js\":38}],28:[function(t,e){\"use strict\";function r(t,e,r,n,i){for(var o=0;i\u003eo;++o)r[o+n]=t[o+e],t[o+e]=void 0}function n(t){this._capacity=t,this._length=0,this._front=0}n.prototype._willBeOverCapacity=function(t){return this._capacity\u003ct},n.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var r=this._front+e\u0026this._capacity-1;this[r]=t,this._length=e+1},n.prototype._unshiftOne=function(t){var e=this._capacity;this._checkCapacity(this.length()+1);var r=this._front,n=(r-1\u0026e-1^e)-e;this[n]=t,this._front=n,this._length=this.length()+1},n.prototype.unshift=function(t,e,r){this._unshiftOne(r),this._unshiftOne(e),this._unshiftOne(t)},n.prototype.push=function(t,e,r){var n=this.length()+3;if(this._willBeOverCapacity(n))return this._pushOne(t),this._pushOne(e),void this._pushOne(r);var i=this._front+n-3;this._checkCapacity(n);var o=this._capacity-1;this[i+0\u0026o]=t,this[i+1\u0026o]=e,this[i+2\u0026o]=r,this._length=n},n.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1\u0026this._capacity-1,this._length--,e},n.prototype.length=function(){return this._length},n.prototype._checkCapacity=function(t){this._capacity\u003ct\u0026\u0026this._resizeTo(this._capacity\u003c\u003c1)},n.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i\u0026e-1;r(this,0,this,e,o)},e.exports=n},{}],29:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t,o){var u=n(t);if(u instanceof e)return a(u);if(!s(t))return i(\"expecting an array, a promise or a thenable\\n\\n    See http://goo.gl/s8MMhc\\n\");var c=new e(r);void 0!==o\u0026\u0026c._propagateFrom(o,5);for(var l=c._fulfill,h=c._reject,p=0,f=t.length;f\u003ep;++p){var _=t[p];(void 0!==_||p in t)\u0026\u0026e.cast(_)._then(l,h,void 0,c,null)}return c}var s=t(\"./util.js\").isArray,a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{\"./util.js\":38}],30:[function(t,e){\"use strict\";e.exports=function(e,r,n,i,o){function s(t,r,n,s){this.constructor$(t),this._promise._captureStackTrace(),this._preservedValues=s===o?[]:null,this._zerothIsAccum=void 0===n,this._gotAccum=!1,this._reducingIndex=this._zerothIsAccum?1:0,this._valuesPhase=void 0;var u=i(n,this._promise),h=!1,p=u instanceof e;p\u0026\u0026(u=u._target(),u._isPending()?u._proxyPromiseArray(this,-1):u._isFulfilled()?(n=u._value(),this._gotAccum=!0):(this._reject(u._reason()),h=!0)),p||this._zerothIsAccum||(this._gotAccum=!0);var f=c();this._callback=null===f?r:f.bind(r),this._accum=n,h||l.invoke(a,this,void 0)}function a(){this._init$(void 0,-5)}function u(t,e,r,i){if(\"function\"!=typeof e)return n(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var o=new s(t,e,r,i);return o.promise()}var c=e._getDomain,l=t(\"./async.js\"),h=t(\"./util.js\"),p=h.tryCatch,f=h.errorObj;h.inherits(s,r),s.prototype._init=function(){},s.prototype._resolveEmptyArray=function(){(this._gotAccum||this._zerothIsAccum)\u0026\u0026this._resolve(null!==this._preservedValues?[]:this._accum)},s.prototype._promiseFulfilled=function(t,r){var n=this._values;n[r]=t;var o,s=this.length(),a=this._preservedValues,u=null!==a,c=this._gotAccum,l=this._valuesPhase;if(!l)for(l=this._valuesPhase=new Array(s),o=0;s\u003eo;++o)l[o]=0;if(o=l[r],0===r\u0026\u0026this._zerothIsAccum?(this._accum=t,this._gotAccum=c=!0,l[r]=0===o?1:2):-1===r?(this._accum=t,this._gotAccum=c=!0):0===o?l[r]=1:(l[r]=2,this._accum=t),c){for(var h,_=this._callback,d=this._promise._boundValue(),v=this._reducingIndex;s\u003ev;++v)if(o=l[v],2!==o){if(1!==o)return;if(t=n[v],this._promise._pushContext(),u?(a.push(t),h=p(_).call(d,t,v,s)):h=p(_).call(d,this._accum,t,v,s),this._promise._popContext(),h===f)return this._reject(h.e);var y=i(h,this._promise);if(y instanceof e){if(y=y._target(),y._isPending())return l[v]=4,y._proxyPromiseArray(this,v);if(!y._isFulfilled())return this._reject(y._reason());h=y._value()}this._reducingIndex=v+1,this._accum=h}else this._reducingIndex=v+1;this._resolve(u?a:this._accum)}},e.prototype.reduce=function(t,e){return u(this,t,e,null)},e.reduce=function(t,e,r,n){return u(t,e,r,n)}}},{\"./async.js\":2,\"./util.js\":38}],31:[function(t,e){\"use strict\";var r,n=t(\"./util\"),i=function(){throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/m3OTXk\\n\")};if(n.isNode\u0026\u0026\"undefined\"==typeof MutationObserver){var o=global.setImmediate,s=process.nextTick;r=n.isRecentNode?function(t){o.call(global,t)}:function(t){s.call(process,t)}}else\"undefined\"==typeof MutationObserver||\"undefined\"!=typeof window\u0026\u0026window.navigator\u0026\u0026window.navigator.standalone?r=\"undefined\"!=typeof setImmediate?function(t){setImmediate(t)}:\"undefined\"!=typeof setTimeout?function(t){setTimeout(t,0)}:i:(r=function(t){var e=document.createElement(\"div\"),r=new MutationObserver(t);return r.observe(e,{attributes:!0}),function(){e.classList.toggle(\"foo\")}},r.isStatic=!0);e.exports=r},{\"./util\":38}],32:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){this.constructor$(t)}var i=e.PromiseInspection,o=t(\"./util.js\");o.inherits(n,r),n.prototype._promiseResolved=function(t,e){this._values[t]=e;var r=++this._totalResolved;r\u003e=this._length\u0026\u0026this._resolve(this._values)},n.prototype._promiseFulfilled=function(t,e){var r=new i;r._bitField=268435456,r._settledValue=t,this._promiseResolved(e,r)},n.prototype._promiseRejected=function(t,e){var r=new i;r._bitField=134217728,r._settledValue=t,this._promiseResolved(e,r)},e.settle=function(t){return new n(t).promise()},e.prototype.settle=function(){return new n(this).promise()}}},{\"./util.js\":38}],33:[function(t,e){\"use strict\";e.exports=function(e,r,n){function i(t){this.constructor$(t),this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0\u003ee)return n(\"expecting a positive integer\\n\\n    See http://goo.gl/1wAmHx\\n\");var r=new i(t),o=r.promise();return r.setHowMany(e),r.init(),o}var s=t(\"./util.js\"),a=t(\"./errors.js\").RangeError,u=t(\"./errors.js\").AggregateError,c=s.isArray;s.inherits(i,r),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=c(this._values);!this._isResolved()\u0026\u0026t\u0026\u0026this._howMany\u003ethis._canPossiblyFulfill()\u0026\u0026this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){this._addFulfilled(t),this._fulfilled()===this.howMany()\u0026\u0026(this._values.length=this.howMany(),this._resolve(1===this.howMany()\u0026\u0026this._unwrap?this._values[0]:this._values))},i.prototype._promiseRejected=function(t){if(this._addRejected(t),this.howMany()\u003ethis._canPossiblyFulfill()){for(var e=new u,r=this.length();r\u003cthis._values.length;++r)e.push(this._values[r]);this._reject(e)}},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e=\"Input array must contain at least \"+this._howMany+\" items but contains only \"+t+\" items\";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{\"./errors.js\":13,\"./util.js\":38}],34:[function(t,e){\"use strict\";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValue=t._settledValue):(this._bitField=0,this._settledValue=void 0)}e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return this._settledValue},e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return this._settledValue},e.prototype.isFulfilled=t.prototype._isFulfilled=function(){return(268435456\u0026this._bitField)\u003e0},e.prototype.isRejected=t.prototype._isRejected=function(){return(134217728\u0026this._bitField)\u003e0},e.prototype.isPending=t.prototype._isPending=function(){return 0===(402653184\u0026this._bitField)},e.prototype.isResolved=t.prototype._isResolved=function(){return(402653184\u0026this._bitField)\u003e0},t.prototype.isPending=function(){return this._target()._isPending()},t.prototype.isRejected=function(){return this._target()._isRejected()},t.prototype.isFulfilled=function(){return this._target()._isFulfilled()},t.prototype.isResolved=function(){return this._target()._isResolved()},t.prototype._value=function(){return this._settledValue},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue},t.prototype.value=function(){var t=this._target();if(!t.isFulfilled())throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/hc1DLj\\n\");return t._settledValue},t.prototype.reason=function(){var t=this._target();if(!t.isRejected())throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/hPuiwB\\n\");return t._unsetRejectionIsUnhandled(),t._settledValue},t.PromiseInspection=e}},{}],35:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t,n){if(c(t)){if(t instanceof e)return t;if(o(t)){var l=new e(r);return t._then(l._fulfillUnchecked,l._rejectUncheckedCheckError,l._progressUnchecked,l,null),l}var h=a.tryCatch(i)(t);if(h===u){n\u0026\u0026n._pushContext();var l=e.reject(h.e);return n\u0026\u0026n._popContext(),l}if(\"function\"==typeof h)return s(t,h,n)}return t}function i(t){return t.then}function o(t){return l.call(t,\"_promise0\")}function s(t,n,i){function o(t){l\u0026\u0026(l._resolveCallback(t),l=null)}function s(t){l\u0026\u0026(l._rejectCallback(t,p,!0),l=null)}function c(t){l\u0026\u0026\"function\"==typeof l._progress\u0026\u0026l._progress(t)}var l=new e(r),h=l;i\u0026\u0026i._pushContext(),l._captureStackTrace(),i\u0026\u0026i._popContext();var p=!0,f=a.tryCatch(n).call(t,o,s,c);return p=!1,l\u0026\u0026f===u\u0026\u0026(l._rejectCallback(f.e,!0,!0),l=null),h}var a=t(\"./util.js\"),u=a.errorObj,c=a.isObject,l={}.hasOwnProperty;return n}},{\"./util.js\":38}],36:[function(t,e){\"use strict\";e.exports=function(e,r){function n(t){var e=this;return e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}function i(t){var e=this;throw e instanceof Number\u0026\u0026(e=+e),clearTimeout(e),t}var o=t(\"./util.js\"),s=e.TimeoutError,a=function(t,e){if(t.isPending()){var r;!o.isPrimitive(e)\u0026\u0026e instanceof Error?r=e:(\"string\"!=typeof e\u0026\u0026(e=\"operation timed out\"),r=new s(e)),o.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._cancel(r)}},u=function(t){return c(+this).thenReturn(t)},c=e.delay=function(t,n){if(void 0===n){n=t,t=void 0;var i=new e(r);return setTimeout(function(){i._fulfill()},n),i}return n=+n,e.resolve(t)._then(u,null,null,n,void 0)};e.prototype.delay=function(t){return c(this,t)},e.prototype.timeout=function(t,e){t=+t;var r=this.then().cancellable();r._cancellationParent=this;var o=setTimeout(function(){a(r,e)},t);return r._then(n,i,void 0,o,void 0)}}},{\"./util.js\":38}],37:[function(t,e){\"use strict\";e.exports=function(e,r,n,i){function o(t){for(var r=t.length,n=0;r\u003en;++n){var i=t[n];if(i.isRejected())return e.reject(i.error());t[n]=i._settledValue}return t}function s(t){setTimeout(function(){throw t},0)}function a(t){var e=n(t);return e!==t\u0026\u0026\"function\"==typeof t._isDisposable\u0026\u0026\"function\"==typeof t._getDisposer\u0026\u0026t._isDisposable()\u0026\u0026e._setDisposable(t._getDisposer()),e}function u(t,r){function i(){if(o\u003e=u)return c.resolve();var l=a(t[o++]);if(l instanceof e\u0026\u0026l._isDisposable()){try{l=n(l._getDisposer().tryDispose(r),t.promise)}catch(h){return s(h)}if(l instanceof e)return l._then(i,s,null,null,null)}i()}var o=0,u=t.length,c=e.defer();return i(),c.promise}function c(t){var e=new v;return e._settledValue=t,e._bitField=268435456,u(this,e).thenReturn(t)}function l(t){var e=new v;return e._settledValue=t,e._bitField=134217728,u(this,e).thenThrow(t)}function h(t,e,r){this._data=t,this._promise=e,this._context=r}function p(t,e,r){this.constructor$(t,e,r)}function f(t){return h.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}var _=t(\"./errors.js\").TypeError,d=t(\"./util.js\").inherits,v=e.PromiseInspection;h.prototype.data=function(){return this._data},h.prototype.promise=function(){return this._promise},h.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():null},h.prototype.tryDispose=function(t){var e=this.resource(),r=this._context;void 0!==r\u0026\u0026r._pushContext();var n=null!==e?this.doDispose(e,t):null;return void 0!==r\u0026\u0026r._popContext(),this._promise._unsetDisposable(),this._data=null,n},h.isDisposer=function(t){return null!=t\u0026\u0026\"function\"==typeof t.resource\u0026\u0026\"function\"==typeof t.tryDispose},d(p,h),p.prototype.doDispose=function(t,e){var r=this.data();return r.call(t,t,e)},e.using=function(){var t=arguments.length;if(2\u003et)return r(\"you must pass at least 2 arguments to Promise.using\");var i=arguments[t-1];if(\"function\"!=typeof i)return r(\"fn must be a function\\n\\n    See http://goo.gl/916lJJ\\n\");var s,a=!0;2===t\u0026\u0026Array.isArray(arguments[0])?(s=arguments[0],t=s.length,a=!1):(s=arguments,t--);for(var u=new Array(t),p=0;t\u003ep;++p){var _=s[p];if(h.isDisposer(_)){var d=_;_=_.promise(),_._setDisposable(d)", "}elsevar v=n(_);v instanceof e\u0026\u0026(_=v._then(f,null,null,{resources:u,index:p},void 0))}u[p]=_}var y=e.settle(u).then(o).then(function(t){y._pushContext();var e;try{e=a?i.apply(void 0,t):i.call(void 0,t)}finally{y._popContext()}return e})._then(c,l,void 0,u,void 0);return u.promise=y,y},e.prototype._setDisposable=function(t){this._bitField=262144|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(262144\u0026this._bitField)\u003e0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-262145\u0026this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if(\"function\"==typeof t)return new p(t,this,i());throw new _}}},{\"./errors.js\":13,\"./util.js\":38}],38:[function(t,e,r){\"use strict\";function n(){try{var t=C;return C=null,t.apply(this,arguments)}catch(e){return F.e=e,F}}function i(t){return C=t,n}function o(t){return null==t||t===!0||t===!1||\"string\"==typeof t||\"number\"==typeof t}function s(t){return!o(t)}function a(t){return o(t)?new Error(v(t)):t}function u(t,e){var r,n=t.length,i=new Array(n+1);for(r=0;n\u003er;++r)i[r]=t[r];return i[r]=e,i}function c(t,e,r){if(!w.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var n=Object.getOwnPropertyDescriptor(t,e);return null!=n?null==n.get\u0026\u0026null==n.set?n.value:r:void 0}function l(t,e,r){if(o(t))return t;var n={value:r,configurable:!0,enumerable:!1,writable:!0};return w.defineProperty(t,e,n),t}function h(t){throw t}function p(t){try{if(\"function\"==typeof t){var e=w.names(t.prototype),r=w.isES5\u0026\u0026e.length\u003e1,n=e.length\u003e0\u0026\u0026!(1===e.length\u0026\u0026\"constructor\"===e[0]),i=x.test(t+\"\")\u0026\u0026w.names(t).length\u003e0;if(r||n||i)return!0}return!1}catch(o){return!1}}function f(t){function e(){}e.prototype=t;for(var r=8;r--;)new e;return t}function _(t){return R.test(t)}function d(t,e,r){for(var n=new Array(t),i=0;t\u003ei;++i)n[i]=e+i+r;return n}function v(t){try{return t+\"\"}catch(e){return\"[no string representation]\"}}function y(t){try{l(t,\"isOperational\",!0)}catch(e){}}function g(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function m(t){return t instanceof Error\u0026\u0026w.propertyIsWritable(t,\"stack\")}function j(t){return{}.toString.call(t)}function b(t,e,r){for(var n=w.names(t),i=0;i\u003cn.length;++i){var o=n[i];if(r(o))try{w.defineProperty(e,o,w.getDescriptor(t,o))}catch(s){}}}var w=t(\"./es5.js\"),k=\"undefined\"==typeof navigator,E=function(){try{var t={};return w.defineProperty(t,\"f\",{get:function(){return 3}}),3===t.f}catch(e){return!1}}(),F={e:{}},C,P=function(t,e){function r(){this.constructor=t,this.constructor$=e;for(var r in e.prototype)n.call(e.prototype,r)\u0026\u0026\"$\"!==r.charAt(r.length-1)\u0026\u0026(this[r+\"$\"]=e.prototype[r])}var n={}.hasOwnProperty;return r.prototype=e.prototype,t.prototype=new r,t.prototype},T=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var r=0;r\u003ct.length;++r)if(t[r]===e)return!0;return!1};if(w.isES5){var r=Object.getOwnPropertyNames;return function(t){for(var n=[],i=Object.create(null);null!=t\u0026\u0026!e(t);){var o;try{o=r(t)}catch(s){return n}for(var a=0;a\u003co.length;++a){var u=o[a];if(!i[u]){i[u]=!0;var c=Object.getOwnPropertyDescriptor(t,u);null!=c\u0026\u0026null==c.get\u0026\u0026null==c.set\u0026\u0026n.push(u)}}t=w.getPrototypeOf(t)}return n}}var n={}.hasOwnProperty;return function(r){if(e(r))return[];var i=[];t:for(var o in r)if(n.call(r,o))i.push(o);else{for(var s=0;s\u003ct.length;++s)if(n.call(t[s],o))continue t;i.push(o)}return i}}(),x=/this\\s*\\.\\s*\\S+\\s*=/,R=/^[a-z$_][a-z$_0-9]*$/i,S=function(){return\"stack\"in new Error?function(t){return m(t)?t:new Error(v(t))}:function(t){if(m(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),A={isClass:p,isIdentifier:_,inheritedDataKeys:T,getDataPropertyOrDefault:c,thrower:h,isArray:w.isArray,haveGetters:E,notEnumerableProp:l,isPrimitive:o,isObject:s,canEvaluate:k,errorObj:F,tryCatch:i,inherits:P,withAppended:u,maybeWrapAsError:a,toFastProperties:f,filledRange:d,toString:v,canAttachTrace:m,ensureErrorObject:S,originatesFromRejection:g,markAsOriginatingFromRejection:y,classString:j,copyDescriptors:b,hasDevTools:\"undefined\"!=typeof chrome\u0026\u0026chrome\u0026\u0026\"function\"==typeof chrome.loadTimes,isNode:\"undefined\"!=typeof process\u0026\u0026\"[object process]\"===j(process).toLowerCase()};A.isRecentNode=A.isNode\u0026\u0026function(){var t=process.versions.node.split(\".\").map(Number);return 0===t[0]\u0026\u0026t[1]\u003e10||t[0]\u003e0}(),A.isNode\u0026\u0026A.toFastProperties(process);try{throw new Error}catch(O){A.lastLineError=O}e.exports=A},{\"./es5.js\":14}]},{},[4])(4)}),\"undefined\"!=typeof window\u0026\u0026null!==window?window.P=window.Promise:\"undefined\"!=typeof self\u0026\u0026null!==self\u0026\u0026(self.P=self.Promise);"],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\any.js",
		"LineCount": 22,
		"CharCount": 400,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "function any(promises) ", "Promise.any = function (promises) ", "Promise.prototype.any = function () "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\assert.js",
		"LineCount": 56,
		"CharCount": 1584,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = (function()", "var AssertionError = (function() ", "    function AssertionError(a) ", "function getParams(args) ", "function nativeAssert(callName, args, expect) ", "return function assert(boolExpr, message) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\async.js",
		"LineCount": 151,
		"CharCount": 3803,
		"Comments": ["\"use strict\";", "-----------------------------------", "        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["function Async() ", "    this.drainQueues = function () ", "Async.prototype.disableTrampolineIfNecessary = function() ", "Async.prototype.enableTrampoline = function() ", "        this._schedule = function(fn) ", "Async.prototype.haveItemsQueued = function () ", "Async.prototype.throwLater = function(fn, arg) ", "        fn = function ()  throw arg; };", "        setTimeout(function() ", "        this._schedule(function() ", "function AsyncInvokeLater(fn, receiver, arg) ", "function AsyncInvoke(fn, receiver, arg) ", "function AsyncSettlePromises(promise) ", "        schedule = function(fn)  setTimeout(fn, 0); };", "    Async.prototype.invokeLater = function (fn, receiver, arg) ", "            this._schedule(function() ", "                setTimeout(function() ", "    Async.prototype.invoke = function (fn, receiver, arg) ", "            this._schedule(function() ", "    Async.prototype.settlePromises = function(promise) ", "            this._schedule(function() ", "Async.prototype.invokeFirst = function (fn, receiver, arg) ", "Async.prototype._drainQueue = function(queue) ", "        if (typeof fn !== \"function\") ", "Async.prototype._drainQueues = function () ", "Async.prototype._queueTick = function () ", "Async.prototype._reset = function () "],
		"Dependencies": ["./schedule.js", "./queue.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\bind.js",
		"LineCount": 73,
		"CharCount": 1940,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL, tryConvertToPromise) ", "var rejectThis = function(_, e) ", "var targetRejected = function(e, context) ", "var bindingResolved = function(thisArg, context) ", "var bindingRejected = function(e, context) ", "Promise.prototype.bind = function (thisArg) ", "Promise.prototype._setBoundTo = function (obj) ", "Promise.prototype._isBound = function () ", "Promise.bind = function (thisArg, value) ", "        maybePromise._then(function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\bluebird.js",
		"LineCount": 12,
		"CharCount": 283,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["function noConflict() "],
		"Dependencies": ["./promise.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\call_get.js",
		"LineCount": 124,
		"CharCount": 4221,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "var makeMethodCaller = function (methodName) ", "        return function(obj)                                                \\n\\", "var makeGetter = function (propertyName) ", "var getCompiled = function(name, compiler, cache) ", "    if (typeof ret !== \"function\") ", "getMethodCaller = function(name) ", "getGetter = function(name) ", "function ensureMethod(obj, methodName) ", "    if (typeof fn !== \"function\") ", "function caller(obj) ", "Promise.prototype.call = function (methodName) ", "function namedGetter(obj) ", "function indexedGetter(obj) ", "Promise.prototype.get = function (propertyName) "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\cancel.js",
		"LineCount": 49,
		"CharCount": 1350,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "Promise.prototype._cancel = function (reason) ", "Promise.prototype.cancel = function (reason) ", "Promise.prototype.cancellable = function () ", "Promise.prototype.uncancellable = function () ", "Promise.prototype.fork = function (didFulfill, didReject, didProgress) "],
		"Dependencies": ["./errors.js", "./async.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\captured_trace.js",
		"LineCount": 494,
		"CharCount": 14553,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function() ", "function CapturedTrace(parent) ", "CapturedTrace.prototype.uncycle = function() ", "CapturedTrace.prototype.parent = function() ", "CapturedTrace.prototype.hasParent = function() ", "CapturedTrace.prototype.attachExtraTrace = function(error) ", "function reconstructStack(message, stacks) ", "function removeDuplicateOrEmptyJumps(stacks) ", "function removeCommonRoots(stacks) ", "function cleanStack(stack) ", "function stackFramesAsArray(error) ", "CapturedTrace.parseStackAndMessage = function(error) ", "CapturedTrace.formatAndLogError = function(error, title) ", "        if (typeof error === \"object\" || typeof error === \"function\") ", "        if (typeof warn === \"function\") ", "        } else if (typeof console.log === \"function\" ||", "CapturedTrace.unhandledRejection = function (reason) ", "CapturedTrace.isSupported = function () ", "    return typeof captureStackTrace === \"function\";", "function(name, localHandler, reason, promise) ", "        if (typeof localHandler === \"function\") ", "function formatNonError(obj) ", "    if (typeof obj === \"function\") ", "        str = \"[function \" +", "function snip(str) ", "var shouldIgnore = function()  return false; };", "function parseLineInfo(line) ", "CapturedTrace.setBounds = function(firstLineError, lastLineError) ", "    shouldIgnore = function(line) ", "var captureStackTrace = (function stackDetection() ", "    var v8stackFormatter = function(stack, error) ", "        typeof Error.captureStackTrace === \"function\") ", "        shouldIgnore = function(line) ", "        return function(receiver, ignoreUntil) ", "        return function captureStackTrace(o) ", "        return function captureStackTrace(o) ", "    formatStack = function(stack, error) ", "            typeof error === \"function\") \u0026\u0026", "var fireGlobalEvent = (function() ", "        return function(name, reason, promise) ", "            fireDomEvent = function(type, detail) ", "        return function(name, reason, promise) ", "    warn = function (message) ", "        warn = function(message) ", "        warn = function(message) "],
		"Dependencies": ["./async.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\catch_filter.js",
		"LineCount": 67,
		"CharCount": 2008,
		"Comments": ["\"use strict\";", "-----------------------------------", "        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");", "        return errorObj;", "-----------------------------------"],
		"Functions": ["module.exports = function(NEXT_FILTER) ", "function CatchFilter(instances, callback, promise) ", "function safePredicate(predicate, e) ", "        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");", "CatchFilter.prototype.doFilter = function (e) ", "        } else if (typeof item === \"function\" \u0026\u0026 !itemIsErrorType) "],
		"Dependencies": ["./util.js", "./errors.js", "./es5.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\context.js",
		"LineCount": 39,
		"CharCount": 900,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, CapturedTrace, isDebugging) ", "function Context() ", "Context.prototype._pushContext = function () ", "Context.prototype._popContext = function () ", "function createContext() ", "function peekContext() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\debuggability.js",
		"LineCount": 163,
		"CharCount": 4986,
		"Comments": ["\"use strict\";", "-----------------------------------", "        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/DT1qyG\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, CapturedTrace) ", "Promise.prototype._ignoreRejections = function() ", "Promise.prototype._ensurePossibleRejectionHandled = function () ", "Promise.prototype._notifyUnhandledRejectionIsHandled = function () ", "Promise.prototype._notifyUnhandledRejection = function () ", "Promise.prototype._setUnhandledRejectionIsNotified = function () ", "Promise.prototype._unsetUnhandledRejectionIsNotified = function () ", "Promise.prototype._isUnhandledRejectionNotified = function () ", "Promise.prototype._setRejectionIsUnhandled = function () ", "Promise.prototype._unsetRejectionIsUnhandled = function () ", "Promise.prototype._isRejectionUnhandled = function () ", "Promise.prototype._setCarriedStackTrace = function (capturedTrace) ", "Promise.prototype._isCarryingStackTrace = function () ", "Promise.prototype._getCarriedStackTrace = function () ", "Promise.prototype._captureStackTrace = function () ", "Promise.prototype._attachExtraTrace = function (error, ignoreSelf) ", "Promise.prototype._warn = function(message) ", "Promise.onPossiblyUnhandledRejection = function (fn) ", "        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))", "Promise.onUnhandledRejectionHandled = function (fn) ", "        typeof fn === \"function\" ? (domain === null ? fn : domain.bind(fn))", "Promise.longStackTraces = function () ", "Promise.hasLongStackTraces = function () ", "    Promise.longStackTraces = function()};", "return function() "],
		"Dependencies": ["./async.js", "./errors.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\direct_resolve.js",
		"LineCount": 64,
		"CharCount": 1403,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "var returner = function () ", "var thrower = function () ", "var returnUndefined = function() };", "var throwUndefined = function() ", "var wrapper = function (value, action) ", "        return function () ", "        return function () ", "Promise.prototype.thenReturn = function (value) ", "Promise.prototype.thenThrow = function (reason) "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\each.js",
		"LineCount": 13,
		"CharCount": 286,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL) ", "Promise.prototype.each = function (fn) ", "Promise.each = function (promises, fn) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\errors.js",
		"LineCount": 112,
		"CharCount": 3507,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["function subError(nameProperty, defaultMessage) ", "    function SubError(message) ", "    if (typeof Array.prototype[methods[i]] === \"function\") ", "AggregateError.prototype.toString = function() ", "function OperationalError(message) "],
		"Dependencies": ["./es5.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\es5.js",
		"LineCount": 81,
		"CharCount": 1898,
		"Comments": ["var isES5 = (function()", "-----------------------------------"],
		"Functions": ["var isES5 = (function()", "        propertyIsWritable: function(obj, prop) ", "    var ObjectKeys = function (o) ", "    var ObjectGetDescriptor = function(o, key) ", "    var ObjectDefineProperty = function (o, key, desc) ", "    var ObjectFreeze = function (obj) ", "    var ObjectGetPrototypeOf = function (obj) ", "    var ArrayIsArray = function (obj) ", "        propertyIsWritable: function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\filter.js",
		"LineCount": 13,
		"CharCount": 302,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL) ", "Promise.prototype.filter = function (fn, options) ", "Promise.filter = function (promises, fn, options) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\finally.js",
		"LineCount": 99,
		"CharCount": 2526,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, NEXT_FILTER, tryConvertToPromise) ", "function returnThis() ", "function throwThis() ", "function return$(r) ", "    return function() ", "function throw$(r) ", "    return function() ", "function promisedFinally(ret, reasonOrValue, isFulfilled) ", "function finallyHandler(reasonOrValue) ", "function tapHandler(value) ", "Promise.prototype._passThroughHandler = function (handler, isFinally) ", "    if (typeof handler !== \"function\") return this.then();", "Promise.prototype[\"finally\"] = function (handler) ", "Promise.prototype.tap = function (handler) "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\generators.js",
		"LineCount": 137,
		"CharCount": 4565,
		"Comments": ["\"use strict\";", "-----------------------------------", "                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/4Y4pDk\\u000a\\u000a\".replace(\"%s\", value) +", "                        \"From coroutine:\\u000a\" +", "-----------------------------------", "        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    }", "-----------------------------------", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    yieldHandlers.push(fn);", "-----------------------------------", "        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise,", "function promiseFromYieldHandler(value, yieldHandlers, traceParent) ", "function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) ", "    this._yieldHandlers = typeof yieldHandler === \"function\"", "PromiseSpawn.prototype.promise = function () ", "PromiseSpawn.prototype._run = function () ", "PromiseSpawn.prototype._continue = function (result) ", "PromiseSpawn.prototype._throw = function (reason) ", "PromiseSpawn.prototype._next = function (value) ", "Promise.coroutine = function (generatorFunction, options) ", "    if (typeof generatorFunction !== \"function\") ", "        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");", "    return function () ", "Promise.coroutine.addYieldHandler = function(fn) ", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.spawn = function (generatorFunction) ", "    if (typeof generatorFunction !== \"function\") ", "        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");"],
		"Dependencies": ["./errors.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\join.js",
		"LineCount": 108,
		"CharCount": 3783,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["function(Promise, PromiseArray, tryConvertToPromise, INTERNAL) ", "    var thenCallback = function(i) ", "    var caller = function(count) ", "    var Holder = function(total, fn) ", "    Holder.prototype.checkFulfillment = function(promise) ", "    var reject = function (reason) ", "Promise.join = function () ", "    if (last \u003e 0 \u0026\u0026 typeof arguments[last] === \"function\") "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\map.js",
		"LineCount": 134,
		"CharCount": 4245,
		"Comments": ["\"use strict\";", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "", "    return map(this, fn, options, null).promise();", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    return map(promises, fn, options, _filter).promise();", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise,", "function MappingPromiseArray(promises, fn, limit, _filter) ", "function init() this._init$(undefined, -2);}", "MappingPromiseArray.prototype._init = function () };", "MappingPromiseArray.prototype._promiseFulfilled = function (value, index) ", "MappingPromiseArray.prototype._drainQueue = function () ", "MappingPromiseArray.prototype._filter = function (booleans, values) ", "MappingPromiseArray.prototype.preservedValues = function () ", "function map(promises, fn, options, _filter) ", "Promise.prototype.map = function (fn, options) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.map = function (promises, fn, options, _filter) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");"],
		"Dependencies": ["./async.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\method.js",
		"LineCount": 45,
		"CharCount": 1292,
		"Comments": ["\"use strict\";", "-----------------------------------", "        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------", "        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["function(Promise, INTERNAL, tryConvertToPromise, apiRejection) ", "Promise.method = function (fn) ", "    if (typeof fn !== \"function\") ", "        throw new Promise.TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    return function () ", "Promise.attempt = Promise[\"try\"] = function (fn, args, ctx) ", "    if (typeof fn !== \"function\") ", "        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype._resolveFromSyncValue = function (value) "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\nodeify.js",
		"LineCount": 60,
		"CharCount": 1577,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "function spreadAdapter(val, nodeback) ", "function successAdapter(val, nodeback) ", "function errorAdapter(reason, nodeback) ", "Promise.prototype.nodeify = function (nodeback, options) ", "    if (typeof nodeback == \"function\") "],
		"Dependencies": ["./util.js", "./async.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\progress.js",
		"LineCount": 77,
		"CharCount": 2416,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, PromiseArray) ", "Promise.prototype.progressed = function (handler) ", "Promise.prototype._progress = function (progressValue) ", "Promise.prototype._progressHandlerAt = function (index) ", "Promise.prototype._doProgressWith = function (progression) ", "Promise.prototype._progressUnchecked = function (progressValue) ", "            if (typeof handler === \"function\") ", "        if (typeof handler === \"function\") "],
		"Dependencies": ["./util.js", "./async.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\promise.js",
		"LineCount": 755,
		"CharCount": 23597,
		"Comments": ["\"use strict\";", "-----------------------------------", "    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/LhFpo0\\u000a\");", "};", "-----------------------------------", "        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/KsIlge\\u000a\");", "    }", "-----------------------------------", "                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));", "            }", "-----------------------------------", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    var prev = async._schedule;", "-----------------------------------", "    // Complete slack tracking, opt out of field-type tracking and           ", "    // stabilize map                                                         ", "    fillTypes(a: 1});                                                       ", "-----------------------------------"],
		"Functions": ["module.exports = function() ", "var makeSelfResolutionError = function () ", "var reflect = function() ", "var apiRejection = function(msg) ", "    getDomain = function() ", "    getDomain = function() ", "var INTERNAL = function()};", "function Promise(resolver) ", "    if (typeof resolver !== \"function\") ", "        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");", "Promise.prototype.toString = function () ", "Promise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) ", "            if (typeof item === \"function\") ", "                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));", "Promise.prototype.reflect = function () ", "Promise.prototype.then = function (didFulfill, didReject, didProgress) ", "        typeof didFulfill !== \"function\" \u0026\u0026", "        typeof didReject !== \"function\") ", "        var msg = \".then() only accepts functions but was passed: \" +", "Promise.prototype.done = function (didFulfill, didReject, didProgress) ", "Promise.prototype.spread = function (didFulfill, didReject) ", "Promise.prototype.isCancellable = function () ", "Promise.prototype.toJSON = function () ", "Promise.prototype.all = function () ", "Promise.prototype.error = function (fn) ", "Promise.is = function (val) ", "Promise.fromNode = function(fn) ", "Promise.all = function (promises) ", "Promise.defer = Promise.pending = function () ", "Promise.cast = function (obj) ", "Promise.reject = Promise.rejected = function (reason) ", "Promise.setScheduler = function(fn) ", "    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype._then = function (", "Promise.prototype._settlePromiseAtPostResolution = function (index) ", "Promise.prototype._length = function () ", "Promise.prototype._isFollowingOrFulfilledOrRejected = function () ", "Promise.prototype._isFollowing = function () ", "Promise.prototype._setLength = function (len) ", "Promise.prototype._setFulfilled = function () ", "Promise.prototype._setRejected = function () ", "Promise.prototype._setFollowing = function () ", "Promise.prototype._setIsFinal = function () ", "Promise.prototype._isFinal = function () ", "Promise.prototype._cancellable = function () ", "Promise.prototype._setCancellable = function () ", "Promise.prototype._unsetCancellable = function () ", "Promise.prototype._setIsMigrated = function () ", "Promise.prototype._unsetIsMigrated = function () ", "Promise.prototype._isMigrated = function () ", "Promise.prototype._receiverAt = function (index) ", "Promise.prototype._promiseAt = function (index) ", "Promise.prototype._fulfillmentHandlerAt = function (index) ", "Promise.prototype._rejectionHandlerAt = function (index) ", "Promise.prototype._boundValue = function() ", "Promise.prototype._migrateCallbacks = function (follower, index) ", "Promise.prototype._addCallbacks = function (", "        if (typeof fulfill === \"function\" \u0026\u0026 !this._isCarryingStackTrace()) ", "        if (typeof reject === \"function\") ", "        if (typeof progress === \"function\") ", "        if (typeof fulfill === \"function\") ", "        if (typeof reject === \"function\") ", "        if (typeof progress === \"function\") ", "Promise.prototype._setProxyHandlers = function (receiver, promiseSlotValue) ", "Promise.prototype._proxyPromiseArray = function (promiseArray, index) ", "Promise.prototype._resolveCallback = function(value, shouldBind) ", "function(reason, synchronous, shouldNotMarkOriginatingFromRejection) ", "Promise.prototype._resolveFromResolver = function (resolver) ", "    var r = tryCatch(resolver)(function(value) ", "    }, function (reason) ", "Promise.prototype._settlePromiseFromHandler = function (", "Promise.prototype._target = function() ", "Promise.prototype._followee = function() ", "Promise.prototype._setFollowee = function(promise) ", "Promise.prototype._cleanValues = function () ", "Promise.prototype._propagateFrom = function (parent, flags) ", "Promise.prototype._fulfill = function (value) ", "Promise.prototype._reject = function (reason, carriedStackTrace) ", "Promise.prototype._settlePromiseAt = function (index) ", "    if (typeof handler === \"function\") ", "Promise.prototype._clearCallbackDataAtIndex = function(index) ", "Promise.prototype._isSettlePromisesQueued = function () ", "Promise.prototype._setSettlePromisesQueued = function () ", "Promise.prototype._unsetSettlePromisesQueued = function () ", "Promise.prototype._queueSettlePromises = function() ", "Promise.prototype._fulfillUnchecked = function (value) ", "Promise.prototype._rejectUncheckedCheckError = function (reason) ", "Promise.prototype._rejectUnchecked = function (reason, trace) ", "        async.throwLater(function(e) ", "Promise.prototype._settlePromises = function () ", "    function fillTypes(value)                                               ", "    fillTypes(function()});                                                 "],
		"Dependencies": ["./util.js", "./async.js", "./errors.js", "./thenables.js", "./captured_trace.js", "./debuggability.js", "./catch_filter.js", "./promise_resolver.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\promise_array.js",
		"LineCount": 143,
		"CharCount": 4005,
		"Comments": ["\"use strict\";", "-----------------------------------", "                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");", "                this.__hardReject__(err);", "-----------------------------------", "        this._promise._reject(apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\")._reason());", "        return;", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL, tryConvertToPromise,", "function toResolutionValue(val) ", "function PromiseArray(values) ", "PromiseArray.prototype.length = function () ", "PromiseArray.prototype.promise = function () ", "PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) ", "PromiseArray.prototype._isResolved = function () ", "PromiseArray.prototype._resolve = function (value) ", "PromiseArray.prototype._reject = function (reason) ", "PromiseArray.prototype._promiseProgressed = function (progressValue, index) ", "PromiseArray.prototype._promiseFulfilled = function (value, index) ", "PromiseArray.prototype._promiseRejected = function (reason, index) ", "PromiseArray.prototype.shouldCopyValues = function () ", "PromiseArray.prototype.getActualLength = function (len) "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\promise_resolver.js",
		"LineCount": 124,
		"CharCount": 3740,
		"Comments": ["\"use strict\";", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["function isUntypedError(obj) ", "function wrapAsOperationalError(obj) ", "function nodebackForPromise(promise) ", "    return function(err, value) ", "    PromiseResolver = function (promise) ", "    PromiseResolver = function (promise) ", "        get: function() ", "PromiseResolver.prototype.toString = function () ", "PromiseResolver.prototype.fulfill = function (value) ", "PromiseResolver.prototype.reject = function (reason) ", "PromiseResolver.prototype.progress = function (value) ", "PromiseResolver.prototype.cancel = function (err) ", "PromiseResolver.prototype.timeout = function () ", "PromiseResolver.prototype.isResolved = function () ", "PromiseResolver.prototype.toJSON = function () "],
		"Dependencies": ["./util.js", "./errors.js", "./es5.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\promisify.js",
		"LineCount": 308,
		"CharCount": 11255,
		"Comments": ["\"use strict\";", "-----------------------------------", "                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/iWrZbw\\u000a\"", "                        .replace(\"%s\", suffix));", "-----------------------------------", "        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");", "    }", "-----------------------------------", "        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/8FZo5V\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL) ", "var defaultFilter = function(name) ", "function propsFilter(key) ", "function isPromisified(fn) ", "function hasPromisified(obj, key, suffix) ", "function checkValid(ret, suffix, suffixRegexp) ", "function promisifiableMethods(obj, suffix, suffixRegexp, filter) ", "        if (typeof value === \"function\" \u0026\u0026", "var escapeIdentRegex = function(str) ", "var switchCaseArgumentOrder = function(likelyArgumentCount) ", "var argumentSequence = function(argumentCount) ", "var parameterDeclaration = function(parameterCount) ", "var parameterCount = function(fn) ", "function(callback, receiver, originalName, fn) ", "    function generateCallForArgumentCount(count) ", "    function generateArgumentSwitchCase() ", "        var ret = function (Parameters)                                     \\n\\", "function makeNodePromisifiedClosure(callback, receiver, _, fn) ", "    var defaultThis = (function() return this;})();", "    function promisified() ", "function promisifyAll(obj, suffix, filter, promisifier) ", "            var promisified = promisifier(fn, function() ", "function promisify(callback, receiver) ", "Promise.promisify = function (fn, receiver) ", "    if (typeof fn !== \"function\") ", "        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.promisifyAll = function (target, options) ", "    if (typeof target !== \"function\" \u0026\u0026 typeof target !== \"object\") ", "        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");", "    if (typeof filter !== \"function\") filter = defaultFilter;", "    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;"],
		"Dependencies": ["./util.js", "./promise_resolver.js", "./errors"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\props.js",
		"LineCount": 80,
		"CharCount": 2093,
		"Comments": ["\"use strict\";", "-----------------------------------", "        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/OsFKC8\\u000a\");", "    } else if (castValue instanceof Promise) ", "-----------------------------------"],
		"Functions": ["module.exports = function(", "function PropertiesPromiseArray(obj) ", "PropertiesPromiseArray.prototype._init = function () ", "PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) ", "PropertiesPromiseArray.prototype._promiseProgressed = function (value, index) ", "PropertiesPromiseArray.prototype.shouldCopyValues = function () ", "PropertiesPromiseArray.prototype.getActualLength = function (len) ", "function props(promises) ", "Promise.prototype.props = function () ", "Promise.props = function (promises) "],
		"Dependencies": ["./util.js", "./es5.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\queue.js",
		"LineCount": 91,
		"CharCount": 2264,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["function arrayMove(src, srcIndex, dst, dstIndex, len) ", "function Queue(capacity) ", "Queue.prototype._willBeOverCapacity = function (size) ", "Queue.prototype._pushOne = function (arg) ", "Queue.prototype._unshiftOne = function(value) ", "Queue.prototype.unshift = function(fn, receiver, arg) ", "Queue.prototype.push = function (fn, receiver, arg) ", "Queue.prototype.shift = function () ", "Queue.prototype.length = function () ", "Queue.prototype._checkCapacity = function (size) ", "Queue.prototype._resizeTo = function (capacity) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\race.js",
		"LineCount": 48,
		"CharCount": 1178,
		"Comments": ["\"use strict\";", "-----------------------------------", "        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["module.exports = function(", "var raceLater = function (promise) ", "    return promise.then(function(array) ", "function race(promises, parent) ", "Promise.race = function (promises) ", "Promise.prototype.race = function () "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\reduce.js",
		"LineCount": 149,
		"CharCount": 4875,
		"Comments": ["\"use strict\";", "-----------------------------------", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise,", "function ReductionPromiseArray(promises, fn, accum, _each) ", "function init() ", "ReductionPromiseArray.prototype._init = function () };", "ReductionPromiseArray.prototype._resolveEmptyArray = function () ", "ReductionPromiseArray.prototype._promiseFulfilled = function (value, index) ", "function reduce(promises, fn, initialValue, _each) ", "    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "Promise.prototype.reduce = function (fn, initialValue) ", "Promise.reduce = function (promises, fn, initialValue, _each) "],
		"Dependencies": ["./async.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\schedule.js",
		"LineCount": 36,
		"CharCount": 1244,
		"Comments": ["\"use strict\";", "-----------------------------------", "    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");", "};", "-----------------------------------"],
		"Functions": ["var noAsyncScheduler = function() ", "                ? function(fn)  GlobalSetImmediate.call(global, fn); }", "                : function(fn)  ProcessNextTick.call(process, fn); };", "    schedule = function(fn) ", "        return function()  div.classList.toggle(\"foo\"); };", "    schedule = function (fn) ", "    schedule = function (fn) "],
		"Dependencies": ["./util"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\settle.js",
		"LineCount": 41,
		"CharCount": 1128,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["    function(Promise, PromiseArray) ", "function SettledPromiseArray(values) ", "SettledPromiseArray.prototype._promiseResolved = function (index, inspection) ", "SettledPromiseArray.prototype._promiseFulfilled = function (value, index) ", "SettledPromiseArray.prototype._promiseRejected = function (reason, index) ", "Promise.settle = function (promises) ", "Promise.prototype.settle = function () "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\some.js",
		"LineCount": 126,
		"CharCount": 3253,
		"Comments": ["\"use strict\";", "-----------------------------------", "        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/1wAmHx\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["function(Promise, PromiseArray, apiRejection) ", "function SomePromiseArray(values) ", "SomePromiseArray.prototype._init = function () ", "SomePromiseArray.prototype.init = function () ", "SomePromiseArray.prototype.setUnwrap = function () ", "SomePromiseArray.prototype.howMany = function () ", "SomePromiseArray.prototype.setHowMany = function (count) ", "SomePromiseArray.prototype._promiseFulfilled = function (value) ", "SomePromiseArray.prototype._promiseRejected = function (reason) ", "SomePromiseArray.prototype._fulfilled = function () ", "SomePromiseArray.prototype._rejected = function () ", "SomePromiseArray.prototype._addRejected = function (reason) ", "SomePromiseArray.prototype._addFulfilled = function (value) ", "SomePromiseArray.prototype._canPossiblyFulfill = function () ", "SomePromiseArray.prototype._getRangeError = function (count) ", "SomePromiseArray.prototype._resolveEmptyArray = function () ", "function some(promises, howMany) ", "Promise.some = function (promises, howMany) ", "Promise.prototype.some = function (howMany) "],
		"Dependencies": ["./util.js", "./errors.js", "./errors.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\synchronous_inspection.js",
		"LineCount": 95,
		"CharCount": 2547,
		"Comments": ["\"use strict\";", "-----------------------------------", "        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");", "    }", "-----------------------------------", "        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");", "    }", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise) ", "function PromiseInspection(promise) ", "PromiseInspection.prototype.value = function () ", "PromiseInspection.prototype.reason = function () ", "Promise.prototype._isFulfilled = function () ", "Promise.prototype._isRejected = function () ", "Promise.prototype._isPending = function () ", "Promise.prototype._isResolved = function () ", "Promise.prototype.isPending = function() ", "Promise.prototype.isRejected = function() ", "Promise.prototype.isFulfilled = function() ", "Promise.prototype.isResolved = function() ", "Promise.prototype._value = function() ", "Promise.prototype._reason = function() ", "Promise.prototype.value = function() ", "Promise.prototype.reason = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\thenables.js",
		"LineCount": 85,
		"CharCount": 2260,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL) ", "function tryConvertToPromise(obj, context) ", "        } else if (typeof then === \"function\") ", "function getThen(obj) ", "function isAnyBluebirdPromise(obj) ", "function doThenable(x, then, context) ", "    function resolveFromThenable(value) ", "    function rejectFromThenable(reason) ", "    function progressFromThenable(value) ", "        if (typeof promise._progress === \"function\") "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\timers.js",
		"LineCount": 65,
		"CharCount": 1677,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["module.exports = function(Promise, INTERNAL) ", "var afterTimeout = function (promise, message) ", "var afterValue = function(value)  return delay(+this).thenReturn(value); };", "var delay = Promise.delay = function (value, ms) ", "        setTimeout(function()  ret._fulfill(); }, ms);", "Promise.prototype.delay = function (ms) ", "function successClear(value) ", "function failureClear(reason) ", "Promise.prototype.timeout = function (ms, message) ", "    var handle = setTimeout(function timeoutTimeout() "],
		"Dependencies": ["./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\using.js",
		"LineCount": 214,
		"CharCount": 6782,
		"Comments": ["\"use strict\";", "-----------------------------------", "        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "", "        var input;", "-----------------------------------"],
		"Functions": ["module.exports = function (Promise, apiRejection, tryConvertToPromise,", "    function inspectionMapper(inspections) ", "    function thrower(e) ", "        setTimeout(function()throw e;}, 0);", "    function castPreservingDisposable(thenable) ", "            typeof thenable._isDisposable === \"function\" \u0026\u0026", "            typeof thenable._getDisposer === \"function\" \u0026\u0026", "    function dispose(resources, inspection) ", "        function iterator() ", "    function disposerSuccess(value) ", "    function disposerFail(reason) ", "    function Disposer(data, promise, context) ", "    Disposer.prototype.data = function () ", "    Disposer.prototype.promise = function () ", "    Disposer.prototype.resource = function () ", "    Disposer.prototype.tryDispose = function(inspection) ", "    Disposer.isDisposer = function (d) ", "                typeof d.resource === \"function\" \u0026\u0026", "                typeof d.tryDispose === \"function\");", "    function FunctionDisposer(fn, promise, context) ", "    FunctionDisposer.prototype.doDispose = function (resource, inspection) ", "    function maybeUnwrapDisposer(value) ", "    Promise.using = function () ", "        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");", "            .then(function(vals) ", "    Promise.prototype._setDisposable = function (disposer) ", "    Promise.prototype._isDisposable = function () ", "    Promise.prototype._getDisposer = function () ", "    Promise.prototype._unsetDisposable = function () ", "    Promise.prototype.disposer = function (fn) ", "        if (typeof fn === \"function\") "],
		"Dependencies": ["./errors.js", "./util.js"]
	}, {
		"FileName": "node_modules\\bluebird\\js\\main\\util.js",
		"LineCount": 322,
		"CharCount": 8312,
		"Comments": ["\"use strict\";", "-----------------------------------"],
		"Functions": ["var haveGetters = (function()", "            get: function () ", "function tryCatcher() ", "function tryCatch(fn) ", "var inherits = function(Child, Parent) ", "    function T() ", "function isPrimitive(val) ", "function isObject(value) ", "function maybeWrapAsError(maybeError) ", "function withAppended(target, appendee) ", "function getDataPropertyOrDefault(obj, key, defaultValue) ", "function notEnumerableProp(obj, name, value) ", "function thrower(r) ", "var inheritedDataKeys = (function() ", "    var isExcludedProto = function(val) ", "        return function(obj) ", "        return function(obj) ", "function isClass(fn) ", "        if (typeof fn === \"function\") ", "function toFastProperties(obj) ", "    function f() }", "function isIdentifier(str) ", "function filledRange(count, prefix, suffix) ", "function safeToString(obj) ", "function markAsOriginatingFromRejection(e) ", "function originatesFromRejection(e) ", "function canAttachTrace(obj) ", "var ensureErrorObject = (function() ", "        return function(value) ", "        return function(value) ", "function classString(obj) ", "function copyDescriptors(from, to, filter) ", "                 typeof chrome.loadTimes === \"function\",", "ret.isRecentNode = ret.isNode \u0026\u0026 (function() "],
		"Dependencies": ["./es5.js"]
	}, {
		"FileName": "node_modules\\body-parser\\index.js",
		"LineCount": 158,
		"CharCount": 2499,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Cache of loaded parsers.", "-----------------------------------", "/**", " * @typedef Parsers", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * JSON parser.", "-----------------------------------", "/**", " * Raw parser.", "-----------------------------------", "/**", " * Text parser.", "-----------------------------------", "/**", " * URL-encoded parser.", "-----------------------------------", "/**", " * Create a middleware to parse json and urlencoded bodies.", "-----------------------------------", "  // exclude type option", "  if (options) ", "-----------------------------------", "/**", " * Create a getter for loading a parser.", "-----------------------------------", "/**", " * Load a parser module.", "-----------------------------------", "  // this uses a switch for static require analysis", "  switch (parserName) ", "-----------------------------------", "  // store to prevent invoking require()", "  return (parsers[parserName] = parser)", "-----------------------------------"],
		"Functions": [" * @type function}", " * @property function} json", " * @property function} raw", " * @property function} text", " * @property function} urlencoded", "exports = module.exports = deprecate.function(bodyParser,", " * @return function}", "function bodyParser (options) ", "  return function bodyParser (req, res, next) ", "    _json(req, res, function (err) ", "function createParserGetter (name) ", "  return function get () ", "function loadParser (parserName) "],
		"Dependencies": ["depd\")(\"body-parser", "./lib/types/json", "./lib/types/raw", "./lib/types/text", "./lib/types/urlencoded"]
	}, {
		"FileName": "node_modules\\body-parser\\lib\\read.js",
		"LineCount": 189,
		"CharCount": 3663,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Read a request into a buffer and parse.", "-----------------------------------", "  // flag as parsed", "  req._body = true", "-----------------------------------", "  // read options", "  var encoding = opts.encoding !== null", "-----------------------------------", "    // get the content stream", "    stream = contentstream(req, debug, opts.inflate)", "-----------------------------------", "  // set raw-body options", "  opts.length = length", "-----------------------------------", "  // assert charset is supported", "  if (opts.encoding === null \u0026\u0026 encoding !== null \u0026\u0026 !iconv.encodingExists(encoding)) ", "-----------------------------------", "  // read body", "  debug('read body')", "-----------------------------------", "      // default to 400", "      setErrorStatus(err, 400)", "-----------------------------------", "      // echo back charset", "      if (err.type === 'encoding.unsupported') ", "-----------------------------------", "      // read off entire request", "      stream.resume()", "-----------------------------------", "    // verify", "    if (verify) ", "-----------------------------------", "        // default to 403", "        setErrorStatus(err, 403)", "-----------------------------------", "    // parse", "    var str", "-----------------------------------", "      // default to 400", "      setErrorStatus(err, 400)", "-----------------------------------", "/**", " * Get the content stream of the request.", "-----------------------------------", "/**", " * Set a status on an error object, if ones does not exist", "-----------------------------------"],
		"Functions": [" * @param function} next", " * @param function} parse", " * @param function} debug", "function read (req, res, next, parse, debug, options) ", "  getBody(stream, opts, function (err, body) ", "      onFinished(req, function onfinished () ", " * @param function} debug", "function contentstream (req, debug, inflate) ", "function setErrorStatus (error, status) "],
		"Dependencies": ["http-errors", "raw-body", "iconv-lite", "on-finished", "zlib"]
	}, {
		"FileName": "node_modules\\body-parser\\lib\\types\\json.js",
		"LineCount": 176,
		"CharCount": 3535,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * RegExp to match the first non-space in a string.", "-----------------------------------", "var FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex", "", "/**", " * Create a middleware to parse JSON bodies.", "-----------------------------------", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "-----------------------------------", "      // special-case empty json body, as it's a common client-side mistake", "      // TODO: maybe make this configurable or part of \"strict\" option", "      return }", "-----------------------------------", "    // skip requests without bodies", "    if (!typeis.hasBody(req)) ", "-----------------------------------", "    // determine if request should be parsed", "    if (!shouldParse(req)) ", "-----------------------------------", "    // assert charset per RFC 7159 sec 8.1", "    var charset = getCharset(req) || 'utf-8'", "-----------------------------------", "    // read", "    read(req, res, next, parse, debug, ", "-----------------------------------", "/**", " * Get the first non-whitespace character in a string.", "-----------------------------------", "/**", " * Get the charset of a request.", "-----------------------------------", "/**", " * Get the simple type checker.", "-----------------------------------"],
		"Functions": [" * @return function}", "function json (options) ", "  if (verify !== false \u0026\u0026 typeof verify !== 'function') ", "    throw new TypeError('option verify must be function')", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "  function parse (body) ", "  return function jsonParser (req, res, next) ", " * @return function}", "function firstchar (str) ", "function getCharset (req) ", " * @return function}", "function typeChecker (type) ", "  return function checkType (req) "],
		"Dependencies": ["bytes", "content-type", "http-errors", "debug\")(\"body-parser:json", "../read", "type-is"]
	}, {
		"FileName": "node_modules\\body-parser\\lib\\types\\raw.js",
		"LineCount": 102,
		"CharCount": 1783,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Create a middleware to parse raw bodies.", "-----------------------------------", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "-----------------------------------", "    // skip requests without bodies", "    if (!typeis.hasBody(req)) ", "-----------------------------------", "    // determine if request should be parsed", "    if (!shouldParse(req)) ", "-----------------------------------", "    // read", "    read(req, res, next, parse, debug, ", "-----------------------------------", "/**", " * Get the simple type checker.", "-----------------------------------"],
		"Functions": [" * @return function}", "function raw (options) ", "  if (verify !== false \u0026\u0026 typeof verify !== 'function') ", "    throw new TypeError('option verify must be function')", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "  function parse (buf) ", "  return function rawParser (req, res, next) ", " * @return function}", "function typeChecker (type) ", "  return function checkType (req) "],
		"Dependencies": ["bytes", "debug\")(\"body-parser:raw", "../read", "type-is"]
	}, {
		"FileName": "node_modules\\body-parser\\lib\\types\\text.js",
		"LineCount": 122,
		"CharCount": 2156,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Create a middleware to parse text bodies.", "-----------------------------------", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "-----------------------------------", "    // skip requests without bodies", "    if (!typeis.hasBody(req)) ", "-----------------------------------", "    // determine if request should be parsed", "    if (!shouldParse(req)) ", "-----------------------------------", "    // get charset", "    var charset = getCharset(req) || defaultCharset", "-----------------------------------", "    // read", "    read(req, res, next, parse, debug, ", "-----------------------------------", "/**", " * Get the charset of a request.", "-----------------------------------", "/**", " * Get the simple type checker.", "-----------------------------------"],
		"Functions": [" * @return function}", "function text (options) ", "  if (verify !== false \u0026\u0026 typeof verify !== 'function') ", "    throw new TypeError('option verify must be function')", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "  function parse (buf) ", "  return function textParser (req, res, next) ", "function getCharset (req) ", " * @return function}", "function typeChecker (type) ", "  return function checkType (req) "],
		"Dependencies": ["bytes", "content-type", "debug\")(\"body-parser:text", "../read", "type-is"]
	}, {
		"FileName": "node_modules\\body-parser\\lib\\types\\urlencoded.js",
		"LineCount": 280,
		"CharCount": 5377,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module dependencies.", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Cache of parser modules.", "-----------------------------------", "/**", " * Create a middleware to parse urlencoded bodies.", "-----------------------------------", "  // notice because option default will flip in next major", "  if (opts.extended === undefined) ", "-----------------------------------", "  // create the appropriate query parser", "  var queryparse = extended", "-----------------------------------", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "-----------------------------------", "    // skip requests without bodies", "    if (!typeis.hasBody(req)) ", "-----------------------------------", "    // determine if request should be parsed", "    if (!shouldParse(req)) ", "-----------------------------------", "    // assert charset", "    var charset = getCharset(req) || 'utf-8'", "-----------------------------------", "    // read", "    read(req, res, next, parse, debug, ", "-----------------------------------", "/**", " * Get the extended query parser.", "-----------------------------------", "/**", " * Get the charset of a request.", "-----------------------------------", "/**", " * Count the number of parameters, stopping once limit reached", "-----------------------------------", "/**", " * Get parser for module name dynamically.", "-----------------------------------", "  // this uses a switch for static require analysis", "  switch (name) ", "-----------------------------------", "  // store to prevent invoking require()", "  parsers[name] = mod", "-----------------------------------", "/**", " * Get the simple query parser.", "-----------------------------------", "/**", " * Get the simple type checker.", "-----------------------------------"],
		"Functions": [" * @return function}", "function urlencoded (options) ", "  if (verify !== false \u0026\u0026 typeof verify !== 'function') ", "    throw new TypeError('option verify must be function')", "  // create the appropriate type checking function", "  var shouldParse = typeof type !== 'function'", "  function parse (body) ", "  return function urlencodedParser (req, res, next) ", "function extendedparser (options) ", "  return function queryparse (body) ", "function getCharset (req) ", "function parameterCount (body, limit) ", " * @return function}", "function parser (name) ", "function simpleparser (options) ", "  return function queryparse (body) ", " * @return function}", "function typeChecker (type) ", "  return function checkType (req) "],
		"Dependencies": ["bytes", "content-type", "http-errors", "debug\")(\"body-parser:urlencoded", "depd\")(\"body-parser", "../read", "type-is", "qs", "querystring"]
	}, {
		"FileName": "node_modules\\bson\\alternate_parsers\\bson.js",
		"LineCount": 1575,
		"CharCount": 65286,
		"Comments": ["var Long = require('../lib/bson/long').Long", "-----------------------------------", "// To ensure that 0.4 of node works correctly", "var isDate = function isDate(d) ", "-----------------------------------", "/**", " * Create a new BSON instance", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "/**", " * Calculate the bson size for a passed in Javascript object.", "-----------------------------------", "\t\t// If we have toBSON defined, override the current object", "\t\tif(object.toBSON) ", "-----------------------------------", "\t\t// Calculate size", "    for(var key in object) ", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // If we have toBSON defined, override the current object", "  if(value \u0026\u0026 value.toBSON)", "-----------------------------------", "        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit", "          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (4 + 1);", "-----------------------------------", "      } else {  // 64 bit", "        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);", "-----------------------------------", "        // Calculate size depending on the availability of a scope", "        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) ", "-----------------------------------", "        // Check what kind of subtype we have", "        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Set up correct object for serialization", "        var ordered_values = ", "-----------------------------------", "        // Add db reference if it exists", "        if(null != value.db) ", "-----------------------------------", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') ", "-----------------------------------", "/**", " * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.", "-----------------------------------", "  // Default setting false", "  serializeFunctions = serializeFunctions == null ? false : serializeFunctions;", "-----------------------------------", "  // Write end information (length of the object)", "  var size = buffer.length;", "-----------------------------------", "  // Write the size of the object", "  buffer[index++] = size \u0026 0xff;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Process the object", "  if(Array.isArray(object)) ", "-----------------------------------", "\t\t// If we have toBSON defined, override the current object", "\t\tif(object.toBSON) ", "-----------------------------------", "\t\t// Serialize the object", "    for(var key in object) ", "-----------------------------------", "      // Check the key and throw error if it's illegal", "      if (key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') ", "-----------------------------------", "        // dollars and dots ok", "        BSON.checkKey(key, !checkKeys);", "-----------------------------------", "      // Pack the element", "      index = packElement(key, object[key], checkKeys, buffer, index, serializeFunctions);", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0;", "-----------------------------------", "    ch = str.charCodeAt(i);  // get char", "    st = [];                 // set up \"stack\"", "    do ", "-----------------------------------", "      st.push( ch \u0026 0xFF );  // push byte to stack", "      ch = ch \u003e\u003e 8;          // shift value down by 1 byte", "    }", "-----------------------------------", "    // add stack contents to result", "    // done because chars have \"wrong\" endianness", "    re = re.concat( st.reverse() );", "-----------------------------------", "  // return an array of bytes", "  return re;", "-----------------------------------", "    ch = str.charCodeAt(i);  // get char", "    st = [];                 // set up \"stack\"", "    do ", "-----------------------------------", "      st.push( ch \u0026 0xFF );  // push byte to stack", "      ch = ch \u003e\u003e 8;          // shift value down by 1 byte", "    }", "-----------------------------------", "    // add stack contents to result", "    // done because chars have \"wrong\" endianness", "    re = re + st.length;", "-----------------------------------", "  // return an array of bytes", "  return re;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // If we have toBSON defined, override the current object", "  if(value \u0026\u0026 value.toBSON)", "-----------------------------------", "      // console.log(\"+++++++++++ index string:: \" + index)", "      // Encode String type", "      buffer[index++] = BSON.BSON_DATA_STRING;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Calculate size", "      var size = supportsBuffer ? Buffer.byteLength(value) + 1 : numberOfBytes(value) + 1;", "-----------------------------------", "      // console.log(\"====== key :: \" + name + \" size ::\" + size)", "      // Write the size of the string to buffer", "      buffer[index + 3] = (size \u003e\u003e 24) \u0026 0xff;", "-----------------------------------", "      // Ajust the index", "      index = index + 4;", "-----------------------------------", "      // Write the string", "      supportsBuffer ? buffer.write(value, index, 'utf8') : writeToTypedArray(buffer, value, index);", "-----------------------------------", "      // Update index", "      index = index + size - 1;", "-----------------------------------", "      // Write zero", "      buffer[index++] = 0;", "-----------------------------------", "      // Return index", "      return index;", "-----------------------------------", "      // We have an integer value", "      if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) ", "-----------------------------------", "        // If the value fits in 32 bits encode as int, if it fits in a double", "        // encode it as a double, otherwise long", "        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) ", "-----------------------------------", "          // Set int type 32 bits or less", "          buffer[index++] = BSON.BSON_DATA_INT;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Write the int value", "          buffer[index++] = value \u0026 0xff;", "-----------------------------------", "          // Encode as double", "          buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Write float", "          writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "          // Ajust index", "          index = index + 8;", "-----------------------------------", "          // Set long type", "          buffer[index++] = BSON.BSON_DATA_LONG;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Encode low bits", "          buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "          // Encode high bits", "          buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Encode as double", "        buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write float", "        writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "        // Ajust index", "        index = index + 8;", "-----------------------------------", "      // Set long type", "      buffer[index++] = BSON.BSON_DATA_NULL;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Write the type", "      buffer[index++] = BSON.BSON_DATA_BOOLEAN;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Encode the boolean value", "      buffer[index++] = value ? 1 : 0;", "-----------------------------------", "        // Write the type of either min or max key", "        if(value === null) ", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // console.log(\"+++++++++++ index OBJECTID:: \" + index)", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_OID;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write objectid", "        supportsBuffer ? buffer.write(value.id, index, 'binary') : writeToTypedArray(buffer, value.id, index);", "-----------------------------------", "        // Ajust index", "        index = index + 12;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_DATE;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the date", "        var dateInMilis = Long.fromNumber(value.getTime());", "-----------------------------------", "        // Encode low bits", "        buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "        // Encode high bits", "        buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Get size of the buffer (current write point)", "        var size = value.length;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the default subtype", "        buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;", "-----------------------------------", "        // Copy the content form the binary field to the buffer", "        value.copy(buffer, index, 0, size);", "-----------------------------------", "        // Adjust the index", "        index = index + size;", "-----------------------------------", "        // Write the type", "        buffer[index++] = value instanceof Long || value['_bsontype'] == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the date", "        var lowBits = value.getLowBits();", "-----------------------------------", "        // Encode low bits", "        buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "        // Encode high bits", "        buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Encode as double", "        buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write float", "        writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "        // Ajust index", "        index = index + 8;", "-----------------------------------", "          // Write the type", "          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Calculate the scope size", "          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);", "-----------------------------------", "          // Function string", "          var functionString = value.code.toString();", "-----------------------------------", "          // Function Size", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Calculate full size of the object", "          var totalSize = 4 + codeSize + scopeSize + 4;", "-----------------------------------", "          // Write the total size of the object", "          buffer[index++] = totalSize \u0026 0xff;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = codeSize \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + codeSize - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Serialize the scope object", "          var scopeObjectBuffer = supportsBuffer ? new Buffer(scopeSize) : new Uint8Array(new ArrayBuffer(scopeSize));", "-----------------------------------", "          // Execute the serialization into a seperate buffer", "          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);", "-----------------------------------", "          // Adjusted scope Size (removing the header)", "          var scopeDocSize = scopeSize;", "-----------------------------------", "          // Write scope object size", "          buffer[index++] = scopeDocSize \u0026 0xff;", "-----------------------------------", "          // Write the scopeObject into the buffer", "          supportsBuffer ? scopeObjectBuffer.copy(buffer, index, 0, scopeSize) : buffer.set(scopeObjectBuffer, index);", "-----------------------------------", "          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)", "          index = index + scopeDocSize - 5;", "-----------------------------------", "          // Write trailing zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Function string", "          var functionString = value.code.toString();", "-----------------------------------", "          // Function Size", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = size \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + size - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Extract the buffer", "        var data = value.value(true);", "-----------------------------------", "        // Calculate size", "        var size = value.position;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the subtype to the buffer", "        buffer[index++] = value.sub_type;", "-----------------------------------", "        // If we have binary type 2 the 4 first bytes are the size", "        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Write the data to the object", "        supportsBuffer ? data.copy(buffer, index, 0, value.position) : buffer.set(data, index);", "-----------------------------------", "        // Ajust index", "        index = index + value.position;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_SYMBOL;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Calculate size", "        var size = supportsBuffer ? Buffer.byteLength(value.value) + 1 : numberOfBytes(value.value) + 1;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the string", "        buffer.write(value.value, index, 'utf8');", "-----------------------------------", "        // Update index", "        index = index + size - 1;", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_OBJECT;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Set up correct object for serialization", "        var ordered_values = ", "-----------------------------------", "        // Add db reference if it exists", "        if(null != value.db) ", "-----------------------------------", "        // Message size", "        var size = BSON.calculateObjectSize(ordered_values, serializeFunctions);", "-----------------------------------", "        // Serialize the object", "        var endIndex = BSON.serializeWithBufferAndIndex(ordered_values, checkKeys, buffer, index, serializeFunctions);", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write zero for object", "        buffer[endIndex++] = 0x00;", "-----------------------------------", "        // Return the end index", "        return endIndex;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the regular expression string", "        supportsBuffer ? buffer.write(value.source, index, 'utf8') : writeToTypedArray(buffer, value.source, index);", "-----------------------------------", "        // Adjust the index", "        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the parameters", "        if(value.global) buffer[index++] = 0x73; // s", "        if(value.ignoreCase) buffer[index++] = 0x69; // i", "        if(value.multiline) buffer[index++] = 0x6d; // m", "        // Add ending zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the type", "        buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Adjust the index", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write size", "        var size = endIndex - index;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') ", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the regular expression string", "        buffer.write(value.source, index, 'utf8');", "-----------------------------------", "        // Adjust the index", "        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the parameters", "        if(value.global) buffer[index++] = 0x73; // s", "        if(value.ignoreCase) buffer[index++] = 0x69; // i", "        if(value.multiline) buffer[index++] = 0x6d; // m", "        // Add ending zero", "        buffer[index++] = 0x00;", "-----------------------------------", "          // Write the type", "          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Calculate the scope size", "          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);", "-----------------------------------", "          // Function string", "          var functionString = value.toString();", "-----------------------------------", "          // Function Size", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Calculate full size of the object", "          var totalSize = 4 + codeSize + scopeSize;", "-----------------------------------", "          // Write the total size of the object", "          buffer[index++] = totalSize \u0026 0xff;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = codeSize \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + codeSize - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Serialize the scope object", "          var scopeObjectBuffer = new Buffer(scopeSize);", "-----------------------------------", "          // Execute the serialization into a seperate buffer", "          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);", "-----------------------------------", "          // Adjusted scope Size (removing the header)", "          var scopeDocSize = scopeSize - 4;", "-----------------------------------", "          // Write scope object size", "          buffer[index++] = scopeDocSize \u0026 0xff;", "-----------------------------------", "          // Write the scopeObject into the buffer", "          scopeObjectBuffer.copy(buffer, index, 0, scopeSize);", "-----------------------------------", "          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)", "          index = index + scopeDocSize - 5;", "-----------------------------------", "          // Write trailing zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Function string", "          var functionString = value.toString();", "-----------------------------------", "          // Function Size", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = size \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + size - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "  // If no value to serialize", "  return index;", "-----------------------------------", "/**", " * Serialize a Javascript object.", "-----------------------------------", "  // Throw error if we are trying serialize an illegal type", "  if(object == null || typeof object != 'object' || Array.isArray(object))", "-----------------------------------", "  // Emoty target buffer", "  var buffer = null;", "-----------------------------------", "  // Calculate the size of the object", "  var size = BSON.calculateObjectSize(object, serializeFunctions);", "-----------------------------------", "  // Fetch the best available type for storing the binary data", "  if(buffer = typeof Buffer != 'undefined') ", "-----------------------------------", "  // If asBuffer is false use typed arrays", "  BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, 0, serializeFunctions);", "-----------------------------------", "  // console.log(\"++++++++++++++++++++++++++++++++++++ OLDJS :: \" + buffer.length)", "  // console.log(buffer.toString('hex'))", "  // console.log(buffer.toString('ascii'))", "  return buffer;", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Crc state variables shared by function", "-----------------------------------", "/**", " * CRC32 hash method, Fast and enough versitility for our usage", "-----------------------------------", "/**", " * Deserialize stream data as BSON documents.", "-----------------------------------", "  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");", "  options = options != null ? options : };", "-----------------------------------", "  // Loop over all documents", "  for(var i = 0; i \u003c numberOfDocuments; i++) ", "-----------------------------------", "    // Find size of the document", "    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;", "-----------------------------------", "    // Update options with index", "    options['index'] = index;", "-----------------------------------", "    // Parse the document at this point", "    documents[docStartIndex + i] = BSON.deserialize(data, options);", "-----------------------------------", "    // Adjust index by the document size", "    index = index + size;", "-----------------------------------", "  // Return object containing end index of parsing and list of documents", "  return index;", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "-----------------------------------", "  // Set the object", "  return functionCache[hash].bind(object);", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Eval the function", "  eval(\"value = \" + functionString);", "-----------------------------------", "/**", " * Convert Uint8Array to String", "-----------------------------------", "/**", " * Deserialize data as BSON.", "-----------------------------------", "  // Options", "  options = options == null ? } : options;", "-----------------------------------", "  // Validate that we have at least 4 bytes of buffer", "  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");", "-----------------------------------", "  // Set up index", "  var index = typeof options['index'] == 'number' ? options['index'] : 0;", "-----------------------------------", "  // Reads in a C style string", "  var readCStyleString = function() ", "-----------------------------------", "    // Get the start search index", "    var i = index;", "-----------------------------------", "    // Locate the end of the c string", "    while(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "    // If are at the end of the buffer there is a problem with the document", "    if(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "    // Grab utf8 encoded string", "    var string = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, i) : convertUint8ArrayToUtf8String(buffer, index, i);", "-----------------------------------", "    // Update index position", "    index = i + 1;", "-----------------------------------", "    // Return string", "    return string;", "-----------------------------------", "  // Create holding object", "  var object = isArray ? [] : };", "-----------------------------------", "  // Read the document size", "  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "  // Ensure buffer is valid size", "  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");", "-----------------------------------", "  // While we have more left data left keep parsing", "  while(true) ", "-----------------------------------", "    // Read the type", "    var elementType = buffer[index++];", "-----------------------------------", "    // If we get a zero it's the last byte, exit", "    if(elementType == 0) break;", "-----------------------------------", "    // Read the name of the field", "    var name = readCStyleString();", "-----------------------------------", "    // Switch on the type", "    switch(elementType) ", "-----------------------------------", "        // Decode the oid", "        object[name] = new ObjectID(string);", "-----------------------------------", "        // Update index", "        index = index + 12;", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Add string to object", "        object[name] = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Decode the 32bit value", "        object[name] = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Decode the double value", "        object[name] = readIEEE754(buffer, index, 'little', 52, 8);", "-----------------------------------", "        // Update the index", "        index = index + 8;", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Set date object", "        object[name] = new Date(new Long(lowBits, highBits).toNumber());", "-----------------------------------", "        // Parse the boolean value", "        object[name] = buffer[index++] == 1;", "-----------------------------------", "        // Parse the boolean value", "        object[name] = null;", "-----------------------------------", "        // Decode the size of the binary blob", "        var binarySize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Decode the subtype", "        var subType = buffer[index++];", "-----------------------------------", "        // Decode as raw Buffer object if options specifies it", "        if(buffer['slice'] != null) ", "-----------------------------------", "          // If we have subtype 2 skip the 4 bytes for the size", "          if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "          // Slice the data", "          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);", "-----------------------------------", "          // If we have subtype 2 skip the 4 bytes for the size", "          if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "          // Copy the data", "          for(var i = 0; i \u003c binarySize; i++) ", "-----------------------------------", "          // Create the binary object", "          object[name] = new Binary(_buffer, subType);", "-----------------------------------", "        // Update the index", "        index = index + binarySize;", "-----------------------------------", "        // Decode the size of the array document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Set the array to the object", "        object[name] = BSON.deserialize(buffer, options, true);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // Decode the size of the object document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Set the array to the object", "        object[name] = BSON.deserialize(buffer, options, false);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // Create the regexp", "        var source = readCStyleString();", "-----------------------------------", "        // For each option add the corresponding one for javascript", "        var optionsArray = new Array(regExpOptions.length);", "-----------------------------------", "        // Parse options", "        for(var i = 0; i \u003c regExpOptions.length; i++) ", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Create long object", "        var long = new Long(lowBits, highBits);", "-----------------------------------", "        // Promote the long if possible", "        if(promoteLongs) ", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Add string to object", "        object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Set the object", "        object[name] = new Timestamp(lowBits, highBits);", "-----------------------------------", "        // Parse the object", "        object[name] = new MinKey();", "-----------------------------------", "        // Parse the object", "        object[name] = new MaxKey();", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Function string", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // If we are evaluating the functions", "        if(evalFunctions) ", "-----------------------------------", "          // Contains the value we are going to set", "          var value = null;", "-----------------------------------", "          // If we have cache enabled let's look for the md5 of the function in the cache", "          if(cacheFunctions) ", "-----------------------------------", "            // Got to do this to avoid V8 deoptimizing the call due to finding eval", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "            // Set directly", "            object[name] = isolateEval(functionString);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Read the content of the field", "        var totalSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Javascript function", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Parse the element", "        options['index'] = index;", "-----------------------------------", "        // Decode the size of the object document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Decode the scope object", "        var scopeObject = BSON.deserialize(buffer, options, false);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // If we are evaluating the functions", "        if(evalFunctions) ", "-----------------------------------", "          // Contains the value we are going to set", "          var value = null;", "-----------------------------------", "          // If we have cache enabled let's look for the md5 of the function in the cache", "          if(cacheFunctions) ", "-----------------------------------", "            // Got to do this to avoid V8 deoptimizing the call due to finding eval", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "            // Set directly", "            object[name] = isolateEval(functionString);", "-----------------------------------", "          // Set the scope on the object", "          object[name].scope = scopeObject;", "-----------------------------------", "        // Add string to object", "        break;", "-----------------------------------", "  // Check if we have a db ref object", "  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);", "-----------------------------------", "  // Return the final objects", "  return object;", "-----------------------------------", "/**", " * Check if key name is valid.", "-----------------------------------", "  // Check if we have a legal key for the object", "  if (!!~key.indexOf(\"\\x00\")) ", "-----------------------------------", "    // The BSON spec doesn't allow keys with null bytes because keys are", "    // null-terminated.", "    throw Error(\"key \" + key + \" must not contain null bytes\");", "-----------------------------------", "/**", " * Deserialize data as BSON.", "-----------------------------------", "/**", " * Deserialize stream data as BSON documents.", "-----------------------------------", "/**", " * Serialize a Javascript object.", "-----------------------------------", "/**", " * Calculate the bson size for a passed in Javascript object.", "-----------------------------------", "/**", " * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------"],
		"Functions": ["var isDate = function isDate(d) ", "function BSON () };", " * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.", "BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) ", "function calculateElement(name, value, serializeFunctions) ", "    case 'function':", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) ", "var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) ", "    if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");", "    if(object != null \u0026\u0026 typeof object != 'object') throw new Error(\"toBSON function did not return an object\");", "var stringToBytes = function(str) ", "var numberOfBytes = function(str) ", "var writeToTypedArray = function(buffer, string, index) ", "var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) ", "          var functionString = value.code.toString();", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "          var functionString = value.code.toString();", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "    case 'function':", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "          var functionString = value.toString();", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "          var functionString = value.toString();", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) ", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };", " * Crc state variables shared by function", "var crc32 =  function(string, start, end) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ", "var isolateEvalWithHash = function(functionCache, hash, functionString, object) ", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "    eval(\"value = \" + functionString);", "    functionCache[hash] = value;", "  return functionCache[hash].bind(object);", "var isolateEval = function(functionString) ", "  // Eval the function", "  eval(\"value = \" + functionString);", "var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) ", "var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.deserialize = function(buffer, options, isArray) ", "  var readCStyleString = function() ", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "        // If we are evaluating the functions", "          // If we have cache enabled let's look for the md5 of the function in the cache", "            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "            object[name] = isolateEval(functionString);", "          object[name]  = new Code(functionString, });", "        // Javascript function", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "        // If we are evaluating the functions", "          // If we have cache enabled let's look for the md5 of the function in the cache", "            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "            object[name] = isolateEval(functionString);", "          object[name]  = new Code(functionString, scopeObject);", "BSON.checkKey = function checkKey (key, dollarsAndDotsOk) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserialize = function(data, options) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) ", " * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.", "BSON.prototype.calculateObjectSize = function(object, serializeFunctions) ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) "],
		"Dependencies": ["../lib/bson/long", "../lib/bson/double", "../lib/bson/timestamp", "../lib/bson/objectid", "../lib/bson/symbol", "../lib/bson/code", "../lib/bson/min_key", "../lib/bson/max_key", "../lib/bson/db_ref", "../lib/bson/binary", "../lib/bson/binary_parser", "../lib/bson/float_parser", "../lib/bson/float_parser"]
	}, {
		"FileName": "node_modules\\bson\\alternate_parsers\\faster_bson.js",
		"LineCount": 430,
		"CharCount": 21441,
		"Comments": ["/// reduced to ~ 410 LOCs (parser only 300 vs. 1400+) with (some, needed) BSON classes \"inlined\".", "/// Compare ~ 4,300 (22KB vs. 157KB) in browser build at: https://github.com/mongodb/js-bson/blob/master/browser_build/bson.js", "", "module.exports.calculateObjectSize = calculateObjectSize;", "-----------------------------------", "    var totalLength = (4 + 1);      /// handles the obj.length prefix + terminating '0' ?!", "    for(var key in object) {        /// looks like it handles arrays under the same for...in loop!?", "      totalLength += calculateElement(key, object[key])", "-----------------------------------", "    var len = 1;                                /// always starting with 1 for the data type byte!", "    if (name) len += Buffer.byteLength(name, 'utf8') + 1;   /// cstring: name + '0' termination", "", "    if (value === undefined || value === null) return len;  /// just the type byte plus name cstring", "    switch( value.constructor ) {      /// removed all checks 'isBuffer' if Node.js Buffer class is present!?", "", "        case ObjectID:          /// we want these sorted from most common case to least common/deprecated;", "            return len + 12;", "-----------------------------------", "            return len + 4 + Buffer.byteLength(value, 'utf8') +1; ///", "        case Number:", "-----------------------------------", "            if (Math.floor(value) === value) {  /// case: integer; pos.# more common, '\u0026\u0026' stops if 1st fails!", "                if ( value \u003c= 2147483647 \u0026\u0026 value \u003e= -2147483647 ) // 32 bit", "                    return len + 4;", "-----------------------------------", "                else return len + 8;    /// covers Long-ish JS integers as Longs!", "            } else return len + 8;      /// 8+1 --- covers Double \u0026 std. float", "        case Boolean:", "-----------------------------------", "        case Buffer:   ///  replaces the entire Binary class!", "            return len + 4 + value.length + 1;", "-----------------------------------", "        case Regex:  /// these are handled as strings by serializeFast() later, hence 'gim' opts = 3 + 1 chars", "            return len + Buffer.byteLength(value.source, 'utf8') + 1", "-----------------------------------", "            return len;     /// these two return the type byte and name cstring only!", "    }", "-----------------------------------", "function serializeFast(object, checkKeys, buffer, i) {   /// set checkKeys = false in query(..., options object to save performance IFF you're certain your keys are safe/system-set!", "    var size = buffer.length;", "-----------------------------------", "    buffer[i++] = size \u0026 0xff; buffer[i++] = (size \u003e\u003e 8) \u0026 0xff;   /// these get overwritten later!", "    buffer[i++] = (size \u003e\u003e 16) \u0026 0xff; buffer[i++] = (size \u003e\u003e 24) \u0026 0xff;", "-----------------------------------", "    if (object.constructor === Array) {     /// any need to checkKeys here?!? since we're doing for rather than for...in, should be safe from extra (non-numeric) keys added to the array?!", "        for(var j = 0; j \u003c object.length; j++) ", "-----------------------------------", "    } else {   /// checkKeys is needed if any suspicion of end-user key tampering/\"injection\" (a la SQL)", "        for(var key in object) {    /// mostly there should never be direct access to them!?", "            if (checkKeys \u0026\u0026 (key.indexOf('\\x00') \u003e= 0 || key === '$where') ) {  /// = \"no script\"?!; could add back key.indexOf('$') or maybe check for 'eval'?!", "/// took out: || key.indexOf('.') \u003e= 0...  Don't we allow dot notation queries?!", "                console.log('checkKeys error: ');", "-----------------------------------", "            i = packElement(key, object[key], checkKeys, buffer, i);  /// checkKeys pass needed for recursion!", "        }", "-----------------------------------", "    buffer[i++] = 0;   /// write terminating zero; !we do NOT -1 the index increase here as original does!", "    return i;", "-----------------------------------", "function packElement(name, value, checkKeys, buffer, i) {    /// serializeFunctions removed! checkKeys needed for Array \u0026 Object cases pass through (calling serializeFast recursively!)", "    if (value === undefined || value === null)", "-----------------------------------", "        buffer[i++] = 10;                                       /// = BSON.BSON_DATA_NULL;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;    /// buffer.write(...) returns bytesWritten!", "        return i;", "-----------------------------------", "        buffer[i++] = 7;   /// = BSON.BSON_DATA_OID;", "        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;", "-----------------------------------", "///     i += buffer.write(value.id, i, 'binary');  ///  OLD: writes a String to a Buffer; 'binary' deprecated!!", "        value.id.copy(buffer, i);  /// NEW ObjectID version has this.id = Buffer at the ready!", "        return i += 12;", "-----------------------------------", "        buffer[i++] = 2;    ///  = BSON.BSON_DATA_STRING;", "        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;", "-----------------------------------", "        var size = Buffer.byteLength(value) + 1;  /// includes the terminating '0'!?", "        buffer[i++] = size \u0026 0xff; buffer[i++] = (size \u003e\u003e 8) \u0026 0xff;", "-----------------------------------", "        if ( ~~(value) === value) {     /// double-Tilde is equiv. to Math.floor(value)", "            if ( value \u003c= 2147483647 \u0026\u0026 value \u003e= -2147483647){ /// = BSON.BSON_INT32_MAX / MIN asf.", "                buffer[i++] = 16;   /// = BSON.BSON_DATA_INT;", "                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "// Else large-ish JS int!? to Long!?", "            } else {  /// if (value \u003c= BSON.JS_INT_MAX \u0026\u0026 value \u003e= BSON.JS_INT_MIN){ /// 9007199254740992 asf.", "                buffer[i++] = 18;   /// = BSON.BSON_DATA_LONG;", "                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "        } else {    /// we have a float / Double", "            buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;", "            i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "/// OLD:    writeIEEE754(buffer, value, i, 'little', 52, 8);", "            buffer.writeDoubleLE(value, i);     i += 8;", "-----------------------------------", "        buffer[i++] = 8;    /// = BSON.BSON_DATA_BOOLEAN;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "        buffer[i++] = value.constructor === Array ? 4 : 3; /// = BSON.BSON_DATA_ARRAY / _OBJECT;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "\t    var endIndex = serializeFast(value, checkKeys, buffer, i); /// + 4); no longer needed b/c serializeFast writes a temp 4 bytes for length", "        var size = endIndex - i;", "-----------------------------------", "    /// case Binary:        /// is basically identical unless special/deprecated options!", "    case Buffer:            /// solves ALL of our Binary needs without the BSON.Binary class!?", "        buffer[i++] = 5;    /// = BSON.BSON_DATA_BINARY;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "        buffer[i++] = 0;        /// write BSON.BSON_BINARY_SUBTYPE_DEFAULT;", "        value.copy(buffer, i);  ///, 0, size); \u003c\u003c defaults to sourceStart=0, sourceEnd=sourceBuffer.length);", "        i += size;", "-----------------------------------", "        buffer[i++] = 11;   /// = BSON.BSON_DATA_REGEXP;", "        i += buffer.write(name, i, 'utf8');         buffer[i++] = 0;", "-----------------------------------", "        if (value.global) buffer[i++] = 0x73;        // s = 'g' for JS Regex!", "        if (value.ignoreCase) buffer[i++] = 0x69;    // i", "        if (value.multiline) buffer[i++] = 0x6d;     // m", "        buffer[i++] = 0x00;", "-----------------------------------", "        buffer[i++] = 9;    /// = BSON.BSON_DATA_DATE;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "        buffer[i++] = value.constructor === Long ? 18 : 17; /// = BSON.BSON_DATA_LONG / _TIMESTAMP", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "        buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;", "        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "/// OLD: writeIEEE754(buffer, value, i, 'little', 52, 8);    i += 8;", "        buffer.writeDoubleLE(value, i);     i += 8;", "-----------------------------------", "    case MinKey:    /// = BSON.BSON_DATA_MINKEY;", "        buffer[i++] = 127; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "    case MaxKey:    /// = BSON.BSON_DATA_MAXKEY;", "        buffer[i++] = 255; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;", "-----------------------------------", "    } /// end of switch", "    return i;   /// ?! If no value to serialize", "}", "-----------------------------------", "function deserializeFast(buffer, i, isArray){   //// , options, isArray) {       //// no more options!", "    if (buffer.length \u003c 5) return new Error('Corrupt bson message \u003c 5 bytes long'); /// from 'throw'", "    var elementType, tempindex = 0, name;", "-----------------------------------", "    var string, low, high;              /// = lowBits / highBits", "                                        /// using 'i' as the index to keep the lines shorter:", "    i || ( i = 0 );  /// for parseResponse it's 0; set to running index in deserialize(object/array) recursion", "    var object = isArray ? [] : {};         /// needed for type ARRAY recursion later!", "    var size = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;", "-----------------------------------", "/// 'size' var was not used by anything after this, so we can reuse it", "", "    while(true) {                           // While we have more left data left keep parsing", "        elementType = buffer[i++];          // Read the type", "        if (elementType === 0) break;       // If we get a zero it's the last byte, exit", "", "        tempindex = i;  /// inlined readCStyleString \u0026 removed extra i\u003cbuffer.length check slowing EACH loop!", "        while( buffer[tempindex] !== 0x00 ) tempindex++;  /// read ahead w/out changing main 'i' index", "        if (tempindex \u003e= buffer.length) return new Error('Corrupt BSON document: illegal CString')", "-----------------------------------", "        i = tempindex + 1;               /// Update index position to after the string + '0' termination", "", "        switch(elementType) ", "-----------------------------------", "        case 7:     /// = BSON.BSON_DATA_OID:", "            var buf = new Buffer(12);", "-----------------------------------", "            buffer.copy(buf, 0, i, i += 12 );   /// copy 12 bytes from the current 'i' offset into fresh Buffer", "            object[name] = new ObjectID(buf);   ///... \u0026 attach to the new ObjectID instance", "            break;", "-----------------------------------", "        case 2:     /// = BSON.BSON_DATA_STRING:", "            size = buffer[i++] | buffer[i++] \u003c\u003c8 | buffer[i++] \u003c\u003c16 | buffer[i++] \u003c\u003c24;", "-----------------------------------", "            i++;        break;          /// need to get the '0' index \"tick-forward\" back!", "", "        case 16:    /// = BSON.BSON_DATA_INT:        // Decode the 32bit value", "            object[name] = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;    break;", "-----------------------------------", "        case 1:     /// = BSON.BSON_DATA_NUMBER:     // Decode the double value", "            object[name] = buffer.readDoubleLE(i);   /// slightly faster depending on dec.points; a LOT cleaner", "            /// OLD: object[name] = readIEEE754(buffer, i, 'little', 52, 8);", "            i += 8;     break;", "-----------------------------------", "        case 8:     /// = BSON.BSON_DATA_BOOLEAN:", "            object[name] = buffer[i++] == 1;    break;", "-----------------------------------", "        case 6:     /// = BSON.BSON_DATA_UNDEFINED:     /// deprecated", "        case 10:    /// = BSON.BSON_DATA_NULL:", "            object[name] = null;     break;", "-----------------------------------", "        case 4:     /// = BSON.BSON_DATA_ARRAY", "            size = buffer[i] | buffer[i+1] \u003c\u003c8 | buffer[i+2] \u003c\u003c16 | buffer[i+3] \u003c\u003c24;  /// NO 'i' increment since the size bytes are reread during the recursion!", "            object[name] = deserializeFast(buffer, i, true );  /// pass current index \u0026 set isArray = true", "            i += size;      break;", "-----------------------------------", "        case 3:     /// = BSON.BSON_DATA_OBJECT:", "            size = buffer[i] | buffer[i+1] \u003c\u003c8 | buffer[i+2] \u003c\u003c16 | buffer[i+3] \u003c\u003c24;", "-----------------------------------", "            object[name] = deserializeFast(buffer, i, false );          /// isArray = false =\u003e Object", "            i += size;      break;", "-----------------------------------", "        case 5:     /// = BSON.BSON_DATA_BINARY:             // Decode the size of the binary blob", "            size = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;", "-----------------------------------", "            buffer[i++];             /// Skip, as we assume always default subtype, i.e. 0!", "            object[name] = buffer.slice(i, i += size);  /// creates a new Buffer \"slice\" view of the same memory!", "            break;", "-----------------------------------", "        case 9:     /// = BSON.BSON_DATA_DATE:      /// SEE notes below on the Date type vs. other options...", "            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;", "-----------------------------------", "        case 18:    /// = BSON.BSON_DATA_LONG:  /// usage should be somewhat rare beyond parseResponse() -\u003e cursorId, where it is handled inline, NOT as part of deserializeFast(returnedObjects); get lowBits, highBits:", "            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;", "-----------------------------------", "            size = high * 4294967296 + (low \u003c 0 ? low + 4294967296 : low);      /// from long.toNumber()", "            if (size \u003c JS_INT_MAX \u0026\u0026 size \u003e JS_INT_MIN) object[name] = size;    /// positive # more likely!", "            else object[name] = new Long(low, high);    break;", "-----------------------------------", "        case 127:   /// = BSON.BSON_DATA_MIN_KEY:   /// do we EVER actually get these BACK from MongoDB server?!", "            object[name] = new MinKey();     break;", "-----------------------------------", "        case 255:   /// = BSON.BSON_DATA_MAX_KEY:", "            object[name] = new MaxKey();     break;", "-----------------------------------", "        case 17:    /// = BSON.BSON_DATA_TIMESTAMP:   /// somewhat obscure internal BSON type; MongoDB uses it for (pseudo) high-res time timestamp (past millisecs precision is just a counter!) in the Oplog ts: field, etc.", "            low  = buffer[i++] | buffer[i++] \u003c\u003c 8 | buffer[i++] \u003c\u003c 16 | buffer[i++] \u003c\u003c 24;", "-----------------------------------", "///        case 11:    /// = RegExp is skipped; we should NEVER be getting any from the MongoDB server!?", "        }   /// end of switch(elementType)", "    }   /// end of while(1)", "    return object;  // Return the finalized object", "}", "-----------------------------------", "function MinKey() { this._bsontype = 'MinKey'; }  /// these are merely placeholders/stubs to signify the type!?", "", "function MaxKey()  this._bsontype = 'MaxKey'; }", "-----------------------------------", "    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.", "}", "-----------------------------------", "    return new Long(num % 4294967296, num / 4294967296);    /// |0 is forced in the constructor!", "}", "-----------------------------------", "    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.", "}", "-----------------------------------", "///////////////////////////////  ObjectID /////////////////////////////////", "/// machine \u0026 proc IDs stored as 1 string, b/c Buffer shouldn't be held for long periods (could use SlowBuffer?!)", "", "var MACHINE = parseInt(Math.random() * 0xFFFFFF, 10);", "-----------------------------------", "var MACHINE_AND_PROC = encodeIntBE(MACHINE, 3) + encodeIntBE(PROCESS, 2); /// keep as ONE string, ready to go.", "", "function encodeIntBE(data, bytes){  /// encode the bytes to a string", "    var result = '';", "-----------------------------------", "var _counter = ~~(Math.random() * 0xFFFFFF);    /// double-tilde is equivalent to Math.floor()", "var checkForHex = new RegExp('^[0-9a-fA-F]24}$');", "-----------------------------------", "    if (!id){  this.id = createFromScratch();     /// base case, DONE.", "    } else ", "-----------------------------------", "            this.id = id;  /// case of", "        } else if (id.constructor === String) ", "-----------------------------------", "                this.id = new Error('Illegal/faulty Hexadecimal string supplied!');     /// changed from 'throw'", "            }", "-----------------------------------", "            this.id = createFromTime(id);    /// this is what should be the only interface for this!?", "        }", "-----------------------------------", "    var ts = ~~(Date.now()/1000);    /// 4 bytes timestamp in seconds, BigEndian notation!", "    buf[i++] = (ts \u003e\u003e 24) \u0026 0xFF;    buf[i++] = (ts \u003e\u003e 16) \u0026 0xFF;", "-----------------------------------", "    buf.write(MACHINE_AND_PROC, i, 5, 'utf8');  i += 5;  /// write 3 bytes + 2 bytes MACHINE_ID and PROCESS_ID", "    _counter = ++_counter % 0xFFFFFF;       /// 3 bytes internal _counter for subsecond resolution; BigEndian", "    buf[i++] = (_counter \u003e\u003e 16) \u0026 0xFF;", "-----------------------------------", "    ts || ( ts = ~~(Date.now()/1000) );     /// 4 bytes timestamp in seconds only", "    var buf = new Buffer(12), i = 0;", "-----------------------------------", "    for (;i \u003c 12; ++i) buf[i] = 0x00;       /// indeces 4 through 11 (8 bytes) get filled up with nulls", "    return buf;", "-----------------------------------", "ObjectID.createPk = function createPk () {  ///?override if a PrivateKey factory w/ unique factors is warranted?!", "  return new ObjectID();", "-----------------------------------", "/// module.exports.BSON = BSON;         /// not needed anymore!? exports.Binary = Binary;", "module.exports.ObjectID = ObjectID;", "-----------------------------------", "module.exports.Long = Long;    /// ?! we really don't want to do the complicated Long math anywhere for now!?", "", "//module.exports.Double = Double;", "//module.exports.Timestamp = Timestamp;", ""],
		"Functions": ["function calculateObjectSize(object) ", "function calculateElement(name, value) ", "module.exports.serialize = function(object, checkKeys, asBuffer, serializeFunctions, index) ", "function serializeFast(object, checkKeys, buffer, i)    /// set checkKeys = false in query(..., options object to save performance IFF you're certain your keys are safe/system-set!", "function packElement(name, value, checkKeys, buffer, i)     /// serializeFunctions removed! checkKeys needed for Array \u0026 Object cases pass through (calling serializeFast recursively!)", "function deserializeFast(buffer, i, isArray)   //// , options, isArray) {       //// no more options!", "function MinKey()  this._bsontype = 'MinKey'; }  /// these are merely placeholders/stubs to signify the type!?", "function MaxKey()  this._bsontype = 'MaxKey'; }", "function Long(low, high) ", "Long.prototype.getLowBits = function() return this.low_; }", "Long.prototype.getHighBits = function() return this.high_; }", "Long.prototype.toNumber = function()", "Long.fromNumber = function(num)", "function Double(value) ", "function Timestamp(low, high) ", "Timestamp.prototype.getLowBits = function() return this.low_; }", "Timestamp.prototype.getHighBits = function() return this.high_; }", "function encodeIntBE(data, bytes)  /// encode the bytes to a string", "function ObjectID(id) ", "function createFromScratch() ", "function createFromTime(ts) ", "ObjectID.prototype.toHexString = function toHexString() ", "ObjectID.prototype.getTimestamp = function getTimestamp() ", "ObjectID.prototype.getTimestampDate = function getTimestampDate() ", "ObjectID.createPk = function createPk ()   ///?override if a PrivateKey factory w/ unique factors is warranted?!", "ObjectID.prototype.toJSON = function toJSON() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\browser_build\\bson.js",
		"LineCount": 4844,
		"CharCount": 151658,
		"Comments": ["var bson = (function()", "-----------------------------------", "  /**", " * Module dependencies.", "-----------------------------------", "  var Buffer = require('buffer').Buffer; // TODO just use global Buffer", "}", "-----------------------------------", "// Binary default subtype", "var BSON_BINARY_SUBTYPE_DEFAULT = 0;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Create a buffer", "  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);", "-----------------------------------", "  // Write the content to the buffer", "  for(var i = 0; i \u003c data.length; i++) ", "-----------------------------------", "  // Write the string to the buffer", "  return buffer;", "-----------------------------------", "/**", " * Convert Array ot Uint8Array to Binary String", "-----------------------------------", "/**", " * A class representation of the BSON Binary type.", "-----------------------------------", "    // Only accept Buffer, Uint8Array or Arrays", "    if(typeof buffer == 'string') ", "-----------------------------------", "      // Different ways of writing the length of the string for the different types", "      if(typeof Buffer != 'undefined') ", "-----------------------------------", "    // Set position to start of buffer", "    this.position = 0;", "-----------------------------------", "/**", " * Updates this binary with byte_value.", "-----------------------------------", "  // If it's a string and a has more than one character throw an error", "  if(byte_value['length'] != null \u0026\u0026 typeof byte_value != 'number' \u0026\u0026 byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");", "-----------------------------------", "  // Decode the byte value once", "  var decoded_byte = null;", "-----------------------------------", "      // Create additional overflow buffer", "      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);", "-----------------------------------", "      // Combine the two buffers together", "      this.buffer.copy(buffer, 0, 0, this.buffer.length);", "-----------------------------------", "      // Create a new buffer (typed or normal array)", "      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') ", "-----------------------------------", "      // We need to copy all the content to the new array", "      for(var i = 0; i \u003c this.buffer.length; i++) ", "-----------------------------------", "      // Reassign the buffer", "      this.buffer = buffer;", "-----------------------------------", "      // Write the byte", "      this.buffer[this.position++] = decoded_byte;", "-----------------------------------", "/**", " * Writes a buffer or string to the binary.", "-----------------------------------", "  // If the buffer is to small let's extend the buffer", "  if(this.buffer.length \u003c offset + string.length) ", "-----------------------------------", "    // If we are in node.js", "    if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer))       ", "-----------------------------------", "      // Create a new buffer", "      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))", "-----------------------------------", "      // Copy the content", "      for(var i = 0; i \u003c this.position; i++) ", "-----------------------------------", "    // Assign the new buffer", "    this.buffer = buffer;", "-----------------------------------", "    // offset = string.length", "  } else if(typeof Buffer != 'undefined' \u0026\u0026 typeof string == 'string' \u0026\u0026 Buffer.isBuffer(this.buffer)) ", "-----------------------------------", "    // offset = string.length;", "  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]' ", "-----------------------------------", "/**", " * Reads **length** bytes starting at **position**.", "-----------------------------------", "  // Let's return the data based on the type we have", "  if(this.buffer['slice']) ", "-----------------------------------", "    // Create a buffer to keep the result", "    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);", "-----------------------------------", "  // Return the buffer", "  return buffer;", "-----------------------------------", "/**", " * Returns the value of this binary as a string.", "-----------------------------------", "  // If it's a node.js buffer object", "  if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) ", "-----------------------------------", "      // we support the slice command use it", "      if(this.buffer['slice'] != null) ", "-----------------------------------", "        // Create a new buffer to copy content to", "        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);", "-----------------------------------", "        // Copy content", "        for(var i = 0; i \u003c this.position; i++) ", "-----------------------------------", "        // Return the buffer", "        return newBuffer;", "-----------------------------------", "/**", " * Length.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * Default BSON type", "-----------------------------------", "/**", " * Function BSON type", "-----------------------------------", "/**", " * Byte Array BSON type", "-----------------------------------", "/**", " * OLD UUID BSON type", "-----------------------------------", "/**", " * UUID BSON type", "-----------------------------------", "/**", " * MD5 BSON type", "-----------------------------------", "/**", " * User BSON type", "-----------------------------------", "/**", " * Expose.", "-----------------------------------", "  /**", " * Binary Parser.", "-----------------------------------", " * http://jsfromhell.com/classes/binary-parser [v1.0]", " */", "-----------------------------------", "      , max = maxBits[bits]; //max = Math.pow( 2, bits );", "  ", "-----------------------------------", "// Factor out the encode so it can be shared by add_header and push_int32", "BinaryParser.encode_int32 = function encode_int32 (number, asArray) ", "-----------------------------------", "/**", " * UTF8 methods", "-----------------------------------", "// Take a raw binary string and return a utf8 string", "BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ", "-----------------------------------", "// Encode a cstring", "BinaryParser.encode_cstring = function encode_cstring (s) ", "-----------------------------------", "// Take a utf8 string and return a binary string", "BinaryParser.encode_utf8 = function encode_utf8 (s) ", "-----------------------------------", "/**", " * BinaryParser buffer constructor.", "-----------------------------------", "\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)", "", "\tfunction shl (a, b) ", "-----------------------------------", "/**", " * Expose.", "-----------------------------------", "// To ensure that 0.4 of node works correctly", "var isDate = function isDate(d) ", "-----------------------------------", "/**", " * Create a new BSON instance", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "/**", " * Calculate the bson size for a passed in Javascript object.", "-----------------------------------", "\t\t// If we have toBSON defined, override the current object", "\t\tif(object.toBSON) ", "-----------------------------------", "\t\t// Calculate size", "    for(var key in object) ", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit", "          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (4 + 1);", "-----------------------------------", "      } else {  // 64 bit", "        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);", "-----------------------------------", "        // Calculate size depending on the availability of a scope", "        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) ", "-----------------------------------", "        // Check what kind of subtype we have", "        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Set up correct object for serialization", "        var ordered_values = ", "-----------------------------------", "        // Add db reference if it exists", "        if(null != value.db) ", "-----------------------------------", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') ", "-----------------------------------", "/**", " * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.", "-----------------------------------", "  // Default setting false", "  serializeFunctions = serializeFunctions == null ? false : serializeFunctions;", "-----------------------------------", "  // Write end information (length of the object)", "  var size = buffer.length;", "-----------------------------------", "  // Write the size of the object", "  buffer[index++] = size \u0026 0xff;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Process the object", "  if(Array.isArray(object)) ", "-----------------------------------", "\t\t// If we have toBSON defined, override the current object", "\t\tif(object.toBSON) ", "-----------------------------------", "\t\t// Serialize the object", "    for(var key in object) ", "-----------------------------------", "      // Check the key and throw error if it's illegal", "      if (key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') ", "-----------------------------------", "        // dollars and dots ok", "        BSON.checkKey(key, !checkKeys);", "-----------------------------------", "      // Pack the element", "      index = packElement(key, object[key], checkKeys, buffer, index, serializeFunctions);", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0;", "-----------------------------------", "    ch = str.charCodeAt(i);  // get char", "    st = [];                 // set up \"stack\"", "    do ", "-----------------------------------", "      st.push( ch \u0026 0xFF );  // push byte to stack", "      ch = ch \u003e\u003e 8;          // shift value down by 1 byte", "    }", "-----------------------------------", "    // add stack contents to result", "    // done because chars have \"wrong\" endianness", "    re = re.concat( st.reverse() );", "-----------------------------------", "  // return an array of bytes", "  return re;", "-----------------------------------", "    ch = str.charCodeAt(i);  // get char", "    st = [];                 // set up \"stack\"", "    do ", "-----------------------------------", "      st.push( ch \u0026 0xFF );  // push byte to stack", "      ch = ch \u003e\u003e 8;          // shift value down by 1 byte", "    }", "-----------------------------------", "    // add stack contents to result", "    // done because chars have \"wrong\" endianness", "    re = re + st.length;", "-----------------------------------", "  // return an array of bytes", "  return re;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "      // Encode String type", "      buffer[index++] = BSON.BSON_DATA_STRING;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Calculate size", "      var size = supportsBuffer ? Buffer.byteLength(value) + 1 : numberOfBytes(value) + 1;", "-----------------------------------", "      // Write the size of the string to buffer", "      buffer[index + 3] = (size \u003e\u003e 24) \u0026 0xff;", "-----------------------------------", "      // Ajust the index", "      index = index + 4;", "-----------------------------------", "      // Write the string", "      supportsBuffer ? buffer.write(value, index, 'utf8') : writeToTypedArray(buffer, value, index);", "-----------------------------------", "      // Update index", "      index = index + size - 1;", "-----------------------------------", "      // Write zero", "      buffer[index++] = 0;", "-----------------------------------", "      // Return index", "      return index;", "-----------------------------------", "      // We have an integer value", "      if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) ", "-----------------------------------", "        // If the value fits in 32 bits encode as int, if it fits in a double", "        // encode it as a double, otherwise long", "        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) ", "-----------------------------------", "          // Set int type 32 bits or less", "          buffer[index++] = BSON.BSON_DATA_INT;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Write the int value", "          buffer[index++] = value \u0026 0xff;", "-----------------------------------", "          // Encode as double", "          buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Write float", "          writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "          // Ajust index", "          index = index + 8;", "-----------------------------------", "          // Set long type", "          buffer[index++] = BSON.BSON_DATA_LONG;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Encode low bits", "          buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "          // Encode high bits", "          buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Encode as double", "        buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write float", "        writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "        // Ajust index", "        index = index + 8;", "-----------------------------------", "      // Set long type", "      buffer[index++] = BSON.BSON_DATA_NULL;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Write the type", "      buffer[index++] = BSON.BSON_DATA_BOOLEAN;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "      // Encode the boolean value", "      buffer[index++] = value ? 1 : 0;", "-----------------------------------", "        // Write the type of either min or max key", "        if(value === null) ", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_OID;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write objectid", "        supportsBuffer ? buffer.write(value.id, index, 'binary') : writeToTypedArray(buffer, value.id, index);", "-----------------------------------", "        // Ajust index", "        index = index + 12;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_DATE;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the date", "        var dateInMilis = Long.fromNumber(value.getTime());", "-----------------------------------", "        // Encode low bits", "        buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "        // Encode high bits", "        buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Get size of the buffer (current write point)", "        var size = value.length;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the default subtype", "        buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;", "-----------------------------------", "        // Copy the content form the binary field to the buffer", "        value.copy(buffer, index, 0, size);", "-----------------------------------", "        // Adjust the index", "        index = index + size;", "-----------------------------------", "        // Write the type", "        buffer[index++] = value instanceof Long ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the date", "        var lowBits = value.getLowBits();", "-----------------------------------", "        // Encode low bits", "        buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "        // Encode high bits", "        buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "        // Encode as double", "        buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write float", "        writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "        // Ajust index", "        index = index + 8;", "-----------------------------------", "          // Write the type", "          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Calculate the scope size", "          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);", "-----------------------------------", "          // Function string", "          var functionString = value.code.toString();", "-----------------------------------", "          // Function Size", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Calculate full size of the object", "          var totalSize = 4 + codeSize + scopeSize + 4;", "-----------------------------------", "          // Write the total size of the object", "          buffer[index++] = totalSize \u0026 0xff;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = codeSize \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + codeSize - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Serialize the scope object", "          var scopeObjectBuffer = supportsBuffer ? new Buffer(scopeSize) : new Uint8Array(new ArrayBuffer(scopeSize));", "-----------------------------------", "          // Execute the serialization into a seperate buffer", "          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);", "-----------------------------------", "          // Adjusted scope Size (removing the header)", "          var scopeDocSize = scopeSize;", "-----------------------------------", "          // Write scope object size", "          buffer[index++] = scopeDocSize \u0026 0xff;", "-----------------------------------", "          // Write the scopeObject into the buffer", "          supportsBuffer ? scopeObjectBuffer.copy(buffer, index, 0, scopeSize) : buffer.set(scopeObjectBuffer, index);", "-----------------------------------", "          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)", "          index = index + scopeDocSize - 5;", "-----------------------------------", "          // Write trailing zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Function string", "          var functionString = value.code.toString();", "-----------------------------------", "          // Function Size", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = size \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + size - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Extract the buffer", "        var data = value.value(true);", "-----------------------------------", "        // Calculate size", "        var size = value.position;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the subtype to the buffer", "        buffer[index++] = value.sub_type;", "-----------------------------------", "        // If we have binary type 2 the 4 first bytes are the size", "        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Write the data to the object", "        supportsBuffer ? data.copy(buffer, index, 0, value.position) : buffer.set(data, index);", "-----------------------------------", "        // Ajust index", "        index = index + value.position;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_SYMBOL;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Calculate size", "        var size = supportsBuffer ? Buffer.byteLength(value.value) + 1 : numberOfBytes(value.value) + 1;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write the string", "        buffer.write(value.value, index, 'utf8');", "-----------------------------------", "        // Update index", "        index = index + size - 1;", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_OBJECT;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Set up correct object for serialization", "        var ordered_values = ", "-----------------------------------", "        // Add db reference if it exists", "        if(null != value.db) ", "-----------------------------------", "        // Message size", "        var size = BSON.calculateObjectSize(ordered_values, serializeFunctions);", "-----------------------------------", "        // Serialize the object", "        var endIndex = BSON.serializeWithBufferAndIndex(ordered_values, checkKeys, buffer, index, serializeFunctions);", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "        // Write zero for object", "        buffer[endIndex++] = 0x00;", "-----------------------------------", "        // Return the end index", "        return endIndex;", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the regular expression string", "        supportsBuffer ? buffer.write(value.source, index, 'utf8') : writeToTypedArray(buffer, value.source, index);", "-----------------------------------", "        // Adjust the index", "        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the parameters", "        if(value.global) buffer[index++] = 0x73; // s", "        if(value.ignoreCase) buffer[index++] = 0x69; // i", "        if(value.multiline) buffer[index++] = 0x6d; // m", "        // Add ending zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the type", "        buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Adjust the index", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write size", "        var size = endIndex - index;", "-----------------------------------", "        // Write the size of the string to buffer", "        buffer[index++] = size \u0026 0xff;", "-----------------------------------", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') ", "-----------------------------------", "        // Write the type", "        buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "        // Number of written bytes", "        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "        // Encode the name", "        index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "        // Write the regular expression string", "        buffer.write(value.source, index, 'utf8');", "-----------------------------------", "        // Adjust the index", "        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));", "-----------------------------------", "        // Write zero", "        buffer[index++] = 0x00;", "-----------------------------------", "        // Write the parameters", "        if(value.global) buffer[index++] = 0x73; // s", "        if(value.ignoreCase) buffer[index++] = 0x69; // i", "        if(value.multiline) buffer[index++] = 0x6d; // m", "        // Add ending zero", "        buffer[index++] = 0x00;", "-----------------------------------", "          // Write the type", "          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Calculate the scope size", "          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);", "-----------------------------------", "          // Function string", "          var functionString = value.toString();", "-----------------------------------", "          // Function Size", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Calculate full size of the object", "          var totalSize = 4 + codeSize + scopeSize;", "-----------------------------------", "          // Write the total size of the object", "          buffer[index++] = totalSize \u0026 0xff;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = codeSize \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + codeSize - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Serialize the scope object", "          var scopeObjectBuffer = new Buffer(scopeSize);", "-----------------------------------", "          // Execute the serialization into a seperate buffer", "          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);", "-----------------------------------", "          // Adjusted scope Size (removing the header)", "          var scopeDocSize = scopeSize - 4;", "-----------------------------------", "          // Write scope object size", "          buffer[index++] = scopeDocSize \u0026 0xff;", "-----------------------------------", "          // Write the scopeObject into the buffer", "          scopeObjectBuffer.copy(buffer, index, 0, scopeSize);", "-----------------------------------", "          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)", "          index = index + scopeDocSize - 5;", "-----------------------------------", "          // Write trailing zero", "          buffer[index++] = 0;", "-----------------------------------", "          // Number of written bytes", "          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);", "-----------------------------------", "          // Encode the name", "          index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "          // Function string", "          var functionString = value.toString();", "-----------------------------------", "          // Function Size", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "-----------------------------------", "          // Write the size of the string to buffer", "          buffer[index++] = size \u0026 0xff;", "-----------------------------------", "          // Write the string", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "-----------------------------------", "          // Update index", "          index = index + size - 1;", "-----------------------------------", "          // Write zero", "          buffer[index++] = 0;", "-----------------------------------", "  // If no value to serialize", "  return index;", "-----------------------------------", "/**", " * Serialize a Javascript object.", "-----------------------------------", "  // Throw error if we are trying serialize an illegal type", "  if(object == null || typeof object != 'object' || Array.isArray(object)) ", "-----------------------------------", "  // Emoty target buffer", "  var buffer = null;", "-----------------------------------", "  // Calculate the size of the object", "  var size = BSON.calculateObjectSize(object, serializeFunctions);", "-----------------------------------", "  // Fetch the best available type for storing the binary data", "  if(buffer = typeof Buffer != 'undefined') ", "-----------------------------------", "  // If asBuffer is false use typed arrays", "  BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, 0, serializeFunctions);", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Crc state variables shared by function", "-----------------------------------", "/**", " * CRC32 hash method, Fast and enough versitility for our usage", "-----------------------------------", "/**", " * Deserialize stream data as BSON documents.", "-----------------------------------", "  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");", "  options = options != null ? options : };", "-----------------------------------", "  // Loop over all documents", "  for(var i = 0; i \u003c numberOfDocuments; i++) ", "-----------------------------------", "    // Find size of the document", "    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;", "-----------------------------------", "    // Update options with index", "    options['index'] = index;", "-----------------------------------", "    // Parse the document at this point", "    documents[docStartIndex + i] = BSON.deserialize(data, options);", "-----------------------------------", "    // Adjust index by the document size", "    index = index + size;", "-----------------------------------", "  // Return object containing end index of parsing and list of documents", "  return index;", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "-----------------------------------", "  // Set the object", "  return functionCache[hash].bind(object);", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Eval the function", "  eval(\"value = \" + functionString);", "-----------------------------------", "/**", " * Convert Uint8Array to String", "-----------------------------------", "/**", " * Deserialize data as BSON.", "-----------------------------------", "  // Options", "  options = options == null ? } : options;", "-----------------------------------", "  // Validate that we have at least 4 bytes of buffer", "  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");", "-----------------------------------", "  // Set up index", "  var index = typeof options['index'] == 'number' ? options['index'] : 0;", "-----------------------------------", "  // Reads in a C style string", "  var readCStyleString = function() ", "-----------------------------------", "    // Get the start search index", "    var i = index;", "-----------------------------------", "    // Locate the end of the c string", "    while(buffer[i] !== 0x00)  i++ }", "-----------------------------------", "    // Grab utf8 encoded string", "    var string = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, i) : convertUint8ArrayToUtf8String(buffer, index, i);", "-----------------------------------", "    // Update index position", "    index = i + 1;", "-----------------------------------", "    // Return string", "    return string;", "-----------------------------------", "  // Create holding object", "  var object = isArray ? [] : };", "-----------------------------------", "  // Read the document size", "  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "  // Ensure buffer is valid size", "  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");", "-----------------------------------", "  // While we have more left data left keep parsing", "  while(true) ", "-----------------------------------", "    // Read the type", "    var elementType = buffer[index++];", "-----------------------------------", "    // If we get a zero it's the last byte, exit", "    if(elementType == 0) break;", "-----------------------------------", "    // Read the name of the field", "    var name = readCStyleString();", "-----------------------------------", "    // Switch on the type", "    switch(elementType) ", "-----------------------------------", "        // Decode the oid", "        object[name] = new ObjectID(string);", "-----------------------------------", "        // Update index", "        index = index + 12;", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Add string to object", "        object[name] = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Decode the 32bit value", "        object[name] = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Decode the double value", "        object[name] = readIEEE754(buffer, index, 'little', 52, 8);", "-----------------------------------", "        // Update the index", "        index = index + 8;", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Set date object", "        object[name] = new Date(new Long(lowBits, highBits).toNumber());", "-----------------------------------", "        // Parse the boolean value", "        object[name] = buffer[index++] == 1;", "-----------------------------------", "        // Parse the boolean value", "        object[name] = null;", "-----------------------------------", "        // Decode the size of the binary blob", "        var binarySize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Decode the subtype", "        var subType = buffer[index++];", "-----------------------------------", "        // Decode as raw Buffer object if options specifies it", "        if(buffer['slice'] != null) ", "-----------------------------------", "          // If we have subtype 2 skip the 4 bytes for the size", "          if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "          // Slice the data", "          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);", "-----------------------------------", "          // If we have subtype 2 skip the 4 bytes for the size", "          if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "          // Copy the data", "          for(var i = 0; i \u003c binarySize; i++) ", "-----------------------------------", "          // Create the binary object", "          object[name] = new Binary(_buffer, subType);", "-----------------------------------", "        // Update the index", "        index = index + binarySize;", "-----------------------------------", "        // Decode the size of the array document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Set the array to the object", "        object[name] = BSON.deserialize(buffer, options, true);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // Decode the size of the object document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Set the array to the object", "        object[name] = BSON.deserialize(buffer, options, false);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // Create the regexp", "        var source = readCStyleString();", "-----------------------------------", "        // For each option add the corresponding one for javascript", "        var optionsArray = new Array(regExpOptions.length);", "-----------------------------------", "        // Parse options", "        for(var i = 0; i \u003c regExpOptions.length; i++) ", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Create long object", "        var long = new Long(lowBits, highBits); ", "-----------------------------------", "        // Promote the long if possible", "        if(promoteLongs) ", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Add string to object", "        object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Unpack the low and high bits", "        var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Set the object", "        object[name] = new Timestamp(lowBits, highBits);", "-----------------------------------", "        // Parse the object", "        object[name] = new MinKey();", "-----------------------------------", "        // Parse the object", "        object[name] = new MaxKey();", "-----------------------------------", "        // Read the content of the field", "        var stringSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Function string", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // If we are evaluating the functions", "        if(evalFunctions) ", "-----------------------------------", "          // Contains the value we are going to set", "          var value = null;", "-----------------------------------", "          // If we have cache enabled let's look for the md5 of the function in the cache", "          if(cacheFunctions) ", "-----------------------------------", "            // Got to do this to avoid V8 deoptimizing the call due to finding eval", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "            // Set directly", "            object[name] = isolateEval(functionString);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Read the content of the field", "        var totalSize = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "        // Javascript function", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "-----------------------------------", "        // Update parse index position", "        index = index + stringSize;", "-----------------------------------", "        // Parse the element", "        options['index'] = index;", "-----------------------------------", "        // Decode the size of the object document", "        var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "        // Decode the scope object", "        var scopeObject = BSON.deserialize(buffer, options, false);", "-----------------------------------", "        // Adjust the index", "        index = index + objectSize;", "-----------------------------------", "        // If we are evaluating the functions", "        if(evalFunctions) ", "-----------------------------------", "          // Contains the value we are going to set", "          var value = null;", "-----------------------------------", "          // If we have cache enabled let's look for the md5 of the function in the cache", "          if(cacheFunctions) ", "-----------------------------------", "            // Got to do this to avoid V8 deoptimizing the call due to finding eval", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "            // Set directly", "            object[name] = isolateEval(functionString);", "-----------------------------------", "          // Set the scope on the object", "          object[name].scope = scopeObject;", "-----------------------------------", "        // Add string to object", "        break;", "-----------------------------------", "  // Check if we have a db ref object", "  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);", "-----------------------------------", "  // Return the final objects", "  return object;", "-----------------------------------", "/**", " * Check if key name is valid.", "-----------------------------------", "  // Check if we have a legal key for the object", "  if (!!~key.indexOf(\"\\x00\")) ", "-----------------------------------", "    // The BSON spec doesn't allow keys with null bytes because keys are", "    // null-terminated.", "    throw Error(\"key \" + key + \" must not contain null bytes\");", "-----------------------------------", "/**", " * Deserialize data as BSON.", "-----------------------------------", "/**", " * Deserialize stream data as BSON documents.", "-----------------------------------", "/**", " * Serialize a Javascript object.", "-----------------------------------", "/**", " * Calculate the bson size for a passed in Javascript object.", "-----------------------------------", "/**", " * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  /**", " * A class representation of the BSON Code type.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  /**", " * A class representation of the BSON DBRef type.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  /**", " * A class representation of the BSON Double type.", "-----------------------------------", "/**", " * Access the number value.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Copyright (c) 2008, Fair Oaks Labs, Inc.", "// All rights reserved.", "// ", "// Redistribution and use in source and binary forms, with or without", "// modification, are permitted provided that the following conditions are met:", "// ", "//  * Redistributions of source code must retain the above copyright notice,", "//    this list of conditions and the following disclaimer.", "// ", "//  * Redistributions in binary form must reproduce the above copyright notice,", "//    this list of conditions and the following disclaimer in the documentation", "//    and/or other materials provided with the distribution.", "// ", "//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors", "//    may be used to endorse or promote products derived from this software", "//    without specific prior written permission.", "// ", "// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"", "// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE", "// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE", "// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE", "// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR", "// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF", "// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS", "// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN", "// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)", "// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE", "// POSSIBILITY OF SUCH DAMAGE.", "//", "//", "// Modifications to writeIEEE754 to support negative zeroes made by Brian White", "", "var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ", "-----------------------------------", "  // do nothing", "}", "-----------------------------------", "// Exports all the classes for the NATIVE JS BSON Parser", "exports.native = function() ", "-----------------------------------", "  // Map all the classes", "  [ './binary_parser'", "-----------------------------------", "  // Return classes list", "  return classes;", "-----------------------------------", "// Exports all the classes for the PURE JS BSON Parser", "exports.pure = function() ", "-----------------------------------", "  // Map all the classes", "  [ './binary_parser'", "-----------------------------------", "  // Return classes list", "  return classes;", "-----------------------------------", "  // Licensed under the Apache License, Version 2.0 (the \"License\");", "// you may not use this file except in compliance with the License.", "// You may obtain a copy of the License at", "//", "//     http://www.apache.org/licenses/LICENSE-2.0", "//", "// Unless required by applicable law or agreed to in writing, software", "// distributed under the License is distributed on an \"AS IS\" BASIS,", "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "// See the License for the specific language governing permissions and", "// limitations under the License.", "//", "// Copyright 2009 Google Inc. All Rights Reserved", "", "/**", " * Defines a Long class for representing a 64-bit two's-complement", "-----------------------------------", "  /**", "   * @type number}", "-----------------------------------", "  this.low_ = low | 0;  // force into 32 signed bits.", "", "  /**", "   * @type number}", "-----------------------------------", "  this.high_ = high | 0;  // force into 32 signed bits.", "};", "-----------------------------------", "/**", " * Return the int value.", "-----------------------------------", "/**", " * Return the Number value.", "-----------------------------------", "/**", " * Return the JSON value.", "-----------------------------------", "/**", " * Return the String value.", "-----------------------------------", "      // We need to change the Long value before it can be negated, so we remove", "      // the bottom-most digit in this base and then recurse to do the rest.", "      var radixLong = Long.fromNumber(radix);", "-----------------------------------", "  // Do several (6) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Long.fromNumber(Math.pow(radix, 6));", "-----------------------------------", "/**", " * Return the high 32-bits value.", "-----------------------------------", "/**", " * Return the low 32-bits value.", "-----------------------------------", "/**", " * Return the low unsigned 32-bits value.", "-----------------------------------", "/**", " * Returns the number of bits needed to represent the absolute value of this Long.", "-----------------------------------", "/**", " * Return whether this value is zero.", "-----------------------------------", "/**", " * Return whether this value is negative.", "-----------------------------------", "/**", " * Return whether this value is odd.", "-----------------------------------", "/**", " * Return whether this Long equals the other", "-----------------------------------", "/**", " * Return whether this Long does not equal the other.", "-----------------------------------", "/**", " * Return whether this Long is less than the other.", "-----------------------------------", "/**", " * Return whether this Long is less than or equal to the other.", "-----------------------------------", "/**", " * Return whether this Long is greater than the other.", "-----------------------------------", "/**", " * Return whether this Long is greater than or equal to the other.", "-----------------------------------", "/**", " * Compares this Long with the given one.", "-----------------------------------", "  // at this point, the signs are the same, so subtraction will not overflow", "  if (this.subtract(other).isNegative()) ", "-----------------------------------", "/**", " * The negation of this value.", "-----------------------------------", "/**", " * Returns the sum of this and the given Long.", "-----------------------------------", "  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns the difference of this and the given Long.", "-----------------------------------", "/**", " * Returns the product of this and the given Long.", "-----------------------------------", "  // If both Longs are small, use float multiplication", "  if (this.lessThan(Long.TWO_PWR_24_) \u0026\u0026", "-----------------------------------", "  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.", "  // We can skip products that would overflow.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns this Long divided by the given one.", "-----------------------------------", "      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE", "    } else if (other.equals(Long.MIN_VALUE)) ", "-----------------------------------", "      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.", "      var halfThis = this.shiftRight(1);", "-----------------------------------", "  // Repeat the following until the remainder is less than other:  find a", "  // floating-point that approximates remainder / other *from below*, add this", "  // into the result, and subtract it from the remainder.  It is critical that", "  // the approximate value is less than or equal to the real value so that the", "  // remainder never becomes negative.", "  var res = Long.ZERO;", "-----------------------------------", "    // Approximate the result of division. This may be a little greater or", "    // smaller than the actual value.", "    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));", "-----------------------------------", "    // We will tweak the approximate result by changing it in the 48-th digit or", "    // the smallest non-fractional digit, whichever is larger.", "    var log2 = Math.ceil(Math.log(approx) / Math.LN2);", "-----------------------------------", "    // Decrease the approximation until it is smaller than the remainder.  Note", "    // that if it is too large, the product overflows and is negative.", "    var approxRes = Long.fromNumber(approx);", "-----------------------------------", "    // We know the answer can't be zero... and actually, zero would cause", "    // infinite recursion since we would make no progress.", "    if (approxRes.isZero()) ", "-----------------------------------", "/**", " * Returns this Long modulo the given one.", "-----------------------------------", "/**", " * The bitwise-NOT of this value.", "-----------------------------------", "/**", " * Returns the bitwise-AND of this Long and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-OR of this Long and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-XOR of this Long and the given one.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the left by the given amount.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the right by the given amount.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.", "-----------------------------------", "/**", " * Returns a Long representing the given (32-bit) integer value.", "-----------------------------------", "/**", " * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.", "-----------------------------------", "/**", " * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.", "-----------------------------------", "/**", " * Returns a Long representation of the given string, written using the given radix.", "-----------------------------------", "  // Do several (8) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Long.fromNumber(Math.pow(radix, 8));", "-----------------------------------", "// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the", "// from* methods on which they depend.", "", "", "/**", " * A cache of the Long representations of small integer values.", "-----------------------------------", "// NOTE: the compiler should inline these constant values below and then remove", "// these variables, so there should be no runtime penalty for these.", "", "/**", " * Number used repeated below in calculations.  This must appear before the", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/** @type {Long} */", "Long.ZERO = Long.fromInt(0);", "-----------------------------------", "/** @type {Long} */", "Long.ONE = Long.fromInt(1);", "-----------------------------------", "/** @type {Long} */", "Long.NEG_ONE = Long.fromInt(-1);", "-----------------------------------", "/** @type {Long} */", "Long.MAX_VALUE =", "-----------------------------------", "/** @type {Long} */", "Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);", "-----------------------------------", "/**", " * @type Long}", "-----------------------------------", "/**", " * Expose.", "-----------------------------------", "  /**", " * A class representation of the BSON MaxKey type.", "-----------------------------------", "  /**", " * A class representation of the BSON MinKey type.", "-----------------------------------", "  /**", " * Module dependencies.", "-----------------------------------", "/**", " * Machine id.", "-----------------------------------", "// Regular expression that checks for hex value", "var checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]24}$\");", "-----------------------------------", "/**", "* Create a new ObjectID instance", "-----------------------------------", "  // Throw an error if it's not a valid setup", "  if(id != null \u0026\u0026 'number' != typeof id \u0026\u0026 (id.length != 12 \u0026\u0026 id.length != 24))", "-----------------------------------", "  // Generate id based on the input", "  if(id == null || typeof id == 'number') ", "-----------------------------------", "    // convert to 12 byte binary string", "    this.id = this.generate(id);", "-----------------------------------", "    // assume 12 byte string", "    this.id = id;", "-----------------------------------", "// Allow usage of ObjectId as well as ObjectID", "var ObjectId = ObjectID;", "-----------------------------------", "// Precomputed hex table enables speedy hex string conversion", "var hexTable = [];", "-----------------------------------", "/**", "* Return the ObjectID id as a 24 byte hex string representation", "-----------------------------------", "/**", "* Update the ObjectID index used in generating new ObjectID's on the driver", "-----------------------------------", "/**", "* Update the ObjectID index used in generating new ObjectID's on the driver", "-----------------------------------", "/**", "* Generate a 12 byte id string used in ObjectID's", "-----------------------------------", "/**", "* Converts the id into a 24 byte hex string for printing", "-----------------------------------", "/**", "* Converts to a string representation of this Id.", "-----------------------------------", "/**", "* Converts to its JSON representation.", "-----------------------------------", "/**", "* Compares the equality of this ObjectID with `otherID`.", "-----------------------------------", "/**", "* Returns the generation date (accurate up to the second) that this ID was generated.", "-----------------------------------", "/**", "* @ignore", "-----------------------------------", "/**", "* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.", "-----------------------------------", "/**", "* Creates an ObjectID from a hex string representation of an ObjectID.", "-----------------------------------", "  // Throw an error if it's not a valid setup", "  if(typeof hexString === 'undefined' || hexString != null \u0026\u0026 hexString.length != 24)", "-----------------------------------", "/**", "* @ignore", "-----------------------------------", "     // delete this.__id;", "     this.toHexString();", "-----------------------------------", "/**", " * Expose.", "-----------------------------------", "  /**", " * A class representation of the BSON Symbol type.", "-----------------------------------", "/**", " * Access the wrapped string value.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Licensed under the Apache License, Version 2.0 (the \"License\");", "// you may not use this file except in compliance with the License.", "// You may obtain a copy of the License at", "//", "//     http://www.apache.org/licenses/LICENSE-2.0", "//", "// Unless required by applicable law or agreed to in writing, software", "// distributed under the License is distributed on an \"AS IS\" BASIS,", "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "// See the License for the specific language governing permissions and", "// limitations under the License.", "//", "// Copyright 2009 Google Inc. All Rights Reserved", "", "/**", " * Defines a Timestamp class for representing a 64-bit two's-complement", "-----------------------------------", "  /**", "   * @type number}", "-----------------------------------", "  this.low_ = low | 0;  // force into 32 signed bits.", "", "  /**", "   * @type number}", "-----------------------------------", "  this.high_ = high | 0;  // force into 32 signed bits.", "};", "-----------------------------------", "/**", " * Return the int value.", "-----------------------------------", "/**", " * Return the Number value.", "-----------------------------------", "/**", " * Return the JSON value.", "-----------------------------------", "/**", " * Return the String value.", "-----------------------------------", "      // We need to change the Timestamp value before it can be negated, so we remove", "      // the bottom-most digit in this base and then recurse to do the rest.", "      var radixTimestamp = Timestamp.fromNumber(radix);", "-----------------------------------", "  // Do several (6) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));", "-----------------------------------", "/**", " * Return the high 32-bits value.", "-----------------------------------", "/**", " * Return the low 32-bits value.", "-----------------------------------", "/**", " * Return the low unsigned 32-bits value.", "-----------------------------------", "/**", " * Returns the number of bits needed to represent the absolute value of this Timestamp.", "-----------------------------------", "/**", " * Return whether this value is zero.", "-----------------------------------", "/**", " * Return whether this value is negative.", "-----------------------------------", "/**", " * Return whether this value is odd.", "-----------------------------------", "/**", " * Return whether this Timestamp equals the other", "-----------------------------------", "/**", " * Return whether this Timestamp does not equal the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is less than the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is less than or equal to the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is greater than the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is greater than or equal to the other.", "-----------------------------------", "/**", " * Compares this Timestamp with the given one.", "-----------------------------------", "  // at this point, the signs are the same, so subtraction will not overflow", "  if (this.subtract(other).isNegative()) ", "-----------------------------------", "/**", " * The negation of this value.", "-----------------------------------", "/**", " * Returns the sum of this and the given Timestamp.", "-----------------------------------", "  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns the difference of this and the given Timestamp.", "-----------------------------------", "/**", " * Returns the product of this and the given Timestamp.", "-----------------------------------", "  // If both Timestamps are small, use float multiplication", "  if (this.lessThan(Timestamp.TWO_PWR_24_) \u0026\u0026", "-----------------------------------", "  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.", "  // We can skip products that would overflow.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns this Timestamp divided by the given one.", "-----------------------------------", "      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE", "    } else if (other.equals(Timestamp.MIN_VALUE)) ", "-----------------------------------", "      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.", "      var halfThis = this.shiftRight(1);", "-----------------------------------", "  // Repeat the following until the remainder is less than other:  find a", "  // floating-point that approximates remainder / other *from below*, add this", "  // into the result, and subtract it from the remainder.  It is critical that", "  // the approximate value is less than or equal to the real value so that the", "  // remainder never becomes negative.", "  var res = Timestamp.ZERO;", "-----------------------------------", "    // Approximate the result of division. This may be a little greater or", "    // smaller than the actual value.", "    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));", "-----------------------------------", "    // We will tweak the approximate result by changing it in the 48-th digit or", "    // the smallest non-fractional digit, whichever is larger.", "    var log2 = Math.ceil(Math.log(approx) / Math.LN2);", "-----------------------------------", "    // Decrease the approximation until it is smaller than the remainder.  Note", "    // that if it is too large, the product overflows and is negative.", "    var approxRes = Timestamp.fromNumber(approx);", "-----------------------------------", "    // We know the answer can't be zero... and actually, zero would cause", "    // infinite recursion since we would make no progress.", "    if (approxRes.isZero()) ", "-----------------------------------", "/**", " * Returns this Timestamp modulo the given one.", "-----------------------------------", "/**", " * The bitwise-NOT of this value.", "-----------------------------------", "/**", " * Returns the bitwise-AND of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-OR of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-XOR of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the left by the given amount.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the right by the given amount.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.", "-----------------------------------", "/**", " * Returns a Timestamp representing the given (32-bit) integer value.", "-----------------------------------", "/**", " * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.", "-----------------------------------", "/**", " * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.", "-----------------------------------", "/**", " * Returns a Timestamp representation of the given string, written using the given radix.", "-----------------------------------", "  // Do several (8) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));", "-----------------------------------", "// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the", "// from* methods on which they depend.", "", "", "/**", " * A cache of the Timestamp representations of small integer values.", "-----------------------------------", "// NOTE: the compiler should inline these constant values below and then remove", "// these variables, so there should be no runtime penalty for these.", "", "/**", " * Number used repeated below in calculations.  This must appear before the", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.ZERO = Timestamp.fromInt(0);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.ONE = Timestamp.fromInt(1);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.NEG_ONE = Timestamp.fromInt(-1);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.MAX_VALUE =", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);", "-----------------------------------", "/**", " * @type Timestamp}", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": ["var bson = (function()", "  function exports() return main(); };", "  exports.require  = function require(uri)", "function join() ", "function normalize(path) ", "function dirname(path) ", "function findModule(workingModule, uri)", "function newRequire(callingModule)", "  function require(uri)", "function module(parent, id, wrapper)", "  mod.call = function()", "function pkg(/* [ parentId ...], wrapper */)", "  return function(modules)", "bson.pkg(function(parents)", "})( 'binary': function(module, exports, global, require, undefined){", "var writeStringToArray = function(data) ", "var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) ", " *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.", "function Binary(buffer, subType) ", "Binary.prototype.put = function put(byte_value) ", "Binary.prototype.write = function write(string, offset) ", "Binary.prototype.read = function read(position, length) ", "Binary.prototype.value = function value(asRaw) ", "Binary.prototype.length = function length() ", "Binary.prototype.toJSON = function() ", "Binary.prototype.toString = function(format) ", "'binary_parser': function(module, exports, global, require, undefined)", "function BinaryParser (bigEndian, allowExceptions) ", "BinaryParser.warn = function warn (msg) ", "BinaryParser.decodeFloat = function decodeFloat (data, precisionBits, exponentBits) ", "BinaryParser.decodeInt = function decodeInt (data, bits, signed, forceBigEndian) ", "BinaryParser.encodeFloat = function encodeFloat (data, precisionBits, exponentBits) ", "BinaryParser.encodeInt = function encodeInt (data, bits, signed, forceBigEndian) ", "BinaryParser.toSmall    = function( data ) return this.decodeInt( data,  8, true  ); };", "BinaryParser.fromSmall  = function( data ) return this.encodeInt( data,  8, true  ); };", "BinaryParser.toByte     = function( data ) return this.decodeInt( data,  8, false ); };", "BinaryParser.fromByte   = function( data ) return this.encodeInt( data,  8, false ); };", "BinaryParser.toShort    = function( data ) return this.decodeInt( data, 16, true  ); };", "BinaryParser.fromShort  = function( data ) return this.encodeInt( data, 16, true  ); };", "BinaryParser.toWord     = function( data ) return this.decodeInt( data, 16, false ); };", "BinaryParser.fromWord   = function( data ) return this.encodeInt( data, 16, false ); };", "BinaryParser.toInt      = function( data ) return this.decodeInt( data, 32, true  ); };", "BinaryParser.fromInt    = function( data ) return this.encodeInt( data, 32, true  ); };", "BinaryParser.toLong     = function( data ) return this.decodeInt( data, 64, true  ); };", "BinaryParser.fromLong   = function( data ) return this.encodeInt( data, 64, true  ); };", "BinaryParser.toDWord    = function( data ) return this.decodeInt( data, 32, false ); };", "BinaryParser.fromDWord  = function( data ) return this.encodeInt( data, 32, false ); };", "BinaryParser.toQWord    = function( data ) return this.decodeInt( data, 64, true ); };", "BinaryParser.fromQWord  = function( data ) return this.encodeInt( data, 64, true ); };", "BinaryParser.toFloat    = function( data ) return this.decodeFloat( data, 23, 8   ); };", "BinaryParser.fromFloat  = function( data ) return this.encodeFloat( data, 23, 8   ); };", "BinaryParser.toDouble   = function( data ) return this.decodeFloat( data, 52, 11  ); };", "BinaryParser.fromDouble = function( data ) return this.encodeFloat( data, 52, 11  ); };", "BinaryParser.encode_int32 = function encode_int32 (number, asArray) ", "BinaryParser.encode_int64 = function encode_int64 (number) ", "BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ", "BinaryParser.encode_cstring = function encode_cstring (s) ", "BinaryParser.encode_utf8 = function encode_utf8 (s) ", "BinaryParser.hprint = function hprint (s) ", "BinaryParser.ilprint = function hprint (s) ", "BinaryParser.hlprint = function hprint (s) ", "function BinaryParserBuffer (bigEndian, buffer) ", "BinaryParserBuffer.prototype.setBuffer = function setBuffer (data) ", "BinaryParserBuffer.prototype.hasNeededBits = function hasNeededBits (neededBits) ", "BinaryParserBuffer.prototype.checkBuffer = function checkBuffer (neededBits) ", "BinaryParserBuffer.prototype.readBits = function readBits (start, length) ", "\tfunction shl (a, b) ", "'bson': function(module, exports, global, require, undefined)", "var isDate = function isDate(d) ", "function BSON () };", " * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.", "BSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) ", "function calculateElement(name, value, serializeFunctions) ", "    case 'function':", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) ", "var serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) ", "var stringToBytes = function(str) ", "var numberOfBytes = function(str) ", "var writeToTypedArray = function(buffer, string, index) ", "var packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) ", "          var functionString = value.code.toString();", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "          var functionString = value.code.toString();", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "    case 'function':", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "          var functionString = value.toString();", "          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", "          var functionString = value.toString();", "          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;", "          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) ", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };", " * Crc state variables shared by function", "var crc32 =  function(string, start, end) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ", "var isolateEvalWithHash = function(functionCache, hash, functionString, object) ", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "    eval(\"value = \" + functionString);", "    functionCache[hash] = value;", "  return functionCache[hash].bind(object);", "var isolateEval = function(functionString) ", "  // Eval the function", "  eval(\"value = \" + functionString);", "var convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) ", "var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.deserialize = function(buffer, options, isArray) ", "  var readCStyleString = function() ", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "        // If we are evaluating the functions", "          // If we have cache enabled let's look for the md5 of the function in the cache", "            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "            object[name] = isolateEval(functionString);", "          object[name]  = new Code(functionString, });", "        // Javascript function", "        var functionString = supportsBuffer \u0026\u0026 Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);", "        // If we are evaluating the functions", "          // If we have cache enabled let's look for the md5 of the function in the cache", "            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "            object[name] = isolateEval(functionString);", "          object[name]  = new Code(functionString, scopeObject);", "BSON.checkKey = function checkKey (key, dollarsAndDotsOk) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserialize = function(data, options) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) ", " * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.", "BSON.prototype.calculateObjectSize = function(object, serializeFunctions) ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) ", "'code': function(module, exports, global, require, undefined)", " * @param String|Function} code a string or function.", " * @param Object} [scope] an optional scope for the function.", "function Code(code, scope) ", "Code.prototype.toJSON = function() ", "'db_ref': function(module, exports, global, require, undefined)", "function DBRef(namespace, oid, db) ", "DBRef.prototype.toJSON = function() ", "'double': function(module, exports, global, require, undefined)", "function Double(value) ", "Double.prototype.valueOf = function() ", "Double.prototype.toJSON = function() ", "'float_parser': function(module, exports, global, require, undefined)", "var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ", "var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) ", "'index': function(module, exports, global, require, undefined)", "  , './long'].forEach(function (path) ", "exports.native = function() ", "].forEach(function (path) ", "exports.pure = function() ", "    , '././bson'].forEach(function (path) ", "'long': function(module, exports, global, require, undefined)", " * values as *signed* integers.  See the from* functions below for more", "function Long(low, high) ", "Long.prototype.toInt = function() ", "Long.prototype.toNumber = function() ", "Long.prototype.toJSON = function() ", "Long.prototype.toString = function(opt_radix) ", "Long.prototype.getHighBits = function() ", "Long.prototype.getLowBits = function() ", "Long.prototype.getLowBitsUnsigned = function() ", "Long.prototype.getNumBitsAbs = function() ", "Long.prototype.isZero = function() ", "Long.prototype.isNegative = function() ", "Long.prototype.isOdd = function() ", "Long.prototype.equals = function(other) ", "Long.prototype.notEquals = function(other) ", "Long.prototype.lessThan = function(other) ", "Long.prototype.lessThanOrEqual = function(other) ", "Long.prototype.greaterThan = function(other) ", "Long.prototype.greaterThanOrEqual = function(other) ", "Long.prototype.compare = function(other) ", "Long.prototype.negate = function() ", "Long.prototype.add = function(other) ", "Long.prototype.subtract = function(other) ", "Long.prototype.multiply = function(other) ", "Long.prototype.div = function(other) ", "Long.prototype.modulo = function(other) ", "Long.prototype.not = function() ", "Long.prototype.and = function(other) ", "Long.prototype.or = function(other) ", "Long.prototype.xor = function(other) ", "Long.prototype.shiftLeft = function(numBits) ", "Long.prototype.shiftRight = function(numBits) ", "Long.prototype.shiftRightUnsigned = function(numBits) ", "Long.fromInt = function(value) ", "Long.fromNumber = function(value) ", "Long.fromBits = function(lowBits, highBits) ", "Long.fromString = function(str, opt_radix) ", " * first call to any from* function below.", "'max_key': function(module, exports, global, require, undefined)", "function MaxKey() ", "'min_key': function(module, exports, global, require, undefined)", "function MinKey() ", "'objectid': function(module, exports, global, require, undefined)", "var ObjectID = function ObjectID(id, _hex) ", "ObjectID.prototype.toHexString = function() ", "ObjectID.prototype.get_inc = function() ", "ObjectID.prototype.getInc = function() ", "ObjectID.prototype.generate = function(time) ", "ObjectID.prototype.toString = function() ", "ObjectID.prototype.toJSON = function() ", "ObjectID.prototype.equals = function equals (otherID) ", "ObjectID.prototype.getTimestamp = function() ", "ObjectID.createPk = function createPk () ", "ObjectID.createFromTime = function createFromTime (time) ", "ObjectID.createFromHexString = function createFromHexString (hexString) ", " , get: function () ", " , set: function (value) ", "'symbol': function(module, exports, global, require, undefined)", "function Symbol(value) ", "Symbol.prototype.valueOf = function() ", "Symbol.prototype.toString = function() ", "Symbol.prototype.inspect = function() ", "Symbol.prototype.toJSON = function() ", "'timestamp': function(module, exports, global, require, undefined)", " * values as *signed* integers.  See the from* functions below for more", "function Timestamp(low, high) ", "Timestamp.prototype.toInt = function() ", "Timestamp.prototype.toNumber = function() ", "Timestamp.prototype.toJSON = function() ", "Timestamp.prototype.toString = function(opt_radix) ", "Timestamp.prototype.getHighBits = function() ", "Timestamp.prototype.getLowBits = function() ", "Timestamp.prototype.getLowBitsUnsigned = function() ", "Timestamp.prototype.getNumBitsAbs = function() ", "Timestamp.prototype.isZero = function() ", "Timestamp.prototype.isNegative = function() ", "Timestamp.prototype.isOdd = function() ", "Timestamp.prototype.equals = function(other) ", "Timestamp.prototype.notEquals = function(other) ", "Timestamp.prototype.lessThan = function(other) ", "Timestamp.prototype.lessThanOrEqual = function(other) ", "Timestamp.prototype.greaterThan = function(other) ", "Timestamp.prototype.greaterThanOrEqual = function(other) ", "Timestamp.prototype.compare = function(other) ", "Timestamp.prototype.negate = function() ", "Timestamp.prototype.add = function(other) ", "Timestamp.prototype.subtract = function(other) ", "Timestamp.prototype.multiply = function(other) ", "Timestamp.prototype.div = function(other) ", "Timestamp.prototype.modulo = function(other) ", "Timestamp.prototype.not = function() ", "Timestamp.prototype.and = function(other) ", "Timestamp.prototype.or = function(other) ", "Timestamp.prototype.xor = function(other) ", "Timestamp.prototype.shiftLeft = function(numBits) ", "Timestamp.prototype.shiftRight = function(numBits) ", "Timestamp.prototype.shiftRightUnsigned = function(numBits) ", "Timestamp.fromInt = function(value) ", "Timestamp.fromNumber = function(value) ", "Timestamp.fromBits = function(lowBits, highBits) ", "Timestamp.fromString = function(str, opt_radix) ", " * first call to any from* function below."],
		"Dependencies": ["buffer", "./long", "./double", "./timestamp", "./objectid", "./symbol", "./code", "./min_key", "./max_key", "./db_ref", "./binary", "./binary_parser", "./float_parser", "./float_parser", "./bson", "../../ext", "./binary_parser"]
	}, {
		"FileName": "node_modules\\bson\\deserializer_bak.js",
		"LineCount": 358,
		"CharCount": 9512,
		"Comments": ["\"use strict\"", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "var deserialize = function(buffer, options, isArray) ", "-----------------------------------", "\t// Read the document size", "  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "\t// Ensure buffer is valid size", "  if(size \u003c 5 || buffer.length \u003c size) ", "-----------------------------------", "\t// Illegal end value", "\tif(buffer[size - 1] != 0) ", "-----------------------------------", "\t// Start deserializtion", "\treturn deserializeObject(buffer, options, isArray);", "-----------------------------------", "// // Reads in a C style string", "// var readCStyleStringSpecial = function(buffer, index) {", "// \t// Get the start search index", "// \tvar i = index;", "// \t// Locate the end of the c string", "// \twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) {", "// \t\ti++", "// \t}", "// \t// If are at the end of the buffer there is a problem with the document", "// \tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "// \t// Grab utf8 encoded string", "// \tvar string = buffer.toString('utf8', index, i);", "// \t// Update index position", "// \tindex = i + 1;", "// \t// Return string", "// \treturn {s: string, i: index};", "// }", "", "// Reads in a C style string", "var readCStyleStringSpecial = function(buffer, index) ", "-----------------------------------", "\t// Get the start search index", "\tvar i = index;", "-----------------------------------", "\t// Locate the end of the c string", "\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t// If are at the end of the buffer there is a problem with the document", "\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t// Grab utf8 encoded string", "\treturn buffer.toString('utf8', index, i);", "-----------------------------------", "  // Options", "  options = options == null ? } : options;", "-----------------------------------", "  // Return BSONRegExp objects instead of native regular expressions", "  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;", "-----------------------------------", "  // Validate that we have at least 4 bytes of buffer", "  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");", "-----------------------------------", "  // Set up index", "  var index = typeof options['index'] == 'number' ? options['index'] : 0;", "-----------------------------------", "\t// Read the document size", "  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "\t// Ensure buffer is valid size", "  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");", "-----------------------------------", "  // Create holding object", "  var object = isArray ? [] : };", "-----------------------------------", "  // While we have more left data left keep parsing", "  while(true) ", "-----------------------------------", "    // Read the type", "    var elementType = buffer[index++];", "-----------------------------------", "    // If we get a zero it's the last byte, exit", "    if(elementType == 0) break;", "-----------------------------------", "\t\t// console.log(\"----------- 0 \" + elementType + \" :: \" + name)", "\t\tindex = DeserializationMethods[elementType](name, object, buffer, index);", "-----------------------------------", "\t\t// console.log('--------------- 1')", "  }", "-----------------------------------", "  // Check if we have a db ref object", "  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);", "-----------------------------------", "  // Return the final objects", "  return object;", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "-----------------------------------", "  // Set the object", "  return functionCache[hash].bind(object);", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Eval the function", "  eval(\"value = \" + functionString);", "-----------------------------------"],
		"Functions": [" * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };", "var deserialize = function(buffer, options, isArray) ", "// var readCStyleStringSpecial = function(buffer, index) ", "var readCStyleStringSpecial = function(buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_OID] = function(name, object, buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_NUMBER] = function(name, object, buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_INT] = function(name, object, buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_TIMESTAMP] = function(name, object, buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_STRING] = function(name, object, buffer, index) ", "DeserializationMethods[BSON.BSON_DATA_BOOLEAN] = function(name, object, buffer, index) ", "var deserializeObject = function(buffer, options, isArray) ", "var isolateEvalWithHash = function(functionCache, hash, functionString, object) ", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "    eval(\"value = \" + functionString);", "    functionCache[hash] = value;", "  return functionCache[hash].bind(object);", "var isolateEval = function(functionString) ", "  // Eval the function", "  eval(\"value = \" + functionString);"],
		"Dependencies": ["../float_parser", "../float_parser", "util", "../long", "../double", "../timestamp", "../objectid", "../symbol", "../code", "../min_key", "../max_key", "../db_ref", "../regexp", "../binary"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\binary.js",
		"LineCount": 348,
		"CharCount": 10160,
		"Comments": ["/**", " * Module dependencies.", "-----------------------------------", "// Test if we're in Node via presence of \"global\" not absence of \"window\"", "// to support hybrid environments like Electron", "if(typeof global !== 'undefined') ", "-----------------------------------", "  var Buffer = require('buffer').Buffer; // TODO just use global Buffer", "}", "-----------------------------------", "/**", " * A class representation of the BSON Binary type.", "-----------------------------------", "    // Only accept Buffer, Uint8Array or Arrays", "    if(typeof buffer == 'string') ", "-----------------------------------", "      // Different ways of writing the length of the string for the different types", "      if(typeof Buffer != 'undefined') ", "-----------------------------------", "    // Set position to start of buffer", "    this.position = 0;", "-----------------------------------", "/**", " * Updates this binary with byte_value.", "-----------------------------------", "  // If it's a string and a has more than one character throw an error", "  if(byte_value['length'] != null \u0026\u0026 typeof byte_value != 'number' \u0026\u0026 byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");", "-----------------------------------", "  // Decode the byte value once", "  var decoded_byte = null;", "-----------------------------------", "      // Create additional overflow buffer", "      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);", "-----------------------------------", "      // Combine the two buffers together", "      this.buffer.copy(buffer, 0, 0, this.buffer.length);", "-----------------------------------", "      // Create a new buffer (typed or normal array)", "      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') ", "-----------------------------------", "      // We need to copy all the content to the new array", "      for(var i = 0; i \u003c this.buffer.length; i++) ", "-----------------------------------", "      // Reassign the buffer", "      this.buffer = buffer;", "-----------------------------------", "      // Write the byte", "      this.buffer[this.position++] = decoded_byte;", "-----------------------------------", "/**", " * Writes a buffer or string to the binary.", "-----------------------------------", "  // If the buffer is to small let's extend the buffer", "  if(this.buffer.length \u003c offset + string.length) ", "-----------------------------------", "    // If we are in node.js", "    if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) ", "-----------------------------------", "      // Create a new buffer", "      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))", "-----------------------------------", "      // Copy the content", "      for(var i = 0; i \u003c this.position; i++) ", "-----------------------------------", "    // Assign the new buffer", "    this.buffer = buffer;", "-----------------------------------", "    // offset = string.length", "  } else if(typeof Buffer != 'undefined' \u0026\u0026 typeof string == 'string' \u0026\u0026 Buffer.isBuffer(this.buffer)) ", "-----------------------------------", "    // offset = string.length;", "  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'", "-----------------------------------", "/**", " * Reads **length** bytes starting at **position**.", "-----------------------------------", "  // Let's return the data based on the type we have", "  if(this.buffer['slice']) ", "-----------------------------------", "    // Create a buffer to keep the result", "    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);", "-----------------------------------", "  // Return the buffer", "  return buffer;", "-----------------------------------", "/**", " * Returns the value of this binary as a string.", "-----------------------------------", "  // Optimize to serialize for the situation where the data == size of buffer", "  if(asRaw \u0026\u0026 typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer) \u0026\u0026 this.buffer.length == this.position)", "-----------------------------------", "  // If it's a node.js buffer object", "  if(typeof Buffer != 'undefined' \u0026\u0026 Buffer.isBuffer(this.buffer)) ", "-----------------------------------", "      // we support the slice command use it", "      if(this.buffer['slice'] != null) ", "-----------------------------------", "        // Create a new buffer to copy content to", "        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);", "-----------------------------------", "        // Copy content", "        for(var i = 0; i \u003c this.position; i++) ", "-----------------------------------", "        // Return the buffer", "        return newBuffer;", "-----------------------------------", "/**", " * Length.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * Binary default subtype", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "  // Create a buffer", "  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);", "-----------------------------------", "  // Write the content to the buffer", "  for(var i = 0; i \u003c data.length; i++) ", "-----------------------------------", "  // Write the string to the buffer", "  return buffer;", "-----------------------------------", "/**", " * Convert Array ot Uint8Array to Binary String", "-----------------------------------", "/**", " * Default BSON type", "-----------------------------------", "/**", " * Function BSON type", "-----------------------------------", "/**", " * Byte Array BSON type", "-----------------------------------", "/**", " * OLD UUID BSON type", "-----------------------------------", "/**", " * UUID BSON type", "-----------------------------------", "/**", " * MD5 BSON type", "-----------------------------------", "/**", " * User BSON type", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": [" *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.", "function Binary(buffer, subType) ", "Binary.prototype.put = function put(byte_value) ", "Binary.prototype.write = function write(string, offset) ", "Binary.prototype.read = function read(position, length) ", "Binary.prototype.value = function value(asRaw) ", "Binary.prototype.length = function length() ", "Binary.prototype.toJSON = function() ", "Binary.prototype.toString = function(format) ", "var writeStringToArray = function(data) ", "var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) "],
		"Dependencies": ["buffer"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\binary_parser.js",
		"LineCount": 386,
		"CharCount": 11990,
		"Comments": ["/**", " * Binary Parser.", "-----------------------------------", " * http://jsfromhell.com/classes/binary-parser [v1.0]", " */", "-----------------------------------", "      , max = maxBits[bits]; //max = Math.pow( 2, bits );", "  ", "-----------------------------------", "// Factor out the encode so it can be shared by add_header and push_int32", "BinaryParser.encode_int32 = function encode_int32 (number, asArray) ", "-----------------------------------", "/**", " * UTF8 methods", "-----------------------------------", "// Take a raw binary string and return a utf8 string", "BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ", "-----------------------------------", "// Encode a cstring", "BinaryParser.encode_cstring = function encode_cstring (s) ", "-----------------------------------", "// Take a utf8 string and return a binary string", "BinaryParser.encode_utf8 = function encode_utf8 (s) ", "-----------------------------------", "/**", " * BinaryParser buffer constructor.", "-----------------------------------", "\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)", "", "\tfunction shl (a, b) ", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": ["function BinaryParser (bigEndian, allowExceptions) ", "BinaryParser.warn = function warn (msg) ", "BinaryParser.decodeFloat = function decodeFloat (data, precisionBits, exponentBits) ", "BinaryParser.decodeInt = function decodeInt (data, bits, signed, forceBigEndian) ", "BinaryParser.encodeFloat = function encodeFloat (data, precisionBits, exponentBits) ", "BinaryParser.encodeInt = function encodeInt (data, bits, signed, forceBigEndian) ", "BinaryParser.toSmall    = function( data ) return this.decodeInt( data,  8, true  ); };", "BinaryParser.fromSmall  = function( data ) return this.encodeInt( data,  8, true  ); };", "BinaryParser.toByte     = function( data ) return this.decodeInt( data,  8, false ); };", "BinaryParser.fromByte   = function( data ) return this.encodeInt( data,  8, false ); };", "BinaryParser.toShort    = function( data ) return this.decodeInt( data, 16, true  ); };", "BinaryParser.fromShort  = function( data ) return this.encodeInt( data, 16, true  ); };", "BinaryParser.toWord     = function( data ) return this.decodeInt( data, 16, false ); };", "BinaryParser.fromWord   = function( data ) return this.encodeInt( data, 16, false ); };", "BinaryParser.toInt      = function( data ) return this.decodeInt( data, 32, true  ); };", "BinaryParser.fromInt    = function( data ) return this.encodeInt( data, 32, true  ); };", "BinaryParser.toLong     = function( data ) return this.decodeInt( data, 64, true  ); };", "BinaryParser.fromLong   = function( data ) return this.encodeInt( data, 64, true  ); };", "BinaryParser.toDWord    = function( data ) return this.decodeInt( data, 32, false ); };", "BinaryParser.fromDWord  = function( data ) return this.encodeInt( data, 32, false ); };", "BinaryParser.toQWord    = function( data ) return this.decodeInt( data, 64, true ); };", "BinaryParser.fromQWord  = function( data ) return this.encodeInt( data, 64, true ); };", "BinaryParser.toFloat    = function( data ) return this.decodeFloat( data, 23, 8   ); };", "BinaryParser.fromFloat  = function( data ) return this.encodeFloat( data, 23, 8   ); };", "BinaryParser.toDouble   = function( data ) return this.decodeFloat( data, 52, 11  ); };", "BinaryParser.fromDouble = function( data ) return this.encodeFloat( data, 52, 11  ); };", "BinaryParser.encode_int32 = function encode_int32 (number, asArray) ", "BinaryParser.encode_int64 = function encode_int64 (number) ", "BinaryParser.decode_utf8 = function decode_utf8 (binaryStr) ", "BinaryParser.encode_cstring = function encode_cstring (s) ", "BinaryParser.encode_utf8 = function encode_utf8 (s) ", "BinaryParser.hprint = function hprint (s) ", "BinaryParser.ilprint = function hprint (s) ", "BinaryParser.hlprint = function hprint (s) ", "function BinaryParserBuffer (bigEndian, buffer) ", "BinaryParserBuffer.prototype.setBuffer = function setBuffer (data) ", "BinaryParserBuffer.prototype.hasNeededBits = function hasNeededBits (neededBits) ", "BinaryParserBuffer.prototype.checkBuffer = function checkBuffer (neededBits) ", "BinaryParserBuffer.prototype.readBits = function readBits (start, length) ", "\tfunction shl (a, b) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\bson.js",
		"LineCount": 324,
		"CharCount": 9758,
		"Comments": ["// \"use strict\"", "", "var writeIEEE754 = require('./float_parser').writeIEEE754,", "-----------------------------------", "// Parts of the parser", "var deserialize = require('./parser/deserializer'),", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "// Max Size", "var MAXSIZE = (1024*1024*17);", "-----------------------------------", "// Max Document Buffer size", "var buffer = new Buffer(MAXSIZE);", "-----------------------------------", "/**", " * Serialize a Javascript object.", "-----------------------------------", "\t// Attempt to serialize", "\tvar serializationIndex = serializer(buffer, object, checkKeys, index || 0, 0, serializeFunctions, ignoreUndefined);", "-----------------------------------", "\t// Create the final buffer", "\tvar finishedBuffer = new Buffer(serializationIndex);", "-----------------------------------", "\t// Copy into the finished buffer", "\tbuffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);", "-----------------------------------", "\t// Return the buffer", "\treturn finishedBuffer;", "-----------------------------------", "/**", " * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.", "-----------------------------------", "\t// Attempt to serialize", "\tvar serializationIndex = serializer(buffer, object, checkKeys, startIndex || 0, 0, serializeFunctions, ignoreUndefined);", "-----------------------------------", "\t// Return the index", "\treturn startIndex + serializationIndex - 1;", "-----------------------------------", "/**", " * Deserialize data as BSON.", "-----------------------------------", "/**", " * Calculate the bson size for a passed in Javascript object.", "-----------------------------------", "/**", " * Deserialize stream data as BSON documents.", "-----------------------------------", "  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");", "  options = options != null ? options : };", "-----------------------------------", "  // Loop over all documents", "  for(var i = 0; i \u003c numberOfDocuments; i++) ", "-----------------------------------", "    // Find size of the document", "    var size = data[index] | data[index + 1] \u003c\u003c 8 | data[index + 2] \u003c\u003c 16 | data[index + 3] \u003c\u003c 24;", "-----------------------------------", "    // Update options with index", "    options['index'] = index;", "-----------------------------------", "    // Parse the document at this point", "    documents[docStartIndex + i] = this.deserialize(data, options);", "-----------------------------------", "    // Adjust index by the document size", "    index = index + size;", "-----------------------------------", "  // Return object containing end index of parsing and list of documents", "  return index;", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "// Return BSON", "module.exports = BSON;", "-----------------------------------"],
		"Functions": ["var BSON = function() ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serialize = function serialize(object, checkKeys, asBuffer, serializeFunctions, index, ignoreUndefined) ", " * @param Boolean} serializeFunctions serialize the javascript functions **(default:false)**.", "BSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, finalBuffer, startIndex, serializeFunctions, ignoreUndefined) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserialize = function(data, options) ", " * @param Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.", "BSON.prototype.calculateObjectSize = function(object, serializeFunctions, ignoreUndefined) ", " *  - **evalFunctions** Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.", " *  - **cacheFunctions** Boolean, default:false}, cache evaluated functions for reuse.", " *  - **cacheFunctionsCrc32** Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.", "BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) "],
		"Dependencies": ["./float_parser", "./float_parser", "./map", "./long", "./double", "./timestamp", "./objectid", "./regexp", "./symbol", "./code", "./min_key", "./max_key", "./db_ref", "./binary", "./parser/deserializer", "./parser/serializer", "./parser/calculate_size"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\code.js",
		"LineCount": 24,
		"CharCount": 533,
		"Comments": ["/**", " * A class representation of the BSON Code type.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------"],
		"Functions": [" * @param (string|function)} code a string or function.", " * @param Object} [scope] an optional scope for the function.", "var Code = function Code(code, scope) ", "Code.prototype.toJSON = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\db_ref.js",
		"LineCount": 32,
		"CharCount": 691,
		"Comments": ["/**", " * A class representation of the BSON DBRef type.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------"],
		"Functions": ["function DBRef(namespace, oid, db) ", "DBRef.prototype.toJSON = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\double.js",
		"LineCount": 33,
		"CharCount": 578,
		"Comments": ["/**", " * A class representation of the BSON Double type.", "-----------------------------------", "/**", " * Access the number value.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------"],
		"Functions": ["function Double(value) ", "Double.prototype.valueOf = function() ", "Double.prototype.toJSON = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\float_parser.js",
		"LineCount": 121,
		"CharCount": 3788,
		"Comments": ["// Copyright (c) 2008, Fair Oaks Labs, Inc.", "// All rights reserved.", "// ", "// Redistribution and use in source and binary forms, with or without", "// modification, are permitted provided that the following conditions are met:", "// ", "//  * Redistributions of source code must retain the above copyright notice,", "//    this list of conditions and the following disclaimer.", "// ", "//  * Redistributions in binary form must reproduce the above copyright notice,", "//    this list of conditions and the following disclaimer in the documentation", "//    and/or other materials provided with the distribution.", "// ", "//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors", "//    may be used to endorse or promote products derived from this software", "//    without specific prior written permission.", "// ", "// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"", "// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE", "// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE", "// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE", "// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR", "// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF", "// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS", "// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN", "// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)", "// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE", "// POSSIBILITY OF SUCH DAMAGE.", "//", "//", "// Modifications to writeIEEE754 to support negative zeroes made by Brian White", "", "var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ", "-----------------------------------"],
		"Functions": ["var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) ", "var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\index.js",
		"LineCount": 87,
		"CharCount": 1579,
		"Comments": ["try ", "-----------------------------------", "// Exports all the classes for the PURE JS BSON Parser", "exports.pure = function() ", "-----------------------------------", "  // Map all the classes", "  [ './binary_parser'", "-----------------------------------", "  // Return classes list", "  return classes;", "-----------------------------------", "// Exports all the classes for the NATIVE JS BSON Parser", "exports.native = function() ", "-----------------------------------", "  // Map all the classes", "  [ './binary_parser'", "-----------------------------------", "  // Catch error and return no classes found", "  try ", "-----------------------------------", "  // Return classes list", "  return classes;", "-----------------------------------"],
		"Functions": ["  , './long'].forEach(function (path) ", "exports.pure = function() ", "    , './bson'].forEach(function (path) ", "exports.native = function() ", "  ].forEach(function (path) "],
		"Dependencies": ["./bson", "./bson", "./bson"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\long.js",
		"LineCount": 856,
		"CharCount": 22049,
		"Comments": ["// Licensed under the Apache License, Version 2.0 (the \"License\");", "// you may not use this file except in compliance with the License.", "// You may obtain a copy of the License at", "//", "//     http://www.apache.org/licenses/LICENSE-2.0", "//", "// Unless required by applicable law or agreed to in writing, software", "// distributed under the License is distributed on an \"AS IS\" BASIS,", "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "// See the License for the specific language governing permissions and", "// limitations under the License.", "//", "// Copyright 2009 Google Inc. All Rights Reserved", "", "/**", " * Defines a Long class for representing a 64-bit two's-complement", "-----------------------------------", "  /**", "   * @type number}", "-----------------------------------", "  this.low_ = low | 0;  // force into 32 signed bits.", "", "  /**", "   * @type number}", "-----------------------------------", "  this.high_ = high | 0;  // force into 32 signed bits.", "};", "-----------------------------------", "/**", " * Return the int value.", "-----------------------------------", "/**", " * Return the Number value.", "-----------------------------------", "/**", " * Return the JSON value.", "-----------------------------------", "/**", " * Return the String value.", "-----------------------------------", "      // We need to change the Long value before it can be negated, so we remove", "      // the bottom-most digit in this base and then recurse to do the rest.", "      var radixLong = Long.fromNumber(radix);", "-----------------------------------", "  // Do several (6) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Long.fromNumber(Math.pow(radix, 6));", "-----------------------------------", "/**", " * Return the high 32-bits value.", "-----------------------------------", "/**", " * Return the low 32-bits value.", "-----------------------------------", "/**", " * Return the low unsigned 32-bits value.", "-----------------------------------", "/**", " * Returns the number of bits needed to represent the absolute value of this Long.", "-----------------------------------", "/**", " * Return whether this value is zero.", "-----------------------------------", "/**", " * Return whether this value is negative.", "-----------------------------------", "/**", " * Return whether this value is odd.", "-----------------------------------", "/**", " * Return whether this Long equals the other", "-----------------------------------", "/**", " * Return whether this Long does not equal the other.", "-----------------------------------", "/**", " * Return whether this Long is less than the other.", "-----------------------------------", "/**", " * Return whether this Long is less than or equal to the other.", "-----------------------------------", "/**", " * Return whether this Long is greater than the other.", "-----------------------------------", "/**", " * Return whether this Long is greater than or equal to the other.", "-----------------------------------", "/**", " * Compares this Long with the given one.", "-----------------------------------", "  // at this point, the signs are the same, so subtraction will not overflow", "  if (this.subtract(other).isNegative()) ", "-----------------------------------", "/**", " * The negation of this value.", "-----------------------------------", "/**", " * Returns the sum of this and the given Long.", "-----------------------------------", "  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns the difference of this and the given Long.", "-----------------------------------", "/**", " * Returns the product of this and the given Long.", "-----------------------------------", "  // If both Longs are small, use float multiplication", "  if (this.lessThan(Long.TWO_PWR_24_) \u0026\u0026", "-----------------------------------", "  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.", "  // We can skip products that would overflow.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns this Long divided by the given one.", "-----------------------------------", "      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE", "    } else if (other.equals(Long.MIN_VALUE)) ", "-----------------------------------", "      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.", "      var halfThis = this.shiftRight(1);", "-----------------------------------", "  // Repeat the following until the remainder is less than other:  find a", "  // floating-point that approximates remainder / other *from below*, add this", "  // into the result, and subtract it from the remainder.  It is critical that", "  // the approximate value is less than or equal to the real value so that the", "  // remainder never becomes negative.", "  var res = Long.ZERO;", "-----------------------------------", "    // Approximate the result of division. This may be a little greater or", "    // smaller than the actual value.", "    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));", "-----------------------------------", "    // We will tweak the approximate result by changing it in the 48-th digit or", "    // the smallest non-fractional digit, whichever is larger.", "    var log2 = Math.ceil(Math.log(approx) / Math.LN2);", "-----------------------------------", "    // Decrease the approximation until it is smaller than the remainder.  Note", "    // that if it is too large, the product overflows and is negative.", "    var approxRes = Long.fromNumber(approx);", "-----------------------------------", "    // We know the answer can't be zero... and actually, zero would cause", "    // infinite recursion since we would make no progress.", "    if (approxRes.isZero()) ", "-----------------------------------", "/**", " * Returns this Long modulo the given one.", "-----------------------------------", "/**", " * The bitwise-NOT of this value.", "-----------------------------------", "/**", " * Returns the bitwise-AND of this Long and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-OR of this Long and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-XOR of this Long and the given one.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the left by the given amount.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the right by the given amount.", "-----------------------------------", "/**", " * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.", "-----------------------------------", "/**", " * Returns a Long representing the given (32-bit) integer value.", "-----------------------------------", "/**", " * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.", "-----------------------------------", "/**", " * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.", "-----------------------------------", "/**", " * Returns a Long representation of the given string, written using the given radix.", "-----------------------------------", "  // Do several (8) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Long.fromNumber(Math.pow(radix, 8));", "-----------------------------------", "// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the", "// from* methods on which they depend.", "", "", "/**", " * A cache of the Long representations of small integer values.", "-----------------------------------", "// NOTE: the compiler should inline these constant values below and then remove", "// these variables, so there should be no runtime penalty for these.", "", "/**", " * Number used repeated below in calculations.  This must appear before the", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/** @type {Long} */", "Long.ZERO = Long.fromInt(0);", "-----------------------------------", "/** @type {Long} */", "Long.ONE = Long.fromInt(1);", "-----------------------------------", "/** @type {Long} */", "Long.NEG_ONE = Long.fromInt(-1);", "-----------------------------------", "/** @type {Long} */", "Long.MAX_VALUE =", "-----------------------------------", "/** @type {Long} */", "Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);", "-----------------------------------", "/**", " * @type Long}", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": [" * values as *signed* integers.  See the from* functions below for more", "function Long(low, high) ", "Long.prototype.toInt = function() ", "Long.prototype.toNumber = function() ", "Long.prototype.toJSON = function() ", "Long.prototype.toString = function(opt_radix) ", "Long.prototype.getHighBits = function() ", "Long.prototype.getLowBits = function() ", "Long.prototype.getLowBitsUnsigned = function() ", "Long.prototype.getNumBitsAbs = function() ", "Long.prototype.isZero = function() ", "Long.prototype.isNegative = function() ", "Long.prototype.isOdd = function() ", "Long.prototype.equals = function(other) ", "Long.prototype.notEquals = function(other) ", "Long.prototype.lessThan = function(other) ", "Long.prototype.lessThanOrEqual = function(other) ", "Long.prototype.greaterThan = function(other) ", "Long.prototype.greaterThanOrEqual = function(other) ", "Long.prototype.compare = function(other) ", "Long.prototype.negate = function() ", "Long.prototype.add = function(other) ", "Long.prototype.subtract = function(other) ", "Long.prototype.multiply = function(other) ", "Long.prototype.div = function(other) ", "Long.prototype.modulo = function(other) ", "Long.prototype.not = function() ", "Long.prototype.and = function(other) ", "Long.prototype.or = function(other) ", "Long.prototype.xor = function(other) ", "Long.prototype.shiftLeft = function(numBits) ", "Long.prototype.shiftRight = function(numBits) ", "Long.prototype.shiftRightUnsigned = function(numBits) ", "Long.fromInt = function(value) ", "Long.fromNumber = function(value) ", "Long.fromBits = function(lowBits, highBits) ", "Long.fromString = function(str, opt_radix) ", " * first call to any from* function below."],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\map.js",
		"LineCount": 126,
		"CharCount": 3014,
		"Comments": ["\"use strict\"", "-----------------------------------", "// We have an ES6 Map available, return the native instance", "if(typeof global.Map !== 'undefined') ", "-----------------------------------", "  // We will return a polyfill", "  var Map = function(array) ", "-----------------------------------", "      if(array[i] == null) continue;  // skip null and undefined", "      var entry = array[i];", "-----------------------------------", "      // Add the key to the list of keys in order", "      this._keys.push(key);", "-----------------------------------", "      // Add the key and value to the values dictionary with a point", "      // to the location in the ordered keys list", "      this._values[key] = v: value, i: this._keys.length - 1};", "-----------------------------------", "    // Delete entry", "    delete this._values[key];", "-----------------------------------", "    // Remove the key from the ordered keys list", "    this._keys.splice(value.i, 1);", "-----------------------------------", "      // Call the forEach callback", "      callback.call(self, this._values[key].v, key, self);", "-----------------------------------", "    // Add the key to the list of keys in order", "    this._keys.push(key);", "-----------------------------------", "    // Add the key and value to the values dictionary with a point", "    // to the location in the ordered keys list", "    this._values[key] = v: value, i: this._keys.length - 1};", "-----------------------------------", "  // Last ismaster", "  Object.defineProperty(Map.prototype, 'size', ", "-----------------------------------"],
		"Functions": ["  var Map = function(array) ", "  Map.prototype.clear = function() ", "  Map.prototype.delete = function(key) ", "  Map.prototype.entries = function() ", "      next: function() ", "  Map.prototype.forEach = function(callback, self) ", "  Map.prototype.get = function(key) ", "  Map.prototype.has = function(key) ", "  Map.prototype.keys = function(key) ", "      next: function() ", "  Map.prototype.set = function(key, value) ", "  Map.prototype.values = function(key, value) ", "      next: function() ", "    get: function()  return this._keys.length; }"],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\max_key.js",
		"LineCount": 14,
		"CharCount": 263,
		"Comments": ["/**", " * A class representation of the BSON MaxKey type.", "-----------------------------------"],
		"Functions": ["function MaxKey() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\min_key.js",
		"LineCount": 14,
		"CharCount": 261,
		"Comments": ["/**", " * A class representation of the BSON MinKey type.", "-----------------------------------"],
		"Functions": ["function MinKey() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\objectid.js",
		"LineCount": 287,
		"CharCount": 7613,
		"Comments": ["/**", " * Module dependencies.", "-----------------------------------", "/**", " * Machine id.", "-----------------------------------", "// Regular expression that checks for hex value", "var checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]24}$\");", "-----------------------------------", "/**", "* Create a new ObjectID instance", "-----------------------------------", "  // Duck-typing to support ObjectId from different npm packages", "  if((id instanceof ObjectID) || (id \u0026\u0026 id.toHexString)) return id;", "-----------------------------------", "  // Throw an error if it's not a valid setup", "  if(!valid \u0026\u0026 id != null)", "-----------------------------------", "    // convert to 12 byte binary string", "    this.id = this.generate(id);", "-----------------------------------", "    // assume 12 byte string", "    this.id = id;", "-----------------------------------", "// Allow usage of ObjectId as well as ObjectID", "var ObjectId = ObjectID;", "-----------------------------------", "// Precomputed hex table enables speedy hex string conversion", "var hexTable = [];", "-----------------------------------", "/**", "* Return the ObjectID id as a 24 byte hex string representation", "-----------------------------------", "/**", "* Update the ObjectID index used in generating new ObjectID's on the driver", "-----------------------------------", "/**", "* Update the ObjectID index used in generating new ObjectID's on the driver", "-----------------------------------", "/**", "* Generate a 12 byte id string used in ObjectID's", "-----------------------------------", "/**", "* Converts the id into a 24 byte hex string for printing", "-----------------------------------", "/**", "* Converts to a string representation of this Id.", "-----------------------------------", "/**", "* Converts to its JSON representation.", "-----------------------------------", "/**", "* Compares the equality of this ObjectID with `otherID`.", "-----------------------------------", "/**", "* Returns the generation date (accurate up to the second) that this ID was generated.", "-----------------------------------", "/**", "* @ignore", "-----------------------------------", "/**", "* @ignore", "-----------------------------------", "/**", "* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.", "-----------------------------------", "/**", "* Creates an ObjectID from a hex string representation of an ObjectID.", "-----------------------------------", "  // Throw an error if it's not a valid setup", "  if(typeof hexString === 'undefined' || hexString != null \u0026\u0026 hexString.length != 24)", "-----------------------------------", "/**", "* Checks if a value is a valid bson ObjectId", "-----------------------------------", "  // Duck-Typing detection of ObjectId like objects", "  if(id.toHexString) ", "-----------------------------------", "/**", "* @ignore", "-----------------------------------", "     // delete this.__id;", "     this.toHexString();", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": ["var ObjectID = function ObjectID(id) ", "ObjectID.prototype.toHexString = function() ", "ObjectID.prototype.get_inc = function() ", "ObjectID.prototype.getInc = function() ", "ObjectID.prototype.generate = function(time) ", "ObjectID.prototype.toString = function() ", "ObjectID.prototype.toJSON = function() ", "ObjectID.prototype.equals = function equals (otherID) ", "ObjectID.prototype.getTimestamp = function() ", "ObjectID.createPk = function createPk () ", "ObjectID.createFromTime = function createFromTime (time) ", "ObjectID.createFromHexString = function createFromHexString (hexString) ", "ObjectID.isValid = function isValid(id) ", " , get: function () ", " , set: function (value) "],
		"Dependencies": ["./binary_parser"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\parser\\calculate_size.js",
		"LineCount": 311,
		"CharCount": 10177,
		"Comments": ["\"use strict\"", "-----------------------------------", "// To ensure that 0.4 of node works correctly", "var isDate = function isDate(d) ", "-----------------------------------", "\t\t// If we have toBSON defined, override the current object", "\t\tif(object.toBSON) ", "-----------------------------------", "\t\t// Calculate size", "    for(var key in object) ", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "\t// If we have toBSON defined, override the current object", "  if(value \u0026\u0026 value.toBSON)", "-----------------------------------", "        if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) { // 32 bit", "          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);", "-----------------------------------", "      } else {  // 64 bit", "        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);", "-----------------------------------", "        // Calculate size depending on the availability of a scope", "        if(value.scope != null \u0026\u0026 Object.keys(value.scope).length \u003e 0) ", "-----------------------------------", "        // Check what kind of subtype we have", "        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Set up correct object for serialization", "        var ordered_values = ", "-----------------------------------", "        // Add db reference if it exists", "        if(null != value.db) ", "-----------------------------------", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", "      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') ", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "module.exports = calculateObjectSize;", "-----------------------------------"],
		"Functions": ["var isDate = function isDate(d) ", "var calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) ", "function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) ", "    case 'function':", "      // WTF for 0.4.X where typeof /someregexp/ === 'function'", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };"],
		"Dependencies": ["../float_parser", "../float_parser", "../long", "../double", "../timestamp", "../objectid", "../symbol", "../regexp", "../code", "../min_key", "../max_key", "../db_ref", "../binary"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\parser\\deserializer.js",
		"LineCount": 532,
		"CharCount": 17670,
		"Comments": ["\"use strict\"", "-----------------------------------", "\t// Read the document size", "  var size = buffer[index] | buffer[index+1] \u003c\u003c 8 | buffer[index+2] \u003c\u003c 16 | buffer[index+3] \u003c\u003c 24;", "-----------------------------------", "\t// Ensure buffer is valid size", "  if(size \u003c 5 || buffer.length \u003c size) ", "-----------------------------------", "\t// Illegal end value", "\tif(buffer[index + size - 1] != 0) ", "-----------------------------------", "\t// Start deserializtion", "\treturn deserializeObject(buffer, index, options, isArray);", "-----------------------------------", "  // Return BSONRegExp objects instead of native regular expressions", "  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;", "-----------------------------------", "  // Validate that we have at least 4 bytes of buffer", "  if(buffer.length \u003c 5) throw new Error(\"corrupt bson message \u003c 5 bytes long\");", "-----------------------------------", "\t// Read the document size", "  var size = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "\t// Ensure buffer is valid size", "  if(size \u003c 5 || size \u003e buffer.length) throw new Error(\"corrupt bson message\");", "-----------------------------------", "  // Create holding object", "  var object = isArray ? [] : };", "-----------------------------------", "  // While we have more left data left keep parsing", "  while(true) ", "-----------------------------------", "    // Read the type", "    var elementType = buffer[index++];", "-----------------------------------", "    // If we get a zero it's the last byte, exit", "    if(elementType == 0) break;", "-----------------------------------", "\t\t// Get the start search index", "\t\tvar i = index;", "-----------------------------------", "\t\t// Locate the end of the c string", "\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t\t// If are at the end of the buffer there is a problem with the document", "\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t\t\t// We have a raw value", "\t\t\tif(raw) ", "-----------------------------------", "\t\t\t// All elements of array to be returned as raw bson", "\t\t\tif(fieldsAsRaw \u0026\u0026 fieldsAsRaw[name]) ", "-----------------------------------", "      // Unpack the low and high bits", "      var lowBits = buffer[index++] | buffer[index++] \u003c\u003c 8 | buffer[index++] \u003c\u003c 16 | buffer[index++] \u003c\u003c 24;", "-----------------------------------", "      // Promote the long if possible", "      if(promoteLongs) ", "-----------------------------------", "      // Decode as raw Buffer object if options specifies it", "      if(buffer['slice'] != null) ", "-----------------------------------", "        // If we have subtype 2 skip the 4 bytes for the size", "        if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // If we have subtype 2 skip the 4 bytes for the size", "        if(subType == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "        // Copy the data", "        for(var i = 0; i \u003c binarySize; i++) ", "-----------------------------------", "      // Update the index", "      index = index + binarySize;", "-----------------------------------", "\t\t\t// Get the start search index", "\t\t\tvar i = index;", "-----------------------------------", "\t\t\t// Locate the end of the c string", "\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t\t\t// If are at the end of the buffer there is a problem with the document", "\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t\t\t// Return the C string", "\t\t\tvar source = buffer.toString('utf8', index, i);", "-----------------------------------", "      // Create the regexp", "\t\t\tindex = i + 1;", "-----------------------------------", "\t\t\t// Get the start search index", "\t\t\tvar i = index;", "-----------------------------------", "\t\t\t// Locate the end of the c string", "\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t\t\t// If are at the end of the buffer there is a problem with the document", "\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t\t\t// Return the C string", "\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);", "-----------------------------------", "      // For each option add the corresponding one for javascript", "      var optionsArray = new Array(regExpOptions.length);", "-----------------------------------", "      // Parse options", "      for(var i = 0; i \u003c regExpOptions.length; i++) ", "-----------------------------------", "\t\t\t// Get the start search index", "\t\t\tvar i = index;", "-----------------------------------", "\t\t\t// Locate the end of the c string", "\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t\t\t// If are at the end of the buffer there is a problem with the document", "\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t\t\t// Return the C string", "\t\t\tvar source = buffer.toString('utf8', index, i);", "-----------------------------------", "\t\t\t// Get the start search index", "\t\t\tvar i = index;", "-----------------------------------", "\t\t\t// Locate the end of the c string", "\t\t\twhile(buffer[i] !== 0x00 \u0026\u0026 i \u003c buffer.length) ", "-----------------------------------", "\t\t\t// If are at the end of the buffer there is a problem with the document", "\t\t\tif(i \u003e= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")", "-----------------------------------", "\t\t\t// Return the C string", "\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);", "-----------------------------------", "      // Set the object", "      object[name] = new BSONRegExp(source, regExpOptions);", "-----------------------------------", "      // If we are evaluating the functions", "      if(evalFunctions) ", "-----------------------------------", "        // If we have cache enabled let's look for the md5 of the function in the cache", "        if(cacheFunctions) ", "-----------------------------------", "          // Got to do this to avoid V8 deoptimizing the call due to finding eval", "          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "      // Update parse index position", "      index = index + stringSize;", "-----------------------------------", "      // Javascript function", "      var functionString = buffer.toString('utf8', index, index + stringSize - 1);", "-----------------------------------", "      // Update parse index position", "      index = index + stringSize;", "-----------------------------------", "      // Parse the element", "\t\t\tvar _index = index;", "-----------------------------------", "      // Decode the size of the object document", "      var objectSize = buffer[index] | buffer[index + 1] \u003c\u003c 8 | buffer[index + 2] \u003c\u003c 16 | buffer[index + 3] \u003c\u003c 24;", "-----------------------------------", "      // Decode the scope object", "      var scopeObject = deserializeObject(buffer, _index, options, false);", "-----------------------------------", "      // Adjust the index", "      index = index + objectSize;", "-----------------------------------", "      // If we are evaluating the functions", "      if(evalFunctions) ", "-----------------------------------", "        // Contains the value we are going to set", "        var value = null;", "-----------------------------------", "        // If we have cache enabled let's look for the md5 of the function in the cache", "        if(cacheFunctions) ", "-----------------------------------", "          // Got to do this to avoid V8 deoptimizing the call due to finding eval", "          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "-----------------------------------", "  // Check if we have a db ref object", "  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "-----------------------------------", "  // Set the object", "  return functionCache[hash].bind(object);", "-----------------------------------", "/**", " * Ensure eval is isolated.", "-----------------------------------", "  // Contains the value we are going to set", "  var value = null;", "-----------------------------------", "  // Eval the function", "  eval(\"value = \" + functionString);", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "module.exports = deserialize", "-----------------------------------"],
		"Functions": ["var deserialize = function(buffer, options, isArray) ", "var deserializeObject = function(buffer, index, options, isArray) ", "      var functionString = buffer.toString('utf8', index, index + stringSize - 1);", "      // If we are evaluating the functions", "        // If we have cache enabled let's look for the md5 of the function in the cache", "          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "          object[name] = isolateEval(functionString);", "        object[name]  = new Code(functionString, });", "      // Javascript function", "      var functionString = buffer.toString('utf8', index, index + stringSize - 1);", "      // If we are evaluating the functions", "        // If we have cache enabled let's look for the md5 of the function in the cache", "          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;", "          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);", "          object[name] = isolateEval(functionString);", "        object[name]  = new Code(functionString, scopeObject);", "var isolateEvalWithHash = function(functionCache, hash, functionString, object) ", "  // Check for cache hit, eval if missing and return cached function", "  if(functionCache[hash] == null) ", "    eval(\"value = \" + functionString);", "    functionCache[hash] = value;", "  return functionCache[hash].bind(object);", "var isolateEval = function(functionString) ", "  // Eval the function", "  eval(\"value = \" + functionString);", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };"],
		"Dependencies": ["../float_parser", "util", "../long", "../double", "../timestamp", "../objectid", "../symbol", "../code", "../min_key", "../max_key", "../db_ref", "../regexp", "../binary"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\parser\\serializer.js",
		"LineCount": 913,
		"CharCount": 29702,
		"Comments": ["\"use strict\"", "-----------------------------------", "// To ensure that 0.4 of node works correctly", "var isDate = function isDate(d) ", "-----------------------------------", "  // Encode String type", "  buffer[index++] = BSON.BSON_DATA_STRING;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes + 1;", "-----------------------------------", "  // Write the string", "  var size = buffer.write(value, index + 4, 'utf8');", "-----------------------------------", "  // Write the size of the string to buffer", "  buffer[index + 3] = (size + 1 \u003e\u003e 24) \u0026 0xff;", "-----------------------------------", "  // Update index", "  index = index + 4 + size;", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0;", "-----------------------------------", "  // We have an integer value", "  if(Math.floor(value) === value \u0026\u0026 value \u003e= BSON.JS_INT_MIN \u0026\u0026 value \u003c= BSON.JS_INT_MAX) ", "-----------------------------------", "    // If the value fits in 32 bits encode as int, if it fits in a double", "    // encode it as a double, otherwise long", "    if(value \u003e= BSON.BSON_INT32_MIN \u0026\u0026 value \u003c= BSON.BSON_INT32_MAX) ", "-----------------------------------", "      // Set int type 32 bits or less", "      buffer[index++] = BSON.BSON_DATA_INT;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes;", "-----------------------------------", "      // Write the int value", "      buffer[index++] = value \u0026 0xff;", "-----------------------------------", "      // Encode as double", "      buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes;", "-----------------------------------", "      // Write float", "      writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "      // Ajust index", "      index = index + 8;", "-----------------------------------", "      // Set long type", "      buffer[index++] = BSON.BSON_DATA_LONG;", "-----------------------------------", "      // Number of written bytes", "      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "      // Encode the name", "      index = index + numberOfWrittenBytes;", "-----------------------------------", "      // Encode low bits", "      buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "      // Encode high bits", "      buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "    // Encode as double", "    buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "    // Number of written bytes", "    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "    // Encode the name", "    index = index + numberOfWrittenBytes;", "-----------------------------------", "    // Write float", "    writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "    // Ajust index", "    index = index + 8;", "-----------------------------------", "  // Set long type", "  buffer[index++] = BSON.BSON_DATA_NULL;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_BOOLEAN;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Encode the boolean value", "  buffer[index++] = value ? 1 : 0;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_DATE;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the date", "  var dateInMilis = Long.fromNumber(value.getTime());", "-----------------------------------", "  // Encode low bits", "  buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "  // Encode high bits", "  buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Adjust the index", "  index = index + buffer.write(value.source, index, 'utf8');", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Write the parameters", "  if(value.global) buffer[index++] = 0x73; // s", "  if(value.ignoreCase) buffer[index++] = 0x69; // i", "  if(value.multiline) buffer[index++] = 0x6d; // m", "  // Add ending zero", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_REGEXP;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Adjust the index", "  index = index + buffer.write(value.pattern, index, 'utf8');", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Write the options", "  index = index + buffer.write(value.options, index, 'utf8');", "-----------------------------------", "  // Add ending zero", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Write the type of either min or max key", "  if(value === null) ", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_OID;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the objectId into the shared buffer", "  buffer.write(value.id, index, 'binary')", "-----------------------------------", "  // Ajust index", "  return index + 12;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Get size of the buffer (current write point)", "  var size = value.length;", "-----------------------------------", "  // Write the size of the string to buffer", "  buffer[index++] = size \u0026 0xff;", "-----------------------------------", "  // Write the default subtype", "  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;", "-----------------------------------", "  // Copy the content form the binary field to the buffer", "  value.copy(buffer, index, 0, size);", "-----------------------------------", "  // Adjust the index", "  index = index + size;", "-----------------------------------", "  // Write the type", "  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write size", "  var size = endIndex - index;", "-----------------------------------", "  // Write the type", "  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the date", "  var lowBits = value.getLowBits();", "-----------------------------------", "  // Encode low bits", "  buffer[index++] = lowBits \u0026 0xff;", "-----------------------------------", "  // Encode high bits", "  buffer[index++] = highBits \u0026 0xff;", "-----------------------------------", "  // Encode as double", "  buffer[index++] = BSON.BSON_DATA_NUMBER;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write float", "  writeIEEE754(buffer, value, index, 'little', 52, 8);", "-----------------------------------", "  // Ajust index", "  index = index + 8;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Function string", "  var functionString = value.toString();", "-----------------------------------", "  // Write the string", "  var size = buffer.write(functionString, index + 4, 'utf8') + 1;", "-----------------------------------", "  // Write the size of the string to buffer", "  buffer[index] = size \u0026 0xff;", "-----------------------------------", "  // Update index", "  index = index + 4 + size - 1;", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0;", "-----------------------------------", "    // Write the type", "    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;", "-----------------------------------", "    // Number of written bytes", "    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "    // Encode the name", "    index = index + numberOfWrittenBytes;", "-----------------------------------", "    // Starting index", "    var startIndex = index;", "-----------------------------------", "    // Serialize the function", "    // Get the function string", "    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();", "-----------------------------------", "    // Index adjustment", "    index = index + 4;", "-----------------------------------", "    // Write string into buffer", "    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;", "-----------------------------------", "    // Write the size of the string to buffer", "    buffer[index] = codeSize \u0026 0xff;", "-----------------------------------", "    // Write end 0", "    buffer[index + 4 + codeSize - 1] = 0;", "-----------------------------------", "    // Write the", "    index = index + codeSize + 4;", "-----------------------------------", "    //", "    // Serialize the scope value", "    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)", "-----------------------------------", "    // Writ the total", "    var totalSize = endIndex - startIndex;", "-----------------------------------", "    // Write the total size of the object", "    buffer[startIndex++] = totalSize \u0026 0xff;", "-----------------------------------", "    // Write trailing zero", "    buffer[index++] = 0;", "-----------------------------------", "    // Number of written bytes", "    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "    // Encode the name", "    index = index + numberOfWrittenBytes;", "-----------------------------------", "    // Function string", "    var functionString = value.code.toString();", "-----------------------------------", "    // Write the string", "    var size = buffer.write(functionString, index + 4, 'utf8') + 1;", "-----------------------------------", "    // Write the size of the string to buffer", "    buffer[index] = size \u0026 0xff;", "-----------------------------------", "    // Update index", "    index = index + 4 + size - 1;", "-----------------------------------", "    // Write zero", "    buffer[index++] = 0;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_BINARY;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Extract the buffer", "  var data = value.value(true);", "-----------------------------------", "  // Calculate size", "  var size = value.position;", "-----------------------------------", "  // Write the size of the string to buffer", "  buffer[index++] = size \u0026 0xff;", "-----------------------------------", "  // Write the subtype to the buffer", "  buffer[index++] = value.sub_type;", "-----------------------------------", "  // If we have binary type 2 the 4 first bytes are the size", "  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) ", "-----------------------------------", "  // Write the data to the object", "  data.copy(buffer, index, 0, value.position);", "-----------------------------------", "  // Adjust the index", "  index = index + value.position;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_SYMBOL;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Write the string", "  var size = buffer.write(value.value, index + 4, 'utf8') + 1;", "-----------------------------------", "  // Write the size of the string to buffer", "  buffer[index] = size \u0026 0xff;", "-----------------------------------", "  // Update index", "  index = index + 4 + size - 1;", "-----------------------------------", "  // Write zero", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Write the type", "  buffer[index++] = BSON.BSON_DATA_OBJECT;", "-----------------------------------", "  // Number of written bytes", "  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');", "-----------------------------------", "  // Encode the name", "  index = index + numberOfWrittenBytes;", "-----------------------------------", "  // Serialize object", "  if(null != value.db) ", "-----------------------------------", "  // Calculate object size", "  var size = endIndex - startIndex;", "-----------------------------------", "  // Write the size", "  buffer[startIndex++] = size \u0026 0xff;", "-----------------------------------", "  // Set index", "  return endIndex;", "-----------------------------------", "  // Start place to serialize into", "  var index = startingIndex + 4;", "-----------------------------------", "  // Special case isArray", "  if(Array.isArray(object)) ", "-----------------------------------", "    // Get object keys", "    for(var i = 0; i \u003c object.length; i++) ", "-----------------------------------", "      // Is there an override value", "      if(value \u0026\u0026 value.toBSON) ", "-----------------------------------", "      // Unpack the next entry", "      var entry = iterator.next();", "-----------------------------------", "      // Are we done, then skip and terminate", "      if(done) continue;", "-----------------------------------", "      // Get the entry values", "      var key = entry.value[0];", "-----------------------------------", "      // Check the type of the value", "      var type = typeof value;", "-----------------------------------", "      // Check the key and throw error if it's illegal", "      if(key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') ", "-----------------------------------", "          // The BSON spec doesn't allow keys with null bytes because keys are", "          // null-terminated.", "          throw Error(\"key \" + key + \" must not contain null bytes\");", "-----------------------------------", "      // console.log(\"---------------------------------------------------\")", "      // console.dir(\"key = \" + key)", "      // console.dir(\"value = \" + value)", "", "      if(type == 'string') ", "-----------------------------------", "    // Did we provide a custom serialization method", "    if(object.toBSON) ", "-----------------------------------", "    // Iterate over all the keys", "    for(var key in object) ", "-----------------------------------", "      // Is there an override value", "      if(value \u0026\u0026 value.toBSON) ", "-----------------------------------", "      // Check the type of the value", "      var type = typeof value;", "-----------------------------------", "      // Check the key and throw error if it's illegal", "      if(key != '$db' \u0026\u0026 key != '$ref' \u0026\u0026 key != '$id') ", "-----------------------------------", "          // The BSON spec doesn't allow keys with null bytes because keys are", "          // null-terminated.", "          throw Error(\"key \" + key + \" must not contain null bytes\");", "-----------------------------------", "  // Final padding byte for object", "  buffer[index++] = 0x00;", "-----------------------------------", "  // Final size", "  var size = index - startingIndex;", "-----------------------------------", "  // Write the size of the object", "  buffer[startingIndex++] = size \u0026 0xff;", "-----------------------------------", "/**", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "-----------------------------------", "/**", " * Number BSON Type", "-----------------------------------", "/**", " * String BSON Type", "-----------------------------------", "/**", " * Object BSON Type", "-----------------------------------", "/**", " * Array BSON Type", "-----------------------------------", "/**", " * Binary BSON Type", "-----------------------------------", "/**", " * ObjectID BSON Type", "-----------------------------------", "/**", " * Boolean BSON Type", "-----------------------------------", "/**", " * Date BSON Type", "-----------------------------------", "/**", " * null BSON Type", "-----------------------------------", "/**", " * RegExp BSON Type", "-----------------------------------", "/**", " * Code BSON Type", "-----------------------------------", "/**", " * Symbol BSON Type", "-----------------------------------", "/**", " * Code with Scope BSON Type", "-----------------------------------", "/**", " * 32 bit Integer BSON Type", "-----------------------------------", "/**", " * Timestamp BSON Type", "-----------------------------------", "/**", " * Long BSON Type", "-----------------------------------", "/**", " * MinKey BSON Type", "-----------------------------------", "/**", " * MaxKey BSON Type", "-----------------------------------", "/**", " * Binary Default Type", "-----------------------------------", "/**", " * Binary Function Type", "-----------------------------------", "/**", " * Binary Byte Array Type", "-----------------------------------", "/**", " * Binary UUID Type", "-----------------------------------", "/**", " * Binary MD5 Type", "-----------------------------------", "/**", " * Binary User Defined Type", "-----------------------------------", "// BSON MAX VALUES", "BSON.BSON_INT32_MAX = 0x7FFFFFFF;", "-----------------------------------", "// JS MAX PRECISE VALUES", "BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.", "BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.", "", "// Internal long versions", "var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.", "var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.", "", "module.exports = serializeInto;", "-----------------------------------"],
		"Functions": ["var isDate = function isDate(d) ", "var isRegExp = function isRegExp(d) ", "var serializeString = function(buffer, key, value, index) ", "var serializeNumber = function(buffer, key, value, index) ", "var serializeUndefined = function(buffer, key, value, index) ", "var serializeBoolean = function(buffer, key, value, index) ", "var serializeDate = function(buffer, key, value, index) ", "var serializeRegExp = function(buffer, key, value, index) ", "var serializeBSONRegExp = function(buffer, key, value, index) ", "var serializeMinMax = function(buffer, key, value, index) ", "var serializeObjectId = function(buffer, key, value, index) ", "var serializeBuffer = function(buffer, key, value, index) ", "var serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) ", "var serializeLong = function(buffer, key, value, index) ", "var serializeDouble = function(buffer, key, value, index) ", "var serializeFunction = function(buffer, key, value, index, checkKeys, depth) ", "  var functionString = value.toString();", "  var size = buffer.write(functionString, index + 4, 'utf8') + 1;", "var serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) ", "    // Serialize the function", "    // Get the function string", "    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();", "    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;", "    var functionString = value.code.toString();", "    var size = buffer.write(functionString, index + 4, 'utf8') + 1;", "var serializeBinary = function(buffer, key, value, index) ", "var serializeSymbol = function(buffer, key, value, index) ", "var serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions) ", "var serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined) ", "        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");", "      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) ", "      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) ", "      if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");", "      if(object != null \u0026\u0026 typeof object != 'object') throw new Error(\"toBSON function did not return an object\");", "        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");", "      } else if(typeof value == 'function' \u0026\u0026 serializeFunctions) ", " * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5", "var functionCache = BSON.functionCache = };"],
		"Dependencies": ["../float_parser", "../float_parser", "../long", "../map", "../double", "../timestamp", "../objectid", "../symbol", "../code", "../regexp", "../min_key", "../max_key", "../db_ref", "../binary"]
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\regexp.js",
		"LineCount": 30,
		"CharCount": 737,
		"Comments": ["/**", " * A class representation of the BSON RegExp type.", "-----------------------------------", "  // Execute", "  this._bsontype = 'BSONRegExp';", "-----------------------------------", "  // Validate options", "  for(var i = 0; i \u003c options.length; i++) ", "-----------------------------------"],
		"Functions": ["function BSONRegExp(pattern, options) "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\symbol.js",
		"LineCount": 47,
		"CharCount": 735,
		"Comments": ["/**", " * A class representation of the BSON Symbol type.", "-----------------------------------", "/**", " * Access the wrapped string value.", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------", "/**", " * @ignore", "-----------------------------------"],
		"Functions": ["function Symbol(value) ", "Symbol.prototype.valueOf = function() ", "Symbol.prototype.toString = function() ", "Symbol.prototype.inspect = function() ", "Symbol.prototype.toJSON = function() "],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\lib\\bson\\timestamp.js",
		"LineCount": 856,
		"CharCount": 23397,
		"Comments": ["// Licensed under the Apache License, Version 2.0 (the \"License\");", "// you may not use this file except in compliance with the License.", "// You may obtain a copy of the License at", "//", "//     http://www.apache.org/licenses/LICENSE-2.0", "//", "// Unless required by applicable law or agreed to in writing, software", "// distributed under the License is distributed on an \"AS IS\" BASIS,", "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "// See the License for the specific language governing permissions and", "// limitations under the License.", "//", "// Copyright 2009 Google Inc. All Rights Reserved", "", "/**", " * This type is for INTERNAL use in MongoDB only and should not be used in applications.", "-----------------------------------", "  /**", "   * @type number}", "-----------------------------------", "  this.low_ = low | 0;  // force into 32 signed bits.", "", "  /**", "   * @type number}", "-----------------------------------", "  this.high_ = high | 0;  // force into 32 signed bits.", "};", "-----------------------------------", "/**", " * Return the int value.", "-----------------------------------", "/**", " * Return the Number value.", "-----------------------------------", "/**", " * Return the JSON value.", "-----------------------------------", "/**", " * Return the String value.", "-----------------------------------", "      // We need to change the Timestamp value before it can be negated, so we remove", "      // the bottom-most digit in this base and then recurse to do the rest.", "      var radixTimestamp = Timestamp.fromNumber(radix);", "-----------------------------------", "  // Do several (6) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));", "-----------------------------------", "/**", " * Return the high 32-bits value.", "-----------------------------------", "/**", " * Return the low 32-bits value.", "-----------------------------------", "/**", " * Return the low unsigned 32-bits value.", "-----------------------------------", "/**", " * Returns the number of bits needed to represent the absolute value of this Timestamp.", "-----------------------------------", "/**", " * Return whether this value is zero.", "-----------------------------------", "/**", " * Return whether this value is negative.", "-----------------------------------", "/**", " * Return whether this value is odd.", "-----------------------------------", "/**", " * Return whether this Timestamp equals the other", "-----------------------------------", "/**", " * Return whether this Timestamp does not equal the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is less than the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is less than or equal to the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is greater than the other.", "-----------------------------------", "/**", " * Return whether this Timestamp is greater than or equal to the other.", "-----------------------------------", "/**", " * Compares this Timestamp with the given one.", "-----------------------------------", "  // at this point, the signs are the same, so subtraction will not overflow", "  if (this.subtract(other).isNegative()) ", "-----------------------------------", "/**", " * The negation of this value.", "-----------------------------------", "/**", " * Returns the sum of this and the given Timestamp.", "-----------------------------------", "  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns the difference of this and the given Timestamp.", "-----------------------------------", "/**", " * Returns the product of this and the given Timestamp.", "-----------------------------------", "  // If both Timestamps are small, use float multiplication", "  if (this.lessThan(Timestamp.TWO_PWR_24_) \u0026\u0026", "-----------------------------------", "  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.", "  // We can skip products that would overflow.", "", "  var a48 = this.high_ \u003e\u003e\u003e 16;", "-----------------------------------", "/**", " * Returns this Timestamp divided by the given one.", "-----------------------------------", "      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE", "    } else if (other.equals(Timestamp.MIN_VALUE)) ", "-----------------------------------", "      // At this point, we have |other| \u003e= 2, so |this/other| \u003c |MIN_VALUE|.", "      var halfThis = this.shiftRight(1);", "-----------------------------------", "  // Repeat the following until the remainder is less than other:  find a", "  // floating-point that approximates remainder / other *from below*, add this", "  // into the result, and subtract it from the remainder.  It is critical that", "  // the approximate value is less than or equal to the real value so that the", "  // remainder never becomes negative.", "  var res = Timestamp.ZERO;", "-----------------------------------", "    // Approximate the result of division. This may be a little greater or", "    // smaller than the actual value.", "    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));", "-----------------------------------", "    // We will tweak the approximate result by changing it in the 48-th digit or", "    // the smallest non-fractional digit, whichever is larger.", "    var log2 = Math.ceil(Math.log(approx) / Math.LN2);", "-----------------------------------", "    // Decrease the approximation until it is smaller than the remainder.  Note", "    // that if it is too large, the product overflows and is negative.", "    var approxRes = Timestamp.fromNumber(approx);", "-----------------------------------", "    // We know the answer can't be zero... and actually, zero would cause", "    // infinite recursion since we would make no progress.", "    if (approxRes.isZero()) ", "-----------------------------------", "/**", " * Returns this Timestamp modulo the given one.", "-----------------------------------", "/**", " * The bitwise-NOT of this value.", "-----------------------------------", "/**", " * Returns the bitwise-AND of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-OR of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns the bitwise-XOR of this Timestamp and the given one.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the left by the given amount.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the right by the given amount.", "-----------------------------------", "/**", " * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.", "-----------------------------------", "/**", " * Returns a Timestamp representing the given (32-bit) integer value.", "-----------------------------------", "/**", " * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.", "-----------------------------------", "/**", " * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.", "-----------------------------------", "/**", " * Returns a Timestamp representation of the given string, written using the given radix.", "-----------------------------------", "  // Do several (8) digits each time through the loop, so as to", "  // minimize the calls to the very expensive emulated div.", "  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));", "-----------------------------------", "// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the", "// from* methods on which they depend.", "", "", "/**", " * A cache of the Timestamp representations of small integer values.", "-----------------------------------", "// NOTE: the compiler should inline these constant values below and then remove", "// these variables, so there should be no runtime penalty for these.", "", "/**", " * Number used repeated below in calculations.  This must appear before the", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/**", " * @type number}", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.ZERO = Timestamp.fromInt(0);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.ONE = Timestamp.fromInt(1);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.NEG_ONE = Timestamp.fromInt(-1);", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.MAX_VALUE =", "-----------------------------------", "/** @type {Timestamp} */", "Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);", "-----------------------------------", "/**", " * @type Timestamp}", "-----------------------------------", "/**", " * Expose.", "-----------------------------------"],
		"Functions": [" * values as *signed* integers.  See the from* functions below for more", "function Timestamp(low, high) ", "Timestamp.prototype.toInt = function() ", "Timestamp.prototype.toNumber = function() ", "Timestamp.prototype.toJSON = function() ", "Timestamp.prototype.toString = function(opt_radix) ", "Timestamp.prototype.getHighBits = function() ", "Timestamp.prototype.getLowBits = function() ", "Timestamp.prototype.getLowBitsUnsigned = function() ", "Timestamp.prototype.getNumBitsAbs = function() ", "Timestamp.prototype.isZero = function() ", "Timestamp.prototype.isNegative = function() ", "Timestamp.prototype.isOdd = function() ", "Timestamp.prototype.equals = function(other) ", "Timestamp.prototype.notEquals = function(other) ", "Timestamp.prototype.lessThan = function(other) ", "Timestamp.prototype.lessThanOrEqual = function(other) ", "Timestamp.prototype.greaterThan = function(other) ", "Timestamp.prototype.greaterThanOrEqual = function(other) ", "Timestamp.prototype.compare = function(other) ", "Timestamp.prototype.negate = function() ", "Timestamp.prototype.add = function(other) ", "Timestamp.prototype.subtract = function(other) ", "Timestamp.prototype.multiply = function(other) ", "Timestamp.prototype.div = function(other) ", "Timestamp.prototype.modulo = function(other) ", "Timestamp.prototype.not = function() ", "Timestamp.prototype.and = function(other) ", "Timestamp.prototype.or = function(other) ", "Timestamp.prototype.xor = function(other) ", "Timestamp.prototype.shiftLeft = function(numBits) ", "Timestamp.prototype.shiftRight = function(numBits) ", "Timestamp.prototype.shiftRightUnsigned = function(numBits) ", "Timestamp.fromInt = function(value) ", "Timestamp.fromNumber = function(value) ", "Timestamp.fromBits = function(lowBits, highBits) ", "Timestamp.fromString = function(str, opt_radix) ", " * first call to any from* function below."],
		"Dependencies": null
	}, {
		"FileName": "node_modules\\bson\\tools\\gleak.js",
		"LineCount": 22,
		"CharCount": 641,
		"Comments": ["", "var gleak = require('gleak')();", "-----------------------------------"],
		"Functions": null,
		"Dependencies": ["gleak"]
	}, {
		"FileName": "node_modules\\bytes\\index.js",
		"LineCount": 158,
		"CharCount": 3208,
		"Comments": ["/*!", "-----------------------------------", "/**", " * Module exports.", "-----------------------------------", "/**", " * Module variables.", "-----------------------------------", "// TODO: use is-finite module?", "var numberIsFinite = Number.isFinite || function (v)  return typeof v === 'number' \u0026\u0026 isFinite(v); };", "-----------------------------------", "/**", " * Convert the given value in bytes into a string or parse to string to an integer in bytes.", "-----------------------------------", "/**", " * Format the given value in bytes into a string.", "-----------------------------------", "/**", " * Parse the string value into an integer in bytes.", "-----------------------------------", "  // Test if the string passed is valid", "  var results = parseRegExp.exec(val);", "-----------------------------------", "    // Nothing could be extracted from the given string", "    floatValue = parseInt(val, 10);", "-----------------------------------", "    // Retrieve the value and the unit", "    floatValue = parseFloat(results[1]);", "-----------------------------------"],
		"Functions": ["var numberIsFinite = Number.isFinite || function (v)  return typeof v === 'number' \u0026\u0026 isFinite(v); };", "function bytes(value, options) ", "function format(value, options) ", "function parse(val) "],
		"Dependencies": null
	}]
}